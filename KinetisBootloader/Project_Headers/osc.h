/**
 * @file     osc.h (180.ARM_Peripherals/Project_Headers/osc.h)
 * @brief    Oscillator interface
 *
 * @version  V4.12.1.80
 * @date     13 April 2016
 */

#ifndef HEADER_OSC_H
#define HEADER_OSC_H
 /*
 * *****************************
 * *** DO NOT EDIT THIS FILE ***
 * *****************************
 *
 * This file is generated automatically.
 * Any manual changes will be lost.
 */
#include "hardware.h"

namespace USBDM {
/**
 * @addtogroup OSC_Group OSC, Crystal Oscillator
 * @brief Abstraction for Crystal Oscillator
 * @{
 */

/**
 * Template class providing interface to Oscillator
 *
 * @tparam info      Information class for OSC
 *
 * @code
 * using osc = OscBase_T<OscInfo>;
 *
 *  osc::configure();
 *
 * @endcode
 */
template <class Info>
class OscBase_T {

protected:
   /** Hardware instance */
   static __attribute__((always_inline)) volatile OSC_Type &osc() { return Info::osc(); }

public:
   /**
    * Configures all mapped pins associated with this peripheral
    */
   static void __attribute__((always_inline)) configureAllPins() {
      // Configure pins
      Info::initPCRs();
   }

   /**
    * Initialise OSC to default settings.
    * Configures all OSC pins
    */
   static void defaultConfigure() {
      if (Info::mapPinsOnEnable) {
         configureAllPins();
      }
      // Configure OSC
      Info::osc().CR  = Info::cr;
   }

   /**
    * Set up the OSC out of reset.
    */
   static void initialise() {
      defaultConfigure();
   }

};

#ifdef USBDM_OSC0_IS_DEFINED
/**
 * Class providing interface to Oscillator
 */
class Osc0 : public OscBase_T<Osc0Info> {};
#endif

#ifdef USBDM_OSC1_IS_DEFINED
/**
 * Class providing interface to Oscillator 1
 */
class Osc1 : public OscBase_T<Osc1Info> {};
#endif

/**
 * End OSC_Group
 * @}
 */
} // End namespace USBDM

#endif /* HEADER_OSC_H */
