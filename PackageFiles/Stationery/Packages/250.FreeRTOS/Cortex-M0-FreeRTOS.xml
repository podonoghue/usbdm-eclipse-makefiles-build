<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE root SYSTEM "../package.dtd">

<root version="1.0">
   <!-- Cortex-M0 FreeRTOS RTOS -->
   <projectActionList id="Cortex-M0-FreeRTOS" >
      <applyWhen>
         <and>
	    <or>
               <deviceFamilyIs>CortexM0</deviceFamilyIs>
               <deviceFamilyIs>CortexM0plus</deviceFamilyIs>
	    </or>
            <variableRef idRef="linkerRamSize"   condition="greaterThan" value="2048" />
            <variableRef idRef="linkerFlashSize" condition="greaterThan" value="4096" />
            <variableRef idRef="outputType"      condition="matches"     value=".*ProjectType\.exe$" />
         </and>
      </applyWhen>
      <variable id="projectOptionValue.FreeRTOS" 
         name="FreeRTOS" 
         description="Adds FreeRTOS framework for Cortex M0" 
         checkGroup="group-additional-options" />
      
      <projectActionList id="FreeRTOS-base">
         <applyWhen>
            <variableRef idRef="projectOptionValue.FreeRTOS" />
         </applyWhen>
         <constant id="FreeRTOS.stack.size"   value="100" />

         <copy source="Sources/FreeRTOSConfig.cfg"   target="Sources/FreeRTOSConfig.cfg" />
	 
         <copy source="Startup_Code/FreeRtosStubs.c" target="Startup_Code/FreeRtosStubs.c" overwrite="true"  derived="true" />
         <copy source="${usbdm_resource_path}/Stationery/Packages/FreeRTOS/FreeRTOS_Reference_Manual_V10.0.0.pdf" target="FreeRTOS.pdf" type="link" sourcePathType="absolute"/>

         <createFolder target="FreeRTOS" />
         <copy source="FreeRTOS/FreeRTOSConfig.h"                               target="FreeRTOS/FreeRTOSConfig.h"  derived="true" />
         <copy source="../FreeRTOS/license.txt"                                 target="FreeRTOS/FreeRTOS_license.txt"  derived="true" macroReplace="false" />
         <copy source="../FreeRTOS/Source"                                      target="FreeRTOS/Source"  derived="true" macroReplace="false" />
         <copy source="../FreeRTOS/Source/portable/GCC/ARM_CM0/port.c"          target="FreeRTOS/Source/port.c"  derived="true" macroReplace="false" />
         <copy source="../FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"     target="FreeRTOS/Source/portmacro.h"  derived="true" macroReplace="false" />

         <copy source="Snippets/FreeRTOS-queue-1P1C-example.cpp"           target="Snippets/FreeRTOS-queue-1P1C-example.cpp"         overwrite="true" />
         <copy source="Snippets/FreeRTOS-semaphore-1P1C-example.cpp"       target="Snippets/FreeRTOS-semaphore-1P1C-example.cpp"     overwrite="true" />
         <copy source="Snippets/FreeRTOS-queue-pointer-1P1C-example.cpp"   target="Snippets/FreeRTOS-queue-pointer-1P1C-example.cpp" overwrite="true" />
         
         <excludeSourceFolder target="FreeRTOS/Source/portable" />
         <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.include.paths">
            <value>&quot;../FreeRTOS/Source/include&quot;</value>
            <value>&quot;../FreeRTOS/Source&quot;</value>
            <value>&quot;../FreeRTOS&quot;</value>
         </projectOption>
         <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.include.paths">
            <value>&quot;../FreeRTOS/Source/include&quot;</value>
            <value>&quot;../FreeRTOS/Source&quot;</value>
            <value>&quot;../FreeRTOS&quot;</value>
         </projectOption>
         <projectOption id="net.sourceforge.usbdm.gnu.c.compiler.option.preprocessor.def.symbols">
            <value>__CORTEX_M0plus</value>
            <value>__FREE_RTOS</value>
         </projectOption>
         <projectOption id="net.sourceforge.usbdm.gnu.cpp.compiler.option.preprocessor.def.symbols">
            <value>__CORTEX_M0plus</value>
            <value>__FREE_RTOS</value>
         </projectOption>
      </projectActionList>
      
      <projectActionList id="FreeRTOS-noCppLibrary">
         <applyWhen>
            <and>
               <variableRef      idRef="projectOptionValue.FreeRTOS"         defaultValue="false" />
               <not><variableRef idRef="projectOptionValue.CPP-abstraction"  defaultValue="false" /></not>
            </and>
         </applyWhen>
         <!-- Default RTOS C main -->
         <projectActionList>
            <applyWhen>
               <not><variableRef idRef="hasCCNature" condition="isTrue" /></not>
            </applyWhen>
            <copy source="Sources/main.c" target="Sources/main.c" overwrite="true" />
         </projectActionList>
      </projectActionList>
      
      <!-- CPP-abstraction RTOS files -->
      <projectActionList id="FreeRTOS-Cpp-abstraction">
         <applyWhen>
            <and>
               <variableRef idRef="projectOptionValue.FreeRTOS" />
               <variableRef idRef="projectOptionValue.CPP-abstraction"  defaultValue="false" />
            </and>
         </applyWhen>
         <copy source="FreeRTOS/FreeRTOS_CPP.h" target="FreeRTOS/FreeRTOS_CPP.h"          overwrite="true"  derived="true" />
         <copy source="FreeRTOS/Lock.h"         target="FreeRTOS/Lock.h"                  overwrite="true"  derived="true" />
         <copy source="FreeRTOS/Lock.cpp"       target="FreeRTOS/Lock.cpp"                overwrite="true"  derived="true" />
         <copy source="FreeRTOS/MutexCPP.h"     target="FreeRTOS/MutexCPP.h"              overwrite="true"  derived="true" />
         <copy source="FreeRTOS/QueueCPP.h"     target="FreeRTOS/QueueCPP.h"              overwrite="true"  derived="true" />
         <copy source="FreeRTOS/SemaphoreCPP.h" target="FreeRTOS/SemaphoreCPP.h"          overwrite="true"  derived="true" />
         <copy source="FreeRTOS/TaskCPP.h"      target="FreeRTOS/TaskCPP.h"               overwrite="true"  derived="true" />
         <copy source="FreeRTOS/TimerCPP.h"     target="FreeRTOS/TimerCPP.h"              overwrite="true"  derived="true" />
         <copy source="FreeRTOS/License.txt"    target="FreeRTOS/FreeRTOSCpp_License.txt" overwrite="true"  derived="true" />
	 
         <copy source="Sources/main.cpp"        target="Sources/main.cpp"                 overwrite="true" />
         
         <copy source="Snippets/FreeRTOS-cpp-flasher-example.cpp"            target="Snippets/FreeRTOS-cpp-flasher-example.cpp"           overwrite="true" />
         <copy source="Snippets/FreeRTOS-cpp-producer-consumer-example.cpp"  target="Snippets/FreeRTOS-cpp-producer-consumer-example.cpp" overwrite="true" />         
         <copy source="Snippets/FreeRTOS-cpp-task-example.cpp"               target="Snippets/FreeRTOS-cpp-task-example.cpp"              overwrite="true" />
      </projectActionList>
      
   </projectActionList>

</root>
