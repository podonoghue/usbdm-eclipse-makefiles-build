<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- can1_flex_s32k14x.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="FlexCAN">

   <xi:include href="_default_instance.xml"/>
   
   <xi:include href="_mapPinsOption.xml"/>
   
   <!-- Note: second entry gets the tick irrespective of true/false value -->
   <binaryOption name="EnableFifo" 
      description="Enable Receive FIFO"
      toolTip="This option enables use of the receive FIFO in addition to the individual mailboxes.\n
               The maximum number of individual mailboxes is reduced.">
      <choice value="0" name="Disabled" />
      <choice value="1" name="Enabled"  isDefault="true" />
   </binaryOption>

   <intOption name="MaxNumberOfMessageBuffers" 
      description="Maximum number of message buffers available"
      toolTip="This is the maximum value determined by the hardware.\n
               The CAN memory is shared between the FIFO filters and message buffers so\n
               the actual number available will be reduced by use of the FIFO and FIFO filters"  
      constant="true" 
      value="16" />

   <intOption name="MaxNumberOfFifoMessageFilters" 
      description="Maximum number of FIFO message filters available"
      toolTip="This is the maximum value determined by the hardware.\n
               The CAN memory is shared between the FIFO filters and message buffers\n
	       so a usable number will be less than this."  
      constant="true" 
      value="40" />

   <intOption name="NumberOfFifoMessageFilters" 
      description="Number of filters for FIFO"
      toolTip="Used to configure number of FIFO filters"
      value="16" step="8" min="0" max="40" />

   <intOption name="NumberOfIndividualMailboxes" 
      description="Number of individual Rx/Tx mailboxes"
      toolTip="Used to configure number individually allocated mailboxes"
      value="8" min="0" max="16" />

   <template><![CDATA[
       \t//! Whether FIFO is enable
       \tstatic constexpr bool EnableFifo     =  $(EnableFifo);
       
       \t//! Maximum number of Message Buffers
       \tstatic constexpr unsigned MaxNumberOfMessageBuffers     =  $(MaxNumberOfMessageBuffers);
       
       \t//! Maximum number of Message Filters
       \tstatic constexpr unsigned MaxNumberOfFifoMessageFilters =  $(EnableFifo)?$(MaxNumberOfFifoMessageFilters):0;
       
       \t//! Number of Mailbox Buffers
       \tstatic constexpr unsigned NumberOfIndividualMailboxes   =  $(NumberOfIndividualMailboxes);
       
       \t//! Number of FIFO Message Filters
       \tstatic constexpr unsigned NumberOfFifoMessageFilters    =  $(EnableFifo)?$(NumberOfFifoMessageFilters):0;\n\n
   ]]></template>

   <template><![CDATA[
      \t//! IRQ numbers for hardware
      \tstatic constexpr IRQn_Type irqNums[]  = $(_name)_IRQS;
   
      \t//! Number of IRQs for hardware
      \tstatic constexpr uint32_t irqCount  = sizeof(irqNums)/sizeof(irqNums[0]);\n\n
   ]]></template>

   <!--
   Patterns for pattern and classHandler 
     -  %i replaced with peripheral instance e.g. FTM1 => 1, PTA => A
     -  %b replaced with peripheral base name e.g. FTM1 => = FTM
     -  %c replaced with peripheral C++ base class name e.g. FTM1 => = Ftm
     -  _IRQHandler is appended to the pattern (only)
   -->
   <irqOption name="miscellaneousIrqHandlingMethod"  
      description="Miscellaneous Interrupt handlers"
      toolTip="This selection allow the interrupt handler for this peripheral to be installed using several different methods\n
               Handles: Bus Off, Bus Off Done, Transmit and Receive Warning, Transmit and Receive Error count transition"
      pattern="^%b%i_ORed$" 
      classHandler="%c%i::irqHandler" />

   <irqOption name="errorIrqHandlingMethod"  
      description="Error Interrupt handlers"
      toolTip="This selection allow the interrupt handler for this peripheral to be installed using several different methods\n
               Handles: Bus Error and Bus Error for Fast FD message"
      pattern="^%b%i_Error$" 
      classHandler="%c%i::errorIrqHandler" />

   <irqOption name="wakeupIrqHandlingMethod"  
      description="Wakeup Interrupt handlers"
      toolTip="This selection allow the interrupt handler for this peripheral to be installed using several different methods\n
               Handles: Wakeup (pretend networking) and Sleep (pretend networking)"
      pattern="^%b%i_WakeUp$" 
      classHandler="%c%i::wakeupIrqHandler" />

   <irqOption name="messagebufferIrqHandlingMethod"  
      description="Message Buffer Interrupt handlers"
      toolTip="This selection allow the interrupt handler for this peripheral to be installed using several different methods\n
               Handles: Message buffer events (FIFO and Mailboxes)"
      pattern="^%b%i_MessageBuffer.*$" 
      classHandler="%c%i::messageBufferIrqHandler" />

   <signals/>
   
   
   <!-- Template is added to class within pin_mapping.h -->
   <template><![CDATA[
       \t//! Class based callback handler has been installed in vector table
       \tstatic constexpr bool irqHandlerInstalled = $(messagebufferIrqHandlingMethod);
       
       \tstatic constexpr int Miscellaneous_IrqNumIndex       = 0;
       \tstatic constexpr int Error_IrqNumIndex               = 1;
       \tstatic constexpr int Wakeup_IrqNumIndex              = -1;
       \tstatic constexpr int MessageBuffer_0_15_IrqNumIndex  = 2;
       \tstatic constexpr int MessageBuffer_16_32_IrqNumIndex = -1;\n\n
   ]]></template>
       
   <intOption name="irqLevel" 
      description="IRQ Level in NVIC [0-15]"
      toolTip="Sets the priority level used to configure the NVIC\n
               Lower numbers represent higher priorities"
      value="8" min="0" max="15" 
   />
   
      <template namespace="usbdm"><![CDATA[
      #ifndef USBDM_CAN1_IS_DEFINED
         \t/**
         \t * FlexCAN Clock sources
         \t */
         \tenum CanClockSource {
         \t   CanClockSource_0 = false,
         \t   CanClockSource_1 = true,
         \t   CanClockSource_SoscDiv2clk = CanClockSource_0,
         \t   CanClockSource_CoreClock   = CanClockSource_1,
         \t   CanClockSource_Default     = CanClockSource_0,
         \t};
      #endif\n\n
      ]]></template>
      
   <template><![CDATA[
      \t/**
      \t * Get Controller Host Interface input clock frequency
      \t *
      \t * @return Input clock frequency as a uint32_t in Hz
      \t */
      \tstatic uint32_t getChiClockFrequency() {
      \t   return SystemCoreClock;
      \t}\n\n
   ]]></template>

   <template><![CDATA[
      \t/**
      \t * Get Protocol Engine input clock frequency
      \t *
      \t * @param clksrc value for CAN_CTRL1_CLKSRC
      \t *
      \t * @return CAN input clock frequency as a uint32_t in Hz
      \t */
      \tstatic uint32_t getPeClockFrequency(CanClockSource clksrc) {
      \t   if (clksrc) {
      \t      return SystemCoreClock;
      \t   }
      \t   else {
      \t      return ScgInfo::getSoscDiv2Frequency();
      \t   }
      \t}\n\n
      
      \t/**
      \t * Get Protocol Engine input clock frequency
      \t *
      \t * @return CAN input clock frequency as a uint32_t in Hz
      \t */
      \tstatic uint32_t getPeClockFrequency() {
      \t    return getPeClockFrequency((CanClockSource)(can().CTRL1 & CAN_CTRL1_CLKSRC_MASK));
      \t}\n\n
   ]]></template>

   <template><![CDATA[
       \t//! Default IRQ level
       \tstatic constexpr uint32_t irqLevel =  $(irqLevel);\n\n
   ]]></template>

   <xi:include href="_clockOption.xml"/>
      
   <projectActionList id = "can_files" >
      <copy source="Project_Headers/can.h"                    target="Project_Headers/can.h"                    overwrite="true"  derived="true" />
      <copy source="Snippets/can-mailbox-example.cpp"         target="Snippets/can-mailbox-example.cpp"         overwrite="true"  derived="true" />
      <copy source="Snippets/can-sw-led-example.cpp"          target="Snippets/can-sw-led-example.cpp"          overwrite="true"  derived="true" />
      <copy source="Snippets/can-fifo-example.cpp"            target="Snippets/can-fifo-example.cpp"            overwrite="true"  derived="true" />
   </projectActionList>
   
</peripheralPage>
