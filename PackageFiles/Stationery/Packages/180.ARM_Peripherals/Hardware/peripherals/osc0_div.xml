<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >

<!-- 
      Predefined symbols generated for current peripheral
      _base_class FTM0 => Ftm
      _instance   FTM0 => 0
      _class      FTM0 => Ftm0
      _name       FTM0 => FTM0
 -->

<!-- osc0_div.xml -->
<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="Oscillator" >

   <xi:include href="_default_instance.xml"/>

   <xi:include href="_mapPinsOption_on.xml"/>

   <intOption name="osc_input_freq"
      units="Hz"
      description="Frequency of External Crystal or Clock"
      toolTip="Frequency of external crystal or clock on XTAL/EXTAL"
      value="8000000" />

   <aliasOption key="/MCG/mcg_c2_erefs0" constant="false" />

   <binaryOption name="osc_cr_erclken"
      description="External Reference Enable"
      toolTip="Enables and makes available the clock as OSCERCLK peripheral clock source\n
      The oscillator will also be enabled if used by MCG">
      <choice value="0" name="Disabled" />
      <choice value="1" name="Enabled" isDefault="true" />
   </binaryOption>
   
   <intOption name="osc_clock"
      constant="true"
      derived="true"
      units="Hz"
      description="Frequency of OSC Clock or Crystal [OSCCLK]"
      toolTip="Frequency of oscillator or external clock"
      value="8000000"
      disabledValue="0" />

   <choiceOption name="oscillatorRange"
      derived="true"
      constant="true"
      description="Frequency Range Select"
      toolTip="This range value is determined from the Oscillator frequency.\n
      It some cases it will be unused and a range value suited to the FLL is used instead.">
      <choice value="0" name="Low range" />
      <choice value="1" name="High range" />
      <choice value="2" name="Very High range" />
      <choice value="0" name="Unconstrained by Oscillator" />
   </choiceOption>

   <aliasOption key="/MCG/mcg_c2_hgo0" constant="false" />
   
   <choiceOption name="osc_cr_scp"
      description="Oscillator load capacitance"
      toolTip="Configures the oscillator load capacitance" >
      <choice value="0"  name="0 pF" />
      <choice value="8"  name="2 pF" />
      <choice value="4"  name="4 pF" />
      <choice value="12" name="6 pF" />
      <choice value="2"  name="8 pF" isDefault="true" />
      <choice value="10" name="10 pF" />
      <choice value="6"  name="12 pF" />
      <choice value="14" name="14 pF" />
      <choice value="1"  name="16 pF" />
      <choice value="9"  name="18 pF" />
      <choice value="5"  name="20 pF" />
      <choice value="13" name="22 pF" />
      <choice value="3"  name="24 pF" />
      <choice value="11" name="26 pF" />
      <choice value="7"  name="28 pF" />
      <choice value="15" name="30 pF" />
   </choiceOption>

   <binaryOption name="osc_cr_erefsten"
      description="External Reference Stop Enable"
      toolTip="Determines if external reference clock is enabled in Stop mode" >
      <choice value="0" name="Disabled in Stop mode" />
      <choice value="1" name="Enabled in Stop mode" />
   </binaryOption>
   
   <intOption name="oscer_undiv_clock"
      units="Hz"
      description="Oscillator clock to some peripherals [OSCERCLK_UNDIV]"
      toolTip="Generated from OSCCLK without division"
      value="8000000"  
      constant="true" 
      disabledValue="0" />

   <choiceOption name="osc_div_erps"
      description="ERCLK prescaler"
      toolTip="Divides down the ERCLK output" >
      <choice value="0"  name="Divide by 1" isDefault="true" />
      <choice value="1"  name="Divide by 2" />
      <choice value="2"  name="Divide by 4" />
      <choice value="3"  name="Divide by 8" />
   </choiceOption>
 
   <intOption name="oscer_clock"
         derived="true"
         units="Hz"
         description="Oscillator clock [OSCERCLK]"
         toolTip="Clock available to some peripherals"
         origin="OSC0 gated by ERCLKEN"
         value="8000000"
         disabledValue="0"  
         constant="true" />

   <intOption name="osc32k_clock"
         derived="true"
         units="Hz"
         description="Oscillator low range 32K clock [OSC32KCLK]"
         toolTip="Generated from OSCCLK in low frequency mode only."
         origin="OSC0 in low frequency mode"
         value="8000000"
         disabledValue="0"  
         constant="true" />

   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.OscValidate">
   </validate>

   <projectActionList id = "osc_files" >
      <copy source="Project_Headers/osc.h"  target="Project_Headers/osc.h"  overwrite="true"  derived="true" />
   </projectActionList>
         
   <template><![CDATA[
      \t//! Frequency of OSC Clock or Crystal
      \tstatic constexpr uint32_t osc_clock = $(osc_clock)UL;
      
      \t//! Frequency of 32K OSC Clock or Crystal (if applicable)
      \tstatic constexpr uint32_t osc32k_clock = $(osc32k_clock)UL;
      
      \t//! Oscillator control register
      \tstatic constexpr uint32_t cr =
      \t   OSC_CR_ERCLKEN($(osc_cr_erclken))  | // External Reference Enable
      \t   OSC_CR_EREFSTEN($(osc_cr_erefsten)) | // External Reference Stop Enable
      \t   OSC_CR_SCP($(osc_cr_scp));       // Oscillator load capacitance

      \t//! OSC Clock divider register
      \tstatic constexpr uint32_t div =
      \t   OSC_DIV_ERPS($(osc_div_erps));   // ERCLK prescaler
      
      \t/**
      \t * Get OSC clock (internal, assumed available)
      \t *
      \t * @return Clock frequency as uint32_t in Hz
      \t */
      \tstatic constexpr uint32_t getOscClock() {
      \t   return osc_clock;
      \t}
      
      \t/**
      \t * Get OSC clock (external, gated by OSC_CR_ERCLKEN)
      \t *
      \t * @return Clock frequency as uint32_t in Hz
      \t */
      \tstatic uint32_t getOscerClock() {
      \t   return (osc->CR&OSC_CR_ERCLKEN_MASK)?
      \t      (osc_clock/(1<<((osc->DIV&OSC_DIV_ERPS_MASK)>>OSC_DIV_ERPS_SHIFT))):
      \t      0;
      \t}
      
      \t/**
      \t * Get OSC32KCLK clock
      \t *
      \t * @return Clock frequency as uint32_t in Hz
      \t
      \t * @note This clock is only available if a 32kHz crystal or external clock is used 
      \t */
      \tstatic uint32_t getOsc32kClock() {
      \t   return osc32k_clock;
      \t}\n\n
   ]]></template>

   <template name="/OSC/declarations" namespace="all"  ><![CDATA[
   \t/**
   \t * Class representing $(_name)
   \t */
   \tclass $(_class) : public $(_base_class)Base_T<$(_class)Info> {};\n
   ]]></template>
      
   <signals />
</peripheralPage>
