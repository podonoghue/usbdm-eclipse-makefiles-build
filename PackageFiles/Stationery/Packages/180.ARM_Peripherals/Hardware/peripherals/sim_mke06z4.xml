<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- sim_mke06z4.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="System Integration Module">

   <xi:include href="_default_instance.xml"/>

   <xi:include href="_simCommon.xml"/>

   <xi:include href="_mapPinsOption.xml"/>

   <intOption key="sim_sopt0_delay" condition="sim_sopt0_delay_present"
      description="FTM2 Trigger Delay"
      toolTip="Specifies the delay from FTM2 initial or match trigger to ADC hardware trigger when 1 is written to ADHWT.\n
               The 8-bit modulo value allows the delay from 0 to 255 upon the BUSREF clock settings.\n
               This is a one-shot counter that starts ticking when the trigger arrives and stops ticking when the counter value reaches the modulo value that is defined"
   />

   <choiceOption key="sim_sopt0_adhwt" condition="sim_sopt0_adhwt_present"
      enumStem="SimSopt0Adhwt"
      toolTip="Selects the ADC hardware trigger source. All trigger sources start ADC conversion on rising-edge"
      description="ADC Hardware Trigger Source" >
      <choice name="RTC overflow"                         value="0" enum="RtcOverflow"/>
      <choice name="FTM0"                                 value="1" enum="Ftm0"/>
      <choice name="FTM2 init trigger with 8-bit delay"   value="2" enum="Ftm2InitTriggerWith8BitDelay"/>
      <choice name="FTM2 match trigger with 8-bit delay"  value="3" enum="Ftm2MatchTriggerWith8BitDelay"/>
      <choice name="PIT channel 0 overflow"               value="4" enum="PitChannel0Overflow"/>
      <choice name="PIT channel 1 overflow"               value="5" enum="PitChannel1Overflow"/>
      <choice name="ACMP0 OUT"                            value="6" enum="Acmp0_out"/>
      <choice name="ACMP1 OUT"                            value="7" enum="Acmp1_out"/>
   </choiceOption>

   <binaryOption key="sim_sopt0_clkoe" condition="sim_sopt0_clkoe_present"
      enumStem="SimSopt0Clkoe"
      toolTip="Enables bus clock output on PTH2"
      description="Bus Clock Output Enable" >
      <choice name="Disabled"           value="0" enum="Disabled"/>
      <choice name="Bus clock on PTH2"  value="1" enum="BusClockOnPth2"/>
   </binaryOption>

   <choiceOption key="sim_sopt0_busref" condition="sim_sopt0_busref_present"
      enumStem="SimSopt0Busref"
      toolTip="Prescaler for bus clock output on PTH2"
      description="BUS Clock Output select" >
      <choice name="Bus clock"                 value="0" enum="BusClock"/>
      <choice name="Bus clock divided by 2"    value="1" enum="BusClockDividedBy2"/>
      <choice name="Bus clock divided by 4"    value="2" enum="BusClockDividedBy4"/>
      <choice name="Bus clock divided by 8"    value="3" enum="BusClockDividedBy8"/>
      <choice name="Bus clock divided by 16"   value="4" enum="BusClockDividedBy16"/>
      <choice name="Bus clock divided by 32"   value="5" enum="BusClockDividedBy32"/>
      <choice name="Bus clock divided by 64"   value="6" enum="BusClockDividedBy64"/>
      <choice name="Bus clock divided by 128"  value="7" enum="BusClockDividedBy128"/>
   </choiceOption>

   <binaryOption key="sim_sopt0_txdme" condition="sim_sopt0_txdme_present"
      enumStem="SimSopt0Txdme"
      toolTip="Enables the UART0_TX output modulated by FTM0 channel 0"
      description="UART0_TX Modulation Select" >
      <choice name="UART0_TX directly connected to pin"  value="0" enum="Uart0_txDirectlyConnectedToPin"/>
      <choice name="UART0_TX modulated by FTM0 channel"  value="1" enum="Uart0_txModulatedByFtm0Channel"/>
   </binaryOption>

   <binaryOption key="sim_sopt0_ftmsync" condition="sim_sopt0_ftmsync_present"
      enumStem="SimSopt0Ftmsync"
      toolTip="Generates a PWM synchronisation trigger to the FTM2 module"
      description="FTM2 Synchronisation Select" >
      <choice name="No trigger"                               value="0" enum="NoTrigger"/>
      <choice name="Generates a PWM synchronisation trigger"  value="1" enum="GeneratesAPwmSynchronisationTrigger"/>
   </binaryOption>

   <binaryOption key="sim_sopt0_rxdce" condition="sim_sopt0_rxdce_present"
      enumStem="SimSopt0Rxdce"
      toolTip="Enables the UART0_RX to be captured by FTM0 channel 1"
      description="UART0_RX Capture on FTM0 channel 1" >
      <choice name="Not connected"                         value="0" enum="NotConnected"/>
      <choice name="UART0_RX connected as FTM0 channel 1"  value="1" enum="Uart0_rxConnectedAsFtm0Channel1"/>
   </binaryOption>

   <binaryOption key="sim_sopt0_acic" condition="sim_sopt0_acic_present"
      enumStem="SimSopt0Acic"
      toolTip="Connects the output of ACMP0 to FTM1 input channel 0"
      description="Analog Comparator on FTM1 input channel 0" >
      <choice name="ACMP0_OUT is not connected"          value="0" enum="Acmp0_outIsNotConnected"/>
      <choice name="ACMP0_OUT is used as input channel"  value="1" enum="Acmp0_outIsUsedAsInputChannel"/>
   </binaryOption>

   <binaryOption key="sim_sopt0_rtcc" condition="sim_sopt0_rtcc_present"
      enumStem="SimSopt0Rtcc"
      toolTip="Allows the Real-time Counter (RTC) overflow to be captured by FTM1 channel 1"
      description="Real-Time Counter on FTM1 input channel 1" >
      <choice name="RTC not connected"                   value="0" enum="RtcNotConnected"/>
      <choice name="RTC overflow used as input channel"  value="1" enum="RtcOverflowUsedAsInputChannel"/>
   </binaryOption>

   <choiceOption key="sim_sopt0_rxdfe" condition="sim_sopt0_rxdfe_present"
      enumStem="SimSopt0Rxdfe"
      toolTip="Enables the UART0_RX input to be filtered by ACMP.\n
               When this function is enabled, any signal tagged with ACMP inputs can be regarded as UART0"
      description="UART0_RX Filter Select" >
      <choice name="UART0 module directly"  value="0" enum="Uart0ModuleDirectly"/>
      <choice name="Filtered by ACMP0"      value="1" enum="FilteredByAcmp0"/>
      <choice name="Filtered by ACMP1"      value="2" enum="FilteredByAcmp1"/>
      <choice name="Reserved"               value="3" enum="Reserved"/>
   </choiceOption>

   <binaryOption key="sim_sopt0_actrg" condition="sim_sopt0_actrg_present"
      enumStem="SimSopt0Actrg"
      toolTip="Selects ACMP output used as the trigger0 input of FTM2"
      description="ACMP Trigger FTM2 selection" >
      <choice name="ACMP0_OUT"   value="0" enum="Acmp0_out"/>
      <choice name="ACMP1_OUT"   value="1" enum="Acmp1_out"/>
   </binaryOption>

   <binaryOption key="sim_sopt0_swde" condition="sim_sopt0_swde_present"
      enumStem="SimSopt0Swde"
      toolTip="Controls PTA4 as PTA4/ACMP0_OUT or SWD_DIO, PTC4 as PTC4/RTCO/FTM1_CH0/ACMP0_IN2 or SWD_CLK functions"
      description="Single Wire Debug Port Pin Enable" >
      <choice name="PTA4, PTC4 used as GPIO pins"  value="0" enum="Pta4_Ptc4UsedAsGpioPins"/>
      <choice name="PTA4, PTC4 used as SWD pins"   value="1" enum="Pta4_Ptc4UsedAsSwdPins"/>
   </binaryOption>

   <binaryOption key="sim_sopt0_rstpe" condition="sim_sopt0_rstpe_present"
      enumStem="SimSopt0Rstpe"
      toolTip="This field can only be written once after any reset"
      description="RESET Pin Enable" >
      <choice name="PTA5 as PTA5/IRQ/FTM0_CLK"  value="0" enum="Pta5AsPta5IrqFtm0_clk"/>
      <choice name="PTA5 as RESET"              value="1" enum="Pta5AsReset"/>
   </binaryOption>

   <binaryOption key="sim_sopt0_nmie" condition="sim_sopt0_nmie_present"
      enumStem="SimSopt0Nmie"
      toolTip="This field can only be written once after any reset"
      description="NMI Pin Enable" >
      <choice name="PTB4 as PTB4/FTM2_CH4/SPI0_MISO/ACMP1_IN2"  value="0" enum="Ptb4AsPtb4Ftm2_ch4Spi0_misoAcmp1_in2"/>
      <choice name="PTB4 as NMI"                                value="1" enum="Ptb4AsNmi"/>
   </binaryOption>

   <choiceOption key="sim_sopt1_uartpwts" condition="sim_sopt1_uartpwts_present"
      enumStem="SimSopt1Uartpwts"
      toolTip="This field select PWTIN3 input signal"
      description="PWT UART RX select" >
      <choice name="UART0 RX is connected to PWTIN3"  value="0" enum="Uart0RxIsConnectedToPwtin3"/>
      <choice name="UART1 RX is connected to PWTIN3"  value="1" enum="Uart1RxIsConnectedToPwtin3"/>
      <choice name="UART2 RX is connected to PWTIN3"  value="2" enum="Uart2RxIsConnectedToPwtin3"/>
      <choice name="Reserved"                         value="3" enum="Reserved"/>
   </choiceOption>

   <binaryOption key="sim_sopt1_acpwts" condition="sim_sopt1_acpwts_present"
      enumStem="SimSopt1Acpwts"
      toolTip="This field select PWTIN2 input signal"
      description="PWT ACMP_OUT select" >
      <choice name="ACMP1_OUT is connected to PWTIN2"  value="0" enum="Acmp1_outIsConnectedToPwtin2"/>
      <choice name="ACMP0_OUT is connected to PWTIN2"  value="1" enum="Acmp0_outIsConnectedToPwtin2"/>
   </binaryOption>

   <binaryOption key="sim_sopt1_i2c0oinv" condition="sim_sopt1_i2c0oinv_present"
      enumStem="SimSopt1I2c0oinv"
      toolTip="This field controls inversion of the I2C0 SDA_OUT and SCL_OUT in 4-wire mode"
      description="I2C0 Output Invert in 4-wire mode" >
      <choice name="Not inverted"                      value="0" enum="NotInverted"/>
      <choice name="SDA_OUT and SCL_OUT are inverted"  value="1" enum="Sda_outAndScl_outAreInverted"/>
   </binaryOption>

   <binaryOption key="sim_sopt1_i2c04wen" condition="sim_sopt1_i2c04wen_present"
      enumStem="SimSopt1I2c04wen"
      toolTip="This field controls I2C0 4-wire interface configuration.\n
               NOTE: This field works only when SIM_PINSEL0[I2C0PS] is 0"
      description="I2C0 4-Wire Interface Enable" >
      <choice name="I2C0 4-wire interface configuration is disabled"  value="0" enum="I2c04WireInterfaceConfigurationIsDisabled"/>
      <choice name="I2C0 4-wire interface configuration is enabled"   value="1" enum="I2c04WireInterfaceConfigurationIsEnabled"/>
   </binaryOption>

   <choiceOption key="sim_pinsel0_pwtclkps" condition="sim_pinsel0_pwtclkps_present"
      enumStem="SimPinsel0Pwtclkps"
      description="PWT TCLK Pin Select" >
      <choice name="Selects TCLK0 for PWT module"  value="0" enum="SelectsTclk0ForPwtModule"/>
      <choice name="Selects TCLK1 for PWT module"  value="1" enum="SelectsTclk1ForPwtModule"/>
      <choice name="Selects TCLK2 for PWT module"  value="2" enum="SelectsTclk2ForPwtModule"/>
      <choice name="Reserved"                      value="3" enum="Reserved"/>
   </choiceOption>

   <choiceOption key="sim_pinsel0_ftm2clkps" condition="sim_pinsel0_ftm2clkps_present"
      enumStem="SimPinsel0Ftm2clkps"
      description="FTM2 TCLK Pin Select" >
      <choice name="Selects TCLK0 for FTM2 module"  value="0" enum="SelectsTclk0ForFtm2Module"/>
      <choice name="Selects TCLK1 for FTM2 module"  value="1" enum="SelectsTclk1ForFtm2Module"/>
      <choice name="Selects TCLK2 for FTM2 module"  value="2" enum="SelectsTclk2ForFtm2Module"/>
      <choice name="Reserved"                       value="3" enum="Reserved"/>
   </choiceOption>

   <choiceOption key="sim_pinsel0_ftm1clkps" condition="sim_pinsel0_ftm1clkps_present"
      enumStem="SimPinsel0Ftm1clkps"
      description="FTM1 TCLK Pin Select" >
      <choice name="Selects TCLK0 for FTM1 module"  value="0" enum="SelectsTclk0ForFtm1Module"/>
      <choice name="Selects TCLK1 for FTM1 module"  value="1" enum="SelectsTclk1ForFtm1Module"/>
      <choice name="Selects TCLK2 for FTM1 module"  value="2" enum="SelectsTclk2ForFtm1Module"/>
      <choice name="Reserved"                       value="3" enum="Reserved"/>
   </choiceOption>

   <choiceOption key="sim_pinsel0_ftm0clkps" condition="sim_pinsel0_ftm0clkps_present"
      enumStem="SimPinsel0Ftm0clkps"
      description="FTM0 TCLK Pin Select" >
      <choice name="Selects TCLK0 for FTM0 module"  value="0" enum="SelectsTclk0ForFtm0Module"/>
      <choice name="Selects TCLK1 for FTM0 module"  value="1" enum="SelectsTclk1ForFtm0Module"/>
      <choice name="Selects TCLK2 for FTM0 module"  value="2" enum="SelectsTclk2ForFtm0Module"/>
      <choice name="Reserved"                       value="3" enum="Reserved"/>
   </choiceOption>

   <binaryOption key="sim_pinsel0_ftm1ps1" condition="sim_pinsel0_ftm1ps1_present"
      enumStem="SimPinsel0Ftm1ps1"
      description="FTM1 channel 1 Port Pin Select" >
      <choice name="PTC5"        value="0" enum="Ptc5"/>
      <choice name="PTE7"        value="1" enum="Pte7"/>
   </binaryOption>

   <binaryOption key="sim_pinsel0_ftm1ps0" condition="sim_pinsel0_ftm1ps0_present"
      enumStem="SimPinsel0Ftm1ps0"
      description="FTM1 channel 0 Port Pin Select" >
      <choice name="PTC4"        value="0" enum="Ptc4"/>
      <choice name="PTH2"        value="1" enum="Pth2"/>
   </binaryOption>

   <binaryOption key="sim_pinsel0_ftm0ps1" condition="sim_pinsel0_ftm0ps1_present"
      enumStem="SimPinsel0Ftm0ps1"
      description="FTM0 channel 1 Port Pin Select" >
      <choice name="PTA1"        value="0" enum="Pta1"/>
      <choice name="PTB3"        value="1" enum="Ptb3"/>
   </binaryOption>

   <binaryOption key="sim_pinsel0_ftm0ps0" condition="sim_pinsel0_ftm0ps0_present"
      enumStem="SimPinsel0Ftm0ps0"
      description="FTM0 channel 0 Port Pin Select" >
      <choice name="PTA0"        value="0" enum="Pta0"/>
      <choice name="PTB2"        value="1" enum="Ptb2"/>
   </binaryOption>

   <binaryOption key="sim_pinsel0_uart0ps" condition="sim_pinsel0_uart0ps_present"
      enumStem="SimPinsel0Uart0ps"
      description="UART0 Pin Select" >
      <choice name="PTB0 and PTB1 are mapped UART0 pins"  value="0" enum="Ptb0AndPtb1AreMappedUart0Pins"/>
      <choice name="PTA2 and PTA3 are mapped UART0 pins"  value="1" enum="Pta2AndPta3AreMappedUart0Pins"/>
   </binaryOption>

   <binaryOption key="sim_pinsel0_spi0ps" condition="sim_pinsel0_spi0ps_present"
      enumStem="SimPinsel0Spi0ps"
      description="SPI0 Pin Select" >
      <choice name="PTB2, PTB3, PTB4, and PTB5 are mapped as SPI0 pins"  value="0" enum="Ptb2_Ptb3_Ptb4_AndPtb5AreMappedAsSpi0Pins"/>
      <choice name="PTE0, PTE1, PTE2, and PTE3 are mapped as SPI0 pins"  value="1" enum="Pte0_Pte1_Pte2_AndPte3AreMappedAsSpi0Pins"/>
   </binaryOption>

   <binaryOption key="sim_pinsel0_i2c0ps" condition="sim_pinsel0_i2c0ps_present"
      enumStem="SimPinsel0I2c0ps"
      description="I2C0 Port Pin Select" >
      <choice name="PTA3 and PTA2 are mapped as I2C0 pins"  value="0" enum="Pta3AndPta2AreMappedAsI2c0Pins"/>
      <choice name="PTB7 and PTB6 are mapped as I2C0 pins"  value="1" enum="Ptb7AndPtb6AreMappedAsI2c0Pins"/>
   </binaryOption>

   <binaryOption key="sim_pinsel0_rtcps" condition="sim_pinsel0_rtcps_present"
      enumStem="SimPinsel0Rtcps"
      toolTip="Selects the RTCO port pins"
      description="RTCO Pin Select" >
      <choice name="PTC4"        value="0" enum="Ptc4"/>
      <choice name="PTC5"        value="1" enum="Ptc5"/>
   </binaryOption>

   <choiceOption key="sim_pinsel0_irqps" condition="sim_pinsel0_irqps_present"
      enumStem="SimPinsel0Irqps"
      toolTip="Selects the IRQ port pins"
      description="IRQ Port Pin Select" >
      <choice name="PTA5"        value="0" enum="Pta5"/>
      <choice name="PTI0"        value="1" enum="Pti0"/>
      <choice name="PTI1"        value="2" enum="Pti1"/>
      <choice name="PTI2"        value="3" enum="Pti2"/>
      <choice name="PTI3"        value="4" enum="Pti3"/>
      <choice name="PTI4"        value="5" enum="Pti4"/>
      <choice name="PTI5"        value="6" enum="Pti5"/>
      <choice name="PTI6"        value="7" enum="Pti6"/>
   </choiceOption>

   <binaryOption key="sim_pinsel1_mscanps" condition="sim_pinsel1_mscanps_present"
      enumStem="SimPinsel1Mscanps"
      toolTip="Selects the pins used by MSCAN"
      description="MSCAN Pin Select" >
      <choice name="CAN_TX on PTC7, CAN_RX on PTC6"  value="0" enum="Can_txOnPtc7_Can_rxOnPtc6"/>
      <choice name="CAN_TX on PTE7, CAN_RX on PTH2"  value="1" enum="Can_txOnPte7_Can_rxOnPth2"/>
   </binaryOption>

   <binaryOption key="sim_pinsel1_pwtin1ps" condition="sim_pinsel1_pwtin1ps_present"
      enumStem="SimPinsel1Pwtin1ps"
      description="PWTIN1 Pin Select" >
      <choice name="PWTIN1 on PTB0"  value="0" enum="Pwtin1OnPtb0"/>
      <choice name="PWTIN1 on PTH7"  value="1" enum="Pwtin1OnPth7"/>
   </binaryOption>

   <binaryOption key="sim_pinsel1_pwtin0ps" condition="sim_pinsel1_pwtin0ps_present"
      enumStem="SimPinsel1Pwtin0ps"
      description="PWTIN0 Pin Select" >
      <choice name="PWTIN0 on PTD5"  value="0" enum="Pwtin0OnPtd5"/>
      <choice name="PWTIN0 on PTE2"  value="1" enum="Pwtin0OnPte2"/>
   </binaryOption>

   <binaryOption key="sim_pinsel1_uart2ps" condition="sim_pinsel1_uart2ps_present"
      enumStem="SimPinsel1Uart2ps"
      description="UART2 Pin Select" >
      <choice name="UART2_TX on PTD7, UART2_RX on PTD6"  value="0" enum="Uart2_txOnPtd7_Uart2_rxOnPtd6"/>
      <choice name="UART2_TX on PTI1, UART2_RX on PTI0"  value="1" enum="Uart2_txOnPti1_Uart2_rxOnPti0"/>
   </binaryOption>

   <binaryOption key="sim_pinsel1_uart1ps" condition="sim_pinsel1_uart1ps_present"
      enumStem="SimPinsel1Uart1ps"
      description="UART1 Pin Select" >
      <choice name="UART1_TX on PTC7, UART1_RX on PTC6"  value="0" enum="Uart1_txOnPtc7_Uart1_rxOnPtc6"/>
      <choice name="UART1_TX on PTF3, UART1_RX on PTF2"  value="1" enum="Uart1_txOnPtf3_Uart1_rxOnPtf2"/>
   </binaryOption>

   <binaryOption key="sim_pinsel1_spi1ps" condition="sim_pinsel1_spi1ps_present"
      enumStem="SimPinsel1Spi1ps"
      description="SPI1 Pin Select" >
      <choice name="PTD0, PTD1, PTD2, and PTD3 mapped as SPI pins"  value="0" enum="Ptd0_Ptd1_Ptd2_AndPtd3MappedAsSpiPins"/>
      <choice name="PTG4, PTG5, PTG6, and PTG7 mapped as SPI pins"  value="1" enum="Ptg4_Ptg5_Ptg6_AndPtg7MappedAsSpiPins"/>
   </binaryOption>

   <binaryOption key="sim_pinsel1_i2c1ps" condition="sim_pinsel1_i2c1ps_present"
      enumStem="SimPinsel1I2c1ps"
      description="I2C1 Pin Select" >
      <choice name="I2C1_SCL on PTE1, I2C1_SDA on PTE0"  value="0" enum="I2c1_sclOnPte1_I2c1_sdaOnPte0"/>
      <choice name="I2C1_SCL on PTH4, I2C1_SDA on PTH3"  value="1" enum="I2c1_sclOnPth4_I2c1_sdaOnPth3"/>
   </binaryOption>

   <binaryOption key="sim_pinsel1_ftm2ps5" condition="sim_pinsel1_ftm2ps5_present"
      enumStem="SimPinsel1Ftm2ps5"
      description="FTM2 Channel 5 Pin Select" >
      <choice name="PTB5"        value="0" enum="Ptb5"/>
      <choice name="PTG7"        value="1" enum="Ptg7"/>
   </binaryOption>

   <binaryOption key="sim_pinsel1_ftm2ps4" condition="sim_pinsel1_ftm2ps4_present"
      enumStem="SimPinsel1Ftm2ps4"
      description="FTM2 Channel 4 Pin Select" >
      <choice name="PTB4"        value="0" enum="Ptb4"/>
      <choice name="PTG6"        value="1" enum="Ptg6"/>
   </binaryOption>

   <choiceOption key="sim_pinsel1_ftm2ps3" condition="sim_pinsel1_ftm2ps3_present"
      enumStem="SimPinsel1Ftm2ps3"
      description="FTM2 Channel 3 Pin Select" >
      <choice name="PTC3"        value="0" enum="Ptc3"/>
      <choice name="PTD1"        value="1" enum="Ptd1"/>
      <choice name="PTG5"        value="2" enum="Ptg5"/>
      <choice name="Reserved"    value="3" enum="Reserved"/>
   </choiceOption>

   <choiceOption key="sim_pinsel1_ftm2ps2" condition="sim_pinsel1_ftm2ps2_present"
      enumStem="SimPinsel1Ftm2ps2"
      description="FTM2 Channel 2 Pin Select" >
      <choice name="PTC2"        value="0" enum="Ptc2"/>
      <choice name="PTD0"        value="1" enum="Ptd0"/>
      <choice name="PTG4"        value="2" enum="Ptg4"/>
      <choice name="Reserved"    value="3" enum="Reserved"/>
   </choiceOption>

   <choiceOption key="sim_pinsel1_ftm2ps1" condition="sim_pinsel1_ftm2ps1_present"
      enumStem="SimPinsel1Ftm2ps1"
      description="FTM2 Channel 1 Pin Select" >
      <choice name="PTC1"        value="0" enum="Ptc1"/>
      <choice name="PTH1"        value="1" enum="Pth1"/>
      <choice name="PTF1"        value="2" enum="Ptf1"/>
      <choice name="Reserved"    value="3" enum="Reserved"/>
   </choiceOption>

   <choiceOption key="sim_pinsel1_ftm2ps0" condition="sim_pinsel1_ftm2ps0_present"
      enumStem="SimPinsel1Ftm2ps0"
      description="FTM2 Channel 0 Pin Select" >
      <choice name="PTC0"        value="0" enum="Ptc0"/>
      <choice name="PTH0"        value="1" enum="Pth0"/>
      <choice name="PTF0"        value="2" enum="Ptf0"/>
      <choice name="Reserved"    value="3" enum="Reserved"/>
   </choiceOption>

   <binaryOption key="sim_scgc_acmp1" condition="sim_scgc_acmp1_present"
      enumStem="SimScgcAcmp1"
      description="ACMP1 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_acmp0" condition="sim_scgc_acmp0_present"
      enumStem="SimScgcAcmp0"
      description="ACMP0 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_adc" condition="sim_scgc_adc_present"
      enumStem="SimScgcAdc"
      description="ADC Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_irq" condition="sim_scgc_irq_present"
      enumStem="SimScgcIrq"
      description="IRQ Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_kbi1" condition="sim_scgc_kbi1_present"
      enumStem="SimScgcKbi1"
      description="KBI1 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_kbi0" condition="sim_scgc_kbi0_present"
      enumStem="SimScgcKbi0"
      description="KBI0 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_uart2" condition="sim_scgc_uart2_present"
      enumStem="SimScgcUart2"
      description="UART2 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_uart1" condition="sim_scgc_uart1_present"
      enumStem="SimScgcUart1"
      description="UART1 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_uart0" condition="sim_scgc_uart0_present"
      enumStem="SimScgcUart0"
      description="UART0 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_spi1" condition="sim_scgc_spi1_present"
      enumStem="SimScgcSpi1"
      description="SPI1 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_spi0" condition="sim_scgc_spi0_present"
      enumStem="SimScgcSpi0"
      description="SPI0 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_i2c1" condition="sim_scgc_i2c1_present"
      enumStem="SimScgcI2c1"
      description="I2C1 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_i2c0" condition="sim_scgc_i2c0_present"
      enumStem="SimScgcI2c0"
      description="I2C0 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_mscan" condition="sim_scgc_mscan_present"
      enumStem="SimScgcMscan"
      description="MSCAN Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_swd" condition="sim_scgc_swd_present"
      enumStem="SimScgcSwd"
      description="SWD Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_flash" condition="sim_scgc_flash_present"
      enumStem="SimScgcFlash"
      description="FLASH Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_crc" condition="sim_scgc_crc_present"
      enumStem="SimScgcCrc"
      description="CRC Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_ftm2" condition="sim_scgc_ftm2_present"
      enumStem="SimScgcFtm2"
      description="FTM2 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_ftm1" condition="sim_scgc_ftm1_present"
      enumStem="SimScgcFtm1"
      description="FTM1 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_ftm0" condition="sim_scgc_ftm0_present"
      enumStem="SimScgcFtm0"
      description="FTM0 Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_pwt" condition="sim_scgc_pwt_present"
      enumStem="SimScgcPwt"
      description="PWT Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_pit" condition="sim_scgc_pit_present"
      enumStem="SimScgcPit"
      description="PIT Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <binaryOption key="sim_scgc_rtc" condition="sim_scgc_rtc_present"
      enumStem="SimScgcRtc"
      description="RTC Clock Gate Control" >
      <choice name="Clock disabled"  value="0" enum="ClockDisabled"/>
      <choice name="Clock enabled"   value="1" enum="ClockEnabled"/>
   </binaryOption>

   <choiceOption key="sim_clkdiv_outdiv1" condition="sim_clkdiv_outdiv1_present"
      enumStem="SimClkdivOutdiv1"
      toolTip="This field sets the divide value for the core/system clock"
      description="Clock 1 Output Divider value" >
      <choice name="ICSOUTCLK"    value="0" enum="Icsoutclk"/>
      <choice name="ICSOUTCLK/2"  value="1" enum="Icsoutclk2"/>
      <choice name="ICSOUTCLK/3"  value="2" enum="Icsoutclk3"/>
      <choice name="ICSOUTCLK/4"  value="3" enum="Icsoutclk4"/>
   </choiceOption>

   <binaryOption key="sim_clkdiv_outdiv2" condition="sim_clkdiv_outdiv2_present"
      enumStem="SimClkdivOutdiv2"
      toolTip="This field sets the divide value for the bus/FLASH, follows OUTDIV1"
      description="Clock 2 Output Divider value" >
      <choice name="Not divided from divider1"  value="0" enum="NotDividedFromDivider1"/>
      <choice name="Divide by 2 from divider1"  value="1" enum="DivideBy2FromDivider1"/>
   </binaryOption>

   <binaryOption key="sim_clkdiv_outdiv3" condition="sim_clkdiv_outdiv3_present"
      enumStem="SimClkdivOutdiv3"
      toolTip="This field sets the divide value for the timers(FTM0, FTM2,PWT)"
      description="Clock 3 Output Divider value" >
      <choice name="ICSOUTCLK"    value="0" enum="Icsoutclk"/>
      <choice name="ICSOUTCLK/2"  value="1" enum="Icsoutclk2"/>
   </binaryOption>

   <graphic key="sim_configuration"
      var="SimConfiguration"
      description="SIM configuration"
      clockConfigIndex="0"
      toolTip="Opens a graphic to alter SIM configuration" >

   <equation key="y" value="15" />

   <graphicBox id="SIM" x="5" y="5" params="0, 0, x600, y600, x" >

      <!-- ADC trigger mux -->
      <graphicGroup x="5" y="y" condition="/SIM/sim_sopt0_adhwt_present">

         <graphicItem id="ADCTRIFMUX_IN_0" name="@/SIM/sim_sopt0_adhwt.0" type="label" params="130,   30, 240, small" />
         <graphicItem id="ADCTRIFMUX_IN_1" name="@/SIM/sim_sopt0_adhwt.1" type="label" params="130,   50, 240, small" />
         <graphicItem id="ADCTRIFMUX_IN_2" name="@/SIM/sim_sopt0_adhwt.2" type="label" params="130,   70, 240, small" />
         <graphicItem id="ADCTRIFMUX_IN_3" name="@/SIM/sim_sopt0_adhwt.3" type="label" params="130,   90, 240, small" />
         <graphicItem id="ADCTRIFMUX_IN_4" name="@/SIM/sim_sopt0_adhwt.4" type="label" params="130,  110, 240, small" />
         <graphicItem id="ADCTRIFMUX_IN_5" name="@/SIM/sim_sopt0_adhwt.5" type="label" params="130,  130, 240, small" />
         <graphicItem id="ADCTRIFMUX_IN_6" name="@/SIM/sim_sopt0_adhwt.6" type="label" params="130,  150, 240, small" />
         <graphicItem id="ADCTRIFMUX_IN_7" name="@/SIM/sim_sopt0_adhwt.7" type="label" params="130,  170, 240, small" />

         <graphicItem id="DELAY"       var="/SIM/sim_sopt0_delay"  type="variableBox" params="400, 300,  80, large, oe,os+30"                 />
         <graphicItem id="BUSREF" var="/SIM/sim_sopt0_busref" type="choice"      params="130, 300, 200, small" />
         <graphicItem id="" type="connector"   params="BUSREF,0, DELAY,0, (x-20),y,x" />

         <graphicItem id="" type="connector"   params="ADCTRIFMUX_IN_0,0, ADCTRIFMUX,0, (x-20),y,x" />
         <graphicItem id="" type="connector"   params="ADCTRIFMUX_IN_1,0, ADCTRIFMUX,1, (x-20),y,x" />
         <graphicItem id="" type="connector"   params="ADCTRIFMUX_IN_2,0, ADCTRIFMUX,2, (x-20),y,x" />
         <graphicItem id="" type="connector"   params="ADCTRIFMUX_IN_3,0, ADCTRIFMUX,3, (x-20),y,x" />
         <graphicItem id="" type="connector"   params="ADCTRIFMUX_IN_4,0, ADCTRIFMUX,4, (x-20),y,x" />
         <graphicItem id="" type="connector"   params="ADCTRIFMUX_IN_5,0, ADCTRIFMUX,5, (x-20),y,x" />
         <graphicItem id="" type="connector"   params="ADCTRIFMUX_IN_6,0, ADCTRIFMUX,6, (x-20),y,x" />
         <graphicItem id="" type="connector"   params="ADCTRIFMUX_IN_7,0, ADCTRIFMUX,7, (x-20),y,x" />

         <graphicItem id="ADCTRIFMUX"  name="ADC trigger source"       var="sim_sopt0_adhwt"        type="mux"    params="280, 100, 8"        />

         <graphicItem id="" type="connector"   params="ADCTRIFMUX,0, ADCHWTRIGGER,0, y,x" />

         <graphicItem id="ADCHWTRIGGER" name="ADC Hardware Trigger"    type="label" params="400,  100, 150, small" />

         <equation key="y" value="y+60" />
      </graphicGroup>
   </graphicBox>

   </graphic>

   <for keys="field:name"
        values="
      sim_sopt0_adhwt:Sopt0Adhwt;
      sim_sopt0_clkoe:Sopt0Clkoe;
      sim_sopt0_busref:Sopt0Busref;
      sim_sopt0_txdme:Sopt0Txdme;
      sim_sopt0_ftmsync:Sopt0Ftmsync;
      sim_sopt0_rxdce:Sopt0Rxdce;
      sim_sopt0_acic:Sopt0Acic;
      sim_sopt0_rtcc:Sopt0Rtcc;
      sim_sopt0_rxdfe:Sopt0Rxdfe;
      sim_sopt0_actrg:Sopt0Actrg;
      sim_sopt0_swde:Sopt0Swde;
      sim_sopt0_rstpe:Sopt0Rstpe;
      sim_sopt0_nmie:Sopt0Nmie;
      sim_sopt1_uartpwts:Sopt1Uartpwts;
      sim_sopt1_acpwts:Sopt1Acpwts;
      sim_sopt1_i2c0oinv:Sopt1I2c0oinv;
      sim_sopt1_i2c04wen:Sopt1I2c04wen;
      sim_pinsel0_pwtclkps:Pinsel0Pwtclkps;
      sim_pinsel0_ftm2clkps:Pinsel0Ftm2clkps;
      sim_pinsel0_ftm1clkps:Pinsel0Ftm1clkps;
      sim_pinsel0_ftm0clkps:Pinsel0Ftm0clkps;
      sim_pinsel0_ftm1ps1:Pinsel0Ftm1ps1;
      sim_pinsel0_ftm1ps0:Pinsel0Ftm1ps0;
      sim_pinsel0_ftm0ps1:Pinsel0Ftm0ps1;
      sim_pinsel0_ftm0ps0:Pinsel0Ftm0ps0;
      sim_pinsel0_uart0ps:Pinsel0Uart0ps;
      sim_pinsel0_spi0ps:Pinsel0Spi0ps;
      sim_pinsel0_i2c0ps:Pinsel0I2c0ps;
      sim_pinsel0_rtcps:Pinsel0Rtcps;
      sim_pinsel0_irqps:Pinsel0Irqps;
      sim_pinsel1_mscanps:Pinsel1Mscanps;
      sim_pinsel1_pwtin1ps:Pinsel1Pwtin1ps;
      sim_pinsel1_pwtin0ps:Pinsel1Pwtin0ps;
      sim_pinsel1_uart2ps:Pinsel1Uart2ps;
      sim_pinsel1_uart1ps:Pinsel1Uart1ps;
      sim_pinsel1_spi1ps:Pinsel1Spi1ps;
      sim_pinsel1_i2c1ps:Pinsel1I2c1ps;
      sim_pinsel1_ftm2ps5:Pinsel1Ftm2ps5;
      sim_pinsel1_ftm2ps4:Pinsel1Ftm2ps4;
      sim_pinsel1_ftm2ps3:Pinsel1Ftm2ps3;
      sim_pinsel1_ftm2ps2:Pinsel1Ftm2ps2;
      sim_pinsel1_ftm2ps1:Pinsel1Ftm2ps1;
      sim_pinsel1_ftm2ps0:Pinsel1Ftm2ps0;
      sim_scgc_acmp1:ScgcAcmp1;
      sim_scgc_acmp0:ScgcAcmp0;
      sim_scgc_adc:ScgcAdc;
      sim_scgc_irq:ScgcIrq;
      sim_scgc_kbi1:ScgcKbi1;
      sim_scgc_kbi0:ScgcKbi0;
      sim_scgc_uart2:ScgcUart2;
      sim_scgc_uart1:ScgcUart1;
      sim_scgc_uart0:ScgcUart0;
      sim_scgc_spi1:ScgcSpi1;
      sim_scgc_spi0:ScgcSpi0;
      sim_scgc_i2c1:ScgcI2c1;
      sim_scgc_i2c0:ScgcI2c0;
      sim_scgc_mscan:ScgcMscan;
      sim_scgc_swd:ScgcSwd;
      sim_scgc_flash:ScgcFlash;
      sim_scgc_crc:ScgcCrc;
      sim_scgc_ftm2:ScgcFtm2;
      sim_scgc_ftm1:ScgcFtm1;
      sim_scgc_ftm0:ScgcFtm0;
      sim_scgc_pwt:ScgcPwt;
      sim_scgc_pit:ScgcPit;
      sim_scgc_rtc:ScgcRtc;
      sim_clkdiv_outdiv1:ClkdivOutdiv1;
      sim_clkdiv_outdiv2:ClkdivOutdiv2;
      sim_clkdiv_outdiv3:ClkdivOutdiv3">
      <setTemplate variables="%(field)"
      ><![CDATA[
         \t/**
         \t * Set %description
         \t *
         %paramDescription
         \t */
         \tstatic void configure%(name)(%params) {
         \t   %defaultFieldExpression
         \t}\n\n
      ]]></setTemplate>
   </for>

<!--   ========== SIM Init class =============================== -->

   <template key="init_description" namespace="all">
   <![CDATA[
      \t/**
      \t * Class used to do initialisation of the $(_class)
      \t *
      \t * This class has a templated constructor that accepts various values.
      \t *
      \t * @note This constructor may be used to create a const instance in Flash
      \t *
      \t * Example:
      \t * @code
      \t * static const $(_class)::Init init {
      \t *
      \t *   // Setup values
      \t *   0,                                        // FTM2 Trigger Delay,
      \t *   SimSopt0Adhwt_RtcOverflow                 // ADC Hardware Trigger Source,
      \t *   SimSopt0Clkoe_Disabled                    // Bus Clock Output Enable,
      \t *   SimSopt0Busref_BusClock                   // BUS Clock Output select,
      \t *   SimSopt0Txdme_Uart0_txDirectlyConnectedToPin    // UART0_TX Modulation Select,
      \t *   SimSopt0Ftmsync_NoTrigger                 // FTM2 Synchronisation Select,
      \t *   SimSopt0Rxdce_NotConnected                // UART0_RX Capture on FTM0 channel 1,
      \t *   SimSopt0Acic_Acmp0_outIsNotConnected      // Analog Comparator on FTM1 input channel 0,
      \t *   SimSopt0Rtcc_RtcNotConnected              // Real-Time Counter on FTM1 input channel 1,
      \t *   SimSopt0Rxdfe_Uart0ModuleDirectly         // UART0_RX Filter Select,
      \t *   SimSopt0Actrg_Acmp0_out                   // ACMP Trigger FTM2 selection,
      \t *   SimSopt0Swde_Pta4_Ptc4UsedAsGpioPins      // Single Wire Debug Port Pin Enable,
      \t *   SimSopt0Rstpe_Pta5AsPta5IrqFtm0_clk       // RESET Pin Enable,
      \t *   SimSopt0Nmie_Ptb4AsPtb4Ftm2_ch4Spi0_misoAcmp1_in2    // NMI Pin Enable,
      \t *   SimSopt1Uartpwts_Uart0RxIsConnectedToPwtin3    // PWT UART RX select,
      \t *   SimSopt1Acpwts_Acmp1_outIsConnectedToPwtin2    // PWT ACMP_OUT select,
      \t *   SimSopt1I2c0oinv_NotInverted              // I2C0 Output Invert in 4-wire mode,
      \t *   SimSopt1I2c04wen_I2c04WireInterfaceConfigurationIsDisabled    // I2C0 4-Wire Interface Enable,
      \t *   SimPinsel0Pwtclkps_SelectsTclk0ForPwtModule    // PWT TCLK Pin Select,
      \t *   SimPinsel0Ftm2clkps_SelectsTclk0ForFtm2Module    // FTM2 TCLK Pin Select,
      \t *   SimPinsel0Ftm1clkps_SelectsTclk0ForFtm1Module    // FTM1 TCLK Pin Select,
      \t *   SimPinsel0Ftm0clkps_SelectsTclk0ForFtm0Module    // FTM0 TCLK Pin Select,
      \t *   SimPinsel0Ftm1ps1_Ptc5                    // FTM1 channel 1 Port Pin Select,
      \t *   SimPinsel0Ftm1ps0_Ptc4                    // FTM1 channel 0 Port Pin Select,
      \t *   SimPinsel0Ftm0ps1_Pta1                    // FTM0 channel 1 Port Pin Select,
      \t *   SimPinsel0Ftm0ps0_Pta0                    // FTM0 channel 0 Port Pin Select,
      \t *   SimPinsel0Uart0ps_Ptb0AndPtb1AreMappedUart0Pins    // UART0 Pin Select,
      \t *   SimPinsel0Spi0ps_Ptb2_Ptb3_Ptb4_AndPtb5AreMappedAsSpi0Pins    // SPI0 Pin Select,
      \t *   SimPinsel0I2c0ps_Pta3AndPta2AreMappedAsI2c0Pins    // I2C0 Port Pin Select,
      \t *   SimPinsel0Rtcps_Ptc4                      // RTCO Pin Select,
      \t *   SimPinsel0Irqps_Pta5                      // IRQ Port Pin Select,
      \t *   SimPinsel1Mscanps_Can_txOnPtc7_Can_rxOnPtc6    // MSCAN Pin Select,
      \t *   SimPinsel1Pwtin1ps_Pwtin1OnPtb0           // PWTIN1 Pin Select,
      \t *   SimPinsel1Pwtin0ps_Pwtin0OnPtd5           // PWTIN0 Pin Select,
      \t *   SimPinsel1Uart2ps_Uart2_txOnPtd7_Uart2_rxOnPtd6    // UART2 Pin Select,
      \t *   SimPinsel1Uart1ps_Uart1_txOnPtc7_Uart1_rxOnPtc6    // UART1 Pin Select,
      \t *   SimPinsel1Spi1ps_Ptd0_Ptd1_Ptd2_AndPtd3MappedAsSpiPins    // SPI1 Pin Select,
      \t *   SimPinsel1I2c1ps_I2c1_sclOnPte1_I2c1_sdaOnPte0    // I2C1 Pin Select,
      \t *   SimPinsel1Ftm2ps5_Ptb5                    // FTM2 Channel 5 Pin Select,
      \t *   SimPinsel1Ftm2ps4_Ptb4                    // FTM2 Channel 4 Pin Select,
      \t *   SimPinsel1Ftm2ps3_Ptc3                    // FTM2 Channel 3 Pin Select,
      \t *   SimPinsel1Ftm2ps2_Ptc2                    // FTM2 Channel 2 Pin Select,
      \t *   SimPinsel1Ftm2ps1_Ptc1                    // FTM2 Channel 1 Pin Select,
      \t *   SimPinsel1Ftm2ps0_Ptc0                    // FTM2 Channel 0 Pin Select,
      \t *   SimScgcAcmp1_ClockDisabled                // ACMP1 Clock Gate Control,
      \t *   SimScgcAcmp0_ClockDisabled                // ACMP0 Clock Gate Control,
      \t *   SimScgcAdc_ClockDisabled                  // ADC Clock Gate Control,
      \t *   SimScgcIrq_ClockDisabled                  // IRQ Clock Gate Control,
      \t *   SimScgcKbi1_ClockDisabled                 // KBI1 Clock Gate Control,
      \t *   SimScgcKbi0_ClockDisabled                 // KBI0 Clock Gate Control,
      \t *   SimScgcUart2_ClockDisabled                // UART2 Clock Gate Control,
      \t *   SimScgcUart1_ClockDisabled                // UART1 Clock Gate Control,
      \t *   SimScgcUart0_ClockDisabled                // UART0 Clock Gate Control,
      \t *   SimScgcSpi1_ClockDisabled                 // SPI1 Clock Gate Control,
      \t *   SimScgcSpi0_ClockDisabled                 // SPI0 Clock Gate Control,
      \t *   SimScgcI2c1_ClockDisabled                 // I2C1 Clock Gate Control,
      \t *   SimScgcI2c0_ClockDisabled                 // I2C0 Clock Gate Control,
      \t *   SimScgcMscan_ClockDisabled                // MSCAN Clock Gate Control,
      \t *   SimScgcSwd_ClockDisabled                  // SWD Clock Gate Control,
      \t *   SimScgcFlash_ClockDisabled                // FLASH Clock Gate Control,
      \t *   SimScgcCrc_ClockDisabled                  // CRC Clock Gate Control,
      \t *   SimScgcFtm2_ClockDisabled                 // FTM2 Clock Gate Control,
      \t *   SimScgcFtm1_ClockDisabled                 // FTM1 Clock Gate Control,
      \t *   SimScgcFtm0_ClockDisabled                 // FTM0 Clock Gate Control,
      \t *   SimScgcPwt_ClockDisabled                  // PWT Clock Gate Control,
      \t *   SimScgcPit_ClockDisabled                  // PIT Clock Gate Control,
      \t *   SimScgcRtc_ClockDisabled                  // RTC Clock Gate Control,
      \t *   SimClkdivOutdiv1_Icsoutclk                // Clock 1 Output Divider value,
      \t *   SimClkdivOutdiv2_NotDividedFromDivider1    // Clock 2 Output Divider value,
      \t *   SimClkdivOutdiv3_Icsoutclk                // Clock 3 Output Divider value,
      \t * };
      \t *
      \t * // Initialise $(_class) from values specified above
      \t * $(_class)::configure(init)
      \t * @endcode
      \t */
   ]]>
   </template>

   <template namespace="usbdm">
   <![CDATA[
      class $(_class)BasicInfo {
      \t
      public:
      \t\n
   ]]>
   </template>

   <template namespace="usbdm">
   <![CDATA[
      $(init_description)
      \tclass Init {
      \t
      \tpublic:
      \t   /**
      \t    * Copy Constructor
      \t    */
      \t   constexpr Init(const Init &other) = default;
      \t
      \t   /**
      \t    * Default Constructor
      \t    */
      \t   constexpr Init() = default;
      \t\n
   ]]>
   </template>

<!--   Member variables -->

   <initialValueTemplate namespace="usbdm"
      variables="sim_sopt0_delay,sim_sopt0_adhwt,sim_sopt0_clkoe,sim_sopt0_busref,sim_sopt0_txdme,sim_sopt0_ftmsync,sim_sopt0_rxdce,sim_sopt0_acic,sim_sopt0_rtcc,sim_sopt0_rxdfe,sim_sopt0_actrg,sim_sopt0_swde,sim_sopt0_rstpe,sim_sopt0_nmie"
   ><![CDATA[
      \t   /// System Options Register 0
      \t   uint32_t sopt0 = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="sim_sopt1_uartpwts,sim_sopt1_acpwts,sim_sopt1_i2c0oinv,sim_sopt1_i2c04wen"
   ><![CDATA[
      \t   /// System Options Register 1
      \t   uint32_t sopt1 = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="sim_pinsel0_pwtclkps,sim_pinsel0_ftm2clkps,sim_pinsel0_ftm1clkps,sim_pinsel0_ftm0clkps,sim_pinsel0_ftm1ps1,sim_pinsel0_ftm1ps0,sim_pinsel0_ftm0ps1,sim_pinsel0_ftm0ps0,sim_pinsel0_uart0ps,sim_pinsel0_spi0ps,sim_pinsel0_i2c0ps,sim_pinsel0_rtcps,sim_pinsel0_irqps"
   ><![CDATA[
      \t   /// Pin Selection Register 0
      \t   uint32_t pinsel0 = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="sim_pinsel1_mscanps,sim_pinsel1_pwtin1ps,sim_pinsel1_pwtin0ps,sim_pinsel1_uart2ps,sim_pinsel1_uart1ps,sim_pinsel1_spi1ps,sim_pinsel1_i2c1ps,sim_pinsel1_ftm2ps5,sim_pinsel1_ftm2ps4,sim_pinsel1_ftm2ps3,sim_pinsel1_ftm2ps2,sim_pinsel1_ftm2ps1,sim_pinsel1_ftm2ps0"
   ><![CDATA[
      \t   /// Pin Selection Register 1
      \t   uint32_t pinsel1 = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="sim_scgc_acmp1,sim_scgc_acmp0,sim_scgc_adc,sim_scgc_irq,sim_scgc_kbi1,sim_scgc_kbi0,sim_scgc_uart2,sim_scgc_uart1,sim_scgc_uart0,sim_scgc_spi1,sim_scgc_spi0,sim_scgc_i2c1,sim_scgc_i2c0,sim_scgc_mscan,sim_scgc_swd,sim_scgc_flash,sim_scgc_crc,sim_scgc_ftm2,sim_scgc_ftm1,sim_scgc_ftm0,sim_scgc_pwt,sim_scgc_pit,sim_scgc_rtc"
   ><![CDATA[
      \t   /// System Clock Gating Control Register
      \t   uint32_t scgc = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="sim_clkdiv_outdiv1,sim_clkdiv_outdiv2,sim_clkdiv_outdiv3"
   ><![CDATA[
      \t   /// BUS Clock Divider Register
      \t   uint32_t clkdiv = 0;\n\n
   ]]></initialValueTemplate>

<!--   Configure methods -->

   <template discardRepeats="true" key="/SIM/InitMethod" namespace="all" ><![CDATA[
      \t/**
      \t * Configure SIM from values specified in init
      \t *
      \t * @param init Class containing initialisation values
      \t */
      \tstatic void configure(const typename Info::Init &init) {
      \t   enable();
      \t
      \t   sim->SOPT0    = init.sopt0;
      \t   sim->SOPT1    = init.sopt1;
      \t   sim->PINSEL0    = init.pinsel0;
      \t   sim->PINSEL1    = init.pinsel1;
      \t   sim->SCGC    = init.scgc;
      \t   sim->UUIDL    = init.uuidl;
      \t   sim->UUIDML    = init.uuidml;
      \t   sim->UUIDMH    = init.uuidmh;
      \t   sim->CLKDIV    = init.clkdiv;
      \t
      \t   calibrate();
      \t}
      \t
      \t/**
      \t * Configure with default settings.
      \t * Configuration determined from Configure.usbdmProject
      \t */
      \tstatic inline void defaultConfigure() {
      \t
      \t   // Update settings
      \t   configure(Info::DefaultInitValue);
      \t}\n
   ]]></template>

<!--   Constructors -->

   <for keys="r"
      values="
            sim_sopt0_adhwt;
            sim_sopt0_clkoe;
            sim_sopt0_busref;
            sim_sopt0_txdme;
            sim_sopt0_ftmsync;
            sim_sopt0_rxdce;
            sim_sopt0_acic;
            sim_sopt0_rtcc;
            sim_sopt0_rxdfe;
            sim_sopt0_actrg;
            sim_sopt0_swde;
            sim_sopt0_rstpe;
            sim_sopt0_nmie;
            sim_sopt1_uartpwts;
            sim_sopt1_acpwts;
            sim_sopt1_i2c0oinv;
            sim_sopt1_i2c04wen;
            sim_pinsel0_pwtclkps;
            sim_pinsel0_ftm2clkps;
            sim_pinsel0_ftm1clkps;
            sim_pinsel0_ftm0clkps;
            sim_pinsel0_ftm1ps1;
            sim_pinsel0_ftm1ps0;
            sim_pinsel0_ftm0ps1;
            sim_pinsel0_ftm0ps0;
            sim_pinsel0_uart0ps;
            sim_pinsel0_spi0ps;
            sim_pinsel0_i2c0ps;
            sim_pinsel0_rtcps;
            sim_pinsel0_irqps;
            sim_pinsel1_mscanps;
            sim_pinsel1_pwtin1ps;
            sim_pinsel1_pwtin0ps;
            sim_pinsel1_uart2ps;
            sim_pinsel1_uart1ps;
            sim_pinsel1_spi1ps;
            sim_pinsel1_i2c1ps;
            sim_pinsel1_ftm2ps5;
            sim_pinsel1_ftm2ps4;
            sim_pinsel1_ftm2ps3;
            sim_pinsel1_ftm2ps2;
            sim_pinsel1_ftm2ps1;
            sim_pinsel1_ftm2ps0;
            sim_scgc_acmp1;
            sim_scgc_acmp0;
            sim_scgc_adc;
            sim_scgc_irq;
            sim_scgc_kbi1;
            sim_scgc_kbi0;
            sim_scgc_uart2;
            sim_scgc_uart1;
            sim_scgc_uart0;
            sim_scgc_spi1;
            sim_scgc_spi0;
            sim_scgc_i2c1;
            sim_scgc_i2c0;
            sim_scgc_mscan;
            sim_scgc_swd;
            sim_scgc_flash;
            sim_scgc_crc;
            sim_scgc_ftm2;
            sim_scgc_ftm1;
            sim_scgc_ftm0;
            sim_scgc_pwt;
            sim_scgc_pit;
            sim_scgc_rtc;
            sim_clkdiv_outdiv1;
            sim_clkdiv_outdiv2;
            sim_clkdiv_outdiv3
            ">
      <setTemplate namespace="usbdm"
         variables="%(r)"
         linePadding="xxx">
      <![CDATA[
         \t   /**
         \t    * Constructor for %description
         \t    *
         \t    * @tparam   Types
         \t    * @param    rest
         \t    *
         %comments
         \t    */
         \t   template <typename... Types>
         \t   constexpr Init(%params, Types... rest) : Init(rest...) {
         \t
         \t      %registerName = (%registerName&~%mask) | %paramExpression;
         \t   }
         \t\n
      ]]>
      </setTemplate>
   </for>

<!--   Constructors -->

   <for keys="r"
      values="
            sim_sopt0_delay
            ">
      <setTemplate namespace="usbdm"
         variables="%(r)"
         linePadding="xxx">
      <![CDATA[
         \t   /**
         \t    * Constructor for %description
         \t    *
         \t    * @tparam   Types
         \t    * @param    rest
         \t    *
         \t    * @param value %description
         \t    */
         \t   template <typename... Types>
         \t   constexpr Init(unsigned value, Types... rest) : Init(rest...) {
         \t
         \t      %registerName = (%registerName&~%mask) | value;
         \t   }
         \t\n
      ]]>
      </setTemplate>
   </for>

<!--   Default Initialisation value -->

   <initialValueTemplate
      separator=","
      terminator=","
      variables="
            sim_sopt0_adhwt,
            sim_sopt0_clkoe,
            sim_sopt0_busref,
            sim_sopt0_txdme,
            sim_sopt0_ftmsync,
            sim_sopt0_rxdce,
            sim_sopt0_acic,
            sim_sopt0_rtcc,
            sim_sopt0_rxdfe,
            sim_sopt0_actrg,
            sim_sopt0_swde,
            sim_sopt0_rstpe,
            sim_sopt0_nmie,
            sim_sopt1_uartpwts,
            sim_sopt1_acpwts,
            sim_sopt1_i2c0oinv,
            sim_sopt1_i2c04wen,
            sim_pinsel0_pwtclkps,
            sim_pinsel0_ftm2clkps,
            sim_pinsel0_ftm1clkps,
            sim_pinsel0_ftm0clkps,
            sim_pinsel0_ftm1ps1,
            sim_pinsel0_ftm1ps0,
            sim_pinsel0_ftm0ps1,
            sim_pinsel0_ftm0ps0,
            sim_pinsel0_uart0ps,
            sim_pinsel0_spi0ps,
            sim_pinsel0_i2c0ps,
            sim_pinsel0_rtcps,
            sim_pinsel0_irqps,
            sim_pinsel1_mscanps,
            sim_pinsel1_pwtin1ps,
            sim_pinsel1_pwtin0ps,
            sim_pinsel1_uart2ps,
            sim_pinsel1_uart1ps,
            sim_pinsel1_spi1ps,
            sim_pinsel1_i2c1ps,
            sim_pinsel1_ftm2ps5,
            sim_pinsel1_ftm2ps4,
            sim_pinsel1_ftm2ps3,
            sim_pinsel1_ftm2ps2,
            sim_pinsel1_ftm2ps1,
            sim_pinsel1_ftm2ps0,
            sim_scgc_acmp1,
            sim_scgc_acmp0,
            sim_scgc_adc,
            sim_scgc_irq,
            sim_scgc_kbi1,
            sim_scgc_kbi0,
            sim_scgc_uart2,
            sim_scgc_uart1,
            sim_scgc_uart0,
            sim_scgc_spi1,
            sim_scgc_spi0,
            sim_scgc_i2c1,
            sim_scgc_i2c0,
            sim_scgc_mscan,
            sim_scgc_swd,
            sim_scgc_flash,
            sim_scgc_crc,
            sim_scgc_ftm2,
            sim_scgc_ftm1,
            sim_scgc_ftm0,
            sim_scgc_pwt,
            sim_scgc_pit,
            sim_scgc_rtc,
            sim_clkdiv_outdiv1,
            sim_clkdiv_outdiv2,
            sim_clkdiv_outdiv3
         "
   ><![CDATA[
      $(init_description)
      \ttypedef $(_class)BasicInfo::Init Init;
      \t
      \t/**
      \t * Default initialisation value for $(_class)
      \t * This value is created from Configure.usbdmProject settings
      \t */
      \tstatic constexpr Init DefaultInitValue = {%initExpression
      \t};\n\n
   ]]></initialValueTemplate>

   <template namespace="usbdm">
      <![CDATA[
      \t}; // $(_class)::BasicInfo::Init\n\n
   ]]>
   </template>

   <template namespace="usbdm">
      <![CDATA[
      }; // $(_class)::BasicInfo\n\n
   ]]>
   </template>

   <xi:include href="_sim_commonTemplates.xml" />

<signals />

</peripheralPage>
