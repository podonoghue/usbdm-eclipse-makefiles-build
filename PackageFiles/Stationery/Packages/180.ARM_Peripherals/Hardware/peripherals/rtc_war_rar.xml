<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- rtc_war.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="Real-time Clock">

   <xi:include href="_mapPinsOption_on.xml"/>
   <xi:include href="_default_instance.xml"/>

   <binaryOption name="configure_rtc"
      description="Configure RTC"
      toolTip="Enables configuration of RTC during startup\n If disabled no RTC registers are accessed.">
      <choice value="0" name="Disabled" />
      <choice value="1" name="Enabled" isDefault="true" />
   </binaryOption>

   <category name="ERCLK32K Selection" description="Control source of ERCLK32K clock (nominally 32kHz)">
      <aliasOption key="/PMC/system_low_power_clock"  constant="true" optional="true" />
      <aliasOption key="/SIM/rtc_clkin_clock"         optional="true" constant="false" />
      <aliasOption key="/SIM/sim_sopt1_osc32ksel"     optional="true" constant="false" />
      <aliasOption key="/SIM/system_erclk32k_clock"   optional="true" />
   </category>
   
   <intOption name="osc_input_freq" units="Hz" min="32000" max="40000" derived="true" />

   <binaryOption name="rtc_cr_osce"
      description="Enable RTC oscillator"
      toolTip="Enable 32kHz RTC oscillator">
      <choice value="0" name="Disabled" isDefault="true" />
      <choice value="1" name="Enabled" />
   </binaryOption>
   
   <intOption name="osc_clock"
      derived="true"
      constant="true"
      units="Hz"
      disabledValue="0" />

   <binaryOption name="rtc_cr_clko"
      description="Enable RTC 32kHz Clock Output"
      toolTip="Determines if RTC 32kHz Clock is available to peripherals" >
      <choice value="1" name="Clock not output to peripherals" />
      <choice value="0" name="Clock is output to peripherals" isDefault="true" />
   </binaryOption>
      
   <intOption name="rtcclk_gated_clock"
      derived="true"
      constant="true"
      units="Hz"
      description="Frequency of RTC Peripheral Clock"
      toolTip="RTC clock available to peripherals"
      value="0" />
      
   <choiceOption name="rtc_cr_scp"
      description="Oscillator load capacitance"
      toolTip="Configures the oscillator load capacitance" >
      <choice value="0"  name="0 pF" />
      <choice value="8"  name="2 pF" />
      <choice value="4"  name="4 pF" />
      <choice value="12" name="6 pF" />
      <choice value="2"  name="8 pF" isDefault="true" />
      <choice value="10" name="10 pF" />
      <choice value="6"  name="12 pF" />
      <choice value="14" name="14 pF" />
      <choice value="1"  name="16 pF" />
      <choice value="9"  name="18 pF" />
      <choice value="5"  name="20 pF" />
      <choice value="13" name="22 pF" />
      <choice value="3"  name="24 pF" />
      <choice value="11" name="26 pF" />
      <choice value="7"  name="28 pF" />
      <choice value="15" name="30 pF" />
   </choiceOption>

   <binaryOption name="rtc_cr_um" 
      description="Update Mode"
      toolTip="Allows the SR[TCE] to be written even when the Status Register is locked.\n
         When set, the SR[TCE] can always be written if the SR[TIF] or SR[TOF] are set or if the SR[TCE] is clear" >
      <choice value="0" name="SR[TCE] cannot be written when locked" />
      <choice value="1" name="SR[TCE] can be written when locked under limited conditions" />
   </binaryOption>

   <binaryOption name="rtc_cr_sup" 
      description="Supervisor access"
      toolTip="Determines if the RTC register access is available in non-supervisor mode\n
         Non supported write accesses generate a bus error" >
      <choice value="0" name="Non-supervisor write accesses not supported" />
      <choice value="1" name="Non-supervisor write accesses supported" />
   </binaryOption>

   <binaryOption name="rtc_cr_wpe" 
      description="Wakeup Pin Enable"
      toolTip="Determines if the wakeup pin is asserted on RTC interrupt when powered down\n
         The wakeup pin is optional and not available on all devices." >
      <choice value="0" name="Wakeup pin is disabled" />
      <choice value="1" name="Wakeup pin is enabled" />
   </binaryOption>
   
   <intOption name="rtc_1hz_clock" 
      constant="true"
      derived="true"
      description="1Hz output from RTC" 
      origin="RTC 1Hz output"
      units="Hz"/>
   
   <aliasOption key="/SIM/sim_sopt2_rtcclkoutsel" constant="false" optional="true" />
   <aliasOption key="/SIM/rtc_clkout" constant="true" optional="true" />

   <template><![CDATA[
      \t//! Whether to configure RTC
      \t//! If disabled then no RTC registers are touched.
      \t//! This is useful if RTC is not powered as register access will trap.
      \tstatic constexpr bool configure_rtc = $(configure_rtc);
   
      \t//! Frequency of RTC External Clock or Crystal
      \tstatic constexpr uint32_t osc_input_freq = $(osc_input_freq)UL;
      
      \t//! Oscillator control register
      \tstatic constexpr uint32_t cr =
      \t   RTC_CR_OSCE($(rtc_cr_osce)) | // Enables 32kHz oscillator [RTC_32K]
      \t   RTC_CR_CLKO($(rtc_cr_clko)) | // Disables RTC 32kHz Clock Output
      \t   RTC_CR_UM($(rtc_cr_um))   | // Update Mode
      \t   RTC_CR_SUP($(rtc_cr_sup))  | // Supervisor access
      \t   RTC_CR_WPE($(rtc_cr_wpe))  | // Wakeup Pin Enable
      \t   RTC_CR_SCP($(rtc_cr_scp));   // RTC Oscillator load capacitance\n\n
   ]]></template>

   <intOption name="rtc_tcr_cir"
      description="Compensation Interval Register"
      toolTip="Configures the compensation interval in seconds from 1 to 256 to control how frequently the TCR should\n
		adjust the number of 32.768 kHz cycles in each second. The value written should be one less than the\n
		number of seconds (for example, write zero to configure for a compensation interval of one second). This\n
		register is double buffered and writes do not take affect until the end of the current compensation interval."
      value="0" />

   <intOption name="rtc_tcr_tcr" min="-128" max="127"
      description="Time Compensation Register"
      toolTip="Adjusts the number of 32.768 kHz clock cycles in each second.\n
         This value+32768 determines the number of clock cycles that makes up a second"
      value="0" />

   <template><![CDATA[
      \t//! RTC Time Compensation Register
      \tstatic constexpr uint32_t tcr =
      \t   RTC_TCR_CIR($(rtc_tcr_cir)) | // Compensation Interval Register
      \t   RTC_TCR_TCR($(rtc_tcr_tcr));  // Time Compensation Register\n\n
    ]]></template>     
   
   <category name="Register Locks" description="Locks RTC Registers">
	   <binaryOption name="rtc_lr_lrl" 
	      description="Lock Register Lock"
	      toolTip="Once cleared, this bit can only be set by VBAT POR or software reset." >
	      <choice value="0" name="Locked" />
	      <choice value="1" name="Unlocked"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_lr_srl" 
	      description="Status Register Lock"
	      toolTip="Once cleared, this bit can only be set by VBAT POR or software reset." >
	      <choice value="0" name="Locked" />
	      <choice value="1" name="Unlocked"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_lr_crl" 
	      description="Control Register Lock"
	      toolTip="Once cleared, this bit can only be set by VBAT POR or software reset." >
	      <choice value="0" name="Locked" />
	      <choice value="1" name="Unlocked"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_lr_tcl" 
	      description="Time Compensation Lock"
	      toolTip="Once cleared, this bit can only be set by VBAT POR or software reset." >
	      <choice value="0" name="Locked" />
	      <choice value="1" name="Unlocked"  isDefault="true" />
	   </binaryOption>
   </category>
   
   <template><![CDATA[
      \t//! RTC Lock Register
      \tstatic constexpr uint32_t lr =
      \t   RTC_LR_LRL($(rtc_lr_lrl)) | // Lock Register Lock
      \t   RTC_LR_SRL($(rtc_lr_srl)) | // Status Register Lock 
      \t   RTC_LR_CRL($(rtc_lr_crl)) | // Control Register Lock
      \t   RTC_LR_TCL($(rtc_lr_tcl));  // Time Compensation Lock\n\n
    ]]></template>     

   <category name="Write Access" description="Controls write access to RTC Registers">
	   <binaryOption name="rtc_war_ierw" 
	      description="Interrupt Enable Register Write"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Writes are ignored" />
	      <choice value="1" name="Writes allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_war_lrw" 
	      description="Lock Register Write"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Writes are ignored" />
	      <choice value="1" name="Writes allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_war_srw" 
	      description="Status Register Write"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Writes are ignored" />
	      <choice value="1" name="Writes allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_war_crw" 
	      description="Control Register Write"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Writes are ignored" />
	      <choice value="1" name="Writes allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_war_tcrw" 
	      description="Time Compensation Register Write"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Writes are ignored" />
	      <choice value="1" name="Writes allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_war_tarw" 
	      description="Time Alarm Register Write"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Writes are ignored" />
	      <choice value="1" name="Writes allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_war_tprw" 
	      description="Time Prescaler Register Write"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Writes are ignored" />
	      <choice value="1" name="Writes allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_war_tsrw" 
	      description="Time Seconds Register Write"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Writes are ignored" />
	      <choice value="1" name="Writes allowed"  isDefault="true" />
	   </binaryOption>
   </category>   
   
   <template><![CDATA[
      \t#if defined(RTC_WAR_TSRW)
      \t//! RTC Write Access Register
      \tstatic constexpr uint32_t war =
      \t   RTC_WAR_IERW($(rtc_war_ierw)) | // Interrupt Enable Register Write
      \t   RTC_WAR_LRW($(rtc_war_lrw))  | // Lock Register Write
      \t   RTC_WAR_SRW($(rtc_war_srw))  | // Status Register Write
      \t   RTC_WAR_CRW($(rtc_war_crw))  | // Control Register Write
      \t   RTC_WAR_TCRW($(rtc_war_tcrw)) | // Time Compensation Register Write
      \t   RTC_WAR_TARW($(rtc_war_tarw)) | // Time Alarm Register Write
      \t   RTC_WAR_TPRW($(rtc_war_tprw)) | // Time Prescaler Register Write
      \t   RTC_WAR_TSRW($(rtc_war_tsrw));  // Time Seconds Register Write
      \t#endif\n\n
    ]]></template>     

   <category name="Read Access" description="Controls read access to RTC Registers">
	   <binaryOption name="rtc_rar_ierr" 
	      description="Interrupt Enable Register Read"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Reads are ignored" />
	      <choice value="1" name="Reads allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_rar_lrr" 
	      description="Lock Register Read"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Reads are ignored" />
	      <choice value="1" name="Reads allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_rar_srr" 
	      description="Status Register Read"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Reads are ignored" />
	      <choice value="1" name="Reads allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_rar_crr" 
	      description="Control Register Read"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Reads are ignored" />
	      <choice value="1" name="Reads allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_rar_tcrr" 
	      description="Time Compensation Register Read"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Reads are ignored" />
	      <choice value="1" name="Reads allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_rar_tarr" 
	      description="Time Alarm Register Read"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Reads are ignored" />
	      <choice value="1" name="Reads allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_rar_tprr" 
	      description="Time Prescaler Register Read"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Reads are ignored" />
	      <choice value="1" name="Reads allowed"  isDefault="true" />
	   </binaryOption>
	   
	   <binaryOption name="rtc_rar_tsrr" 
	      description="Time Seconds Register Read"
	      toolTip="Once cleared, this bit is only set by system reset. It is not affected by VBAT POR or software reset." >
	      <choice value="0" name="Reads are ignored" />
	      <choice value="1" name="Reads allowed"  isDefault="true" />
	   </binaryOption>
   </category>
   
   <template><![CDATA[
      \t#if defined(RTC_RAR_TSRR)
      \t//! RTC Read Access Register
      \tstatic constexpr uint32_t rar =
      \t   RTC_RAR_IERR($(rtc_rar_ierr)) | // Interrupt Enable Register Read  
      \t   RTC_RAR_LRR($(rtc_rar_lrr))  | // Lock Register Read              
      \t   RTC_RAR_SRR($(rtc_rar_srr))  | // Status Register Read            
      \t   RTC_RAR_CRR($(rtc_rar_crr))  | // Control Register Read           
      \t   RTC_RAR_TCRR($(rtc_rar_tcrr)) | // Time Compensation Register Read 
      \t   RTC_RAR_TARR($(rtc_rar_tarr)) | // Time Alarm Register Read        
      \t   RTC_RAR_TPRR($(rtc_rar_tprr)) | // Time Prescaler Register Read    
      \t   RTC_RAR_TSRR($(rtc_rar_tsrr));  // Time Seconds Register Read
      \t#endif\n\n
    ]]></template>     

   <stringOption name="irq_pattern"        constant="true" value="^RTC_(Alarm|Seconds)$" hidden="true" />
   <stringOption name="irq_classHandler"   constant="true" value="%c%i::irq$1Handler" hidden="true" />
   <xi:include href="_irqOptionSubstituted.xml"/>

   <choiceOption name="rtc_year"
      description="Initial Year" 
      toolTip="Used for coldstart" >
      <choice value="2017"  name="2017" />
      <choice value="2018"  name="2018" />
      <choice value="2019"  name="2019" />
      <choice value="2020"  name="2020" />
      <choice value="2021"  name="2021" isDefault="true" />
      <choice value="2022"  name="2022" />
      <choice value="2023"  name="2023" />
      <choice value="2024"  name="2024" />
      <choice value="2025"  name="2025" />
      <choice value="2026"  name="2026" />
      <choice value="2027"  name="2027" />
      <choice value="2028"  name="2028" />
      <choice value="2029"  name="2029" />
      <choice value="2030"  name="2030" />
      <choice value="2031"  name="2031" />
      <choice value="2032"  name="2032" />
      <choice value="2033"  name="2033" />
      <choice value="2034"  name="2034" />
      <choice value="2035"  name="2035" />
      <choice value="2036"  name="2036" />
      <choice value="2037"  name="2037" />
      <choice value="2038"  name="2038" />
      <choice value="2039"  name="2039" />
   </choiceOption>

   <choiceOption name="rtc_month"
      description="Initial Month" 
      toolTip="Used for coldstart" >
      <choice value="0"    name="Jan"  isDefault="true" />
      <choice value="31"   name="Feb" />
      <choice value="59"   name="March" />
      <choice value="90"   name="April" />
      <choice value="120"  name="May" />
      <choice value="151"  name="June" />
      <choice value="181"  name="July"/>
      <choice value="212"  name="August" />
      <choice value="243"  name="September" />
      <choice value="273"  name="October" />
      <choice value="304"  name="November" />
      <choice value="335"  name="December" />
   </choiceOption>

   <intOption name="rtc_day" min="1" max="31" value="1"
      description="Initial Day of Month" 
      toolTip="Used for coldstart" />
   
   <intOption name="rtc_hour" min="0" max="23" value="12"
      description="Initial Hour of Day" 
      toolTip="Used for coldstart" />
   
   <intOption name="rtc_minute" min="0" max="59" value="0"
      description="Initial Minute of Hour" 
      toolTip="Used for coldstart" />
   
   <template><![CDATA[
      \t//! Time for cold start (corrected for 12 leap years since 1970)
      \tstatic constexpr uint32_t coldStartTime = 
      \t         (((($(rtc_year)-1970)*365UL +
      \t            ($(rtc_month)) +
      \t            ($(rtc_day)+12-1))*24 +
      \t           ($(rtc_hour)))*60 +
      \t          ($(rtc_minute)))*60;\n\n
    ]]></template>     

   <category name="Device Registers (view only)" description="RTC Register values">
      <category name="RTC CR" description="RTC Control Register">
         <aliasOption name="rtc_cr_scp" />
         <aliasOption name="rtc_cr_clko" />
         <aliasOption name="rtc_cr_osce" />
         <aliasOption name="rtc_cr_um" />
         <aliasOption name="rtc_cr_sup" />
         <aliasOption name="rtc_cr_wpe" />
      </category>   
      <category name="RTC LR" description="RTC Lock Register">
         <aliasOption name="rtc_lr_lrl" />
         <aliasOption name="rtc_lr_srl" />
         <aliasOption name="rtc_lr_crl" />
         <aliasOption name="rtc_lr_tcl" />
      </category>   
      <category name="RTC TCR" description="RTC Time Compensation Register">
         <aliasOption name="rtc_tcr_cir" />
         <aliasOption name="rtc_tcr_tcr" />
      </category>   
      <category name="RTC WAR" description="RTC Write Access Register">
         <aliasOption name="rtc_war_ierw" />
         <aliasOption name="rtc_war_lrw" />
         <aliasOption name="rtc_war_srw" />
         <aliasOption name="rtc_war_crw" />
         <aliasOption name="rtc_war_tcrw" />
         <aliasOption name="rtc_war_tarw" />
         <aliasOption name="rtc_war_tprw" />
         <aliasOption name="rtc_war_tsrw" />
      </category>   
      <category name="RTC RAR" description="RTC Read Access Register">
         <aliasOption name="rtc_rar_ierr" />
         <aliasOption name="rtc_rar_lrr" />
         <aliasOption name="rtc_rar_srr" />
         <aliasOption name="rtc_rar_crr" />
         <aliasOption name="rtc_rar_tcrr" />
         <aliasOption name="rtc_rar_tarr" />
         <aliasOption name="rtc_rar_tprr" />
         <aliasOption name="rtc_rar_tsrr" />
      </category>   
   </category>
   
   <template name="/RTC/declarations" namespace="all"  ><![CDATA[
   \t/**
   \t * Class representing $(_name)
   \t */
   \tclass $(_class) : public $(_base_class)Base_T<$(_class)Info> {};
   ]]></template>
      
   <xi:include href="_clockOption.xml"/>

   <signals/>

   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.RtcValidate">
   </validate>

   <projectActionList id = "rtc_files" >
      <copy source="Project_Headers/rtc.h"       target="Project_Headers/rtc.h"      overwrite="true"  derived="true" />
      <copy source="Startup_Code/rtc.cpp"        target="Startup_Code/rtc.cpp"       overwrite="true"  derived="true" />
      <copy source="Snippets/rtc-example.cpp"    target="Snippets/rtc-example.cpp"   overwrite="true"  derived="true" />
   </projectActionList>

   <template><![CDATA[
      \t/**
      \t * Get RTC clock frequency (internal, not masked by RTC_CR_CLKO)
      \t *
      \t * @return Clock frequency as uint32_t
      \t */
      \tstatic uint32_t getInternalClock() {
      \t   return (rtc->CR&RTC_CR_OSCE_MASK)?osc_input_freq:0;
      \t}
      
      \t/**
      \t * Get RTC clock frequency (external, masked by RTC_CR_CLKO)
      \t *
      \t * @return Clock frequency as uint32_t
      \t */
      \tstatic uint32_t getExternalClock() {
      \t   return (rtc->CR&RTC_CR_CLKO_MASK)?0:getInternalClock();
      \t}\n\n
   ]]></template>

</peripheralPage>
