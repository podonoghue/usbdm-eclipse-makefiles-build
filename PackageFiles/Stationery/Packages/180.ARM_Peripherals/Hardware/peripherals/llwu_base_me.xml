<?xml version="1.0" encoding="UTF-8"
?>
<!DOCTYPE fragment SYSTEM "_menu.dtd" >
<!-- llwu_base_me2.xml -->

<fragment xmlns:xi="http://www.w3.org/2001/XInclude" >

   <binaryOption key="llwu_me_wume_t" hidden="true"
      toolTip="Enables this peripheral to wakeup the processor">
      <choice name="Disabled" value="0" isDefault="true" />
      <choice name="Enabled"  value="1" />
   </binaryOption>
   
   <category name="Peripheral sources" description="Wakeups from peripherals">
      <binaryOption key="llwu_me_wume0" description="LPTMR"         derivedFrom="llwu_me_wume_t" />
      <binaryOption key="llwu_me_wume1" description="CMP0"          derivedFrom="llwu_me_wume_t" />
      <binaryOption key="llwu_me_wume2" description=""              derivedFrom="llwu_me_wume_t" />
      <binaryOption key="llwu_me_wume3" description=""              derivedFrom="llwu_me_wume_t" />
      <binaryOption key="llwu_me_wume4" description="TSI0"          derivedFrom="llwu_me_wume_t" />
      <binaryOption key="llwu_me_wume5" description="RTC Alarm"     derivedFrom="llwu_me_wume_t" />
      <binaryOption key="llwu_me_wume6" description=""              derivedFrom="llwu_me_wume_t" />
      <binaryOption key="llwu_me_wume7" description="RTC Seconds"   derivedFrom="llwu_me_wume_t" />
   </category>
   
   <template><![CDATA[
      \t// Module wake ups
      \tstatic constexpr uint8_t me =  
      \t   LLWU_ME_WUME0($(llwu_me_wume0:0)) |  // $(llwu_me_wume0.description)
      \t   LLWU_ME_WUME1($(llwu_me_wume1:0)) |  // $(llwu_me_wume1.description)
      \t   LLWU_ME_WUME2($(llwu_me_wume2:0)) |  // $(llwu_me_wume2.description)
      \t   LLWU_ME_WUME3($(llwu_me_wume3:0)) |  // $(llwu_me_wume3.description)
      \t   LLWU_ME_WUME4($(llwu_me_wume4:0)) |  // $(llwu_me_wume4.description)
      \t   LLWU_ME_WUME5($(llwu_me_wume5:0)) |  // $(llwu_me_wume5.description)
      \t   LLWU_ME_WUME6($(llwu_me_wume6:0)) |  // $(llwu_me_wume6.description)
      \t   LLWU_ME_WUME7($(llwu_me_wume7:0));   // $(llwu_me_wume7.description)\n\n
   ]]></template>  
    
   <template key="llwu_base_methods" namespace="all"  ><![CDATA[
      \t/* Template /LLWU/llwu_base_methods */
   
      \t/**
      \t * Configure peripheral as wake-up source
      \t *
      \t * @param[in] llwuPeripheral     Peripheral to configure
      \t * @param[in] llwuPeripheralMode Whether to enable peripheral as wake-up source
      \t */
      \tstatic void configurePeripheralSource(
      \t      LlwuPeripheral       llwuPeripheral,
      \t      LlwuPeripheralMode   llwuPeripheralMode=LlwuPeripheralMode_Enabled) {
      \t
      \t   if (llwuPeripheralMode) {
      \t      llwu->ME = llwu->ME | llwuPeripheral;
      \t   }
      \t   else {
      \t      llwu->ME = llwu->ME & (uint8_t)~llwuPeripheral;
      \t   }
      \t}
      
      \t/**
      \t * Get flag bit mask indicating wake-up peripheral sources
      \t * The mask returned correspond to (multiple) peripheral sources.
      \t * These flags are cleared through the originating peripheral.
      \t *
      \t *
      \t * Example checking source
      \t * @code
      \t *    if ((peripheralWakeupSource&LlwuPeripheral_Lptmr) != 0) {
      \t *       // Wakeup from LPTMR
      \t *    }
      \t * @endcode
      \t *
      \t * @return Bit mask
      \t */
      \tstatic uint32_t getPeripheralWakeupSources() {
      \t   return llwu->MF;
      \t}

      \t/**
      \t *  Check if peripheral is source of wake-up
      \t *  These flags are cleared through the originating peripheral.
      \t *
      \t * @param[in] llwuPeripheral  Peripheral to check
      \t *
      \t * @return false Given peripheral is not source of wake-up.
      \t * @return true  Given peripheral is source of wake-up.
      \t */
      \tstatic bool isPeripheralWakeupSource(LlwuPeripheral llwuPeripheral) {
      \t   return llwu->MF & llwuPeripheral;
      \t}\n\n
   ]]></template>
      
   <template key="llwu_base_init" namespace="all"  ><![CDATA[
      \t
      \t   /* Template /LLWU/llwu_base_init */
      
      \t   llwu->ME    = Info::me;\n
   ]]></template>

</fragment>

