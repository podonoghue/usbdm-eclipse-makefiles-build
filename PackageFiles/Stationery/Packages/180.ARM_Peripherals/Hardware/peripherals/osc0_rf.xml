<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >

<!--
      Predefined symbols generated for current peripheral
      _Baseclass FTM0 => Ftm
      _instance   FTM0 => 0
      _Class      FTM0 => Ftm0
      _NAME       FTM0 => FTM0
 -->

<!-- osc0_rf.xml -->
<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="Oscillator" >

   <xi:include href="default_instance.xml"/>

   <xi:include href="mapPinsOption.xml"/>

   <choiceOption key="rsim_control_rf_osc_en"
      typeName="OscRunMode"
      valueFormat="RSIM_CONTROL_RF_OSC_EN(%s)"
      register="control"
      description="RF Reference Oscillator Enable Select"
      toolTip="The oscillator can be enabled by a Radio link layer,\n
        by an internal SoC clock mode (MCG), by an External Pin request, or by this field">
         <choice value="0b0000"  enum="Soc"                             name="Osc controlled by SoC, PIN or link layer" />
         <choice value="0b0001"  enum="Run_Wait"                        name="Osc - Run/Wait" isDefault="true"          />
         <choice value="0b0011"  enum="Run_Wait_Stop"                   name="Osc - Run/Wait/Stop"                      />
         <choice value="0b0111"  enum="Run_Wait_Stop_Vlp_Run_Wait"      name="Osc - Run/Wait/Stop/VLPR/VLPW"            />
         <choice value="0b1111"  enum="Run_Wait_Stop_Vlp_Run_Wait_Stop" name="Osc - Run/Wait/Stop/VLPR/VLPW/VLPS"       />
      </choiceOption>

   <choiceOption key="osc_input_freq"
      enabledBy="rsim_control_rf_osc_en>0"
      target="osc_clock"
      units="Hz"
      description="Frequency of External Crystal"
      toolTip="Frequency of external crystal on RF_XTAL/RF_EXTAL pins">
         <choice value="26000000"  ref="26_MHz" name="26 MHz" />
         <choice value="32000000"  ref="32_MHz" name="32 MHz" isDefault="true" />
      </choiceOption>

   <intOption key="osc_clock"
      enabledBy="rsim_control_rf_osc_en>0"
      locked="true"
      derived="true"
      units="Hz"
      description="Frequency of RF oscillator"
      toolTip="Frequency of RF oscillator"
      value="32000000" />

   <choiceOption key="oscillatorRange"
      derived="true"
      locked="true"
      description="Oscillator Frequency Range Select"
      toolTip="This range value is determined from the crystal frequency.\n
               It some cases it may be unused and a range value suited to the FLL is used instead">
      <choice value="0" name="Low range" />
      <choice value="1" name="High range" />
      <choice value="2" name="Very High range" isDefault="true" />
      <choice value="0" name="Unconstrained by Oscillator" />
   </choiceOption>

   <intOption key="oscer_clock"
         ref="osc_clock"
         derived="true"
         units="Hz"
         description="Oscillator clock [OSCERCLK]"
         toolTip="Generated from osc_clock, available for peripherals"
         locked="true" />

   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.OscRfValidate">
   </validate>

   <projectActionList id = "osc_files" >
      <copy source="Project_Headers/osc_rf.h"  target="Project_Headers/osc.h"  overwrite="true"  derived="true" />
   </projectActionList>

   <variableTemplate variables="rsim_control_rf_osc_en"
   ><![CDATA[
      \t//! RF Reference Oscillator Enable Select
      \tstatic constexpr %paramType %registerName = %initExpression;
      \t
      \t/**
      \t * Set %description
      \t *
      \t * @param %paramName %tooltip
      \t *
      \t * @return true => OSC enable by %paramName value - Wait for OSC stabilise may be needed
      \t */
      \tstatic bool setOscillatorRunModes(%paramType %paramName) {
      \t   RSIM->CONTROL = (RSIM->CONTROL&~%mask)|%paramName;
      \t   return %paramName!=0;
      \t}
      \t
      \t/**
      \t * Initialise OSC to default settings.
      \t */
      \tstatic void defaultConfigure() {
      \t
      \t   // Configure pins if selected and not already locked
      \t   if constexpr (mapPinsOnEnable && !(MapAllPinsOnStartup || ForceLockedPins)) {
      \t      initPCRs();
      \t   }
      \t
      \t   /* Prevent XTAL_OUT_EN pin use as GPIO from generating XTAL_OUT request */
      \t   RSIM->RF_OSC_CTRL = RSIM->RF_OSC_CTRL | RSIM_RF_OSC_CTRL_RADIO_EXT_OSC_OVRD_EN_MASK;
      \t
      \t   if (!setOscillatorRunModes(%registerName)) {
      \t      return;
      \t   }
      \t
      \t   while((RSIM->CONTROL & RSIM_CONTROL_RF_OSC_READY_MASK) == 0) {
      \t      /* Wait for RF_OSC_READY */
      \t   }
      \t}\n\n
   ]]></variableTemplate>

   <template><![CDATA[
      \t//! Frequency of OSC Clock or Crystal
      \tstatic constexpr uint32_t osc_clock = $(osc_clock)UL;

      \t/**
      \t * Get OSC clock (internal, assumed available)
      \t *
      \t * @return Clock frequency as uint32_t in Hz
      \t */
      \tstatic constexpr uint32_t getOscClock() {
      \t   return osc_clock;
      \t}

      \t/**
      \t * Get OSC clock (external)
      \t *
      \t * @return Clock frequency as uint32_t in Hz
      \t */
      \tstatic uint32_t getOscerClock() {
      \t   return osc_clock;
      \t}\n\n
   ]]></template>

   <template key="/OSC_RF/declarations"  ><![CDATA[
   \t/**
   \t * Class representing $(_NAME)
   \t */
   \tclass $(_Class) : public $(_Baseclass)Base_T<$(_Info)> {};\n
   ]]></template>

   <template key="/MCG/Includes"  ><![CDATA[
   #include "osc.h"\n
   ]]></template>

   <template key="/MCG/Initialisation"  ><![CDATA[
   \tUSBDM::$(_Class)::initialise();\n
   ]]></template>

   <signals />
</peripheralPage>
