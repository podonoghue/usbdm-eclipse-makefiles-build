<?xml version="1.0" encoding="UTF-8"
?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- trgmux_s32k142.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="Trigger Multiplexor">

   <xi:include href="_default_instance.xml"/>

   <template><![CDATA[
      \t//! Base value for PCR (excluding MUX value)
      \tstatic constexpr uint32_t defaultPcrValue  = 0;\n\n
   ]]></template>
   
   <xi:include href="_mapPinsOption.xml"/>
   
   <template namespace="usbdm"><![CDATA[
   /**
    *  Trigger input selection
    */
   enum TrgmuxSelection {
      \tTrgmuxSelection_Gnd               = 0b0000000,
      \tTrgmuxSelection_Vdd               = 0b0000001,
      \tTrgmuxSelection_TrigMux_In0       = 0b0000010,
      \tTrgmuxSelection_TrigMux_In1       = 0b0000011,
      \tTrgmuxSelection_TrigMux_In2       = 0b0000100,
      \tTrgmuxSelection_TrigMux_In3       = 0b0000101,
      \tTrgmuxSelection_TrigMux_In4       = 0b0000110,
      \tTrgmuxSelection_TrigMux_In5       = 0b0000111,
      \tTrgmuxSelection_TrigMux_In6       = 0b0001000,
      \tTrgmuxSelection_TrigMux_In7       = 0b0001001,
      \tTrgmuxSelection_TrigMux_In8       = 0b0001010,
      \tTrgmuxSelection_TrigMux_In9       = 0b0001011,
      \tTrgmuxSelection_TrigMux_In10      = 0b0001100,
      \tTrgmuxSelection_TrigMux_In11      = 0b0001101,
      \tTrgmuxSelection_Cmp0_Out          = 0b0001110,
      \tTrgmuxSelection_Res0F             = 0b0001111,
      \tTrgmuxSelection_Res10             = 0b0010000,
      \tTrgmuxSelection_Lpit_Ch0          = 0b0010001,
      \tTrgmuxSelection_Lpit_Ch1          = 0b0010010,
      \tTrgmuxSelection_Lpit_Ch2          = 0b0010011,
      \tTrgmuxSelection_Lpit_Ch3          = 0b0010100,
      \tTrgmuxSelection_Lptmr0            = 0b0010101,
      \tTrgmuxSelection_Ftm0_InitTrig     = 0b0010110,
      \tTrgmuxSelection_Ftm0_ExtTrig      = 0b0010111,
      \tTrgmuxSelection_Ftm1_InitTrig     = 0b0011000,
      \tTrgmuxSelection_Ftm1_ExtTrig      = 0b0011001,
      \tTrgmuxSelection_Ftm2_InitTrig     = 0b0011010,
      \tTrgmuxSelection_Ftm2_ExtTrig      = 0b0011011,
      \tTrgmuxSelection_Ftm3_InitTrig     = 0b0011100,
      \tTrgmuxSelection_Ftm3_ExtTrig      = 0b0011101,
      \tTrgmuxSelection_Adc0_Sc1aCoco     = 0b0011110,
      \tTrgmuxSelection_Adc0_Sc1bCoco     = 0b0011111,
      \tTrgmuxSelection_Adc1_Sc1aCoco     = 0b0100000,
      \tTrgmuxSelection_Adc1_Sc1bCoco     = 0b0100001,
      \tTrgmuxSelection_Pdb0_Ch0Trig      = 0b0100010,
      \tTrgmuxSelection_Res23             = 0b0100011,
      \tTrgmuxSelection_Pdb0_PulseOut     = 0b0100100,
      \tTrgmuxSelection_Pdb1_Ch0Trig      = 0b0100101,
      \tTrgmuxSelection_Res26             = 0b0100110,
      \tTrgmuxSelection_Pdb1_PulseOut     = 0b0100111,
      \tTrgmuxSelection_Res28             = 0b0101000,
      \tTrgmuxSelection_Res29             = 0b0101001,
      \tTrgmuxSelection_Res2A             = 0b0101010,
      \tTrgmuxSelection_Rtc_Alarm         = 0b0101011,
      \tTrgmuxSelection_Rtc_Seconds       = 0b0101100,
      \tTrgmuxSelection_FlexIo_Trig0      = 0b0101101,
      \tTrgmuxSelection_FlexIo_Trig1      = 0b0101110,
      \tTrgmuxSelection_FlexIo_Trig2      = 0b0101111,
      \tTrgmuxSelection_FlexIo_Trig3      = 0b0110000,
      \tTrgmuxSelection_Lpuart0_RxData    = 0b0110001,
      \tTrgmuxSelection_Lpuart0_TxData    = 0b0110010,
      \tTrgmuxSelection_Lpuart0_RxIdle    = 0b0110011,
      \tTrgmuxSelection_Lpuart1_RxData    = 0b0110100,
      \tTrgmuxSelection_Lpuart1_TxData    = 0b0110101,
      \tTrgmuxSelection_Lpuart1_RxIdle    = 0b0110110,
      \tTrgmuxSelection_Lpi2c0_MasterTrig = 0b0110111,
      \tTrgmuxSelection_Lpi2c0_SlaveTrig  = 0b0111000,
      \tTrgmuxSelection_Res39             = 0b0111001,
      \tTrgmuxSelection_Res3A             = 0b0111010,
      \tTrgmuxSelection_Lpspi0_Frame      = 0b0111011,
      \tTrgmuxSelection_Lpspi0_RxData     = 0b0111100,
      \tTrgmuxSelection_Lpspi1_Frame      = 0b0111101,
      \tTrgmuxSelection_Lpspi1_RxData     = 0b0111110,
      \tTrgmuxSelection_SimSoftwareTrig   = 0b0111111,
      \tTrgmuxSelection_Res40             = 0b1000000,
      \tTrgmuxSelection_Res41             = 0b1000001,
      \tTrgmuxSelection_Res42             = 0b1000010,
      \tTrgmuxSelection_Lpi2c1_MasterTrig = 0b1000011,
      \tTrgmuxSelection_Lpi2c1_SlaveTrig  = 0b1000100,
      \tTrgmuxSelection_Ftm4_InitTrig     = 0b1000101,
      \tTrgmuxSelection_Ftm4_ExtTrig      = 0b1000110,
      \tTrgmuxSelection_Ftm5_InitTrig     = 0b1000111,
      \tTrgmuxSelection_Ftm5_ExtTrig      = 0b1001000,
      \tTrgmuxSelection_Ftm6_InitTrig     = 0b1001001,
      \tTrgmuxSelection_Ftm6_ExtTrig      = 0b1001010,
      \tTrgmuxSelection_Ftm7_InitTrig     = 0b1001011,
      \tTrgmuxSelection_Ftm7_ExtTrig      = 0b1001100,
      \tTrgmuxSelection_Res4D             = 0b1001101,
      \tTrgmuxSelection_Res4E             = 0b1001110,
      \tTrgmuxSelection_Res4F             = 0b1001111,
      \tTrgmuxSelection_Res50             = 0b1010000,
      \tTrgmuxSelection_Res51             = 0b1010001,
      \tTrgmuxSelection_Res52             = 0b1010010,
      \tTrgmuxSelection_Res53             = 0b1010011,
      \tTrgmuxSelection_Res54             = 0b1010100,
      \tTrgmuxSelection_Res55             = 0b1010101,
      \tTrgmuxSelection_Res56             = 0b1010110,
      \tTrgmuxSelection_Res57             = 0b1010111,
      \tTrgmuxSelection_Res58             = 0b1011000,
      \tTrgmuxSelection_Res59             = 0b1011001,
      \tTrgmuxSelection_Res5A             = 0b1011010,
      \tTrgmuxSelection_Res5B             = 0b1011011,
      \tTrgmuxSelection_Res5C             = 0b1011100,
      \tTrgmuxSelection_Res5D             = 0b1011101,
      \tTrgmuxSelection_Res5E             = 0b1011110,
      \tTrgmuxSelection_Res5F             = 0b1011111,
      \tTrgmuxSelection_Res60             = 0b1100000,
      \tTrgmuxSelection_Res61             = 0b1100001,
      \tTrgmuxSelection_Res62             = 0b1100010,
      \tTrgmuxSelection_Res63             = 0b1100011,
      \tTrgmuxSelection_Res64             = 0b1100100,
      \tTrgmuxSelection_Res65             = 0b1100101,
      \tTrgmuxSelection_Res66             = 0b1100110,
      \tTrgmuxSelection_Res67             = 0b1100111,
      \tTrgmuxSelection_Res68             = 0b1101000,
      \tTrgmuxSelection_Res69             = 0b1101001,
      \tTrgmuxSelection_Res6A             = 0b1101010,
      \tTrgmuxSelection_Res6B             = 0b1101011,
      \tTrgmuxSelection_Res6C             = 0b1101100,
      \tTrgmuxSelection_Res6D             = 0b1101101,
      \tTrgmuxSelection_Res6E             = 0b1101110,
      \tTrgmuxSelection_Res6F             = 0b1101111,
      \tTrgmuxSelection_Res70             = 0b1110000,
      \tTrgmuxSelection_Res71             = 0b1110001,
      \tTrgmuxSelection_Res72             = 0b1110010,
      \tTrgmuxSelection_Res73             = 0b1110011,
      \tTrgmuxSelection_Res74             = 0b1110100,
      \tTrgmuxSelection_Res75             = 0b1110101,
      \tTrgmuxSelection_Res76             = 0b1110110,
      \tTrgmuxSelection_Res77             = 0b1110111,
      \tTrgmuxSelection_Res78             = 0b1111000,
      \tTrgmuxSelection_Res79             = 0b1111001,
      \tTrgmuxSelection_Res7A             = 0b1111010,
      \tTrgmuxSelection_Res7B             = 0b1111011,
      \tTrgmuxSelection_Res7C             = 0b1111100,
      \tTrgmuxSelection_Res7D             = 0b1111101,
      \tTrgmuxSelection_Res7E             = 0b1111110,
      \tTrgmuxSelection_Res7F             = 0b1111111,
   };

   /**
    * Controls locking of trigger multiplexor
    */
   enum TrgmuxLock {
      \tTrgmuxLock_Off = TRGMUX_TRGMUXn_LK(0), //!< Leave trigger multiplexor unlocked
      \tTrgmuxLock_On  = TRGMUX_TRGMUXn_LK(1), //!< Lock trigger multiplexor
   };

   ]]></template>

   <template>
      <for 
       var="channel" 
       enumeration="0, 1, 2, 3"
      >
         <![CDATA[
         \t/** 
         \t * Select trigger source for DMAMUX0 Channel$(channel) Trigger
         \t *
         \t * @param[in] trgmuxSelection  Trigger source selection
         \t * @param[in] trgmuxLock       Lock trigger settings.  This is once-off operation.
         \t */
         \tstatic void setDmamuxChannel$(channel)Trigger(TrgmuxSelection trgmuxSelection, TrgmuxLock trgmuxLock=TrgmuxLock_Off) {
         \t   trgmux().TRGMUX_DMAMUX0 = (trgmux().TRGMUX_DMAMUX0 & ~TRGMUX_TRGMUXn_SEL$(channel)_MASK ) | 
         \t         TRGMUX_TRGMUXn_SEL$(channel)(trgmuxSelection) | trgmuxLock;
         \t}\n\n
         ]]>
      </for>
   </template>

   <template>
      <for 
       var="trigger" 
       enumeration="0, 1, 2, 3"
      >
         <![CDATA[
         \t/** 
         \t * Select trigger source for FLEXIO Trigger$(trigger)
         \t *
         \t * @param[in] trgmuxSelection  Trigger source selection
         \t * @param[in] trgmuxLock       Lock trigger settings.  This is once-off operation.
         \t */
         \tstatic void setFlexioTimer$(trigger)Trigger(TrgmuxSelection trgmuxSelection, TrgmuxLock trgmuxLock=TrgmuxLock_Off) {
         \t   trgmux().TRGMUX_FLEXIO = (trgmux().TRGMUX_FLEXIO & ~TRGMUX_TRGMUXn_SEL$(trigger)_MASK ) | 
         \t         TRGMUX_TRGMUXn_SEL$(trigger)(trgmuxSelection) | trgmuxLock;
         \t}\n\n
         ]]>
      </for>
   </template>

   <template>
      <for 
       var="instance:reg:mask" 
       enumeration="0:0:0, 1:0:1, 2:0:2, 3:0:3, 4:1:0, 5:1:1, 6:1:2, 7:1:3"
      >
         <![CDATA[
         \t/** 
         \t * Select trigger source for TRGMUX Out$(instance)
         \t *
         \t * @param[in] trgmuxSelection  Trigger source selection
         \t * @param[in] trgmuxLock       Lock trigger settings.  This is once-off operation.
         \t */
         \tstatic void setTrgmuxOutput$(instance)Trigger(TrgmuxSelection trgmuxSelection, TrgmuxLock trgmuxLock=TrgmuxLock_Off) {
         \t   trgmux().TRGMUX_EXTOUT$(reg) = (trgmux().TRGMUX_EXTOUT$(reg) & ~TRGMUX_TRGMUXn_SEL$(mask)_MASK ) | 
         \t         TRGMUX_TRGMUXn_SEL$(mask)(trgmuxSelection) | trgmuxLock;
         \t}\n\n
         ]]>
      </for>
   </template>

   <template>
      <for 
       var="instance" 
       enumeration="0, 1"
      >
         <for 
          var="trigNum" 
          enumeration="0, 1, 2, 3"
         ><![CDATA[
            \t/** 
            \t * Select trigger source for ADC$(instance) Trigger$(trigNum)
            \t *
            \t * @param[in] trgmuxSelection  Trigger source selection
            \t * @param[in] trgmuxLock       Lock trigger settings.  This is once-off operation.
            \t */
            \tstatic void setAdc$(instance)Trigger$(trigNum)(TrgmuxSelection trgmuxSelection, TrgmuxLock trgmuxLock=TrgmuxLock_Off) {
            \t   trgmux().TRGMUX_ADC$(instance) = (trgmux().TRGMUX_ADC$(instance) & ~TRGMUX_TRGMUXn_SEL$(trigNum)_MASK ) | 
            \t         TRGMUX_TRGMUXn_SEL$(trigNum)(trgmuxSelection) | trgmuxLock;
            \t}\n\n
            ]]>
         </for>
      </for>
   </template>

   <template>
      <for 
       var="instance" 
       enumeration="0, 1, 2, 3"
      >
         <![CDATA[
         \t/** 
         \t * Select trigger source for FTM$(instance) Hardware trigger
         \t *
         \t * @param[in] trgmuxSelection  Trigger source selection
         \t * @param[in] trgmuxLock       Lock trigger settings.  This is once-off operation.
         \t */
         \tstatic void setFtm$(instance)HardwareTrigger(TrgmuxSelection trgmuxSelection, TrgmuxLock trgmuxLock=TrgmuxLock_Off) {
         \t   trgmux().TRGMUX_FTM$(instance) = (trgmux().TRGMUX_FTM$(instance) & ~TRGMUX_TRGMUXn_SEL0_MASK ) | 
         \t         TRGMUX_TRGMUXn_SEL0(trgmuxSelection) | trgmuxLock;
         \t}
         
         \t/** 
         \t * Select trigger source for FTM$(instance) Fault0 trigger
         \t *
         \t * @param[in] trgmuxSelection  Trigger source selection
         \t * @param[in] trgmuxLock       Lock trigger settings.  This is once-off operation.
         \t */
         \tstatic void setFtm$(instance)Fault0Trigger(TrgmuxSelection trgmuxSelection, TrgmuxLock trgmuxLock=TrgmuxLock_Off) {
         \t   trgmux().TRGMUX_FTM$(instance) = (trgmux().TRGMUX_FTM$(instance) & ~TRGMUX_TRGMUXn_SEL1_MASK ) | 
         \t         TRGMUX_TRGMUXn_SEL1(trgmuxSelection) | trgmuxLock;
         \t}
         
         \t/** 
         \t * Select trigger source for FTM$(instance) Fault1 trigger
         \t *
         \t * @param[in] trgmuxSelection  Trigger source selection
         \t * @param[in] trgmuxLock       Lock trigger settings.  This is once-off operation.
         \t */
         \tstatic void setFtm$(instance)Fault1Trigger(TrgmuxSelection trgmuxSelection, TrgmuxLock trgmuxLock=TrgmuxLock_Off) {
         \t   trgmux().TRGMUX_FTM$(instance) = (trgmux().TRGMUX_FTM$(instance) & ~TRGMUX_TRGMUXn_SEL2_MASK ) | 
         \t         TRGMUX_TRGMUXn_SEL2(trgmuxSelection) | trgmuxLock;
         \t}
         
         \t/** 
         \t * Select trigger source for FTM$(instance) Fault2 trigger
         \t *
         \t * @param[in] trgmuxSelection  Trigger source selection
         \t * @param[in] trgmuxLock       Lock trigger settings.  This is once-off operation.
         \t */
         \tstatic void setFtm$(instance)Fault2Trigger(TrgmuxSelection trgmuxSelection, TrgmuxLock trgmuxLock=TrgmuxLock_Off) {
         \t   trgmux().TRGMUX_FTM$(instance) = (trgmux().TRGMUX_FTM$(instance) & ~TRGMUX_TRGMUXn_SEL3_MASK ) | 
         \t         TRGMUX_TRGMUXn_SEL3(trgmuxSelection) | trgmuxLock;
         \t}\n\n
         ]]>
      </for>
   </template>

   <template>
      <for 
       var="instance" 
       enumeration="0, 1, 2, 3"
      >
         <![CDATA[
         \t/** 
         \t * Select trigger source for LPIT0 Channel$(instance) Trigger
         \t *
         \t * @param[in] trgmuxSelection  Trigger source selection
         \t * @param[in] trgmuxLock       Lock trigger settings.  This is once-off operation.
         \t */
         \tstatic void setLpit0Channel$(instance)Trigger(TrgmuxSelection trgmuxSelection, TrgmuxLock trgmuxLock=TrgmuxLock_Off) {
         \t   trgmux().TRGMUX_LPIT0 = (trgmux().TRGMUX_LPIT0 & ~TRGMUX_TRGMUXn_SEL$(instance)_MASK ) | 
         \t         TRGMUX_TRGMUXn_SEL$(instance)(trgmuxSelection) | trgmuxLock;
         \t}\n\n
         ]]>
      </for>
   </template>

   <template>
      <for 
       var="instance" 
       enumeration="
         Cmp0,
         Lpuart0, Lpuart1, 
         Lpi2c0,
         LpSpi0, LpSpi1, 
         Lptmr0,
         Pdb0, Pdb1"
      >
         <![CDATA[
         \t/** 
         \t * Select trigger source for $(instance::toupper) Trigger
         \t *
         \t * @param[in] trgmuxSelection  Trigger source selection
         \t * @param[in] trgmuxLock       Lock trigger settings.  This is once-off operation.
         \t */
         \tstatic void set$(instance)Trigger(TrgmuxSelection trgmuxSelection, TrgmuxLock trgmuxLock=TrgmuxLock_Off) {
         \t   trgmux().TRGMUX_$(instance::toupper) = (trgmux().TRGMUX_$(instance::toupper) & ~TRGMUX_TRGMUXn_SEL0_MASK ) | 
         \t         TRGMUX_TRGMUXn_SEL0(trgmuxSelection) | trgmuxLock;
         \t}\n\n
         ]]>
      </for>
   </template>

   <signals/>
   
</peripheralPage>
