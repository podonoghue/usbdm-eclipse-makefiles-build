<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- fgpioc_mke.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="General Purpose Input/Output">

   <xi:include href="_default_instance.xml"/>

   <xi:include href="_mapPinsOption.xml"/>

   <binaryOption key="fgpioc_pdor_i7" condition="fgpioc_pdor_i7_present"
      enumStem="FgpiocPdorI7"
      description="Port Data Output" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="fgpioc_pdor_i6" condition="fgpioc_pdor_i6_present"
      enumStem="FgpiocPdorI6"
      description="Port Data Output" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="fgpioc_pdor_i5" condition="fgpioc_pdor_i5_present"
      enumStem="FgpiocPdorI5"
      description="Port Data Output" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="fgpioc_pdor_i4" condition="fgpioc_pdor_i4_present"
      enumStem="FgpiocPdorI4"
      description="Port Data Output" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="fgpioc_pdor_i3" condition="fgpioc_pdor_i3_present"
      enumStem="FgpiocPdorI3"
      description="Port Data Output" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="fgpioc_pdor_i2" condition="fgpioc_pdor_i2_present"
      enumStem="FgpiocPdorI2"
      description="Port Data Output" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="fgpioc_pdor_i1" condition="fgpioc_pdor_i1_present"
      enumStem="FgpiocPdorI1"
      description="Port Data Output" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="fgpioc_pdor_i0" condition="fgpioc_pdor_i0_present"
      enumStem="FgpiocPdorI0"
      description="Port Data Output" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <choiceOption key="fgpioc_psor_i7" condition="fgpioc_psor_i7_present"
      enumStem="FgpiocPsorI7"
      description="Port Set Output" >
      <choice name="Write 1 to set"  value="0" enum="Write1ToSet"/>
   </choiceOption>

   <choiceOption key="fgpioc_psor_i6" condition="fgpioc_psor_i6_present"
      enumStem="FgpiocPsorI6"
      description="Port Set Output" >
      <choice name="Write 1 to set"  value="0" enum="Write1ToSet"/>
   </choiceOption>

   <choiceOption key="fgpioc_psor_i5" condition="fgpioc_psor_i5_present"
      enumStem="FgpiocPsorI5"
      description="Port Set Output" >
      <choice name="Write 1 to set"  value="0" enum="Write1ToSet"/>
   </choiceOption>

   <choiceOption key="fgpioc_psor_i4" condition="fgpioc_psor_i4_present"
      enumStem="FgpiocPsorI4"
      description="Port Set Output" >
      <choice name="Write 1 to set"  value="0" enum="Write1ToSet"/>
   </choiceOption>

   <choiceOption key="fgpioc_psor_i3" condition="fgpioc_psor_i3_present"
      enumStem="FgpiocPsorI3"
      description="Port Set Output" >
      <choice name="Write 1 to set"  value="0" enum="Write1ToSet"/>
   </choiceOption>

   <choiceOption key="fgpioc_psor_i2" condition="fgpioc_psor_i2_present"
      enumStem="FgpiocPsorI2"
      description="Port Set Output" >
      <choice name="Write 1 to set"  value="0" enum="Write1ToSet"/>
   </choiceOption>

   <choiceOption key="fgpioc_psor_i1" condition="fgpioc_psor_i1_present"
      enumStem="FgpiocPsorI1"
      description="Port Set Output" >
      <choice name="Write 1 to set"  value="0" enum="Write1ToSet"/>
   </choiceOption>

   <choiceOption key="fgpioc_psor_i0" condition="fgpioc_psor_i0_present"
      enumStem="FgpiocPsorI0"
      description="Port Set Output" >
      <choice name="Write 1 to set"  value="0" enum="Write1ToSet"/>
   </choiceOption>

   <choiceOption key="fgpioc_pcor_i7" condition="fgpioc_pcor_i7_present"
      enumStem="FgpiocPcorI7"
      description="Port Clear Output" >
      <choice name="Write 1 to clear"  value="0" enum="Write1ToClear"/>
   </choiceOption>

   <choiceOption key="fgpioc_pcor_i6" condition="fgpioc_pcor_i6_present"
      enumStem="FgpiocPcorI6"
      description="Port Clear Output" >
      <choice name="Write 1 to clear"  value="0" enum="Write1ToClear"/>
   </choiceOption>

   <choiceOption key="fgpioc_pcor_i5" condition="fgpioc_pcor_i5_present"
      enumStem="FgpiocPcorI5"
      description="Port Clear Output" >
      <choice name="Write 1 to clear"  value="0" enum="Write1ToClear"/>
   </choiceOption>

   <choiceOption key="fgpioc_pcor_i4" condition="fgpioc_pcor_i4_present"
      enumStem="FgpiocPcorI4"
      description="Port Clear Output" >
      <choice name="Write 1 to clear"  value="0" enum="Write1ToClear"/>
   </choiceOption>

   <choiceOption key="fgpioc_pcor_i3" condition="fgpioc_pcor_i3_present"
      enumStem="FgpiocPcorI3"
      description="Port Clear Output" >
      <choice name="Write 1 to clear"  value="0" enum="Write1ToClear"/>
   </choiceOption>

   <choiceOption key="fgpioc_pcor_i2" condition="fgpioc_pcor_i2_present"
      enumStem="FgpiocPcorI2"
      description="Port Clear Output" >
      <choice name="Write 1 to clear"  value="0" enum="Write1ToClear"/>
   </choiceOption>

   <choiceOption key="fgpioc_pcor_i1" condition="fgpioc_pcor_i1_present"
      enumStem="FgpiocPcorI1"
      description="Port Clear Output" >
      <choice name="Write 1 to clear"  value="0" enum="Write1ToClear"/>
   </choiceOption>

   <choiceOption key="fgpioc_pcor_i0" condition="fgpioc_pcor_i0_present"
      enumStem="FgpiocPcorI0"
      description="Port Clear Output" >
      <choice name="Write 1 to clear"  value="0" enum="Write1ToClear"/>
   </choiceOption>

   <choiceOption key="fgpioc_ptor_i7" condition="fgpioc_ptor_i7_present"
      enumStem="FgpiocPtorI7"
      description="Port Toggle Output" >
      <choice name="Write 1 to toggle"  value="0" enum="Write1ToToggle"/>
   </choiceOption>

   <choiceOption key="fgpioc_ptor_i6" condition="fgpioc_ptor_i6_present"
      enumStem="FgpiocPtorI6"
      description="Port Toggle Output" >
      <choice name="Write 1 to toggle"  value="0" enum="Write1ToToggle"/>
   </choiceOption>

   <choiceOption key="fgpioc_ptor_i5" condition="fgpioc_ptor_i5_present"
      enumStem="FgpiocPtorI5"
      description="Port Toggle Output" >
      <choice name="Write 1 to toggle"  value="0" enum="Write1ToToggle"/>
   </choiceOption>

   <choiceOption key="fgpioc_ptor_i4" condition="fgpioc_ptor_i4_present"
      enumStem="FgpiocPtorI4"
      description="Port Toggle Output" >
      <choice name="Write 1 to toggle"  value="0" enum="Write1ToToggle"/>
   </choiceOption>

   <choiceOption key="fgpioc_ptor_i3" condition="fgpioc_ptor_i3_present"
      enumStem="FgpiocPtorI3"
      description="Port Toggle Output" >
      <choice name="Write 1 to toggle"  value="0" enum="Write1ToToggle"/>
   </choiceOption>

   <choiceOption key="fgpioc_ptor_i2" condition="fgpioc_ptor_i2_present"
      enumStem="FgpiocPtorI2"
      description="Port Toggle Output" >
      <choice name="Write 1 to toggle"  value="0" enum="Write1ToToggle"/>
   </choiceOption>

   <choiceOption key="fgpioc_ptor_i1" condition="fgpioc_ptor_i1_present"
      enumStem="FgpiocPtorI1"
      description="Port Toggle Output" >
      <choice name="Write 1 to toggle"  value="0" enum="Write1ToToggle"/>
   </choiceOption>

   <choiceOption key="fgpioc_ptor_i0" condition="fgpioc_ptor_i0_present"
      enumStem="FgpiocPtorI0"
      description="Port Toggle Output" >
      <choice name="Write 1 to toggle"  value="0" enum="Write1ToToggle"/>
   </choiceOption>

   <binaryOption key="fgpioc_pddr_i7" condition="fgpioc_pddr_i7_present"
      enumStem="FgpiocPddrI7"
      description="Port Data Direction" >
      <choice name="Input"       value="0" enum="Input"/>
      <choice name="Output"      value="1" enum="Output"/>
   </binaryOption>

   <binaryOption key="fgpioc_pddr_i6" condition="fgpioc_pddr_i6_present"
      enumStem="FgpiocPddrI6"
      description="Port Data Direction" >
      <choice name="Input"       value="0" enum="Input"/>
      <choice name="Output"      value="1" enum="Output"/>
   </binaryOption>

   <binaryOption key="fgpioc_pddr_i5" condition="fgpioc_pddr_i5_present"
      enumStem="FgpiocPddrI5"
      description="Port Data Direction" >
      <choice name="Input"       value="0" enum="Input"/>
      <choice name="Output"      value="1" enum="Output"/>
   </binaryOption>

   <binaryOption key="fgpioc_pddr_i4" condition="fgpioc_pddr_i4_present"
      enumStem="FgpiocPddrI4"
      description="Port Data Direction" >
      <choice name="Input"       value="0" enum="Input"/>
      <choice name="Output"      value="1" enum="Output"/>
   </binaryOption>

   <binaryOption key="fgpioc_pddr_i3" condition="fgpioc_pddr_i3_present"
      enumStem="FgpiocPddrI3"
      description="Port Data Direction" >
      <choice name="Input"       value="0" enum="Input"/>
      <choice name="Output"      value="1" enum="Output"/>
   </binaryOption>

   <binaryOption key="fgpioc_pddr_i2" condition="fgpioc_pddr_i2_present"
      enumStem="FgpiocPddrI2"
      description="Port Data Direction" >
      <choice name="Input"       value="0" enum="Input"/>
      <choice name="Output"      value="1" enum="Output"/>
   </binaryOption>

   <binaryOption key="fgpioc_pddr_i1" condition="fgpioc_pddr_i1_present"
      enumStem="FgpiocPddrI1"
      description="Port Data Direction" >
      <choice name="Input"       value="0" enum="Input"/>
      <choice name="Output"      value="1" enum="Output"/>
   </binaryOption>

   <binaryOption key="fgpioc_pddr_i0" condition="fgpioc_pddr_i0_present"
      enumStem="FgpiocPddrI0"
      description="Port Data Direction" >
      <choice name="Input"       value="0" enum="Input"/>
      <choice name="Output"      value="1" enum="Output"/>
   </binaryOption>

   <binaryOption key="fgpioc_pidr_i7" condition="fgpioc_pidr_i7_present"
      enumStem="FgpiocPidrI7"
      toolTip="Disables a pin as General Purpose Input. Corresponding Pin Data Input Register bit will read zero"
      description="Port Input Disable" >
      <choice name="Input available"   value="0" enum="InputAvailable"/>
      <choice name="Input reads as 0"  value="1" enum="InputReadsAs0"/>
   </binaryOption>

   <binaryOption key="fgpioc_pidr_i6" condition="fgpioc_pidr_i6_present"
      enumStem="FgpiocPidrI6"
      toolTip="Disables a pin as General Purpose Input. Corresponding Pin Data Input Register bit will read zero"
      description="Port Input Disable" >
      <choice name="Input available"   value="0" enum="InputAvailable"/>
      <choice name="Input reads as 0"  value="1" enum="InputReadsAs0"/>
   </binaryOption>

   <binaryOption key="fgpioc_pidr_i5" condition="fgpioc_pidr_i5_present"
      enumStem="FgpiocPidrI5"
      toolTip="Disables a pin as General Purpose Input. Corresponding Pin Data Input Register bit will read zero"
      description="Port Input Disable" >
      <choice name="Input available"   value="0" enum="InputAvailable"/>
      <choice name="Input reads as 0"  value="1" enum="InputReadsAs0"/>
   </binaryOption>

   <binaryOption key="fgpioc_pidr_i4" condition="fgpioc_pidr_i4_present"
      enumStem="FgpiocPidrI4"
      toolTip="Disables a pin as General Purpose Input. Corresponding Pin Data Input Register bit will read zero"
      description="Port Input Disable" >
      <choice name="Input available"   value="0" enum="InputAvailable"/>
      <choice name="Input reads as 0"  value="1" enum="InputReadsAs0"/>
   </binaryOption>

   <binaryOption key="fgpioc_pidr_i3" condition="fgpioc_pidr_i3_present"
      enumStem="FgpiocPidrI3"
      toolTip="Disables a pin as General Purpose Input. Corresponding Pin Data Input Register bit will read zero"
      description="Port Input Disable" >
      <choice name="Input available"   value="0" enum="InputAvailable"/>
      <choice name="Input reads as 0"  value="1" enum="InputReadsAs0"/>
   </binaryOption>

   <binaryOption key="fgpioc_pidr_i2" condition="fgpioc_pidr_i2_present"
      enumStem="FgpiocPidrI2"
      toolTip="Disables a pin as General Purpose Input. Corresponding Pin Data Input Register bit will read zero"
      description="Port Input Disable" >
      <choice name="Input available"   value="0" enum="InputAvailable"/>
      <choice name="Input reads as 0"  value="1" enum="InputReadsAs0"/>
   </binaryOption>

   <binaryOption key="fgpioc_pidr_i1" condition="fgpioc_pidr_i1_present"
      enumStem="FgpiocPidrI1"
      toolTip="Disables a pin as General Purpose Input. Corresponding Pin Data Input Register bit will read zero"
      description="Port Input Disable" >
      <choice name="Input available"   value="0" enum="InputAvailable"/>
      <choice name="Input reads as 0"  value="1" enum="InputReadsAs0"/>
   </binaryOption>

   <binaryOption key="fgpioc_pidr_i0" condition="fgpioc_pidr_i0_present"
      enumStem="FgpiocPidrI0"
      toolTip="Disables a pin as General Purpose Input. Corresponding Pin Data Input Register bit will read zero"
      description="Port Input Disable" >
      <choice name="Input available"   value="0" enum="InputAvailable"/>
      <choice name="Input reads as 0"  value="1" enum="InputReadsAs0"/>
   </binaryOption>

<!-- Grahic here -->  

   <for keys="field:name"
        values="
      fgpioc_pdor_i7:PdorI7;
      fgpioc_pdor_i6:PdorI6;
      fgpioc_pdor_i5:PdorI5;
      fgpioc_pdor_i4:PdorI4;
      fgpioc_pdor_i3:PdorI3;
      fgpioc_pdor_i2:PdorI2;
      fgpioc_pdor_i1:PdorI1;
      fgpioc_pdor_i0:PdorI0;
      fgpioc_psor_i7:PsorI7;
      fgpioc_psor_i6:PsorI6;
      fgpioc_psor_i5:PsorI5;
      fgpioc_psor_i4:PsorI4;
      fgpioc_psor_i3:PsorI3;
      fgpioc_psor_i2:PsorI2;
      fgpioc_psor_i1:PsorI1;
      fgpioc_psor_i0:PsorI0;
      fgpioc_pcor_i7:PcorI7;
      fgpioc_pcor_i6:PcorI6;
      fgpioc_pcor_i5:PcorI5;
      fgpioc_pcor_i4:PcorI4;
      fgpioc_pcor_i3:PcorI3;
      fgpioc_pcor_i2:PcorI2;
      fgpioc_pcor_i1:PcorI1;
      fgpioc_pcor_i0:PcorI0;
      fgpioc_ptor_i7:PtorI7;
      fgpioc_ptor_i6:PtorI6;
      fgpioc_ptor_i5:PtorI5;
      fgpioc_ptor_i4:PtorI4;
      fgpioc_ptor_i3:PtorI3;
      fgpioc_ptor_i2:PtorI2;
      fgpioc_ptor_i1:PtorI1;
      fgpioc_ptor_i0:PtorI0;
      fgpioc_pddr_i7:PddrI7;
      fgpioc_pddr_i6:PddrI6;
      fgpioc_pddr_i5:PddrI5;
      fgpioc_pddr_i4:PddrI4;
      fgpioc_pddr_i3:PddrI3;
      fgpioc_pddr_i2:PddrI2;
      fgpioc_pddr_i1:PddrI1;
      fgpioc_pddr_i0:PddrI0;
      fgpioc_pidr_i7:PidrI7;
      fgpioc_pidr_i6:PidrI6;
      fgpioc_pidr_i5:PidrI5;
      fgpioc_pidr_i4:PidrI4;
      fgpioc_pidr_i3:PidrI3;
      fgpioc_pidr_i2:PidrI2;
      fgpioc_pidr_i1:PidrI1;
      fgpioc_pidr_i0:PidrI0">
      <setTemplate variables="%(field)"
      ><![CDATA[
         \t/**
         \t * Set %description
         \t *
         %paramDescription
         \t */
         \tstatic void configure%(name)(%params) {
         \t   %defaultFieldExpression
         \t}\n\n
      ]]></setTemplate>
   </for>

<!--   ========== FGPIOC Init class =============================== -->

   <template key="init_description" namespace="all">
   <![CDATA[
      \t/**
      \t * Class used to do initialisation of the $(_class)
      \t *
      \t * This class has a templated constructor that accepts various values.
      \t *
      \t * @note This constructor may be used to create a const instance in Flash
      \t *
      \t * Example:
      \t * @code
      \t * static const $(_class)::Init init {
      \t *
      \t *   // Setup values
      \t *   FgpiocPdorI7_Low                          // Port Data Output,
      \t *   FgpiocPdorI6_Low                          // Port Data Output,
      \t *   FgpiocPdorI5_Low                          // Port Data Output,
      \t *   FgpiocPdorI4_Low                          // Port Data Output,
      \t *   FgpiocPdorI3_Low                          // Port Data Output,
      \t *   FgpiocPdorI2_Low                          // Port Data Output,
      \t *   FgpiocPdorI1_Low                          // Port Data Output,
      \t *   FgpiocPdorI0_Low                          // Port Data Output,
      \t *   FgpiocPsorI7_Write1ToSet                  // Port Set Output,
      \t *   FgpiocPsorI6_Write1ToSet                  // Port Set Output,
      \t *   FgpiocPsorI5_Write1ToSet                  // Port Set Output,
      \t *   FgpiocPsorI4_Write1ToSet                  // Port Set Output,
      \t *   FgpiocPsorI3_Write1ToSet                  // Port Set Output,
      \t *   FgpiocPsorI2_Write1ToSet                  // Port Set Output,
      \t *   FgpiocPsorI1_Write1ToSet                  // Port Set Output,
      \t *   FgpiocPsorI0_Write1ToSet                  // Port Set Output,
      \t *   FgpiocPcorI7_Write1ToClear                // Port Clear Output,
      \t *   FgpiocPcorI6_Write1ToClear                // Port Clear Output,
      \t *   FgpiocPcorI5_Write1ToClear                // Port Clear Output,
      \t *   FgpiocPcorI4_Write1ToClear                // Port Clear Output,
      \t *   FgpiocPcorI3_Write1ToClear                // Port Clear Output,
      \t *   FgpiocPcorI2_Write1ToClear                // Port Clear Output,
      \t *   FgpiocPcorI1_Write1ToClear                // Port Clear Output,
      \t *   FgpiocPcorI0_Write1ToClear                // Port Clear Output,
      \t *   FgpiocPtorI7_Write1ToToggle               // Port Toggle Output,
      \t *   FgpiocPtorI6_Write1ToToggle               // Port Toggle Output,
      \t *   FgpiocPtorI5_Write1ToToggle               // Port Toggle Output,
      \t *   FgpiocPtorI4_Write1ToToggle               // Port Toggle Output,
      \t *   FgpiocPtorI3_Write1ToToggle               // Port Toggle Output,
      \t *   FgpiocPtorI2_Write1ToToggle               // Port Toggle Output,
      \t *   FgpiocPtorI1_Write1ToToggle               // Port Toggle Output,
      \t *   FgpiocPtorI0_Write1ToToggle               // Port Toggle Output,
      \t *   FgpiocPddrI7_Input                        // Port Data Direction,
      \t *   FgpiocPddrI6_Input                        // Port Data Direction,
      \t *   FgpiocPddrI5_Input                        // Port Data Direction,
      \t *   FgpiocPddrI4_Input                        // Port Data Direction,
      \t *   FgpiocPddrI3_Input                        // Port Data Direction,
      \t *   FgpiocPddrI2_Input                        // Port Data Direction,
      \t *   FgpiocPddrI1_Input                        // Port Data Direction,
      \t *   FgpiocPddrI0_Input                        // Port Data Direction,
      \t *   FgpiocPidrI7_InputAvailable               // Port Input Disable,
      \t *   FgpiocPidrI6_InputAvailable               // Port Input Disable,
      \t *   FgpiocPidrI5_InputAvailable               // Port Input Disable,
      \t *   FgpiocPidrI4_InputAvailable               // Port Input Disable,
      \t *   FgpiocPidrI3_InputAvailable               // Port Input Disable,
      \t *   FgpiocPidrI2_InputAvailable               // Port Input Disable,
      \t *   FgpiocPidrI1_InputAvailable               // Port Input Disable,
      \t *   FgpiocPidrI0_InputAvailable               // Port Input Disable,
      \t * };
      \t *
      \t * // Initialise $(_class) from values specified above
      \t * $(_class)::configure(init)
      \t * @endcode
      \t */
   ]]>
   </template>

   <template namespace="usbdm">
   <![CDATA[
      class $(_class)BasicInfo {
      \t
      public:
      \t\n
   ]]>
   </template>

   <template namespace="usbdm">
   <![CDATA[
      $(init_description)
      \tclass Init {
      \t
      \tpublic:
      \t   /**
      \t    * Copy Constructor
      \t    */
      \t   constexpr Init(const Init &other) = default;
      \t
      \t   /**
      \t    * Default Constructor
      \t    */
      \t   constexpr Init() = default;
      \t\n
   ]]>
   </template>

<!--   Member variables -->

   <initialValueTemplate namespace="usbdm"
      variables="fgpioc_pdor_i7,fgpioc_pdor_i6,fgpioc_pdor_i5,fgpioc_pdor_i4,fgpioc_pdor_i3,fgpioc_pdor_i2,fgpioc_pdor_i1,fgpioc_pdor_i0"
   ><![CDATA[
      \t   /// Port Data Output Register
      \t   uint32_t pdor = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="fgpioc_psor_i7,fgpioc_psor_i6,fgpioc_psor_i5,fgpioc_psor_i4,fgpioc_psor_i3,fgpioc_psor_i2,fgpioc_psor_i1,fgpioc_psor_i0"
   ><![CDATA[
      \t   /// Port Set Output Register
      \t   uint32_t psor = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="fgpioc_pcor_i7,fgpioc_pcor_i6,fgpioc_pcor_i5,fgpioc_pcor_i4,fgpioc_pcor_i3,fgpioc_pcor_i2,fgpioc_pcor_i1,fgpioc_pcor_i0"
   ><![CDATA[
      \t   /// Port Clear Output Register
      \t   uint32_t pcor = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="fgpioc_ptor_i7,fgpioc_ptor_i6,fgpioc_ptor_i5,fgpioc_ptor_i4,fgpioc_ptor_i3,fgpioc_ptor_i2,fgpioc_ptor_i1,fgpioc_ptor_i0"
   ><![CDATA[
      \t   /// Port Toggle Output Register
      \t   uint32_t ptor = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="fgpioc_pddr_i7,fgpioc_pddr_i6,fgpioc_pddr_i5,fgpioc_pddr_i4,fgpioc_pddr_i3,fgpioc_pddr_i2,fgpioc_pddr_i1,fgpioc_pddr_i0"
   ><![CDATA[
      \t   /// Port Data Direction Register
      \t   uint32_t pddr = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="fgpioc_pidr_i7,fgpioc_pidr_i6,fgpioc_pidr_i5,fgpioc_pidr_i4,fgpioc_pidr_i3,fgpioc_pidr_i2,fgpioc_pidr_i1,fgpioc_pidr_i0"
   ><![CDATA[
      \t   /// Port Input Disable Register
      \t   uint32_t pidr = 0;\n\n
   ]]></initialValueTemplate>

<!--   Configure methods -->

   <template discardRepeats="true" key="/FGPIOC/InitMethod" namespace="all" ><![CDATA[
      \t/**
      \t * Configure FGPIOC from values specified in init
      \t *
      \t * @param init Class containing initialisation values
      \t */
      \tstatic void configure(const typename Info::Init &init) {
      \t   enable();
      \t
      \t   fgpioc->PDOR    = init.pdor;
      \t   fgpioc->PDORI    = init.pdori;
      \t   fgpioc->PSOR    = init.psor;
      \t   fgpioc->PSORI    = init.psori;
      \t   fgpioc->PCOR    = init.pcor;
      \t   fgpioc->PCORI    = init.pcori;
      \t   fgpioc->PTOR    = init.ptor;
      \t   fgpioc->PTORI    = init.ptori;
      \t   fgpioc->PDDR    = init.pddr;
      \t   fgpioc->PDDRI    = init.pddri;
      \t   fgpioc->PIDR    = init.pidr;
      \t   fgpioc->PIDRI    = init.pidri;
      \t
      \t   calibrate();
      \t}
      \t
      \t/**
      \t * Configure with default settings.
      \t * Configuration determined from Configure.usbdmProject
      \t */
      \tstatic inline void defaultConfigure() {
      \t
      \t   // Update settings
      \t   configure(Info::DefaultInitValue);
      \t}\n
   ]]></template>

<!--   Constructors -->

   <for keys="r"
      values="
            fgpioc_pdor_i7;
            fgpioc_pdor_i6;
            fgpioc_pdor_i5;
            fgpioc_pdor_i4;
            fgpioc_pdor_i3;
            fgpioc_pdor_i2;
            fgpioc_pdor_i1;
            fgpioc_pdor_i0;
            fgpioc_psor_i7;
            fgpioc_psor_i6;
            fgpioc_psor_i5;
            fgpioc_psor_i4;
            fgpioc_psor_i3;
            fgpioc_psor_i2;
            fgpioc_psor_i1;
            fgpioc_psor_i0;
            fgpioc_pcor_i7;
            fgpioc_pcor_i6;
            fgpioc_pcor_i5;
            fgpioc_pcor_i4;
            fgpioc_pcor_i3;
            fgpioc_pcor_i2;
            fgpioc_pcor_i1;
            fgpioc_pcor_i0;
            fgpioc_ptor_i7;
            fgpioc_ptor_i6;
            fgpioc_ptor_i5;
            fgpioc_ptor_i4;
            fgpioc_ptor_i3;
            fgpioc_ptor_i2;
            fgpioc_ptor_i1;
            fgpioc_ptor_i0;
            fgpioc_pddr_i7;
            fgpioc_pddr_i6;
            fgpioc_pddr_i5;
            fgpioc_pddr_i4;
            fgpioc_pddr_i3;
            fgpioc_pddr_i2;
            fgpioc_pddr_i1;
            fgpioc_pddr_i0;
            fgpioc_pidr_i7;
            fgpioc_pidr_i6;
            fgpioc_pidr_i5;
            fgpioc_pidr_i4;
            fgpioc_pidr_i3;
            fgpioc_pidr_i2;
            fgpioc_pidr_i1;
            fgpioc_pidr_i0
            ">
      <setTemplate namespace="usbdm"
         variables="%(r)"
         linePadding="xxx">
      <![CDATA[
         \t   /**
         \t    * Constructor for %description
         \t    *
         \t    * @tparam   Types
         \t    * @param    rest
         \t    *
         %comments
         \t    */
         \t   template <typename... Types>
         \t   constexpr Init(%params, Types... rest) : Init(rest...) {
         \t
         \t      %registerName = (%registerName&~%mask) | %paramExpression;
         \t   }
         \t\n
      ]]>
      </setTemplate>
   </for>
<!--   Default Initialisation value -->

   <initialValueTemplate
      separator=","
      terminator=","
      variables="
            fgpioc_pdor_i7,
            fgpioc_pdor_i6,
            fgpioc_pdor_i5,
            fgpioc_pdor_i4,
            fgpioc_pdor_i3,
            fgpioc_pdor_i2,
            fgpioc_pdor_i1,
            fgpioc_pdor_i0,
            fgpioc_psor_i7,
            fgpioc_psor_i6,
            fgpioc_psor_i5,
            fgpioc_psor_i4,
            fgpioc_psor_i3,
            fgpioc_psor_i2,
            fgpioc_psor_i1,
            fgpioc_psor_i0,
            fgpioc_pcor_i7,
            fgpioc_pcor_i6,
            fgpioc_pcor_i5,
            fgpioc_pcor_i4,
            fgpioc_pcor_i3,
            fgpioc_pcor_i2,
            fgpioc_pcor_i1,
            fgpioc_pcor_i0,
            fgpioc_ptor_i7,
            fgpioc_ptor_i6,
            fgpioc_ptor_i5,
            fgpioc_ptor_i4,
            fgpioc_ptor_i3,
            fgpioc_ptor_i2,
            fgpioc_ptor_i1,
            fgpioc_ptor_i0,
            fgpioc_pddr_i7,
            fgpioc_pddr_i6,
            fgpioc_pddr_i5,
            fgpioc_pddr_i4,
            fgpioc_pddr_i3,
            fgpioc_pddr_i2,
            fgpioc_pddr_i1,
            fgpioc_pddr_i0,
            fgpioc_pidr_i7,
            fgpioc_pidr_i6,
            fgpioc_pidr_i5,
            fgpioc_pidr_i4,
            fgpioc_pidr_i3,
            fgpioc_pidr_i2,
            fgpioc_pidr_i1,
            fgpioc_pidr_i0
         "
   ><![CDATA[
      $(init_description)
      \ttypedef $(_class)BasicInfo::Init Init;
      \t
      \t/**
      \t * Default initialisation value for $(_class)
      \t * This value is created from Configure.usbdmProject settings
      \t */
      \tstatic constexpr Init DefaultInitValue = {%initExpression
      \t};\n\n
   ]]></initialValueTemplate>

   <template namespace="usbdm">
      <![CDATA[
      \t}; // $(_class)::BasicInfo::Init\n\n
   ]]>
   </template>

   <template namespace="usbdm">
      <![CDATA[
      }; // $(_class)::BasicInfo\n\n
   ]]>
   </template>

<signals />

</peripheralPage>
