<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fragment SYSTEM "_menu.dtd" >
<!-- mapPinsOption.xml -->

<fragment xmlns:xi="http://www.w3.org/2001/XInclude">

<!--
    * General substitutions
    *  $(_NAME)         => e.g FTM2 => FTM2
    *  $(_name)         => e.g FTM2 => ftm2
    *  $(_BASENAME)     => e.g FTM0 => FTM, PTA => PT
    *  $(_basename)     => e.g FTM0 => ftm, PTA => pt
    *  $(_Class)        => e.g FTM2 => Ftm2
    *  $(_Baseclass)    => e.g FTM0 => Ftm
    *  $(_instance)     => e.g FTM0 => 0, PTA => A

   Template Rules based on attributes  info|usbdm|class|all)  "info"

   - namespace="info" (default if blank)
     Placed in Info class in pin_mapping.h

   - namespace="usbdm"
     Placed before Info class in pin_mapping.h i.e. in USBDM namespace

   - namespace="all" key="keyValue"
     Substituted anywhere for $(keyValue)

   Constants that affect this inclusion

   - Code to disable interrupts (has default of 'disableNvicInterrupts();')
        <constant name = "disable_interrupts_code" derived = "true" value = "XXXXXX"  />

   - Code to disable peripheral (has default of ' ')
        <constant name = "disable_peripheral"      derived = "true" value = "YYYYYY"  />

   - Code to enable clock (has default of 'Info::enableClock();')
        <constant name = "enable_clock"            derived = "true" value = "YYYYYY"  />

   - Code to disable clock (has default of 'Info::disableClock();')
        <constant name = "disable_clock"           derived = "true" value = "YYYYYY"  />

   <constant name = "disable_interrupts_code" derived = "true" value = "XXXXXX"  />
   <constant name = "disable_peripheral"      derived = "true" value = "YYYYYY"  />
   <constant name = "enable_clock"            derived = "true" value = "YYYYYY"  />
   <constant name = "disable_clock"           derived = "true" value = "YYYYYY"  />

 -->

   <title description="General Settings" />

   <binaryOption key="mapPinsOnEnable" condition="/PCR/mux_present"
      description="Map pins when peripheral is configured"
      toolTip="Map all allocated pins on a peripheral when the\n
               peripheral is enabled by configure() method etc">
      <choice value="false" name="Don't map pins"  />
      <choice value="true"  name="Map pins when configured"  isDefault="true"/>
   </binaryOption>

   <!-- Template is added to class within pin_mapping.h -->
   <template  condition="/PCR/mux_present" ><![CDATA[
      \t//! Map all allocated pins on a peripheral when enabled
      \tstatic constexpr bool mapPinsOnEnable = $(mapPinsOnEnable);\n\n
   ]]></template>

   <!-- Template is added to peripheral classes -->
   <template discardRepeats="true" namespace="all" key="/$(_BASENAME)/classInfo" condition="/PCR/mux_present" ><![CDATA[
      // Template /$(_BASENAME)/classInfo

      \t/**
      \t * Configures all mapped pins associated with $(_BASENAME)
      \t *
      \t * @note Locked pins will be unaffected
      \t */
      \tstatic void configureAllPins() {
      \t
      \t   // Configure pins if selected and not already locked
      \t   if constexpr (Info::mapPinsOnEnable) {
      \t      Info::initPCRs();
      \t   }
      \t}

      \t/**
      \t * Disabled all mapped pins associated with $(_BASENAME)
      \t *
      \t * @note Only the lower 16-bits of the PCR registers are modified
      \t *
      \t * @note Locked pins will be unaffected
      \t */
      \tstatic void disableAllPins() {
      \t
      \t   // Disable pins if selected and not already locked
      \t   if constexpr (Info::mapPinsOnEnable) {
      \t      Info::clearPCRs();
      \t   }
      \t}
      \t\n
   ]]></template>

   <!-- Template is added to peripheral classes -->
   <template discardRepeats="true" namespace="all" key="/$(_BASENAME)/classInfo" condition="!/PCR/mux_present" ><![CDATA[
      // Template mapPinsOption_on.xml

      \t/**
      \t * Configures all mapped pins associated with $(_BASENAME)
      \t *
      \t * @note Locked pins will be unaffected
      \t */
      \tstatic void configureAllPins() {
      \t
      \t   // Configure pins if selected and not already locked
      \t   if constexpr (Info::mapPinsOnEnable) {
      \t   //   Info::initPCRs();
      \t   }
      \t}

      \t/**
      \t * Disabled all mapped pins associated with $(_BASENAME)
      \t *
      \t * @note Only the lower 16-bits of the PCR registers are modified
      \t *
      \t * @note Locked pins will be unaffected
      \t */
      \tstatic void disableAllPins() {
      \t
      \t   // Disable pins if selected and not already locked
      \t   if constexpr (Info::mapPinsOnEnable) {
      \t   //   Info::clearPCRs();
      \t   }
      \t}
      \t
   ]]></template>

   <!-- Template is added to peripheral classes -->
   <template discardRepeats="true" namespace="all" key="/$(_BASENAME)/classInfo" ><![CDATA[

      \t/**
      \t * Basic enable of $(_BASENAME)
      \t * Includes enabling clock and configuring all mapped pins if mapPinsOnEnable is selected in configuration
      \t */
      \tstatic void enable() {
      \t   $(enable_clock: )
      \t   configureAllPins();
      \t}

      \t/**
      \t * Disables the clock to $(_BASENAME) and all mapped pins
      \t */
      \tstatic void disable() {
      \t   $(disable_interrupts_code: )
      \t   $(disable_peripheral: )
      \t   disableAllPins();
      \t   $(disable_clock: )
      \t}
      // End Template mapPinsOption_on.xml\n
   ]]></template>

</fragment>
