<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- sim_mkl46z4.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="SIM">

   <!--                                   RUN        VLPR     -->
   <constant key="MCGOUTCLK_max"  value="100MHz,     4MHz"   type="int"    hidden="false"/>
   <constant key="MCGFLLCLK_max"  value=" 48MHz,     0MHz"   type="int"    hidden="false"/>
   <constant key="MCGPLLCLK_max"  value="100MHz,     0MHz"   type="int"    hidden="false"/>
   <constant key="UART_max"       value=" 48MHz,     4MHz"   type="int"    hidden="false"/>
   <constant key="TPM_max"        value=" 48MHz,     4MHz"   type="int"    hidden="false"/>

   <xi:include href="_default_instance.xml"/>

   <constant key="llwu_device_list"
      description="LLWU Wakeup sources"
      type="String"
      value="&quot;LPTMR0;CMP0;;;TSI0;RTC_Alarm;;RTC_Seconds&quot;" />

   <!-- Clock divider -->
   <constant key="clock_divider_type" type="Integer" value="2" />

   <!-- Indicate RTC arrangement: OSC0/RTC(OSC1) share XTAL/EXTAL pins -->
   <binaryOption key="RtcForcing"
      constant="true"
      derived="true"
      ref="(/MCG/oscMode==/OscMode_RTC_Controlled)?1:0"
      description="RTC control of OSC0"
      toolTip="Indicates if OSC0 is being controlled by RTC which shares XTAL/EXTAL pins">
      <choice value="0" name="OSC0 is independent"        isDefault="true" />
      <choice value="1" name="OSC0 is controlled by RTC"                   />
   </binaryOption>

   <xi:include href="_simCommon.xml"/>

   <category name="COPC" description="COP Control Register">

      <choiceOption key="sim_copc_copt"
         description="COP Watchdog Timeout"
         enumStem="SimCopDuration"
         valueFormat="SIM_COPC_COPCLKS(%s),SIM_COPC_COPT(%s)"
         toolTip="Selects the Computer Operating Properly Timeout\n
                  This is a write-once field" >
         <choice value="0,0" enum="Disabled"          name="Disabled" />
         <choice value="0,1" enum="32_ms"             name="Timeout after 2^5 LPO (1kHz) cycles" />
         <choice value="0,2" enum="256_ms"            name="Timeout after 2^8 LPO (1kHz) cycles" />
         <choice value="0,3" enum="1024_ms"           name="Timeout after 2^10 LPO (1kHz) cycles" />
         <choice value="1,1" enum="8192_BusCycles"    name="Timeout after 2^13 bus clock cycles" />
         <choice value="1,2" enum="65536_BusCycles"   name="Timeout after 2^16 bus clock cycles" />
         <choice value="1,3" enum="262144_BusCycles"  name="Timeout after 2^18 bus clock cycles" />
      </choiceOption>

      <binaryOption key="sim_copc_copw"
         enabledBy="sim_copc_copt&gt;3"
         enumStem="SimCopMode"
         description="COP Windowed Mode"
         toolTip="Windowed mode is only supported when COP is using bus clock\n
                  The COP window is opened three quarters through the timeout period\n
                  This is a write-once field">
         <choice value="0"  enum="Normal"     name="Normal Mode" isDefault="true" />
         <choice value="1"  enum="WindowMode" name="Windowed Mode" />
      </binaryOption>

   </category>

   <intOption key="system_usb_clkin_clock"
      hidden="true"
      constant="true"
      origin="USB Clock In pin"
      units="Hz"
      description="Frequency of External USB Clock"
      toolTip="Externally provided clock for USB on USB_CLKIN"
      value="0" />

   <category name="SOPT1" description="RTC clocks" >

      <aliasOption key="rtc_clkin_clock" optional="true" constant="false" />

      <aliasOption key="sim_sopt1_osc32ksel" constant="false" />
      <aliasOption key="system_erclk32k_clock" />

      <choiceOption key="sim_sopt1_usbpower" condition="sim_sopt1_usbregen_present &amp;&amp; sim_sopt1_usbsstby_present &amp;&amp; sim_sopt1_usbvstby_present"
         valueFormat="SIM_SOPT1_USBREGEN(%s),SIM_SOPT1_USBSSTBY(%s),SIM_SOPT1_USBVSTBY(%s)"
         enumStem="SimUsbPower"
         description="USB voltage regulator power control"
         toolTip="Controls when the USB voltage regulator is enabled in\n
                  (RUN), (STOP, VLPS, LLS and VLLS) or (VLPR and VLPW) modes">
         <choice value="0,0,0"  name="Disabled in all modes"         enum="Disabled"               />
         <choice value="1,0,0"  name="Enabled in all modes"          enum="EnabledInAll"           isDefault="true" />
         <choice value="1,1,0"  name="Enabled in run and low power"  enum="EnabledInRun_LowPower"  />
         <choice value="1,0,1"  name="Enabled in run and stop"       enum="EnabledInRun_Stop"      />
         <choice value="1,1,1"  name="Enabled in run only"           enum="EnabledInRun"           />
      </choiceOption>
   </category>

   <category name="SOPT2" description="Clock Gating">

      <aliasOption key="sim_sopt2_rtcclkoutsel"  optional="true" constant="false"/>
      <aliasOption key="rtc_clkout"              optional="true" />

      <aliasOption key="sim_sopt2_pllfllsel[]"     constant="false" />
      <aliasOption key="system_peripheral_clock[]" optional="true" />

      <aliasOption key="sim_sopt2_usbsrc[]" constant="false" />
      <aliasOption key="system_usbfs_clock[]" />

      <aliasOption key="/OSC0/oscer_clock"               optional="true" />
      <aliasOption key="/MCG/system_mcgirclk_clock[]"    optional="true" />
   </category>

   <category name="SOPT4" description="TPM signals">
      <for keys="p" values="0;1;2">
         <binaryOption key="sim_sopt4_tpm%(p)clksel" condition="sim_sopt4_tpm%(p)clksel_present"
            enumStem="SimTpm%(p)ClkSel"
            description="TPM %(p) External Clock Pin "
            toolTip="External pin used to drive the clock to the TPM module">
            <choice value="0"  name="TPM_CLKIN0 pin" enum="0" isDefault="true" />
            <choice value="1"  name="TPM_CLKIN1 pin" enum="1" />
         </binaryOption>
      </for>

      <for keys="p" values="1;2">
         <choiceOption key="sim_sopt4_tpm%(p)ch0src" condition="sim_sopt4_tpm%(p)ch0src_present"
            enumStem="SimTpm%(p)Ch0Src"
            description="TPM %(p) channel 0 input capture source"
            toolTip="Source for TPM channel input capture\n
               NOTE: When the TPM is not in input capture mode, clear this field">
            <choice value="0" name="TPM CH0 signal"            enum="IcPin"  isDefault="true" />
            <choice value="1" name="CMP0 output"               enum="Cmp0"   />
            <choice value="3" name="USB start of frame pulse"  enum="UsbSof" condition="%(p)==1" />
         </choiceOption>
      </for>
   </category>

   <category name="SOPT5" description="UART signals">

      <for keys="n" values="0;1;2">
         <for keys   = "name:Name:NAME"
              values = "uart%(n)   : Uart%(n)   : UART%(n);
                        lpuart%(n) : Lpuart%(n) : LPUART%(n)" >
            <binaryOption key="sim_sopt5_%(name)ode" condition="sim_sopt5_%(name)ode_present"
               enumStem="Sim%(Name)Drive"
               description="%(NAME) Open Drain"
               toolTip="Enables Open Drain output">
               <choice value="0" name="Push-pull"  enum="PushPull"  />
               <choice value="1" name="Open-drain" enum="OpenDrain" />
            </binaryOption>

            <choiceOption key="sim_sopt5_%(name)rxsrc" condition="sim_sopt5_%(name)rxsrc_present"
               enumStem="Sim%(Name)RxSrc"
               description="%(NAME) receive data source"
               toolTip="Source for the %(NAME) receive data">
               <choice value="0" name="Rx pin"        enum="RxPin"  isDefault="true" />
               <choice value="1" name="CMP0 output"   enum="Cmp0"   />
            </choiceOption>

            <choiceOption key="sim_sopt5_%(name)txsrc" condition="sim_sopt5_%(name)txsrc_present"
               enumStem="Sim%(Name)TxSrc"
               description="%(NAME) transmit data source"
               toolTip="Source for the %(NAME) transmit data">
               <choice value="0" name="Tx pin" isDefault="true"             enum="Direct" />
               <choice value="1" name="Tx pin modulated by TPM1 channel 0"  enum="ModulatedByTpm1Ch0" />
               <choice value="2" name="Tx pin modulated by TPM2 channel 0"  enum="ModulatedByTpm2Ch0" condition="/TPM2/$present" />
            </choiceOption>
         </for>
      </for>
   </category>

   <category name="SOPT7" description="ADC signals">
      <for keys="adc" values="0;1">
         <choiceOption key="sim_sopt7_adc%(adc)trigger" condition="sim_sopt7_adc%(adc)alttrgen_present"
            enumStem="SimAdc%(adc)TriggerMode"
            valueFormat="SIM_SOPT7_ADC%(adc)ALTTRGEN(%s),SIM_SOPT7_ADC%(adc)PRETRGSEL(%s)"
            description="ADC%(adc) trigger mode"
            toolTip="Alternative conversion triggers for ADC\n
               _Tpm              - ADC is triggered by TPM. Pre-triggers are TPM channel 0 (A) and channel 1 (B)\n
               _Alt_PreTrigger_0 - ADC is triggered by SimAdc%(adc)Trigger selection and uses pretrigger 0 = A (SC1[0]/R[0])\n
               _Alt_PreTrigger_1 - ADC is triggered by SimAdc%(adc)Trigger selection and uses pretrigger 1 = B (SC1[1]/R[1])" >
            <choice value="0,0"   name="Triggered by TPM Ch0 and Ch1" enum="Tpm"  isDefault="true" />
            <choice value="1,0"   name="Pre-trigger 0 = A (SC1[0])"   enum="Alt_PreTrigger_0" />
            <choice value="1,1"   name="Pre-trigger 1 = B (SC1[1])"   enum="Alt_PreTrigger_1" />
         </choiceOption>

         <choiceOption key="sim_sopt7_adc%(adc)trgsel" condition="sim_sopt7_adc%(adc)pretrgsel_present"
            enumStem="SimAdc%(adc)TriggerSrc"
            description="ADC%(adc) trigger source"
            toolTip="ADC Trigger source in STOP and VLPS modes, or when ADC Alternative Trigger is active">
            <choice value="0"  name="External trigger pin input (EXTRG_IN)"   enum="External"     isDefault="true" />
            <choice value="1"  name="CMP 0 output"                            enum="Cmp0"         condition="/CMP0/$present"   />
            <choice value="2"  name="CMP 1 output"                            enum="Cmp1"         condition="/CMP1/$present"   />
            <choice value="3"  name="CMP 2 output"                            enum="Cmp2"         condition="/CMP1/$present"   />
            <choice value="4"  name="PIT trigger 0"                           enum="PitCh0"       condition="/PIT/$present"    />
            <choice value="5"  name="PIT trigger 1"                           enum="PitCh1"       condition="/PIT/$present"    />
            <choice value="8"  name="TPM0 trigger"                            enum="Tpm0"         condition="/TPM0/$present"   />
            <choice value="9"  name="TPM1 trigger"                            enum="Tpm1"         condition="/TPM1/$present"   />
            <choice value="10" name="TPM2 trigger"                            enum="Tpm2"         condition="/TPM2/$present"   />
            <choice value="12" name="RTC alarm"                               enum="RtcAlarm"     condition="/RTC/$present"    />
            <choice value="13" name="RTC seconds"                             enum="RtcSeconds"   condition="/RTC/$present"    />
            <choice value="14" name="LPTMR trigger"                           enum="Lptmr"        condition="/LPTMR0/$present" />
         </choiceOption>
      </for>
   </category>

   <constant key="plldivider" type="Integer" value="2" />

   <for keys="n" dim="numberOfClockSettings" >
      <aliasCategoryOption key="/MCG/ClockConfig[%(n)]" derived="true" constant="true" >

         <aliasOption key="/MCG/enableClockConfiguration[%(n)]" constant="false" />
         <aliasOption key="/SMC/smc_pmctrl_runm[%(n)]"          constant="false" />

         <category name="Peripheral Clocks" description="Peripheral Clock Selection">
            <choiceOption key="sim_sopt2_clkoutsel[%(n)]" condition="sim_sopt2_clkoutsel_present"
               target="clockOut[%(n)]"
               enumStem="SimClkoutSel"
               description="CLKOUT pin clock"
               toolTip="Clock to output on the CLKOUT pin" >
               <choice value="0"  name="Disabled0"           ref="disabled"                         enum="Unused0"     />
               <choice value="1"  name="Disabled1"           ref="disabled"                         enum="Unused1"      />
               <choice value="2"  name="Bus clock"           ref="system_bus_clock[%(n)]"           enum="BusClk"       isDefault="true" />
               <choice value="3"  name="LPO clock (1 kHz)"   ref="/PMC/system_low_power_clock"      enum="LpoClk"       />
               <choice value="4"  name="MCGIRCLK"            ref="/MCG/system_mcgirclk_clock[%(n)]" enum="McgIrClk"     condition="!/MCG/mcg_mc_lirc_div2_present" />
               <choice value="4"  name="LIRC_CLK (8/2 MHz)"  ref="/MCG/system_lirc_clock[%(n)]"     enum="McgLirClk"    condition="/MCG/mcg_mc_lirc_div2_present"    />
               <choice value="5"  name="Disabled5"           ref="disabled"                         enum="Unused5"      />
               <choice value="6"  name="OSCERCLK0"           ref="/OSC0/oscer_clock"                enum="OscerClk0"    />
               <choice value="7"  name="IRC 48 MHz clock"    ref="system_irc48m_clock[%(n)]"        enum="Irc48MClk"   condition="system_irc48m_clock[%(n)]"  />
               <choice value="7"  name="Disabled7"           ref="disabled"                         enum="Unused7"     condition="!system_irc48m_clock[%(n)]" />
            </choiceOption>

            <intOption key="clockOut[%(n)]" condition="sim_sopt2_clkoutsel_present"
               derived="true"
               constant="true"
               units="Hz"
               description="Clock out"
               toolTip="Clock available on CLKOUT pin" />

            <choiceOption key="sim_sopt2_pllfllsel[%(n)]"
               enumStem="SimPeripheralClockSource"
               target="system_peripheral_clock[%(n)]"
               description="Peripheral Clock"
               toolTip="Clock for various peripherals (LPUART, TPM etc.)\n
                        If there is a peripheral clock divider then this is the\n
                        Frequency of the undivided peripheral clock">
               <choice value="0"  name="MCGFLLCLK clock"   ref="/MCG/system_mcgfllclk_clock[%(n)]"     enum="McgFllClk"  code="SystemMcgFllClock"   isDefault="true" />
               <choice value="1"  name="MCGPLLCLK clock/2" ref="(/MCG/system_mcgpllclk_clock[%(n)])/2" enum="McgPllClk"  code="SystemMcgPllClock/2" />
            </choiceOption>

            <intOption key="system_peripheral_clock[%(n)]"
               derived="true"
               constant="true"
               units="Hz"
               description="Peripheral Clock frequency"
               toolTip="Frequency of Peripheral Clock available to various peripherals"  />

            <choiceOption key="sim_sopt2_usbsrc[%(n)]" condition="sim_sopt2_usbsrc_present"
               target="system_usbfs_clock[%(n)]"
               enumStem="SimUsbFullSpeedClockSource"
               description="USB Clock"
               toolTip="Source for the USB clock">
               <choice value="0"  name="External bypass clock (USB_CLKIN)" enum="External"      ref="system_usb_clkin_clock"           />
               <choice value="1"  name="Peripheral Clock"                  enum="PeripheralClk" ref="system_peripheral_clock[%(n)]"    isDefault="true" />
            </choiceOption>

            <aliasOption key="system_usb_clkin_clock" constant="false" optional="true" />

            <intOption key="system_usbfs_clock[%(n)]"  condition="sim_sopt2_usbsrc_present"
               errorPropagate="error"
               derived="true"
               constant="true"
               units="Hz"
               description="USB Full Speed Clock"
               toolTip="Frequency of clock to USB full speed controller"
               value="48_MHz" min="48_MHz" max="48_MHz" disabledValue="0" />

            <for keys="u : name              : code            : ref"
               values="1 : System bus clock : SystemBusClock : system_bus_clock[%(n)];
                       2 : System bus clock : SystemBusClock : system_bus_clock[%(n)]" >

               <choiceOption key="system_uart%(u)_fixedclocksource[%(n)]"
                  target="system_uart%(u)_clock[%(n)]"
                  constant="true"
                  derived="true"
                  description="UART%(u) Clock source"
                  toolTip="Fixed clock source for UART (%(code))" >
                  <choice value="0"  name="%(name)" ref="%(ref)" code="%(code)" />
               </choiceOption>

               <intOption key="system_uart%(u)_clock[%(n)]"
                  constant="true"
                  derived="true"
                  units="Hz"
                  description="UART%(u) Clock frequency"
                  toolTip="Frequency of clock to UART%(u)"
                  value="0" />
            </for>

            <for keys="p" values="0;1">
               <for keys   = "name       : Name       : NAME       : bNAME"
                    values = "uart%(p)   : Uart%(p)   : UART%(p)   : UART  ;
                              lpuart%(p) : Lpuart%(p) : LPUART%(p) : LPUART" >
                  <choiceOption key="sim_sopt2_%(name)src[%(n)]" condition="sim_sopt2_%(name)src_present"
                     enumStem="Sim%(Name)ClockSource"
                     target="system_%(name)_clock[%(n)]"
                     description="%(NAME) Clock"
                     toolTip="Clock source for the transmit and receive clock" >
                     <choice value="0"  name="Disabled"                      ref="disabled"                          enum="Disabled"        code="0"                         />
                     <choice value="1"  name="Peripheral Clock"              ref="system_peripheral_clock[%(n)]"     enum="PeripheralClk"   code="getPeripheralClock()"       isDefault="true"/>
                     <choice value="2"  name="OSCERCLK clock"                ref="/OSC0/oscer_clock"                 enum="OscerClk"        code="Osc0Info::getOscerClock()" />
                     <choice value="3"  name="MCGIRCLK clock"                ref="/MCG/system_mcgirclk_clock[%(n)]"  enum="McgIrClk"        code="McgInfo::getMcgIrClock()"  />
                  </choiceOption>

                  <intOption key="system_%(name)_clock[%(n)]" condition="sim_sopt2_%(name)src_present"
                     max="%(bNAME)_max[/SMC/smc_pmctrl_runm[%(n)]]"
                     derived="true"
                     constant="true"
                     units="Hz"
                     description="%(NAME) Clock frequency"
                     toolTip="Frequency of clock to %(NAME)"
                     value="0" />
               </for>
            </for>

            <choiceOption key="sim_sopt2_tpmsrc[%(n)]" condition="sim_sopt2_tpmsrc_present"
               enumStem="SimTpmClockSource"
               target="system_tpm_clock[%(n)]"
               description="TPM Clock source"
               toolTip="Clock source for the TPM counter clock">
               <choice value="0"  name="Disabled"                      ref="disabled"                          enum="Disabled"        code="0"                         />
               <choice value="1"  name="Peripheral Clock"              ref="system_peripheral_clock[%(n)]"     enum="PeripheralClk"   code="getPeripheralClock()"      isDefault="true" />
               <choice value="2"  name="OSCERCLK clock"                ref="/OSC0/oscer_clock"                 enum="OscerClk"        code="Osc0Info::getOscerClock()" />
               <choice value="3"  name="MCGIRCLK clock"                ref="/MCG/system_mcgirclk_clock[%(n)]"  enum="McgIrClk"        code="McgInfo::getMcgIrClock()"  />
            </choiceOption>

            <intOption key="system_tpm_clock[%(n)]" condition="sim_sopt2_tpmsrc_present"
               max="TPM_max[/SMC/smc_pmctrl_runm[%(n)]]"
               derived="true"
               constant="true"
               units="Hz"
               description="TPM Clock frequency"
               toolTip="Frequency of clock to TPM" />

            <choiceOption key="sim_sopt2_flexiosrc[%(n)]" condition="sim_sopt2_flexiosrc_present"
               target="system_flexio_clock[%(n)]"
               enumStem="SimFlexioClockSource"
               description="FLEXIO Clock select"
               toolTip="Selects the clock source for the FlexIO transmit and receive clock">
               <choice value="0"  name="Disabled"                      ref="disabled"                          enum="Disabled"        code="0"                         />
               <choice value="1"  name="Peripheral Clock"              ref="system_peripheral_clock[%(n)]"     enum="PeripheralClk"   code="getPeripheralClock()"      isDefault="true" />
               <choice value="2"  name="OSCERCLK clock"                ref="/OSC0/oscer_clock"                 enum="OscerClk"        code="Osc0Info::getOscerClock()" />
               <choice value="3"  name="MCGIRCLK clock"                ref="/MCG/system_mcgirclk_clock[%(n)]"  enum="McgIrClk"        code="McgInfo::getMcgIrClock()"  />
            </choiceOption>

            <intOption key="system_flexio_clock[%(n)]" condition="sim_sopt2_flexiosrc_present"
               constant="true"
               derived="true"
               units="Hz"
               description="FLEXIO Clock frequency"
               toolTip="Frequency of clock to FLEXIO"
               value="0" />

         </category>

         <aliasOption key="/MCG/system_mcgoutclk_clock[%(n)]" />

         <intOption key="system_core_clock[%(n)]" condition="sim_clkdiv1_outdiv1_present"
            ref="(/MCG/system_mcgoutclk_clock[%(n)])/((sim_clkdiv1_outdiv1[%(n)])+1)"
            derived="true"
            isNamedClock="true"
            units="Hz"
            description="System Core Clock"
            toolTip="Clocks the ARM Cortex-M4 core and bus masters"
            value="48_MHz"
            disabledValue="0" />

         <intOption key="system_bus_clock[%(n)]" condition="sim_clkdiv1_outdiv4_present"
            ref="(system_core_clock[%(n)])/(sim_clkdiv1_outdiv4[%(n)]+1)"
            derived="true"
            isNamedClock="true"
            units="Hz"
            description="System Bus Clock"
            toolTip="Clocks the bus slaves and peripherals\n
                     Must be &lt;= Core Clock frequency"
            value="24_MHz"
            disabledValue="0" />

         <category name="CLKDIV1" description="System Clock Dividers">
            <choiceOption key="sim_clkdiv1_outdiv1[%(n)]"  condition="sim_clkdiv1_outdiv1_present"
               constant="true"
               description="Core &amp; System Clock Divider (OUTDIV1) - Divide by [1-16]"
               toolTip="Clocks the ARM Cortex-M4 core and bus masters\n
                        Divides MCGOUTCLK Clock to generate system_core_clock.">
               <choice value="0"   name="/1" />
               <choice value="1"   name="/2" isDefault="true" />
               <choice value="2"   name="/3" />
               <choice value="3"   name="/4" />
               <choice value="4"   name="/5" />
               <choice value="5"   name="/6" />
               <choice value="6"   name="/7" />
               <choice value="7"   name="/8" />
               <choice value="8"   name="/9" />
               <choice value="9"   name="/10" />
               <choice value="10"  name="/11" />
               <choice value="11"  name="/12" />
               <choice value="12"  name="/13" />
               <choice value="13"  name="/14" />
               <choice value="14"  name="/15" />
               <choice value="15"  name="/16" />
            </choiceOption>

            <choiceOption key="sim_clkdiv1_outdiv4[%(n)]"  condition="sim_clkdiv1_outdiv4_present"
               constant="true"
               derivedFrom="sim_clkdiv1_outdiv1[%(n)]"
               description="Flash Clock Divider (OUTDIV4) - Divide by [1-16]"
               toolTip="Clocks the flash memory\n
                        Divides Core Clock to generate system_flash_clock." />
         </category>
      </aliasCategoryOption>
   </for>

   <template><![CDATA[
      \t/**
      \t * Update system clock values
      \t *
      \t * @param systemClock Frequency of clock provided to system clock dividers
      \t */
      \tstatic void updateSystemClocks(unsigned systemClock) {
      \t
      \t   SystemCoreClock    = systemClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV1_MASK)>>SIM_CLKDIV1_OUTDIV1_SHIFT)+1);
      \t   SystemBusClock     = SystemCoreClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV4_MASK)>>SIM_CLKDIV1_OUTDIV4_SHIFT)+1);
      \t}\n\n
   ]]></template>

   <xi:include href="_sim_commonTemplates.xml" />

   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.SimValidateMKL" dim="numberOfClockSettings">
      <param type="long" value="48MHz"  />     <!-- RUN Core          -->
      <param type="long" value="24MHz"  />     <!-- RUN Bus           -->

      <param type="long" value="4MHz"   />     <!-- VLPR Core         -->
      <param type="long" value="1MHz"   />     <!-- VLPR Bus          -->
   </validate>

   <xi:include href="_simFiles-MKL.xml"/>

</peripheralPage>
