<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- flexbus_def.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="External Bus Interface">

   <constant key="irq_parameters"            type="String"  value="&quot;&quot;"  />
   <constant key="irq_dummy_parameters"      type="String"  value="&quot;&quot;"  />
   <constant key="irq_call"                  type="String"  value="&quot;&quot;"  />
   <constant key="generateDefault"           type="Boolean" value="false"         />
   <constant key="configureInStartupDefault" type="Boolean" value="false"         />
   <xi:include href="enablePeripheral.xml"  />
   <title />

<!--
    * General substitutions
    *  $(_NAME)         => e.g FTM2 => FTM2
    *  $(_name)         => e.g FTM2 => ftm2
    *  $(_BASENAME)     => e.g FTM0 => FTM, PTA => PT
    *  $(_basename)     => e.g FTM0 => ftm, PTA => pt
    *  $(_Class)        => e.g FTM2 => Ftm2
    *  $(_Baseclass)    => e.g FTM0 => Ftm
    *  $(_instance)     => e.g FTM0 => 0, PTA => A
-->

<!--
    * Template substitutions
    *
    * <li>%paramExpression            Parameters ORed together e.g. adcPretrigger|adcRefSel
    * <li>%valueExpression            Numeric variable value e.g. 0x3
    * <li>%symbolicExpression[index]  Symbolic formatted value e.g. AdcCompare_Disabled
    * <li>%variable[index]            Variable name /ADC0/adc_sc2_acfe
    * <li>%macro[index](value)        C register macro e.g. ADC_SC2_ACFGT(value)
    * <li>%description[index]         Description from controlVar e.g. Compare Function Enable
    * <li>%shortDescription[index]    Short description from controlVar e.g. Compare Function Enable
    * <li>%tooltip[index]             Tool-tip from controlVar e.g. Each bit disables the GPIO function
    * <li>%params                     Formatted parameter list for function
    * <li>%paramDescription[index]    Tool-tip from controlVar formatted as param description @param ...
    * <li>%paramType[index]           Based on typeName e.g. AdcCompare (or uint32_t)
    * <li>%paramName[index]           Based on typeName with lower-case first letter adcCompare
    * <li>%fieldAssignment            Expression of form '%register <= (%register & ~%mask)|%paramExpression
    * <li>%maskingExpression          Based on variable etc. Similar to (%register&%mask)
    * <li>%mask[index]                From &lt;mask&gt; or deduced from &lt;controlVarName&gt; e.g. "SIM_SOPT_REG_MASK" (_MASK is added)
    * <li>%register[index]            Register associated with variable e.g. adc->APCTL1
    * <li>%registerName[index]        Name of corresponding register (lowercase for Init()) e.g. apctl1
    * <li>%registerNAME[index]        Name of corresponding register (uppercase for Init()) e.g. APCTL1 <br><br>
-->
   <aliasOption key="/SIM/system_bus_clock[]" />

   <template namespace="usbdm" codeGenCondition="enablePeripheralSupport" ><![CDATA[
      \t/**
      \t * FlexBus Signal Group 1 Multiplex control.
      \t * Controls the multiplexing of the FB_ALE, FB_CS1 , and FB_TS signals.
      \t */
      \tenum FlexbusGroup1 {
      \t   FlexbusGroup1_FB_ALE       = FLEXBUS_CSPMCR_GROUP1(0b0000), /**< FB_ALE */
      \t   FlexbusGroup1_FB_CS1       = FLEXBUS_CSPMCR_GROUP1(0b0001), /**< FB_CS1 */
      \t   FlexbusGroup1_FB_TS        = FLEXBUS_CSPMCR_GROUP1(0b0010), /**< FB_TS */
      \t};
      \t/**
      \t * FlexBus Signal Group 2 Multiplex control.
      \t * Controls the multiplexing of the FB_CS4 , FB_TSIZ0, and FB_BE_31_24 signals.
      \t */
      \tenum FlexbusGroup2 {
      \t   FlexbusGroup2_FB_CS4       = FLEXBUS_CSPMCR_GROUP2(0b0000), /**< FB_CS4 */
      \t   FlexbusGroup2_FB_TSIZ0     = FLEXBUS_CSPMCR_GROUP2(0b0001), /**< FB_TSIZ0 */
      \t   FlexbusGroup2_FB_BE_31_24  = FLEXBUS_CSPMCR_GROUP2(0b0010), /**< FB_BE_31_24 */
      \t};
      \t/**
      \t * FlexBus Signal Group 3 Multiplex control.
      \t * Controls the multiplexing of the FB_CS5 , FB_TSIZ1, and FB_BE_23_16 signals.
      \t */
      \tenum FlexbusGroup3 {
      \t   FlexbusGroup3_FB_CS5       = FLEXBUS_CSPMCR_GROUP3(0b0000), /**< FB_CS5 */
      \t   FlexbusGroup3_FB_TSIZ1     = FLEXBUS_CSPMCR_GROUP3(0b0001), /**< FB_TSIZ1 */
      \t   FlexbusGroup3_FB_BE_23_16  = FLEXBUS_CSPMCR_GROUP3(0b0010), /**< FB_BE_23_16 */
      \t};
      \t/**
      \t * FlexBus Signal Group 4 Multiplex control.
      \t * Controls the multiplexing of the FB_TBST , FB_CS2 , and FB_BE_15_8 signals.
      \t */
      \tenum FlexbusGroup4 {
      \t   FlexbusGroup4_FB_TBST      = FLEXBUS_CSPMCR_GROUP4(0b0000), /**< FB_TBST */
      \t   FlexbusGroup4_FB_CS2       = FLEXBUS_CSPMCR_GROUP4(0b0001), /**< FB_CS2 */
      \t   FlexbusGroup4_FB_BE_15_8   = FLEXBUS_CSPMCR_GROUP4(0b0010), /**< FB_BE_15_8 */
      \t};
      \t/**
      \t * FlexBus Signal Group 5 Multiplex control.
      \t * Controls the multiplexing of the FB_TA , FB_CS3 , and FB_BE_7_0 signals.
      \t */
      \tenum FlexbusGroup5 {
      \t   FlexbusGroup5_FB_TA        = FLEXBUS_CSPMCR_GROUP5(0b0000), /**< FB_TA */
      \t   FlexbusGroup5_FB_CS3       = FLEXBUS_CSPMCR_GROUP5(0b0001), /**< FB_CS3 - You must also write 1b to CSCR[AA].*/
      \t   FlexbusGroup5_FB_BE_7_0    = FLEXBUS_CSPMCR_GROUP5(0b0010), /**< FB_BE_7_0 - You must also write 1b to CSCR[AA].*/
      \t};\n\n
   ]]></template>

   <template codeGenCondition="enablePeripheralSupport" ><![CDATA[
      \t/**
      \t * Configure the multiplexing of <b>shared</b> FlexBus/Sdramc signals.
      \t *
      \t * Shared pins are configures as follows:
      \t * - Group2 = FB_BE_31_24 signals.
      \t * - Group3 = FB_BE_23_16 signals.
      \t * - Group4 = FB_BE_15_8 signals.
      \t * - Group5 = FB_BE_7_0 signals.
      \t *
      \t * @note Group1 settings are unchanged as they are not shared.
      \t * @note The clock to the Flexbus controller will be enabled.
      \t */
      \tstatic void configureSharedMultiplexing() {
      \t   enableClock();
      \t   CriticalSection cs;
      \t   flexbus->CSPMCR =
      \t      (flexbus->CSPMCR&~(FLEXBUS_CSPMCR_GROUP2_MASK|FLEXBUS_CSPMCR_GROUP3_MASK|FLEXBUS_CSPMCR_GROUP4_MASK|FLEXBUS_CSPMCR_GROUP5_MASK))|
      \t      (FlexbusGroup2_FB_BE_31_24|FlexbusGroup3_FB_BE_23_16|FlexbusGroup4_FB_BE_15_8|FlexbusGroup5_FB_BE_7_0);
      \t}\n\n
   ]]></template>

   <template key="/FLEXBUS/declarations" codeGenCondition="enablePeripheralSupport" ><![CDATA[
   \t/**
   \t * Class representing $(_NAME)
   \t */
   \tusing $(_Class) = $(_Baseclass)Base_T<$(_Class)Info>;\n
   ]]></template>

   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.PeripheralValidator" >
   </validate>

   <projectActionList id="flexbus_files" >
      <copy source="Project_Headers/flexbus.h"            target="Project_Headers/flexbus.h"            overwrite="true"  derived="true" />
      <copy source="Snippets/flexbus-example.cpp"         target="Snippets/flexbus-example.cpp"         overwrite="true"  derived="true" />
   </projectActionList>

   <!-- ************* SIM configuration ****************** -->
   <category name="Advanced" description="SIM configuration">
      <aliasOption key="=_scgc_clock" locked="false" condition="_scgc_clock" />
   </category>
   <deleteVariables variables="_scgc_clock"  mustExist="false" />

   <!-- ************* Signal mapping ****************** -->
   <signals enabledBy="enablePeripheralSupport" />

</peripheralPage>
