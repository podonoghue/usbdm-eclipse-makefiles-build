<?xml version="1.0" encoding="UTF-8"
?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- smc_mkl27z644.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="System Mode Controller">
   
   <xi:include href="_default_instance.xml"/>

   <binaryOption name="smc_pmprot_avlp" 
      description="Allow very low power modes" 
      toolTip="This write-once bit allows the MCU to enter any very low power modes: VLPR, VLPW, and VLPS" >
      <choice name="VLPR, VLPW and VLPS are not allowed" value="0" />
      <choice name="VLPR, VLPW and VLPS are allowed"     value="1" isDefault="true" />
   </binaryOption>   
   
   <binaryOption name="smc_pmprot_alls" 
      description="Allow low leakage stop mode" 
      toolTip="This write once bit allows the MCU to enter any low leakage stop mode: LLS" >
      <choice name="LLS is not allowed" value="0" />
      <choice name="LLS is allowed"     value="1" isDefault="true" />
   </binaryOption>   
   
   <binaryOption name="smc_pmprot_avlls" 
      description="Allow very low leakage stop mode" 
      toolTip="This write once bit allows the MCU to enter any low leakage stop mode: VLLSx" >
      <choice name="VLLSx is not allowed" value="0" />
      <choice name="VLLSx is allowed"     value="1" isDefault="true" />
   </binaryOption>   
   
   <template><![CDATA[
      \t// Power Mode Protection Register
      \tstatic constexpr uint8_t pmprot =  
      \t   SMC_PMPROT_AVLP($(smc_pmprot_avlp:0)) |  // Allow very low power modes
      \t   SMC_PMPROT_ALLS($(smc_pmprot_alls:0)) |  // Allow low leakage stop mode
      \t   SMC_PMPROT_AVLLS($(smc_pmprot_avlls:0));  // Allow very low leakage stop mode\n\n
   ]]></template>
      
   <choiceOption name="smc_stopctrl_pstopo" 
      description="Partial Stop Option"
      toolTip="These bits control whether a Partial Stop mode is entered when STOPM=STOP">
      <choice value="0" name="STOP - Normal Stop mode" />
      <choice value="1" name="PSTOP1 - Partial Stop with both system and bus clocks disabled" />
      <choice value="2" name="PSTOP2 - Partial Stop with system clock disabled and bus clock enabled" />
      <choice value="3" name="Reserved" />
   </choiceOption>

   <binaryOption name="smc_stopctrl_porpo" 
      description="POR Power Option" 
      toolTip="This bit controls whether the POR detect circuit is enabled in VLLS0 mode." >
      <choice name="POR detect circuit is enabled in VLLS0"  value="0" isDefault="true" />
      <choice name="POR detect circuit is disabled in VLLS0" value="1" />
   </binaryOption>   
   
   <binaryOption name="smc_stopctrl_lpopo" 
      description="Controls whether the 1 kHz LPO clock is enabled in LLS/VLLSx modes." 
      toolTip="This bit controls whether the POR detect circuit is enabled in VLLS0 mode." >
      <choice name="LPO clock is enabled in LLS/VLLSx"   value="0" isDefault="true" />
      <choice name="LPO clock is disabled in LLS/VLLSx"  value="1" />
   </binaryOption>   
   
   <choiceOption name="smc_stopctrl_llsm" 
      description="LLS or VLLS Mode Control"
      toolTip="This field controls which LLS or VLLS sub-mode to enter if STOPM = VLLS">
      <choice value="0" name="VLLS0" />
      <choice value="1" name="VLLS1" />
      <choice value="2" name="VLLS2 (if supported)" />
      <choice value="3" name="VLLS3" />
      <choice value="4" name="Reserved" />
      <choice value="5" name="Reserved" />
      <choice value="6" name="Reserved" />
      <choice value="7" name="Reserved" />
   </choiceOption>

   <template name="enablePowerModes" namespace="all"  ><![CDATA[
   \t/* smc_lpopo_pstopo_mkl27z644.xml */
   \t/**
   \t * Enable the given power modes.
   \t * A mode must be enabled before it can be entered.
   \t *
   \t * @param[in] smcVeryLowPower        Allows VLPR, VLPW, and VLPS modes
   \t * @param[in] smcLowLeakageStop      Allows LLSx modes
   \t * @param[in] smcVeryLowLeakageStop  Allows VLLSx modes
   \t *
   \t * @note This is a write-once-after-reset operation
   \t */
   \tstatic ErrorCode enablePowerModes(
   \t      SmcVeryLowPower         smcVeryLowPower,
   \t      SmcLowLeakageStop       smcLowLeakageStop       = SmcLowLeakageStop_Disabled,
   \t      SmcVeryLowLeakageStop   smcVeryLowLeakageStop   = SmcVeryLowLeakageStop_Disabled) {
   \t
   \t   smc->PMPROT = smcVeryLowPower|smcLowLeakageStop|smcVeryLowLeakageStop;
   \t   return E_NO_ERROR;
   \t}\n\n
   ]]></template>

   <template name="setStopOptions" namespace="all"  ><![CDATA[
   \t/* smc_lpopo_pstopo_mkl27z644.xml */
   \t/**
   \t * Allows the detailed operation in STOP mode to be controlled.
   \t *
   \t * @param[in] smcLowLeakageStopMode  Controls which LLS/VLLS sub-mode to enter if STOPM=LLS/VLLS
   \t * @param[in] smcPartialStopMode     These bits control whether a Partial Stop mode is entered when STOPM=STOP.
   \t * @param[in] smcPowerOnReset        Controls whether the POR detect circuit is enabled in VLLS0 mode
   \t */
   \tstatic void setStopOptions(
   \t      SmcLowLeakageStopMode   smcLowLeakageStopMode,
   \t      SmcPartialStopMode      smcPartialStopMode      = SmcPartialStopMode_Normal,
   \t      SmcPowerOnReset         smcPowerOnReset         = SmcPowerOnReset_Disabled ) {
   \t
   \t   smc->STOPCTRL = smcPowerOnReset|smcLowLeakageStopMode;
   \t}\n\n
   ]]></template>
   
   <template><![CDATA[
      \t// VLLS Control Register
      \tstatic constexpr uint8_t stopctrl =  
      #ifdef SMC_STOPCTRL_PSTOPO
      \t   SMC_STOPCTRL_PSTOPO($(smc_stopctrl_pstopo:0)) |  // Partial Stop Option (if present)
      #endif\n\n
      \t   SMC_STOPCTRL_PORPO($(smc_stopctrl_porpo:0)) |  // POR Power Option
      #ifdef SMC_STOPCTRL_LPOPO
      \t   SMC_STOPCTRL_LPOPO($(smc_stopctrl_lpopo:0)) |  // POR Power Option (if present)
      #endif\n\n
      \t   SMC_STOPCTRL_LLSM($(smc_stopctrl_llsm:0));   // LLS or VLLS Mode Control\n\n
   ]]></template>

   <projectActionList id = "smc_files" >
      <copy source="Project_Headers/smc.h"                  target="Project_Headers/smc.h"                  overwrite="true" derived="true" />
      <copy source="Project_Headers/KinetisPowerModes.png"  target="Project_Headers/KinetisPowerModes.png"  overwrite="true" derived="true" macroReplace="false" />
   </projectActionList>
         
   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.PeripheralValidator">
   </validate>

</peripheralPage>
