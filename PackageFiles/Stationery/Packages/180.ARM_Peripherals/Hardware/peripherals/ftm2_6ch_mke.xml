<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- ftm2_6ch_mke.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="FlexTimer Module (6 channels)">

   <xi:include href="_default_instance.xml"/>

   <xi:include href="_mapPinsOption.xml"/>

   <xi:include href="_irqOption.xml"/>

   <binaryOption key="ftm_sc_tof" condition="ftm_sc_tof_present"
      enumStem="FtmScTof"
      description="Timer Overflow Flag" >
      <choice name="Not overflowed"  value="0" enum="NotOverflowed"/>
      <choice name="Overflowed"      value="1" enum="Overflowed"/>
   </binaryOption>

   <binaryOption key="ftm_sc_toie" condition="ftm_sc_toie_present"
      enumStem="FtmScToie"
      toolTip="An interrupt is generated when TOF equals one"
      description="Timer Overflow Interrupt Enable" >
      <choice name="Interrupts disabled"  value="0" enum="InterruptsDisabled"/>
      <choice name="Interrupts enabled"   value="1" enum="InterruptsEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_sc_cpwms" condition="ftm_sc_cpwms_present"
      enumStem="FtmScCpwms"
      toolTip="Selects between left and centre-aligned PWM pulse output"
      description="Centre-Aligned PWM Select" >
      <choice name="Left-aligned"    value="0" enum="LeftAligned"/>
      <choice name="Centre-aligned"  value="1" enum="CentreAligned"/>
   </binaryOption>

   <choiceOption key="ftm_sc_clks" condition="ftm_sc_clks_present"
      enumStem="FtmScClks"
      description="Clock Source Selection" >
      <choice name="Disabled"               value="0" enum="Disabled"/>
      <choice name="System clock"           value="1" enum="SystemClock"/>
      <choice name="Fixed frequency clock"  value="2" enum="FixedFrequencyClock"/>
      <choice name="External clock"         value="3" enum="ExternalClock"/>
   </choiceOption>

   <choiceOption key="ftm_sc_ps" condition="ftm_sc_ps_present"
      enumStem="FtmScPs"
      description="Prescale Factor Selection" >
      <choice name="Divide by 1"    value="0" enum="DivideBy1"/>
      <choice name="Divide by 2"    value="1" enum="DivideBy2"/>
      <choice name="Divide by 4"    value="2" enum="DivideBy4"/>
      <choice name="Divide by 8"    value="3" enum="DivideBy8"/>
      <choice name="Divide by 16"   value="4" enum="DivideBy16"/>
      <choice name="Divide by 32"   value="5" enum="DivideBy32"/>
      <choice name="Divide by 64"   value="6" enum="DivideBy64"/>
      <choice name="Divide by 128"  value="7" enum="DivideBy128"/>
   </choiceOption>

   <intOption key="ftm_cnt_count" condition="ftm_cnt_count_present"
      description="Counter Value"
   />

   <intOption key="ftm_mod_mod" condition="ftm_mod_mod_present"
      description="Modulo Value"
   />

   <intOption key="ftm_cntin_init" condition="ftm_cntin_init_present"
      description="Initial Value of the FTM Counter"
   />

   <binaryOption key="ftm_status_ch5f" condition="ftm_status_ch5f_present"
      enumStem="FtmStatusCh5f"
      description="Channel 5 Event Flag" >
      <choice name="No event"    value="0" enum="NoEvent"/>
      <choice name="Event"       value="1" enum="Event"/>
   </binaryOption>

   <binaryOption key="ftm_status_ch4f" condition="ftm_status_ch4f_present"
      enumStem="FtmStatusCh4f"
      description="Channel 4 Event Flag" >
      <choice name="No event"    value="0" enum="NoEvent"/>
      <choice name="Event"       value="1" enum="Event"/>
   </binaryOption>

   <binaryOption key="ftm_status_ch3f" condition="ftm_status_ch3f_present"
      enumStem="FtmStatusCh3f"
      description="Channel 3 Event Flag" >
      <choice name="No event"    value="0" enum="NoEvent"/>
      <choice name="Event"       value="1" enum="Event"/>
   </binaryOption>

   <binaryOption key="ftm_status_ch2f" condition="ftm_status_ch2f_present"
      enumStem="FtmStatusCh2f"
      description="Channel 2 Event Flag" >
      <choice name="No event"    value="0" enum="NoEvent"/>
      <choice name="Event"       value="1" enum="Event"/>
   </binaryOption>

   <binaryOption key="ftm_status_ch1f" condition="ftm_status_ch1f_present"
      enumStem="FtmStatusCh1f"
      description="Channel 1 Event Flag" >
      <choice name="No event"    value="0" enum="NoEvent"/>
      <choice name="Event"       value="1" enum="Event"/>
   </binaryOption>

   <binaryOption key="ftm_status_ch0f" condition="ftm_status_ch0f_present"
      enumStem="FtmStatusCh0f"
      description="Channel 0 Event Flag" >
      <choice name="No event"    value="0" enum="NoEvent"/>
      <choice name="Event"       value="1" enum="Event"/>
   </binaryOption>

   <binaryOption key="ftm_mode_faultie" condition="ftm_mode_faultie_present"
      enumStem="FtmModeFaultie"
      description="Fault Interrupt Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <choiceOption key="ftm_mode_faultm" condition="ftm_mode_faultm_present"
      enumStem="FtmModeFaultm"
      description="Fault Control Mode" >
      <choice name="Disabled"                                    value="0" enum="Disabled"/>
      <choice name="Even channels with manual fault clearing"    value="1" enum="EvenChannelsWithManualFaultClearing"/>
      <choice name="All channels with manual fault clearing"     value="2" enum="AllChannelsWithManualFaultClearing"/>
      <choice name="All channels with automatic fault clearing"  value="3" enum="AllChannelsWithAutomaticFaultClearing"/>
   </choiceOption>

   <binaryOption key="ftm_mode_captest" condition="ftm_mode_captest_present"
      enumStem="FtmModeCaptest"
      description="Capture Test Mode Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_mode_pwmsync" condition="ftm_mode_pwmsync_present"
      enumStem="FtmModePwmsync"
      description="PWM Synchronization Mode" >
      <choice name="No restrictions."  value="0" enum="NoRestrictions"/>
      <choice name="Restricted"        value="1" enum="Restricted"/>
   </binaryOption>

   <binaryOption key="ftm_mode_wpdis" condition="ftm_mode_wpdis_present"
      enumStem="FtmModeWpdis"
      description="Write Protection Disable" >
      <choice name="Enabled"     value="0" enum="Enabled"/>
      <choice name="Disabled"    value="1" enum="Disabled"/>
   </binaryOption>

   <choiceOption key="ftm_mode_init" condition="ftm_mode_init_present"
      enumStem="FtmModeInit"
      description="Initialize the Channel Outputs" >
      <choice name="Write 1 to initialise"  value="0" enum="Write1ToInitialise"/>
   </choiceOption>

   <binaryOption key="ftm_mode_ftmen" condition="ftm_mode_ftmen_present"
      enumStem="FtmModeFtmen"
      description="FTM Enable" >
      <choice name="TPM registers only"  value="0" enum="TpmRegistersOnly"/>
      <choice name="All registers"       value="1" enum="AllRegisters"/>
   </binaryOption>

   <binaryOption key="ftm_sync_swsync" condition="ftm_sync_swsync_present"
      enumStem="FtmSyncSwsync"
      description="PWM Synchronization Software Trigger" >
      <choice name="Not selected"  value="0" enum="NotSelected"/>
      <choice name="Selected"      value="1" enum="Selected"/>
   </binaryOption>

   <binaryOption key="ftm_sync_trig2" condition="ftm_sync_trig2_present"
      enumStem="FtmSyncTrig2"
      description="PWM Synchronization Hardware Trigger 2" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_sync_trig1" condition="ftm_sync_trig1_present"
      enumStem="FtmSyncTrig1"
      description="PWM Synchronization Hardware Trigger 1" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_sync_trig0" condition="ftm_sync_trig0_present"
      enumStem="FtmSyncTrig0"
      description="PWM Synchronization Hardware Trigger 0" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_sync_synchom" condition="ftm_sync_synchom_present"
      enumStem="FtmSyncSynchom"
      description="Output Mask Synchronization with buffer" >
      <choice name="Rising edges of the system clock"  value="0" enum="RisingEdgesOfTheSystemClock"/>
      <choice name="PWM synchronization"               value="1" enum="PwmSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_sync_reinit" condition="ftm_sync_reinit_present"
      enumStem="FtmSyncReinit"
      description="FTM Counter Reinitialization by Synchronization (FTM Counter Synchronization)" >
      <choice name="Counts normally"                         value="0" enum="CountsNormally"/>
      <choice name="Updated with initial value on triggerd"  value="1" enum="UpdatedWithInitialValueOnTriggerd"/>
   </binaryOption>

   <binaryOption key="ftm_sync_cntmax" condition="ftm_sync_cntmax_present"
      enumStem="FtmSyncCntmax"
      description="Maximum Loading Point Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_sync_cntmin" condition="ftm_sync_cntmin_present"
      enumStem="FtmSyncCntmin"
      description="Minimum Loading Point Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_outinit_ch5oi" condition="ftm_outinit_ch5oi_present"
      enumStem="FtmOutinitCh5oi"
      description="Channel 5 Output Initialization Value" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="ftm_outinit_ch4oi" condition="ftm_outinit_ch4oi_present"
      enumStem="FtmOutinitCh4oi"
      description="Channel 4 Output Initialization Value" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="ftm_outinit_ch3oi" condition="ftm_outinit_ch3oi_present"
      enumStem="FtmOutinitCh3oi"
      description="Channel 3 Output Initialization Value" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="ftm_outinit_ch2oi" condition="ftm_outinit_ch2oi_present"
      enumStem="FtmOutinitCh2oi"
      description="Channel 2 Output Initialization Value" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="ftm_outinit_ch1oi" condition="ftm_outinit_ch1oi_present"
      enumStem="FtmOutinitCh1oi"
      description="Channel 1 Output Initialization Value" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="ftm_outinit_ch0oi" condition="ftm_outinit_ch0oi_present"
      enumStem="FtmOutinitCh0oi"
      description="Channel 0 Output Initialization Value" >
      <choice name="Low"         value="0" enum="Low"/>
      <choice name="High"        value="1" enum="High"/>
   </binaryOption>

   <binaryOption key="ftm_outmask_ch5om" condition="ftm_outmask_ch5om_present"
      enumStem="FtmOutmaskCh5om"
      description="Channel 5 Output Mask" >
      <choice name="Not masked"  value="0" enum="NotMasked"/>
      <choice name="Masked"      value="1" enum="Masked"/>
   </binaryOption>

   <binaryOption key="ftm_outmask_ch4om" condition="ftm_outmask_ch4om_present"
      enumStem="FtmOutmaskCh4om"
      description="Channel 4 Output Mask" >
      <choice name="Not masked"  value="0" enum="NotMasked"/>
      <choice name="Masked"      value="1" enum="Masked"/>
   </binaryOption>

   <binaryOption key="ftm_outmask_ch3om" condition="ftm_outmask_ch3om_present"
      enumStem="FtmOutmaskCh3om"
      description="Channel 3 Output Mask" >
      <choice name="Not masked"  value="0" enum="NotMasked"/>
      <choice name="Masked"      value="1" enum="Masked"/>
   </binaryOption>

   <binaryOption key="ftm_outmask_ch2om" condition="ftm_outmask_ch2om_present"
      enumStem="FtmOutmaskCh2om"
      description="Channel 2 Output Mask" >
      <choice name="Not masked"  value="0" enum="NotMasked"/>
      <choice name="Masked"      value="1" enum="Masked"/>
   </binaryOption>

   <binaryOption key="ftm_outmask_ch1om" condition="ftm_outmask_ch1om_present"
      enumStem="FtmOutmaskCh1om"
      description="Channel 1 Output Mask" >
      <choice name="Not masked"  value="0" enum="NotMasked"/>
      <choice name="Masked"      value="1" enum="Masked"/>
   </binaryOption>

   <binaryOption key="ftm_outmask_ch0om" condition="ftm_outmask_ch0om_present"
      enumStem="FtmOutmaskCh0om"
      description="Channel 0 Output Mask" >
      <choice name="Not masked"  value="0" enum="NotMasked"/>
      <choice name="Masked"      value="1" enum="Masked"/>
   </binaryOption>

   <binaryOption key="ftm_combine_faulten2" condition="ftm_combine_faulten2_present"
      enumStem="FtmCombineFaulten2"
      description="Fault Control Enable for Channels 4 &amp; 5" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_syncen2" condition="ftm_combine_syncen2_present"
      enumStem="FtmCombineSyncen2"
      description="Synchronization Enable for Channels 4 &amp; 5" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_dten2" condition="ftm_combine_dten2_present"
      enumStem="FtmCombineDten2"
      description="Deadtime Enable for Channels 4 &amp; 5" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_decap2" condition="ftm_combine_decap2_present"
      enumStem="FtmCombineDecap2"
      description="Dual Edge Capture Mode Captures for Channels 4 &amp; 5" >
      <choice name="Inactive"    value="0" enum="Inactive"/>
      <choice name="Active"      value="1" enum="Active"/>
   </binaryOption>

   <binaryOption key="ftm_combine_decapen2" condition="ftm_combine_decapen2_present"
      enumStem="FtmCombineDecapen2"
      description="Dual Edge Capture Mode Enable for Channels 4 &amp; 5" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_comp2" condition="ftm_combine_comp2_present"
      enumStem="FtmCombineComp2"
      description="Complement for Channels 4 &amp; 5" >
      <choice name="Same"        value="0" enum="Same"/>
      <choice name="Complement"  value="1" enum="Complement"/>
   </binaryOption>

   <binaryOption key="ftm_combine_combine2" condition="ftm_combine_combine2_present"
      enumStem="FtmCombineCombine2"
      description="Combine Channels 4 &amp; 5" >
      <choice name="Independent"  value="0" enum="Independent"/>
      <choice name="Combined"     value="1" enum="Combined"/>
   </binaryOption>

   <binaryOption key="ftm_combine_faulten1" condition="ftm_combine_faulten1_present"
      enumStem="FtmCombineFaulten1"
      description="Fault Control Enable for Channels 2 &amp; 3" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_syncen1" condition="ftm_combine_syncen1_present"
      enumStem="FtmCombineSyncen1"
      description="Synchronization Enable for Channels 2 &amp; 3" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_dten1" condition="ftm_combine_dten1_present"
      enumStem="FtmCombineDten1"
      description="Deadtime Enable for Channels 2 &amp; 3" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_decap1" condition="ftm_combine_decap1_present"
      enumStem="FtmCombineDecap1"
      description="Dual Edge Capture Mode Captures for Channel 2 &amp; 3" >
      <choice name="Inactive"    value="0" enum="Inactive"/>
      <choice name="Active"      value="1" enum="Active"/>
   </binaryOption>

   <binaryOption key="ftm_combine_decapen1" condition="ftm_combine_decapen1_present"
      enumStem="FtmCombineDecapen1"
      description="Dual Edge Capture Mode Enable for Channels 2 &amp; 3" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_comp1" condition="ftm_combine_comp1_present"
      enumStem="FtmCombineComp1"
      description="Complement for Channels 2 &amp; 3" >
      <choice name="Same"        value="0" enum="Same"/>
      <choice name="Complement"  value="1" enum="Complement"/>
   </binaryOption>

   <binaryOption key="ftm_combine_combine1" condition="ftm_combine_combine1_present"
      enumStem="FtmCombineCombine1"
      description="Combine Channels 2 &amp; 3" >
      <choice name="Independent"  value="0" enum="Independent"/>
      <choice name="Combined"     value="1" enum="Combined"/>
   </binaryOption>

   <binaryOption key="ftm_combine_faulten0" condition="ftm_combine_faulten0_present"
      enumStem="FtmCombineFaulten0"
      description="Fault Control Enable for Channels 0 &amp; 1" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_syncen0" condition="ftm_combine_syncen0_present"
      enumStem="FtmCombineSyncen0"
      description="PWM Synchronization Enable for Channels 0 &amp; 1" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_dten0" condition="ftm_combine_dten0_present"
      enumStem="FtmCombineDten0"
      description="Deadtime Enable for Channels 0 &amp; 1" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_decap0" condition="ftm_combine_decap0_present"
      enumStem="FtmCombineDecap0"
      description="Dual Edge Capture Mode Captures for Channel 0 &amp; 1" >
      <choice name="Inactive"    value="0" enum="Inactive"/>
      <choice name="Active"      value="1" enum="Active"/>
   </binaryOption>

   <binaryOption key="ftm_combine_decapen0" condition="ftm_combine_decapen0_present"
      enumStem="FtmCombineDecapen0"
      description="Dual Edge Capture Mode Enable for Channels 0 &amp; 1" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_combine_comp0" condition="ftm_combine_comp0_present"
      enumStem="FtmCombineComp0"
      toolTip="Controls whether channels are the some or complement"
      description="Complement for Channels 0 &amp; 1" >
      <choice name="Same"        value="0" enum="Same"/>
      <choice name="Complement"  value="1" enum="Complement"/>
   </binaryOption>

   <binaryOption key="ftm_combine_combine0" condition="ftm_combine_combine0_present"
      enumStem="FtmCombineCombine0"
      description="Combine Channels 0 &amp; 1" >
      <choice name="Independent"  value="0" enum="Independent"/>
      <choice name="Combined"     value="1" enum="Combined"/>
   </binaryOption>

   <choiceOption key="ftm_deadtime_dtps" condition="ftm_deadtime_dtps_present"
      enumStem="FtmDeadtimeDtps"
      description="Deadtime Prescaler Value" >
      <choice name="Divide by 1"   value="0" enum="DivideBy1"/>
      <choice name="Divide by 4"   value="2" enum="DivideBy4"/>
      <choice name="Divide by 16"  value="3" enum="DivideBy16"/>
   </choiceOption>

   <intOption key="ftm_deadtime_dtval" condition="ftm_deadtime_dtval_present"
      description="Deadtime Value"
   />

   <binaryOption key="ftm_exttrig_trigf" condition="ftm_exttrig_trigf_present"
      enumStem="FtmExttrigTrigf"
      description="Channel Trigger Flag" >
      <choice name="No Trigger"  value="0" enum="NoTrigger"/>
      <choice name="Trigger"     value="1" enum="Trigger"/>
   </binaryOption>

   <binaryOption key="ftm_exttrig_inittrigen" condition="ftm_exttrig_inittrigen_present"
      enumStem="FtmExttrigInittrigen"
      description="Initialization Trigger Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_exttrig_ch1trig" condition="ftm_exttrig_ch1trig_present"
      enumStem="FtmExttrigCh1trig"
      description="Channel 1 Trigger Enable" >
      <choice name="Trigger disabled"    value="0" enum="TriggerDisabled"/>
      <choice name="Trigger is enabled"  value="1" enum="TriggerIsEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_exttrig_ch0trig" condition="ftm_exttrig_ch0trig_present"
      enumStem="FtmExttrigCh0trig"
      description="Channel 0 Trigger Enable" >
      <choice name="Trigger disabled"    value="0" enum="TriggerDisabled"/>
      <choice name="Trigger is enabled"  value="1" enum="TriggerIsEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_exttrig_ch5trig" condition="ftm_exttrig_ch5trig_present"
      enumStem="FtmExttrigCh5trig"
      description="Channel 5 Trigger Enable" >
      <choice name="Trigger disabled"    value="0" enum="TriggerDisabled"/>
      <choice name="Trigger is enabled"  value="1" enum="TriggerIsEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_exttrig_ch4trig" condition="ftm_exttrig_ch4trig_present"
      enumStem="FtmExttrigCh4trig"
      description="Channel 4 Trigger Enable" >
      <choice name="Trigger disabled"    value="0" enum="TriggerDisabled"/>
      <choice name="Trigger is enabled"  value="1" enum="TriggerIsEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_exttrig_ch3trig" condition="ftm_exttrig_ch3trig_present"
      enumStem="FtmExttrigCh3trig"
      description="Channel 3 Trigger Enable" >
      <choice name="Trigger disabled"    value="0" enum="TriggerDisabled"/>
      <choice name="Trigger is enabled"  value="1" enum="TriggerIsEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_exttrig_ch2trig" condition="ftm_exttrig_ch2trig_present"
      enumStem="FtmExttrigCh2trig"
      description="Channel 2 Trigger Enable" >
      <choice name="Trigger disabled"    value="0" enum="TriggerDisabled"/>
      <choice name="Trigger is enabled"  value="1" enum="TriggerIsEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_pol_pol5" condition="ftm_pol_pol5_present"
      enumStem="FtmPolPol5"
      description="Channel 5 Polarity" >
      <choice name="Active high"  value="0" enum="ActiveHigh"/>
      <choice name="Active low"   value="1" enum="ActiveLow"/>
   </binaryOption>

   <binaryOption key="ftm_pol_pol4" condition="ftm_pol_pol4_present"
      enumStem="FtmPolPol4"
      description="Channel 4 Polarity" >
      <choice name="Active high"  value="0" enum="ActiveHigh"/>
      <choice name="Active low"   value="1" enum="ActiveLow"/>
   </binaryOption>

   <binaryOption key="ftm_pol_pol3" condition="ftm_pol_pol3_present"
      enumStem="FtmPolPol3"
      description="Channel 3 Polarity" >
      <choice name="Active high"  value="0" enum="ActiveHigh"/>
      <choice name="Active low"   value="1" enum="ActiveLow"/>
   </binaryOption>

   <binaryOption key="ftm_pol_pol2" condition="ftm_pol_pol2_present"
      enumStem="FtmPolPol2"
      description="Channel 2 Polarity" >
      <choice name="Active high"  value="0" enum="ActiveHigh"/>
      <choice name="Active low"   value="1" enum="ActiveLow"/>
   </binaryOption>

   <binaryOption key="ftm_pol_pol1" condition="ftm_pol_pol1_present"
      enumStem="FtmPolPol1"
      description="Channel 1 Polarity" >
      <choice name="Active high"  value="0" enum="ActiveHigh"/>
      <choice name="Active low"   value="1" enum="ActiveLow"/>
   </binaryOption>

   <binaryOption key="ftm_pol_pol0" condition="ftm_pol_pol0_present"
      enumStem="FtmPolPol0"
      description="Channel 0 Polarity" >
      <choice name="Active high"  value="0" enum="ActiveHigh"/>
      <choice name="Active low"   value="1" enum="ActiveLow"/>
   </binaryOption>

   <binaryOption key="ftm_fms_faultf" condition="ftm_fms_faultf_present"
      enumStem="FtmFmsFaultf"
      description="Fault Detection Flag" >
      <choice name="No fault"        value="0" enum="NoFault"/>
      <choice name="Fault detected"  value="1" enum="FaultDetected"/>
   </binaryOption>

   <binaryOption key="ftm_fms_wpen" condition="ftm_fms_wpen_present"
      enumStem="FtmFmsWpen"
      description="Write Protection Enable" >
      <choice name="Unprotected"  value="0" enum="Unprotected"/>
      <choice name="Protected"    value="1" enum="Protected"/>
   </binaryOption>

   <binaryOption key="ftm_fms_faultf3" condition="ftm_fms_faultf3_present"
      enumStem="FtmFmsFaultf3"
      description="Fault Detection Flag 3" >
      <choice name="No fault"         value="0" enum="NoFault"/>
      <choice name="Fault condition"  value="1" enum="FaultCondition"/>
   </binaryOption>

   <binaryOption key="ftm_fms_faultf2" condition="ftm_fms_faultf2_present"
      enumStem="FtmFmsFaultf2"
      description="Fault Detection Flag 2" >
      <choice name="No fault"         value="0" enum="NoFault"/>
      <choice name="Fault condition"  value="1" enum="FaultCondition"/>
   </binaryOption>

   <binaryOption key="ftm_fms_faultf1" condition="ftm_fms_faultf1_present"
      enumStem="FtmFmsFaultf1"
      description="Fault Detection Flag 1" >
      <choice name="No fault"         value="0" enum="NoFault"/>
      <choice name="Fault condition"  value="1" enum="FaultCondition"/>
   </binaryOption>

   <binaryOption key="ftm_fms_faultf0" condition="ftm_fms_faultf0_present"
      enumStem="FtmFmsFaultf0"
      description="Fault Detection Flag 0" >
      <choice name="No fault"         value="0" enum="NoFault"/>
      <choice name="Fault condition"  value="1" enum="FaultCondition"/>
   </binaryOption>

   <binaryOption key="ftm_filter_ch3fval" condition="ftm_filter_ch3fval_present"
      enumStem="FtmFilterCh3fval"
      description="Channel 3 Input Filter" >
      <choice name="Disabled"        value="0" enum="Disabled"/>
      <choice name="Filter enabled"  value="0" enum="FilterEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_filter_ch2fval" condition="ftm_filter_ch2fval_present"
      enumStem="FtmFilterCh2fval"
      description="Channel 2 Input Filter" >
      <choice name="Disabled"        value="0" enum="Disabled"/>
      <choice name="Filter enabled"  value="0" enum="FilterEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_filter_ch1fval" condition="ftm_filter_ch1fval_present"
      enumStem="FtmFilterCh1fval"
      description="Channel 1 Input Filter" >
      <choice name="Disabled"        value="0" enum="Disabled"/>
      <choice name="Filter enabled"  value="0" enum="FilterEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_filter_ch0fval" condition="ftm_filter_ch0fval_present"
      enumStem="FtmFilterCh0fval"
      description="Channel 0 Input Filter" >
      <choice name="Disabled"        value="0" enum="Disabled"/>
      <choice name="Filter enabled"  value="0" enum="FilterEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_fltctrl_ffval" condition="ftm_fltctrl_ffval_present"
      enumStem="FtmFltctrlFfval"
      description="Fault Input Filter\nSelects the filter value for the fault inputs" >
      <choice name="Filter disabled"  value="0" enum="FilterDisabled"/>
      <choice name="Filter enabled"   value="0" enum="FilterEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_fltctrl_ffltr3en" condition="ftm_fltctrl_ffltr3en_present"
      enumStem="FtmFltctrlFfltr3en"
      description="Fault Input 3 Filter Enable" >
      <choice name="Filter disabled"  value="0" enum="FilterDisabled"/>
      <choice name="Filter enabled"   value="1" enum="FilterEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_fltctrl_ffltr2en" condition="ftm_fltctrl_ffltr2en_present"
      enumStem="FtmFltctrlFfltr2en"
      description="Fault Input 2 Filter Enable" >
      <choice name="Filter disabled"  value="0" enum="FilterDisabled"/>
      <choice name="Filter enabled"   value="1" enum="FilterEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_fltctrl_ffltr1en" condition="ftm_fltctrl_ffltr1en_present"
      enumStem="FtmFltctrlFfltr1en"
      description="Fault Input 1 Filter Enable" >
      <choice name="Filter disabled"  value="0" enum="FilterDisabled"/>
      <choice name="Filter enabled"   value="1" enum="FilterEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_fltctrl_ffltr0en" condition="ftm_fltctrl_ffltr0en_present"
      enumStem="FtmFltctrlFfltr0en"
      description="Fault Input 0 Filter Enable" >
      <choice name="Filter disabled"  value="0" enum="FilterDisabled"/>
      <choice name="Filter enabled"   value="1" enum="FilterEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_fltctrl_fault3en" condition="ftm_fltctrl_fault3en_present"
      enumStem="FtmFltctrlFault3en"
      description="Fault Input 3 Enable" >
      <choice name="Input disabled"  value="0" enum="InputDisabled"/>
      <choice name="Input enabled"   value="1" enum="InputEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_fltctrl_fault2en" condition="ftm_fltctrl_fault2en_present"
      enumStem="FtmFltctrlFault2en"
      description="Fault Input 2 Enable" >
      <choice name="Input disabled"  value="0" enum="InputDisabled"/>
      <choice name="Input enabled"   value="1" enum="InputEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_fltctrl_fault1en" condition="ftm_fltctrl_fault1en_present"
      enumStem="FtmFltctrlFault1en"
      description="Fault Input 1 Enable" >
      <choice name="Input disabled"  value="0" enum="InputDisabled"/>
      <choice name="Input enabled"   value="1" enum="InputEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_fltctrl_fault0en" condition="ftm_fltctrl_fault0en_present"
      enumStem="FtmFltctrlFault0en"
      description="Fault Input 0 Enable" >
      <choice name="Input disabled"  value="0" enum="InputDisabled"/>
      <choice name="Input enabled"   value="1" enum="InputEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_conf_gtbeout" condition="ftm_conf_gtbeout_present"
      enumStem="FtmConfGtbeout"
      description="Global Time Base Output" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_conf_gtbeen" condition="ftm_conf_gtbeen_present"
      enumStem="FtmConfGtbeen"
      description="External Global Time Base Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <choiceOption key="ftm_conf_bdmmode" condition="ftm_conf_bdmmode_present"
      enumStem="FtmConfBdmmode"
      toolTip="Selects the ratio between the number of counter overflows to the number of times the TOF bit is set"
      description="Controls operation in BDM Mode" >
      <choice name="Stopped, outputs functional"            value="0" enum="Stopped_OutputsFunctional"/>
      <choice name="Stopped, outputs forced to safe value"  value="1" enum="Stopped_OutputsForcedToSafeValue"/>
      <choice name="Stopped, outputs frozen"                value="2" enum="Stopped_OutputsFrozen"/>
      <choice name="Functioning"                            value="3" enum="Functioning"/>
   </choiceOption>

   <intOption key="ftm_conf_numtof" condition="ftm_conf_numtof_present"
      description="TOF Frequency"
   />

   <binaryOption key="ftm_fltpol_flt3pol" condition="ftm_fltpol_flt3pol_present"
      enumStem="FtmFltpolFlt3pol"
      description="Fault Input 3 Polarity" >
      <choice name="Active high"  value="0" enum="ActiveHigh"/>
      <choice name="Active low"   value="1" enum="ActiveLow"/>
   </binaryOption>

   <binaryOption key="ftm_fltpol_flt2pol" condition="ftm_fltpol_flt2pol_present"
      enumStem="FtmFltpolFlt2pol"
      description="Fault Input 2 Polarity" >
      <choice name="Active high"  value="0" enum="ActiveHigh"/>
      <choice name="Active low"   value="1" enum="ActiveLow"/>
   </binaryOption>

   <binaryOption key="ftm_fltpol_flt1pol" condition="ftm_fltpol_flt1pol_present"
      enumStem="FtmFltpolFlt1pol"
      description="Fault Input 1 Polarity" >
      <choice name="Active high"  value="0" enum="ActiveHigh"/>
      <choice name="Active low"   value="1" enum="ActiveLow"/>
   </binaryOption>

   <binaryOption key="ftm_fltpol_flt0pol" condition="ftm_fltpol_flt0pol_present"
      enumStem="FtmFltpolFlt0pol"
      description="Fault Input 0 Polarity" >
      <choice name="Active high"  value="0" enum="ActiveHigh"/>
      <choice name="Active low"   value="1" enum="ActiveLow"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_hwsoc" condition="ftm_synconf_hwsoc_present"
      enumStem="FtmSynconfHwsoc"
      description="Software output control synchronization is activated by a hardware trigger" >
      <choice name="A hardware trigger does not activate the SWOCTRL register synchronization"  value="0" enum="AHardwareTriggerDoesNotActivateTheSwoctrlRegisterSynchronization"/>
      <choice name="A hardware trigger activates the SWOCTRL register synchronization"          value="1" enum="AHardwareTriggerActivatesTheSwoctrlRegisterSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_hwinvc" condition="ftm_synconf_hwinvc_present"
      enumStem="FtmSynconfHwinvc"
      description="Inverting control synchronization is activated by a hardware trigger" >
      <choice name="A hardware trigger does not activate the INVCTRL register synchronization"  value="0" enum="AHardwareTriggerDoesNotActivateTheInvctrlRegisterSynchronization"/>
      <choice name="A hardware trigger activates the INVCTRL register synchronization"          value="1" enum="AHardwareTriggerActivatesTheInvctrlRegisterSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_hwom" condition="ftm_synconf_hwom_present"
      enumStem="FtmSynconfHwom"
      description="Output mask synchronization is activated by a hardware trigger" >
      <choice name="A hardware trigger does not activate the OUTMASK register synchronization"  value="0" enum="AHardwareTriggerDoesNotActivateTheOutmaskRegisterSynchronization"/>
      <choice name="A hardware trigger activates the OUTMASK register synchronization"          value="1" enum="AHardwareTriggerActivatesTheOutmaskRegisterSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_hwwrbuf" condition="ftm_synconf_hwwrbuf_present"
      enumStem="FtmSynconfHwwrbuf"
      description="MOD, CNTIN, and CV registers synchronization is activated by a hardware trigger" >
      <choice name="A hardware trigger does not activate MOD, CNTIN, and CV registers synchronization"  value="0" enum="AHardwareTriggerDoesNotActivateMod_Cntin_AndCvRegistersSynchronization"/>
      <choice name="A hardware trigger activates MOD, CNTIN, and CV registers synchronization"          value="1" enum="AHardwareTriggerActivatesMod_Cntin_AndCvRegistersSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_hwrstcnt" condition="ftm_synconf_hwrstcnt_present"
      enumStem="FtmSynconfHwrstcnt"
      description="FTM counter synchronization is activated by a hardware trigger" >
      <choice name="A hardware trigger does not activate the FTM counter synchronization"  value="0" enum="AHardwareTriggerDoesNotActivateTheFtmCounterSynchronization"/>
      <choice name="A hardware trigger activates the FTM counter synchronization"          value="1" enum="AHardwareTriggerActivatesTheFtmCounterSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_swsoc" condition="ftm_synconf_swsoc_present"
      enumStem="FtmSynconfSwsoc"
      description="Software output control synchronization is activated by the software trigger" >
      <choice name="The software trigger does not activate the SWOCTRL register synchronization"  value="0" enum="TheSoftwareTriggerDoesNotActivateTheSwoctrlRegisterSynchronization"/>
      <choice name="The software trigger activates the SWOCTRL register synchronization"          value="1" enum="TheSoftwareTriggerActivatesTheSwoctrlRegisterSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_swinvc" condition="ftm_synconf_swinvc_present"
      enumStem="FtmSynconfSwinvc"
      description="Inverting control synchronization is activated by the software trigger" >
      <choice name="The software trigger does not activate the INVCTRL register synchronization"  value="0" enum="TheSoftwareTriggerDoesNotActivateTheInvctrlRegisterSynchronization"/>
      <choice name="The software trigger activates the INVCTRL register synchronization"          value="1" enum="TheSoftwareTriggerActivatesTheInvctrlRegisterSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_swom" condition="ftm_synconf_swom_present"
      enumStem="FtmSynconfSwom"
      description="Output mask synchronization is activated by the software trigger" >
      <choice name="The software trigger does not activate the OUTMASK register synchronization"  value="0" enum="TheSoftwareTriggerDoesNotActivateTheOutmaskRegisterSynchronization"/>
      <choice name="The software trigger activates the OUTMASK register synchronization"          value="1" enum="TheSoftwareTriggerActivatesTheOutmaskRegisterSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_swwrbuf" condition="ftm_synconf_swwrbuf_present"
      enumStem="FtmSynconfSwwrbuf"
      description="MOD, CNTIN, and CV registers synchronization is activated by the software trigger" >
      <choice name="The software trigger does not activate MOD, CNTIN, and CV registers synchronization"  value="0" enum="TheSoftwareTriggerDoesNotActivateMod_Cntin_AndCvRegistersSynchronization"/>
      <choice name="The software trigger activates MOD, CNTIN, and CV registers synchronization"          value="1" enum="TheSoftwareTriggerActivatesMod_Cntin_AndCvRegistersSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_swrstcnt" condition="ftm_synconf_swrstcnt_present"
      enumStem="FtmSynconfSwrstcnt"
      description="FTM counter synchronization is activated by the software trigger" >
      <choice name="The software trigger does not activate the FTM counter synchronization"  value="0" enum="TheSoftwareTriggerDoesNotActivateTheFtmCounterSynchronization"/>
      <choice name="The software trigger activates the FTM counter synchronization"          value="1" enum="TheSoftwareTriggerActivatesTheFtmCounterSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_syncmode" condition="ftm_synconf_syncmode_present"
      enumStem="FtmSynconfSyncmode"
      description="Synchronization Mode" >
      <choice name="Legacy PWM synchronization"    value="0" enum="LegacyPwmSynchronization"/>
      <choice name="Enhanced PWM synchronization"  value="1" enum="EnhancedPwmSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_swoc" condition="ftm_synconf_swoc_present"
      enumStem="FtmSynconfSwoc"
      description="SWOCTRL Register Synchronization with buffer" >
      <choice name="Updated on rising edges of system clock"  value="0" enum="UpdatedOnRisingEdgesOfSystemClock"/>
      <choice name="Updated by PWM synchronization"           value="1" enum="UpdatedByPwmSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_invc" condition="ftm_synconf_invc_present"
      enumStem="FtmSynconfInvc"
      description="INVCTRL Register Synchronization with buffer" >
      <choice name="Updated on rising edges of system clock"  value="0" enum="UpdatedOnRisingEdgesOfSystemClock"/>
      <choice name="Updated by PWM synchronization"           value="1" enum="UpdatedByPwmSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_cntinc" condition="ftm_synconf_cntinc_present"
      enumStem="FtmSynconfCntinc"
      description="CNTIN Register Synchronization with buffer" >
      <choice name="Updated on rising edges of system clock"  value="0" enum="UpdatedOnRisingEdgesOfSystemClock"/>
      <choice name="Updated by PWM synchronization"           value="1" enum="UpdatedByPwmSynchronization"/>
   </binaryOption>

   <binaryOption key="ftm_synconf_hwtrigmode" condition="ftm_synconf_hwtrigmode_present"
      enumStem="FtmSynconfHwtrigmode"
      description="Hardware Trigger Mode" >
      <choice name="TRIGj cleared when trigger j detected"  value="0" enum="TrigjClearedWhenTriggerJDetected"/>
      <choice name="TRIGj unaffected"                       value="1" enum="TrigjUnaffected"/>
   </binaryOption>

   <binaryOption key="ftm_invctrl_inv3en" condition="ftm_invctrl_inv3en_present"
      enumStem="FtmInvctrlInv3en"
      description="Pair Channels 3 Inverting Enable" >
      <choice name="Not inverted"  value="0" enum="NotInverted"/>
      <choice name="Inverted"      value="1" enum="Inverted"/>
   </binaryOption>

   <binaryOption key="ftm_invctrl_inv2en" condition="ftm_invctrl_inv2en_present"
      enumStem="FtmInvctrlInv2en"
      description="Pair Channels 2 Inverting Enable" >
      <choice name="Not inverted"  value="0" enum="NotInverted"/>
      <choice name="Inverted"      value="1" enum="Inverted"/>
   </binaryOption>

   <binaryOption key="ftm_invctrl_inv1en" condition="ftm_invctrl_inv1en_present"
      enumStem="FtmInvctrlInv1en"
      description="Pair Channels 1 Inverting Enable" >
      <choice name="Not inverted"  value="0" enum="NotInverted"/>
      <choice name="Inverted"      value="1" enum="Inverted"/>
   </binaryOption>

   <binaryOption key="ftm_invctrl_inv0en" condition="ftm_invctrl_inv0en_present"
      enumStem="FtmInvctrlInv0en"
      description="Pair Channels 0 Inverting Enable" >
      <choice name="Not inverted"  value="0" enum="NotInverted"/>
      <choice name="Inverted"      value="1" enum="Inverted"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch5ocv" condition="ftm_swoctrl_ch5ocv_present"
      enumStem="FtmSwoctrlCh5ocv"
      description="Channel 5 Software Output Control Value" >
      <choice name="Forces 0 to output"  value="0" enum="Forces0ToOutput"/>
      <choice name="Forces 1 to output"  value="1" enum="Forces1ToOutput"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch4ocv" condition="ftm_swoctrl_ch4ocv_present"
      enumStem="FtmSwoctrlCh4ocv"
      description="Channel 4 Software Output Control Value" >
      <choice name="Forces 0 to output"  value="0" enum="Forces0ToOutput"/>
      <choice name="Forces 1 to output"  value="1" enum="Forces1ToOutput"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch3ocv" condition="ftm_swoctrl_ch3ocv_present"
      enumStem="FtmSwoctrlCh3ocv"
      description="Channel 3 Software Output Control Value" >
      <choice name="Forces 0 to output"  value="0" enum="Forces0ToOutput"/>
      <choice name="Forces 1 to output"  value="1" enum="Forces1ToOutput"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch2ocv" condition="ftm_swoctrl_ch2ocv_present"
      enumStem="FtmSwoctrlCh2ocv"
      description="Channel 2 Software Output Control Value" >
      <choice name="Forces 0 to output"  value="0" enum="Forces0ToOutput"/>
      <choice name="Forces 1 to output"  value="1" enum="Forces1ToOutput"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch1ocv" condition="ftm_swoctrl_ch1ocv_present"
      enumStem="FtmSwoctrlCh1ocv"
      description="Channel 1 Software Output Control Value" >
      <choice name="Forces 0 to output"  value="0" enum="Forces0ToOutput"/>
      <choice name="Forces 1 to output"  value="1" enum="Forces1ToOutput"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch0ocv" condition="ftm_swoctrl_ch0ocv_present"
      enumStem="FtmSwoctrlCh0ocv"
      description="Channel 0 Software Output Control Value" >
      <choice name="Forces 0 to output"  value="0" enum="Forces0ToOutput"/>
      <choice name="Forces 1 to output"  value="1" enum="Forces1ToOutput"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch5oc" condition="ftm_swoctrl_ch5oc_present"
      enumStem="FtmSwoctrlCh5oc"
      description="Channel 5 Software Output Control Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch4oc" condition="ftm_swoctrl_ch4oc_present"
      enumStem="FtmSwoctrlCh4oc"
      description="Channel 4 Software Output Control Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch3oc" condition="ftm_swoctrl_ch3oc_present"
      enumStem="FtmSwoctrlCh3oc"
      description="Channel 3 Software Output Control Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch2oc" condition="ftm_swoctrl_ch2oc_present"
      enumStem="FtmSwoctrlCh2oc"
      description="Channel 2 Software Output Control Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch1oc" condition="ftm_swoctrl_ch1oc_present"
      enumStem="FtmSwoctrlCh1oc"
      description="Channel 1 Software Output Control Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_swoctrl_ch0oc" condition="ftm_swoctrl_ch0oc_present"
      enumStem="FtmSwoctrlCh0oc"
      description="Channel 0 Software Output Control Enable" >
      <choice name="Disabled"    value="0" enum="Disabled"/>
      <choice name="Enabled"     value="1" enum="Enabled"/>
   </binaryOption>

   <binaryOption key="ftm_pwmload_ldok" condition="ftm_pwmload_ldok_present"
      enumStem="FtmPwmloadLdok"
      description="Load Enable" >
      <choice name="Loading updated values is disabled"  value="0" enum="LoadingUpdatedValuesIsDisabled"/>
      <choice name="Loading updated values is enabled"   value="1" enum="LoadingUpdatedValuesIsEnabled"/>
   </binaryOption>

   <binaryOption key="ftm_pwmload_ch5sel" condition="ftm_pwmload_ch5sel_present"
      enumStem="FtmPwmloadCh5sel"
      description="Channel 5 Select" >
      <choice name="Do not include channel in the matching process"  value="0" enum="DoNotIncludeChannelInTheMatchingProcess"/>
      <choice name="Include channel in the matching process"         value="1" enum="IncludeChannelInTheMatchingProcess"/>
   </binaryOption>

   <binaryOption key="ftm_pwmload_ch4sel" condition="ftm_pwmload_ch4sel_present"
      enumStem="FtmPwmloadCh4sel"
      description="Channel 4 Select" >
      <choice name="Do not include channel in the matching process"  value="0" enum="DoNotIncludeChannelInTheMatchingProcess"/>
      <choice name="Include channel in the matching process"         value="1" enum="IncludeChannelInTheMatchingProcess"/>
   </binaryOption>

   <binaryOption key="ftm_pwmload_ch3sel" condition="ftm_pwmload_ch3sel_present"
      enumStem="FtmPwmloadCh3sel"
      description="Channel 3 Select" >
      <choice name="Do not include channel in the matching process"  value="0" enum="DoNotIncludeChannelInTheMatchingProcess"/>
      <choice name="Include channel in the matching process"         value="1" enum="IncludeChannelInTheMatchingProcess"/>
   </binaryOption>

   <binaryOption key="ftm_pwmload_ch2sel" condition="ftm_pwmload_ch2sel_present"
      enumStem="FtmPwmloadCh2sel"
      description="Channel 2 Select" >
      <choice name="Do not include channel in the matching process"  value="0" enum="DoNotIncludeChannelInTheMatchingProcess"/>
      <choice name="Include channel in the matching process"         value="1" enum="IncludeChannelInTheMatchingProcess"/>
   </binaryOption>

   <binaryOption key="ftm_pwmload_ch1sel" condition="ftm_pwmload_ch1sel_present"
      enumStem="FtmPwmloadCh1sel"
      description="Channel 1 Select" >
      <choice name="Do not include channel in the matching process"  value="0" enum="DoNotIncludeChannelInTheMatchingProcess"/>
      <choice name="Include channel in the matching process"         value="1" enum="IncludeChannelInTheMatchingProcess"/>
   </binaryOption>

   <binaryOption key="ftm_pwmload_ch0sel" condition="ftm_pwmload_ch0sel_present"
      enumStem="FtmPwmloadCh0sel"
      description="Channel 0 Select" >
      <choice name="Do not include channel in the matching process"  value="0" enum="DoNotIncludeChannelInTheMatchingProcess"/>
      <choice name="Include channel in the matching process"         value="1" enum="IncludeChannelInTheMatchingProcess"/>
   </binaryOption>

<!-- Grahic here -->  

   <for keys="field:name"
        values="
      ftm_sc_tof:ScTof;
      ftm_sc_toie:ScToie;
      ftm_sc_cpwms:ScCpwms;
      ftm_sc_clks:ScClks;
      ftm_sc_ps:ScPs;
      ftm_status_ch5f:StatusCh5f;
      ftm_status_ch4f:StatusCh4f;
      ftm_status_ch3f:StatusCh3f;
      ftm_status_ch2f:StatusCh2f;
      ftm_status_ch1f:StatusCh1f;
      ftm_status_ch0f:StatusCh0f;
      ftm_mode_faultie:ModeFaultie;
      ftm_mode_faultm:ModeFaultm;
      ftm_mode_captest:ModeCaptest;
      ftm_mode_pwmsync:ModePwmsync;
      ftm_mode_wpdis:ModeWpdis;
      ftm_mode_init:ModeInit;
      ftm_mode_ftmen:ModeFtmen;
      ftm_sync_swsync:SyncSwsync;
      ftm_sync_trig2:SyncTrig2;
      ftm_sync_trig1:SyncTrig1;
      ftm_sync_trig0:SyncTrig0;
      ftm_sync_synchom:SyncSynchom;
      ftm_sync_reinit:SyncReinit;
      ftm_sync_cntmax:SyncCntmax;
      ftm_sync_cntmin:SyncCntmin;
      ftm_outinit_ch5oi:OutinitCh5oi;
      ftm_outinit_ch4oi:OutinitCh4oi;
      ftm_outinit_ch3oi:OutinitCh3oi;
      ftm_outinit_ch2oi:OutinitCh2oi;
      ftm_outinit_ch1oi:OutinitCh1oi;
      ftm_outinit_ch0oi:OutinitCh0oi;
      ftm_outmask_ch5om:OutmaskCh5om;
      ftm_outmask_ch4om:OutmaskCh4om;
      ftm_outmask_ch3om:OutmaskCh3om;
      ftm_outmask_ch2om:OutmaskCh2om;
      ftm_outmask_ch1om:OutmaskCh1om;
      ftm_outmask_ch0om:OutmaskCh0om;
      ftm_combine_faulten2:CombineFaulten2;
      ftm_combine_syncen2:CombineSyncen2;
      ftm_combine_dten2:CombineDten2;
      ftm_combine_decap2:CombineDecap2;
      ftm_combine_decapen2:CombineDecapen2;
      ftm_combine_comp2:CombineComp2;
      ftm_combine_combine2:CombineCombine2;
      ftm_combine_faulten1:CombineFaulten1;
      ftm_combine_syncen1:CombineSyncen1;
      ftm_combine_dten1:CombineDten1;
      ftm_combine_decap1:CombineDecap1;
      ftm_combine_decapen1:CombineDecapen1;
      ftm_combine_comp1:CombineComp1;
      ftm_combine_combine1:CombineCombine1;
      ftm_combine_faulten0:CombineFaulten0;
      ftm_combine_syncen0:CombineSyncen0;
      ftm_combine_dten0:CombineDten0;
      ftm_combine_decap0:CombineDecap0;
      ftm_combine_decapen0:CombineDecapen0;
      ftm_combine_comp0:CombineComp0;
      ftm_combine_combine0:CombineCombine0;
      ftm_deadtime_dtps:DeadtimeDtps;
      ftm_exttrig_trigf:ExttrigTrigf;
      ftm_exttrig_inittrigen:ExttrigInittrigen;
      ftm_exttrig_ch1trig:ExttrigCh1trig;
      ftm_exttrig_ch0trig:ExttrigCh0trig;
      ftm_exttrig_ch5trig:ExttrigCh5trig;
      ftm_exttrig_ch4trig:ExttrigCh4trig;
      ftm_exttrig_ch3trig:ExttrigCh3trig;
      ftm_exttrig_ch2trig:ExttrigCh2trig;
      ftm_pol_pol5:PolPol5;
      ftm_pol_pol4:PolPol4;
      ftm_pol_pol3:PolPol3;
      ftm_pol_pol2:PolPol2;
      ftm_pol_pol1:PolPol1;
      ftm_pol_pol0:PolPol0;
      ftm_fms_faultf:FmsFaultf;
      ftm_fms_wpen:FmsWpen;
      ftm_fms_faultf3:FmsFaultf3;
      ftm_fms_faultf2:FmsFaultf2;
      ftm_fms_faultf1:FmsFaultf1;
      ftm_fms_faultf0:FmsFaultf0;
      ftm_filter_ch3fval:FilterCh3fval;
      ftm_filter_ch2fval:FilterCh2fval;
      ftm_filter_ch1fval:FilterCh1fval;
      ftm_filter_ch0fval:FilterCh0fval;
      ftm_fltctrl_ffval:FltctrlFfval;
      ftm_fltctrl_ffltr3en:FltctrlFfltr3en;
      ftm_fltctrl_ffltr2en:FltctrlFfltr2en;
      ftm_fltctrl_ffltr1en:FltctrlFfltr1en;
      ftm_fltctrl_ffltr0en:FltctrlFfltr0en;
      ftm_fltctrl_fault3en:FltctrlFault3en;
      ftm_fltctrl_fault2en:FltctrlFault2en;
      ftm_fltctrl_fault1en:FltctrlFault1en;
      ftm_fltctrl_fault0en:FltctrlFault0en;
      ftm_conf_gtbeout:ConfGtbeout;
      ftm_conf_gtbeen:ConfGtbeen;
      ftm_conf_bdmmode:ConfBdmmode;
      ftm_fltpol_flt3pol:FltpolFlt3pol;
      ftm_fltpol_flt2pol:FltpolFlt2pol;
      ftm_fltpol_flt1pol:FltpolFlt1pol;
      ftm_fltpol_flt0pol:FltpolFlt0pol;
      ftm_synconf_hwsoc:SynconfHwsoc;
      ftm_synconf_hwinvc:SynconfHwinvc;
      ftm_synconf_hwom:SynconfHwom;
      ftm_synconf_hwwrbuf:SynconfHwwrbuf;
      ftm_synconf_hwrstcnt:SynconfHwrstcnt;
      ftm_synconf_swsoc:SynconfSwsoc;
      ftm_synconf_swinvc:SynconfSwinvc;
      ftm_synconf_swom:SynconfSwom;
      ftm_synconf_swwrbuf:SynconfSwwrbuf;
      ftm_synconf_swrstcnt:SynconfSwrstcnt;
      ftm_synconf_syncmode:SynconfSyncmode;
      ftm_synconf_swoc:SynconfSwoc;
      ftm_synconf_invc:SynconfInvc;
      ftm_synconf_cntinc:SynconfCntinc;
      ftm_synconf_hwtrigmode:SynconfHwtrigmode;
      ftm_invctrl_inv3en:InvctrlInv3en;
      ftm_invctrl_inv2en:InvctrlInv2en;
      ftm_invctrl_inv1en:InvctrlInv1en;
      ftm_invctrl_inv0en:InvctrlInv0en;
      ftm_swoctrl_ch5ocv:SwoctrlCh5ocv;
      ftm_swoctrl_ch4ocv:SwoctrlCh4ocv;
      ftm_swoctrl_ch3ocv:SwoctrlCh3ocv;
      ftm_swoctrl_ch2ocv:SwoctrlCh2ocv;
      ftm_swoctrl_ch1ocv:SwoctrlCh1ocv;
      ftm_swoctrl_ch0ocv:SwoctrlCh0ocv;
      ftm_swoctrl_ch5oc:SwoctrlCh5oc;
      ftm_swoctrl_ch4oc:SwoctrlCh4oc;
      ftm_swoctrl_ch3oc:SwoctrlCh3oc;
      ftm_swoctrl_ch2oc:SwoctrlCh2oc;
      ftm_swoctrl_ch1oc:SwoctrlCh1oc;
      ftm_swoctrl_ch0oc:SwoctrlCh0oc;
      ftm_pwmload_ldok:PwmloadLdok;
      ftm_pwmload_ch5sel:PwmloadCh5sel;
      ftm_pwmload_ch4sel:PwmloadCh4sel;
      ftm_pwmload_ch3sel:PwmloadCh3sel;
      ftm_pwmload_ch2sel:PwmloadCh2sel;
      ftm_pwmload_ch1sel:PwmloadCh1sel;
      ftm_pwmload_ch0sel:PwmloadCh0sel">
      <setTemplate variables="%(field)"
      ><![CDATA[
         \t/**
         \t * Set %description
         \t *
         %paramDescription
         \t */
         \tstatic void configure%(name)(%params) {
         \t   %defaultFieldExpression
         \t}\n\n
      ]]></setTemplate>
   </for>

<!--   ========== FTM Init class =============================== -->

   <template key="init_description" namespace="all">
   <![CDATA[
      \t/**
      \t * Class used to do initialisation of the $(_class)
      \t *
      \t * This class has a templated constructor that accepts various values.
      \t *
      \t * @note This constructor may be used to create a const instance in Flash
      \t *
      \t * Example:
      \t * @code
      \t * static const $(_class)::Init init {
      \t *
      \t *   // Setup values
      \t *   FtmScTof_NotOverflowed                    // Timer Overflow Flag,
      \t *   FtmScToie_InterruptsDisabled              // Timer Overflow Interrupt Enable,
      \t *   FtmScCpwms_LeftAligned                    // Centre-Aligned PWM Select,
      \t *   FtmScClks_Disabled                        // Clock Source Selection,
      \t *   FtmScPs_DivideBy1                         // Prescale Factor Selection,
      \t *   0,                                        // Counter Value,
      \t *   0,                                        // Modulo Value,
      \t *   0,                                        // Initial Value of the FTM Counter,
      \t *   FtmStatusCh5f_NoEvent                     // Channel 5 Event Flag,
      \t *   FtmStatusCh4f_NoEvent                     // Channel 4 Event Flag,
      \t *   FtmStatusCh3f_NoEvent                     // Channel 3 Event Flag,
      \t *   FtmStatusCh2f_NoEvent                     // Channel 2 Event Flag,
      \t *   FtmStatusCh1f_NoEvent                     // Channel 1 Event Flag,
      \t *   FtmStatusCh0f_NoEvent                     // Channel 0 Event Flag,
      \t *   FtmModeFaultie_Disabled                   // Fault Interrupt Enable,
      \t *   FtmModeFaultm_Disabled                    // Fault Control Mode,
      \t *   FtmModeCaptest_Disabled                   // Capture Test Mode Enable,
      \t *   FtmModePwmsync_NoRestrictions             // PWM Synchronization Mode,
      \t *   FtmModeWpdis_Enabled                      // Write Protection Disable,
      \t *   FtmModeInit_Write1ToInitialise            // Initialize the Channel Outputs,
      \t *   FtmModeFtmen_TpmRegistersOnly             // FTM Enable,
      \t *   FtmSyncSwsync_NotSelected                 // PWM Synchronization Software Trigger,
      \t *   FtmSyncTrig2_Disabled                     // PWM Synchronization Hardware Trigger 2,
      \t *   FtmSyncTrig1_Disabled                     // PWM Synchronization Hardware Trigger 1,
      \t *   FtmSyncTrig0_Disabled                     // PWM Synchronization Hardware Trigger 0,
      \t *   FtmSyncSynchom_RisingEdgesOfTheSystemClock    // Output Mask Synchronization with buffer,
      \t *   FtmSyncReinit_CountsNormally              // FTM Counter Reinitialization by Synchronization (FTM Counter Synchronization),
      \t *   FtmSyncCntmax_Disabled                    // Maximum Loading Point Enable,
      \t *   FtmSyncCntmin_Disabled                    // Minimum Loading Point Enable,
      \t *   FtmOutinitCh5oi_Low                       // Channel 5 Output Initialization Value,
      \t *   FtmOutinitCh4oi_Low                       // Channel 4 Output Initialization Value,
      \t *   FtmOutinitCh3oi_Low                       // Channel 3 Output Initialization Value,
      \t *   FtmOutinitCh2oi_Low                       // Channel 2 Output Initialization Value,
      \t *   FtmOutinitCh1oi_Low                       // Channel 1 Output Initialization Value,
      \t *   FtmOutinitCh0oi_Low                       // Channel 0 Output Initialization Value,
      \t *   FtmOutmaskCh5om_NotMasked                 // Channel 5 Output Mask,
      \t *   FtmOutmaskCh4om_NotMasked                 // Channel 4 Output Mask,
      \t *   FtmOutmaskCh3om_NotMasked                 // Channel 3 Output Mask,
      \t *   FtmOutmaskCh2om_NotMasked                 // Channel 2 Output Mask,
      \t *   FtmOutmaskCh1om_NotMasked                 // Channel 1 Output Mask,
      \t *   FtmOutmaskCh0om_NotMasked                 // Channel 0 Output Mask,
      \t *   FtmCombineFaulten2_Disabled               // Fault Control Enable for Channels 4 &amp; 5,
      \t *   FtmCombineSyncen2_Disabled                // Synchronization Enable for Channels 4 &amp; 5,
      \t *   FtmCombineDten2_Disabled                  // Deadtime Enable for Channels 4 &amp; 5,
      \t *   FtmCombineDecap2_Inactive                 // Dual Edge Capture Mode Captures for Channels 4 &amp; 5,
      \t *   FtmCombineDecapen2_Disabled               // Dual Edge Capture Mode Enable for Channels 4 &amp; 5,
      \t *   FtmCombineComp2_Same                      // Complement for Channels 4 &amp; 5,
      \t *   FtmCombineCombine2_Independent            // Combine Channels 4 &amp; 5,
      \t *   FtmCombineFaulten1_Disabled               // Fault Control Enable for Channels 2 &amp; 3,
      \t *   FtmCombineSyncen1_Disabled                // Synchronization Enable for Channels 2 &amp; 3,
      \t *   FtmCombineDten1_Disabled                  // Deadtime Enable for Channels 2 &amp; 3,
      \t *   FtmCombineDecap1_Inactive                 // Dual Edge Capture Mode Captures for Channel 2 &amp; 3,
      \t *   FtmCombineDecapen1_Disabled               // Dual Edge Capture Mode Enable for Channels 2 &amp; 3,
      \t *   FtmCombineComp1_Same                      // Complement for Channels 2 &amp; 3,
      \t *   FtmCombineCombine1_Independent            // Combine Channels 2 &amp; 3,
      \t *   FtmCombineFaulten0_Disabled               // Fault Control Enable for Channels 0 &amp; 1,
      \t *   FtmCombineSyncen0_Disabled                // PWM Synchronization Enable for Channels 0 &amp; 1,
      \t *   FtmCombineDten0_Disabled                  // Deadtime Enable for Channels 0 &amp; 1,
      \t *   FtmCombineDecap0_Inactive                 // Dual Edge Capture Mode Captures for Channel 0 &amp; 1,
      \t *   FtmCombineDecapen0_Disabled               // Dual Edge Capture Mode Enable for Channels 0 &amp; 1,
      \t *   FtmCombineComp0_Same                      // Complement for Channels 0 &amp; 1,
      \t *   FtmCombineCombine0_Independent            // Combine Channels 0 &amp; 1,
      \t *   FtmDeadtimeDtps_DivideBy1                 // Deadtime Prescaler Value,
      \t *   0,                                        // Deadtime Value,
      \t *   FtmExttrigTrigf_NoTrigger                 // Channel Trigger Flag,
      \t *   FtmExttrigInittrigen_Disabled             // Initialization Trigger Enable,
      \t *   FtmExttrigCh1trig_TriggerDisabled         // Channel 1 Trigger Enable,
      \t *   FtmExttrigCh0trig_TriggerDisabled         // Channel 0 Trigger Enable,
      \t *   FtmExttrigCh5trig_TriggerDisabled         // Channel 5 Trigger Enable,
      \t *   FtmExttrigCh4trig_TriggerDisabled         // Channel 4 Trigger Enable,
      \t *   FtmExttrigCh3trig_TriggerDisabled         // Channel 3 Trigger Enable,
      \t *   FtmExttrigCh2trig_TriggerDisabled         // Channel 2 Trigger Enable,
      \t *   FtmPolPol5_ActiveHigh                     // Channel 5 Polarity,
      \t *   FtmPolPol4_ActiveHigh                     // Channel 4 Polarity,
      \t *   FtmPolPol3_ActiveHigh                     // Channel 3 Polarity,
      \t *   FtmPolPol2_ActiveHigh                     // Channel 2 Polarity,
      \t *   FtmPolPol1_ActiveHigh                     // Channel 1 Polarity,
      \t *   FtmPolPol0_ActiveHigh                     // Channel 0 Polarity,
      \t *   FtmFmsFaultf_NoFault                      // Fault Detection Flag,
      \t *   FtmFmsWpen_Unprotected                    // Write Protection Enable,
      \t *   FtmFmsFaultf3_NoFault                     // Fault Detection Flag 3,
      \t *   FtmFmsFaultf2_NoFault                     // Fault Detection Flag 2,
      \t *   FtmFmsFaultf1_NoFault                     // Fault Detection Flag 1,
      \t *   FtmFmsFaultf0_NoFault                     // Fault Detection Flag 0,
      \t *   FtmFilterCh3fval_Disabled                 // Channel 3 Input Filter,
      \t *   FtmFilterCh2fval_Disabled                 // Channel 2 Input Filter,
      \t *   FtmFilterCh1fval_Disabled                 // Channel 1 Input Filter,
      \t *   FtmFilterCh0fval_Disabled                 // Channel 0 Input Filter,
      \t *   FtmFltctrlFfval_FilterDisabled            // Fault Input Filter\nSelects the filter value for the fault inputs,
      \t *   FtmFltctrlFfltr3en_FilterDisabled         // Fault Input 3 Filter Enable,
      \t *   FtmFltctrlFfltr2en_FilterDisabled         // Fault Input 2 Filter Enable,
      \t *   FtmFltctrlFfltr1en_FilterDisabled         // Fault Input 1 Filter Enable,
      \t *   FtmFltctrlFfltr0en_FilterDisabled         // Fault Input 0 Filter Enable,
      \t *   FtmFltctrlFault3en_InputDisabled          // Fault Input 3 Enable,
      \t *   FtmFltctrlFault2en_InputDisabled          // Fault Input 2 Enable,
      \t *   FtmFltctrlFault1en_InputDisabled          // Fault Input 1 Enable,
      \t *   FtmFltctrlFault0en_InputDisabled          // Fault Input 0 Enable,
      \t *   FtmConfGtbeout_Disabled                   // Global Time Base Output,
      \t *   FtmConfGtbeen_Disabled                    // External Global Time Base Enable,
      \t *   FtmConfBdmmode_Stopped_OutputsFunctional    // Controls operation in BDM Mode,
      \t *   0,                                        // TOF Frequency,
      \t *   FtmFltpolFlt3pol_ActiveHigh               // Fault Input 3 Polarity,
      \t *   FtmFltpolFlt2pol_ActiveHigh               // Fault Input 2 Polarity,
      \t *   FtmFltpolFlt1pol_ActiveHigh               // Fault Input 1 Polarity,
      \t *   FtmFltpolFlt0pol_ActiveHigh               // Fault Input 0 Polarity,
      \t *   FtmSynconfHwsoc_AHardwareTriggerDoesNotActivateTheSwoctrlRegisterSynchronization    // Software output control synchronization is activated by a hardware trigger,
      \t *   FtmSynconfHwinvc_AHardwareTriggerDoesNotActivateTheInvctrlRegisterSynchronization    // Inverting control synchronization is activated by a hardware trigger,
      \t *   FtmSynconfHwom_AHardwareTriggerDoesNotActivateTheOutmaskRegisterSynchronization    // Output mask synchronization is activated by a hardware trigger,
      \t *   FtmSynconfHwwrbuf_AHardwareTriggerDoesNotActivateMod_Cntin_AndCvRegistersSynchronization    // MOD, CNTIN, and CV registers synchronization is activated by a hardware trigger,
      \t *   FtmSynconfHwrstcnt_AHardwareTriggerDoesNotActivateTheFtmCounterSynchronization    // FTM counter synchronization is activated by a hardware trigger,
      \t *   FtmSynconfSwsoc_TheSoftwareTriggerDoesNotActivateTheSwoctrlRegisterSynchronization    // Software output control synchronization is activated by the software trigger,
      \t *   FtmSynconfSwinvc_TheSoftwareTriggerDoesNotActivateTheInvctrlRegisterSynchronization    // Inverting control synchronization is activated by the software trigger,
      \t *   FtmSynconfSwom_TheSoftwareTriggerDoesNotActivateTheOutmaskRegisterSynchronization    // Output mask synchronization is activated by the software trigger,
      \t *   FtmSynconfSwwrbuf_TheSoftwareTriggerDoesNotActivateMod_Cntin_AndCvRegistersSynchronization    // MOD, CNTIN, and CV registers synchronization is activated by the software trigger,
      \t *   FtmSynconfSwrstcnt_TheSoftwareTriggerDoesNotActivateTheFtmCounterSynchronization    // FTM counter synchronization is activated by the software trigger,
      \t *   FtmSynconfSyncmode_LegacyPwmSynchronization    // Synchronization Mode,
      \t *   FtmSynconfSwoc_UpdatedOnRisingEdgesOfSystemClock    // SWOCTRL Register Synchronization with buffer,
      \t *   FtmSynconfInvc_UpdatedOnRisingEdgesOfSystemClock    // INVCTRL Register Synchronization with buffer,
      \t *   FtmSynconfCntinc_UpdatedOnRisingEdgesOfSystemClock    // CNTIN Register Synchronization with buffer,
      \t *   FtmSynconfHwtrigmode_TrigjClearedWhenTriggerJDetected    // Hardware Trigger Mode,
      \t *   FtmInvctrlInv3en_NotInverted              // Pair Channels 3 Inverting Enable,
      \t *   FtmInvctrlInv2en_NotInverted              // Pair Channels 2 Inverting Enable,
      \t *   FtmInvctrlInv1en_NotInverted              // Pair Channels 1 Inverting Enable,
      \t *   FtmInvctrlInv0en_NotInverted              // Pair Channels 0 Inverting Enable,
      \t *   FtmSwoctrlCh5ocv_Forces0ToOutput          // Channel 5 Software Output Control Value,
      \t *   FtmSwoctrlCh4ocv_Forces0ToOutput          // Channel 4 Software Output Control Value,
      \t *   FtmSwoctrlCh3ocv_Forces0ToOutput          // Channel 3 Software Output Control Value,
      \t *   FtmSwoctrlCh2ocv_Forces0ToOutput          // Channel 2 Software Output Control Value,
      \t *   FtmSwoctrlCh1ocv_Forces0ToOutput          // Channel 1 Software Output Control Value,
      \t *   FtmSwoctrlCh0ocv_Forces0ToOutput          // Channel 0 Software Output Control Value,
      \t *   FtmSwoctrlCh5oc_Disabled                  // Channel 5 Software Output Control Enable,
      \t *   FtmSwoctrlCh4oc_Disabled                  // Channel 4 Software Output Control Enable,
      \t *   FtmSwoctrlCh3oc_Disabled                  // Channel 3 Software Output Control Enable,
      \t *   FtmSwoctrlCh2oc_Disabled                  // Channel 2 Software Output Control Enable,
      \t *   FtmSwoctrlCh1oc_Disabled                  // Channel 1 Software Output Control Enable,
      \t *   FtmSwoctrlCh0oc_Disabled                  // Channel 0 Software Output Control Enable,
      \t *   FtmPwmloadLdok_LoadingUpdatedValuesIsDisabled    // Load Enable,
      \t *   FtmPwmloadCh5sel_DoNotIncludeChannelInTheMatchingProcess    // Channel 5 Select,
      \t *   FtmPwmloadCh4sel_DoNotIncludeChannelInTheMatchingProcess    // Channel 4 Select,
      \t *   FtmPwmloadCh3sel_DoNotIncludeChannelInTheMatchingProcess    // Channel 3 Select,
      \t *   FtmPwmloadCh2sel_DoNotIncludeChannelInTheMatchingProcess    // Channel 2 Select,
      \t *   FtmPwmloadCh1sel_DoNotIncludeChannelInTheMatchingProcess    // Channel 1 Select,
      \t *   FtmPwmloadCh0sel_DoNotIncludeChannelInTheMatchingProcess    // Channel 0 Select,
      \t * };
      \t *
      \t * // Initialise $(_class) from values specified above
      \t * $(_class)::configure(init)
      \t * @endcode
      \t */
   ]]>
   </template>

   <template namespace="usbdm">
   <![CDATA[
      class $(_class)BasicInfo {
      \t
      public:
      \t
      \t/**
      \t * Type definition for $(_class) interrupt call back.
      \t */
      \ttypedef void (*CallbackFunction)(const uint32_t &);
      \t\n
   ]]>
   </template>

   <template namespace="usbdm">
   <![CDATA[
      $(init_description)
      \tclass Init {
      \t
      \tpublic:
      \t   /**
      \t    * Copy Constructor
      \t    */
      \t   constexpr Init(const Init &other) = default;
      \t
      \t   /**
      \t    * Default Constructor
      \t    */
      \t   constexpr Init() = default;
      \t\n
   ]]>
   </template>

<!--   Member variables -->

   <setTemplate namespace="usbdm" variables="irqHandlingMethod" codeGenCondition="irqHandlingMethod"
    ><![CDATA[
      \t   /// %description
      \t   %params = nullptr;\n\n
   ]]></setTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_sc_tof,ftm_sc_toie,ftm_sc_cpwms,ftm_sc_clks,ftm_sc_ps"
   ><![CDATA[
      \t   /// Status and Control
      \t   uint32_t sc = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_cnt_count"
   ><![CDATA[
      \t   /// Counter
      \t   uint32_t cnt = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_mod_mod"
   ><![CDATA[
      \t   /// Modulo
      \t   uint32_t mod = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_cntin_init"
   ><![CDATA[
      \t   /// Counter Initial Value
      \t   uint32_t cntin = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_status_ch5f,ftm_status_ch4f,ftm_status_ch3f,ftm_status_ch2f,ftm_status_ch1f,ftm_status_ch0f"
   ><![CDATA[
      \t   /// Capture and Compare Status
      \t   uint32_t status = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_mode_faultie,ftm_mode_faultm,ftm_mode_captest,ftm_mode_pwmsync,ftm_mode_wpdis,ftm_mode_init,ftm_mode_ftmen"
   ><![CDATA[
      \t   /// Features Mode Selection
      \t   uint32_t mode = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_sync_swsync,ftm_sync_trig2,ftm_sync_trig1,ftm_sync_trig0,ftm_sync_synchom,ftm_sync_reinit,ftm_sync_cntmax,ftm_sync_cntmin"
   ><![CDATA[
      \t   /// Synchronization
      \t   uint32_t sync = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_outinit_ch5oi,ftm_outinit_ch4oi,ftm_outinit_ch3oi,ftm_outinit_ch2oi,ftm_outinit_ch1oi,ftm_outinit_ch0oi"
   ><![CDATA[
      \t   /// Initial State for Channels Output
      \t   uint32_t outinit = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_outmask_ch5om,ftm_outmask_ch4om,ftm_outmask_ch3om,ftm_outmask_ch2om,ftm_outmask_ch1om,ftm_outmask_ch0om"
   ><![CDATA[
      \t   /// Output Mask
      \t   uint32_t outmask = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_combine_faulten2,ftm_combine_syncen2,ftm_combine_dten2,ftm_combine_decap2,ftm_combine_decapen2,ftm_combine_comp2,ftm_combine_combine2,ftm_combine_faulten1,ftm_combine_syncen1,ftm_combine_dten1,ftm_combine_decap1,ftm_combine_decapen1,ftm_combine_comp1,ftm_combine_combine1,ftm_combine_faulten0,ftm_combine_syncen0,ftm_combine_dten0,ftm_combine_decap0,ftm_combine_decapen0,ftm_combine_comp0,ftm_combine_combine0"
   ><![CDATA[
      \t   /// Function for Linked Channels
      \t   uint32_t combine = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_deadtime_dtps,ftm_deadtime_dtval"
   ><![CDATA[
      \t   /// Deadtime Insertion Control
      \t   uint32_t deadtime = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_exttrig_trigf,ftm_exttrig_inittrigen,ftm_exttrig_ch1trig,ftm_exttrig_ch0trig,ftm_exttrig_ch5trig,ftm_exttrig_ch4trig,ftm_exttrig_ch3trig,ftm_exttrig_ch2trig"
   ><![CDATA[
      \t   /// FTM External Trigger
      \t   uint32_t exttrig = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_pol_pol5,ftm_pol_pol4,ftm_pol_pol3,ftm_pol_pol2,ftm_pol_pol1,ftm_pol_pol0"
   ><![CDATA[
      \t   /// Channels Polarity
      \t   uint32_t pol = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_fms_faultf,ftm_fms_wpen,ftm_fms_faultf3,ftm_fms_faultf2,ftm_fms_faultf1,ftm_fms_faultf0"
   ><![CDATA[
      \t   /// Fault Mode Status
      \t   uint32_t fms = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_filter_ch3fval,ftm_filter_ch2fval,ftm_filter_ch1fval,ftm_filter_ch0fval"
   ><![CDATA[
      \t   /// Input Capture Filter Control
      \t   uint32_t filter = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_fltctrl_ffval,ftm_fltctrl_ffltr3en,ftm_fltctrl_ffltr2en,ftm_fltctrl_ffltr1en,ftm_fltctrl_ffltr0en,ftm_fltctrl_fault3en,ftm_fltctrl_fault2en,ftm_fltctrl_fault1en,ftm_fltctrl_fault0en"
   ><![CDATA[
      \t   /// Fault Control
      \t   uint32_t fltctrl = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_conf_gtbeout,ftm_conf_gtbeen,ftm_conf_bdmmode,ftm_conf_numtof"
   ><![CDATA[
      \t   /// Configuration
      \t   uint32_t conf = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_fltpol_flt3pol,ftm_fltpol_flt2pol,ftm_fltpol_flt1pol,ftm_fltpol_flt0pol"
   ><![CDATA[
      \t   /// FTM Fault Input Polarity
      \t   uint32_t fltpol = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_synconf_hwsoc,ftm_synconf_hwinvc,ftm_synconf_hwom,ftm_synconf_hwwrbuf,ftm_synconf_hwrstcnt,ftm_synconf_swsoc,ftm_synconf_swinvc,ftm_synconf_swom,ftm_synconf_swwrbuf,ftm_synconf_swrstcnt,ftm_synconf_syncmode,ftm_synconf_swoc,ftm_synconf_invc,ftm_synconf_cntinc,ftm_synconf_hwtrigmode"
   ><![CDATA[
      \t   /// Synchronization Configuration
      \t   uint32_t synconf = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_invctrl_inv3en,ftm_invctrl_inv2en,ftm_invctrl_inv1en,ftm_invctrl_inv0en"
   ><![CDATA[
      \t   /// FTM Inverting Control
      \t   uint32_t invctrl = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_swoctrl_ch5ocv,ftm_swoctrl_ch4ocv,ftm_swoctrl_ch3ocv,ftm_swoctrl_ch2ocv,ftm_swoctrl_ch1ocv,ftm_swoctrl_ch0ocv,ftm_swoctrl_ch5oc,ftm_swoctrl_ch4oc,ftm_swoctrl_ch3oc,ftm_swoctrl_ch2oc,ftm_swoctrl_ch1oc,ftm_swoctrl_ch0oc"
   ><![CDATA[
      \t   /// FTM Software Output Control
      \t   uint32_t swoctrl = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm"
      variables="ftm_pwmload_ldok,ftm_pwmload_ch5sel,ftm_pwmload_ch4sel,ftm_pwmload_ch3sel,ftm_pwmload_ch2sel,ftm_pwmload_ch1sel,ftm_pwmload_ch0sel"
   ><![CDATA[
      \t   /// FTM PWM Load
      \t   uint32_t pwmload = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm" codeGenCondition="irqHandlingMethod"
      variables="/PCR/nvic_irqLevel"
   ><![CDATA[
      \t   /// %description
      \t   %enumClass %registerName = %enumClass_Normal;\n\n
   ]]></initialValueTemplate>

<!--   Configure methods -->

   <template discardRepeats="true" key="/FTM/InitMethod" namespace="all" ><![CDATA[
      \t/**
      \t * Configure FTM from values specified in init
      \t *
      \t * @param init Class containing initialisation values
      \t */
      \tstatic void configure(const typename Info::Init &init) {
      \t
      \t   if constexpr (Info::irqHandlerInstalled) {
      \t      // Only set call-back if feature enabled
      \t      setCallback(init.callbackFunction);
      \t      enableNvicInterrupts(init.irqlevel);
      \t   }
      \t   enable();
      \t
      \t   ftm->SC    = init.sc;
      \t   ftm->CNT    = init.cnt;
      \t   ftm->MOD    = init.mod;
      \t   ftm->CNTIN    = init.cntin;
      \t   ftm->STATUS    = init.status;
      \t   ftm->MODE    = init.mode;
      \t   ftm->SYNC    = init.sync;
      \t   ftm->OUTINIT    = init.outinit;
      \t   ftm->OUTMASK    = init.outmask;
      \t   ftm->COMBINE    = init.combine;
      \t   ftm->DEADTIME    = init.deadtime;
      \t   ftm->EXTTRIG    = init.exttrig;
      \t   ftm->POL    = init.pol;
      \t   ftm->FMS    = init.fms;
      \t   ftm->FILTER    = init.filter;
      \t   ftm->FLTCTRL    = init.fltctrl;
      \t   ftm->CONF    = init.conf;
      \t   ftm->FLTPOL    = init.fltpol;
      \t   ftm->SYNCONF    = init.synconf;
      \t   ftm->INVCTRL    = init.invctrl;
      \t   ftm->SWOCTRL    = init.swoctrl;
      \t   ftm->PWMLOAD    = init.pwmload;
      \t
      \t   calibrate();
      \t}
      \t
      \t/**
      \t * Configure with default settings.
      \t * Configuration determined from Configure.usbdmProject
      \t */
      \tstatic inline void defaultConfigure() {
      \t
      \t   // Update settings
      \t   configure(Info::DefaultInitValue);
      \t}\n
   ]]></template>

<!--   Constructors -->

   <setTemplate namespace="usbdm" codeGenCondition="irqHandlingMethod"
      variables="irqHandlingMethod"
      linePadding="xxx"
    ><![CDATA[
      \t   /**
      \t    * Constructor for %description
      \t    *
      \t    * @tparam   Types
      \t    * @param    rest
      %paramDescription
      \t    */
      \t   template <typename... Types>
      \t   constexpr Init(%params, Types... rest) : Init(rest...) {
      \t
      \t      this->%enumParam0 = %paramExpression;
      \t   }\n\n
   ]]></setTemplate>

   <setTemplate namespace="usbdm"
      variables="/PCR/nvic_irqLevel"
      linePadding="xxx"
    ><![CDATA[
      \t   /**
      \t    * Constructor for %description
      \t    *
      \t    * @tparam   Types
      \t    * @param    rest
      %paramDescription
      \t    */
      \t   template <typename... Types>
      \t   constexpr Init(%params, Types... rest) : Init(rest...) {
      \t
      #if $(irqHandlingMethod)
      \t      %registerName = %paramExpression;
      #else
      \t      (void)%paramExpression;
      #endif
      \t   }\n\n
   ]]></setTemplate>

   <for keys="r"
      values="
            ftm_sc_tof;
            ftm_sc_toie;
            ftm_sc_cpwms;
            ftm_sc_clks;
            ftm_sc_ps;
            ftm_status_ch5f;
            ftm_status_ch4f;
            ftm_status_ch3f;
            ftm_status_ch2f;
            ftm_status_ch1f;
            ftm_status_ch0f;
            ftm_mode_faultie;
            ftm_mode_faultm;
            ftm_mode_captest;
            ftm_mode_pwmsync;
            ftm_mode_wpdis;
            ftm_mode_init;
            ftm_mode_ftmen;
            ftm_sync_swsync;
            ftm_sync_trig2;
            ftm_sync_trig1;
            ftm_sync_trig0;
            ftm_sync_synchom;
            ftm_sync_reinit;
            ftm_sync_cntmax;
            ftm_sync_cntmin;
            ftm_outinit_ch5oi;
            ftm_outinit_ch4oi;
            ftm_outinit_ch3oi;
            ftm_outinit_ch2oi;
            ftm_outinit_ch1oi;
            ftm_outinit_ch0oi;
            ftm_outmask_ch5om;
            ftm_outmask_ch4om;
            ftm_outmask_ch3om;
            ftm_outmask_ch2om;
            ftm_outmask_ch1om;
            ftm_outmask_ch0om;
            ftm_combine_faulten2;
            ftm_combine_syncen2;
            ftm_combine_dten2;
            ftm_combine_decap2;
            ftm_combine_decapen2;
            ftm_combine_comp2;
            ftm_combine_combine2;
            ftm_combine_faulten1;
            ftm_combine_syncen1;
            ftm_combine_dten1;
            ftm_combine_decap1;
            ftm_combine_decapen1;
            ftm_combine_comp1;
            ftm_combine_combine1;
            ftm_combine_faulten0;
            ftm_combine_syncen0;
            ftm_combine_dten0;
            ftm_combine_decap0;
            ftm_combine_decapen0;
            ftm_combine_comp0;
            ftm_combine_combine0;
            ftm_deadtime_dtps;
            ftm_exttrig_trigf;
            ftm_exttrig_inittrigen;
            ftm_exttrig_ch1trig;
            ftm_exttrig_ch0trig;
            ftm_exttrig_ch5trig;
            ftm_exttrig_ch4trig;
            ftm_exttrig_ch3trig;
            ftm_exttrig_ch2trig;
            ftm_pol_pol5;
            ftm_pol_pol4;
            ftm_pol_pol3;
            ftm_pol_pol2;
            ftm_pol_pol1;
            ftm_pol_pol0;
            ftm_fms_faultf;
            ftm_fms_wpen;
            ftm_fms_faultf3;
            ftm_fms_faultf2;
            ftm_fms_faultf1;
            ftm_fms_faultf0;
            ftm_filter_ch3fval;
            ftm_filter_ch2fval;
            ftm_filter_ch1fval;
            ftm_filter_ch0fval;
            ftm_fltctrl_ffval;
            ftm_fltctrl_ffltr3en;
            ftm_fltctrl_ffltr2en;
            ftm_fltctrl_ffltr1en;
            ftm_fltctrl_ffltr0en;
            ftm_fltctrl_fault3en;
            ftm_fltctrl_fault2en;
            ftm_fltctrl_fault1en;
            ftm_fltctrl_fault0en;
            ftm_conf_gtbeout;
            ftm_conf_gtbeen;
            ftm_conf_bdmmode;
            ftm_fltpol_flt3pol;
            ftm_fltpol_flt2pol;
            ftm_fltpol_flt1pol;
            ftm_fltpol_flt0pol;
            ftm_synconf_hwsoc;
            ftm_synconf_hwinvc;
            ftm_synconf_hwom;
            ftm_synconf_hwwrbuf;
            ftm_synconf_hwrstcnt;
            ftm_synconf_swsoc;
            ftm_synconf_swinvc;
            ftm_synconf_swom;
            ftm_synconf_swwrbuf;
            ftm_synconf_swrstcnt;
            ftm_synconf_syncmode;
            ftm_synconf_swoc;
            ftm_synconf_invc;
            ftm_synconf_cntinc;
            ftm_synconf_hwtrigmode;
            ftm_invctrl_inv3en;
            ftm_invctrl_inv2en;
            ftm_invctrl_inv1en;
            ftm_invctrl_inv0en;
            ftm_swoctrl_ch5ocv;
            ftm_swoctrl_ch4ocv;
            ftm_swoctrl_ch3ocv;
            ftm_swoctrl_ch2ocv;
            ftm_swoctrl_ch1ocv;
            ftm_swoctrl_ch0ocv;
            ftm_swoctrl_ch5oc;
            ftm_swoctrl_ch4oc;
            ftm_swoctrl_ch3oc;
            ftm_swoctrl_ch2oc;
            ftm_swoctrl_ch1oc;
            ftm_swoctrl_ch0oc;
            ftm_pwmload_ldok;
            ftm_pwmload_ch5sel;
            ftm_pwmload_ch4sel;
            ftm_pwmload_ch3sel;
            ftm_pwmload_ch2sel;
            ftm_pwmload_ch1sel;
            ftm_pwmload_ch0sel
            ">
      <setTemplate namespace="usbdm"
         variables="%(r)"
         linePadding="xxx">
      <![CDATA[
         \t   /**
         \t    * Constructor for %description
         \t    *
         \t    * @tparam   Types
         \t    * @param    rest
         \t    *
         %comments
         \t    */
         \t   template <typename... Types>
         \t   constexpr Init(%params, Types... rest) : Init(rest...) {
         \t
         \t      %registerName = (%registerName&~%mask) | %paramExpression;
         \t   }
         \t\n
      ]]>
      </setTemplate>
   </for>

   <for keys="r"
      values="
            ftm_cnt_count;
            ftm_mod_mod;
            ftm_cntin_init;
            ftm_deadtime_dtval;
            ftm_conf_numtof
            ">
      <setTemplate namespace="usbdm"
         variables="%(r)"
         linePadding="xxx">
      <![CDATA[
         \t   /**
         \t    * Constructor for %description
         \t    *
         \t    * @tparam   Types
         \t    * @param    rest
         \t    *
         \t    * @param value %description
         \t    */
         \t   template <typename... Types>
         \t   constexpr Init(unsigned value, Types... rest) : Init(rest...) {
         \t
         \t      %registerName = (%registerName&~%mask) | value;
         \t   }
         \t\n
      ]]>
      </setTemplate>
   </for>

<!--   Default Initialisation value -->

   <initialValueTemplate
      separator=","
      terminator=","
      variables="
            ftm_sc_tof,
            ftm_sc_toie,
            ftm_sc_cpwms,
            ftm_sc_clks,
            ftm_sc_ps,
            ftm_status_ch5f,
            ftm_status_ch4f,
            ftm_status_ch3f,
            ftm_status_ch2f,
            ftm_status_ch1f,
            ftm_status_ch0f,
            ftm_mode_faultie,
            ftm_mode_faultm,
            ftm_mode_captest,
            ftm_mode_pwmsync,
            ftm_mode_wpdis,
            ftm_mode_init,
            ftm_mode_ftmen,
            ftm_sync_swsync,
            ftm_sync_trig2,
            ftm_sync_trig1,
            ftm_sync_trig0,
            ftm_sync_synchom,
            ftm_sync_reinit,
            ftm_sync_cntmax,
            ftm_sync_cntmin,
            ftm_outinit_ch5oi,
            ftm_outinit_ch4oi,
            ftm_outinit_ch3oi,
            ftm_outinit_ch2oi,
            ftm_outinit_ch1oi,
            ftm_outinit_ch0oi,
            ftm_outmask_ch5om,
            ftm_outmask_ch4om,
            ftm_outmask_ch3om,
            ftm_outmask_ch2om,
            ftm_outmask_ch1om,
            ftm_outmask_ch0om,
            ftm_combine_faulten2,
            ftm_combine_syncen2,
            ftm_combine_dten2,
            ftm_combine_decap2,
            ftm_combine_decapen2,
            ftm_combine_comp2,
            ftm_combine_combine2,
            ftm_combine_faulten1,
            ftm_combine_syncen1,
            ftm_combine_dten1,
            ftm_combine_decap1,
            ftm_combine_decapen1,
            ftm_combine_comp1,
            ftm_combine_combine1,
            ftm_combine_faulten0,
            ftm_combine_syncen0,
            ftm_combine_dten0,
            ftm_combine_decap0,
            ftm_combine_decapen0,
            ftm_combine_comp0,
            ftm_combine_combine0,
            ftm_deadtime_dtps,
            ftm_exttrig_trigf,
            ftm_exttrig_inittrigen,
            ftm_exttrig_ch1trig,
            ftm_exttrig_ch0trig,
            ftm_exttrig_ch5trig,
            ftm_exttrig_ch4trig,
            ftm_exttrig_ch3trig,
            ftm_exttrig_ch2trig,
            ftm_pol_pol5,
            ftm_pol_pol4,
            ftm_pol_pol3,
            ftm_pol_pol2,
            ftm_pol_pol1,
            ftm_pol_pol0,
            ftm_fms_faultf,
            ftm_fms_wpen,
            ftm_fms_faultf3,
            ftm_fms_faultf2,
            ftm_fms_faultf1,
            ftm_fms_faultf0,
            ftm_filter_ch3fval,
            ftm_filter_ch2fval,
            ftm_filter_ch1fval,
            ftm_filter_ch0fval,
            ftm_fltctrl_ffval,
            ftm_fltctrl_ffltr3en,
            ftm_fltctrl_ffltr2en,
            ftm_fltctrl_ffltr1en,
            ftm_fltctrl_ffltr0en,
            ftm_fltctrl_fault3en,
            ftm_fltctrl_fault2en,
            ftm_fltctrl_fault1en,
            ftm_fltctrl_fault0en,
            ftm_conf_gtbeout,
            ftm_conf_gtbeen,
            ftm_conf_bdmmode,
            ftm_fltpol_flt3pol,
            ftm_fltpol_flt2pol,
            ftm_fltpol_flt1pol,
            ftm_fltpol_flt0pol,
            ftm_synconf_hwsoc,
            ftm_synconf_hwinvc,
            ftm_synconf_hwom,
            ftm_synconf_hwwrbuf,
            ftm_synconf_hwrstcnt,
            ftm_synconf_swsoc,
            ftm_synconf_swinvc,
            ftm_synconf_swom,
            ftm_synconf_swwrbuf,
            ftm_synconf_swrstcnt,
            ftm_synconf_syncmode,
            ftm_synconf_swoc,
            ftm_synconf_invc,
            ftm_synconf_cntinc,
            ftm_synconf_hwtrigmode,
            ftm_invctrl_inv3en,
            ftm_invctrl_inv2en,
            ftm_invctrl_inv1en,
            ftm_invctrl_inv0en,
            ftm_swoctrl_ch5ocv,
            ftm_swoctrl_ch4ocv,
            ftm_swoctrl_ch3ocv,
            ftm_swoctrl_ch2ocv,
            ftm_swoctrl_ch1ocv,
            ftm_swoctrl_ch0ocv,
            ftm_swoctrl_ch5oc,
            ftm_swoctrl_ch4oc,
            ftm_swoctrl_ch3oc,
            ftm_swoctrl_ch2oc,
            ftm_swoctrl_ch1oc,
            ftm_swoctrl_ch0oc,
            ftm_pwmload_ldok,
            ftm_pwmload_ch5sel,
            ftm_pwmload_ch4sel,
            ftm_pwmload_ch3sel,
            ftm_pwmload_ch2sel,
            ftm_pwmload_ch1sel,
            ftm_pwmload_ch0sel,
            irqLevel
         "
   ><![CDATA[
      $(init_description)
      \ttypedef $(_class)BasicInfo::Init Init;
      \t
      \t/**
      \t * Default initialisation value for $(_class)
      \t * This value is created from Configure.usbdmProject settings
      \t */
      \tstatic constexpr Init DefaultInitValue = {%initExpression
      \t};\n\n
   ]]></initialValueTemplate>

   <template namespace="usbdm">
      <![CDATA[
      \t}; // $(_class)::BasicInfo::Init\n\n
   ]]>
   </template>

   <template namespace="usbdm">
      <![CDATA[
      }; // $(_class)::BasicInfo\n\n
   ]]>
   </template>

<signals />

</peripheralPage>
