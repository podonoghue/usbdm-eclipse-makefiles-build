<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- sim_mk82f25615.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="SIM">
    
   <xi:include href="_default_instance.xml"/>

   <xi:include href="_simCommon.xml"/>

   <xi:include href="_sim_rtc_independent.xml"/>

   <!-- Add Oscillator OSC2 = IRC48 to MCG inputs -->
   <for keys="n" dim="/SIM/numberOfClockSettings">
      <addChoices key="mcg_c7_oscsel[%(n)]">
         <choice value="2" ref="/SIM/system_irc48m_clock" name="OSC2(IRC48MCLK) - 48 MHz " />
      </addChoices>
   </for>
   
   <intOption name="system_irc48m_clock" 
      constant="true"  
      hidden="true"
      units="Hz"
      description="Frequency of Internal 48MHz Clock [IRC48MCLK]"
      toolTip="48 MHz Internal Oscillator [May be trimmed against USB bus]"
      origin="48MHz clock from IRC48MCLK"
      value="48000000"/>
   
   <intOption name="system_usb_clkin_clock"  
      constant="true" 
      hidden="true"
      origin="USB Clock In pin"
      units="Hz"
      description="Frequency of External USB Clock"
      toolTip="Externally provided clock for USB on USB_CLKIN" 
      value="0" />

   <for keys="n" values="0">
      <choiceOption name="adc%(n)_cfg1_adiclk" description="ADC%(n) Clock Source"
         hidden="true"
         enumStem="AdcClockSource"
         target="system_adc%(n)_clock"
         toolTip="Clock source for the ADC module" >
         <choice value="0" name="Bus clock"                   ref="system_bus_clock"       enum="Bus"       code="SystemBusClock"            />
         <choice value="1" name="Irc48M clock"                ref="system_irc48m_clock"    enum="Irc48mClk" code="irc48mClock"               />
         <choice value="2" name="Alternate clock (OSCERCLK)"  ref="/OSC0/oscer_clock"      enum="OscerClk"  code="Osc0Info::getOscerClock()" />
         <choice value="3" name="Asynchronous clock (ADACK)"  ref="/ADC0/adcInternalClock" enum="Asynch"    code="2000000"                   isDefault="true" />
      </choiceOption>
   
      <intOption name="system_adc%(n)_clock"  
         hidden="true"
         constant="true"
         derived="true" 
         origin="ADC%(n) clock"
         units="Hz"
         description="Frequency of ADC Clock" />
   </for>
   
   <category name="SOPT1" description="RTC clocks" >

      <stringOption name="sim_sopt1_ramsize" />
      <aliasOption key="sim_sopt1_osc32ksel" constant="false" />
      <aliasOption key="system_erclk32k_clock" />
      
      <choiceOption name="sim_sopt1_usbpower" 
         enumStem="SimUsbPower"
         description="USB voltage regulator power control"
         toolTip="Controls when the USB voltage regulator is enabled in\n
        (RUN), (STOP, VLPS, LLS and VLLS) or (VLPR and VLPW) modes">
         <choice value="SIM_SOPT1_USBREGEN(0)|SIM_SOPT1_USBSSTBY(0)|SIM_SOPT1_USBVSTBY(0)"  name="Disabled in all modes"         enum="Disabled"               />
         <choice value="SIM_SOPT1_USBREGEN(1)|SIM_SOPT1_USBSSTBY(0)|SIM_SOPT1_USBVSTBY(0)"  name="Enabled in all modes"          enum="EnabledInAll"           isDefault="true" />
         <choice value="SIM_SOPT1_USBREGEN(1)|SIM_SOPT1_USBSSTBY(1)|SIM_SOPT1_USBVSTBY(0)"  name="Enabled in run and low power"  enum="EnabledInRun_LowPower"  />
         <choice value="SIM_SOPT1_USBREGEN(1)|SIM_SOPT1_USBSSTBY(0)|SIM_SOPT1_USBVSTBY(1)"  name="Enabled in run and stop"       enum="EnabledInRun_Stop"      />
         <choice value="SIM_SOPT1_USBREGEN(1)|SIM_SOPT1_USBSSTBY(1)|SIM_SOPT1_USBVSTBY(1)"  name="Enabled in run only"           enum="EnabledInRun"           />
      </choiceOption>

   </category>

   <category name="SOPT2" description="Clock Gating">
   
      <aliasOption key="/SIM/sim_sopt2_rtcclkoutsel" constant="false"/>
      <aliasOption key="/SIM/rtc_clkout" />
      
      <aliasOption key="/SIM/sim_sopt2_pllfllsel[]" constant="false" />
      <aliasOption key="/SIM/system_peripheral_clock[]" optional="true" />

      <aliasOption key="/SIM/sim_sopt2_usbsrc[]" constant="false" />
      <aliasOption key="/SIM/system_usbfs_clock[0]" />

      <aliasOption key="/OSC0/oscer_clock" optional="true" />
      <aliasOption key="/MCG/system_mcgirclk_clock[0]" optional="true" />
      
      <choiceOption name="sim_sopt2_lpuartsrc" 
         enumStem="SimLpuartClockSource"
         target="system_lpuart_clock"
         description="LPUART Clock select"
         toolTip="Selects the clock source for the transmit and receive clock\n
	     This is selection is shared by all LPUARTs">
         <choice value="0"  name="Disabled"                     ref="disabled"                            enum="Disabled"        code="0"                           />
         <choice value="1"  name="Peripheral Clock/SIM_CLKDIV3" ref="system_peripheral_postdivider_clock" enum="PeripheralClk"   code="getDividedPeripheralClock()" />
         <choice value="2"  name="OSCERCLK clock"               ref="/OSC0/oscer_clock"                   enum="OscerClk"        code="Osc0Info::getOscerClock()"   />
         <choice value="3"  name="MCGIRCLK clock"               ref="/MCG/system_mcgirclk_clock"          enum="McgIrClk"        code="McgInfo::getMcgIrClock()"    />
      </choiceOption>
   
      <intOption name="system_lpuart_clock" 
         derived="true" 
         constant="true"
         units="Hz"
         description="LPUART Clock frequency"
         toolTip="Frequency of clock to LPUART"
         value="0" />
      
      <choiceOption name="sim_sopt2_flexiosrc" 
         enumStem="SimFlexioClockSource"
         target="system_flexio_clock"
         description="FLEXIO Clock source"
         toolTip="Selects the clock source for the Flexio">
         <choice value="0"  name="System core clock"            ref="system_core_clock"                   enum="SystemCoreClk"   code="SystemCoreClock"             />
         <choice value="1"  name="Peripheral Clock/SIM_CLKDIV3" ref="system_peripheral_postdivider_clock" enum="PeripheralClk"   code="getDividedPeripheralClock()" />
         <choice value="2"  name="OSCERCLK clock"               ref="/OSC0/oscer_clock"                   enum="OscerClk"        code="Osc0Info::getOscerClock()"   />
         <choice value="3"  name="MCGIRCLK clock"               ref="/MCG/system_mcgirclk_clock"          enum="McgIrClk"        code="McgInfo::getMcgIrClock()"    />
      </choiceOption>
      
      <intOption name="system_flexio_clock"
         derived="true" 
         constant="true"
         units="Hz"
         description="FLEXIO Clock frequency"
         toolTip="Frequency of clock to TPM"
         value="0" />
      
      <choiceOption name="sim_sopt2_tpmsrc" 
         enumStem="SimTpmClockSource"
         target="system_tpm_clock"
         description="TPM Clock source"
         toolTip="Selects the clock source for the TPM counter clock">
         <choice value="0"  name="Disabled"                     ref="disabled"                            enum="Disabled"        code="0"                           />
         <choice value="1"  name="Peripheral Clock/SIM_CLKDIV3" ref="system_peripheral_postdivider_clock" enum="PeripheralClk"   code="getDividedPeripheralClock()" />
         <choice value="2"  name="OSCERCLK clock"               ref="/OSC0/oscer_clock"                   enum="OscerClk"        code="Osc0Info::getOscerClock()"   />
         <choice value="3"  name="MCGIRCLK clock"               ref="/MCG/system_mcgirclk_clock"          enum="McgIrClk"        code="McgInfo::getMcgIrClock()"    />
      </choiceOption>
      
      <intOption name="system_tpm_clock"
         derived="true" 
         constant="true"
         units="Hz"
         description="TPM Clock frequency"
         toolTip="Frequency of clock to TPM"
         value="0" />
      
      <choiceOption name="sim_sopt2_emvsimsrc" 
         enumStem="SimEmvsimClockSource"
         target="system_emvsim_clock"
         description="EMVSIM Clock source"
         toolTip="Selects the clock source for the EMVSIM">
         <choice value="0"  name="Disabled"                     ref="disabled"                            enum="Disabled"        code="0"                           />
         <choice value="1"  name="Peripheral Clock/SIM_CLKDIV3" ref="system_peripheral_postdivider_clock" enum="PeripheralClk"   code="getDividedPeripheralClock()" />
         <choice value="2"  name="OSCERCLK clock"               ref="/OSC0/oscer_clock"                   enum="OscerClk"        code="Osc0Info::getOscerClock()"   />
         <choice value="3"  name="MCGIRCLK clock"               ref="/MCG/system_mcgirclk_clock"          enum="McgIrClk"        code="McgInfo::getMcgIrClock()"    />
      </choiceOption>

      <intOption name="system_emvsim_clock"
         derived="true" 
         constant="true"
         units="Hz"
         description="TPM Clock frequency"
         toolTip="Frequency of clock to TPM"
         value="0" />
      
      <choiceOption name="sim_sopt2_fbsl" 
         enumStem="SimFlexbusSecurity"
         description="FlexBus off-chip access security level"
         toolTip="Permitted CPU accesses off-chip via the FlexBus interface" >
         <choice value="0"  name="None - All accesses are disallowed"                enum="None"     />
         <choice value="2"  name="Data - Data only accesses allowed"                 enum="DataOnly" />
         <choice value="3"  name="All - Data and instruction accesses are allowed"   enum="All"      />
      </choiceOption>
      
      <intOption name="system_sdhc_clockin"  
         origin="SDHC Clock In pin"
         units="Hz"
         description="Frequency of External SDHC Clock"
         toolTip="Externally provided clock for SDHC" 
         value="0" />

      <choiceOption name="sim_sopt2_sdhcsrc" 
         target="system_sdhc_clock"
         enumStem="SimSdhcClockSource"
         description="SDHC Clock select"
         toolTip="Selects the clock source for the SDHC clock" >
         <choice value="0"  name="Core/system clock"            ref="system_core_clock"       enum="CoreClk"         code="SystemCoreClock"            isDefault="true" />
         <choice value="1"  name="Peripheral Clock"             ref="system_peripheral_clock" enum="PeripheralClk"   code="getPeripheralClock()" />
         <choice value="2"  name="OSCERCLK clock"               ref="/OSC0/oscer_clock"       enum="OscerClk"        code="Osc0Info::getOscerClock()" />
         <choice value="3"  name="External clock (SDHC0_CLKIN)" ref="system_sdhc_clockin"     enum="External"        code="sdhcExternalClock" />
      </choiceOption>
      
      <intOption name="system_sdhc_clock" 
         constant="true"
         units="Hz"
         description="SDHC Clock frequency (not implemented)"
         toolTip="Frequency of clock to SDHC"
         value="0" />
         
      <choiceOption name="sim_sopt2_clkoutsel" 
         enumStem="SimClkoutSel"
         description="CLKOUT pin clock"
         toolTip="Clock to output on the CLKOUT pin" >
         <choice value="0"  name="FlexBus CLKOUT"      enum="FlexBusClk"    />
         <choice value="2"  name="Flash clock"         enum="FlashClk" isDefault="true" />
         <choice value="3"  name="LPO clock (1 kHz)"   enum="LpoClk"       />
         <choice value="4"  name="MCGIRCLK"            enum="McgIrClk"     />
         <choice value="5"  name="RTC 32.768kHz clock" enum="RtcClk"       />
         <choice value="6"  name="OSCERCLK0"           enum="OscerClk0"    />
         <choice value="7"  name="IRC 48 MHz clock"    enum="Irc48MClk" />
      </choiceOption>
      
      <binaryOption name="sim_sopt2_traceclksel" 
         enumStem="SimTraceClockoutSel"
         description="Debug trace clock select"
         toolTip="Selects the core/system clock or MCG output clock (MCGOUTCLK)\n
             as the trace clock source" >
         <choice value="0"  name="MCGOUTCLK"          enum="McgOutClk"  isDefault="true" />
         <choice value="1"  name="Core/system clock"  enum="CoreClk"    />
      </binaryOption>   
   </category>
   
   <category name="SOPT4" description="FTM signals">
      
      <binaryOption name="sim_sopt4_ftm0trg0src" 
         enumStem="SimFtm0Trg0Src"
         description="FTM0 Hardware Trigger 0 Source"
         toolTip="Source of FTM hardware trigger 0" >
         <choice value="0"  name="CMP0 output"        enum="Cmp0" isDefault="true" />
         <choice value="1"  name="FTM1 channel match" enum="Ftm1" />
      </binaryOption>
      
      <binaryOption name="sim_sopt4_ftm0trg1src" 
         enumStem="SimFtm0Trg1Src"
         description="FTM0 Hardware Trigger 1 Source"
         toolTip="Source of FTM hardware trigger 1" >
         <choice value="0"  name="PDB output trigger 1" enum="PdbTrigger1" isDefault="true" />
         <choice value="1"  name="FTM2 channel match"   enum="Ftm2" />
      </binaryOption>
      
      <choiceOption name="sim_sopt4_ftm3trg0src" 
         enumStem="SimFtm3Trg0Src"
         description="FTM3 Hardware Trigger 0 Source"
         toolTip="Source of FTM hardware trigger 0" 
         constant="true" >
         <choice value="1"  name="FTM1 channel match" enum="Ftm1" isDefault="true" />
      </choiceOption>
      
      <choiceOption name="sim_sopt4_ftm3trg1src" 
         enumStem="SimFtm3Trg1Src"
         description="FTM3 Hardware Trigger 1 Source"
         toolTip="Source of FTM hardware trigger 1" 
         constant="true" >
         <choice value="1"  name="FTM2 channel match" enum="Ftm2" isDefault="true" />
      </choiceOption>
      
      <for keys="p" values="0;1;2;3">
         <binaryOption name="sim_sopt4_ftm%(p)clksel" 
            enumStem="SimFtm%(p)ClkSel"
            description="FTM%(p) External Clock Pin"
            toolTip="External pin used to drive the clock to the FTM module">
            <choice value="0"  name="FTM_CLKIN0 pin" enum="0" isDefault="true" />
            <choice value="1"  name="FTM_CLKIN1 pin" enum="1" />
         </binaryOption>
      </for>
   
      <choiceOption name="sim_sopt4_ftm1ch0src" 
         enumStem="SimFtm1Ch0Src"
         description="FTM 1 channel 0 input capture source"
         toolTip="Source for FTM channel 0 input capture\n
            NOTE: When the FTM is not in input capture mode, clear this field">
         <choice value="0" name="FTM1_CH0 signal"          enum="IcPin"  isDefault="true"/>
         <choice value="1" name="CMP0 output"              enum="Cmp0"     />
         <choice value="2" name="CMP1 output"              enum="Cmp1"     />
         <choice value="3" name="USB start of frame pulse" enum="UsbSof"   />
      </choiceOption>
      
      <choiceOption name="sim_sopt4_ftm2ch0src" 
         enumStem="SimFtm2Ch0Src"
         description="FTM2 channel 0 input capture source"
         toolTip="Source for FTM channel 0 input capture\n
            NOTE: When the FTM is not in input capture mode, clear this field">
         <choice value="0" name="FTM2_CH0 signal"  enum="IcPin"  isDefault="true"/>
         <choice value="1" name="CMP0 output"      enum="Cmp0" />
         <choice value="2" name="CMP1 output"      enum="Cmp1" />
      </choiceOption>
      
      <binaryOption name="sim_sopt4_ftm2ch1src" 
         enumStem="SimFtm2Ch1Src"
         description="FTM2 channel 1 input capture source"
         toolTip="Source for FTM channel 1 input capture\n
            NOTE: When the FTM is not in input capture mode, clear this field">
         <choice value="0" name="FTM2_CH1 signal"                    enum="IcPin" isDefault="true"/>
         <choice value="2" name="FTM2_CH1 xor FTM2_CH0 xor FTM1_CH1" enum="Ftm2Ch1_Ftm2Ch2_Ftm1Ch1" />
      </binaryOption>
   
      <for keys="ftmNum" values="0;1;2;3">
         <binaryOption key="sim_sopt4_ftm%(ftmNum)flt0" 
            enumStem="SimFtm%(ftmNum)Flt0"
            description="FTM%(ftmNum) Fault 0 Select"
            toolTip="Source of FTM fault input 0" >
            <choice value="0"  name="FTM%(ftmNum)_FLT0 pin" enum="Ftm%(ftmNum)Fault0" isDefault="true" />
            <choice value="1"  name="CMP0 output"           enum="Cmp0" />
         </binaryOption>
      </for>
      
      <for keys="ftmNum" values="0">
         <binaryOption key="sim_sopt4_ftm%(ftmNum)flt1" 
            enumStem="SimFtm%(ftmNum)Flt1"
            description="FTM%(ftmNum) Fault 1 Select"
            toolTip="Source of FTM fault input 1" >
            <choice value="0"  name="FTM%(ftmNum)_FLT1 pin" enum="Ftm%(ftmNum)Fault1" isDefault="true" />
            <choice value="1"  name="CMP1 output"           enum="Cmp1" />
         </binaryOption>
      </for>
   </category>
   
   <category name="SOPT5" description="UART signals">
      
      <for keys="n" values="0;1">
         <choiceOption key="sim_sopt5_lpuart%(n)rxsrc" 
            enumStem="SimLpuart%(n)RxSrc"
            description="LPUART %(n) receive data source"
            toolTip="Source for the LPUART receive data">
            <choice value="0" name="Rx pin"        enum="RxPin"  isDefault="true" />
            <choice value="1" name="CMP0 output"   enum="Cmp0" />
            <choice value="2" name="CMP1 output"   enum="Cmp1" />
         </choiceOption>
      
         <choiceOption key="sim_sopt5_lpuart%(n)txsrc" 
            enumStem="SimLpuart%(n)TxSrc"
            description="LPUART %(n) transmit data source"
            toolTip="Source for the LPUART transmit data">
            <choice value="0" name="Tx pin"     isDefault="true"         enum="Direct" />
            <choice value="1" name="Tx pin modulated by TPM1 channel 0"  enum="ModulatedByTpm1Ch0" />
            <choice value="2" name="Tx pin modulated by TPM2 channel 0"  enum="ModulatedByTpm2Ch0"  />
         </choiceOption>
      </for>
   </category>

   <category name="SOPT7" description="ADC signals">
      <for keys="adc" values="0">
         <choiceOption key="sim_sopt7_adc%(adc)trigger" 
            enumStem="SimAdc%(adc)TriggerMode"
            description="ADC%(adc) trigger mode"
            toolTip="Alternative conversion triggers for ADC\n
               _Pdb              - ADC is triggered by PDB\n
               _Alt_PreTrigger_0 - ADC is triggered by SimAdc0Trigger selection and uses pretrigger 0 = A (SC1[0]/R[0])\n
               _Alt_PreTrigger_1 - ADC is triggered by SimAdc0Trigger selection and uses pretrigger 1 = B (SC1[1]/R[1])" >
            <choice value="SIM_SOPT7_ADC0ALTTRGEN(0)"                                        name="Triggered by PDB"            enum="Pdb" isDefault="true" />
            <choice value="SIM_SOPT7_ADC%(adc)ALTTRGEN(1)|SIM_SOPT7_ADC%(adc)PRETRGSEL(0)"   name="Pre-trigger 0 = A (SC1[0])"  enum="Alt_PreTrigger_0" />
            <choice value="SIM_SOPT7_ADC%(adc)ALTTRGEN(1)|SIM_SOPT7_ADC%(adc)PRETRGSEL(1)"   name="Pre-trigger 1 = B (SC1[1])"  enum="Alt_PreTrigger_1" />
         </choiceOption>
      
         <choiceOption key="sim_sopt7_adc%(adc)trgsel"
            enumStem="SimAdc%(adc)Trigger"
            description="ADC%(adc) trigger"
            toolTip="ADC Trigger source in STOP and VLPS modes, or when ADC Alternative Trigger is active">
            <choice value="0"  name="External trigger pin input (PDB0_EXTRG)" enum="External" isDefault="true" />
            <choice value="1"  name="CMP 0 output"                            enum="Cmp0"        />
            <choice value="1"  name="CMP 1 output"                            enum="Cmp1"        />
            <choice value="4"  name="PIT trigger 0"                           enum="PitCh0"      />
            <choice value="5"  name="PIT trigger 1"                           enum="PitCh1"      />
            <choice value="6"  name="PIT trigger 2"                           enum="PitCh2"      />
            <choice value="7"  name="PIT trigger 3"                           enum="PitCh3"      />
            <choice value="8"  name="FTM0 trigger"                            enum="Ftm0"        />
            <choice value="9"  name="FTM1 trigger"                            enum="Ftm1"        />
            <choice value="10" name="FTM2 trigger"                            enum="Ftm2"        />
            <choice value="11" name="FTM3 trigger"                            enum="Ftm3"        />
            <choice value="12" name="RTC alarm"                               enum="RtcAlarm"    />
            <choice value="13" name="RTC seconds"                             enum="RtcSeconds"  />
            <choice value="14" name="LPTMR trigger"                           enum="Lptmr"       />
            <choice value="15" name="TPM1 channel 0/1 (A/B pretrigger)"       enum="Tmp1Triggers" />
         </choiceOption>
      </for>      
   </category>
    
   <category name="SOPT8" description="FTM signals">
      <for keys="ch" values="0;1;2;3;4;5;6;7">
         <binaryOption key="sim_sopt8_ftm0och%(ch)src" 
            enumStem="SimFtm0Ch%(ch)OutputSrc"
            description="FTM0 channel %(ch) output source" 
            toolTip="Allows modulation of FTM output">
            <choice value="0" name="FTM0 ch %(ch) direct"                 enum="Direct"             isDefault="true" />
            <choice value="1" name="FTM0 ch %(ch) modulated by FTM1 ch 1" enum="ModulatedByFtm1Ch1" />
         </binaryOption>
      </for>

      <for keys="ch" values="0;1;2;3;4;5;6;7">
         <binaryOption key="sim_sopt8_ftm3och%(ch)src" 
            enumStem="SimFtm3Ch%(ch)OutputSrc"
            description="FTM3 channel %(ch) output source"  
            toolTip="Allows modulation of FTM output">
            <choice value="0" name="FTM3 ch %(ch) direct"                 enum="Direct"             isDefault="true" />
            <choice value="1" name="FTM3 ch %(ch) modulated by FTM2 ch 1" enum="ModulatedByFtm2Ch1" />
         </binaryOption>
      </for>
      
         <choiceOption key="sim_sopt8_ftm_syncbits" 
            enumStem="FtmSync"
            hidden="true"
            description="FTM Hardware Trigger 0 Software Asserts"
            toolTip="This allows software to assert the hardware trigger (TRIG0) FTM inputs\n
                     Use setFtmSyncBits() to assert TRIG0 input on multiple FTMs\n
                     Use clearFtmSyncBits() or clearAllFtmSyncBits() to allow other trigger sources to assert">
            <choice value="SIM_SOPT8_FTM0SYNCBIT_MASK" name="FTM0 trigger mask" enum="Ftm0" />
            <choice value="SIM_SOPT8_FTM1SYNCBIT_MASK" name="FTM1 trigger mask" enum="Ftm1" />
            <choice value="SIM_SOPT8_FTM2SYNCBIT_MASK" name="FTM2 trigger mask" enum="Ftm2" />
            <choice value="SIM_SOPT8_FTM3SYNCBIT_MASK" name="FTM3 trigger mask" enum="Ftm3" />
         </choiceOption>
   </category>

   <category name="SOPT9" description="TPM signals">
      <for keys="p" values="1;2">
         <binaryOption key="sim_sopt9_tpm%(p)clksel" 
            enumStem="SimTpm%(p)ClkSel"
            description="TPM%(p) External Clock Pin"
            toolTip="External pin used to drive the clock to the TPM module">
            <choice value="0"  name="TPM_CLKIN0 pin" enum="0" isDefault="true" />
            <choice value="1"  name="TPM_CLKIN1 pin" enum="1" />
         </binaryOption>
      
         <choiceOption key="sim_sopt9_tpm%(p)ch0src" 
            enumStem="SimTpm%(p)Ch0Src"
            description="TPM%(p) channel 0 input capture source"
            toolTip="Source for TPM channel 0 input capture\n
               NOTE: When the TPM is not in input capture mode, clear this field">
            <choice value="0" name="TPM1_CH0 signal"          enum="IcPin"  isDefault="true"/>
            <choice value="1" name="CMP0 output"              enum="Cmp0"     />
            <choice value="2" name="CMP1 output"              enum="Cmp1"     />
         </choiceOption>      
      </for>
   </category>

   <for keys="n" dim="/SIM/numberOfClockSettings" >
      <aliasCategoryOption key="/MCG/ClockConfig[%(n)]" derived="true" constant="true" >
      
         <choiceOption name="sim_sopt2_pllfllsel[%(n)]"
            enumStem="SimPeripheralClockSource"
            target="system_peripheral_clock[%(n)]"
            description="Peripheral Clock"
            toolTip="Clock for various peripherals (LPUART, TPM etc.)">
            <choice value="0"  name="MCGFLLCLK clock" ref="/MCG/system_mcgfllclk_clock[%(n)]" enum="McgFllClk"  code="SystemMcgFllClock"     isDefault="true" />
            <choice value="1"  name="MCGPLLCLK clock" ref="/MCG/system_mcgpllclk_clock[%(n)]" enum="McgPllClk"  code="SystemMcgPllClock"     />
            <choice value="3"  name="IRC48 MHz clock" ref="/SIM/system_irc48m_clock"          enum="Irc48mClk"  code="irc48mClock"           />
         </choiceOption>
   
         <intOption name="system_peripheral_clock[%(n)]"
            derived="true"
            constant="true"
            units="Hz"
            description="Peripheral Clock frequency"
            toolTip="Frequency of Peripheral Clock available to various peripherals"  />
	 
         <choiceOption name="sim_sopt2_usbsrc[%(n)]" 
            enumStem="SimUsbFullSpeedClockSource"
            description="USB Clock"
            toolTip="Source for the USB clock">
            <choice value="0"  name="External bypass clock (USB_CLKIN)" enum="External" />
            <choice value="1"  name="Peripheral Clock/SIM_CLKDIV2"      enum="PeripheralClk" isDefault="true" />
         </choiceOption>
      
         <intOption name="system_usbfs_clock[%(n)]" 
            derived="true"
            constant="true"
            units="Hz"
            description="USB Full Speed Clock"
            toolTip="Frequency of clock to USB full speed controller"
            value="0" />
    
         <choiceOption name="sim_clkdiv2_usb[%(n)]"
            enumStem="SimUsbClockDivider"
            description="USB clock divider (SIM_CLKDIV2)" 
            toolTip="Sets the clock divider when MCGFLLCLK, MCGPLLCLK, or IRC48M clock\n
                     is the USB clock source[%(n)]">
            <choice value="1"  name="Multiply by 2 (div=0, frac=1)"  enum="Mult2 " code="SIM_CLKDIV2_USBDIV(0)|SIM_CLKDIV2_USBFRAC(1)" />
            <choice value="0"  name="Multiply by 1 (div=0, frac=0)"  enum="Mult1 " code="SIM_CLKDIV2_USBDIV(0)|SIM_CLKDIV2_USBFRAC(0)" isDefault="true" />
            <choice value="3"  name="Multiply by 1 (div=1, frac=1)"  enum="Mult1b" code="SIM_CLKDIV2_USBDIV(1)|SIM_CLKDIV2_USBFRAC(1)" />
            <choice value="5"  name="Divide by 1.5 (div=2, frac=1)"  enum="Div1_5" code="SIM_CLKDIV2_USBDIV(2)|SIM_CLKDIV2_USBFRAC(1)" />
            <choice value="2"  name="Divide by 2 (div=1, frac=0)"    enum="Div2  " code="SIM_CLKDIV2_USBDIV(1)|SIM_CLKDIV2_USBFRAC(0)" />
            <choice value="7"  name="Divide by 2 (div=3, frac=1)"    enum="Div2b " code="SIM_CLKDIV2_USBDIV(2)|SIM_CLKDIV2_USBFRAC(1)" />
            <choice value="9"  name="Divide by 2.5 (div=4, frac=1)"  enum="Div2_5" code="SIM_CLKDIV2_USBDIV(4)|SIM_CLKDIV2_USBFRAC(1)" />
            <choice value="4"  name="Divide by 3 (div=2, frac=0)"    enum="Div3  " code="SIM_CLKDIV2_USBDIV(5)|SIM_CLKDIV2_USBFRAC(0)" />
            <choice value="11" name="Divide by 3 (div=5, frac=1)"    enum="Div3b " code="SIM_CLKDIV2_USBDIV(5)|SIM_CLKDIV2_USBFRAC(1)" />
            <choice value="13" name="Divide by 3.5 (div=6, frac=1)"  enum="Div3_5" code="SIM_CLKDIV2_USBDIV(6)|SIM_CLKDIV2_USBFRAC(1)" />
            <choice value="6"  name="Divide by 4 (div=3, frac=0)"    enum="Div4  " code="SIM_CLKDIV2_USBDIV(3)|SIM_CLKDIV2_USBFRAC(0)" />
            <choice value="15" name="Divide by 4 (div=7, frac=1)"    enum="Div4b " code="SIM_CLKDIV2_USBDIV(7)|SIM_CLKDIV2_USBFRAC(1)" />
            <choice value="8"  name="Divide by 5 (div=4, frac=0)"    enum="Div5  " code="SIM_CLKDIV2_USBDIV(4)|SIM_CLKDIV2_USBFRAC(0)" />
            <choice value="10" name="Divide by 6 (div=5, frac=0)"    enum="Div6  " code="SIM_CLKDIV2_USBDIV(5)|SIM_CLKDIV2_USBFRAC(0)" />
            <choice value="12" name="Divide by 7 (div=6, frac=0)"    enum="Div7  " code="SIM_CLKDIV2_USBDIV(6)|SIM_CLKDIV2_USBFRAC(0)" />
            <choice value="14" name="Divide by 8 (div=7, frac=0)"    enum="Div8  " code="SIM_CLKDIV2_USBDIV(7)|SIM_CLKDIV2_USBFRAC(0)" />
         </choiceOption>
   
         <choiceOption name="sim_clkdiv3_pllfll[%(n)]"
            description="Peripheral Clock post-divider (SIM_CLKDIV3)" 
            toolTip="Selects the post PLL/FLL clock divider for various peripherals\n
                     (LPUART, TPM, FlexIO)">
            <choice value="1"   name="Multiply by 2 (div=0, frac=1)"  enum="Mult2 " code="SIM_CLKDIV3_PLLFLLDIV(0)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
            <choice value="0"   name="Multiply by 1 (div=0, frac=0)"  enum="Mult1 " code="SIM_CLKDIV3_PLLFLLDIV(0)|SIM_CLKDIV3_PLLFLLFRAC(0)"  isDefault="true" />
            <choice value="3"   name="Multiply by 1 (div=1, frac=1)"  enum="Mult1b" code="SIM_CLKDIV3_PLLFLLDIV(1)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
            <choice value="5"   name="Divide by 1.5 (div=2, frac=1)"  enum="Div1_5" code="SIM_CLKDIV3_PLLFLLDIV(2)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
            <choice value="2"   name="Divide by 2 (div=1, frac=0)"    enum="Div2  " code="SIM_CLKDIV3_PLLFLLDIV(1)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
            <choice value="7"   name="Divide by 2 (div=3, frac=1)"    enum="Div2b " code="SIM_CLKDIV3_PLLFLLDIV(3)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
            <choice value="9"   name="Divide by 2.5 (div=4, frac=1)"  enum="Div2_5" code="SIM_CLKDIV3_PLLFLLDIV(4)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
            <choice value="4"   name="Divide by 3 (div=2, frac=0)"    enum="Div3  " code="SIM_CLKDIV3_PLLFLLDIV(2)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
            <choice value="11"  name="Divide by 3 (div=5, frac=1)"    enum="Div3b " code="SIM_CLKDIV3_PLLFLLDIV(5)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
            <choice value="13"  name="Divide by 3.5 (div=6, frac=1)"  enum="Div3_5" code="SIM_CLKDIV3_PLLFLLDIV(6)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
            <choice value="6"   name="Divide by 4 (div=3, frac=0)"    enum="Div4  " code="SIM_CLKDIV3_PLLFLLDIV(3)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
            <choice value="15"  name="Divide by 4 (div=7, frac=1)"    enum="Div4b " code="SIM_CLKDIV3_PLLFLLDIV(7)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
            <choice value="8"   name="Divide by 5 (div=4, frac=0)"    enum="Div5  " code="SIM_CLKDIV3_PLLFLLDIV(4)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
            <choice value="10"  name="Divide by 6 (div=5, frac=0)"    enum="Div6  " code="SIM_CLKDIV3_PLLFLLDIV(5)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
            <choice value="12"  name="Divide by 7 (div=6, frac=0)"    enum="Div7  " code="SIM_CLKDIV3_PLLFLLDIV(6)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
            <choice value="14"  name="Divide by 8 (div=7, frac=0)"    enum="Div8  " code="SIM_CLKDIV3_PLLFLLDIV(7)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
         </choiceOption>
      
         <intOption name="system_peripheral_postdivider_clock[%(n)]"
            derived="true"
            constant="true"
            units="Hz"
            description="Peripheral Post-divider Clock frequency/"
            toolTip="Frequency of Peripheral Clock available to various peripherals"  
            max="75 MHz" />
    
         <intOption name="system_core_clock[%(n)]" 
            units="Hz"
            description="System Core Clock"
            toolTip="Clocks the ARM Cortex-M4 core and bus masters"
            value="150 MHz" />
      
         <intOption name="system_bus_clock[%(n)]" 
            units="Hz"
            description="System Bus Clock"
            toolTip="Clocks the bus slaves and peripherals\n
                     Must be &lt;= Core Clock frequency and an integer divisor"
            value="75 MHz" />
   
         <intOption name="system_flexbus_clock[%(n)]" 
            units="Hz"
            description="System Flexbus Clock"
            toolTip="Clocks the flexbus interface\n
                     Must be &lt;= Bus Clock frequency"
            value="75 MHz" />
      
         <intOption name="system_flash_clock[%(n)]" 
            units="Hz"
            description="System Flash Clock"
            toolTip="Clocks the flash memory\n
                     Must be an integer divisor of the Core Clock.\n
                     Must be &lt;= Bus Clock frequency[%(n)]"
            value="25 MHz" />
      
         <category name="CLKDIV1" description="System Clock Dividers">
            <intOption name="sim_clkdiv1_outdiv1[%(n)]" 
               derived="true"
               constant="true"
               description="Core &amp; System Clock Divider (OUTDIV1) - Divide by [1-16]"
               toolTip="Clocks the ARM Cortex-M4 core and bus masters [SIM_CLKDIV1_OUTDIV1]\n
                        Divides MCGOUT Clock to generate system_core_clock"
               value="1" offset="-1" min="1" max="16" />
         
            <intOption name="sim_clkdiv1_outdiv2[%(n)]" 
               derived="true"
               constant="true"
               description="Bus Clock Divider (OUTDIV2) - Divide by [1-16]"
               toolTip="Clocks the bus slaves and peripheral [SIM_CLKDIV1_OUTDIV2]\n
                  Divides MCGOUT Clock to generate system_bus_clock\n
                  MCGOUTCLK clock is source. Default /2"
               value="1" offset="-1" min="1" max="16" />
      
            <intOption name="sim_clkdiv1_outdiv3[%(n)]" 
               derived="true"
               constant="true"
               description="Flexbus Clock Divider (OUTDIV3) - Divide by [1-16]"
               toolTip="Clocks the flexbus interface [SIM_CLKDIV1_OUTDIV3]\n
                        Divides MCGOUT Clock to generate system_flexbus_clock\n
                        MCGOUTCLK clock is source. Default /2"
               value="1" offset="-1" min="1" max="16" />
         
            <intOption name="sim_clkdiv1_outdiv4[%(n)]" 
               derived="true"
               constant="true"
               description="Flash Clock Divider (OUTDIV4) - Divide by [1-16]"
               toolTip="Clocks the flash memory [SIM_CLKDIV1_OUTDIV4]\n
                        Divides MCGOUT Clock to generate system_flash_clock\n
                        MCGOUTCLK clock is source. Default /4"
               value="4" offset="-1" min="1" max="16" />
         </category>
      </aliasCategoryOption>
   </for>
   
   <template><![CDATA[
      \t/**
      \t * Update system clock values
      \t *
      \t * @param systemClock Frequency of clock provided to system clock dividers
      \t */
      \tstatic void updateSystemClocks(unsigned systemClock) {
      \t
      \t   SystemCoreClock    = systemClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV1_MASK)>>SIM_CLKDIV1_OUTDIV1_SHIFT)+1);
      \t   SystemBusClock     = systemClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV2_MASK)>>SIM_CLKDIV1_OUTDIV2_SHIFT)+1);
      \t#ifdef SIM_CLKDIV1_OUTDIV3_MASK
      \t   SystemFlexbusClock = systemClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV3_MASK)>>SIM_CLKDIV1_OUTDIV3_SHIFT)+1);
      \t#endif
      \t#ifdef SIM_CLKDIV1_OUTDIV4_MASK
      \t//   SystemFlashClock = systemClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV4_MASK)>>SIM_CLKDIV1_OUTDIV4_SHIFT)+1);
      \t#endif
      \t}\n\n
   ]]></template>

   <xi:include href="_sim_commonTemplates.xml" />

   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.SimValidate" dim="/SIM/numberOfClockSettings">
      <param type="long" value="150MHz" />     <!-- Core         -->
      <param type="long" value="75MHz"  />     <!-- Bus          -->
      <param type="long" value="25MHz"  />     <!-- Flash        -->
      <param type="long" value="75MHz"  />     <!-- FlexBus      -->
   </validate>
   
   <xi:include href="_simFiles-MK.xml"/>
   
</peripheralPage>
