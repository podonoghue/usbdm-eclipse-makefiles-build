<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- spi_mk.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="Serial Peripheral Interface">

   <xi:include href="_default_instance.xml"/>

   <template><![CDATA[
      \t//! Pin number in Info table for SCK if mapped to a pin
      \tstatic constexpr int sckPin  = 0;
      
      \t//! Pin number in Info table for SIN if mapped to a pin
      \tstatic constexpr int sinPin  = 1;
      
      \t//! Pin number in Info table for SOUT if mapped to a pin
      \tstatic constexpr int soutPin  = 2;\n\n
   ]]></template>

   <xi:include href="_mapPinsOption_on.xml"/>
   
   <intOption key="speed" 
      description="Speed of interface"
      toolTip="Speed of transmission"
      value="10000000" units="Hz"
      min="0" max="10000000" />

   <choiceOption key="spi_mode"  
      description="Mode"
      toolTip="Communication mode">
      <choice value="0" name="Mode 0: CPOL=0, CPHA=0" isDefault="true" />
      <choice value="1" name="Mode 1: CPOL=0, CPHA=1" />
      <choice value="2" name="Mode 2: CPOL=1, CPHA=0" />
      <choice value="3" name="Mode 3: CPOL=1, CPHA=1" />
   </choiceOption>

   <binaryOption key="spi_lsbfe" 
      description="Transmission order"
      toolTip="Transmission order">
      <choice value="0" name="MSB first" />
      <choice value="1" name="LSB first" />
   </binaryOption>
      
   <projectActionList id = "spi_files" >
      <copy source="Project_Headers/spi-MK.h"            target="Project_Headers/spi.h"             overwrite="true"  derived="true" />
      <copy source="Sources/spi-MK.cpp"                  target="Sources/spi.cpp"                   overwrite="true"  derived="true" />
      <copy source="Snippets/spi-example.cpp"            target="Snippets/spi-example.cpp"          overwrite="true"  derived="true" />
      <copy source="Snippets/spi-N-config-example.cpp"   target="Snippets/spi-N-config-example.cpp" overwrite="true"  derived="true" />
      <copy source="Snippets/spi-2-config-example.cpp"   target="Snippets/spi-2-config-example.cpp" overwrite="true"  derived="true" />
   </projectActionList>
   
   <template key="/SPI/declarations" namespace="all"  ><![CDATA[
   \t/**
   \t * Class representing $(_name) interface
   \t * <b>Example</b>
   \t * @code
   \t * USBDM::Spi *spi = new USBDM::$(_class);
   \t *
   \t * uint8_t txData[] = {1,2,3};
   \t * uint8_t rxData[10];
   \t * spi->txRxBytes(sizeof(txData), txData, rxData);
   \t * @endcode
   \t */
   \tclass $(_class) : public $(_base_class)Base_T<$(_class)Info> {
   \tpublic:
   \t$(/$(_name)/InputMapping:   // No user mappings found)
   \t};\n
   ]]></template>
      
   <xi:include href="_irqOption.xml"/>
   
   <xi:include href="_clockOption.xml"/>
   
   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.SpiValidate">
   </validate>

   <template><![CDATA[
      \t//! Default communication clock phase and clock polarity (CPHA+CPOL)
      \tstatic constexpr uint32_t mode = 
      \t   SPI_CTAR_MODE($(spi_mode));
      
      \t//! Default communication order (MSB/LSB first)
      \tstatic constexpr uint32_t lsbfe = 
      \t   SPI_CTAR_LSBFE($(spi_lsbfe));
      
      \tstatic uint32_t getClockFrequency() {
      \t   return SystemBusClock;
      \t}

      \t//! Default speed (Hz)
      \tstatic constexpr uint32_t speed = 
      \t   $(speed);\n\n
   ]]></template>

   <signals/>
</peripheralPage>
