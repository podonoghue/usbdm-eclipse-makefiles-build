<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- sim_mkw41z4.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="SIM">
    
   <xi:include href="_default_instance.xml"/>

   <xi:include href="_simCommon.xml"/>
   <xi:include href="_sim_rtc_independent.xml"/>
   
   <deleteOption key="rtc_independent"        mustExist="true" />
   <deleteOption key="sim_sopt2_rtcclkoutsel" mustExist="true" />
   
   <choiceOption name="sim_sopt1_osc32ksel" 
      target="system_erclk32k_clock"
      description="ERCLK32K clock source" 
      replace="true" 
      toolTip="Clock source of External 32k Reference Clock [ERCLK32K]\n
               RTC OSC is independent of OSC0 (32MHz rf_osc)">
      <choice value="0" name="OSC1 (RTC) 32kHz OSC32KCLK"  ref="/RTC/osc_clock"              enum="Osc32kClk" code="RtcInfo::getExternalClock()" />
      <choice value="2" name="RTC clock in (EXTAL32)"      ref="/RTC/osc_input_freq"         enum="RtcClkin" code="RtcInfo::osc_input_freq"      />
      <choice value="3" name="LPO 1kHz clock"              ref="/PMC/system_low_power_clock" enum="LpoClk" code="1000"                           isDefault="true"/>
   </choiceOption>

   <category name="COPC" description="COP Control Register">
      
      <choiceOption name="sim_copc_copt" 
         description="COP Watchdog Timeout"
         toolTip="This write-once field selects the Computer Operating Properly Timeout" >
         <choice value="SIM_COPC_COPCLKS(0)|SIM_COPC_COPT(0)" name="Disabled" />
         <choice value="SIM_COPC_COPCLKS(0)|SIM_COPC_COPT(1)" name="Timeout after 2^5 clock cycles" />
         <choice value="SIM_COPC_COPCLKS(0)|SIM_COPC_COPT(2)" name="Timeout after 2^8 clock cycles" />
         <choice value="SIM_COPC_COPCLKS(0)|SIM_COPC_COPT(3)" name="Timeout after 2^10 clock cycles" />
         <choice value="SIM_COPC_COPCLKS(1)|SIM_COPC_COPT(1)" name="Timeout after 2^13 clock cycles" />
         <choice value="SIM_COPC_COPCLKS(1)|SIM_COPC_COPT(2)" name="Timeout after 2^16 clock cycles" />
         <choice value="SIM_COPC_COPCLKS(1)|SIM_COPC_COPT(3)" name="Timeout after 2^18 clock cycles" />
      </choiceOption>

      <choiceOption name="sim_copc_copclksel" 
         description="COP Clock Select"
         toolTip="This write-once field selects the clock source of the COP watchdog">
         <choice value="0" name="LPO clock (1 kHz)" isDefault="true" />
         <choice value="1" name="MCGIRCLK" />
         <choice value="2" name="OSCERCLK" />
         <choice value="3" name="Bus clock" />
      </choiceOption>

      <binaryOption name="sim_copc_copdbgen" 
         description="COP Debug Enable"
         toolTip="Controls whether COP is enabled in debug mode">
         <choice value="0"  name="COP is disabled and the counter is reset" isDefault="true" />
         <choice value="1"  name="COP is enabled" />
      </binaryOption>
      
      <binaryOption name="sim_copc_copstpen" 
         description="COP Stop Enable"
         toolTip="Controls whether COP is enabled in stop mode">
         <choice value="0"  name="COP is disabled and the counter is reset" isDefault="true" />
         <choice value="1"  name="COP is enabled" />
      </binaryOption>
      
      <binaryOption name="sim_copc_copw" 
         description="COP Windowed Mode"
         toolTip="Windowed mode is only supported when COP is using longer periods\n
                  The COP window is opened three quarters through the timeout period">
         <choice value="0"  name="Normal Mode" isDefault="true" />
         <choice value="1"  name="Windowed Mode" />
      </binaryOption>
      
   </category>

   <for keys="n" values="0">
      <choiceOption key="adc%(n)_cfg1_adiclk" 
         description="ADC%(n) Clock Source"
         hidden="true"
         enumStem="AdcClockSource"
         target="system_adc%(n)_clock"
         toolTip="Clock source for the ADC module" >
         <choice value="0" name="Bus clock"                   ref="system_bus_clock"       enum="Bus"       code="SystemBusClock"            />
         <choice value="1" name="Bus clock/2"                 ref="system_bus_clock,/2"    enum="Busdiv2"   code="SystemBusClock/2"          />
         <choice value="2" name="Alternate clock (OSCERCLK)"  ref="/OSC0/oscer_clock"      enum="OscerClk"  code="Osc0Info::getOscerClock()" />
         <choice value="3" name="Asynchronous clock (ADACK)"  ref="/ADC0/adcInternalClock" enum="Asynch"    code="2000000"                   isDefault="true" />
      </choiceOption>
   
      <intOption key="system_adc%(n)_clock"  
         hidden="true"
         constant="true"
         derived="true" 
         origin="ADC%(n) clock"
         units="Hz"
         description="Frequency of ADC Clock" />
   </for>
   
   <category name="SOPT1" description="RTC clocks" >

      <aliasOption key="system_erclk32k_clock" />
      
      <choiceOption name="sim_sopt1_osc32kout" 
         enumStem="SimErc32kClkoutPinSelect"
         description="ERCLK32K Clock Output"
         toolTip="Outputs the ERCLK32K on the selected pin in all modes of operation">
         <choice value="0"  name="ERCLK32K is not output"      enum="None"  isDefault="true" />
         <choice value="1"  name="ERCLK32K is output on PTB3"  enum="PTB3" />
      </choiceOption>

   </category>

   <category name="SOPT2" description="Clock Gating">
   
      <template><![CDATA[
         \t/**
         \t * Get Peripheral clock frequency
         \t *
         \t * @return Frequency as a uint32_t in Hz
         \t *
         \t * @note If there is a peripheral clock divider then this is the 
         \t *       frequency of the undivided peripheral clock
         \t */
         \tstatic uint32_t getPeripheralClock() {
         \t      
         \t   return SystemMcgFllClock;
         \t}\n\n
      ]]></template>
   
      <aliasOption key="/SIM/system_peripheral_clock[]" optional="true" />
      <aliasOption key="/OSC0/oscer_clock" optional="true" />
      <aliasOption key="/MCG/system_mcgirclk_clock[]" optional="true" />
      
      <choiceOption name="sim_sopt2_lpuart0src" 
         enumStem="SimLpuart0ClockSource"
         target="system_lpuart0_clock"
         description="LPUART0 Clock"
         toolTip="Clock source for the transmit and receive clock" >
         <choice value="0"  name="Disabled"         ref="disabled"                    enum="Disabled"        code="0"                         />
         <choice value="1"  name="MCGFLLCLK clock"  ref="/MCG/system_mcgfllclk_clock" enum="McgFllClk"       code="SystemMcgFllClock"        isDefault="true" />
         <choice value="2"  name="OSCERCLK clock"   ref="/OSC0/oscer_clock"           enum="OscerClk"        code="Osc0Info::getOscerClock()" />
         <choice value="3"  name="MCGIRCLK clock"   ref="/MCG/system_mcgirclk_clock"  enum="McgIrClk"        code="McgInfo::getMcgIrClock()"  />
      </choiceOption>
         
      <intOption name="system_lpuart0_clock" 
         constant="true"
         derived="true"
         units="Hz"
         description="LPUART0 Clock frequency"
         toolTip="Frequency of clock to LPUART"
         value="0" />
      
      <choiceOption name="sim_sopt2_tpmsrc" 
         enumStem="SimTpmClockSource"
         target="system_tpm_clock"
         description="TPM Clock source"
         toolTip="Clock source for the TPM counter clock">
         <choice value="0"  name="Disabled"         ref="disabled"                    enum="Disabled"        code="0"                           />
         <choice value="1"  name="MCGFLLCLK clock"  ref="/MCG/system_mcgfllclk_clock" enum="McgFllClk"       code="SystemMcgFllClock"            isDefault="true" />
         <choice value="2"  name="OSCERCLK clock"   ref="/OSC0/oscer_clock"           enum="OscerClk"        code="Osc0Info::getOscerClock()"   />
         <choice value="3"  name="MCGIRCLK clock"   ref="/MCG/system_mcgirclk_clock"  enum="McgIrClk"        code="McgInfo::getMcgIrClock()"    />
      </choiceOption>
      
      <intOption name="system_tpm_clock"
         derived="true" 
         constant="true"
         units="Hz"
         description="TPM Clock frequency"
         toolTip="Frequency of clock to TPM"
         value="0" />
      
      <choiceOption name="sim_sopt2_clkoutsel" 
         enumStem="SimClkoutSel"
         description="CLKOUT pin clock"
         toolTip="Clock to output on the CLKOUT pin" >
         <choice value="0"  name="OSCERCLK0/2"         enum="OscerClk0Div2" />
         <choice value="1"  name="OSCERCLK0/4"         enum="OscerClk0Div4" />
         <choice value="2"  name="Bus clock"           enum="BusClk"       isDefault="true" />
         <choice value="3"  name="LPO clock (1 kHz)"   enum="LpoClk"       />
         <choice value="4"  name="MCGIRCLK"            enum="McgIrClk"     />
         <choice value="5"  name="OSCERCLK0/8"         enum="OscerClk0Div8" />
         <choice value="6"  name="OSCERCLK0"           enum="OscerClk0"    />
      </choiceOption>
      
   </category>
   
   <category name="SOPT4" description="TPM signals">
      <for keys="p" values="0;1;2">
         <binaryOption name="sim_sopt4_tpm%(p)clksel" 
            enumStem="SimTpm%(p)ClkSel"
            description="TPM %(p) External Clock Pin "
            toolTip="External pin used to drive the clock to the TPM module">
            <choice value="0"  name="TPM_CLKIN0 pin" enum="0" isDefault="true" />
            <choice value="1"  name="TPM_CLKIN1 pin" enum="1" />
         </binaryOption>
      </for>
   
      <binaryOption name="sim_sopt4_tpm1ch0src" 
         enumStem="SimTpm1Ch0Src"
         description="TPM 1 channel 0 input capture source"
         toolTip="Source for TPM channel input capture\n
            NOTE: When the TPM is not in input capture mode, clear this field">
         <choice value="0" name="TPM1_CH0 signal"           enum="IcPin"  isDefault="true"/>
         <choice value="1" name="CMP0 output"               enum="Cmp0"   />
      </binaryOption>   
      
      <binaryOption name="sim_sopt4_tpm2ch0src" 
         enumStem="SimTpm2Ch0Src"
         description="TPM 2 channel 0 input capture source select"
         toolTip="Source for TPM channel input capture\n
            NOTE: When the TPM is not in input capture mode, clear this field">
         <choice value="0" name="TPM2_CH0 signal"           enum="IcPin"  isDefault="true"/>
         <choice value="1" name="CMP0 output"               enum="Cmp0"   />
      </binaryOption>
   </category>
   
   <category name="SOPT5" description="UART signals">

      <binaryOption key="sim_sopt5_lpuart0ode" 
         enumStem="SimLpuart0Drive"
         description="LPUART0 Open Drain"
         toolTip="Enables Open Drain output">
         <choice value="0" name="Push-pull"  enum="PushPull" />
         <choice value="1" name="Open-drain" enum="OpenDrain" />
      </binaryOption>
      
      <choiceOption key="sim_sopt5_lpuart0rxsrc" 
         enumStem="SimLpuart0RxSrc"
         description="LPUART 0 receive data source"
         toolTip="Source for the UART receive data">
         <choice value="0" name="Rx pin"        enum="RxPin"  isDefault="true" />
         <choice value="1" name="CMP0 output"   enum="Cmp0"   />
      </choiceOption>
      
      <choiceOption key="sim_sopt5_lpuart0txsrc" 
         enumStem="SimLpuart0TxSrc"
         description="LPUART 0 transmit data source"
         toolTip="Source for the LPUART transmit data">
         <choice value="0" name="Tx pin" isDefault="true"             enum="Direct" />
         <choice value="1" name="Tx pin modulated by TPM1 channel 0"  enum="ModulatedByTpm1Ch0" />
         <choice value="2" name="Tx pin modulated by TPM2 channel 0"  enum="ModulatedByTpm2Ch0" />
      </choiceOption>
      
   </category>

   <category name="SOPT7" description="ADC signals">
      <for keys="adc" values="0">
         <choiceOption key="sim_sopt7_adc%(adc)trigger" 
            enumStem="SimAdc%(adc)TriggerMode"
            description="ADC%(adc) trigger mode"
            toolTip="Alternative conversion triggers for ADC\n
               _Tpm              - ADC is triggered by TPM. Pre-triggers are TPM channel 0 (A) and channel 1 (B)\n
               _Alt_PreTrigger_0 - ADC is triggered by SimAdc0Trigger selection and uses pretrigger 0 = A (SC1[0]/R[0])\n
               _Alt_PreTrigger_1 - ADC is triggered by SimAdc0Trigger selection and uses pretrigger 1 = B (SC1[1]/R[1])" >
         <choice value="SIM_SOPT7_ADC0ALTTRGEN(0)"                                           name="Triggered by TPM Ch0 and Ch1" enum="Tpm"  isDefault="true" />
            <choice value="SIM_SOPT7_ADC%(adc)ALTTRGEN(1)|SIM_SOPT7_ADC%(adc)PRETRGSEL(0)"   name="Pre-trigger 0 = A (SC1[0])"   enum="Alt_PreTrigger_0" />
            <choice value="SIM_SOPT7_ADC%(adc)ALTTRGEN(1)|SIM_SOPT7_ADC%(adc)PRETRGSEL(1)"   name="Pre-trigger 1 = B (SC1[1])"   enum="Alt_PreTrigger_1" />
         </choiceOption>
      
         <choiceOption key="sim_sopt7_adc%(adc)trgsel"
            enumStem="SimAdc%(adc)Trigger"
            description="ADC%(adc) trigger"
         toolTip="Trigger source when alternative triggers are functional in stop and VLPS modes">
            <choice value="0"  name="External trigger pin input (EXTRG_IN)"   enum="External" isDefault="true" />
            <choice value="1"  name="CMP 0 output"                            enum="Cmp0"        />
            <choice value="4"  name="PIT trigger 0"                           enum="PitCh0"      />
            <choice value="5"  name="PIT trigger 1"                           enum="PitCh1"      />
            <choice value="8"  name="TPM0 trigger"                            enum="Tpm0"        />
            <choice value="9"  name="TPM1 trigger"                            enum="Tpm1"        />
            <choice value="10" name="TPM2 trigger"                            enum="Tpm2"        />
            <choice value="12" name="RTC alarm"                               enum="RtcAlarm"    />
            <choice value="13" name="RTC seconds"                             enum="RtcSeconds"  />
            <choice value="14" name="LPTMR trigger"                           enum="Lptmr"       />
         </choiceOption>
      </for>      
   </category>

   <for keys="n" dim="/SIM/numberOfClockSettings" >
      <aliasCategoryOption key="/MCG/ClockConfig[%(n)]" derived="true" constant="true" >
      
         <choiceOption name="sim_sopt2_pllfllsel[%(n)]_Fixed"
            enumStem="SimPeripheralClockSource"
            target="system_peripheral_clock[%(n)]"
            description="Peripheral Clock"
            toolTip="Clock for various peripherals (LPUART, TPM etc.)">
            <choice value="0"  name="MCGFLLCLK clock"   ref="/MCG/system_mcgfllclk_clock[%(n)]"    enum="McgFllClk"  code="SystemMcgFllClock"      isDefault="true" />
         </choiceOption>
   
         <intOption name="system_peripheral_clock[%(n)]"
            derived="true"
            constant="true"
            units="Hz"
            description="Peripheral Clock frequency"
            toolTip="Frequency of Peripheral Clock available to various peripherals"  />
	 
         <intOption name="system_core_clock[%(n)]" 
            units="Hz"
            description="System Core Clock"
            toolTip="Clocks the ARM Cortex-M4 core and bus masters"
            value="48 MHz" />
      
         <intOption name="system_bus_clock[%(n)]" 
            units="Hz"
            description="System Bus Clock"
            toolTip="Clocks the bus slaves and peripherals\n
                  Must be &lt;= Core Clock frequency"
         value="24 MHz" />
      
         <category name="CLKDIV1" description="System Clock Dividers">
            <intOption name="sim_clkdiv1_outdiv1[%(n)]" 
               derived="true"
               constant="true"
               description="Core &amp; System Clock Divider (OUTDIV1) - Divide by [1-16]"
               toolTip="Clocks the ARM Cortex-M4 core and bus masters [SIM_CLKDIV1_OUTDIV1]\n
                        Divides MCGOUT Clock to generate system_core_clock"
               value="1" offset="-1" min="1" max="16" />
         
            <intOption name="sim_clkdiv1_outdiv4[%(n)]" 
               derived="true"
               constant="true"
               description="Flash Clock Divider (OUTDIV4) - Divide by [1-16]"
               toolTip="Clocks the flash memory [SIM_CLKDIV1_OUTDIV4]\n
                        Divides MCGOUT Clock to generate system_flash_clock\n
                        MCGOUTCLK clock is source. Default /4"
               value="4" offset="-1" min="1" max="16" />
         </category>
      </aliasCategoryOption>
   </for>
   
   <template><![CDATA[
      \t/**
      \t * Update system clock values
      \t *
      \t * @param systemClock Frequency of clock provided to system clock dividers
      \t */
      \tstatic void updateSystemClocks(unsigned systemClock) {
      \t
      \t   SystemCoreClock    = systemClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV1_MASK)>>SIM_CLKDIV1_OUTDIV1_SHIFT)+1);
      \t   SystemBusClock     = SystemCoreClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV4_MASK)>>SIM_CLKDIV1_OUTDIV4_SHIFT)+1);
      \t}\n\n
   ]]></template>

   <xi:include href="_sim_commonTemplates.xml" />

   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.SimValidateMKL" dim="/SIM/numberOfClockSettings">
      <param type="long" value="48MHz" />    <!-- Core         -->
      <param type="long" value="24MHz" />    <!-- Bus          -->
   </validate>
   
   <xi:include href="_simFiles-MKL.xml"/>
   
</peripheralPage>
