<?xml version="1.0" encoding="UTF-8"?>

<!-- Deleted stuff

addDependency
deleteOption
clockMultiplexorOption
numericListOption
indexedCategory
addChoices

<!ELEMENT addChoices ((choice)*) >
   <!ATTLIST addChoices key                 CDATA        #REQUIRED>
   
<!ELEMENT deleteOption EMPTY >
   <!ATTLIST deleteOption condition     CDATA         #IMPLIED>
   <!ATTLIST deleteOption key           CDATA         #REQUIRED>
   <!ATTLIST deleteOption mustExist     (false|true)  #IMPLIED>

<!ELEMENT clockMultiplexorOption ((choice)*) >
   <!ATTLIST clockMultiplexorOption condition           CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption locked            (false|true) #IMPLIED>
   <!ATTLIST clockMultiplexorOption hidden              (false|true) #IMPLIED>
   <!ATTLIST clockMultiplexorOption name                CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption key                 CDATA        #REQUIRED>
   <!ATTLIST clockMultiplexorOption templateKey         CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption origin              CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption description         CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption toolTip             CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption units               (None|Hz|s)  #IMPLIED>
   <!ATTLIST clockMultiplexorOption derived             (true)       #IMPLIED>
   <!ATTLIST clockMultiplexorOption derivedFrom         CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption namespace           (info|usbdm|all)  #IMPLIED >
   <!ATTLIST clockMultiplexorOption enumStem            CDATA        #IMPLIED> <!- Type for enum and first part of enum name - >
   <!ATTLIST clockMultiplexorOption typeName            CDATA        #IMPLIED> <!- as for enumStem - >
   <!ATTLIST clockMultiplexorOption enumType            CDATA        #IMPLIED> <!- Type to use for enums e.g.uint8_t - >
   <!ATTLIST clockMultiplexorOption target              CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption register            CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption replace             CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption valueFormat         CDATA        #IMPLIED> <!- Mask(s) similar to 'MCM_PLACR_DFCS(%s),MCM_PLACR_EFDS(%s)'  - >
   <!- Text to add to enum body generated from choices - >
   <!ATTLIST clockMultiplexorOption enumText            CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption disabledValue       CDATA        #IMPLIED>
   <!ATTLIST clockMultiplexorOption enabledBy           CDATA        #IMPLIED> <!- Enabled by an expression - >
   <!ATTLIST clockMultiplexorOption unlockedBy          CDATA        #IMPLIED> <!- Unlocked by an expression - >
   <!ATTLIST clockMultiplexorOption ref                 CDATA        #IMPLIED> <!- Equation that controls this variable - >

<!ELEMENT indexedCategory ((%general_items;|%general_items;|template)*) >
   <!ATTLIST indexedCategory  locked     (false|true) #IMPLIED>
   <!ATTLIST indexedCategory  xmlns:xi     CDATA        #IMPLIED>
   <!ATTLIST indexedCategory  name         CDATA        #IMPLIED>
   <!ATTLIST indexedCategory  value        CDATA        #IMPLIED>
   <!ATTLIST indexedCategory  dim          CDATA        #IMPLIED>
   <!ATTLIST indexedCategory  description  CDATA        #IMPLIED>
   <!ATTLIST indexedCategory  toolTip      CDATA        #IMPLIED>
   <!ATTLIST indexedCategory  derived      (false|true) #IMPLIED>
   <!ATTLIST indexedCategory  hidden       (false|true) #IMPLIED>

<!ELEMENT addDependency EMPTY >
   <!ATTLIST addDependency key                CDATA        #REQUIRED>

-->                          
<!-- all templates -->    
<!ENTITY % template_items   "template|setTemplate|constructorTemplate|initialValueTemplate|enumTemplate|clockCodeTemplate" >

<!-- High level items-->
<!ENTITY % structure_items  "xi:include|section|list" >

<!-- Drawing elements with a Graphic -->
<!ENTITY % graphic_items    "graphicGroup|graphicBox|graphicItem|equation|for|if" >

<!-- Simple items that don't that don''t recurse -->
<!ENTITY % simple_items     "xi:include|
                              projectActionList|
                              title|constant|signals|
                              intOption|floatOption|stringOption|binaryOption|choiceOption|bitmaskOption|irqOption|pinListOption|aliasOption|pinMapOption|
                              clockSelectionOption|validate|equation|
                              %template_items;" >
                  
<!ENTITY % general_items    "graphic|category|categoryOption|aliasCategoryOption|if|for|%simple_items;" >

<!-- Include another file -->
<!ELEMENT xi:include EMPTY>
   <!ATTLIST xi:include href      CDATA        #REQUIRED>

<!-- Root fileElement -->
<!ELEMENT peripheralPage ((%structure_items;|%general_items;)*) >
   <!ATTLIST peripheralPage xmlns:xi     CDATA        #IMPLIED>
   <!ATTLIST peripheralPage name         CDATA        #REQUIRED>
   <!ATTLIST peripheralPage description  CDATA        #REQUIRED>
   <!ATTLIST peripheralPage toolTip      CDATA        #IMPLIED>

<!ELEMENT fragment ((%structure_items;|%general_items;)*)  >
   <!ATTLIST fragment xmlns:xi CDATA #IMPLIED>

<!ELEMENT list ((%structure_items;|%general_items;)*) >
   <!ATTLIST list name         CDATA        #IMPLIED>
   <!ATTLIST list description  CDATA        #IMPLIED>

<!ELEMENT section ((%structure_items;|%general_items;)*) >
   <!ATTLIST section name         CDATA        #IMPLIED>

<!ELEMENT for (%general_items;|%structure_items;|%general_items;|%graphic_items;|break|continue)* >
   <!ATTLIST for keys                 CDATA        #REQUIRED>
   <!ATTLIST for values               CDATA        #IMPLIED>
   <!ATTLIST for dim                  CDATA        #IMPLIED>
   <!ATTLIST for delimiter            CDATA        #IMPLIED>

<!ELEMENT break EMPTY >

<!ELEMENT continue EMPTY >

<!ENTITY % if_clause_items "%general_items;|%structure_items;" >

<!ELEMENT if ( (%if_clause_items;)+, (else_if, (%if_clause_items;)+)*, (else, (%if_clause_items;)+)?) >
   <!-- Condition evaluated during parsing that controls processing of remaining children (up to else/else_if) -->
   <!ATTLIST if condition             CDATA        #REQUIRED>

<!ELEMENT else EMPTY >

<!ELEMENT else_if EMPTY >
   <!-- Condition evaluated during parsing that controls processing of remaining children (up to else/else_if) -->
   <!ATTLIST else_if condition             CDATA        #REQUIRED>

<!ELEMENT graphic ((%graphic_items;)*) >
   <!ATTLIST graphic  key                CDATA        #REQUIRED>
   <!ATTLIST graphic  var                CDATA        #IMPLIED>
   <!ATTLIST graphic  description        CDATA        #IMPLIED>
   <!ATTLIST graphic  toolTip            CDATA        #IMPLIED>
   <!ATTLIST graphic  condition          CDATA        #IMPLIED>
   <!ATTLIST graphic  clockConfigIndex   CDATA        #IMPLIED>
   
<!ELEMENT graphicGroup ((%graphic_items;)*) >
   <!ATTLIST graphicGroup  x                CDATA        #IMPLIED>
   <!ATTLIST graphicGroup  y                CDATA        #IMPLIED>
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST graphicGroup  condition        CDATA        #IMPLIED>

<!ELEMENT graphicBox ((%graphic_items;)*) >
   <!ATTLIST graphicBox  id               CDATA        #IMPLIED>
   <!ATTLIST graphicBox  x                CDATA        #REQUIRED>
   <!ATTLIST graphicBox  y                CDATA        #REQUIRED>
   <!ATTLIST graphicBox  params           CDATA        #REQUIRED>
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST graphicBox  condition        CDATA        #IMPLIED>

<!ELEMENT graphicItem EMPTY >
   <!ATTLIST graphicItem  id              CDATA        #IMPLIED>
   <!ATTLIST graphicItem  name            CDATA        #IMPLIED>
   <!ATTLIST graphicItem  type            CDATA        #REQUIRED>
   <!ATTLIST graphicItem  params          CDATA        #REQUIRED>
   <!ATTLIST graphicItem  var             CDATA        #IMPLIED>
   <!ATTLIST graphicItem  edit            CDATA        #IMPLIED>
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST graphicItem  condition       CDATA        #IMPLIED>

<!ELEMENT aliasCategoryOption ((%general_items;)*) >
   <!ATTLIST aliasCategoryOption  name         CDATA        #IMPLIED>
   <!ATTLIST aliasCategoryOption  key          CDATA        #REQUIRED>
   <!ATTLIST aliasCategoryOption  derived      (false|true) #IMPLIED>
   <!ATTLIST aliasCategoryOption  locked     (false|true) "true">

<!-- Expandable grouping -->
<!ELEMENT category ((%general_items;)*) >
   <!ATTLIST category  locked     (false|true) #IMPLIED>
   <!ATTLIST category  xmlns:xi     CDATA        #IMPLIED>
   <!ATTLIST category  name         CDATA        #IMPLIED>
   <!ATTLIST category  description  CDATA        #IMPLIED>
   <!ATTLIST category  toolTip      CDATA        #IMPLIED>
   <!ATTLIST category  derived      (false|true) #IMPLIED>
   <!ATTLIST category  hidden       (false|true) #IMPLIED>

<!-- Expandable grouping with associated variable -->
<!ELEMENT categoryOption ((%general_items;)*) >
   <!ATTLIST categoryOption  locked        (false|true) #IMPLIED>
   <!ATTLIST categoryOption  xmlns:xi        CDATA        #IMPLIED>
   <!ATTLIST categoryOption  name            CDATA        #IMPLIED>
   <!ATTLIST categoryOption  key             CDATA        #REQUIRED>
   <!ATTLIST categoryOption  description     CDATA        #IMPLIED>
   <!ATTLIST categoryOption  value           CDATA        #IMPLIED>
   <!ATTLIST categoryOption  disabledValue   CDATA        #IMPLIED>
   <!ATTLIST categoryOption  toolTip         CDATA        #IMPLIED>
   <!ATTLIST categoryOption  hidden          (false|true) #IMPLIED>
   <!-- Expression enables this option -->
   <!ATTLIST categoryOption  enabledBy       CDATA        #IMPLIED>

<!ELEMENT title EMPTY >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST title condition              CDATA        #IMPLIED>
   <!ATTLIST title name                   CDATA        #IMPLIED>
   <!ATTLIST title toolTip                CDATA        #IMPLIED>
   <!ATTLIST title description            CDATA        #IMPLIED>

<!ELEMENT equation EMPTY >
   <!ATTLIST equation  key             CDATA        #REQUIRED>
   <!ATTLIST equation  value           CDATA        #REQUIRED>

<!ELEMENT intOption EMPTY >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST intOption condition     CDATA        #IMPLIED>
   <!ATTLIST intOption locked      (true)       #IMPLIED>
   <!ATTLIST intOption hidden        (true)       #IMPLIED>
   <!ATTLIST intOption graphic       CDATA        #IMPLIED>
   <!ATTLIST intOption modify        CDATA        #IMPLIED>
   <!ATTLIST intOption replace       CDATA        #IMPLIED>
   <!ATTLIST intOption name          CDATA        #IMPLIED>
   <!ATTLIST intOption key           CDATA        #REQUIRED>
   <!ATTLIST intOption origin        CDATA        #IMPLIED>
   <!ATTLIST intOption description   CDATA        #IMPLIED>
   <!ATTLIST intOption toolTip       CDATA        #IMPLIED>
   <!ATTLIST intOption typeName      CDATA        #IMPLIED>
   <!ATTLIST intOption disabledValue CDATA        #IMPLIED>
   <!ATTLIST intOption value         CDATA        #IMPLIED>
   <!ATTLIST intOption units         (Hz|s|ticks) #IMPLIED>
   <!ATTLIST intOption step          CDATA        "1">
   <!ATTLIST intOption errorPropagate (ok|info|warning|error)  #IMPLIED>
   <!-- Minimum value (displayed value) -->
   <!ATTLIST intOption min           CDATA        #IMPLIED>
   <!-- Maximum value (displayed value) -->
   <!ATTLIST intOption max           CDATA        #IMPLIED>
   <!-- Offset to translate from displayed value to substitution value -->
   <!ATTLIST intOption offset        CDATA        #IMPLIED>
   <!ATTLIST intOption derived       (true)       #IMPLIED>
   <!ATTLIST intOption derivedFrom   CDATA        #IMPLIED>
   <!ATTLIST intOption radix         CDATA        #IMPLIED>
   <!-- Equation that controls this variable -->
   <!ATTLIST intOption ref           CDATA        #IMPLIED> 
   <!-- How to format value e.g. %s_ticks-->
   <!ATTLIST intOption valueFormat   CDATA        #IMPLIED> 
   <!-- Expression enables this option -->
   <!ATTLIST intOption enabledBy     CDATA        #IMPLIED> 
   <!-- Unlocked by an expression -->
   <!ATTLIST intOption unlockedBy    CDATA        #IMPLIED> 
   <!ATTLIST intOption isNamedClock  (true)       #IMPLIED>
   <!ATTLIST intOption defaultValue  CDATA        #IMPLIED>
   <!ATTLIST intOption enumType      CDATA        #IMPLIED>
   
  
<!ELEMENT bitmaskOption EMPTY >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST bitmaskOption condition      CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption locked         (false|true) #IMPLIED>
   <!ATTLIST bitmaskOption hidden         (false|true) #IMPLIED>
   <!ATTLIST bitmaskOption name           CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption key            CDATA        #REQUIRED>
   <!ATTLIST bitmaskOption origin         CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption description    CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption toolTip        CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption value          CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption disabledValue  CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption valueFormat    CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption derived        (true)       #IMPLIED>
   <!ATTLIST bitmaskOption derivedFrom    CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption typeName       CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption defaultValue   CDATA        #IMPLIED>
   <!ATTLIST bitmaskOption enumType       CDATA        #IMPLIED>

   <!-- Expression enables this option -->
   <!ATTLIST bitmaskOption enabledBy      CDATA        #IMPLIED>
   
   <!-- Bit mask indicating active bits.  May be zero to indicate calculation from bitList -->
   <!ATTLIST bitmaskOption bitmask        CDATA        #REQUIRED>
   <!-- List of names for the bits in mask. -->
   <!ATTLIST bitmaskOption bitList        CDATA        #IMPLIED>
   
   <!-- Pin mapping applied if a given bit is active.  Mapping is removed if inactive -->
   <!ATTLIST bitmaskOption pinMap         CDATA        #IMPLIED>
   <!-- List of pin mappings applied if option disabled#Expression to enable use of any pin map -->
   <!ATTLIST bitmaskOption disabledPinMap CDATA        #IMPLIED>

<!ELEMENT floatOption EMPTY >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST floatOption condition     CDATA        #IMPLIED>
   <!ATTLIST floatOption locked      (false|true) #IMPLIED>
   <!ATTLIST floatOption hidden        (false|true) #IMPLIED>
   <!ATTLIST floatOption modify        CDATA        #IMPLIED>
   <!ATTLIST floatOption replace       CDATA        #IMPLIED>
   <!ATTLIST floatOption name          CDATA        #IMPLIED>
   <!ATTLIST floatOption key           CDATA        #REQUIRED>
   <!ATTLIST floatOption origin        CDATA        #IMPLIED>
   <!ATTLIST floatOption description   CDATA        #IMPLIED>
   <!ATTLIST floatOption toolTip       CDATA        #IMPLIED>
   <!ATTLIST floatOption typeName      CDATA        #IMPLIED>
   <!ATTLIST floatOption value         CDATA        #IMPLIED>
   <!ATTLIST floatOption disabledValue CDATA        #IMPLIED>
   <!ATTLIST floatOption units         (None|Hz|s)  #IMPLIED>
   <!-- Minimum value (displayed value) -->
   <!ATTLIST floatOption min           CDATA        #IMPLIED>
   <!-- Maximum value (displayed value) -->
   <!ATTLIST floatOption max           CDATA        #IMPLIED>
   <!ATTLIST floatOption derived       (true)       #IMPLIED>
   <!ATTLIST floatOption derivedFrom   CDATA        #IMPLIED>
   <!-- Equation that controls this variable -->
   <!ATTLIST floatOption ref           CDATA        #IMPLIED> 
   <!-- How to format value e.g. %s_Hz-->
   <!ATTLIST floatOption valueFormat   CDATA        #IMPLIED> 
   <!-- Expression enables this option -->
   <!ATTLIST floatOption enabledBy     CDATA        #IMPLIED> 
   <!-- Unlocked by an expression -->
   <!ATTLIST floatOption unlockedBy    CDATA        #IMPLIED> 

<!ELEMENT aliasOption EMPTY >
   <!-- Allows reference to an option (possibly) in another file -->
   <!ATTLIST aliasOption key               CDATA        #REQUIRED>
   <!-- Optional name in GUI otherwise derived from key -->
   <!ATTLIST aliasOption name              CDATA        #IMPLIED>
   <!-- Description for GUI and code generation -->
   <!ATTLIST aliasOption description       CDATA        #IMPLIED>
   <!-- Tooltip for GUI and code generation -->
   <!ATTLIST aliasOption toolTip           CDATA        #IMPLIED>
   <!-- Allows aliased variable to be altered by user (unless locked) -->
   <!ATTLIST aliasOption locked          (false)      #IMPLIED>
   <!-- Indicates key may refer to non-existant variable -->
   <!ATTLIST aliasOption optional          (true)       #IMPLIED>
   <!-- Inidicates it should be visible in GUI -->
   <!ATTLIST aliasOption hidden            (true)      #IMPLIED>

<!ELEMENT stringOption EMPTY >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST stringOption condition        CDATA        #IMPLIED>
   <!-- Mask(s) similar to 'MCM_PLACR_DFCS(%s),MCM_PLACR_EFDS(%s)'  -->
   <!ATTLIST stringOption valueFormat      CDATA        #IMPLIED>
   <!ATTLIST stringOption locked         (false|true) #IMPLIED>
   <!ATTLIST stringOption hidden           (false|true) #IMPLIED>
   <!ATTLIST stringOption name             CDATA        #IMPLIED>
   <!ATTLIST stringOption key              CDATA        #REQUIRED>
   <!ATTLIST stringOption origin           CDATA        #IMPLIED>
   <!ATTLIST stringOption description      CDATA        #IMPLIED>
   <!ATTLIST stringOption toolTip          CDATA        #IMPLIED>
   <!ATTLIST stringOption value            CDATA        #IMPLIED>
   <!ATTLIST stringOption typeName         CDATA        #IMPLIED>
   <!ATTLIST stringOption modify           CDATA        #IMPLIED>
   <!ATTLIST stringOption replace          CDATA        #IMPLIED>
   <!ATTLIST stringOption disabledValue    CDATA        #IMPLIED>
   <!ATTLIST stringOption derived          (true)       #IMPLIED>
   <!ATTLIST stringOption derivedFrom      CDATA        #IMPLIED>
   <!ATTLIST stringOption enum             CDATA        #IMPLIED>
   <!ATTLIST stringOption target           CDATA        #IMPLIED>
   <!ATTLIST stringOption code             CDATA        #IMPLIED>
  
<!ELEMENT numericListOption EMPTY >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST numericListOption condition     CDATA        #IMPLIED>
   <!ATTLIST numericListOption locked      (false|true) #IMPLIED>
   <!ATTLIST numericListOption hidden        (false|true) #IMPLIED>
   <!ATTLIST numericListOption name          CDATA        #IMPLIED>
   <!ATTLIST numericListOption key           CDATA        #REQUIRED>
   <!ATTLIST numericListOption origin        CDATA        #IMPLIED>
   <!ATTLIST numericListOption description   CDATA        #IMPLIED>
   <!ATTLIST numericListOption toolTip       CDATA        #IMPLIED>
   <!ATTLIST numericListOption value         CDATA        #IMPLIED>
   <!ATTLIST numericListOption disabledValue CDATA        #IMPLIED>
   <!ATTLIST numericListOption size          CDATA        #IMPLIED>
   <!ATTLIST numericListOption min           CDATA        #IMPLIED>
   <!ATTLIST numericListOption max           CDATA        #IMPLIED>
   <!ATTLIST numericListOption derived       (true)       #IMPLIED>
   <!ATTLIST numericListOption derivedFrom   CDATA        #IMPLIED>
  
<!-- Signal to add a dependency -->

<!ELEMENT pinListOption EMPTY >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST pinListOption condition          CDATA        #IMPLIED>
   <!ATTLIST pinListOption locked           (false|true) #IMPLIED>
   <!ATTLIST pinListOption hidden             (false|true) #IMPLIED>
   <!ATTLIST pinListOption name               CDATA        #IMPLIED>
   <!ATTLIST pinListOption key                CDATA        #REQUIRED>
   <!ATTLIST pinListOption origin             CDATA        #IMPLIED>
   <!ATTLIST pinListOption description        CDATA        #IMPLIED>
   <!ATTLIST pinListOption toolTip            CDATA        #IMPLIED>
   <!ATTLIST pinListOption value              CDATA        #IMPLIED>
   <!ATTLIST pinListOption disabledValue      CDATA        #IMPLIED>
   <!ATTLIST pinListOption size               CDATA        #IMPLIED>
   <!ATTLIST pinListOption derived            (true)       #IMPLIED>
   <!ATTLIST pinListOption derivedFrom        CDATA        #IMPLIED>

<!ELEMENT clockSelectionOption ((choice)*) >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST clockSelectionOption condition           CDATA        #IMPLIED>
   <!-- Locks varibale against change by user in GUI -->
   <!ATTLIST clockSelectionOption locked            (false|true) #IMPLIED>
   <!-- Variable is not visible in GUI -->
   <!ATTLIST clockSelectionOption hidden              (false|true) #IMPLIED>
   <!-- DIsplay name for variable (derived from key if not provided -->
   <!ATTLIST clockSelectionOption name                CDATA        #IMPLIED>
   <!-- Unique key used to identify variable -->
   <!ATTLIST clockSelectionOption key                 CDATA        #REQUIRED>
   <!-- Key used for template -->
   <!ATTLIST clockSelectionOption templateKey         CDATA        #IMPLIED>
   <!-- Origin displayed as part of tool-tip -->
   <!ATTLIST clockSelectionOption origin              CDATA        #IMPLIED>
   <!-- Description  of variable -->
   <!ATTLIST clockSelectionOption description         CDATA        #IMPLIED>
   <!-- Tool-tip to display in GUI and used for documentation in C++ code -->
   <!ATTLIST clockSelectionOption toolTip             CDATA        #IMPLIED>
   <!-- Unit to use for numeric value -->
   <!ATTLIST clockSelectionOption units               (None|Hz|s)  #IMPLIED>
   <!-- Value is derived and should not be saved -->
   <!ATTLIST clockSelectionOption derived             (true)       #IMPLIED>
   <!-- Variable defined earlier to inherit values from -->
   <!ATTLIST clockSelectionOption derivedFrom         CDATA        #IMPLIED>
   <!-- Type for enum and first part of enum name -->
   <!ATTLIST clockSelectionOption enumStem            CDATA        #IMPLIED> 
   <!-- As for enumStem = Type for enum and first part of enum name-->
   <!ATTLIST clockSelectionOption typeName            CDATA        #IMPLIED>
   <!-- Type to use for enums e.g.uint8_t -->
   <!ATTLIST clockSelectionOption enumType            CDATA        #IMPLIED>
   <!-- Text to add to enum body generated from choices -->
   <!ATTLIST clockSelectionOption enumText            CDATA        #IMPLIED> 
   <!-- Target variable for control-->
   <!ATTLIST clockSelectionOption target              CDATA        #IMPLIED>
   <!-- Name of register -->
   <!ATTLIST clockSelectionOption register            CDATA        #IMPLIED>
   <!-- Replace existing variable quietly -->
   <!ATTLIST clockSelectionOption replace             CDATA        #IMPLIED>
   <!-- Mask(s) similar to 'MCM_PLACR_DFCS(%s),MCM_PLACR_EFDS(%s)'  -->
   <!ATTLIST clockSelectionOption valueFormat         CDATA        #IMPLIED>
   <!-- Value to take when disabled --> 
   <!ATTLIST clockSelectionOption disabledValue       CDATA        #IMPLIED>
   
<!ELEMENT choiceOption ((choice)*) >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST choiceOption condition           CDATA        #IMPLIED>
   <!-- Locks variable against change by user in GUI -->
   <!ATTLIST choiceOption locked            (false|true) #IMPLIED>
   <!-- Variable is not visible in GUI -->
   <!ATTLIST choiceOption hidden              (false|true) #IMPLIED>
   <!-- Display name for variable (derived from key if not provided -->
   <!ATTLIST choiceOption name                CDATA        #IMPLIED>
   <!-- Unique key used to identify variable. Prepended with peripheral name if not absolute -->
   <!ATTLIST choiceOption key                 CDATA        #REQUIRED>
   <!--Used with enum generation to give explicit template name to enum template -->
   <!ATTLIST choiceOption templateKey         CDATA        #IMPLIED>
   <!-- Origin displayed as part of tool-tip -->
   <!ATTLIST choiceOption origin              CDATA        #IMPLIED>
   <!-- Description  of variable -->
   <!ATTLIST choiceOption description         CDATA        #IMPLIED>
   <!-- Tool-tip to display in GUI and used for documentation in C++ code -->
   <!ATTLIST choiceOption toolTip             CDATA        #IMPLIED>
   <!-- Unit to use for numeric value -->
   <!ATTLIST choiceOption units               (None|Hz|s)  #IMPLIED>
   <!-- Value is derived and should not be saved -->
   <!ATTLIST choiceOption derived             (true)       #IMPLIED>
   <!-- Variable defined earlier to inherit values from -->
   <!ATTLIST choiceOption derivedFrom         CDATA        #IMPLIED>
   <!-- 
   Where to place generated code
      info  - Within peripheral info class in pinmapping.h (default if not provided)
      usbdm - Before peripheral class in pinmapping.h  (USBDM namespace)
      all   - Explicitly available anywhere controlled by key substitution
   -->
   <!ATTLIST choiceOption namespace           (info|usbdm|all)  #IMPLIED >
   <!-- Type for enum and first part of enum name -->
   <!ATTLIST choiceOption enumStem            CDATA        #IMPLIED>
   <!-- As for enumStem = Type for enum and first part of enum name-->
   <!ATTLIST choiceOption typeName            CDATA        #IMPLIED>
   <!-- Type to use for enums e.g.uint8_t -->
   <!ATTLIST choiceOption enumType            CDATA        #IMPLIED>
   <!-- Name of register. If not provided it is derived from variable -->
   <!ATTLIST choiceOption register            CDATA        #IMPLIED>
   <!-- Replace existing variable quietly -->
   <!ATTLIST choiceOption replace             CDATA        #IMPLIED>
   <!-- Mask(s) similar to 'MCM_PLACR_DFCS(%s),MCM_PLACR_EFDS(%s)'  -->
   <!ATTLIST choiceOption valueFormat         CDATA        #IMPLIED>
   <!-- Text to add to enum body generated from choices -->
   <!ATTLIST choiceOption enumText            CDATA        #IMPLIED>
   <!-- Value to take when disabled --> 
   <!ATTLIST choiceOption disabledValue       CDATA        #IMPLIED>
   <!-- Set as error based on expression -->
   <!ATTLIST choiceOption errorIf             CDATA        #IMPLIED>
   <!-- Expression enables this option -->
   <!ATTLIST choiceOption enabledBy           CDATA        #IMPLIED>
   <!-- Unlocked by an expression -->
   <!ATTLIST choiceOption unlockedBy          CDATA        #IMPLIED>
    <!-- Equation that controls this variable -->
   <!ATTLIST choiceOption ref                 CDATA        #IMPLIED>
   <!-- Target variable dependent on this variable -->
   <!ATTLIST choiceOption target              CDATA        #IMPLIED>
   <!-- Allow variable to be modified by later variable of same name -->
   <!ATTLIST choiceOption modify              CDATA        #IMPLIED>
   <!-- Allow variable to be replaced by later variable of same name -->
   <!ATTLIST choiceOption replace             CDATA        #IMPLIED>
   
   <!-- List of pin mappings applied if option disabled#Expression to enable use of any pin map -->
   <!ATTLIST choiceOption disabledPinMap      CDATA        #IMPLIED>

<!ELEMENT choice EMPTY >
   <!-- Values may be a list e.g. 1,0,3 for use with valueFormat -->
   <!ATTLIST choice value                     CDATA        #REQUIRED> 
   <!ATTLIST choice name                      CDATA        #REQUIRED>
   <!ATTLIST choice requiredPeripherals       CDATA        #IMPLIED>
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST choice condition                 CDATA        #IMPLIED>
   <!ATTLIST choice isDefault                 CDATA        #IMPLIED>
   <!ATTLIST choice ref                       CDATA        #IMPLIED>
   <!ATTLIST choice enum                      CDATA        #IMPLIED>
   <!ATTLIST choice code                      CDATA        #IMPLIED>
   <!ATTLIST choice hidden                    CDATA        #IMPLIED>
   <!-- This choice is enabled by an expression -->
   <!ATTLIST choice enabledBy                 CDATA        #IMPLIED>
   <!ATTLIST choice pinMap                    CDATA        #IMPLIED>

<!ELEMENT binaryOption (choice?, choice?) >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST binaryOption condition           CDATA        #IMPLIED>
   <!-- Locks variable against change by user in GUI -->
   <!ATTLIST binaryOption locked            (false|true) #IMPLIED>
   <!-- Variable is not visible in GUI -->
   <!ATTLIST binaryOption hidden              (false|true) #IMPLIED>
   <!-- Display name for variable (derived from key if not provided -->
   <!ATTLIST binaryOption name                CDATA        #IMPLIED>
   <!-- Unique key used to identify variable. Prepended with peripheral name if not absolute -->
   <!ATTLIST binaryOption key                 CDATA        #REQUIRED>
   <!--Used with enum generation to give explicit template name to enum template -->
   <!ATTLIST binaryOption templateKey         CDATA        #IMPLIED>
   <!-- Origin displayed as part of tool-tip -->
   <!ATTLIST binaryOption origin              CDATA        #IMPLIED>
   <!-- Description  of variable -->
   <!ATTLIST binaryOption description         CDATA        #IMPLIED>
   <!-- Tool-tip to display in GUI and used for documentation in C++ code -->
   <!ATTLIST binaryOption toolTip             CDATA        #IMPLIED>
   <!-- Unit to use for numeric value -->
   <!ATTLIST binaryOption units               (None|Hz|s)  #IMPLIED>
   <!-- Value is derived and should not be saved -->
   <!ATTLIST binaryOption derived             (true)       #IMPLIED>
   <!-- Variable defined earlier to inherit values from -->
   <!ATTLIST binaryOption derivedFrom         CDATA        #IMPLIED>
   <!-- 
   Where to place generated code
      info  - Within peripheral info class in pinmapping.h (default if not provided)
      usbdm - Before peripheral class in pinmapping.h  (USBDM namespace)
      all   - Explicitly available anywhere controlled by key substitution
   -->
   <!ATTLIST binaryOption namespace           (info|usbdm|all)  #IMPLIED >
   <!-- Type for enum and first part of enum name -->
   <!ATTLIST binaryOption enumStem            CDATA        #IMPLIED>
   <!-- As for enumStem = Type for enum and first part of enum name-->
   <!ATTLIST binaryOption typeName            CDATA        #IMPLIED>
   <!-- Type to use for enums e.g.uint8_t -->
   <!ATTLIST binaryOption enumType            CDATA        #IMPLIED>
   <!-- Text to add to enum body generated from choices -->
   <!ATTLIST binaryOption enumText            CDATA        #IMPLIED>
   <!-- Name of register. If not provided it is derived from variable -->
   <!ATTLIST binaryOption register            CDATA        #IMPLIED>
   <!-- Replace existing variable quietly -->
   <!ATTLIST binaryOption replace             CDATA        #IMPLIED>
   <!-- Mask(s) similar to 'MCM_PLACR_DFCS(%s),MCM_PLACR_EFDS(%s)'  -->
   <!ATTLIST binaryOption valueFormat         CDATA        #IMPLIED>
   <!-- Value to take when disabled --> 
   <!ATTLIST binaryOption disabledValue       CDATA        #IMPLIED>
   <!-- Set as error based on expression -->
   <!ATTLIST binaryOption errorIf             CDATA        #IMPLIED>
   <!-- Expression enables this option -->
   <!ATTLIST binaryOption enabledBy           CDATA        #IMPLIED>
   <!-- Unlocked by an expression -->
   <!ATTLIST binaryOption unlockedBy          CDATA        #IMPLIED>
    <!-- Equation that controls this variable -->
   <!ATTLIST binaryOption ref                 CDATA        #IMPLIED>
   <!-- Target variable dependent on this variable -->
   <!ATTLIST binaryOption target              CDATA        #IMPLIED>
   <!-- Allows this option to modify previous option of same name 
        The variable behind this option is shared -->
   <!ATTLIST binaryOption modify              CDATA        #IMPLIED>

   <!-- List of pin mappings applied if option disabled#Expression to enable use of any pin map -->
   <!ATTLIST binaryOption disabledPinMap      CDATA        #IMPLIED>

<!-- Describes pin mapping for a peripheral -->
<!ELEMENT pinMapOption (choice?, choice?) >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST pinMapOption condition           CDATA        #IMPLIED>
   <!-- Locks variable against change by user in GUI -->
   <!ATTLIST pinMapOption locked            (false|true) #IMPLIED>
   <!-- Variable is not visible in GUI -->
   <!ATTLIST pinMapOption hidden              (false|true) #IMPLIED>
   <!-- Display name for variable (derived from key if not provided -->
   <!ATTLIST pinMapOption name                CDATA        #IMPLIED>
   <!-- Unique key used to identify variable. Prepended with peripheral name if not absolute -->
   <!ATTLIST pinMapOption key                 CDATA        #REQUIRED>
   <!-- Replace existing variable quietly -->
   <!ATTLIST pinMapOption replace             CDATA        #IMPLIED>
   <!-- Expression enables this option -->
   <!ATTLIST pinMapOption enabledBy           CDATA        #IMPLIED>
    <!-- Equation that controls this variable -->
   <!ATTLIST pinMapOption ref                 CDATA        #IMPLIED>
   <!-- Allows this option to modify previous option of same name 
        The variable behind this option is shared -->
   <!ATTLIST pinMapOption modify              CDATA        #IMPLIED>

   <!-- List of pin mappings if option disabled#Expression to enable pin map -->
   <!ATTLIST pinMapOption disabledPinMap      CDATA        #IMPLIED>

<!ELEMENT irqOption EMPTY >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST irqOption condition     CDATA        #IMPLIED>
   <!ATTLIST irqOption locked      (false|true) #IMPLIED>
   <!ATTLIST irqOption hidden        (false|true) #IMPLIED>
   <!ATTLIST irqOption name          CDATA        #IMPLIED>
   <!ATTLIST irqOption key           CDATA        #REQUIRED>
   <!ATTLIST irqOption pattern       CDATA        #REQUIRED>
   <!ATTLIST irqOption classHandler  CDATA        #REQUIRED>
   <!ATTLIST irqOption value         CDATA        #IMPLIED>
   <!ATTLIST irqOption disabledValue CDATA        #IMPLIED>
   <!ATTLIST irqOption origin        CDATA        #IMPLIED>
   <!ATTLIST irqOption description   CDATA        #IMPLIED>
   <!ATTLIST irqOption toolTip       CDATA        #IMPLIED>
   <!ATTLIST irqOption derived       (true)       #IMPLIED>
   <!ATTLIST irqOption derivedFrom   CDATA        #IMPLIED>
   <!ATTLIST irqOption typeName      CDATA        #IMPLIED> <!-- e.g. CallbackFunction -->
   <!ATTLIST irqOption valueFormat   CDATA        #IMPLIED> <!-- e.g. void (*%s)(void) -->
   <!-- Expression enables this option -->
   <!ATTLIST irqOption enabledBy     CDATA        #IMPLIED>
   <!-- Allows this option to modify previous option of same name 
        The variable behind this option is shared -->
   <!ATTLIST irqOption modify        CDATA        #IMPLIED>
   <!-- Allow variable to be replaced by later variable of same name -->
   <!ATTLIST irqOption replace        CDATA        #IMPLIED>

<!-- 
   info  Appear within peripheral info class e.g. Osc0Info
   usbdm Appears in pin_mapping.h immediately before the class declaration
   all   Can appear anywhere. Requires explicit key use.
   class Appears as classInfo variable with peripheral path e.g. /ADC/classInfo 
-->
<!ELEMENT template (#PCDATA)* >
   <!ATTLIST template namespace                 (info|usbdm|all)  #IMPLIED >
   <!ATTLIST template key                       CDATA                   #IMPLIED >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST template condition                 CDATA                   #IMPLIED>
   <!ATTLIST template codeGenCondition          CDATA                   #IMPLIED>
   <!ATTLIST template variables                 CDATA                   #IMPLIED>
   <!ATTLIST template discardRepeats            (true)                  #IMPLIED>
   <!ATTLIST template initExpressionOnSameLine  (true)                  #IMPLIED>
   <!ATTLIST template tooltipPadding            CDATA                   #IMPLIED>
   <!ATTLIST template linePadding               CDATA                   #IMPLIED>
   <!ATTLIST template useDefinitions            CDATA                   #IMPLIED>

<!ELEMENT setTemplate (#PCDATA)* >
   <!ATTLIST setTemplate namespace                 (info|usbdm|all)  #IMPLIED >
   <!ATTLIST setTemplate key                       CDATA                   #IMPLIED >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST setTemplate condition                 CDATA                   #IMPLIED>
   <!ATTLIST setTemplate codeGenCondition          CDATA                   #IMPLIED>
   <!ATTLIST setTemplate variables                 CDATA                   #REQUIRED>
   <!ATTLIST setTemplate discardRepeats            (true)                  #IMPLIED>
   <!-- Terminator for initExpression -->
   <!ATTLIST setTemplate terminator                CDATA                   #IMPLIED>
    <!-- Separator for initExpression --> 
   <!ATTLIST setTemplate separator                 CDATA                   #IMPLIED>
   <!ATTLIST setTemplate initExpressionOnSameLine  (true)                  #IMPLIED>
   <!ATTLIST setTemplate nonDefaultParams          CDATA                   #IMPLIED>
   <!ATTLIST setTemplate defaultParamValue         CDATA                   #IMPLIED>
   <!ATTLIST setTemplate tooltipPadding            CDATA                   #IMPLIED>
   <!ATTLIST setTemplate linePadding               CDATA                   #IMPLIED>
   <!ATTLIST setTemplate params                    CDATA                   #IMPLIED>
   <!ATTLIST setTemplate codeGenCondition          CDATA                   #IMPLIED>
   <!ATTLIST setTemplate useDefinitions            CDATA                   #IMPLIED>

<!ELEMENT constructorTemplate (#PCDATA)* >
   <!ATTLIST constructorTemplate namespace                 (info|usbdm|all)  #IMPLIED >
   <!ATTLIST constructorTemplate key                       CDATA                   #IMPLIED >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST constructorTemplate condition                 CDATA                   #IMPLIED>
   <!ATTLIST constructorTemplate codeGenCondition          CDATA                   #IMPLIED>
   <!ATTLIST constructorTemplate variables                 CDATA                   #REQUIRED>
   <!ATTLIST constructorTemplate discardRepeats            (true)                  #IMPLIED>
    <!-- Terminator for initExpression -->
   <!ATTLIST constructorTemplate terminator                CDATA                   #IMPLIED>
    <!-- Separator for initExpression -->
   <!ATTLIST constructorTemplate separator                 CDATA                   #IMPLIED>
   <!ATTLIST constructorTemplate initExpressionOnSameLine  (true)                  #IMPLIED>
   <!ATTLIST constructorTemplate nonDefaultParams          CDATA                   #IMPLIED>
   <!ATTLIST constructorTemplate defaultParamValue         CDATA                   #IMPLIED>
   <!ATTLIST constructorTemplate tooltipPadding            CDATA                   #IMPLIED>
   <!ATTLIST constructorTemplate linePadding               CDATA                   #IMPLIED>
   <!ATTLIST constructorTemplate params                    CDATA                   #IMPLIED>
   <!ATTLIST constructorTemplate useDefinitions            CDATA                   #IMPLIED>

<!ELEMENT initialValueTemplate (#PCDATA|for)* >
   <!ATTLIST initialValueTemplate namespace                 (info|usbdm|all)  #IMPLIED >
   <!ATTLIST initialValueTemplate key                       CDATA                   #IMPLIED >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST initialValueTemplate condition                 CDATA                   #IMPLIED>
   <!ATTLIST initialValueTemplate codeGenCondition          CDATA                   #IMPLIED>
   <!ATTLIST initialValueTemplate variables                 CDATA                   #REQUIRED>
   <!ATTLIST initialValueTemplate discardRepeats            (true)                  #IMPLIED>
    <!-- Terminator for initExpression -->
   <!ATTLIST initialValueTemplate terminator                CDATA                   #IMPLIED>
    <!-- Separator for initExpression -->
   <!ATTLIST initialValueTemplate separator                 CDATA                   #IMPLIED>
   <!ATTLIST initialValueTemplate initExpressionOnSameLine  (true)                  #IMPLIED>
   <!ATTLIST initialValueTemplate tooltipPadding            CDATA                   #IMPLIED>
   <!ATTLIST initialValueTemplate linePadding               CDATA                   #IMPLIED>
   <!ATTLIST initialValueTemplate useDefinitions            CDATA                   #IMPLIED>

<!ELEMENT enumTemplate (#PCDATA)* >
   <!ATTLIST enumTemplate namespace       (info|usbdm|all)  #IMPLIED >
   <!ATTLIST enumTemplate key             CDATA                   #IMPLIED >
   <!ATTLIST enumTemplate condition       CDATA                   #IMPLIED>
   <!ATTLIST enumTemplate variable        CDATA                   #REQUIRED>
   <!ATTLIST enumTemplate discardRepeats  (true)                  #IMPLIED>
   <!ATTLIST enumTemplate template        CDATA                   #IMPLIED>
   <!ATTLIST enumTemplate useDefinitions            CDATA                   #IMPLIED>

<!ELEMENT clockCodeTemplate (#PCDATA)* >
   <!ATTLIST clockCodeTemplate namespace                 (info|usbdm|all)  #IMPLIED >
   <!ATTLIST clockCodeTemplate key                       CDATA                   #IMPLIED >
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST clockCodeTemplate condition                 CDATA                   #IMPLIED>
   <!ATTLIST clockCodeTemplate variable                  CDATA                   #IMPLIED>
   <!ATTLIST clockCodeTemplate variables                 CDATA                   #IMPLIED>
   <!ATTLIST clockCodeTemplate discardRepeats            (true)                  #IMPLIED>
   <!-- Format for return value in generated case statement -->
   <!ATTLIST clockCodeTemplate returnFormat              CDATA                   #IMPLIED> 
   <!-- No newline before initExpression (suitable fora single initialisation value) -->
   <!ATTLIST clockCodeTemplate initExpressionOnSameLine  (true)                  #IMPLIED> 
   <!-- Padding applied to tooltips (e.g. "x*xx") -->
   <!ATTLIST clockCodeTemplate tooltipPadding            CDATA                   #IMPLIED>
   <!-- Padding applied to start of line --> 
   <!ATTLIST clockCodeTemplate linePadding               CDATA                   #IMPLIED>
   <!ATTLIST clockCodeTemplate params                    CDATA                   #IMPLIED>
   <!ATTLIST clockCodeTemplate codeGenCondition          CDATA                   #IMPLIED>
   <!ATTLIST clockCodeTemplate useDefinitions            CDATA                   #IMPLIED>

<!ELEMENT validate (param*) >
   <!ATTLIST validate class         CDATA        #REQUIRED>
   <!ATTLIST validate dim  		   CDATA        "0" >
   
<!ELEMENT param EMPTY >
   <!ATTLIST param type       (long|string) #REQUIRED>
   <!ATTLIST param value      CDATA         #REQUIRED>

<!ELEMENT signals EMPTY >
   <!ATTLIST signals name        CDATA          "" >
   <!ATTLIST signals optional    (false|true)   #IMPLIED>
   <!-- Expression enables this option -->
   <!ATTLIST signals enabledBy   CDATA          #IMPLIED>
   <!ATTLIST signals locked      (false|true)   #IMPLIED>
   <!ATTLIST signals filter      CDATA          #IMPLIED>

<!-- List of actions to be applied to a project -->
<!ELEMENT projectActionList ((deleteResource|copy|constant|createFolder)*) >
   <!ATTLIST projectActionList id            ID            #REQUIRED>
   <!ATTLIST projectActionList root          CDATA         #IMPLIED>
   <!ATTLIST projectActionList doOnceOnly    (true|false)  "true">
   <!-- Condition evaluated during parsing that controls processing of this option -->
   <!ATTLIST projectActionList condition     CDATA         #IMPLIED>
      
<!-- Exclude/include source file in Eclipse project -->
<!ELEMENT excludeSourceFile EMPTY >
   <!ATTLIST excludeSourceFile   target     CDATA          #REQUIRED>
   <!ATTLIST excludeSourceFile   excluded   (true|false)   "true" >

<!-- Exclude/include source folder in Eclipse project -->
<!ELEMENT excludeSourceFolder EMPTY >
   <!ATTLIST excludeSourceFolder    target      CDATA          #REQUIRED>
   <!ATTLIST excludeSourceFolder    excluded    (true|false)   "true" >

<!-- Remove file from Eclipse project -->
<!ELEMENT deleteResource EMPTY >
   <!ATTLIST deleteResource target  CDATA         #REQUIRED>

 <!ELEMENT createFolder EMPTY >
   <!ATTLIST createFolder target  CDATA #REQUIRED>
   <!ATTLIST createFolder type    (source|include|normal) "normal">

<!-- File to be copied to a project -->
<!ELEMENT copy EMPTY >
   <!--  Path of source -->
   <!ATTLIST copy source               CDATA #REQUIRED>
   <!--  Path of destination -->
   <!ATTLIST copy target               CDATA #REQUIRED>
   <!ATTLIST copy type                 CDATA #IMPLIED>
   <!ATTLIST copy sourcePathType       (absolute|relative|unknown) #IMPLIED>
   <!-- Replace macros ($(name)) when copy file  -->
   <!ATTLIST copy macroReplace         (true|false) "true">
   <!-- Target file may be overwritten without error -->
   <!ATTLIST copy overwrite            (true|false) #IMPLIED>
   <!-- Target file will be marked as derived -->
   <!ATTLIST copy derived              (true|false) #IMPLIED>
   
<!ELEMENT constant EMPTY >
   <!-- Used as visible name in GUI (model) -->
   <!ATTLIST constant name         CDATA                          #IMPLIED>
   <!-- Key for variable -->
   <!ATTLIST constant key          CDATA                          #REQUIRED>
   <!-- Equation giving value -->
   <!ATTLIST constant value        CDATA                          #IMPLIED>
   <!-- Description of variable -->
   <!ATTLIST constant description  CDATA                          #IMPLIED>
   <!-- Type of variable -->
   <!ATTLIST constant type         (String|Boolean|Long|Float) "string">
   <!-- If true indicates the constant may already exist and this constant is discarded -->
   <!ATTLIST constant weak         (true)                         #IMPLIED>
   <!-- Replaces any existing constant of the same key -->
   <!ATTLIST constant replace      (true)                         #IMPLIED>
   <!-- By default constants are derived - Used to disable this -->
   <!ATTLIST constant derived      (false)                        #IMPLIED>
   <!-- Make visible - doesn't have any visible effect as no model is created -->
   <!ATTLIST constant hidden       (false)                        #IMPLIED>
   <!-- Condition to include this constant -->
   <!ATTLIST constant condition    CDATA                          #IMPLIED>
   
<!ELEMENT rtcTimeOption (#PCDATA)>
   <!-- Key for variable -->
   <!ATTLIST rtcTimeOption key          CDATA       #REQUIRED>
   <!-- Equation giving value -->
   <!ATTLIST rtcTimeOption value        CDATA       #REQUIRED>
   <!-- Description of variable -->
   <!ATTLIST rtcTimeOption description  CDATA       #IMPLIED>
   <!-- Tooltip for GUI and code generation -->
   <!ATTLIST rtcTimeOption toolTip      CDATA       #IMPLIED>
      
<!ELEMENT divider EMPTY >
   
