<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- sim_mk65f18.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="System Integration Module" >

<!-- ==================== Constants ==================== -->

   <equation key="generateDefault"           type="Boolean" value="false"         />
   <equation key="configureInStartupDefault" type="Boolean" value="false"         />
   <xi:include href="enablePeripheral.xml"  />
   <title />

   <!-- TPM Trigger Sources - value:name:enum -->
   <constant key="/TPM/_trigger_sources"
      value="&quot;
         0b0000 : 'ExternalTrigger'  :  External    ;
         0b0001 : 'CMP0'             :  CMP0        ;
         0b0010 : 'CMP1'             :  CMP1        ;
         0b0100 : 'PIT Ch 0'         :  PIT_Ch0     ;
         0b0101 : 'PIT Ch 1'         :  PIT_Ch1     ;
         0b0110 : 'PIT Ch 2'         :  PIT_Ch2     ;
         0b0111 : 'PIT Ch 3'         :  PIT_Ch3     ;
         0b1000 : 'FTM0 (EXTTRIG)'   :  FTM0        ;
         0b1001 : 'FTM1 (EXTTRIG)'   :  FTM1        ;
         0b1010 : 'FTM2 (EXTTRIG)'   :  FTM2        ;
         0b1011 : 'FTM3 (EXTTRIG)'   :  FTM3        ;
         0b1100 : 'RTC Alarm'        :  RTC_Alarm   ;
         0b1101 : 'RTC Seconds'      :  RTC_Seconds ;
         0b1110 : 'LPTMR Output'     :  LPTMR       ;
         0b1111 : 'Software Trigger' :  Software    &quot;"
   />

   <!-- Flash characteristics -->
   <intOption key="/FTFE/pflash_sector_size" hidden="true" locked="true" derived="true" value="4096"
      description="Sector size for program flash" toolTip="Minimum erase element" />

   <intOption key="/FTFE/pflash_phrase_size" hidden="true" locked="true" derived="true" value="8"
      description="Phrase size for program flash" toolTip="Minimum program element" />

   <intOption key="/FTFE/dflash_sector_size" hidden="true" locked="true" derived="true" value="4096"
      description="Sector size for data flash"
      toolTip="Minimum erase element\n
               Only for device with FlexNVM" />

   <intOption key="/FTFE/dflash_phrase_size" hidden="true" locked="true" derived="true" value="8"
      description="Phrase size for data flash"
      toolTip="Minimum program element\n
               Only for device with FlexNVM" />

   <!-- Peripheral speeds                  RUN       VLPR    HSRUN       -->
   <constant key="MCGOUTCLK_max"  value="120MHz,    16MHz,  180MHz"   type="Long"    hidden="false"/>
   <constant key="MCGFLLCLK_max"  value="100MHz,     0MHz,  100MHz"   type="Long"    hidden="false"/>
   <constant key="MCGPLLCLK_max"  value="120MHz,     0MHz,  180MHz"   type="Long"    hidden="false"/>
   <constant key="USB1PFDCLK_max" value="180MHz,     0MHz,  180MHz"   type="Long"    hidden="false"/>
   <constant key="I2S_max"        value=" 25MHz,  12.5MHz,   25MHz"   type="Long"    hidden="false"/>
   <constant key="LPUART_max"     value="100MHz,    16MHz,  100MHz"   type="Long"    hidden="false"/>
   <constant key="TPM_max"        value=" 75MHz,    16MHz,   75MHz"   type="Long"    hidden="false"/>

   <!-- LLWU wakeup devices -->
   <constant key="/LLWU/llwu_device_list"
      description="LLWU Wakeup sources"
      type="String"
      value='"LPTMR0;CMP0;CMP1;CMP2_CMP3;TSIO0;RtcAlarm;;RtcSeconds"' />

   <!-- Clock divider -->
   <constant key="clock_divider_type" type="Long" value="1" />

   <!-- DMA slots -->
   <choiceOption key="/DMAMUX0/dmamux_chcfg_src"
      hidden="true"
      typeName="DmamuxSlot"
      valueFormat="DMAMUX_CHCFG_SOURCE(%s)"
      toolTip="Specifies which DMA source (slot) is routed to a particular DMA channel"
      description="Mapping of DMA slot to DMA channel" >
      <choice value="0"  name="Disabled"           enum="Disabled"         />
      <choice value="1"  name="TSI0"               enum="TSI0"             />
      <choice value="2"  name="UART0 Receive"      enum="UART0_Receive"    />
      <choice value="3"  name="UART0 Transmit"     enum="UART0_Transmit"   />
      <choice value="4"  name="UART1 Receive"      enum="UART1_Receive"    />
      <choice value="5"  name="UART1 Transmit"     enum="UART1_Transmit"   />
      <choice value="6"  name="UART2 Receive"      enum="UART2_Receive"    />
      <choice value="7"  name="UART2 Transmit"     enum="UART2_Transmit"   />
      <choice value="8"  name="UART3 Receive"      enum="UART3_Receive"    />
      <choice value="9"  name="UART3 Transmit"     enum="UART3_Transmit"   />
      <choice value="10" name="UART4 Tx and Rx"    enum="UART4_TxRx"       />
      <choice value="12" name="I2S0 Receive"       enum="I2S0_Receive"     />
      <choice value="13" name="I2S0 Transmit"      enum="I2S0_Transmit"    />
      <choice value="14" name="SPI0 Receive"       enum="SPI0_Receive"     />
      <choice value="15" name="SPI0 Transmit"      enum="SPI0_Transmit"    />
      <choice value="16" name="SPI1 Receive"       enum="SPI1_Receive"     />
      <choice value="17" name="SPI1 Transmit"      enum="SPI1_Transmit"    />
      <choice value="18" name="I2C0/I2C3"          enum="I2C0_I2C3"        />
      <choice value="19" name="I2C1/I2C2"          enum="I2C1_I2C2"        />
      <choice value="20" name="FTM0 Channel 0"     enum="FTM0_Channel0"    />
      <choice value="21" name="FTM0 Channel 1"     enum="FTM0_Channel1"    />
      <choice value="22" name="FTM0 Channel 2"     enum="FTM0_Channel2"    />
      <choice value="23" name="FTM0 Channel 3"     enum="FTM0_Channel3"    />
      <choice value="24" name="FTM0 Channel 4"     enum="FTM0_Channel4"    />
      <choice value="25" name="FTM0 Channel 5"     enum="FTM0_Channel5"    />
      <choice value="26" name="FTM0 Channel 6"     enum="FTM0_Channel6"    />
      <choice value="27" name="FTM0 Channel 7"     enum="FTM0_Channel7"    />
      <choice value="28" name="FTM1 Ch0/TPM1 Ch0"  enum="FTM1_TPM1_Ch0"    />
      <choice value="29" name="FTM1 Ch1/TPM1 Ch1"  enum="FTM1_TPM1_Ch1"    />
      <choice value="30" name="FTM2 Ch0/TPM2 Ch0"  enum="FTM2_TPM1_Ch0"    />
      <choice value="31" name="FTM2 Ch1/TPM2 Ch1"  enum="FTM2_TPM1_Ch1"    />
      <choice value="32" name="FTM3 Channel 0"     enum="FTM3_Channel0"    />
      <choice value="33" name="FTM3 Channel 1"     enum="FTM3_Channel1"    />
      <choice value="34" name="FTM3 Channel 2"     enum="FTM3_Channel2"    />
      <choice value="35" name="FTM3 Channel 3"     enum="FTM3_Channel3"    />
      <choice value="36" name="FTM3 Channel 4"     enum="FTM3_Channel4"    />
      <choice value="37" name="FTM3 Channel 5"     enum="FTM3_Channel5"    />
      <choice value="38" name="FTM3 Ch 6/SPI2_Rx"  enum="FTM3_Ch6_SPI2_Rx" />
      <choice value="39" name="FTM3 Ch 7/SPI2_Tx"  enum="FTM3_Ch7_SPI2_Tx" />
      <choice value="40" name="ADC0"               enum="ADC0"             />
      <choice value="41" name="ADC1"               enum="ADC1"             />
      <choice value="42" name="CMP0"               enum="CMP0"             />
      <choice value="43" name="CMP1"               enum="CMP1"             />
      <choice value="44" name="CMP2/CMP3"          enum="CMP2_3"           />
      <choice value="45" name="DAC0"               enum="DAC0"             />
      <choice value="46" name="DAC1"               enum="DAC1"             />
      <choice value="47" name="CMT"                enum="CMT"              />
      <choice value="48" name="PDB"                enum="PDB"              />
      <choice value="49" name="Port A"             enum="PortA"            />
      <choice value="50" name="Port B"             enum="PortB"            />
      <choice value="51" name="Port C"             enum="PortC"            />
      <choice value="52" name="Port D"             enum="PortD"            />
      <choice value="53" name="Port E"             enum="PortE"            />
      <choice value="54" name="IEEE1588 Timer 0"   enum="IEEE1588_Timer0"  />
      <choice value="55" name="IEEE1588 Timer 1"   enum="IEEE1588_Timer1"  />
      <choice value="56" name="IEEE1588 Timer 2"   enum="IEEE1588_Timer2"  />
      <choice value="57" name="IEEE1588 Timer 3"   enum="IEEE1588_Timer3"  />
      <choice value="58" name="LPUART0 Receive"    enum="LPUART0_Receive"  />
      <choice value="59" name="LPUART0 Transmit"   enum="LPUART0_Transmit" />
      <choice value="60" name="Always Enabled 60"  enum="AlwaysEnabled60"  />
      <choice value="61" name="Always Enabled 61"  enum="AlwaysEnabled61"  />
      <choice value="62" name="Always Enabled 62"  enum="AlwaysEnabled62"  />
      <choice value="63" name="Always Enabled 63"  enum="AlwaysEnabled63"  />
   </choiceOption>

   <!-- Indicate RTC arrangement: OSC0/RTC(OSC1) does not share XTAL/EXTAL pins -->
   <constant key="rtc_independent"  type="Boolean" value="true" />

   <xi:include href="simCommon.xml"/>

   <!-- _____________ Class Declaration __________________ -->
   <constant key="_class_declaration" type="String"
      value='"$(_Class)Info : public $(_Baseclass)BasicInfo"' />

   <!-- _____________ USB Clock __________________ -->

   <intOption key="system_usb_clkin_clock"
      addToVar="Usb0ExternalItems"
      hidden="true"
      origin="USB Clock In pin"
      units="Hz"
      description="Frequency of External USB Clock"
      toolTip="Externally provided clock for USB on USB_CLKIN"
      value="0" />

   <!-- _____________ SOPT1 __________________ -->

   <category name="SOPT1" description="RTC clocks" >

      <constant key="sim_sopt1_ramsize" type="String" description="RAM Size" />

      <aliasOption key="sim_sopt1_osc32ksel" locked="false" optional="true" />
      <aliasOption key="system_erclk32k_clock" />

      <choiceOption key="sim_sopt1_usbpower" condition="sim_sopt1_usbregen_present &amp;&amp; sim_sopt1_usbsstby_present &amp;&amp; sim_sopt1_usbvstby_present"
         addToVar="Usb0ExternalItems"
         enabledBy="enablePeripheralSupport"
         valueFormat="SIM_SOPT1_USBREGEN(%s),SIM_SOPT1_USBSSTBY(%s),SIM_SOPT1_USBVSTBY(%s)"
         typeName="SimUsbPower"
         description="USB voltage regulator power control"
         toolTip="Controls when the USB voltage regulator is enabled in\n
                  (RUN), (STOP, VLPS, LLS and VLLS) or (VLPR and VLPW) modes" >
         <choice value="0,0,0"  name="Disabled in all modes"         enum="Disabled"               />
         <choice value="1,0,0"  name="Enabled in all modes"          enum="EnabledInAll"           isDefault="true" />
         <choice value="1,1,0"  name="Enabled in run and low power"  enum="EnabledInRun_LowPower"  />
         <choice value="1,0,1"  name="Enabled in run and stop"       enum="EnabledInRun_Stop"      />
         <choice value="1,1,1"  name="Enabled in run only"           enum="EnabledInRun"           />
      </choiceOption>

      <choiceOption key="sim_sopt1_osc32kout" condition="sim_sopt1_osc32kout_present"
         enabledBy="enablePeripheralSupport"
         typeName="SimErc32kClkoutPinSelect"
         description="ERCLK32K Clock Output"
         toolTip="Outputs the ERCLK32K on the selected pin in all modes of operation" >
         <choice value="0"  name="ERCLK32K is not output"      enum="None"  isDefault="true" />
         <choice value="1"  name="ERCLK32K is output on PTE0"  enum="PTE0"  />
         <choice value="2"  name="ERCLK32K is output on PTE26" enum="PTE26" />
      </choiceOption>
   </category>

   <!-- _____________ SOPT2 __________________ -->

   <category name="SOPT2" description="Clock Gating" >

      <aliasOption key="sim_sopt2_rtcclkoutsel"  optional="true" locked="false"/>
      <aliasOption key="rtc_clkout"              optional="true" />

      <aliasOption key="sim_sopt2_pllfllsel[]"     locked="false" />
      <aliasOption key="system_peripheral_clock[]" optional="true" />

      <aliasOption key="sim_sopt2_usbsrc[]" locked="false" />
      <aliasOption key="system_usbfs_clock[]" />

      <aliasOption key="/OSC0/oscer_clock"               optional="true" />
      <aliasOption key="/MCG/system_mcgirclk_clock[]"    optional="true" />

      <binaryOption key="sim_sopt2_ptd7pad" condition="sim_sopt2_ptd7pad_present"
         addToVar="CmtExternalItems"
         typeName="SimPortDPad"
         description="PTD7 pad drive strength"
         toolTip="Controls the output drive strength of the PTD7 pin\n
                  by selecting either one or two pads to drive it" >
         <choice value="0"  name="Single-pad drive strength" enum="Single" isDefault="true" />
         <choice value="1"  name="Double-pad drive strength" enum="Double" />
      </binaryOption>

      <choiceOption key="sim_sopt2_fbsl" condition="sim_sopt2_fbsl_present"
         typeName="SimFlexbusSecurity"
         description="FlexBus off-chip access security level"
         toolTip="Permitted CPU accesses off-chip via the FlexBus interface" >
         <choice value="0"  name="None - All accesses are disallowed"                enum="None"     />
         <choice value="2"  name="Data - Data only accesses allowed"                 enum="DataOnly" />
         <choice value="3"  name="All - Data and instruction accesses are allowed"   enum="All"      />
      </choiceOption>

      <intOption key="system_time_clockin" condition="sim_sopt2_timesrc_present"
         origin="Ethernet Timestamp Clock In pin"
         units="Hz"
         description="IEEE 1588 timestamp clock source"
         toolTip="Externally provided clock for Ethernet IEEE1588 timestamp"
         value="0" />

      <intOption key="system_sdhc_clockin" condition="sim_sopt2_sdhcsrc_present"
         origin="SDHC Clock In pin"
         units="Hz"
         description="Frequency of External SDHC Clock"
         toolTip="Externally provided clock for SDHC"
         value="0" />

      <binaryOption key="sim_sopt2_rmiisrc"  condition="sim_sopt2_rmiisrc_present"
         typeName="SimRmiiClkSrc"
         description="RMII clock source select"
         toolTip="Selects the clock source for the Ethernet RMII interface" >
         <choice value="0"  name="EXTAL clock"                              enum="Extal"     isDefault="true" />
         <choice value="1"  name="External bypass clock (ENET_1588_CLKIN)"  enum="External"  />
      </binaryOption>

      <binaryOption key="sim_sopt2_traceclksel" condition="sim_sopt2_traceclksel_present"
         target="traceClock"
         typeName="SimTraceClockoutSel"
         description="Debug trace clock select"
         toolTip="Selects the core/system clock or MCG output clock (MCGOUTCLK) as the trace clock source\n
                  The chosen clock is divided by 2." >
         <choice value="0"  name="MCGOUTCLK"          ref="/MCG/system_mcgoutclk_clock[0]/2" enum="McgOutClk"  isDefault="true" />
         <choice value="1"  name="Core/system clock"  ref="system_core_clock[0]/2"           enum="CoreClk"    />
      </binaryOption>

      <intOption key="traceClock" condition="sim_sopt2_traceclksel_present"
         derived="true"
         locked="true"
         units="Hz"
         description="Trace clock"
         toolTip="Clock available on a pin for tracing" />

      <binaryOption key="sim_sopt2_usbregen" condition="sim_sopt2_usbregen_present"
         addToVar="Usb0ExternalItems"
         typeName="SimUsbPhyRegEn"
         description="USB PHY PLL Regulator Enable"
         toolTip="Enables the PLL regulator in the USB PHY.\n
                  The regulator must be enabled before enabling the PLL in the USB HS PHY" >
         <choice value="0"  name="Disabled"   enum="Enabled"     isDefault="true" />
         <choice value="1"  name="Enabled"    enum="Disabled"    />
      </binaryOption>

      <binaryOption key="sim_sopt2_usbslsrc" condition="sim_sopt2_usbslsrc_present"
         addToVar="Usb0ExternalItems"
         typeName="SimUsbSlowClock"
         description="USB Slow Clock Source"
         toolTip="Configures the clock source for the USB PHY and HS Controller slow clock,\n
                  used to detect wakeup and resume events" >
         <choice value="0"  name="MCGIRCLK Clock"   enum="McgIrClk" code="McgInfo::getMcgIrClock()" isDefault="true" />
         <choice value="1"  name="RTC Clock"        enum="RtcClk"   code="RtcInfo::osc_input_freq" />
      </binaryOption>
   </category>

   <!-- _____________ SOPT4 __________________ -->

   <category name="SOPT4" description="FTM signals" >

      <for keys="n" values="0;1" >
         <intOption key="FtmClkin%(n)"
            addToVar="FtmExternalItems"
            description="FTM External clock input #%(n)"
            toolTip="This input is available as a FTM external clock source"
            value="0"
            units="Hz"
         />
         <for keys="f" dim="6" >
            <if condition="sim_sopt4_ftm%(f)clksel_present" >
               <equation key="Ftm%(f)ExternalItems" value="" condition="!Ftm%(f)ExternalItems" />
               <equation key="Ftm%(f)ExternalItems" value='=Ftm%(f)ExternalItems+"FtmClkin%(n);"'/>
            </if>
         </for>
         <variableTemplate variables="FtmClkin%(n)"
            initExpressionOnSameLine="true"
         ><![CDATA[
            \t/// %tooltip
            \tstatic constexpr uint32_t FtmClkin%(n) =  %initExpression;
            \t\n
         ]]></variableTemplate>
      </for>

      <for keys="f" dim="4" >

         <title description="FTM%(f)" />
         <binaryOption key="sim_sopt4_ftm0trg0src" condition="sim_sopt4_ftm0trg0src_present&amp;&amp;(%(f)==0)"
            addToVar="Ftm%(f)ExternalItems"
            enabledBy="enablePeripheralSupport"
            typeName="SimFtm%(f)Trg0Src"
            description="FTM%(f) Hardware Trigger 0 Source"
            toolTip="Source of FTM %(f) hardware trigger 0" >
            <choice value="0"  name="CMP0 output"        enum="Cmp0" isDefault="true" />
            <choice value="1"  name="FTM1 channel match (enable FTM1.EXTTRIG)" enum="Ftm1Match" />
         </binaryOption>

         <binaryOption key="sim_sopt4_ftm0trg1src" condition="sim_sopt4_ftm0trg1src_present&amp;&amp;(%(f)==0)"
            addToVar="Ftm%(f)ExternalItems"
            enabledBy="enablePeripheralSupport"
            typeName="SimFtm%(f)Trg1Src"
            description="FTM%(f) Hardware Trigger 1 Source"
            toolTip="Source of FTM %(f) hardware trigger 1" >
            <choice value="0"  name="PDB output trigger 1" enum="PdbTrigger1" isDefault="true" />
            <choice value="1"  name="FTM2 channel match"   enum="Ftm2Match" />
         </binaryOption>

         <choiceOption key="sim_sopt4_ftm3trg0src" condition="sim_sopt4_ftm3trg0src_present&amp;&amp;(%(f)==3)"
            addToVar="Ftm%(f)ExternalItems"
            enabledBy="enablePeripheralSupport"
            typeName="SimFtm3Trg0Src"
            description="FTM3 Hardware Trigger 0 Source"
            toolTip="Source of FTM hardware trigger 0"
            locked="true" >
            <choice value="1"  name="FTM1 channel match" enum="Ftm1Match" isDefault="true" />
         </choiceOption>

         <choiceOption key="sim_sopt4_ftm3trg1src" condition="sim_sopt4_ftm3trg1src_present&amp;&amp;(%(f)==3)"
            addToVar="Ftm%(f)ExternalItems"
            enabledBy="enablePeripheralSupport"
            typeName="SimFtm3Trg1Src"
            description="FTM3 Hardware Trigger 1 Source"
            toolTip="Source of FTM hardware trigger 1"
            locked="true" >
            <choice value="1"  name="FTM2 channel match" enum="Ftm2Match" isDefault="true" />
         </choiceOption>

         <for keys="p" values="0;1;2;3" >
            <binaryOption key="sim_sopt4_ftm%(p)clksel" condition="sim_sopt4_ftm%(p)clksel_present&amp;&amp;(%(f)==%(p))"
               addToVar="Ftm%(f)ExternalItems"
               target="ftm%(p)ExternalClock"
               enabledBy="enablePeripheralSupport"
               typeName="SimFtm%(p)ClkSel"
               description="FTM%(p) External Clock Pin"
               toolTip="External pin used to drive the clock to the FTM module" >
               <choice value="0"  name="FTM_CLKIN0 pin" enum="FtmClkin0" ref="FtmClkin0" code="FtmClkin0" isDefault="true" />
               <choice value="1"  name="FTM_CLKIN1 pin" enum="FtmClkin1" ref="FtmClkin1" code="FtmClkin1" />
            </binaryOption>
            <intOption key="ftm%(p)ExternalClock" condition="sim_sopt4_ftm%(p)clksel&amp;&amp;(%(f)==%(p))"
               addToVar="Ftm%(f)ExternalItems"
               toolTip="The frequency of the external clock selected for FTM%(p)"
               description="FTM%(p) external clock"
               locked="true"
               derived="true"
               units="Hz"
            />
         </for>

         <choiceOption key="sim_sopt4_ftm1ch0src" condition="sim_sopt4_ftm1ch0src_present&amp;&amp;(%(f)==1)"
            addToVar="Ftm%(f)ExternalItems,Usb0ExternalItems"
            enabledBy="enablePeripheralSupport"
            typeName="SimFtm1Ch0Src"
            description="FTM 1 channel 0 input capture source"
            toolTip="Source for FTM channel 0 input capture\n
               NOTE: When the FTM is not in input capture mode, clear this field" >
            <choice value="0" name="FTM1_CH0 signal"          enum="IcPin"  isDefault="true"/>
            <choice value="1" name="CMP0 output"              enum="Cmp0"     />
            <choice value="2" name="CMP1 output"              enum="Cmp1"     />
            <choice value="3" name="USB start of frame pulse" enum="UsbSof"   />
         </choiceOption>

         <choiceOption key="sim_sopt4_ftm2ch0src" condition="sim_sopt4_ftm2ch0src_present&amp;&amp;(%(f)==2)"
            addToVar="Ftm%(f)ExternalItems"
            enabledBy="enablePeripheralSupport"
            typeName="SimFtm2Ch0Src"
            description="FTM2 channel 0 input capture source"
            toolTip="Source for FTM channel 0 input capture\n
               NOTE: When the FTM is not in input capture mode, clear this field" >
            <choice value="0" name="FTM2_CH0 signal"  enum="IcPin"  isDefault="true"/>
            <choice value="1" name="CMP0 output"      enum="Cmp0" />
            <choice value="2" name="CMP1 output"      enum="Cmp1" />
         </choiceOption>

         <binaryOption key="sim_sopt4_ftm2ch1src" condition="sim_sopt4_ftm2ch1src_present&amp;&amp;(%(f)==2)"
            addToVar="Ftm%(f)ExternalItems"
            enabledBy="enablePeripheralSupport"
            typeName="SimFtm2Ch1Src"
            description="FTM2 channel 1 input capture source"
            toolTip="Source for FTM channel 1 input capture\n
               NOTE: When the FTM is not in input capture mode, clear this field" >
            <choice value="0" name="FTM2_CH1 signal"                    enum="IcPin" isDefault="true"/>
            <choice value="2" name="FTM2_CH1 xor FTM2_CH0 xor FTM1_CH1" enum="Ftm2Ch1_Ftm2Ch2_Ftm1Ch1" />
         </binaryOption>

         <for keys="ftmNum" values="0;1;2;3" >
            <binaryOption key="sim_sopt4_ftm%(ftmNum)flt0" condition="sim_sopt4_ftm%(ftmNum)flt0_present&amp;&amp;(%(f)==%(ftmNum))"
               addToVar="Ftm%(f)ExternalItems"
               enabledBy="enablePeripheralSupport"
               typeName="SimFtm%(ftmNum)Flt0"
               description="FTM%(ftmNum) Fault 0 Select"
               toolTip="Source of FTM fault input 0" >
               <choice value="0"  name="FTM%(ftmNum)_FLT0 pin" enum="Ftm%(ftmNum)Fault0" isDefault="true" />
               <choice value="1"  name="CMP0 output"           enum="Cmp0" />
            </binaryOption>
         </for>

         <for keys="ftmNum" values="0" >
            <binaryOption key="sim_sopt4_ftm%(ftmNum)flt1" condition="sim_sopt4_ftm%(ftmNum)flt1_present&amp;&amp;(%(f)==%(ftmNum))"
            addToVar="Ftm%(f)ExternalItems"
               enabledBy="enablePeripheralSupport"
               typeName="SimFtm%(ftmNum)Flt1"
               description="FTM%(ftmNum) Fault 1 Select"
               toolTip="Source of FTM fault input 1" >
               <choice value="0"  name="FTM%(ftmNum)_FLT1 pin" enum="Ftm%(ftmNum)Fault1" isDefault="true" />
               <choice value="1"  name="CMP1 output"           enum="Cmp1" />
            </binaryOption>
         </for>

         <for keys="ftmNum" values="0" >
            <binaryOption key="sim_sopt4_ftm%(ftmNum)flt2" condition="sim_sopt4_ftm%(ftmNum)flt2_present&amp;&amp;(%(f)==%(ftmNum))"
               addToVar="Ftm%(f)ExternalItems"
               enabledBy="enablePeripheralSupport"
               typeName="SimFtm%(ftmNum)Flt2"
               description="FTM%(ftmNum) Fault 2 Select"
               toolTip="Source of FTM fault input 2" >
               <choice value="0"  name="FTM%(ftmNum)_FLT2 pin" enum="Ftm%(ftmNum)Fault2" isDefault="true" />
               <choice value="1"  name="CMP2 output"           enum="Cmp2" />
            </binaryOption>
         </for>

         <for keys="ftmNum" values="0" >
            <binaryOption key="sim_sopt4_ftm%(ftmNum)flt3" condition="sim_sopt4_ftm%(ftmNum)flt3_present&amp;&amp;(%(f)==%(ftmNum))"
               addToVar="Ftm%(f)ExternalItems"
               enabledBy="enablePeripheralSupport"
               typeName="SimFtm%(ftmNum)Flt3"
               description="FTM%(ftmNum) Fault 3 Select"
               toolTip="Source of FTM fault input 3" >
               <choice value="0"  name="FTM%(ftmNum)_FLT3 pin" enum="Ftm%(ftmNum)Fault3" isDefault="true" />
               <choice value="1"  name="CMP3 output"           enum="Cmp3" />
            </binaryOption>
         </for>

         <clockCodeTemplate variable="sim_sopt4_ftm%(f)clksel"
            returnFormat="%s"
         ><![CDATA[
            \t/**
            \t * Set %description
            \t *
            \t * @param %paramName %tooltip
            \t */
            \tstatic void setFtm%(f)ExternalClock(%paramType %paramName) {
            \t   %fieldAssignment;
            \t}
            \t
            \t/**
            \t * Get %description
            \t *
            \t * @return Clock frequency in Hz
            \t */
            \tstatic uint32_t getFtm%(f)ExternalClock() {
            \t
            \t   return %paramType(%register&%mask);
            \t   }
            \t
            \t
            \t/**
            \t * Get %description
            \t *
            \t * @return Clock frequency in Hz
            \t */
            \tstatic uint32_t getFtm%(f)ExternalClockFrequency() {
            \t
            \t   switch(%maskingExpression) {
            \t      default: return 0;
            %body
            \t   }
            \t}\n\n
         ]]></clockCodeTemplate>
      </for>
   </category>

   <!-- _____________ SOPT5 __________________ -->

   <category name="SOPT5" description="UART signals" >

      <for keys="n" values="0;1" >
         <for keys   = "name:Name:NAME"
              values = "uart%(n)   : Uart%(n)   : UART%(n);
                        lpuart%(n) : Lpuart%(n) : LPUART%(n)" >
            <choiceOption key="sim_sopt5_%(name)rxsrc" condition="sim_sopt5_%(name)rxsrc_present"
               addToVar="%(Name)ExternalItems"
               enabledBy="enablePeripheralSupport"
               typeName="Sim%(Name)RxSrc"
               description="%(NAME) receive data source"
               toolTip="Source for the %(NAME) receive data" >
               <choice value="0" name="Rx pin"        enum="RxPin"  isDefault="true" />
               <choice value="1" name="CMP0 output"   enum="Cmp0"   />
               <choice value="2" name="CMP1 output"   enum="Cmp1" condition="/CMP1/_present" />
            </choiceOption>

            <choiceOption key="sim_sopt5_%(name)txsrc" condition="sim_sopt5_%(name)txsrc_present"
               addToVar="%(Name)ExternalItems,FtmExternalItems"
               enabledBy="enablePeripheralSupport"
               typeName="Sim%(Name)TxSrc"
               description="%(NAME) transmit data source"
               toolTip="Source for the %(NAME) transmit data" >
               <choice value="0" name="Tx pin" isDefault="true"             enum="Direct" />
               <choice value="1" name="Tx pin modulated by FTM1 channel 0"  enum="ModulatedByFtm1Ch0" />
               <choice value="2" name="Tx pin modulated by FTM2 channel 0"  enum="ModulatedByFtm2Ch0"  />
            </choiceOption>
         </for>
      </for>
   </category>

   <!-- _____________ SOPT7 __________________ -->

   <category name="SOPT7" description="ADC signals" >
      <for keys="adc" values="0;1" >
         <choiceOption key="sim_sopt7_adc%(adc)trigger" condition="sim_sopt7_adc%(adc)alttrgen_present"
            addToVar="Adc%(adc)ExternalItems"
            enabledBy="enablePeripheralSupport"
            typeName="SimAdc%(adc)TriggerMode"
            valueFormat="SIM_SOPT7_ADC%(adc)ALTTRGEN(%s),SIM_SOPT7_ADC%(adc)PRETRGSEL(%s)"
            description="ADC%(adc) trigger mode"
            toolTip="Alternative conversion triggers for ADC\n
               _Pdb              - ADC is triggered by PDB\n
               _Alt_PreTrigger_0 - ADC is triggered by SimAdc%(adc)Trigger selection and uses pretrigger 0 = A (SC1[0]/R[0])\n
               _Alt_PreTrigger_1 - ADC is triggered by SimAdc%(adc)Trigger selection and uses pretrigger 1 = B (SC1[1]/R[1])" >
            <choice value="0,0"   name="Triggered by PDB"             enum="Pdb" isDefault="true" />
            <choice value="1,0"   name="External trigger using SC1[0]/R[0]"   enum="Alt_PreTrigger_0" />
            <choice value="1,1"   name="External trigger using SC1[1]/R[1]"   enum="Alt_PreTrigger_1" />
         </choiceOption>

         <choiceOption key="sim_sopt7_adc%(adc)trgsel" condition="sim_sopt7_adc%(adc)pretrgsel_present"
            addToVar="Adc%(adc)ExternalItems"
            enabledBy="enablePeripheralSupport"
            typeName="SimAdc%(adc)TriggerSrc"
            description="ADC%(adc) trigger source"
            toolTip="ADC Trigger source in STOP and VLPS modes, or when ADC Alternative Trigger is active" >
            <choice value="0"  name="External trigger pin input (PDB0_EXTRG)" enum="External"     isDefault="true" />
            <choice value="1"  name="CMP 0 output"                            enum="Cmp0"         condition="/CMP0/_present"   />
            <choice value="2"  name="CMP 1 output"                            enum="Cmp1"         condition="/CMP1/_present"   />
            <choice value="3"  name="CMP 2 output"                            enum="Cmp2"         condition="/CMP2/_present"   />
            <choice value="4"  name="PIT trigger 0"                           enum="PitCh0"       condition="/PIT/_present"    />
            <choice value="5"  name="PIT trigger 1"                           enum="PitCh1"       condition="/PIT/_present"    />
            <choice value="6"  name="PIT trigger 2"                           enum="PitCh2"       condition="/PIT/_present"    />
            <choice value="7"  name="PIT trigger 3"                           enum="PitCh3"       condition="/PIT/_present"    />
            <choice value="8"  name="FTM0 trigger"                            enum="Ftm0"         condition="/FTM0/_present"   />
            <choice value="9"  name="FTM1 trigger"                            enum="Ftm1"         condition="/FTM1/_present"   />
            <choice value="10" name="FTM2 trigger"                            enum="Ftm2"         condition="/FTM2/_present"   />
            <choice value="11" name="FTM3 trigger"                            enum="Ftm3"         condition="/FTM3/_present"   />
            <choice value="12" name="RTC alarm"                               enum="RtcAlarm"     condition="/RTC/_present"    />
            <choice value="13" name="RTC seconds"                             enum="RtcSeconds"   condition="/RTC/_present"    />
            <choice value="14" name="LPTMR trigger"                           enum="Lptmr"        condition="/LPTMR0/_present" />
            <choice value="15" name="TPM1 channel 0/1 (A/B pretrigger)"       enum="Tmp1Triggers" condition="/TPM1/_present"/>
         </choiceOption>
      </for>
   </category>

   <!-- _____________ SOPT8 __________________ -->

   <category name="SOPT8" description="FTM output modulation" >
      <for keys="ch" values="0;1;2;3;4;5;6;7" >
         <binaryOption key="sim_sopt8_ftm0och%(ch)src" condition="sim_sopt8_ftm0och%(ch)src_present"
            addToVar="Ftm0ExternalItems"
            typeName="SimFtm0Ch%(ch)OutputSrc"
            description="FTM0 channel %(ch) output source"
            toolTip="Allows modulation of FTM output" >
            <choice value="0" name="FTM0 ch %(ch) direct"                 enum="Direct"             isDefault="true" />
            <choice value="1" name="FTM0 ch %(ch) modulated by FTM1 ch 1" enum="ModulatedByFtm1Ch1" />
         </binaryOption>
      </for>

      <for keys="ch" values="0;1;2;3;4;5;6;7" >
         <binaryOption key="sim_sopt8_ftm3och%(ch)src"  condition="sim_sopt8_ftm3och%(ch)src_present"
            addToVar="Ftm3ExternalItems"
            typeName="SimFtm3Ch%(ch)OutputSrc"
            description="FTM3 channel %(ch) output source"
            toolTip="Allows modulation of FTM output" >
            <choice value="0" name="FTM3 ch %(ch) direct"                 enum="Direct"             isDefault="true" />
            <choice value="1" name="FTM3 ch %(ch) modulated by FTM2 ch 1" enum="ModulatedByFtm2Ch1" />
         </binaryOption>
      </for>

      <choiceOption key="sim_sopt8_ftm_syncbits" condition="sim_sopt8_ftm0syncbit_present"
         addToVar="FtmExternalItems"
         typeName="SimFtmSync"
         valueFormat="%s"
         hidden="true"
         description="FTM Hardware Trigger 0 Software Asserts"
         toolTip="This allows software to assert the hardware trigger (TRIG0) FTM inputs\n
                  Use setFtmSyncBits() to assert TRIG0 input on multiple FTMs\n
                  Use clearFtmSyncBits() or clearAllFtmSyncBits() to allow other trigger sources to assert" >
         <choice value="SIM_SOPT8_FTM0SYNCBIT_MASK" name="FTM0 trigger mask" enum="Ftm0" />
         <choice value="SIM_SOPT8_FTM1SYNCBIT_MASK" name="FTM1 trigger mask" enum="Ftm1" />
         <choice value="SIM_SOPT8_FTM2SYNCBIT_MASK" name="FTM2 trigger mask" enum="Ftm2" />
         <choice value="SIM_SOPT8_FTM3SYNCBIT_MASK" name="FTM3 trigger mask" enum="Ftm3" />
      </choiceOption>
   </category>

   <!-- _____________ FCFG1 __________________ -->

   <category name="Flash" description="Flash control" >
      <binaryOption key="sim_fcfg1_flashdoze" condition="sim_fcfg1_flashdoze_present"
         enabledBy="enablePeripheralSupport"
         typeName="SimFlashDoze"
         description="Flash Doze"
         toolTip="Allows flash memory to be disabled in Doze mode. \n
                  This bit should be clear during VLP modes. \n
                  The Flash will be automatically enabled again at the end of Doze mode" >
         <choice name="Flash remains enabled during Wait mode"           value="0" enum="EnabledInDoze"/>
         <choice name="Flash is disabled for the duration of Wait mode"  value="1" enum="DisabledInDoze"/>
      </binaryOption >

      <binaryOption key="sim_fcfg1_flashdis" condition="sim_fcfg1_flashdis_present"
         enabledBy="enablePeripheralSupport"
         typeName="SimFlashEn"
         description="Flash Disable"
         toolTip="Flash accesses are disabled (and generate a bus error).\n
                  Flash memory is placed in a low power state.\n
                  This bit should not be changed during VLP modes"
         >
         <choice name="Flash is enabled"   value="0" enum="Enabled"/>
         <choice name="Flash is disabled"  value="1" enum="Disabled"/>
      </binaryOption >
   </category>

   <for keys="n" dim="=numberOfClockSettings" >
      <aliasCategoryOption key="/MCG/ClockConfig[%(n)]" derived="true" locked="true" >

         <aliasOption key="/MCG/enableClockConfiguration[%(n)]" locked="false" />
         <aliasOption key="/SMC/smc_pmctrl_runm[%(n)]"          locked="false" />

         <category name="Peripheral Clocks" description="Peripheral Clock Selection" >
            <intOption key="system_irc48m_clock[%(n)]"
               addToVar="Usb0ExternalItems"
               enabledBy="/SMC/smc_pmctrl_runm[%(n)]!=1##IRC48M Disabled in VLPR"
               locked="true"
               derived="true"
               units="Hz"
               description="Frequency of Internal 48MHz Clock [IRC48MCLK]"
               toolTip="48 MHz Internal Oscillator [May be trimmed against USB bus]"
               origin="48MHz clock from IRC48MCLK"
               value="48000000"
               disabledValue="0" />

            <choiceOption key="sim_sopt2_clkoutsel[%(n)]" condition="sim_sopt2_clkoutsel_present"
               target="clockOut[%(n)]"
               typeName="SimClkoutSel"
               description="CLKOUT pin clock"
               toolTip="Clock to output on the CLKOUT pin" >
               <choice value="0"  name="FlexBus CLKOUT"      ref="system_flexbus_clock[%(n)]"       enum="FlexBusClk"  condition="sim_sopt2_fbsl_present"  />
               <choice value="0"  name="Disabled0"           ref="disabled"                         enum="Unused0"     condition="!sim_sopt2_fbsl_present" />
               <choice value="1"  name="Disabled1"           ref="disabled"                         enum="Unused1"      />
               <choice value="2"  name="Flash clock"         ref="system_flash_clock[%(n)]"         enum="FlashClk"    isDefault="true" />
               <choice value="3"  name="LPO clock (1 kHz)"   ref="/PMC/system_low_power_clock"      enum="LpoClk"       />
               <choice value="4"  name="MCGIRCLK"            ref="/MCG/system_mcgirclk_clock[%(n)]" enum="McgIrClk"     />
               <choice value="5"  name="RTC 32.768kHz clock" ref="/RTC/rtcclk_gated_clock"          enum="RtcClk"       />
               <choice value="6"  name="OSCERCLK0"           ref="/OSC0/oscer_clock"                enum="OscerClk0"    />
               <choice value="7"  name="IRC 48 MHz clock"    ref="system_irc48m_clock[%(n)]"        enum="Irc48MClk"   condition="system_irc48m_clock[%(n)]"  />
               <choice value="7"  name="Disabled7"           ref="disabled"                         enum="Unused7"     condition="!system_irc48m_clock[%(n)]" />
            </choiceOption>

            <intOption key="clockOut[%(n)]" condition="sim_sopt2_clkoutsel_present"
               derived="true"
               locked="true"
               units="Hz"
               description="Clock out"
               toolTip="Clock available on CLKOUT pin" />

            <intOption key="usb1pfdclk_Clock[%(n)]" condition="/USBPHY1/_present"
               addToVar="Usb0ExternalItems"
               max="USB1PFDCLK_max[/SMC/smc_pmctrl_runm[%(n)]]"
               enabledBy="/SMC/smc_pmctrl_runm[%(n)]!=1"
               derived="true"
               locked="true"
               units="Hz"
               description="USB1 PHY clock"
               toolTip="USB1PFD Clock available as peripheral clock" />

            <choiceOption key="sim_sopt2_pllfllsel[%(n)]"
               addToVar="Usb0ExternalItems"
               typeName="SimPeripheralClockSource"
               target="system_peripheral_clock[%(n)]"
               description="Peripheral Clock"
               toolTip="Clock for various peripherals (LPUART, TPM etc.)\n
                        If there is a peripheral clock divider then this is the\n
                        Frequency of the undivided peripheral clock" >
               <choice value="0"  name="MCGFLLCLK clock"   ref="/MCG/system_mcgfllclk_clock[%(n)]"     enum="McgFllClk"  code="SystemMcgFllClock"   isDefault="true" />
               <choice value="1"  name="MCGPLLCLK clock"   ref="/MCG/system_mcgpllclk_clock[%(n)]"     enum="McgPllClk"  code="SystemMcgPllClock"   />
               <choice value="2"  name="USB1 PFD clock"    ref="usb1pfdclk_Clock[%(n)]"                enum="Usb1PfdClk" code="0"                   condition="/USBPHY1/_present"   />
               <choice value="2"  name="Disabled"          ref="disabled"                              enum="Disabled2"  code="0"                   condition="!/USBPHY1/_present&amp;&amp;system_irc48m_clock[%(n)]"   />
               <choice value="3"  name="IRC48 MHz clock"   ref="system_irc48m_clock[%(n)]"             enum="Irc48mClk"  code="irc48mClock"         condition="system_irc48m_clock[%(n)]" />
               <choice value="3"  name="Disabled"          ref="disabled"                              enum="Disabled3"  code="0"                   condition="/USBPHY1/_present&amp;&amp;!system_irc48m_clock[%(n)]" />
            </choiceOption>

            <intOption key="system_peripheral_clock[%(n)]"
               enabledBy="(%(n)==0)||/MCG/enableClockConfiguration[%(n)]"
               derived="true"
               locked="true"
               units="Hz"
               description="Peripheral Clock frequency"
               toolTip="Frequency of Peripheral Clock available to various peripherals"  />

            <choiceOption key="sim_clkdiv2_usb[%(n)]" condition="sim_clkdiv2_usbdiv_present"
               addToVar="Usb0ExternalItems"
               valueFormat="(%s)"
               target="clkdiv2_clock[%(n)]"
               typeName="SimUsbClockDivider"
               description="USB clock divider (SIM_CLKDIV2)"
               toolTip="Sets the clock divider when using an internal clock\n
                        as the USB clock source" >
               <choice value="1"  name="Multiply by 2 (div=0, frac=1)"  enum="Mult2 " ref="(system_peripheral_clock[%(n)]*2/1)" code="SIM_CLKDIV2_USBDIV(0)|SIM_CLKDIV2_USBFRAC(1)" />
               <choice value="0"  name="Multiply by 1 (div=0, frac=0)"  enum="Mult1 " ref="(system_peripheral_clock[%(n)]*1/1)" code="SIM_CLKDIV2_USBDIV(0)|SIM_CLKDIV2_USBFRAC(0)" isDefault="true" />
               <choice value="3"  name="Multiply by 1 (div=1, frac=1)"  enum="Mult1b" ref="(system_peripheral_clock[%(n)]*2/2)" code="SIM_CLKDIV2_USBDIV(1)|SIM_CLKDIV2_USBFRAC(1)" />
               <choice value="5"  name="Divide by 1.5 (div=2, frac=1)"  enum="Div1_5" ref="(system_peripheral_clock[%(n)]*2/3)" code="SIM_CLKDIV2_USBDIV(2)|SIM_CLKDIV2_USBFRAC(1)" />
               <choice value="2"  name="Divide by 2 (div=1, frac=0)"    enum="Div2  " ref="(system_peripheral_clock[%(n)]*1/2)" code="SIM_CLKDIV2_USBDIV(1)|SIM_CLKDIV2_USBFRAC(0)" />
               <choice value="7"  name="Divide by 2 (div=3, frac=1)"    enum="Div2b " ref="(system_peripheral_clock[%(n)]*2/4)" code="SIM_CLKDIV2_USBDIV(2)|SIM_CLKDIV2_USBFRAC(1)" />
               <choice value="9"  name="Divide by 2.5 (div=4, frac=1)"  enum="Div2_5" ref="(system_peripheral_clock[%(n)]*2/5)" code="SIM_CLKDIV2_USBDIV(4)|SIM_CLKDIV2_USBFRAC(1)" />
               <choice value="4"  name="Divide by 3 (div=2, frac=0)"    enum="Div3  " ref="(system_peripheral_clock[%(n)]*1/3)" code="SIM_CLKDIV2_USBDIV(5)|SIM_CLKDIV2_USBFRAC(0)" />
               <choice value="11" name="Divide by 3 (div=5, frac=1)"    enum="Div3b " ref="(system_peripheral_clock[%(n)]*2/6)" code="SIM_CLKDIV2_USBDIV(5)|SIM_CLKDIV2_USBFRAC(1)" />
               <choice value="13" name="Divide by 3.5 (div=6, frac=1)"  enum="Div3_5" ref="(system_peripheral_clock[%(n)]*2/7)" code="SIM_CLKDIV2_USBDIV(6)|SIM_CLKDIV2_USBFRAC(1)" />
               <choice value="6"  name="Divide by 4 (div=3, frac=0)"    enum="Div4  " ref="(system_peripheral_clock[%(n)]*1/4)" code="SIM_CLKDIV2_USBDIV(3)|SIM_CLKDIV2_USBFRAC(0)" />
               <choice value="15" name="Divide by 4 (div=7, frac=1)"    enum="Div4b " ref="(system_peripheral_clock[%(n)]*2/8)" code="SIM_CLKDIV2_USBDIV(7)|SIM_CLKDIV2_USBFRAC(1)" />
               <choice value="8"  name="Divide by 5 (div=4, frac=0)"    enum="Div5  " ref="(system_peripheral_clock[%(n)]*1/5)" code="SIM_CLKDIV2_USBDIV(4)|SIM_CLKDIV2_USBFRAC(0)" />
               <choice value="10" name="Divide by 6 (div=5, frac=0)"    enum="Div6  " ref="(system_peripheral_clock[%(n)]*1/6)" code="SIM_CLKDIV2_USBDIV(5)|SIM_CLKDIV2_USBFRAC(0)" />
               <choice value="12" name="Divide by 7 (div=6, frac=0)"    enum="Div7  " ref="(system_peripheral_clock[%(n)]*1/7)" code="SIM_CLKDIV2_USBDIV(6)|SIM_CLKDIV2_USBFRAC(0)" />
               <choice value="14" name="Divide by 8 (div=7, frac=0)"    enum="Div8  " ref="(system_peripheral_clock[%(n)]*1/8)" code="SIM_CLKDIV2_USBDIV(7)|SIM_CLKDIV2_USBFRAC(0)" />
            </choiceOption>

            <intOption key="clkdiv2_clock[%(n)]"  condition="sim_clkdiv2_usbdiv_present"
               addToVar="Usb0ExternalItems"
               hidden="true"
               derived="true"
               locked="true"
               units="Hz"
               description="USB Full Speed Clock"
               toolTip="Frequency of clock to USB full speed controller"
               value="0" />

            <choiceOption key="sim_sopt2_usbsrc[%(n)]" condition="sim_sopt2_usbsrc_present"
               addToVar="Usb0ExternalItems"
               target="system_usbfs_clock[%(n)]"
               typeName="SimUsbFullSpeedClockSource"
               description="USB Clock"
               toolTip="Source for the USB clock" >
               <choice value="0"  name="External bypass clock (USB_CLKIN)" enum="External"      ref="system_usb_clkin_clock" />
               <choice value="1"  name="Peripheral Clock/SIM_CLKDIV2"      enum="PeripheralClk" ref="clkdiv2_clock[%(n)]"    isDefault="true" />
            </choiceOption>

            <aliasOption key="system_usb_clkin_clock" locked="false" optional="true" />

            <intOption key="system_usbfs_clock[%(n)]"  condition="sim_sopt2_usbsrc_present"
               addToVar="Usb0ExternalItems"
               errorPropagate="error"
               derived="true"
               locked="true"
               units="Hz"
               description="USB Full Speed Clock"
               toolTip="Frequency of clock to USB full speed controller"
               value="48_MHz" min="48_MHz" max="48_MHz" disabledValue="0" />

            <choiceOption key="sim_clkdiv3_pllfll[%(n)]" condition="sim_clkdiv3_pllflldiv_present"
               typeName="SimPeripheralClockDivider"
               valueFormat="(%s)"
               target="system_peripheral_postdivider_clock[%(n)]"
               description="Peripheral Clock post-divider (SIM_CLKDIV3)"
               toolTip="Selects the post PLL/FLL clock divider for various peripherals\n
                        (LPUART, TPM, FlexIO)" >
               <choice value="1"   name="Multiply by 2 (div=0, frac=1)"  enum="Mult2 " ref="(system_peripheral_clock[%(n)]*2)/1" code="SIM_CLKDIV3_PLLFLLDIV(0)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
               <choice value="0"   name="Multiply by 1 (div=0, frac=0)"  enum="Mult1 " ref="(system_peripheral_clock[%(n)]*1)/1" code="SIM_CLKDIV3_PLLFLLDIV(0)|SIM_CLKDIV3_PLLFLLFRAC(0)"  isDefault="true" />
               <choice value="3"   name="Multiply by 1 (div=1, frac=1)"  enum="Mult1b" ref="(system_peripheral_clock[%(n)]*2)/2" code="SIM_CLKDIV3_PLLFLLDIV(1)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
               <choice value="5"   name="Divide by 1.5 (div=2, frac=1)"  enum="Div1_5" ref="(system_peripheral_clock[%(n)]*2)/3" code="SIM_CLKDIV3_PLLFLLDIV(2)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
               <choice value="2"   name="Divide by 2 (div=1, frac=0)"    enum="Div2  " ref="(system_peripheral_clock[%(n)]*1)/2" code="SIM_CLKDIV3_PLLFLLDIV(1)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
               <choice value="7"   name="Divide by 2 (div=3, frac=1)"    enum="Div2b " ref="(system_peripheral_clock[%(n)]*2)/4" code="SIM_CLKDIV3_PLLFLLDIV(3)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
               <choice value="9"   name="Divide by 2.5 (div=4, frac=1)"  enum="Div2_5" ref="(system_peripheral_clock[%(n)]*2)/5" code="SIM_CLKDIV3_PLLFLLDIV(4)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
               <choice value="4"   name="Divide by 3 (div=2, frac=0)"    enum="Div3  " ref="(system_peripheral_clock[%(n)]*1)/3" code="SIM_CLKDIV3_PLLFLLDIV(2)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
               <choice value="11"  name="Divide by 3 (div=5, frac=1)"    enum="Div3b " ref="(system_peripheral_clock[%(n)]*2)/6" code="SIM_CLKDIV3_PLLFLLDIV(5)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
               <choice value="13"  name="Divide by 3.5 (div=6, frac=1)"  enum="Div3_5" ref="(system_peripheral_clock[%(n)]*2)/7" code="SIM_CLKDIV3_PLLFLLDIV(6)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
               <choice value="6"   name="Divide by 4 (div=3, frac=0)"    enum="Div4  " ref="(system_peripheral_clock[%(n)]*1)/4" code="SIM_CLKDIV3_PLLFLLDIV(3)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
               <choice value="15"  name="Divide by 4 (div=7, frac=1)"    enum="Div4b " ref="(system_peripheral_clock[%(n)]*2)/8" code="SIM_CLKDIV3_PLLFLLDIV(7)|SIM_CLKDIV3_PLLFLLFRAC(1)"  />
               <choice value="8"   name="Divide by 5 (div=4, frac=0)"    enum="Div5  " ref="(system_peripheral_clock[%(n)]*1)/5" code="SIM_CLKDIV3_PLLFLLDIV(4)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
               <choice value="10"  name="Divide by 6 (div=5, frac=0)"    enum="Div6  " ref="(system_peripheral_clock[%(n)]*1)/6" code="SIM_CLKDIV3_PLLFLLDIV(5)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
               <choice value="12"  name="Divide by 7 (div=6, frac=0)"    enum="Div7  " ref="(system_peripheral_clock[%(n)]*1)/7" code="SIM_CLKDIV3_PLLFLLDIV(6)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
               <choice value="14"  name="Divide by 8 (div=7, frac=0)"    enum="Div8  " ref="(system_peripheral_clock[%(n)]*1)/8" code="SIM_CLKDIV3_PLLFLLDIV(7)|SIM_CLKDIV3_PLLFLLFRAC(0)"  />
            </choiceOption>

            <intOption key="system_peripheral_postdivider_clock[%(n)]" condition="sim_clkdiv3_pllflldiv_present"
               derived="true"
               locked="true"
               units="Hz"
               description="Peripheral Post-divider Clock frequency/"
               toolTip="Frequency of Peripheral Clock available to various peripherals"
               max="75_MHz" />

            <for keys="u : name              : code            : ref"
               values="0 : System core clock : SystemCoreClock : system_core_clock[%(n)];
                       1 : System core clock : SystemCoreClock : system_core_clock[%(n)];
                       2 : System bus clock  : SystemBusClock  : system_bus_clock[%(n)];
                       3 : System bus clock  : SystemBusClock  : system_bus_clock[%(n)];
                       4 : System bus clock  : SystemBusClock  : system_bus_clock[%(n)]" >

               <choiceOption key="system_uart%(u)_fixedclocksource[%(n)]"
                  addToVar="Uart%(u)ExternalItems"
                  target="system_uart%(u)_clock[%(n)]"
                  locked="true"
                  derived="true"
                  description="UART%(u) Clock source"
                  toolTip="Fixed clock source for UART (%(code))" >
                  <choice value="0"  name="%(name)" ref="%(ref)" code="%(code)" />
               </choiceOption>

               <intOption key="system_uart%(u)_clock[%(n)]"
                  addToVar="Uart%(u)ExternalItems"
                  locked="true"
                  derived="true"
                  units="Hz"
                  description="UART%(u) Clock frequency"
                  toolTip="Frequency of clock to UART%(u)"
                  value="0" />
            </for>

            <choiceOption key="sim_sopt2_lpuartsrc[%(n)]" condition="sim_sopt2_lpuartsrc_present"
               addToVar="LpuartExternalItems"
               typeName="SimLpuartClockSource"
               target="system_lpuart_clock[%(n)]"
               description="LPUART Clock select"
               toolTip="Selects the clock source for the transmit and receive clock\n
                        This selection is shared by all LPUARTs" >
               <choice value="0"  name="Disabled"                     ref="disabled"                                  enum="Disabled"        code="0"                           />
               <choice value="1"  name="Peripheral Clock/SIM_CLKDIV3" ref="system_peripheral_postdivider_clock[%(n)]" enum="PeripheralClk"   code="getDividedPeripheralClock()" condition="sim_clkdiv3_pllflldiv_present"  isDefault="true" />
               <choice value="1"  name="Peripheral Clock"             ref="system_peripheral_clock[%(n)]"             enum="PeripheralClk"   code="getPeripheralClock()"        condition="!sim_clkdiv3_pllflldiv_present" isDefault="true"  />
               <choice value="2"  name="OSCERCLK clock"               ref="/OSC0/oscer_clock"                         enum="OscerClk"        code="Osc0Info::getOscerClock()"   />
               <choice value="3"  name="MCGIRCLK clock"               ref="/MCG/system_mcgirclk_clock[%(n)]"          enum="McgIrClk"        code="McgInfo::getMcgIrClock()"    />
            </choiceOption>

            <intOption key="system_lpuart_clock[%(n)]" condition="sim_sopt2_lpuartsrc_present"
               addToVar="LpuartExternalItems"
               max="LPUART_max[/SMC/smc_pmctrl_runm[%(n)]]"
               derived="true"
               locked="true"
               units="Hz"
               description="LPUART Clock frequency"
               toolTip="Frequency of clock to LPUART"
               value="0"/>

            <choiceOption key="sim_sopt2_flexiosrc[%(n)]" condition="sim_sopt2_flexiosrc_present"
               addToVar="Flexio%(n)ExternalItems"
               typeName="SimFlexioClockSource"
               target="system_flexio_clock[%(n)]"
               description="FLEXIO Clock source"
               toolTip="Selects the clock source for the Flexio" >
               <choice value="0"  name="System core clock"            ref="system_core_clock[%(n)]"                   enum="SystemCoreClk"   code="SystemCoreClock"             />
               <choice value="1"  name="Peripheral Clock/SIM_CLKDIV3" ref="system_peripheral_postdivider_clock[%(n)]" enum="PeripheralClk"   code="getDividedPeripheralClock()" />
               <choice value="2"  name="OSCERCLK clock"               ref="/OSC0/oscer_clock"                         enum="OscerClk"        code="Osc0Info::getOscerClock()"   />
               <choice value="3"  name="MCGIRCLK clock"               ref="/MCG/system_mcgirclk_clock[%(n)]"          enum="McgIrClk"        code="McgInfo::getMcgIrClock()"    />
            </choiceOption>

            <intOption key="system_flexio_clock[%(n)]" condition="sim_sopt2_flexiosrc_present"
               addToVar="Flexio%(n)ExternalItems"
               derived="true"
               locked="true"
               units="Hz"
               description="FLEXIO Clock frequency"
               toolTip="Frequency of clock to FLEXIO"
               value="0"
               max="120MHz" />

            <choiceOption key="sim_sopt2_tpmsrc[%(n)]" condition="sim_sopt2_tpmsrc_present"
               addToVar="Tpm%(n)ExternalItems"
               typeName="SimTpmClockSource"
               target="system_tpm_clock[%(n)]"
               description="TPM Clock source"
               toolTip="Clock source for the TPM counter clock" >
               <choice value="0"  name="Disabled"                     ref="disabled"                                  enum="Disabled"        code="0"                           />
               <choice value="1"  name="Peripheral Clock/SIM_CLKDIV3" ref="system_peripheral_postdivider_clock[%(n)]" enum="PeripheralClk"   code="getDividedPeripheralClock()" isDefault="true" />
               <choice value="2"  name="OSCERCLK clock"               ref="/OSC0/oscer_clock"                         enum="OscerClk"        code="Osc0Info::getOscerClock()"   />
               <choice value="3"  name="MCGIRCLK clock"               ref="/MCG/system_mcgirclk_clock[%(n)]"          enum="McgIrClk"        code="McgInfo::getMcgIrClock()"    />
            </choiceOption>

            <intOption key="system_tpm_clock[%(n)]" condition="sim_sopt2_tpmsrc_present"
               addToVar="Tpm%(n)ExternalItems"
               max="TPM_max[/SMC/smc_pmctrl_runm[%(n)]]"
               derived="true"
               locked="true"
               units="Hz"
               description="TPM Clock frequency"
               toolTip="Frequency of clock to TPM" />

            <aliasOption key="system_time_clockin" locked="false" optional="true" />

            <choiceOption key="sim_sopt2_timesrc[%(n)]"  condition="sim_sopt2_timesrc_present"
               addToVar="IeeeExternalItems"
               target="system_time_clock[%(n)]"
               typeName="SimTimeStampClkSrc"
               description="IEEE 1588 timestamp clock source select"
               toolTip="Selects the clock source for the Ethernet RMII interface" >
               <choice value="0"  name="Core/system clock"           ref="system_core_clock[0]"       enum="CoreClk"         code="SystemCoreClock"           isDefault="true" />
               <choice value="1"  name="Peripheral Clock"            ref="system_peripheral_clock[0]" enum="PeripheralClk"   code="getPeripheralClock()"      />
               <choice value="2"  name="OSCERCLK clock"              ref="/OSC0/oscer_clock"          enum="OscerClk"        code="Osc0Info::getOscerClock()" />
               <choice value="3"  name="External clock (ENET_CLKIN)" ref="system_time_clockin"        enum="External"        code="sdhcExternalClock"         />
            </choiceOption>

            <intOption key="system_time_clock[%(n)]" condition="sim_sopt2_timesrc_present"
               addToVar="IeeeExternalItems"
               locked="true"
               derived="true"
               units="Hz"
               description="SDHC Clock frequency (not implemented)"
               toolTip="Frequency of clock to SDHC"
               value="0" max="120MHz" />

            <aliasOption key="system_sdhc_clockin" locked="false" optional="true" />

            <choiceOption key="sim_sopt2_sdhcsrc[%(n)]" condition="sim_sopt2_sdhcsrc_present"
               addToVar="SdhcExternalItems"
               target="system_sdhc_clock[%(n)]"
               typeName="SimSdhcClockSource"
               description="SDHC Clock select"
               toolTip="Selects the clock source for the SDHC clock" >
               <choice value="0"  name="Core/system clock"            ref="system_core_clock[%(n)]"       enum="CoreClk"         code="SystemCoreClock"          isDefault="true" />
               <choice value="1"  name="Peripheral Clock"             ref="system_peripheral_clock[%(n)]" enum="PeripheralClk"   code="getPeripheralClock()" />
               <choice value="2"  name="OSCERCLK clock"               ref="/OSC0/oscer_clock"             enum="OscerClk"        code="Osc0Info::getOscerClock()" />
               <choice value="3"  name="External clock (SDHC0_CLKIN)" ref="system_sdhc_clockin"           enum="External"        code="sdhcExternalClock" />
            </choiceOption>

            <intOption key="system_sdhc_clock[%(n)]" condition="sim_sopt2_sdhcsrc_present"
               addToVar="SdhcExternalItems"
               locked="true"
               derived="true"
               units="Hz"
               description="SDHC Clock frequency (not implemented)"
               toolTip="Frequency of clock to SDHC"
               value="0" max="120MHz" />

            <choiceOption key="sim_sopt2_emvsimsrc[%(n)]"  condition="sim_sopt2_emvsimsrc_present"
               addToVar="EmvsimExternalItems"
               typeName="SimEmvsimClockSource"
               target="system_emvsim_clock[%(n)]"
               description="EMVSIM Clock source"
               toolTip="Selects the clock source for the EMVSIM" >
               <choice value="0"  name="Disabled"                     ref="disabled"                                  enum="Disabled"        code="0"                           />
               <choice value="1"  name="Peripheral Clock/SIM_CLKDIV3" ref="system_peripheral_postdivider_clock[%(n)]" enum="PeripheralClk"   code="getDividedPeripheralClock()" />
               <choice value="2"  name="OSCERCLK clock"               ref="/OSC0/oscer_clock"                         enum="OscerClk"        code="Osc0Info::getOscerClock()"   />
               <choice value="3"  name="MCGIRCLK clock"               ref="/MCG/system_mcgirclk_clock[%(n)]"          enum="McgIrClk"        code="McgInfo::getMcgIrClock()"    />
            </choiceOption>

            <intOption key="system_emvsim_clock[%(n)]" condition="sim_sopt2_emvsimsrc_present"
               addToVar="EmvsimExternalItems"
               derived="true"
               locked="true"
               units="Hz"
               description="EMV Clock frequency"
               toolTip="Frequency of clock to EMV"
               value="0" />

         </category>

         <aliasOption key="/MCG/system_mcgoutclk_clock[%(n)]" />

         <intOption key="system_core_clock[%(n)]" condition="sim_clkdiv1_outdiv1_present"
            ref="(/MCG/system_mcgoutclk_clock[%(n)])/((sim_clkdiv1_outdiv1[%(n)])+1)"
            enabledBy="(%(n)==0)||/MCG/enableClockConfiguration[%(n)]"
            derived="true"
            isNamedClock="true"
            units="Hz"
            description="System Core Clock"
            toolTip="Clocks the ARM Cortex-M4 core and bus masters"
            value="120_MHz"
            disabledValue="0" />

         <intOption key="system_bus_clock[%(n)]" condition="sim_clkdiv1_outdiv2_present"
            enabledBy="(%(n)==0)||/MCG/enableClockConfiguration[%(n)]"
            ref="(/MCG/system_mcgoutclk_clock[%(n)])/((sim_clkdiv1_outdiv2[%(n)])+1)"
            derived="true"
            isNamedClock="true"
            units="Hz"
            description="System Bus Clock"
            toolTip="Clocks the bus slaves and peripherals\n
                     - Must be &lt;= Core Clock frequency and an integer divisor"
            value="60_MHz"
            disabledValue="0" />

         <intOption key="system_flexbus_clock[%(n)]" condition="sim_clkdiv1_outdiv3_present"
            enabledBy="(%(n)==0)||/MCG/enableClockConfiguration[%(n)]"
            ref="(/MCG/system_mcgoutclk_clock[%(n)])/((sim_clkdiv1_outdiv3[%(n)])+1)"
            derived="true"
            isNamedClock="true"
            units="Hz"
            description="System Flexbus Clock"
            toolTip="Clocks the flexbus interface\n
                     - Must be &lt;= Bus Clock frequency"
            value="60_MHz"
            disabledValue="0" />

         <intOption key="system_flash_clock[%(n)]" condition="sim_clkdiv1_outdiv4_present"
            enabledBy="(%(n)==0)||/MCG/enableClockConfiguration[%(n)]"
            ref="(/MCG/system_mcgoutclk_clock[%(n)])/((sim_clkdiv1_outdiv4[%(n)])+1)"
            derived="true"
            isNamedClock="true"
            units="Hz"
            description="System Flash Clock"
            toolTip="Clocks the flash memory\n
                     - Must be an integer divisor of the Core Clock.\n
                     - Must be &lt;= Bus Clock frequency[%(n)]\n
                     - Must be &gt;= Core clock / 8"
            value="25_MHz"
            disabledValue="0" />

   <!-- _____________ CLKDIV1 __________________ -->

         <category name="CLKDIV1" description="System Clock Dividers" >
            <choiceOption key="sim_clkdiv1_outdiv1[%(n)]"  condition="sim_clkdiv1_outdiv1_present"
               enabledBy="(%(n)==0)||/MCG/enableClockConfiguration[%(n)]"
               typeName="SimCoreClkDivider"
               locked="true"
               description="Core &amp; System Clock Divider (OUTDIV1) - Divide by [1-16]"
               toolTip="Clocks the ARM Cortex-M4 core and bus masters\n
                        Divides MCGOUTCLK Clock to generate system_core_clock." >
               <choice value="0"   name="/1"  enum="Direct" />
               <choice value="1"   name="/2"  enum="DivBy2" isDefault="true" />
               <choice value="2"   name="/3"  enum="DivBy3"/>
               <choice value="3"   name="/4"  enum="DivBy4"/>
               <choice value="4"   name="/5"  enum="DivBy5"/>
               <choice value="5"   name="/6"  enum="DivBy6"/>
               <choice value="6"   name="/7"  enum="DivBy7"/>
               <choice value="7"   name="/8"  enum="DivBy8"/>
               <choice value="8"   name="/9"  enum="DivBy9"/>
               <choice value="9"   name="/10" enum="DivBy10"/>
               <choice value="10"  name="/11" enum="DivBy11"/>
               <choice value="11"  name="/12" enum="DivBy12"/>
               <choice value="12"  name="/13" enum="DivBy13"/>
               <choice value="13"  name="/14" enum="DivBy14"/>
               <choice value="14"  name="/15" enum="DivBy15"/>
               <choice value="15"  name="/16" enum="DivBy16"/>
            </choiceOption>

            <choiceOption key="sim_clkdiv1_outdiv2[%(n)]"  condition="sim_clkdiv1_outdiv2_present"
               enabledBy="(%(n)==0)||/MCG/enableClockConfiguration[%(n)]"
               locked="true"
               derivedFrom="sim_clkdiv1_outdiv1[%(n)]"
               typeName="SimBusClkDivider"
               description="Bus Clock Divider (OUTDIV2) - Divide by [1-16]"
               toolTip="Clocks the bus slaves and peripheral.\n
                        Divides MCGOUTCLK Clock to generate system_bus_clock."/>

            <choiceOption key="sim_clkdiv1_outdiv3[%(n)]" condition="sim_clkdiv1_outdiv3_present"
               enabledBy="(%(n)==0)||/MCG/enableClockConfiguration[%(n)]"
               locked="true"
               derivedFrom="sim_clkdiv1_outdiv1[%(n)]"
               typeName="SimFlexbusClkDivider"
               description="Flexbus Clock Divider (OUTDIV3) - Divide by [1-16]"
               toolTip="Clocks the flexbus interface.\n
                        Divides MCGOUTCLK Clock to generate system_flexbus_clock."/>

            <choiceOption key="sim_clkdiv1_outdiv4[%(n)]"  condition="sim_clkdiv1_outdiv4_present"
               enabledBy="(%(n)==0)||/MCG/enableClockConfiguration[%(n)]"
               locked="true"
               derivedFrom="sim_clkdiv1_outdiv1[%(n)]"
               typeName="SimFlashClkDivider"
               description="Flash Clock Divider (OUTDIV4) - Divide by [1-16]"
               toolTip="Clocks the flash memory.\n
                        Divides MCGOUTCLK Clock to generate system_flash_clock." />
         </category>
      </aliasCategoryOption>
   </for>

<!-- Graphic here -->

   <xi:include href="sim_commonTemplates.xml" />

   <template codeGenCondition="/MCG/enablePeripheralSupport" ><![CDATA[
      \t/**
      \t * Update system clock values
      \t *
      \t * @param systemClock Frequency of clock provided to system clock dividers
      \t */
      \tstatic void updateSystemClocks(unsigned systemClock) {
      \t
      \t   SystemCoreClock    = systemClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV1_MASK)>>SIM_CLKDIV1_OUTDIV1_SHIFT)+1);
      \t   SystemBusClock     = systemClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV2_MASK)>>SIM_CLKDIV1_OUTDIV2_SHIFT)+1);
      \t#ifdef SIM_CLKDIV1_OUTDIV3_MASK
      \t   SystemFlexbusClock = systemClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV3_MASK)>>SIM_CLKDIV1_OUTDIV3_SHIFT)+1);
      \t#endif
      \t#ifdef SIM_CLKDIV1_OUTDIV4_MASK
      \t//   SystemFlashClock = systemClock/(((SIM->CLKDIV1&SIM_CLKDIV1_OUTDIV4_MASK)>>SIM_CLKDIV1_OUTDIV4_SHIFT)+1);
      \t#endif
      \t}\n\n
   ]]></template>

   <variableTemplate variables="sim_clkdiv1_outdiv1[0],sim_clkdiv1_outdiv2[0],sim_clkdiv1_outdiv3[0],sim_clkdiv1_outdiv4[0]" ><![CDATA[
      \t/** Reset clock divider value if clock not fully configured */
      \tstatic constexpr uint32_t sim_clkdiv1 = %initExpression;
      \t\n
   ]]></variableTemplate>

   <!-- _____________ Common __________________ -->

   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.SimValidate" dim="=numberOfClockSettings" >
      <param type="long" value="120MHz" />     <!-- RUN Core          -->
      <param type="long" value="60MHz"  />     <!-- RUN Bus           -->
      <param type="long" value="60MHz"  />     <!-- RUN FlexBus       -->
      <param type="long" value="28MHz"  />     <!-- RUN Flash         -->

      <param type="long" value="4MHz"   />     <!-- VLPR Core         -->
      <param type="long" value="4MHz"   />     <!-- VLPR Bus          -->
      <param type="long" value="4MHz"   />     <!-- VLPR FlexBus      -->
      <param type="long" value="800kHz" />     <!-- VLPR Flash        -->

      <param type="long" value="180MHz" />     <!-- HSRUN Core          -->
      <param type="long" value="60MHz"  />     <!-- HSRUN Bus           -->
      <param type="long" value="60MHz"  />     <!-- HSRUN FlexBus       -->
      <param type="long" value="28MHz"  />     <!-- HSRUN Flash         -->
   </validate>

   <!-- _____________ Startup __________________ -->

   <template key="/SYSTEM/Includes" condition="configurePeripheralInStartUp" codeGenCondition="configurePeripheralInStartUp" >
      <![CDATA[#include "$(_basename).h"\n
   ]]></template>

   <template key="/SYSTEM/StartupEarly" condition="configurePeripheralInStartUp" codeGenCondition="configurePeripheralInStartUp" >
   <![CDATA[
      \t/*  Initialise $(_Class) */
      \tUSBDM::$(_Class)::defaultConfigure();\n
   ]]></template>

   <xi:include href="simFiles-MK.xml"/>

</peripheralPage>
