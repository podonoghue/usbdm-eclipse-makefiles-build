<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE peripheralPage SYSTEM "_menu.dtd" >
<!-- port_mke06.xml -->

<peripheralPage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="Port control" >

   <constant key="peripheralUsesInterrupts" type="Boolean" value="false"         />
   <constant key="isGeneratedByDefault"     type="Boolean" value="false"         />
   <constant key="isSupportedinStartup"     type="Boolean" value="true"          />
   <xi:include href="_enablePeripheral.xml" />
   <title description="------------------------------------------" />

   <!-- ************* IOFLT0 and IOFLT1 ****************** -->
   <category name="Filters" description="Filters for pins" >

      <choiceOption key="port_ioflt0_fltdiv1" condition="port_ioflt0_fltdiv1_present"
         enumStem="PortFilterClock1"
         description="Filter Division Set 1"
         toolTip="Selects the clock speed for the filter" >
         <choice name="BUSCLK/2"    value="0" enum="Busclk2"/>
         <choice name="BUSCLK/4"    value="1" enum="Busclk4"/>
         <choice name="BUSCLK/8"    value="2" enum="Busclk8"/>
         <choice name="BUSCLK/16"   value="3" enum="Busclk16"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltdiv2" condition="port_ioflt0_fltdiv2_present"
         enumStem="PortFilterClock2"
         description="Filter Division Set 2"
         toolTip="Selects the clock speed for the filter" >
         <choice name="BUSCLK/32"    value="0" enum="Busclk32"/>
         <choice name="BUSCLK/64"    value="1" enum="Busclk64"/>
         <choice name="BUSCLK/128"   value="2" enum="Busclk128"/>
         <choice name="BUSCLK/256"   value="3" enum="Busclk256"/>
         <choice name="BUSCLK/512"   value="4" enum="Busclk512"/>
         <choice name="BUSCLK/1024"  value="5" enum="Busclk1024"/>
         <choice name="BUSCLK/2048"  value="6" enum="Busclk2048"/>
         <choice name="BUSCLK/4096"  value="7" enum="Busclk4096"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltdiv3" condition="port_ioflt0_fltdiv3_present"
         enumStem="PortFilterClock3"
         description="Filter Division Set 3"
         toolTip="Selects the clock speed for the filter" >
         <choice name="LPOCLK"      value="0" enum="Lpoclk"/>
         <choice name="LPOCLK/2"    value="1" enum="Lpoclk2"/>
         <choice name="LPOCLK/4"    value="2" enum="Lpoclk4"/>
         <choice name="LPOCLK/8"    value="3" enum="Lpoclk8"/>
         <choice name="LPOCLK/16"   value="4" enum="Lpoclk16"/>
         <choice name="LPOCLK/32"   value="5" enum="Lpoclk32"/>
         <choice name="LPOCLK/64"   value="6" enum="Lpoclk64"/>
         <choice name="LPOCLK/128"  value="7" enum="Lpoclk128"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltnmi" condition="port_ioflt0_fltnmi_present"
         enumStem="PortNmiFilterSel"
         description="Filter Selection for Input from NMI" >
         <choice name="No filter"                                                               value="0" enum="NoFilter"/>
         <choice name="Selects FLTDIV1, and will switch to FLTDIV3 in Stop mode automatically"  value="1" enum="SelectsFltdiv1_AndWillSwitchToFltdiv3InStopModeAutomatically"/>
         <choice name="Selects FLTDIV2, and will switch to FLTDIV3 in Stop mode automatically"  value="2" enum="SelectsFltdiv2_AndWillSwitchToFltdiv3InStopModeAutomatically"/>
         <choice name="FLTDIV3"                                                                 value="3" enum="Fltdiv3" isDefault="true" />
      </choiceOption >

      <choiceOption key="port_ioflt1_fltirq" condition="port_ioflt1_fltirq_present"
         enumStem="PortIrqFilterSel"
         description="Filter Selection for Input from IRQ" >
         <choice name="No Filter"                                            value="0" enum="NoFilter"/>
         <choice name="Selects FLTDIV1, (switches to FLTDIV3 in Stop mode)"  value="1" enum="SelectsFltdiv1_SwitchesToFltdiv3InStopMode"/>
         <choice name="Selects FLTDIV2, (switches to FLTDIV3 in Stop mode)"  value="2" enum="SelectsFltdiv2_SwitchesToFltdiv3InStopMode"/>
         <choice name="FLTDIV3"                                              value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltrst" condition="port_ioflt0_fltrst_present"
         enumStem="PortResetFilterSel"
         description="Filter Selection for Input from RESET" >
         <choice name="No filter"                                                               value="0" enum="NoFilter"/>
         <choice name="Selects FLTDIV1, and will switch to FLTDIV3 in Stop mode automatically"  value="1" enum="SelectsFltdiv1_AndWillSwitchToFltdiv3InStopModeAutomatically"/>
         <choice name="Selects FLTDIV2, and will switch to FLTDIV3 in Stop mode automatically"  value="2" enum="SelectsFltdiv2_AndWillSwitchToFltdiv3InStopModeAutomatically"/>
         <choice name="FLTDIV3"                                                                 value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltkbi0" condition="port_ioflt0_fltkbi0_present"
         enumStem="PortKbi0FilterSel"
         description="Filter Selection for Input from KBI0" >
         <choice name="No filter"                                                               value="0" enum="NoFilter"/>
         <choice name="Selects FLTDIV1, and will switch to FLTDIV3 in Stop mode automatically"  value="1" enum="SelectsFltdiv1_AndWillSwitchToFltdiv3InStopModeAutomatically"/>
         <choice name="Selects FLTDIV2, and will switch to FLTDIV3 in Stop mode automatically"  value="2" enum="SelectsFltdiv2_AndWillSwitchToFltdiv3InStopModeAutomatically"/>
         <choice name="FLTDIV3"                                                                 value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltkbi1" condition="port_ioflt0_fltkbi1_present"
         enumStem="PortKbi1FilterSel"
         description="Filter Selection for Input from KBI1" >
         <choice name="No filter"                                                               value="0" enum="NoFilter"/>
         <choice name="Selects FLTDIV1, and will switch to FLTDIV3 in Stop mode automatically"  value="1" enum="SelectsFltdiv1_AndWillSwitchToFltdiv3InStopModeAutomatically"/>
         <choice name="Selects FLTDIV2, and will switch to FLTDIV3 in Stop mode automatically"  value="2" enum="SelectsFltdiv2_AndWillSwitchToFltdiv3InStopModeAutomatically"/>
         <choice name="FLTDIV3"                                                                 value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt1_flti2c0" condition="port_ioflt1_flti2c0_present"
         enumStem="PortI2c0FilterSel"
         description="Filter Selection for Input from SCL0/SDA0" >
         <choice name="No Filter"   value="0" enum="NoFilter"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt1_flti2c1" condition="port_ioflt1_flti2c1_present"
         enumStem="PortI2c1FilterSel"
         description="Filter Selection for Input from SCL1/SDA1" >
         <choice name="No Filter"   value="0" enum="NoFilter"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt1_fltpwt" condition="port_ioflt1_fltpwt_present"
         enumStem="PortPwtFilterSel"
         description="Filter Selection for Input from PWT_IN0/PWT_IN1" >
         <choice name="No Filter"   value="0" enum="NoFilter"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt1_fltftm0" condition="port_ioflt1_fltftm0_present"
         enumStem="PortFtm0FilterSel"
         description="Filter Selection for Input from FTM0 Channels" >
         <choice name="No Filter"   value="0" enum="NoFilter"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt1_fltftm1" condition="port_ioflt1_fltftm1_present"
         enumStem="PortFtm1FilterSel"
         description="Filter Selection for Input from FTM1 Channels" >
         <choice name="No Filter"   value="0" enum="NoFilter"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_flta" condition="port_ioflt0_flta_present"
         enumStem="PortPtaFilterSel"
         description="Filter Selection for Input from PTA" >
         <choice name="BUSCLK"      value="0" enum="Busclk"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltb" condition="port_ioflt0_fltb_present"
         enumStem="PortPtbFilterSel"
         description="Filter Selection for Input from PTB" >
         <choice name="BUSCLK"      value="0" enum="Busclk"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltc" condition="port_ioflt0_fltc_present"
         enumStem="PortPtcFilterSel"
         description="Filter Selection for Input from PTC" >
         <choice name="BUSCLK"      value="0" enum="Busclk"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltd" condition="port_ioflt0_fltd_present"
         enumStem="PortPtdFilterSel"
         description="Filter Selection for Input from PTD" >
         <choice name="BUSCLK"      value="0" enum="Busclk"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_flte" condition="port_ioflt0_flte_present"
         enumStem="PortPteFilterSel"
         description="Filter Selection for Input from PTE" >
         <choice name="BUSCLK"      value="0" enum="Busclk"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltf" condition="port_ioflt0_fltf_present"
         enumStem="PortPtfFilterSel"
         description="Filter Selection for Input from PTF" >
         <choice name="BUSCLK"      value="0" enum="Busclk"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_fltg" condition="port_ioflt0_fltg_present"
         enumStem="PortPtgFilterSel"
         description="Filter Selection for Input from PTG" >
         <choice name="BUSCLK"      value="0" enum="Busclk"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt0_flth" condition="port_ioflt0_flth_present"
         enumStem="PortPthFilterSel"
         description="Filter Selection for Input from PTH" >
         <choice name="BUSCLK"      value="0" enum="Busclk"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >

      <choiceOption key="port_ioflt1_flti" condition="port_ioflt1_flti_present"
         enumStem="PortPtiFilterSel"
         description="Filter Selection for Input from PTI" >
         <choice name="BUSCLK"      value="0" enum="Busclk"/>
         <choice name="FLTDIV1"     value="1" enum="Fltdiv1"/>
         <choice name="FLTDIV2"     value="2" enum="Fltdiv2"/>
         <choice name="FLTDIV3"     value="3" enum="Fltdiv3"/>
      </choiceOption >
   </category>

   <!-- ************* PUE0, PUE1 and PUE2  ****************** -->

   <category name="Pullups" description="Pull-up enables for Port pins" >
      <for keys=   "r:P:p:v"
           values= "0:A:a:0b00000000;
                    0:B:b:0b00000000;
                    0:C:c:0b00010000;
                    0:D:d:0b00000000;
                    1:E:e:0b00000000;
                    1:F:f:0b00000000;
                    1:G:g:0b00000000;
                    1:H:h:0b00000000;
                    2:I:i:0b00000000"
         >
         <bitmaskOption key="port_pue%(r)_pt%(p)pe"  condition="port_pue%(r)_pt%(p)pe_present"
            description="Pull-up control for Port %(P)"
            toolTip="Each bit controls the pull-up for the corresponding pin"
            value="%(v)"
            bitmask="0xFF" />
      </for>
   </category>

   <!-- ************* HDRVE ****************** -->

   <category name="High Drive" description="High-drive enables for Port pins" >
      <for keys="P:p:n" values="B:b:4;B:b:5;D:d:0;D:d:1;E:e:0;E:e:1;H:h:0;H:h:1">
         <binaryOption key="port_hdrve_pt%(p)%(n)" condition="port_hdrve_pt%(p)%(n)_present"
            enumStem="PortHdrvePt%(p)%(n)"
            description="High drive enable for Port %(P) bit %(n)" >
            <choice name="Low drive strength"   value="0" enum="LowDriveStrength"/>
            <choice name="High drive strength"  value="1" enum="HighDriveStrength"/>
         </binaryOption >
      </for>
   </category>

<!-- Graphic here -->

   <for keys="field:name"
        values="
      port_ioflt0_fltdiv3:Filter3Clock;
      port_ioflt0_fltdiv2:Filter2Clock;
      port_ioflt0_fltdiv1:Filter1Clock;
      port_ioflt0_fltnmi:NmiFilter;
      port_ioflt0_fltkbi1:Kbi1Filter;
      port_ioflt0_fltkbi0:Kbi0Filter;
      port_ioflt0_fltrst:ResetFilter;
      port_ioflt0_flth:PthFilter;
      port_ioflt0_fltg:PtgFilter;
      port_ioflt0_fltf:PtfFilter;
      port_ioflt0_flte:PteFilter;
      port_ioflt0_fltd:PtdFilter;
      port_ioflt0_fltc:PtcFilter;
      port_ioflt0_fltb:PtbFilter;
      port_ioflt0_flta:PtaFilter;
      port_ioflt1_flti2c1:I2c1Filter;
      port_ioflt1_flti2c0:I2c0Filter;
      port_ioflt1_fltpwt:PwtFilter;
      port_ioflt1_fltftm1:Ftm1Filter;
      port_ioflt1_fltftm0:Ftm0Filter;
      port_ioflt1_fltirq:IrqFilter;
      port_ioflt1_flti:PtiFilter" >
      <setTemplate variables="%(field)" codeGenCondition="enablePeripheralSupport"
      ><![CDATA[
         \t/**
         \t * Set %description
         \t *
         %paramDescription
         \t */
         \tstatic void configure%(name)(%params) {
         \t   %defaultFieldExpression
         \t}\n\n
      ]]></setTemplate>
   </for>

<!--   ========== PORT Init class =============================== -->

   <template key="init_description" namespace="all" codeGenCondition="enablePeripheralSupport" >
   <![CDATA[
      \t/**
      \t * Class used to do initialisation of the $(_Class)
      \t *
      \t * This class has a templated constructor that accepts various values.
      \t *
      \t * @note This constructor may be used to create a const instance in Flash
      \t *
      \t * Example:
      \t * @code
      \t * static const $(_Class)::Init init {
      \t *
      \t *   // Setup values
      \t *   PortFilterClock1_Busclk2 ,     // Filter Division Set 1 - BUSCLK/2
      \t *   PortFilterClock2_Busclk32 ,    // Filter Division Set 2 - BUSCLK/32
      \t *   PortFilterClock3_Lpoclk ,      // Filter Division Set 3 - LPOCLK
      \t *   PortResetFilterSel_NoFilter ,  // Filter Selection for Input from RESET - No filter
      \t *   PortNmiFilterSel_Fltdiv3 ,     // Filter Selection for Input from NMI - FLTDIV3
      \t *   PortIrqFilterSel_NoFilter ,    // Filter Selection for Input from IRQ - No Filter
      \t *   PortKbi0FilterSel_NoFilter ,   // Filter Selection for Input from KBI0 - No filter
      \t *   PortKbi1FilterSel_NoFilter ,   // Filter Selection for Input from KBI1 - No filter
      \t *   PortI2c0FilterSel_NoFilter ,   // Filter Selection for Input from SCL0/SDA0 - No Filter
      \t *   PortI2c1FilterSel_NoFilter ,   // Filter Selection for Input from SCL1/SDA1 - No Filter
      \t *   PortPwtFilterSel_NoFilter ,    // Filter Selection for Input from PWT_IN0/PWT_IN1 - No Filter
      \t *   PortFtm0FilterSel_NoFilter ,   // Filter Selection for Input from FTM0 Channels - No Filter
      \t *   PortFtm1FilterSel_NoFilter ,   // Filter Selection for Input from FTM1 Channels - No Filter
      \t *   PortPtaFilterSel_Busclk ,      // Filter Selection for Input from PTA - BUSCLK
      \t *   PortPtbFilterSel_Busclk ,      // Filter Selection for Input from PTB - BUSCLK
      \t *   PortPtcFilterSel_Busclk ,      // Filter Selection for Input from PTC - BUSCLK
      \t *   PortPtdFilterSel_Busclk ,      // Filter Selection for Input from PTD - BUSCLK
      \t *   PortPteFilterSel_Busclk ,      // Filter Selection for Input from PTE - BUSCLK
      \t *   PortPtfFilterSel_Busclk ,      // Filter Selection for Input from PTF - BUSCLK
      \t *   PortPtgFilterSel_Busclk ,      // Filter Selection for Input from PTG - BUSCLK
      \t *   PortPthFilterSel_Busclk ,      // Filter Selection for Input from PTH - BUSCLK
      \t *   PortPtiFilterSel_Busclk,       // Filter Selection for Input from PTI - BUSCLK
      \t * };
      \t *
      \t * // Initialise $(_Class) from values specified above
      \t * $(_Class)::configure(init)
      \t * @endcode
      \t */
   ]]>
   </template>

   <template namespace="usbdm" codeGenCondition="enablePeripheralSupport" >
   <![CDATA[
      class $(_Class)BasicInfo {
      \t
      public:\n
   ]]>
   </template>

   <template namespace="usbdm" codeGenCondition="enablePeripheralSupport" >
   <![CDATA[
      $(init_description)
      \tclass Init {
      \t
      \tpublic:
      \t   /**
      \t    * Copy Constructor
      \t    */
      \t   constexpr Init(const Init &other) = default;
      \t
      \t   /**
      \t    * Default Constructor
      \t    */
      \t   constexpr Init() = default;
      \t\n
   ]]>
   </template>

<!--   Member variables -->

   <initialValueTemplate namespace="usbdm" codeGenCondition="enablePeripheralSupport"
      variables="port_ioflt0_fltdiv3,port_ioflt0_fltdiv2,port_ioflt0_fltdiv1,port_ioflt0_fltnmi,port_ioflt0_fltkbi1,port_ioflt0_fltkbi0,port_ioflt0_fltrst,port_ioflt0_flth,port_ioflt0_fltg,port_ioflt0_fltf,port_ioflt0_flte,port_ioflt0_fltd,port_ioflt0_fltc,port_ioflt0_fltb,port_ioflt0_flta"
   ><![CDATA[
      \t   /// Port Filter Register 0
      \t   uint32_t %registerName = 0;\n\n
   ]]></initialValueTemplate>

   <initialValueTemplate namespace="usbdm" codeGenCondition="enablePeripheralSupport"
      variables="port_ioflt1_flti2c1,port_ioflt1_flti2c0,port_ioflt1_fltpwt,port_ioflt1_fltftm1,port_ioflt1_fltftm0,port_ioflt1_fltirq,port_ioflt1_flti"
   ><![CDATA[
      \t   /// Port Filter Register 1
      \t   uint32_t %registerName = 0;\n\n
   ]]></initialValueTemplate>

<!--   Configure methods -->

   <template key="/$(_BASENAME)/InitMethod" namespace="all" discardRepeats="true"
      codeGenCondition="enablePeripheralSupport" ><![CDATA[
      \t/* template /$(_BASENAME)/InitMethod */
      \t/**
      \t * Configure with default settings.
      \t * Configuration determined from Configure.usbdmProject
      \t */
      \tstatic inline void defaultConfigure() {
      \t
      \t   // Update settings
      \t   configure(Info::DefaultInitValue);
      \t
      \t   port->PUE0     = Info::pue0;
      \t   port->PUE1     = Info::pue1;
      \t   port->PUE2     = Info::pue2;
      \t   port->HDRVE    = Info::hdrve;
      \t}
      \t\n
   ]]></template>

   <template key="/$(_BASENAME)/InitMethod" namespace="all" discardRepeats="true"
      codeGenCondition="enablePeripheralSupport" ><![CDATA[
      \t/**
      \t * Configure $(_BASENAME) from values specified in init
      \t *
      \t * @param init Class containing initialisation values
      \t */
      \tstatic void configure(const typename Info::Init &init) {
      \t\n
   ]]></template>
   <template key="/$(_BASENAME)/InitMethod" namespace="all" discardRepeats="true"
             condition="irqHandlingMethod"
             codeGenCondition="irqHandlingMethod" ><![CDATA[
      \t   setCallback(init.callbackFunction);
      \t   enableNvicInterrupts(init.irqlevel);
      \t\n
   ]]></template>

   <template discardRepeats="true" key="/$(_BASENAME)/InitMethod" namespace="all"
             codeGenCondition="enablePeripheralSupport" ><![CDATA[
      \t   // Initialise remaining registers
      \t   port->IOFLT0    = init.ioflt0;
      \t   port->IOFLT1    = init.ioflt1;
      \t}
      \t\n
   ]]></template>

<!--   Constructors -->

   <for keys="r"
      values="
            port_ioflt0_fltdiv3;
            port_ioflt0_fltdiv2;
            port_ioflt0_fltdiv1;
            port_ioflt0_fltnmi;
            port_ioflt0_fltkbi1;
            port_ioflt0_fltkbi0;
            port_ioflt0_fltrst;
            port_ioflt0_flth;
            port_ioflt0_fltg;
            port_ioflt0_fltf;
            port_ioflt0_flte;
            port_ioflt0_fltd;
            port_ioflt0_fltc;
            port_ioflt0_fltb;
            port_ioflt0_flta;
            port_ioflt1_flti2c1;
            port_ioflt1_flti2c0;
            port_ioflt1_fltpwt;
            port_ioflt1_fltftm1;
            port_ioflt1_fltftm0;
            port_ioflt1_fltirq;
            port_ioflt1_flti
            " >
      <setTemplate namespace="usbdm" codeGenCondition="enablePeripheralSupport"
         variables="%(r)"
         linePadding="xxx" >
      <![CDATA[
         \t   /**
         \t    * Constructor for %description
         \t    *
         \t    * @tparam   Types
         \t    * @param    rest
         \t    *
         %comments
         \t    */
         \t   template <typename... Types>
         \t   constexpr Init(%params, Types... rest) : Init(rest...) {
         \t
         \t      %registerName = (%registerName&~%mask) | %paramExpression;
         \t   }
         \t\n
      ]]>
      </setTemplate>
   </for>

<!--   Default for PUPs and HDRIVE -->

   <for keys="r"
      values="
            port_pue0_ptdpe,port_pue0_ptcpe,port_pue0_ptbpe,port_pue0_ptape;
            port_pue1_pthpe,port_pue1_ptgpe,port_pue1_ptfpe,port_pue1_ptepe;
            port_pue2_ptipe
            " >
      <initialValueTemplate codeGenCondition="enablePeripheralSupport"
         variables="%(r)"
         linePadding="xxx"
         useDefinitions="true" >
      <![CDATA[
         \t   /** Default value for %description */
         \t   static constexpr uint32_t %registerName = %initExpression;
         \t\n
      ]]>
      </initialValueTemplate>
   </for>

   <for keys="r"
      values="
            port_hdrve_pth1,port_hdrve_pth0,port_hdrve_pte1,port_hdrve_pte0,
            port_hdrve_ptd1,port_hdrve_ptd0,port_hdrve_ptb5,port_hdrve_ptb4
            " >
      <initialValueTemplate codeGenCondition="enablePeripheralSupport"
         variables="%(r)"
         linePadding="xxx" >
      <![CDATA[
         \t   /** Default value for %description */
         \t   static constexpr uint32_t %registerName = %initExpression;
         \t\n
      ]]>
      </initialValueTemplate>
   </for>

<!--   Default Initialisation value -->

   <initialValueTemplate codeGenCondition="enablePeripheralSupport"
      separator=","
      terminator=","
      variables="
            port_ioflt0_fltdiv1,
            port_ioflt0_fltdiv2,
            port_ioflt0_fltdiv3,
            port_ioflt0_fltrst,
            port_ioflt0_fltnmi,
            port_ioflt1_fltirq,
            port_ioflt0_fltkbi0,
            port_ioflt0_fltkbi1,
            port_ioflt1_flti2c0,
            port_ioflt1_flti2c1,
            port_ioflt1_fltpwt,
            port_ioflt1_fltftm0,
            port_ioflt1_fltftm1,
            port_ioflt0_flta,
            port_ioflt0_fltb,
            port_ioflt0_fltc,
            port_ioflt0_fltd,
            port_ioflt0_flte,
            port_ioflt0_fltf,
            port_ioflt0_fltg,
            port_ioflt0_flth,
            port_ioflt1_flti
         "
   ><![CDATA[
      $(init_description)
      \ttypedef $(_Class)BasicInfo::Init Init;
      \t
      \t/**
      \t * Default initialisation value for $(_Class)
      \t * This value is created from Configure.usbdmProject settings
      \t */
      \tstatic constexpr Init DefaultInitValue = {%initExpression
      \t};\n\n
   ]]></initialValueTemplate>

   <template namespace="usbdm" codeGenCondition="enablePeripheralSupport" >
      <![CDATA[
      \t}; // $(_Class)BasicInfo::Init\n\n
   ]]>
   </template>

   <template namespace="usbdm" codeGenCondition="enablePeripheralSupport" >
      <![CDATA[
      }; // $(_Class)BasicInfo\n\n
   ]]>
   </template>

   <!-- ************* Common ****************** -->

   <template namespace="all" key="protectedMethods" codeGenCondition="enablePeripheralSupport" >
   <![CDATA[
      \t\n
      \t/**
      \t * Determines the mask for the HDRVE register given port bit number
      \t *
      \t * @param pinInd Bit number - This also indicates the actual port e.g. PTA = 0..7, PTB = 8..25 etc
      \t *
      \t * @return Mask value for use with the HDRVE register
      \t */
      \tstatic constexpr auto calculateHdriveMask(PinIndex pinInd) {
      \t   constexpr int8_t highDriveIndex[] = {
      \t      /*             0       1       2       3       4       5       6       7 */\n
   ]]>
   </template>

   <equation key="pinIndex" value="0" />

   <for keys="r:R" values="a:A;b:B;c:C;d:D;e:E;f:F;g:G;h:H;i:I" >
      <template namespace="all" key="protectedMethods" codeGenCondition="enablePeripheralSupport" >
      <![CDATA[
         \t      /* PT%(R) */
      ]]>
      </template>
      <for keys="n" dim="8" >
         <for keys="pinIndex" values="@pinIndex">
            <if condition="port_hdrve_pt%(r)%(n)">
               <template namespace="all" key="protectedMethods" codeGenCondition="enablePeripheralSupport" >
               <![CDATA[
                  \t   %(pinIndex),
               ]]>
               </template>
               <equation key="pinIndex" value="pinIndex+1" />
            <else />
               <template namespace="all" key="protectedMethods" codeGenCondition="enablePeripheralSupport" >
               <![CDATA[
                  \t  -1,
               ]]>
               </template>
            </if>
         </for>
      </for>
      <template namespace="all" key="protectedMethods" codeGenCondition="enablePeripheralSupport" >
      <![CDATA[
         \t\n
      ]]>
      </template>
   </for>
   <template namespace="all" key="protectedMethods" codeGenCondition="enablePeripheralSupport" >
   <![CDATA[
      \t\n
      \t   };
      \t   if (highDriveIndex[pinInd]<0) {
      \t      return 0;
      \t   }
      \t   return (1<<highDriveIndex[pinInd]);
      \t}
      \t
      \tstatic constexpr HardwarePtr<uint32_t> hdrve = PORT_BasePtr+offsetof(PORT_Type, HDRVE);
      \tstatic constexpr unsigned HDRIVE_MASK        = calculateHdriveMask(pinIndex);\n
   ]]>
   </template>

   <template namespace="all" key="protectedMethods" codeGenCondition="enablePeripheralSupport" >
   <![CDATA[
      \t/**
      \t * Determines the mask for the PUE[] register given port bit number
      \t *
      \t * @param pinInd Bit number - This also indicates the actual port e.g. PTA = 0..7, PTB = 8..25 etc
      \t *
      \t * @return Mask value for use with the PUE[] registers
      \t */
      \tstatic constexpr auto calculatePueMask(PinIndex pinInd) {
      \t   constexpr unsigned MAX_BIT = 71; // Pti7
      \t   if (pinInd > MAX_BIT) {
      \t      return 0;
      \t   }
      \t   return 1<<(pinInd%32);
      \t}
      \t
      \tstatic constexpr HardwarePtr<uint32_t> pue   = PORT_BasePtr+offsetof(PORT_Type, PUE0)+4*(pinIndex/32);
      \tstatic constexpr unsigned MASK               = calculatePueMask(pinIndex);\n
   ]]>
   </template>

   <template namespace="all" key="publicMethods" codeGenCondition="enablePeripheralSupport" >
   <![CDATA[
      \t/**
      \t* Set pull device for port pin
      \t*
      \t* @param pullDirection PullDirection_none or PullDirection_up
      \t*/
      \tstatic void setPup(PullDirection pullDirection) {
      \t   static_assert(MASK!=0, "Pin not supported on this device");
      \t   *pue = (*pue|(MASK&pullDirection))&(~MASK|pullDirection);
      \t}
      \t
      \t/**
      \t * Set high-drive for port pin
      \t *
      \t * @param highDrive HighDrive_on or HighDrive_off
      \t */
      \tstatic void setHdrive(HighDrive highDrive) {
      \t   static_assert(HDRIVE_MASK!=0, "High-drive not supported on this pin");
      \t   *hdrve = (*hdrve|(HDRIVE_MASK&highDrive))&(~HDRIVE_MASK|highDrive);
      \t}
   ]]>
   </template>

   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.PeripheralValidator" >
   </validate>

   <template key="/SYSTEM/Includes" namespace="all" codeGenCondition="configurePeripheralInStartUp" >
   <![CDATA[
      #include "port.h"\n
   ]]></template>

   <template key="/SYSTEM/Startup" namespace="all" codeGenCondition="configurePeripheralInStartUp" >
   <![CDATA[
      \t/* Configure Ports (Filters, PUPs and HDRIVE) */
      \tUSBDM::$(_Class)::defaultConfigure();
   ]]></template>

   <template key="/PORT/PinIndex" namespace="all" >
      <![CDATA[
         /**
          * Port pin index
          *
          * Global indices for port pins
          */
         enum PinIndex : uint8_t {
            \tPinIndex_Illegal = 0xFFU, ///< Illegal\n
   ]]></template>
   <for keys=   "    field             : Name : pinIndex"
        values= "/PORT/port_pue0_ptape :  A   :   0;
                 /PORT/port_pue0_ptbpe :  B   :   8;
                 /PORT/port_pue0_ptcpe :  C   :  16;
                 /PORT/port_pue0_ptdpe :  D   :  24;
                 /PORT/port_pue1_ptepe :  E   :  32;
                 /PORT/port_pue1_ptfpe :  F   :  40;
                 /PORT/port_pue1_ptgpe :  G   :  48;
                 /PORT/port_pue1_pthpe :  H   :  56;
                 /PORT/port_pue2_ptipe :  I   :  64" >

      <for keys="i" dim="8">
         <template key="/PORT/PinIndex" namespace="all" variables="%(field)_present" codeGenCondition="enablePeripheralSupport"
         ><![CDATA[
            \tPT%(Name)%(i) = %(pinIndex)+%(i),\n
         ]]></template>
      </for>
      <template key="/PORT/declarations" namespace="all" variables="%(field)_present" codeGenCondition="enablePeripheralSupport"
      ><![CDATA[
      \t/**
      \t * Class representing individual pin options for pins in Port %(Name)
      \t *
      \t * @tparam pinNum Indicates pin within the port e.g. %(Name)3 = > %(Name)<3>
      \t * @tparam polarity Polarity of the pin. Either ActiveHigh or ActiveLow
      \t */
      \ttemplate <PinNum pinNum>
      \t   class Port%(Name) : public Port_T<PinIndex(pinNum+%(pinIndex))> {};
      \t
      \t/**
      \t * Class representing pin options for a field within Port %(Name)
      \t *
      \t * @tparam leftPinNum  Indicates left pin (inclusive) within the port e.g. PT%(Name)[5..3] => %(Name)<5,...>
      \t * @tparam rightPinNum Indicates right pin (inclusive) within the port e.g. PT%(Name)[5..3] => %(Name)<...,3>
      \t * @tparam polarity    Polarity of field. Either ActiveHigh or ActiveLow
      \t */
      \ttemplate <PinNum leftPinNum, PinNum rightPinNum, Polarity polarity=ActiveHigh>
      \t    class Port%(Name)Field : public PortField_T<PinIndex(leftPinNum+%(pinIndex)), PinIndex(rightPinNum+%(pinIndex))> {};\n\n
      ]]></template>
   </for>
   <template key="/PORT/PinIndex" namespace="all" >
      <![CDATA[
         };
         \t\n
   ]]></template>


   <projectActionList id = "port_files" >
      <copy source="Project_Headers/port_MKE.h"  target="Project_Headers/port.h"  overwrite="true"  derived="true" />
   </projectActionList>

   <signals />

</peripheralPage>
