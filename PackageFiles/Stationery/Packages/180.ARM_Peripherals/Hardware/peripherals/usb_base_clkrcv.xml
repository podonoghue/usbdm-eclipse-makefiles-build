<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fragment SYSTEM "_menu.dtd" >

<!-- _usb_clkrcv_base.xml -->
<fragment xmlns:xi="http://www.w3.org/2001/XInclude">

   <category name="Clock Recovery" description="USB clock recovery options">
      <aliasOption key="usb_clk_enable" optional="true" locked="false" />
      
      <choiceOption key="usb_clk_tracking_mode" 
         typeName="UsbIrc48mClockTrackingMode"
         valueFormat="(%s)"
         description="IRC48M mode for USB operation"
         toolTip="This controls the mode of clock recovery when IRC48M is used as a crystal-less USB clock\n
                  The clock recovery block trims the IRC48M against USB bus transitions to get an accurate 48Mhz clock\n
                  It has two phases after being initially enabled: rough phase and tracking phase\n
                  The steps used to tune the IRC48M are different during these two phases\n
                  The step in rough phase is larger than that in tracking phase">
         <choice value="USB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN(0)|USB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN(0)"  enum="NotTracking"           name="Tracking disabled"                               />
         <choice value="USB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN(1)|USB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN(0)"  enum="AlwaysFineTracking"    name="Always fine after initial rough tracking"        />
         <choice value="USB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN(1)|USB_CLK_RECOVER_CTRL_RESET_RESUME_ROUGH_EN(1)"  enum="RoughAndFineTracking"  name="Revert to rough tracking on USB reset or resume" />
      </choiceOption>
      
      <binaryOption key="usb_clk_recover_ctrl_restart_ifrtrim_en" 
         typeName="UsbIrc48mClockResetTrim"
         description="Restart from IFR trim value"
         toolTip="IRC48 has a default trim fine value whose default value is factory trimmed (the IFR trim value)\n
                  The clock recover block tracks the accuracy of the clock 48Mhz and keeps updating the trim fine value accordingly\n
                  This action controls when the trim value is reset to the IFR value">
         <choice value="0"  enum="Keep"    name="Start from last trim value" isDefault="true" />
         <choice value="1"  enum="Restart" name="Restart from factory trim value" />
      </binaryOption>
   </category>
   
   <template variables="usb_clk_enable"><![CDATA[
      \t//! 
      \tstatic constexpr uint32_t usb_clk_recover_irc_en =
      \t   %symbolicExpression; // %shortDescription \n\n
   ]]></template>

   <template><![CDATA[
      \t//! 
      \tstatic constexpr uint32_t usb_clk_recover_ctrl = \n
   ]]></template>
   <template variables="usb_clk_tracking_mode"      ><![CDATA[ \t   %symbolicExpression | // %shortDescription    \n ]]></template>
   <template variables="usb_clk_recover_ctrl_restart_ifrtrim_en"    ><![CDATA[ \t   %symbolicExpression | // %shortDescription    \n ]]></template>
   <template><![CDATA[
      \t   0;\n\n
   ]]></template>

   <template variables="usb_clk_enable" ><![CDATA[
      \t/**
      \t * Set %description
      \t *
      \t * %tooltip
      \t *
      \t * @param usbIrc48mClockEnable  %shortDescription
      \t */
      \tstatic void enableIrc48m(UsbIrc48mClockEnable usbIrc48mClockEnable) {
      \t   usb->CLK_RECOVER_IRC_EN = usbIrc48mClockEnable;
      \t}\n\n
   ]]></template>
   
   <template variables="usb_clk_tracking_mode" ><![CDATA[
      \t/**
      \t * Set IRC48M USB clock modes
      \t *
      \t * @param usbIrc48mClockTrackingMode %tooltip\n\n
   ]]></template>
   <template variables="usb_clk_recover_ctrl_restart_ifrtrim_en" ><![CDATA[
      \t * @param usbIrc48mClockResetTrim %tooltip
      \t */
      \tstatic void setIrc48mTracking(UsbIrc48mClockTrackingMode usbIrc48mClockTrackingMode, UsbIrc48mClockResetTrim usbIrc48mClockResetTrim=UsbIrc48mClockResetTrim_Keep) {
      \t   usb->CLK_RECOVER_CTRL = usbIrc48mClockTrackingMode|usbIrc48mClockResetTrim;
      \t}\n\n
   ]]></template>
      
</fragment>
