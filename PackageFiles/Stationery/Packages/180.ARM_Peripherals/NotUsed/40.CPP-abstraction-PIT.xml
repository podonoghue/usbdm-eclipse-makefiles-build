<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE root SYSTEM "package.dtd">

<root version="1.0" >
   <projectActionList id="CPP-abstraction-PIT" >
      <applyWhen>
         <and>
            <variableRef idRef="cpp.peripheral.internal.pit" />
            <variableRef idRef="outputType" condition="matches" value=".*ProjectType\.exe$" />
         </and>
      </applyWhen>

      <projectActionList>
         <applyWhen>
            <variableRef idRef="projectOptionValue.CPP-abstraction" condition="isTrue"/>
         </applyWhen>
         <variable id="projectOptionValue.CPP-abstraction-PIT" 
            name="PIT interface" 
            description="Adds a CPP abstraction layer for Programmable Interrupt Timer hardware" 
            checkGroup="group-peripheral-options" >
         </variable>
   
         <!-- MK PIT CPP abstraction layer -->
         <projectActionList>
            <projectActionList>
               <applyWhen>
                  <and>
                     <or>
                        <deviceFamilyMatches>CortexM4</deviceFamilyMatches>
                        <deviceFamilyMatches>CortexM4F</deviceFamilyMatches>
                     </or>
                     <or>
                        <deviceSubfamilyMatches>MK.*</deviceSubfamilyMatches>
                     </or>
                     <variableRef idRef="projectOptionValue.CPP-abstraction-PIT" />
                  </and>
               </applyWhen>
               <copy source="Snippets/pit-example1.cpp"       target="Snippets/pit-example1.cpp" />
               <copy source="Snippets/pit-example2-MK.cpp"    target="Snippets/pit-example2.cpp" />
               <copy source="Project_Headers/pit-MK.h"        target="Project_Headers/pit.h" />
            </projectActionList>
         </projectActionList>
         
         <!-- MKL PIT CPP abstraction layer -->
         <projectActionList>
            <projectActionList>
               <applyWhen>
                  <and>
                     <or>
                        <deviceFamilyMatches>CortexM0</deviceFamilyMatches>
                        <deviceFamilyMatches>CortexM0plus</deviceFamilyMatches>
                     </or>
                     <or>
                        <deviceSubfamilyMatches>MKL.*</deviceSubfamilyMatches>
                        <deviceSubfamilyMatches>MKE.*</deviceSubfamilyMatches>
                     </or>
                     <variableRef idRef="projectOptionValue.CPP-abstraction-PIT" />
                  </and>
               </applyWhen>
               <copy source="Snippets/pit-example1.cpp"       target="Snippets/pit-example1.cpp" />
               <copy source="Snippets/pit-example2-MKL.cpp"   target="Snippets/pit-example2.cpp" />
               <copy source="Project_Headers/pit-MKL.h"        target="Project_Headers/pit.h" />
            </projectActionList>
         </projectActionList>
         
         <!-- MKM PIT CPP abstraction layer -->
         <projectActionList>
            <projectActionList>
               <applyWhen >
                  <and>
                     <or>
                        <deviceFamilyMatches>CortexM0</deviceFamilyMatches>
                        <deviceFamilyMatches>CortexM0plus</deviceFamilyMatches>
                     </or>
                     <or>
                        <deviceSubfamilyMatches>MKM.*</deviceSubfamilyMatches>
                     </or>
                     <variableRef idRef="projectOptionValue.CPP-abstraction-PIT" />
                  </and>
               </applyWhen>
               <copy source="Snippets/pit-example1.cpp"       target="Snippets/pit-example1.cpp" />
               <copy source="Snippets/pit-example2-MKM.cpp"   target="Snippets/pit-example2.cpp" />
               <copy source="Project_Headers/pit-MKM.h"        target="Project_Headers/pit.h" />
               <copy source="Sources/pit-MKM.cpp"              target="Sources/pit.cpp" />
            </projectActionList>
         </projectActionList>
      </projectActionList>
   </projectActionList>
</root>
