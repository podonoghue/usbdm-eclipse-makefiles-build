/**
 * @file     pdb.h (180.ARM_Peripherals/Project_Headers/pdb.h)
 * @brief    Programmable Delay Block
 */

#ifndef HEADER_PDB_H
#define HEADER_PDB_H

/*
 * *****************************
 * *** DO NOT EDIT THIS FILE ***
 * *****************************
 *
 * This file is generated automatically.
 * Any manual changes will be lost.
 */
#include <math.h>
#include "pin_mapping.h"

namespace USBDM {

#if $(/PDB/_BasicInfoGuard) // /PDB/_BasicInfoGuard

/**
 * @addtogroup PDB_Group PDB, Programmable Delay Block
 * @brief Peripheral information for Programmable Delay Block
 * @{
 */
/**
 * Notes on the PDB.
 *
 * Components:\n
 *     - Channels+pre-triggers - Usually associated with an ADC
 *     - DAC delays            - Associated with a DAC
 *     - Pulse outputs         - Usually associated with a CMP
 *
 * Operation:\n
 * - The PDB can be triggered from another peripheral or directly by software using softwareTrigger().
 * - When triggered, the PDB counter and the DAC delay counters are restarted.
 * - The period of the PDB counter and the delay counters may be independently controlled.
 *    - The PDB counter counts [0..MOD]. Set with setPeriod().
 *    - The DAC delay counters count [0..DACINTx]. Set with configureDacTrigger().
 *      The counters may be bypassed for external triggers.
 * - The PDB may operate in one-shot or continuous mode.
 *    - One shot mode   - The PDB and DAC delay counters are reset on trigger. The PDB counter counts one sequence only.
 *      The DAC counter only operates while the main counter is counting but it may produce multiple triggers in the sequence.
 *    - Continuous mode - As above but the counter resets when it reaches the counter period and restarts.\n
 *      The DAC delay counters are NOT reset on PDB counter roll-over so operate independently after initial trigger.
 * - I would expect the DAC Delay counter period to be less than or equal to the PDB counter period in one-shot mode.
 * - The DAC Delay period may be set smaller than (PDB counter period/2) to trigger multiple DAC output
 *   triggers within a PDB period but more often there would be only a single DAC event e.g.
 *   <b>(PDB counter period/2) < (DAC Delay period) <= (PDB counter period)</b>. Again this is in one-shot mode.
 * - The pre-triggers within a channel are associated with different ADC pre-triggers e.g. SC1[n]/R[n]. The pre-triggers
 *   are referenced to the main PDB counter.\n
 *   This allows multiple ADC channels (inputs) to be used with a PDB period - usually only 2 are available per ADC.
 *   Set with configureAdcPretrigger().
 * - The pulse outputs may be configured as high for a pulse from [start...end] times based on the PDB counter.
 *   Set with configurePulseOutput().
 */
$(/PDB/peripheral_h_definition:// $/PDB/peripheral_h_definition not found)

$(/PDB/declarations: // No declarations found)
/**
 * End PDB_Group
 * @}
 */
#endif // /PDB/_BasicInfoGuard
} // End namespace USBDM

#endif /* HEADER_PDB_H */
