/*!
 * @file     S32K144.h
 *
 * @brief    CMSIS Cortex-M Peripheral Access Layer Header File for S32K144.
 *           Equivalent: 
 *
 * @version  V1.6
 * @date     2022/09
 *
 */

#ifndef _S32K144_H_
#define _S32K144_H_

#define MCU_S32K144

#include <stdint.h>
#ifdef __cplusplus
extern "C" {
#endif


/** @brief Vector numbers required for NVIC functions */
/** @addtogroup Interrupt_vector_numbers_GROUP Interrupt vector numbers */
/** @{ */
#define NUMBER_OF_INT_VECTORS 139 //<! Number of vector table entries
/* -------------------------  Interrupt Number Definitions  ------------------------ */

/**
 * Interrupt vector numbers
 */
typedef enum {
/* ------------------------  Processor Exceptions Numbers  ------------------------- */
  Reset_IRQn                    = -15,   /**<   1 Reset Vector, invoked on Power up and warm reset                                 */
  NonMaskableInt_IRQn           = -14,   /**<   2 Non maskable Interrupt, cannot be stopped or preempted                           */
  HardFault_IRQn                = -13,   /**<   3 Hard Fault, all classes of Fault                                                 */
  MemoryManagement_IRQn         = -12,   /**<   4 Memory Management, MPU mismatch, including Access Violation and No Match         */
  BusFault_IRQn                 = -11,   /**<   5 Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault   */
  UsageFault_IRQn               = -10,   /**<   6 Usage Fault, i.e. Undef Instruction, Illegal State Transition                    */
  SVCall_IRQn                   =  -5,   /**<  11 System Service Call via SVC instruction                                          */
  DebugMonitor_IRQn             =  -4,   /**<  12 Debug Monitor                                                                    */
  PendSV_IRQn                   =  -2,   /**<  14 Pendable request for system service                                              */
  SysTick_IRQn                  =  -1,   /**<  15 System Tick Timer                                                                */
/* ----------------------   S32K144 VectorTable                      ---------------------- */
  DMA0_IRQn                     =   0,   /**<  16 Enhanced Direct Memory Access                                                    */
  DMA1_IRQn                     =   1,   /**<  17 Enhanced Direct Memory Access                                                    */
  DMA2_IRQn                     =   2,   /**<  18 Enhanced Direct Memory Access                                                    */
  DMA3_IRQn                     =   3,   /**<  19 Enhanced Direct Memory Access                                                    */
  DMA4_IRQn                     =   4,   /**<  20 Enhanced Direct Memory Access                                                    */
  DMA5_IRQn                     =   5,   /**<  21 Enhanced Direct Memory Access                                                    */
  DMA6_IRQn                     =   6,   /**<  22 Enhanced Direct Memory Access                                                    */
  DMA7_IRQn                     =   7,   /**<  23 Enhanced Direct Memory Access                                                    */
  DMA8_IRQn                     =   8,   /**<  24 Enhanced Direct Memory Access                                                    */
  DMA9_IRQn                     =   9,   /**<  25 Enhanced Direct Memory Access                                                    */
  DMA10_IRQn                    =  10,   /**<  26 Enhanced Direct Memory Access                                                    */
  DMA11_IRQn                    =  11,   /**<  27 Enhanced Direct Memory Access                                                    */
  DMA12_IRQn                    =  12,   /**<  28 Enhanced Direct Memory Access                                                    */
  DMA13_IRQn                    =  13,   /**<  29 Enhanced Direct Memory Access                                                    */
  DMA14_IRQn                    =  14,   /**<  30 Enhanced Direct Memory Access                                                    */
  DMA15_IRQn                    =  15,   /**<  31 Enhanced Direct Memory Access                                                    */
  DMA_Error_IRQn                =  16,   /**<  32 Enhanced Direct Memory Access                                                    */
  MCM_IRQn                      =  17,   /**<  33 Core Platform Miscellaneous Control Module                                       */
  FTFC_IRQn                     =  18,   /**<  34 Flash Memory Module                                                              */
  FTFC_Read_Collision_IRQn      =  19,   /**<  35 Flash Memory Module                                                              */
  LVD_LVW_IRQn                  =  20,   /**<  36 Power Management Controller                                                      */
  FTFC_Fault_IRQn               =  21,   /**<  37 Flash Memory Module                                                              */
  WDOG_EWM_IRQn                 =  22,   /**<  38 Watchdog timer                                                                   */
  RCM_IRQn                      =  23,   /**<  39 Reset Control Module                                                             */
  LPI2C0_Master_IRQn            =  24,   /**<  40 Low Power I2C                                                                    */
  LPI2C0_Slave_IRQn             =  25,   /**<  41 Low Power I2C                                                                    */
  LPSPI0_IRQn                   =  26,   /**<  42 Low Power SPI                                                                    */
  LPSPI1_IRQn                   =  27,   /**<  43 Low Power SPI                                                                    */
  LPSPI2_IRQn                   =  28,   /**<  44 The LPSPI Memory Map/Register Definition can be found here                       */
  LPUART0_RxTx_IRQn             =  31,   /**<  47 Universal Asynchronous Receiver/Transmitter                                      */
  LPUART1_RxTx_IRQn             =  33,   /**<  49 Universal Asynchronous Receiver/Transmitter                                      */
  LPUART2_RxTx_IRQn             =  35,   /**<  51 Universal Asynchronous Receiver/Transmitter                                      */
  ADC0_IRQn                     =  39,   /**<  55 Analog-to-Digital Converter                                                      */
  ADC1_IRQn                     =  40,   /**<  56 Analog-to-Digital Converter                                                      */
  CMP0_IRQn                     =  41,   /**<  57 High-Speed Comparator (CMP), Voltage Reference (VREF) Digital-to-Analog Converter (DAC), and Analog Mux */
  ERM_single_fault_IRQn         =  44,   /**<  60 Error Reporting Module                                                           */
  ERM_double_fault_IRQn         =  45,   /**<  61 Error Reporting Module                                                           */
  RTC_IRQn                      =  46,   /**<  62 Secure Real Time Clock                                                           */
  RTC_Seconds_IRQn              =  47,   /**<  63 Secure Real Time Clock                                                           */
  LPIT0_Ch0_IRQn                =  48,   /**<  64 Low Power Periodic Interrupt Timer                                               */
  LPIT0_Ch1_IRQn                =  49,   /**<  65 Low Power Periodic Interrupt Timer                                               */
  LPIT0_Ch2_IRQn                =  50,   /**<  66 Low Power Periodic Interrupt Timer                                               */
  LPIT0_Ch3_IRQn                =  51,   /**<  67 Low Power Periodic Interrupt Timer                                               */
  PDB0_IRQn                     =  52,   /**<  68 Programmable Delay Block                                                         */
  SCG_IRQn                      =  57,   /**<  73 System Clock Generator                                                           */
  LPTMR0_IRQn                   =  58,   /**<  74 Low Power Timer                                                                  */
  PORTA_IRQn                    =  59,   /**<  75 Pin Control and Interrupts                                                       */
  PORTB_IRQn                    =  60,   /**<  76 Pin Control and Interrupts                                                       */
  PORTC_IRQn                    =  61,   /**<  77 Pin Control and Interrupts                                                       */
  PORTD_IRQn                    =  62,   /**<  78 Pin Control and Interrupts                                                       */
  PORTE_IRQn                    =  63,   /**<  79 Pin Control and Interrupts                                                       */
  SWI_IRQn                      =  64,   /**<  80                                                                                  */
  PDB1_IRQn                     =  68,   /**<  84 Programmable Delay Block                                                         */
  FLEXIO_IRQn                   =  69,   /**<  85 FLEXIO module                                                                    */
  CAN0_ORed_IRQn                =  78,   /**<  94 FlexCAN - Bus Off, Tx/Rx Warnings, Tx/Rx Error count transition                  */
  CAN0_Error_IRQn               =  79,   /**<  95 FlexCAN - Bus Error                                                              */
  CAN0_WakeUp_IRQn              =  80,   /**<  96 FlexCAN - Wakeup and Sleep (Pretend networking)                                  */
  CAN0_MessageBuffer_0_15_IRQn  =  81,   /**<  97 FlexCAN - Message Buffers (Mailboxes and FIFO)                                   */
  CAN0_MessageBuffer_16_31_IRQn =  82,   /**<  98 FlexCAN - Message Buffers (FIFO and Mailboxes)                                   */
  CAN1_ORed_IRQn                =  85,   /**< 101 FlexCAN - Bus Off, Tx/Rx Warnings, Tx/Rx Error count transition                  */
  CAN1_Error_IRQn               =  86,   /**< 102 FlexCAN - Bus Error                                                              */
  CAN1_MessageBuffer_0_15_IRQn  =  88,   /**< 104 FlexCAN - Message Buffers (Mailboxes and FIFO)                                   */
  CAN2_ORed_IRQn                =  92,   /**< 108 FlexCAN - Bus Off, Tx/Rx Warnings, Tx/Rx Error count transition                  */
  CAN2_Error_IRQn               =  93,   /**< 109 FlexCAN - Bus Error                                                              */
  CAN2_MessageBuffer_0_15_IRQn  =  95,   /**< 111 FlexCAN - Message Buffers (Mailboxes and FIFO)                                   */
  FTM0_Ch0_Ch1_IRQn             =  99,   /**< 115 FlexTimer Module                                                                 */
  FTM0_Ch2_Ch3_IRQn             = 100,   /**< 116 FlexTimer Module                                                                 */
  FTM0_Ch4_Ch5_IRQn             = 101,   /**< 117 FlexTimer Module                                                                 */
  FTM0_Ch6_Ch7_IRQn             = 102,   /**< 118 FlexTimer Module                                                                 */
  FTM0_Fault_IRQn               = 103,   /**< 119 FlexTimer Module                                                                 */
  FTM0_Ovf_Reload_IRQn          = 104,   /**< 120 FlexTimer Module                                                                 */
  FTM1_Ch0_Ch1_IRQn             = 105,   /**< 121 FlexTimer Module                                                                 */
  FTM1_Ch2_Ch3_IRQn             = 106,   /**< 122 FlexTimer Module                                                                 */
  FTM1_Ch4_Ch5_IRQn             = 107,   /**< 123 FlexTimer Module                                                                 */
  FTM1_Ch6_Ch7_IRQn             = 108,   /**< 124 FlexTimer Module                                                                 */
  FTM1_Fault_IRQn               = 109,   /**< 125 FlexTimer Module                                                                 */
  FTM1_Ovf_Reload_IRQn          = 110,   /**< 126 FlexTimer Module                                                                 */
  FTM2_Ch0_Ch1_IRQn             = 111,   /**< 127 FlexTimer Module                                                                 */
  FTM2_Ch2_Ch3_IRQn             = 112,   /**< 128 FlexTimer Module                                                                 */
  FTM2_Ch4_Ch5_IRQn             = 113,   /**< 129 FlexTimer Module                                                                 */
  FTM2_Ch6_Ch7_IRQn             = 114,   /**< 130 FlexTimer Module                                                                 */
  FTM2_Fault_IRQn               = 115,   /**< 131 FlexTimer Module                                                                 */
  FTM2_Ovf_Reload_IRQn          = 116,   /**< 132 FlexTimer Module                                                                 */
  FTM3_Ch0_Ch1_IRQn             = 117,   /**< 133 FlexTimer Module                                                                 */
  FTM3_Ch2_Ch3_IRQn             = 118,   /**< 134 FlexTimer Module                                                                 */
  FTM3_Ch4_Ch5_IRQn             = 119,   /**< 135 FlexTimer Module                                                                 */
  FTM3_Ch6_Ch7_IRQn             = 120,   /**< 136 FlexTimer Module                                                                 */
  FTM3_Fault_IRQn               = 121,   /**< 137 FlexTimer Module                                                                 */
  FTM3_Ovf_Reload_IRQn          = 122,   /**< 138 FlexTimer Module                                                                 */
} IRQn_Type;


/** @brief Prototypes for interrupt handlers */
/* -------------------------  Exception Handlers  ------------------------ */
extern void NMI_Handler(void);                       /**< Non maskable Interrupt, cannot be stopped or preempted                           */
extern void HardFault_Handler(void);                 /**< Hard Fault, all classes of Fault                                                 */
extern void MemManage_Handler(void);                 /**< Memory Management, MPU mismatch, including Access Violation and No Match         */
extern void BusFault_Handler(void);                  /**< Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault   */
extern void UsageFault_Handler(void);                /**< Usage Fault, i.e. Undef Instruction, Illegal State Transition                    */
extern void SVC_Handler(void);                       /**< System Service Call via SVC instruction                                          */
extern void DebugMon_Handler(void);                  /**< Debug Monitor                                                                    */
extern void PendSV_Handler(void);                    /**< Pendable request for system service                                              */
extern void SysTick_Handler(void);                   /**< System Tick Timer                                                                */
extern void DMA0_IRQHandler(void);                   /**< Enhanced Direct Memory Access                                                    */
extern void DMA1_IRQHandler(void);                   /**< Enhanced Direct Memory Access                                                    */
extern void DMA2_IRQHandler(void);                   /**< Enhanced Direct Memory Access                                                    */
extern void DMA3_IRQHandler(void);                   /**< Enhanced Direct Memory Access                                                    */
extern void DMA4_IRQHandler(void);                   /**< Enhanced Direct Memory Access                                                    */
extern void DMA5_IRQHandler(void);                   /**< Enhanced Direct Memory Access                                                    */
extern void DMA6_IRQHandler(void);                   /**< Enhanced Direct Memory Access                                                    */
extern void DMA7_IRQHandler(void);                   /**< Enhanced Direct Memory Access                                                    */
extern void DMA8_IRQHandler(void);                   /**< Enhanced Direct Memory Access                                                    */
extern void DMA9_IRQHandler(void);                   /**< Enhanced Direct Memory Access                                                    */
extern void DMA10_IRQHandler(void);                  /**< Enhanced Direct Memory Access                                                    */
extern void DMA11_IRQHandler(void);                  /**< Enhanced Direct Memory Access                                                    */
extern void DMA12_IRQHandler(void);                  /**< Enhanced Direct Memory Access                                                    */
extern void DMA13_IRQHandler(void);                  /**< Enhanced Direct Memory Access                                                    */
extern void DMA14_IRQHandler(void);                  /**< Enhanced Direct Memory Access                                                    */
extern void DMA15_IRQHandler(void);                  /**< Enhanced Direct Memory Access                                                    */
extern void DMA_Error_IRQHandler(void);              /**< Enhanced Direct Memory Access                                                    */
extern void MCM_IRQHandler(void);                    /**< Core Platform Miscellaneous Control Module                                       */
extern void FTFC_IRQHandler(void);                   /**< Flash Memory Module                                                              */
extern void FTFC_Read_Collision_IRQHandler(void);    /**< Flash Memory Module                                                              */
extern void LVD_LVW_IRQHandler(void);                /**< Power Management Controller                                                      */
extern void FTFC_Fault_IRQHandler(void);             /**< Flash Memory Module                                                              */
extern void WDOG_EWM_IRQHandler(void);               /**< Watchdog timer                                                                   */
extern void RCM_IRQHandler(void);                    /**< Reset Control Module                                                             */
extern void LPI2C0_Master_IRQHandler(void);          /**< Low Power I2C                                                                    */
extern void LPI2C0_Slave_IRQHandler(void);           /**< Low Power I2C                                                                    */
extern void LPSPI0_IRQHandler(void);                 /**< Low Power SPI                                                                    */
extern void LPSPI1_IRQHandler(void);                 /**< Low Power SPI                                                                    */
extern void LPSPI2_IRQHandler(void);                 /**< The LPSPI Memory Map/Register Definition can be found here                       */
extern void LPUART0_RxTx_IRQHandler(void);           /**< Universal Asynchronous Receiver/Transmitter                                      */
extern void LPUART1_RxTx_IRQHandler(void);           /**< Universal Asynchronous Receiver/Transmitter                                      */
extern void LPUART2_RxTx_IRQHandler(void);           /**< Universal Asynchronous Receiver/Transmitter                                      */
extern void ADC0_IRQHandler(void);                   /**< Analog-to-Digital Converter                                                      */
extern void ADC1_IRQHandler(void);                   /**< Analog-to-Digital Converter                                                      */
extern void CMP0_IRQHandler(void);                   /**< High-Speed Comparator (CMP), Voltage Reference (VREF) Digital-to-Analog Converter (DAC), and Analog Mux */
extern void ERM_single_fault_IRQHandler(void);       /**< Error Reporting Module                                                           */
extern void ERM_double_fault_IRQHandler(void);       /**< Error Reporting Module                                                           */
extern void RTC_IRQHandler(void);                    /**< Secure Real Time Clock                                                           */
extern void RTC_Seconds_IRQHandler(void);            /**< Secure Real Time Clock                                                           */
extern void LPIT0_Ch0_IRQHandler(void);              /**< Low Power Periodic Interrupt Timer                                               */
extern void LPIT0_Ch1_IRQHandler(void);              /**< Low Power Periodic Interrupt Timer                                               */
extern void LPIT0_Ch2_IRQHandler(void);              /**< Low Power Periodic Interrupt Timer                                               */
extern void LPIT0_Ch3_IRQHandler(void);              /**< Low Power Periodic Interrupt Timer                                               */
extern void PDB0_IRQHandler(void);                   /**< Programmable Delay Block                                                         */
extern void SCG_IRQHandler(void);                    /**< System Clock Generator                                                           */
extern void LPTMR0_IRQHandler(void);                 /**< Low Power Timer                                                                  */
extern void PORTA_IRQHandler(void);                  /**< Pin Control and Interrupts                                                       */
extern void PORTB_IRQHandler(void);                  /**< Pin Control and Interrupts                                                       */
extern void PORTC_IRQHandler(void);                  /**< Pin Control and Interrupts                                                       */
extern void PORTD_IRQHandler(void);                  /**< Pin Control and Interrupts                                                       */
extern void PORTE_IRQHandler(void);                  /**< Pin Control and Interrupts                                                       */
extern void SWI_IRQHandler(void);                    /**<                                                                                  */
extern void PDB1_IRQHandler(void);                   /**< Programmable Delay Block                                                         */
extern void FLEXIO_IRQHandler(void);                 /**< FLEXIO module                                                                    */
extern void CAN0_ORed_IRQHandler(void);              /**< FlexCAN - Bus Off, Tx/Rx Warnings, Tx/Rx Error count transition                  */
extern void CAN0_Error_IRQHandler(void);             /**< FlexCAN - Bus Error                                                              */
extern void CAN0_WakeUp_IRQHandler(void);            /**< FlexCAN - Wakeup and Sleep (Pretend networking)                                  */
extern void CAN0_MessageBuffer_0_15_IRQHandler(void);   /**< FlexCAN - Message Buffers (Mailboxes and FIFO)                                   */
extern void CAN0_MessageBuffer_16_31_IRQHandler(void);   /**< FlexCAN - Message Buffers (FIFO and Mailboxes)                                   */
extern void CAN1_ORed_IRQHandler(void);              /**< FlexCAN - Bus Off, Tx/Rx Warnings, Tx/Rx Error count transition                  */
extern void CAN1_Error_IRQHandler(void);             /**< FlexCAN - Bus Error                                                              */
extern void CAN1_MessageBuffer_0_15_IRQHandler(void);   /**< FlexCAN - Message Buffers (Mailboxes and FIFO)                                   */
extern void CAN2_ORed_IRQHandler(void);              /**< FlexCAN - Bus Off, Tx/Rx Warnings, Tx/Rx Error count transition                  */
extern void CAN2_Error_IRQHandler(void);             /**< FlexCAN - Bus Error                                                              */
extern void CAN2_MessageBuffer_0_15_IRQHandler(void);   /**< FlexCAN - Message Buffers (Mailboxes and FIFO)                                   */
extern void FTM0_Ch0_Ch1_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM0_Ch2_Ch3_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM0_Ch4_Ch5_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM0_Ch6_Ch7_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM0_Fault_IRQHandler(void);             /**< FlexTimer Module                                                                 */
extern void FTM0_Ovf_Reload_IRQHandler(void);        /**< FlexTimer Module                                                                 */
extern void FTM1_Ch0_Ch1_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM1_Ch2_Ch3_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM1_Ch4_Ch5_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM1_Ch6_Ch7_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM1_Fault_IRQHandler(void);             /**< FlexTimer Module                                                                 */
extern void FTM1_Ovf_Reload_IRQHandler(void);        /**< FlexTimer Module                                                                 */
extern void FTM2_Ch0_Ch1_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM2_Ch2_Ch3_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM2_Ch4_Ch5_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM2_Ch6_Ch7_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM2_Fault_IRQHandler(void);             /**< FlexTimer Module                                                                 */
extern void FTM2_Ovf_Reload_IRQHandler(void);        /**< FlexTimer Module                                                                 */
extern void FTM3_Ch0_Ch1_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM3_Ch2_Ch3_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM3_Ch4_Ch5_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM3_Ch6_Ch7_IRQHandler(void);           /**< FlexTimer Module                                                                 */
extern void FTM3_Fault_IRQHandler(void);             /**< FlexTimer Module                                                                 */
extern void FTM3_Ovf_Reload_IRQHandler(void);        /**< FlexTimer Module                                                                 */


/** @} */ /* End group Interrupt_vector_numbers_GROUP */

/** @addtogroup Interrupt_handler_prototypes_GROUP Interrupt handler prototypes */
/** @{ */

/** @} */ /* End group Interrupt_handler_prototypes_GROUP */

/* ================================================================================ */
/* ================      Processor and Core Peripheral Section     ================ */
/* ================================================================================ */


/** @brief Configuration of the cm4 Processor and Core Peripherals */
/** @addtogroup Cortex_Core_Configuration_GROUP Cortex Core Configuration */
/** @{ */
#define __CM4_REV                 0x0001     /**< CPU Revision                                        */
#define __MPU_PRESENT             0          /**< Whether MPU is present                              */
#define __NVIC_PRIO_BITS          4          /**< Number of implemented bits in NVIC PRIO register    */
#define __Vendor_SysTickConfig    0          /**< Whether Vendor implemented SYSTICK timer is present */
#define __FPU_PRESENT             1          /**< Whether FPU is present                              */
#define __VTOR_PRESENT            1          /**< Whether VTOR register is present                    */


/** @} */ /* End group Cortex_Core_Configuration_GROUP */

#include "core_cm4.h"           /* Processor and core peripherals     */
#include "system.h"             /* Device specific configuration file */

#ifndef __IO
#define __IO volatile 
#endif

#ifndef __I
#define __I volatile const
#endif

#ifndef __O
#define __O volatile
#endif


/* ================================================================================ */
/* ================       Device Specific Peripheral Section       ================ */
/* ================================================================================ */



/* -------------------  Start of section using anonymous unions  ------------------ */
#if defined(__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined(__ICCARM__)
  #pragma language=extended
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__TMS470__)
/* anonymous unions are enabled by default */
#elif defined(__TASKING__)
  #pragma warning 586
#else
  #warning Not supported compiler type
#endif
/**
 * @defgroup Peripheral_access_layer_GROUP  Device Peripheral Access Layer
 *
 * C structs allowing access to peripheral registers
 */

/** @brief C Struct for ADC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup ADC_Peripheral_access_layer_GROUP ADC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           ADC0 (file:ADC0_S32K142)             ================ */
/* ================================================================================ */

/**
 * @brief Analog-to-Digital Converter
 */
#define ADC_SC1_COUNT        16         /**< Number of ADC channels                             */
/**
 * @struct ADC_Type
 * @brief  C Struct allowing access to ADC registers
 */
typedef struct ADC_Type {
   __IO uint32_t  SC1[ADC_SC1_COUNT];           /**< 0000: Status and Control Register 1                                */
   __IO uint32_t  CFG1;                         /**< 0040: Configuration Register 1                                     */
   __IO uint32_t  CFG2;                         /**< 0044: Configuration Register 2                                     */
   __I  uint32_t  R[ADC_SC1_COUNT];             /**< 0048: Data Result Register                                         */
   __IO uint32_t  CV1;                          /**< 0088: Compare Value                                                */
   __IO uint32_t  CV2;                          /**< 008C: Compare Value                                                */
   __IO uint32_t  SC2;                          /**< 0090: Status and Control Register 2                                */
   __IO uint32_t  SC3;                          /**< 0094: Status and Control Register 3                                */
   __IO uint32_t  BASE_OFS;                     /**< 0098: BASE Offset Register                                         */
   __IO uint32_t  OFS;                          /**< 009C: Offset Correction Register                                   */
   __IO uint32_t  USR_OFS;                      /**< 00A0: USER Offset Correction Register                              */
   __IO uint32_t  XOFS;                         /**< 00A4: X Offset Correction Register                                 */
   __IO uint32_t  YOFS;                         /**< 00A8: Y Offset Correction Register                                 */
   __IO uint32_t  G;                            /**< 00AC: Gain Register                                                */
   __IO uint32_t  UG;                           /**< 00B0: User Gain Register                                           */
   __IO uint32_t  CLPS;                         /**< 00B4: General Calibration Value Register S                         */
   __IO uint32_t  CLP3;                         /**< 00B8: Plus-Side General Calibration Value Register 3               */
   __IO uint32_t  CLP2;                         /**< 00BC: Plus-Side General Calibration Value Register 2               */
   __IO uint32_t  CLP1;                         /**< 00C0: Plus-Side General Calibration Value Register 1               */
   __IO uint32_t  CLP0;                         /**< 00C4: Plus-Side General Calibration Value Register 0               */
   __IO uint32_t  CLPX;                         /**< 00C8: Plus-Side General Calibration Value Register X               */
   __IO uint32_t  CLP9;                         /**< 00CC: Plus-Side General Calibration Value Register 9               */
   __IO uint32_t  CLPS_OFS;                     /**< 00D0: General Calibration Offset Value Register S                  */
   __IO uint32_t  CLP3_OFS;                     /**< 00D4: Plus-Side General Calibration Offset Value Register 3        */
   __IO uint32_t  CLP2_OFS;                     /**< 00D8: Plus-Side General Calibration Offset Value Register 2        */
   __IO uint32_t  CLP1_OFS;                     /**< 00DC: Plus-Side General Calibration Offset Value Register 1        */
   __IO uint32_t  CLP0_OFS;                     /**< 00E0: Plus-Side General Calibration Offset Value Register 0        */
   __IO uint32_t  CLPX_OFS;                     /**< 00E4: Plus-Side General Calibration Offset Value Register X        */
   __IO uint32_t  CLP9_OFS;                     /**< 00E8: Plus-Side General Calibration Offset Value Register 9        */
} ADC_Type;


/** @brief Register Masks for ADC */

/* -------------------------------------------------------------------------------- */
/* -----------     'ADC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup ADC_Register_Masks_GROUP ADC Register Masks */
/** @{ */

/** @name SC1 - Status and Control Register 1 */ /** @{ */
#define ADC_SC1_ADCH_MASK                        (0x3FU)                                             /**< ADC0_SC1.ADCH Mask                      */
#define ADC_SC1_ADCH_SHIFT                       (0U)                                                /**< ADC0_SC1.ADCH Position                  */
#define ADC_SC1_ADCH(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC1_ADCH_SHIFT))&ADC_SC1_ADCH_MASK) /**< ADC0_SC1.ADCH Field                     */
#define ADC_SC1_AIEN_MASK                        (0x40U)                                             /**< ADC0_SC1.AIEN Mask                      */
#define ADC_SC1_AIEN_SHIFT                       (6U)                                                /**< ADC0_SC1.AIEN Position                  */
#define ADC_SC1_AIEN(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC1_AIEN_SHIFT))&ADC_SC1_AIEN_MASK) /**< ADC0_SC1.AIEN Field                     */
#define ADC_SC1_COCO_MASK                        (0x80U)                                             /**< ADC0_SC1.COCO Mask                      */
#define ADC_SC1_COCO_SHIFT                       (7U)                                                /**< ADC0_SC1.COCO Position                  */
#define ADC_SC1_COCO(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC1_COCO_SHIFT))&ADC_SC1_COCO_MASK) /**< ADC0_SC1.COCO Field                     */
/** @} */

/** @name CFG1 - Configuration Register 1 */ /** @{ */
#define ADC_CFG1_ADICLK_MASK                     (0x3U)                                              /**< ADC0_CFG1.ADICLK Mask                   */
#define ADC_CFG1_ADICLK_SHIFT                    (0U)                                                /**< ADC0_CFG1.ADICLK Position               */
#define ADC_CFG1_ADICLK(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CFG1_ADICLK_SHIFT))&ADC_CFG1_ADICLK_MASK) /**< ADC0_CFG1.ADICLK Field                  */
#define ADC_CFG1_MODE_MASK                       (0xCU)                                              /**< ADC0_CFG1.MODE Mask                     */
#define ADC_CFG1_MODE_SHIFT                      (2U)                                                /**< ADC0_CFG1.MODE Position                 */
#define ADC_CFG1_MODE(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CFG1_MODE_SHIFT))&ADC_CFG1_MODE_MASK) /**< ADC0_CFG1.MODE Field                    */
#define ADC_CFG1_ADIV_MASK                       (0x60U)                                             /**< ADC0_CFG1.ADIV Mask                     */
#define ADC_CFG1_ADIV_SHIFT                      (5U)                                                /**< ADC0_CFG1.ADIV Position                 */
#define ADC_CFG1_ADIV(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CFG1_ADIV_SHIFT))&ADC_CFG1_ADIV_MASK) /**< ADC0_CFG1.ADIV Field                    */
#define ADC_CFG1_CLRLTRG_MASK                    (0x100U)                                            /**< ADC0_CFG1.CLRLTRG Mask                  */
#define ADC_CFG1_CLRLTRG_SHIFT                   (8U)                                                /**< ADC0_CFG1.CLRLTRG Position              */
#define ADC_CFG1_CLRLTRG(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CFG1_CLRLTRG_SHIFT))&ADC_CFG1_CLRLTRG_MASK) /**< ADC0_CFG1.CLRLTRG Field                 */
/** @} */

/** @name CFG2 - Configuration Register 2 */ /** @{ */
#define ADC_CFG2_SMPLTS_MASK                     (0xFFU)                                             /**< ADC0_CFG2.SMPLTS Mask                   */
#define ADC_CFG2_SMPLTS_SHIFT                    (0U)                                                /**< ADC0_CFG2.SMPLTS Position               */
#define ADC_CFG2_SMPLTS(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CFG2_SMPLTS_SHIFT))&ADC_CFG2_SMPLTS_MASK) /**< ADC0_CFG2.SMPLTS Field                  */
/** @} */

/** @name R - Data Result Register */ /** @{ */
#define ADC_R_D_MASK                             (0xFFFU)                                            /**< ADC0_R.D Mask                           */
#define ADC_R_D_SHIFT                            (0U)                                                /**< ADC0_R.D Position                       */
#define ADC_R_D(x)                               (((uint32_t)(((uint32_t)(x))<<ADC_R_D_SHIFT))&ADC_R_D_MASK) /**< ADC0_R.D Field                          */
/** @} */

/** @name CV - Compare Value */ /** @{ */
#define ADC_CV_CV_MASK                           (0xFFFFU)                                           /**< ADC0_CV.CV Mask                         */
#define ADC_CV_CV_SHIFT                          (0U)                                                /**< ADC0_CV.CV Position                     */
#define ADC_CV_CV(x)                             (((uint32_t)(((uint32_t)(x))<<ADC_CV_CV_SHIFT))&ADC_CV_CV_MASK) /**< ADC0_CV.CV Field                        */
/** @} */

/** @name SC2 - Status and Control Register 2 */ /** @{ */
#define ADC_SC2_REFSEL_MASK                      (0x3U)                                              /**< ADC0_SC2.REFSEL Mask                    */
#define ADC_SC2_REFSEL_SHIFT                     (0U)                                                /**< ADC0_SC2.REFSEL Position                */
#define ADC_SC2_REFSEL(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_SC2_REFSEL_SHIFT))&ADC_SC2_REFSEL_MASK) /**< ADC0_SC2.REFSEL Field                   */
#define ADC_SC2_DMAEN_MASK                       (0x4U)                                              /**< ADC0_SC2.DMAEN Mask                     */
#define ADC_SC2_DMAEN_SHIFT                      (2U)                                                /**< ADC0_SC2.DMAEN Position                 */
#define ADC_SC2_DMAEN(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_SC2_DMAEN_SHIFT))&ADC_SC2_DMAEN_MASK) /**< ADC0_SC2.DMAEN Field                    */
#define ADC_SC2_ACREN_MASK                       (0x8U)                                              /**< ADC0_SC2.ACREN Mask                     */
#define ADC_SC2_ACREN_SHIFT                      (3U)                                                /**< ADC0_SC2.ACREN Position                 */
#define ADC_SC2_ACREN(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_SC2_ACREN_SHIFT))&ADC_SC2_ACREN_MASK) /**< ADC0_SC2.ACREN Field                    */
#define ADC_SC2_ACFGT_MASK                       (0x10U)                                             /**< ADC0_SC2.ACFGT Mask                     */
#define ADC_SC2_ACFGT_SHIFT                      (4U)                                                /**< ADC0_SC2.ACFGT Position                 */
#define ADC_SC2_ACFGT(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_SC2_ACFGT_SHIFT))&ADC_SC2_ACFGT_MASK) /**< ADC0_SC2.ACFGT Field                    */
#define ADC_SC2_ACFE_MASK                        (0x20U)                                             /**< ADC0_SC2.ACFE Mask                      */
#define ADC_SC2_ACFE_SHIFT                       (5U)                                                /**< ADC0_SC2.ACFE Position                  */
#define ADC_SC2_ACFE(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC2_ACFE_SHIFT))&ADC_SC2_ACFE_MASK) /**< ADC0_SC2.ACFE Field                     */
#define ADC_SC2_ADTRG_MASK                       (0x40U)                                             /**< ADC0_SC2.ADTRG Mask                     */
#define ADC_SC2_ADTRG_SHIFT                      (6U)                                                /**< ADC0_SC2.ADTRG Position                 */
#define ADC_SC2_ADTRG(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_SC2_ADTRG_SHIFT))&ADC_SC2_ADTRG_MASK) /**< ADC0_SC2.ADTRG Field                    */
#define ADC_SC2_ADACT_MASK                       (0x80U)                                             /**< ADC0_SC2.ADACT Mask                     */
#define ADC_SC2_ADACT_SHIFT                      (7U)                                                /**< ADC0_SC2.ADACT Position                 */
#define ADC_SC2_ADACT(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_SC2_ADACT_SHIFT))&ADC_SC2_ADACT_MASK) /**< ADC0_SC2.ADACT Field                    */
#define ADC_SC2_TRGPRNUM_MASK                    (0x6000U)                                           /**< ADC0_SC2.TRGPRNUM Mask                  */
#define ADC_SC2_TRGPRNUM_SHIFT                   (13U)                                               /**< ADC0_SC2.TRGPRNUM Position              */
#define ADC_SC2_TRGPRNUM(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_SC2_TRGPRNUM_SHIFT))&ADC_SC2_TRGPRNUM_MASK) /**< ADC0_SC2.TRGPRNUM Field                 */
#define ADC_SC2_TRGSTLAT_MASK                    (0xF0000U)                                          /**< ADC0_SC2.TRGSTLAT Mask                  */
#define ADC_SC2_TRGSTLAT_SHIFT                   (16U)                                               /**< ADC0_SC2.TRGSTLAT Position              */
#define ADC_SC2_TRGSTLAT(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_SC2_TRGSTLAT_SHIFT))&ADC_SC2_TRGSTLAT_MASK) /**< ADC0_SC2.TRGSTLAT Field                 */
#define ADC_SC2_TRGSTERR_MASK                    (0xF000000U)                                        /**< ADC0_SC2.TRGSTERR Mask                  */
#define ADC_SC2_TRGSTERR_SHIFT                   (24U)                                               /**< ADC0_SC2.TRGSTERR Position              */
#define ADC_SC2_TRGSTERR(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_SC2_TRGSTERR_SHIFT))&ADC_SC2_TRGSTERR_MASK) /**< ADC0_SC2.TRGSTERR Field                 */
/** @} */

/** @name SC3 - Status and Control Register 3 */ /** @{ */
#define ADC_SC3_AVGS_MASK                        (0x3U)                                              /**< ADC0_SC3.AVGS Mask                      */
#define ADC_SC3_AVGS_SHIFT                       (0U)                                                /**< ADC0_SC3.AVGS Position                  */
#define ADC_SC3_AVGS(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC3_AVGS_SHIFT))&ADC_SC3_AVGS_MASK) /**< ADC0_SC3.AVGS Field                     */
#define ADC_SC3_AVGE_MASK                        (0x4U)                                              /**< ADC0_SC3.AVGE Mask                      */
#define ADC_SC3_AVGE_SHIFT                       (2U)                                                /**< ADC0_SC3.AVGE Position                  */
#define ADC_SC3_AVGE(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC3_AVGE_SHIFT))&ADC_SC3_AVGE_MASK) /**< ADC0_SC3.AVGE Field                     */
#define ADC_SC3_ADCO_MASK                        (0x8U)                                              /**< ADC0_SC3.ADCO Mask                      */
#define ADC_SC3_ADCO_SHIFT                       (3U)                                                /**< ADC0_SC3.ADCO Position                  */
#define ADC_SC3_ADCO(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC3_ADCO_SHIFT))&ADC_SC3_ADCO_MASK) /**< ADC0_SC3.ADCO Field                     */
#define ADC_SC3_CAL_MASK                         (0x80U)                                             /**< ADC0_SC3.CAL Mask                       */
#define ADC_SC3_CAL_SHIFT                        (7U)                                                /**< ADC0_SC3.CAL Position                   */
#define ADC_SC3_CAL(x)                           (((uint32_t)(((uint32_t)(x))<<ADC_SC3_CAL_SHIFT))&ADC_SC3_CAL_MASK) /**< ADC0_SC3.CAL Field                      */
/** @} */

/** @name BASE_OFS - BASE Offset Register */ /** @{ */
#define ADC_BASE_OFS_BA_OFS_MASK                 (0xFFU)                                             /**< ADC0_BASE_OFS.BA_OFS Mask               */
#define ADC_BASE_OFS_BA_OFS_SHIFT                (0U)                                                /**< ADC0_BASE_OFS.BA_OFS Position           */
#define ADC_BASE_OFS_BA_OFS(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_BASE_OFS_BA_OFS_SHIFT))&ADC_BASE_OFS_BA_OFS_MASK) /**< ADC0_BASE_OFS.BA_OFS Field              */
/** @} */

/** @name OFS - Offset Correction Register */ /** @{ */
#define ADC_OFS_OFS_MASK                         (0xFFFFU)                                           /**< ADC0_OFS.OFS Mask                       */
#define ADC_OFS_OFS_SHIFT                        (0U)                                                /**< ADC0_OFS.OFS Position                   */
#define ADC_OFS_OFS(x)                           (((uint32_t)(((uint32_t)(x))<<ADC_OFS_OFS_SHIFT))&ADC_OFS_OFS_MASK) /**< ADC0_OFS.OFS Field                      */
/** @} */

/** @name USR_OFS - USER Offset Correction Register */ /** @{ */
#define ADC_USR_OFS_USR_OFS_MASK                 (0xFFU)                                             /**< ADC0_USR_OFS.USR_OFS Mask               */
#define ADC_USR_OFS_USR_OFS_SHIFT                (0U)                                                /**< ADC0_USR_OFS.USR_OFS Position           */
#define ADC_USR_OFS_USR_OFS(x)                   (((uint32_t)(((uint32_t)(x))<<ADC_USR_OFS_USR_OFS_SHIFT))&ADC_USR_OFS_USR_OFS_MASK) /**< ADC0_USR_OFS.USR_OFS Field              */
/** @} */

/** @name XOFS - X Offset Correction Register */ /** @{ */
#define ADC_XOFS_XOFS_MASK                       (0x3FU)                                             /**< ADC0_XOFS.XOFS Mask                     */
#define ADC_XOFS_XOFS_SHIFT                      (0U)                                                /**< ADC0_XOFS.XOFS Position                 */
#define ADC_XOFS_XOFS(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_XOFS_XOFS_SHIFT))&ADC_XOFS_XOFS_MASK) /**< ADC0_XOFS.XOFS Field                    */
/** @} */

/** @name YOFS - Y Offset Correction Register */ /** @{ */
#define ADC_YOFS_YOFS_MASK                       (0xFFU)                                             /**< ADC0_YOFS.YOFS Mask                     */
#define ADC_YOFS_YOFS_SHIFT                      (0U)                                                /**< ADC0_YOFS.YOFS Position                 */
#define ADC_YOFS_YOFS(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_YOFS_YOFS_SHIFT))&ADC_YOFS_YOFS_MASK) /**< ADC0_YOFS.YOFS Field                    */
/** @} */

/** @name G - Gain Register */ /** @{ */
#define ADC_G_G_MASK                             (0x7FFU)                                            /**< ADC0_G.G Mask                           */
#define ADC_G_G_SHIFT                            (0U)                                                /**< ADC0_G.G Position                       */
#define ADC_G_G(x)                               (((uint32_t)(((uint32_t)(x))<<ADC_G_G_SHIFT))&ADC_G_G_MASK) /**< ADC0_G.G Field                          */
/** @} */

/** @name UG - User Gain Register */ /** @{ */
#define ADC_UG_UG_MASK                           (0x3FFU)                                            /**< ADC0_UG.UG Mask                         */
#define ADC_UG_UG_SHIFT                          (0U)                                                /**< ADC0_UG.UG Position                     */
#define ADC_UG_UG(x)                             (((uint32_t)(((uint32_t)(x))<<ADC_UG_UG_SHIFT))&ADC_UG_UG_MASK) /**< ADC0_UG.UG Field                        */
/** @} */

/** @name CLPS - General Calibration Value Register S */ /** @{ */
#define ADC_CLPS_CLPS_MASK                       (0x7FU)                                             /**< ADC0_CLPS.CLPS Mask                     */
#define ADC_CLPS_CLPS_SHIFT                      (0U)                                                /**< ADC0_CLPS.CLPS Position                 */
#define ADC_CLPS_CLPS(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLPS_CLPS_SHIFT))&ADC_CLPS_CLPS_MASK) /**< ADC0_CLPS.CLPS Field                    */
/** @} */

/** @name CLP3 - Plus-Side General Calibration Value Register 3 */ /** @{ */
#define ADC_CLP3_CLP3_MASK                       (0x3FFU)                                            /**< ADC0_CLP3.CLP3 Mask                     */
#define ADC_CLP3_CLP3_SHIFT                      (0U)                                                /**< ADC0_CLP3.CLP3 Position                 */
#define ADC_CLP3_CLP3(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLP3_CLP3_SHIFT))&ADC_CLP3_CLP3_MASK) /**< ADC0_CLP3.CLP3 Field                    */
/** @} */

/** @name CLP2 - Plus-Side General Calibration Value Register 2 */ /** @{ */
#define ADC_CLP2_CLP2_MASK                       (0x3FFU)                                            /**< ADC0_CLP2.CLP2 Mask                     */
#define ADC_CLP2_CLP2_SHIFT                      (0U)                                                /**< ADC0_CLP2.CLP2 Position                 */
#define ADC_CLP2_CLP2(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLP2_CLP2_SHIFT))&ADC_CLP2_CLP2_MASK) /**< ADC0_CLP2.CLP2 Field                    */
/** @} */

/** @name CLP1 - Plus-Side General Calibration Value Register 1 */ /** @{ */
#define ADC_CLP1_CLP1_MASK                       (0x1FFU)                                            /**< ADC0_CLP1.CLP1 Mask                     */
#define ADC_CLP1_CLP1_SHIFT                      (0U)                                                /**< ADC0_CLP1.CLP1 Position                 */
#define ADC_CLP1_CLP1(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLP1_CLP1_SHIFT))&ADC_CLP1_CLP1_MASK) /**< ADC0_CLP1.CLP1 Field                    */
/** @} */

/** @name CLP0 - Plus-Side General Calibration Value Register 0 */ /** @{ */
#define ADC_CLP0_CLP0_MASK                       (0xFFU)                                             /**< ADC0_CLP0.CLP0 Mask                     */
#define ADC_CLP0_CLP0_SHIFT                      (0U)                                                /**< ADC0_CLP0.CLP0 Position                 */
#define ADC_CLP0_CLP0(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLP0_CLP0_SHIFT))&ADC_CLP0_CLP0_MASK) /**< ADC0_CLP0.CLP0 Field                    */
/** @} */

/** @name CLPX - Plus-Side General Calibration Value Register X */ /** @{ */
#define ADC_CLPX_CLPX_MASK                       (0x7FU)                                             /**< ADC0_CLPX.CLPX Mask                     */
#define ADC_CLPX_CLPX_SHIFT                      (0U)                                                /**< ADC0_CLPX.CLPX Position                 */
#define ADC_CLPX_CLPX(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLPX_CLPX_SHIFT))&ADC_CLPX_CLPX_MASK) /**< ADC0_CLPX.CLPX Field                    */
/** @} */

/** @name CLP9 - Plus-Side General Calibration Value Register 9 */ /** @{ */
#define ADC_CLP9_CLP9_MASK                       (0x7FU)                                             /**< ADC0_CLP9.CLP9 Mask                     */
#define ADC_CLP9_CLP9_SHIFT                      (0U)                                                /**< ADC0_CLP9.CLP9 Position                 */
#define ADC_CLP9_CLP9(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLP9_CLP9_SHIFT))&ADC_CLP9_CLP9_MASK) /**< ADC0_CLP9.CLP9 Field                    */
/** @} */

/** @name CLPS_OFS - General Calibration Offset Value Register S */ /** @{ */
#define ADC_CLPS_OFS_CLPS_OFS_MASK               (0xFU)                                              /**< ADC0_CLPS_OFS.CLPS_OFS Mask             */
#define ADC_CLPS_OFS_CLPS_OFS_SHIFT              (0U)                                                /**< ADC0_CLPS_OFS.CLPS_OFS Position         */
#define ADC_CLPS_OFS_CLPS_OFS(x)                 (((uint32_t)(((uint32_t)(x))<<ADC_CLPS_OFS_CLPS_OFS_SHIFT))&ADC_CLPS_OFS_CLPS_OFS_MASK) /**< ADC0_CLPS_OFS.CLPS_OFS Field            */
/** @} */

/** @name CLP3_OFS - Plus-Side General Calibration Offset Value Register 3 */ /** @{ */
#define ADC_CLP3_OFS_CLP3_OFS_MASK               (0xFU)                                              /**< ADC0_CLP3_OFS.CLP3_OFS Mask             */
#define ADC_CLP3_OFS_CLP3_OFS_SHIFT              (0U)                                                /**< ADC0_CLP3_OFS.CLP3_OFS Position         */
#define ADC_CLP3_OFS_CLP3_OFS(x)                 (((uint32_t)(((uint32_t)(x))<<ADC_CLP3_OFS_CLP3_OFS_SHIFT))&ADC_CLP3_OFS_CLP3_OFS_MASK) /**< ADC0_CLP3_OFS.CLP3_OFS Field            */
/** @} */

/** @name CLP2_OFS - Plus-Side General Calibration Offset Value Register 2 */ /** @{ */
#define ADC_CLP2_OFS_CLP2_OFS_MASK               (0xFU)                                              /**< ADC0_CLP2_OFS.CLP2_OFS Mask             */
#define ADC_CLP2_OFS_CLP2_OFS_SHIFT              (0U)                                                /**< ADC0_CLP2_OFS.CLP2_OFS Position         */
#define ADC_CLP2_OFS_CLP2_OFS(x)                 (((uint32_t)(((uint32_t)(x))<<ADC_CLP2_OFS_CLP2_OFS_SHIFT))&ADC_CLP2_OFS_CLP2_OFS_MASK) /**< ADC0_CLP2_OFS.CLP2_OFS Field            */
/** @} */

/** @name CLP1_OFS - Plus-Side General Calibration Offset Value Register 1 */ /** @{ */
#define ADC_CLP1_OFS_CLP1_OFS_MASK               (0xFU)                                              /**< ADC0_CLP1_OFS.CLP1_OFS Mask             */
#define ADC_CLP1_OFS_CLP1_OFS_SHIFT              (0U)                                                /**< ADC0_CLP1_OFS.CLP1_OFS Position         */
#define ADC_CLP1_OFS_CLP1_OFS(x)                 (((uint32_t)(((uint32_t)(x))<<ADC_CLP1_OFS_CLP1_OFS_SHIFT))&ADC_CLP1_OFS_CLP1_OFS_MASK) /**< ADC0_CLP1_OFS.CLP1_OFS Field            */
/** @} */

/** @name CLP0_OFS - Plus-Side General Calibration Offset Value Register 0 */ /** @{ */
#define ADC_CLP0_OFS_CLP0_OFS_MASK               (0xFU)                                              /**< ADC0_CLP0_OFS.CLP0_OFS Mask             */
#define ADC_CLP0_OFS_CLP0_OFS_SHIFT              (0U)                                                /**< ADC0_CLP0_OFS.CLP0_OFS Position         */
#define ADC_CLP0_OFS_CLP0_OFS(x)                 (((uint32_t)(((uint32_t)(x))<<ADC_CLP0_OFS_CLP0_OFS_SHIFT))&ADC_CLP0_OFS_CLP0_OFS_MASK) /**< ADC0_CLP0_OFS.CLP0_OFS Field            */
/** @} */

/** @name CLPX_OFS - Plus-Side General Calibration Offset Value Register X */ /** @{ */
#define ADC_CLPX_OFS_CLPX_OFS_MASK               (0xFFFU)                                            /**< ADC0_CLPX_OFS.CLPX_OFS Mask             */
#define ADC_CLPX_OFS_CLPX_OFS_SHIFT              (0U)                                                /**< ADC0_CLPX_OFS.CLPX_OFS Position         */
#define ADC_CLPX_OFS_CLPX_OFS(x)                 (((uint32_t)(((uint32_t)(x))<<ADC_CLPX_OFS_CLPX_OFS_SHIFT))&ADC_CLPX_OFS_CLPX_OFS_MASK) /**< ADC0_CLPX_OFS.CLPX_OFS Field            */
/** @} */

/** @name CLP9_OFS - Plus-Side General Calibration Offset Value Register 9 */ /** @{ */
#define ADC_CLP9_OFS_CLP9_OFS_MASK               (0xFFFU)                                            /**< ADC0_CLP9_OFS.CLP9_OFS Mask             */
#define ADC_CLP9_OFS_CLP9_OFS_SHIFT              (0U)                                                /**< ADC0_CLP9_OFS.CLP9_OFS Position         */
#define ADC_CLP9_OFS_CLP9_OFS(x)                 (((uint32_t)(((uint32_t)(x))<<ADC_CLP9_OFS_CLP9_OFS_SHIFT))&ADC_CLP9_OFS_CLP9_OFS_MASK) /**< ADC0_CLP9_OFS.CLP9_OFS Field            */
/** @} */

/** @} */ /* End group ADC_Register_Masks_GROUP */


/* ADC0 - Peripheral instance base addresses */
#define ADC0_BasePtr                   0x4003B000UL //!< Peripheral base address
#define ADC0                           ((ADC_Type *) ADC0_BasePtr) //!< Freescale base pointer
#define ADC0_BASE_PTR                  (ADC0) //!< Freescale style base pointer
#define ADC0_IRQS { ADC0_IRQn,  }


/** @} */ /* End group ADC_Peripheral_access_layer_GROUP */


/** @brief C Struct for ADC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup ADC_Peripheral_access_layer_GROUP ADC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           ADC1 (derived from ADC0)             ================ */
/* ================================================================================ */

/**
 * @brief Analog-to-Digital Converter
 */

/* ADC1 - Peripheral instance base addresses */
#define ADC1_BasePtr                   0x40027000UL //!< Peripheral base address
#define ADC1                           ((ADC_Type *) ADC1_BasePtr) //!< Freescale base pointer
#define ADC1_BASE_PTR                  (ADC1) //!< Freescale style base pointer
#define ADC1_IRQS { ADC1_IRQn,  }


/** @} */ /* End group ADC_Peripheral_access_layer_GROUP */


/** @brief C Struct for AIPS */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup AIPS_Peripheral_access_layer_GROUP AIPS Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           AIPS0 (file:AIPS0_Lite_8Mx8Px12OP)       ================ */
/* ================================================================================ */

/**
 * @brief AIPS-Lite Bridge
 */
/**
 * @struct AIPS_Type
 * @brief  C Struct allowing access to AIPS registers
 */
typedef struct AIPS_Type {
   __IO uint32_t  MPRA;                         /**< 0000: Master Privilege Register A                                  */
        uint8_t   RESERVED_0[28];               /**< 0004: 0x1C bytes                                                   */
   __IO uint32_t  PACR[8];                      /**< 0020: Peripheral Access Control Register                           */
   __IO uint32_t  OPACR[12];                    /**< 0040: Off-Platform Peripheral Access Control Register              */
} AIPS_Type;


/** @brief Register Masks for AIPS */

/* -------------------------------------------------------------------------------- */
/* -----------     'AIPS0' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup AIPS_Register_Masks_GROUP AIPS Register Masks */
/** @{ */

/** @name MPRA - Master Privilege Register A */ /** @{ */
#define AIPS_MPRA_MPL7_MASK                      (0x1U)                                              /**< AIPS0_MPRA.MPL7 Mask                    */
#define AIPS_MPRA_MPL7_SHIFT                     (0U)                                                /**< AIPS0_MPRA.MPL7 Position                */
#define AIPS_MPRA_MPL7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL7_SHIFT))&AIPS_MPRA_MPL7_MASK) /**< AIPS0_MPRA.MPL7 Field                   */
#define AIPS_MPRA_MTW7_MASK                      (0x2U)                                              /**< AIPS0_MPRA.MTW7 Mask                    */
#define AIPS_MPRA_MTW7_SHIFT                     (1U)                                                /**< AIPS0_MPRA.MTW7 Position                */
#define AIPS_MPRA_MTW7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW7_SHIFT))&AIPS_MPRA_MTW7_MASK) /**< AIPS0_MPRA.MTW7 Field                   */
#define AIPS_MPRA_MTR7_MASK                      (0x4U)                                              /**< AIPS0_MPRA.MTR7 Mask                    */
#define AIPS_MPRA_MTR7_SHIFT                     (2U)                                                /**< AIPS0_MPRA.MTR7 Position                */
#define AIPS_MPRA_MTR7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR7_SHIFT))&AIPS_MPRA_MTR7_MASK) /**< AIPS0_MPRA.MTR7 Field                   */
#define AIPS_MPRA_MPL6_MASK                      (0x10U)                                             /**< AIPS0_MPRA.MPL6 Mask                    */
#define AIPS_MPRA_MPL6_SHIFT                     (4U)                                                /**< AIPS0_MPRA.MPL6 Position                */
#define AIPS_MPRA_MPL6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL6_SHIFT))&AIPS_MPRA_MPL6_MASK) /**< AIPS0_MPRA.MPL6 Field                   */
#define AIPS_MPRA_MTW6_MASK                      (0x20U)                                             /**< AIPS0_MPRA.MTW6 Mask                    */
#define AIPS_MPRA_MTW6_SHIFT                     (5U)                                                /**< AIPS0_MPRA.MTW6 Position                */
#define AIPS_MPRA_MTW6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW6_SHIFT))&AIPS_MPRA_MTW6_MASK) /**< AIPS0_MPRA.MTW6 Field                   */
#define AIPS_MPRA_MTR6_MASK                      (0x40U)                                             /**< AIPS0_MPRA.MTR6 Mask                    */
#define AIPS_MPRA_MTR6_SHIFT                     (6U)                                                /**< AIPS0_MPRA.MTR6 Position                */
#define AIPS_MPRA_MTR6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR6_SHIFT))&AIPS_MPRA_MTR6_MASK) /**< AIPS0_MPRA.MTR6 Field                   */
#define AIPS_MPRA_MPL5_MASK                      (0x100U)                                            /**< AIPS0_MPRA.MPL5 Mask                    */
#define AIPS_MPRA_MPL5_SHIFT                     (8U)                                                /**< AIPS0_MPRA.MPL5 Position                */
#define AIPS_MPRA_MPL5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL5_SHIFT))&AIPS_MPRA_MPL5_MASK) /**< AIPS0_MPRA.MPL5 Field                   */
#define AIPS_MPRA_MTW5_MASK                      (0x200U)                                            /**< AIPS0_MPRA.MTW5 Mask                    */
#define AIPS_MPRA_MTW5_SHIFT                     (9U)                                                /**< AIPS0_MPRA.MTW5 Position                */
#define AIPS_MPRA_MTW5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW5_SHIFT))&AIPS_MPRA_MTW5_MASK) /**< AIPS0_MPRA.MTW5 Field                   */
#define AIPS_MPRA_MTR5_MASK                      (0x400U)                                            /**< AIPS0_MPRA.MTR5 Mask                    */
#define AIPS_MPRA_MTR5_SHIFT                     (10U)                                               /**< AIPS0_MPRA.MTR5 Position                */
#define AIPS_MPRA_MTR5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR5_SHIFT))&AIPS_MPRA_MTR5_MASK) /**< AIPS0_MPRA.MTR5 Field                   */
#define AIPS_MPRA_MPL4_MASK                      (0x1000U)                                           /**< AIPS0_MPRA.MPL4 Mask                    */
#define AIPS_MPRA_MPL4_SHIFT                     (12U)                                               /**< AIPS0_MPRA.MPL4 Position                */
#define AIPS_MPRA_MPL4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL4_SHIFT))&AIPS_MPRA_MPL4_MASK) /**< AIPS0_MPRA.MPL4 Field                   */
#define AIPS_MPRA_MTW4_MASK                      (0x2000U)                                           /**< AIPS0_MPRA.MTW4 Mask                    */
#define AIPS_MPRA_MTW4_SHIFT                     (13U)                                               /**< AIPS0_MPRA.MTW4 Position                */
#define AIPS_MPRA_MTW4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW4_SHIFT))&AIPS_MPRA_MTW4_MASK) /**< AIPS0_MPRA.MTW4 Field                   */
#define AIPS_MPRA_MTR4_MASK                      (0x4000U)                                           /**< AIPS0_MPRA.MTR4 Mask                    */
#define AIPS_MPRA_MTR4_SHIFT                     (14U)                                               /**< AIPS0_MPRA.MTR4 Position                */
#define AIPS_MPRA_MTR4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR4_SHIFT))&AIPS_MPRA_MTR4_MASK) /**< AIPS0_MPRA.MTR4 Field                   */
#define AIPS_MPRA_MPL3_MASK                      (0x10000U)                                          /**< AIPS0_MPRA.MPL3 Mask                    */
#define AIPS_MPRA_MPL3_SHIFT                     (16U)                                               /**< AIPS0_MPRA.MPL3 Position                */
#define AIPS_MPRA_MPL3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL3_SHIFT))&AIPS_MPRA_MPL3_MASK) /**< AIPS0_MPRA.MPL3 Field                   */
#define AIPS_MPRA_MTW3_MASK                      (0x20000U)                                          /**< AIPS0_MPRA.MTW3 Mask                    */
#define AIPS_MPRA_MTW3_SHIFT                     (17U)                                               /**< AIPS0_MPRA.MTW3 Position                */
#define AIPS_MPRA_MTW3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW3_SHIFT))&AIPS_MPRA_MTW3_MASK) /**< AIPS0_MPRA.MTW3 Field                   */
#define AIPS_MPRA_MTR3_MASK                      (0x40000U)                                          /**< AIPS0_MPRA.MTR3 Mask                    */
#define AIPS_MPRA_MTR3_SHIFT                     (18U)                                               /**< AIPS0_MPRA.MTR3 Position                */
#define AIPS_MPRA_MTR3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR3_SHIFT))&AIPS_MPRA_MTR3_MASK) /**< AIPS0_MPRA.MTR3 Field                   */
#define AIPS_MPRA_MPL2_MASK                      (0x100000U)                                         /**< AIPS0_MPRA.MPL2 Mask                    */
#define AIPS_MPRA_MPL2_SHIFT                     (20U)                                               /**< AIPS0_MPRA.MPL2 Position                */
#define AIPS_MPRA_MPL2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL2_SHIFT))&AIPS_MPRA_MPL2_MASK) /**< AIPS0_MPRA.MPL2 Field                   */
#define AIPS_MPRA_MTW2_MASK                      (0x200000U)                                         /**< AIPS0_MPRA.MTW2 Mask                    */
#define AIPS_MPRA_MTW2_SHIFT                     (21U)                                               /**< AIPS0_MPRA.MTW2 Position                */
#define AIPS_MPRA_MTW2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW2_SHIFT))&AIPS_MPRA_MTW2_MASK) /**< AIPS0_MPRA.MTW2 Field                   */
#define AIPS_MPRA_MTR2_MASK                      (0x400000U)                                         /**< AIPS0_MPRA.MTR2 Mask                    */
#define AIPS_MPRA_MTR2_SHIFT                     (22U)                                               /**< AIPS0_MPRA.MTR2 Position                */
#define AIPS_MPRA_MTR2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR2_SHIFT))&AIPS_MPRA_MTR2_MASK) /**< AIPS0_MPRA.MTR2 Field                   */
#define AIPS_MPRA_MPL1_MASK                      (0x1000000U)                                        /**< AIPS0_MPRA.MPL1 Mask                    */
#define AIPS_MPRA_MPL1_SHIFT                     (24U)                                               /**< AIPS0_MPRA.MPL1 Position                */
#define AIPS_MPRA_MPL1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL1_SHIFT))&AIPS_MPRA_MPL1_MASK) /**< AIPS0_MPRA.MPL1 Field                   */
#define AIPS_MPRA_MTW1_MASK                      (0x2000000U)                                        /**< AIPS0_MPRA.MTW1 Mask                    */
#define AIPS_MPRA_MTW1_SHIFT                     (25U)                                               /**< AIPS0_MPRA.MTW1 Position                */
#define AIPS_MPRA_MTW1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW1_SHIFT))&AIPS_MPRA_MTW1_MASK) /**< AIPS0_MPRA.MTW1 Field                   */
#define AIPS_MPRA_MTR1_MASK                      (0x4000000U)                                        /**< AIPS0_MPRA.MTR1 Mask                    */
#define AIPS_MPRA_MTR1_SHIFT                     (26U)                                               /**< AIPS0_MPRA.MTR1 Position                */
#define AIPS_MPRA_MTR1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR1_SHIFT))&AIPS_MPRA_MTR1_MASK) /**< AIPS0_MPRA.MTR1 Field                   */
#define AIPS_MPRA_MPL0_MASK                      (0x10000000U)                                       /**< AIPS0_MPRA.MPL0 Mask                    */
#define AIPS_MPRA_MPL0_SHIFT                     (28U)                                               /**< AIPS0_MPRA.MPL0 Position                */
#define AIPS_MPRA_MPL0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL0_SHIFT))&AIPS_MPRA_MPL0_MASK) /**< AIPS0_MPRA.MPL0 Field                   */
#define AIPS_MPRA_MTW0_MASK                      (0x20000000U)                                       /**< AIPS0_MPRA.MTW0 Mask                    */
#define AIPS_MPRA_MTW0_SHIFT                     (29U)                                               /**< AIPS0_MPRA.MTW0 Position                */
#define AIPS_MPRA_MTW0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW0_SHIFT))&AIPS_MPRA_MTW0_MASK) /**< AIPS0_MPRA.MTW0 Field                   */
#define AIPS_MPRA_MTR0_MASK                      (0x40000000U)                                       /**< AIPS0_MPRA.MTR0 Mask                    */
#define AIPS_MPRA_MTR0_SHIFT                     (30U)                                               /**< AIPS0_MPRA.MTR0 Position                */
#define AIPS_MPRA_MTR0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR0_SHIFT))&AIPS_MPRA_MTR0_MASK) /**< AIPS0_MPRA.MTR0 Field                   */
/** @} */

/** @name PACR - Peripheral Access Control Register %s */ /** @{ */
#define AIPS_PACR_TP7_MASK                       (0x1U)                                              /**< AIPS0_PACR.TP7 Mask                     */
#define AIPS_PACR_TP7_SHIFT                      (0U)                                                /**< AIPS0_PACR.TP7 Position                 */
#define AIPS_PACR_TP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP7_SHIFT))&AIPS_PACR_TP7_MASK) /**< AIPS0_PACR.TP7 Field                    */
#define AIPS_PACR_WP7_MASK                       (0x2U)                                              /**< AIPS0_PACR.WP7 Mask                     */
#define AIPS_PACR_WP7_SHIFT                      (1U)                                                /**< AIPS0_PACR.WP7 Position                 */
#define AIPS_PACR_WP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP7_SHIFT))&AIPS_PACR_WP7_MASK) /**< AIPS0_PACR.WP7 Field                    */
#define AIPS_PACR_SP7_MASK                       (0x4U)                                              /**< AIPS0_PACR.SP7 Mask                     */
#define AIPS_PACR_SP7_SHIFT                      (2U)                                                /**< AIPS0_PACR.SP7 Position                 */
#define AIPS_PACR_SP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP7_SHIFT))&AIPS_PACR_SP7_MASK) /**< AIPS0_PACR.SP7 Field                    */
#define AIPS_PACR_TP6_MASK                       (0x10U)                                             /**< AIPS0_PACR.TP6 Mask                     */
#define AIPS_PACR_TP6_SHIFT                      (4U)                                                /**< AIPS0_PACR.TP6 Position                 */
#define AIPS_PACR_TP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP6_SHIFT))&AIPS_PACR_TP6_MASK) /**< AIPS0_PACR.TP6 Field                    */
#define AIPS_PACR_WP6_MASK                       (0x20U)                                             /**< AIPS0_PACR.WP6 Mask                     */
#define AIPS_PACR_WP6_SHIFT                      (5U)                                                /**< AIPS0_PACR.WP6 Position                 */
#define AIPS_PACR_WP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP6_SHIFT))&AIPS_PACR_WP6_MASK) /**< AIPS0_PACR.WP6 Field                    */
#define AIPS_PACR_SP6_MASK                       (0x40U)                                             /**< AIPS0_PACR.SP6 Mask                     */
#define AIPS_PACR_SP6_SHIFT                      (6U)                                                /**< AIPS0_PACR.SP6 Position                 */
#define AIPS_PACR_SP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP6_SHIFT))&AIPS_PACR_SP6_MASK) /**< AIPS0_PACR.SP6 Field                    */
#define AIPS_PACR_TP5_MASK                       (0x100U)                                            /**< AIPS0_PACR.TP5 Mask                     */
#define AIPS_PACR_TP5_SHIFT                      (8U)                                                /**< AIPS0_PACR.TP5 Position                 */
#define AIPS_PACR_TP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP5_SHIFT))&AIPS_PACR_TP5_MASK) /**< AIPS0_PACR.TP5 Field                    */
#define AIPS_PACR_WP5_MASK                       (0x200U)                                            /**< AIPS0_PACR.WP5 Mask                     */
#define AIPS_PACR_WP5_SHIFT                      (9U)                                                /**< AIPS0_PACR.WP5 Position                 */
#define AIPS_PACR_WP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP5_SHIFT))&AIPS_PACR_WP5_MASK) /**< AIPS0_PACR.WP5 Field                    */
#define AIPS_PACR_SP5_MASK                       (0x400U)                                            /**< AIPS0_PACR.SP5 Mask                     */
#define AIPS_PACR_SP5_SHIFT                      (10U)                                               /**< AIPS0_PACR.SP5 Position                 */
#define AIPS_PACR_SP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP5_SHIFT))&AIPS_PACR_SP5_MASK) /**< AIPS0_PACR.SP5 Field                    */
#define AIPS_PACR_TP4_MASK                       (0x1000U)                                           /**< AIPS0_PACR.TP4 Mask                     */
#define AIPS_PACR_TP4_SHIFT                      (12U)                                               /**< AIPS0_PACR.TP4 Position                 */
#define AIPS_PACR_TP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP4_SHIFT))&AIPS_PACR_TP4_MASK) /**< AIPS0_PACR.TP4 Field                    */
#define AIPS_PACR_WP4_MASK                       (0x2000U)                                           /**< AIPS0_PACR.WP4 Mask                     */
#define AIPS_PACR_WP4_SHIFT                      (13U)                                               /**< AIPS0_PACR.WP4 Position                 */
#define AIPS_PACR_WP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP4_SHIFT))&AIPS_PACR_WP4_MASK) /**< AIPS0_PACR.WP4 Field                    */
#define AIPS_PACR_SP4_MASK                       (0x4000U)                                           /**< AIPS0_PACR.SP4 Mask                     */
#define AIPS_PACR_SP4_SHIFT                      (14U)                                               /**< AIPS0_PACR.SP4 Position                 */
#define AIPS_PACR_SP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP4_SHIFT))&AIPS_PACR_SP4_MASK) /**< AIPS0_PACR.SP4 Field                    */
#define AIPS_PACR_TP3_MASK                       (0x10000U)                                          /**< AIPS0_PACR.TP3 Mask                     */
#define AIPS_PACR_TP3_SHIFT                      (16U)                                               /**< AIPS0_PACR.TP3 Position                 */
#define AIPS_PACR_TP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP3_SHIFT))&AIPS_PACR_TP3_MASK) /**< AIPS0_PACR.TP3 Field                    */
#define AIPS_PACR_WP3_MASK                       (0x20000U)                                          /**< AIPS0_PACR.WP3 Mask                     */
#define AIPS_PACR_WP3_SHIFT                      (17U)                                               /**< AIPS0_PACR.WP3 Position                 */
#define AIPS_PACR_WP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP3_SHIFT))&AIPS_PACR_WP3_MASK) /**< AIPS0_PACR.WP3 Field                    */
#define AIPS_PACR_SP3_MASK                       (0x40000U)                                          /**< AIPS0_PACR.SP3 Mask                     */
#define AIPS_PACR_SP3_SHIFT                      (18U)                                               /**< AIPS0_PACR.SP3 Position                 */
#define AIPS_PACR_SP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP3_SHIFT))&AIPS_PACR_SP3_MASK) /**< AIPS0_PACR.SP3 Field                    */
#define AIPS_PACR_TP2_MASK                       (0x100000U)                                         /**< AIPS0_PACR.TP2 Mask                     */
#define AIPS_PACR_TP2_SHIFT                      (20U)                                               /**< AIPS0_PACR.TP2 Position                 */
#define AIPS_PACR_TP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP2_SHIFT))&AIPS_PACR_TP2_MASK) /**< AIPS0_PACR.TP2 Field                    */
#define AIPS_PACR_WP2_MASK                       (0x200000U)                                         /**< AIPS0_PACR.WP2 Mask                     */
#define AIPS_PACR_WP2_SHIFT                      (21U)                                               /**< AIPS0_PACR.WP2 Position                 */
#define AIPS_PACR_WP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP2_SHIFT))&AIPS_PACR_WP2_MASK) /**< AIPS0_PACR.WP2 Field                    */
#define AIPS_PACR_SP2_MASK                       (0x400000U)                                         /**< AIPS0_PACR.SP2 Mask                     */
#define AIPS_PACR_SP2_SHIFT                      (22U)                                               /**< AIPS0_PACR.SP2 Position                 */
#define AIPS_PACR_SP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP2_SHIFT))&AIPS_PACR_SP2_MASK) /**< AIPS0_PACR.SP2 Field                    */
#define AIPS_PACR_TP1_MASK                       (0x1000000U)                                        /**< AIPS0_PACR.TP1 Mask                     */
#define AIPS_PACR_TP1_SHIFT                      (24U)                                               /**< AIPS0_PACR.TP1 Position                 */
#define AIPS_PACR_TP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP1_SHIFT))&AIPS_PACR_TP1_MASK) /**< AIPS0_PACR.TP1 Field                    */
#define AIPS_PACR_WP1_MASK                       (0x2000000U)                                        /**< AIPS0_PACR.WP1 Mask                     */
#define AIPS_PACR_WP1_SHIFT                      (25U)                                               /**< AIPS0_PACR.WP1 Position                 */
#define AIPS_PACR_WP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP1_SHIFT))&AIPS_PACR_WP1_MASK) /**< AIPS0_PACR.WP1 Field                    */
#define AIPS_PACR_SP1_MASK                       (0x4000000U)                                        /**< AIPS0_PACR.SP1 Mask                     */
#define AIPS_PACR_SP1_SHIFT                      (26U)                                               /**< AIPS0_PACR.SP1 Position                 */
#define AIPS_PACR_SP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP1_SHIFT))&AIPS_PACR_SP1_MASK) /**< AIPS0_PACR.SP1 Field                    */
#define AIPS_PACR_TP0_MASK                       (0x10000000U)                                       /**< AIPS0_PACR.TP0 Mask                     */
#define AIPS_PACR_TP0_SHIFT                      (28U)                                               /**< AIPS0_PACR.TP0 Position                 */
#define AIPS_PACR_TP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP0_SHIFT))&AIPS_PACR_TP0_MASK) /**< AIPS0_PACR.TP0 Field                    */
#define AIPS_PACR_WP0_MASK                       (0x20000000U)                                       /**< AIPS0_PACR.WP0 Mask                     */
#define AIPS_PACR_WP0_SHIFT                      (29U)                                               /**< AIPS0_PACR.WP0 Position                 */
#define AIPS_PACR_WP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP0_SHIFT))&AIPS_PACR_WP0_MASK) /**< AIPS0_PACR.WP0 Field                    */
#define AIPS_PACR_SP0_MASK                       (0x40000000U)                                       /**< AIPS0_PACR.SP0 Mask                     */
#define AIPS_PACR_SP0_SHIFT                      (30U)                                               /**< AIPS0_PACR.SP0 Position                 */
#define AIPS_PACR_SP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP0_SHIFT))&AIPS_PACR_SP0_MASK) /**< AIPS0_PACR.SP0 Field                    */
/** @} */

/** @name OPACR - Off-Platform Peripheral Access Control Register %s */ /** @{ */
#define AIPS_OPACR_TP7_MASK                      (0x1U)                                              /**< AIPS0_OPACR.TP7 Mask                    */
#define AIPS_OPACR_TP7_SHIFT                     (0U)                                                /**< AIPS0_OPACR.TP7 Position                */
#define AIPS_OPACR_TP7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP7_SHIFT))&AIPS_OPACR_TP7_MASK) /**< AIPS0_OPACR.TP7 Field                   */
#define AIPS_OPACR_WP7_MASK                      (0x2U)                                              /**< AIPS0_OPACR.WP7 Mask                    */
#define AIPS_OPACR_WP7_SHIFT                     (1U)                                                /**< AIPS0_OPACR.WP7 Position                */
#define AIPS_OPACR_WP7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP7_SHIFT))&AIPS_OPACR_WP7_MASK) /**< AIPS0_OPACR.WP7 Field                   */
#define AIPS_OPACR_SP7_MASK                      (0x4U)                                              /**< AIPS0_OPACR.SP7 Mask                    */
#define AIPS_OPACR_SP7_SHIFT                     (2U)                                                /**< AIPS0_OPACR.SP7 Position                */
#define AIPS_OPACR_SP7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP7_SHIFT))&AIPS_OPACR_SP7_MASK) /**< AIPS0_OPACR.SP7 Field                   */
#define AIPS_OPACR_TP6_MASK                      (0x10U)                                             /**< AIPS0_OPACR.TP6 Mask                    */
#define AIPS_OPACR_TP6_SHIFT                     (4U)                                                /**< AIPS0_OPACR.TP6 Position                */
#define AIPS_OPACR_TP6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP6_SHIFT))&AIPS_OPACR_TP6_MASK) /**< AIPS0_OPACR.TP6 Field                   */
#define AIPS_OPACR_WP6_MASK                      (0x20U)                                             /**< AIPS0_OPACR.WP6 Mask                    */
#define AIPS_OPACR_WP6_SHIFT                     (5U)                                                /**< AIPS0_OPACR.WP6 Position                */
#define AIPS_OPACR_WP6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP6_SHIFT))&AIPS_OPACR_WP6_MASK) /**< AIPS0_OPACR.WP6 Field                   */
#define AIPS_OPACR_SP6_MASK                      (0x40U)                                             /**< AIPS0_OPACR.SP6 Mask                    */
#define AIPS_OPACR_SP6_SHIFT                     (6U)                                                /**< AIPS0_OPACR.SP6 Position                */
#define AIPS_OPACR_SP6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP6_SHIFT))&AIPS_OPACR_SP6_MASK) /**< AIPS0_OPACR.SP6 Field                   */
#define AIPS_OPACR_TP5_MASK                      (0x100U)                                            /**< AIPS0_OPACR.TP5 Mask                    */
#define AIPS_OPACR_TP5_SHIFT                     (8U)                                                /**< AIPS0_OPACR.TP5 Position                */
#define AIPS_OPACR_TP5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP5_SHIFT))&AIPS_OPACR_TP5_MASK) /**< AIPS0_OPACR.TP5 Field                   */
#define AIPS_OPACR_WP5_MASK                      (0x200U)                                            /**< AIPS0_OPACR.WP5 Mask                    */
#define AIPS_OPACR_WP5_SHIFT                     (9U)                                                /**< AIPS0_OPACR.WP5 Position                */
#define AIPS_OPACR_WP5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP5_SHIFT))&AIPS_OPACR_WP5_MASK) /**< AIPS0_OPACR.WP5 Field                   */
#define AIPS_OPACR_SP5_MASK                      (0x400U)                                            /**< AIPS0_OPACR.SP5 Mask                    */
#define AIPS_OPACR_SP5_SHIFT                     (10U)                                               /**< AIPS0_OPACR.SP5 Position                */
#define AIPS_OPACR_SP5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP5_SHIFT))&AIPS_OPACR_SP5_MASK) /**< AIPS0_OPACR.SP5 Field                   */
#define AIPS_OPACR_TP4_MASK                      (0x1000U)                                           /**< AIPS0_OPACR.TP4 Mask                    */
#define AIPS_OPACR_TP4_SHIFT                     (12U)                                               /**< AIPS0_OPACR.TP4 Position                */
#define AIPS_OPACR_TP4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP4_SHIFT))&AIPS_OPACR_TP4_MASK) /**< AIPS0_OPACR.TP4 Field                   */
#define AIPS_OPACR_WP4_MASK                      (0x2000U)                                           /**< AIPS0_OPACR.WP4 Mask                    */
#define AIPS_OPACR_WP4_SHIFT                     (13U)                                               /**< AIPS0_OPACR.WP4 Position                */
#define AIPS_OPACR_WP4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP4_SHIFT))&AIPS_OPACR_WP4_MASK) /**< AIPS0_OPACR.WP4 Field                   */
#define AIPS_OPACR_SP4_MASK                      (0x4000U)                                           /**< AIPS0_OPACR.SP4 Mask                    */
#define AIPS_OPACR_SP4_SHIFT                     (14U)                                               /**< AIPS0_OPACR.SP4 Position                */
#define AIPS_OPACR_SP4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP4_SHIFT))&AIPS_OPACR_SP4_MASK) /**< AIPS0_OPACR.SP4 Field                   */
#define AIPS_OPACR_TP3_MASK                      (0x10000U)                                          /**< AIPS0_OPACR.TP3 Mask                    */
#define AIPS_OPACR_TP3_SHIFT                     (16U)                                               /**< AIPS0_OPACR.TP3 Position                */
#define AIPS_OPACR_TP3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP3_SHIFT))&AIPS_OPACR_TP3_MASK) /**< AIPS0_OPACR.TP3 Field                   */
#define AIPS_OPACR_WP3_MASK                      (0x20000U)                                          /**< AIPS0_OPACR.WP3 Mask                    */
#define AIPS_OPACR_WP3_SHIFT                     (17U)                                               /**< AIPS0_OPACR.WP3 Position                */
#define AIPS_OPACR_WP3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP3_SHIFT))&AIPS_OPACR_WP3_MASK) /**< AIPS0_OPACR.WP3 Field                   */
#define AIPS_OPACR_SP3_MASK                      (0x40000U)                                          /**< AIPS0_OPACR.SP3 Mask                    */
#define AIPS_OPACR_SP3_SHIFT                     (18U)                                               /**< AIPS0_OPACR.SP3 Position                */
#define AIPS_OPACR_SP3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP3_SHIFT))&AIPS_OPACR_SP3_MASK) /**< AIPS0_OPACR.SP3 Field                   */
#define AIPS_OPACR_TP2_MASK                      (0x100000U)                                         /**< AIPS0_OPACR.TP2 Mask                    */
#define AIPS_OPACR_TP2_SHIFT                     (20U)                                               /**< AIPS0_OPACR.TP2 Position                */
#define AIPS_OPACR_TP2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP2_SHIFT))&AIPS_OPACR_TP2_MASK) /**< AIPS0_OPACR.TP2 Field                   */
#define AIPS_OPACR_WP2_MASK                      (0x200000U)                                         /**< AIPS0_OPACR.WP2 Mask                    */
#define AIPS_OPACR_WP2_SHIFT                     (21U)                                               /**< AIPS0_OPACR.WP2 Position                */
#define AIPS_OPACR_WP2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP2_SHIFT))&AIPS_OPACR_WP2_MASK) /**< AIPS0_OPACR.WP2 Field                   */
#define AIPS_OPACR_SP2_MASK                      (0x400000U)                                         /**< AIPS0_OPACR.SP2 Mask                    */
#define AIPS_OPACR_SP2_SHIFT                     (22U)                                               /**< AIPS0_OPACR.SP2 Position                */
#define AIPS_OPACR_SP2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP2_SHIFT))&AIPS_OPACR_SP2_MASK) /**< AIPS0_OPACR.SP2 Field                   */
#define AIPS_OPACR_TP1_MASK                      (0x1000000U)                                        /**< AIPS0_OPACR.TP1 Mask                    */
#define AIPS_OPACR_TP1_SHIFT                     (24U)                                               /**< AIPS0_OPACR.TP1 Position                */
#define AIPS_OPACR_TP1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP1_SHIFT))&AIPS_OPACR_TP1_MASK) /**< AIPS0_OPACR.TP1 Field                   */
#define AIPS_OPACR_WP1_MASK                      (0x2000000U)                                        /**< AIPS0_OPACR.WP1 Mask                    */
#define AIPS_OPACR_WP1_SHIFT                     (25U)                                               /**< AIPS0_OPACR.WP1 Position                */
#define AIPS_OPACR_WP1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP1_SHIFT))&AIPS_OPACR_WP1_MASK) /**< AIPS0_OPACR.WP1 Field                   */
#define AIPS_OPACR_SP1_MASK                      (0x4000000U)                                        /**< AIPS0_OPACR.SP1 Mask                    */
#define AIPS_OPACR_SP1_SHIFT                     (26U)                                               /**< AIPS0_OPACR.SP1 Position                */
#define AIPS_OPACR_SP1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP1_SHIFT))&AIPS_OPACR_SP1_MASK) /**< AIPS0_OPACR.SP1 Field                   */
#define AIPS_OPACR_TP0_MASK                      (0x10000000U)                                       /**< AIPS0_OPACR.TP0 Mask                    */
#define AIPS_OPACR_TP0_SHIFT                     (28U)                                               /**< AIPS0_OPACR.TP0 Position                */
#define AIPS_OPACR_TP0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_TP0_SHIFT))&AIPS_OPACR_TP0_MASK) /**< AIPS0_OPACR.TP0 Field                   */
#define AIPS_OPACR_WP0_MASK                      (0x20000000U)                                       /**< AIPS0_OPACR.WP0 Mask                    */
#define AIPS_OPACR_WP0_SHIFT                     (29U)                                               /**< AIPS0_OPACR.WP0 Position                */
#define AIPS_OPACR_WP0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_WP0_SHIFT))&AIPS_OPACR_WP0_MASK) /**< AIPS0_OPACR.WP0 Field                   */
#define AIPS_OPACR_SP0_MASK                      (0x40000000U)                                       /**< AIPS0_OPACR.SP0 Mask                    */
#define AIPS_OPACR_SP0_SHIFT                     (30U)                                               /**< AIPS0_OPACR.SP0 Position                */
#define AIPS_OPACR_SP0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_OPACR_SP0_SHIFT))&AIPS_OPACR_SP0_MASK) /**< AIPS0_OPACR.SP0 Field                   */
/** @} */

/** @} */ /* End group AIPS_Register_Masks_GROUP */


/* AIPS0 - Peripheral instance base addresses */
#define AIPS0_BasePtr                  0x40000000UL //!< Peripheral base address
#define AIPS0                          ((AIPS_Type *) AIPS0_BasePtr) //!< Freescale base pointer
#define AIPS0_BASE_PTR                 (AIPS0) //!< Freescale style base pointer

/** @} */ /* End group AIPS_Peripheral_access_layer_GROUP */


/** @brief C Struct for CAN */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CAN_Peripheral_access_layer_GROUP CAN Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CAN0 (file:CAN0_FLEX_S32K14x)        ================ */
/* ================================================================================ */

/**
 * @brief Flex Controller Area Network module
 */
#define CAN_FIFO_FILTER_COUNT 104       /**< Number of Filter IDs                               */
#define CAN_MESSAGE_BUFFER_COUNT 32     /**< Number of message buffers                          */
#define CAN_WAKEUP_BUFFER_COUNT 4       /**< Number of wakeup buffers                           */
/**
 * @struct CAN_Type
 * @brief  C Struct allowing access to CAN registers
 */
typedef struct CAN_Type {
   __IO uint32_t  MCR;                          /**< 0000: Module Configuration Register                                */
   __IO uint32_t  CTRL1;                        /**< 0004: Control 1 Register                                           */
   __IO uint32_t  TIMER;                        /**< 0008: Free Running Timer                                           */
        uint8_t   RESERVED_0[4];                /**< 000C: 0x4 bytes                                                    */
   __IO uint32_t  RXMGMASK;                     /**< 0010: Rx Mailboxes Global Mask Register                            */
   __IO uint32_t  RX14MASK;                     /**< 0014: Rx 14 Mask register                                          */
   __IO uint32_t  RX15MASK;                     /**< 0018: Rx 15 Mask register                                          */
   __IO uint32_t  ECR;                          /**< 001C: Error Counter                                                */
   __IO uint32_t  ESR1;                         /**< 0020: Error and Status 1 register                                  */
        uint8_t   RESERVED_1[4];                /**< 0024: 0x4 bytes                                                    */
   __IO uint32_t  IMASK1;                       /**< 0028: Interrupt Masks 1 register                                   */
        uint8_t   RESERVED_2[4];                /**< 002C: 0x4 bytes                                                    */
   __IO uint32_t  IFLAG1;                       /**< 0030: Interrupt Flags 1 register                                   */
   __IO uint32_t  CTRL2;                        /**< 0034: Control 2 Register                                           */
   __I  uint32_t  ESR2;                         /**< 0038: Error and Status 2 register                                  */
        uint8_t   RESERVED_3[8];                /**< 003C: 0x8 bytes                                                    */
   __I  uint32_t  CRCR;                         /**< 0044: CRC Register                                                 */
   union {                                      /**< 0048: (size=0004)                                                  */
      __IO uint32_t  RXFGMASK;                  /**< 0048: Rx FIFO Global Mask register                                 */
      __IO uint32_t  RXFGMASK_A;                /**< 0048: Rx FIFO Global Mask register (format A)                      */
      __IO uint32_t  RXFGMASK_B;                /**< 0048: Rx FIFO Global Mask register (format B)                      */
      __IO uint32_t  RXFGMASK_C;                /**< 0048: Rx FIFO Global Mask register (format C)                      */
   };
   __I  uint32_t  RXFIR;                        /**< 004C: Rx FIFO Information Register                                 */
   __IO uint32_t  CBT;                          /**< 0050: CAN Bit Timing Register                                      */
        uint8_t   RESERVED_4[44];               /**< 0054: 0x2C bytes                                                   */
   union {                                      /**< 0080: (size=0200)                                                  */
      struct {
         __IO uint32_t  CS;                     /**< 0080: FIFO Message Buffer CS Register                              */
         __IO uint32_t  ID;                     /**< 0084: FIFO Message Buffer ID Register                              */
         __IO uint32_t  WORD0;                  /**< 0088: FIFO Message Buffer WORD0 Register                           */
         __IO uint32_t  WORD1;                  /**< 008C: FIFO Message Buffer WORD1 Register                           */
              uint8_t   RESERVED_5[80];         /**< 0090: 0x50 bytes                                                   */
         union {                                /**< 00E0: (size=01A0)                                                  */
            __IO uint32_t  FILTER_ID[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID                                       */
            __IO uint32_t  FILTER_ID_A[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format A)                            */
            __IO uint32_t  FILTER_ID_B[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format B)                            */
            __IO uint32_t  FILTER_ID_C[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format C)                            */
         };
      } FIFO;                                   /**< 0080: (cluster: size=0x0200, 512)                                  */
      struct {
         __IO uint32_t  CS;                     /**< 0080: Message Buffer 0 CS Register                                 */
         __IO uint32_t  ID;                     /**< 0084: Message Buffer 0 ID Register                                 */
         __IO uint32_t  WORD0;                  /**< 0088: Message Buffer 0 WORD0 Register                              */
         __IO uint32_t  WORD1;                  /**< 008C: Message Buffer 0 WORD1 Register                              */
      } MB[CAN_MESSAGE_BUFFER_COUNT];           /**< 0080: (cluster: size=0x0200, 512)                                  */
   };
        uint8_t   RESERVED_7[1536];             /**< 0280: 0x600 bytes                                                  */
   __IO uint32_t  RXIMR[CAN_MESSAGE_BUFFER_COUNT]; /**< 0880: Rx Individual Mask                                           */
        uint8_t   RESERVED_8[512];              /**< 0900: 0x200 bytes                                                  */
   __IO uint32_t  CTRL1_PN;                     /**< 0B00: Pretended Networking Control 1 Register                      */
   __IO uint32_t  CTRL2_PN;                     /**< 0B04: Pretended Networking Control 2 Register                      */
   __IO uint32_t  WU_MTC;                       /**< 0B08: Pretended Networking Wake Up Match Register                  */
   __IO uint32_t  FLT_ID1;                      /**< 0B0C: Pretended Networking ID Filter 1 Register                    */
   __IO uint32_t  FLT_DLC;                      /**< 0B10: Pretended Networking DLC Filter Register                     */
   __IO uint32_t  PL1_LO;                       /**< 0B14: Pretended Networking payload Low Filter 1 Register           */
   __IO uint32_t  PL1_HI;                       /**< 0B18: Pretended Networking payload High Filter 1 Register          */
   __IO uint32_t  FLT_ID2_IDMASK;               /**< 0B1C: Pretended Networking ID Filter 2 Register / ID Mask Register */
   __IO uint32_t  PL2_PLMASK_LO;                /**< 0B20: Pretended Networking payload Low Filter 2 Register / payload Low Mask Register */
   __IO uint32_t  PL2_PLMASK_HI;                /**< 0B24: Pretended Networking payload High Filter 2 low order bits / payload High Mask Register */
        uint8_t   RESERVED_9[24];               /**< 0B28: 0x18 bytes                                                   */
   struct {
      __I  uint32_t  WMBn_CS;                   /**< 0B40: Wake Up Message Buffer Register for C/S                      */
      __I  uint32_t  WMBn_ID;                   /**< 0B44: Wake Up Message Buffer Register for ID                       */
      __I  uint32_t  WMBn_D03;                  /**< 0B48: Wake Up Message Buffer Register for Data 0-3                 */
      __I  uint32_t  WMBn_D47;                  /**< 0B4C: Wake Up Message Buffer Register Data 4-7                     */
   } WMB[CAN_WAKEUP_BUFFER_COUNT];              /**< 0B40: (cluster: size=0x0040, 64)                                   */
        uint8_t   RESERVED_11[128];             /**< 0B80: 0x80 bytes                                                   */
   __IO uint32_t  FDCTRL;                       /**< 0C00: CAN FD Control Register                                      */
   __IO uint32_t  FDCBT;                        /**< 0C04: CAN FD Bit Timing Register                                   */
   __I  uint32_t  FDCRC;                        /**< 0C08: CAN FD CRC Register                                          */
} CAN_Type;


/** @brief Register Masks for CAN */

/* -------------------------------------------------------------------------------- */
/* -----------     'CAN0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup CAN_Register_Masks_GROUP CAN Register Masks */
/** @{ */

/** @name MCR - Module Configuration Register */ /** @{ */
#define CAN_MCR_MAXMB_MASK                       (0x7FU)                                             /**< CAN0_MCR.MAXMB Mask                     */
#define CAN_MCR_MAXMB_SHIFT                      (0U)                                                /**< CAN0_MCR.MAXMB Position                 */
#define CAN_MCR_MAXMB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MAXMB_SHIFT))&CAN_MCR_MAXMB_MASK) /**< CAN0_MCR.MAXMB Field                    */
#define CAN_MCR_IDAM_MASK                        (0x300U)                                            /**< CAN0_MCR.IDAM Mask                      */
#define CAN_MCR_IDAM_SHIFT                       (8U)                                                /**< CAN0_MCR.IDAM Position                  */
#define CAN_MCR_IDAM(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IDAM_SHIFT))&CAN_MCR_IDAM_MASK) /**< CAN0_MCR.IDAM Field                     */
#define CAN_MCR_FDEN_MASK                        (0x800U)                                            /**< CAN0_MCR.FDEN Mask                      */
#define CAN_MCR_FDEN_SHIFT                       (11U)                                               /**< CAN0_MCR.FDEN Position                  */
#define CAN_MCR_FDEN(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FDEN_SHIFT))&CAN_MCR_FDEN_MASK) /**< CAN0_MCR.FDEN Field                     */
#define CAN_MCR_AEN_MASK                         (0x1000U)                                           /**< CAN0_MCR.AEN Mask                       */
#define CAN_MCR_AEN_SHIFT                        (12U)                                               /**< CAN0_MCR.AEN Position                   */
#define CAN_MCR_AEN(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_AEN_SHIFT))&CAN_MCR_AEN_MASK) /**< CAN0_MCR.AEN Field                      */
#define CAN_MCR_LPRIOEN_MASK                     (0x2000U)                                           /**< CAN0_MCR.LPRIOEN Mask                   */
#define CAN_MCR_LPRIOEN_SHIFT                    (13U)                                               /**< CAN0_MCR.LPRIOEN Position               */
#define CAN_MCR_LPRIOEN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_LPRIOEN_SHIFT))&CAN_MCR_LPRIOEN_MASK) /**< CAN0_MCR.LPRIOEN Field                  */
#define CAN_MCR_PNET_EN_MASK                     (0x4000U)                                           /**< CAN0_MCR.PNET_EN Mask                   */
#define CAN_MCR_PNET_EN_SHIFT                    (14U)                                               /**< CAN0_MCR.PNET_EN Position               */
#define CAN_MCR_PNET_EN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_PNET_EN_SHIFT))&CAN_MCR_PNET_EN_MASK) /**< CAN0_MCR.PNET_EN Field                  */
#define CAN_MCR_DMA_MASK                         (0x8000U)                                           /**< CAN0_MCR.DMA Mask                       */
#define CAN_MCR_DMA_SHIFT                        (15U)                                               /**< CAN0_MCR.DMA Position                   */
#define CAN_MCR_DMA(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_DMA_SHIFT))&CAN_MCR_DMA_MASK) /**< CAN0_MCR.DMA Field                      */
#define CAN_MCR_IRMQ_MASK                        (0x10000U)                                          /**< CAN0_MCR.IRMQ Mask                      */
#define CAN_MCR_IRMQ_SHIFT                       (16U)                                               /**< CAN0_MCR.IRMQ Position                  */
#define CAN_MCR_IRMQ(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IRMQ_SHIFT))&CAN_MCR_IRMQ_MASK) /**< CAN0_MCR.IRMQ Field                     */
#define CAN_MCR_SRXDIS_MASK                      (0x20000U)                                          /**< CAN0_MCR.SRXDIS Mask                    */
#define CAN_MCR_SRXDIS_SHIFT                     (17U)                                               /**< CAN0_MCR.SRXDIS Position                */
#define CAN_MCR_SRXDIS(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SRXDIS_SHIFT))&CAN_MCR_SRXDIS_MASK) /**< CAN0_MCR.SRXDIS Field                   */
#define CAN_MCR_LPMACK_MASK                      (0x100000U)                                         /**< CAN0_MCR.LPMACK Mask                    */
#define CAN_MCR_LPMACK_SHIFT                     (20U)                                               /**< CAN0_MCR.LPMACK Position                */
#define CAN_MCR_LPMACK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_LPMACK_SHIFT))&CAN_MCR_LPMACK_MASK) /**< CAN0_MCR.LPMACK Field                   */
#define CAN_MCR_WRNEN_MASK                       (0x200000U)                                         /**< CAN0_MCR.WRNEN Mask                     */
#define CAN_MCR_WRNEN_SHIFT                      (21U)                                               /**< CAN0_MCR.WRNEN Position                 */
#define CAN_MCR_WRNEN(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WRNEN_SHIFT))&CAN_MCR_WRNEN_MASK) /**< CAN0_MCR.WRNEN Field                    */
#define CAN_MCR_SUPV_MASK                        (0x800000U)                                         /**< CAN0_MCR.SUPV Mask                      */
#define CAN_MCR_SUPV_SHIFT                       (23U)                                               /**< CAN0_MCR.SUPV Position                  */
#define CAN_MCR_SUPV(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SUPV_SHIFT))&CAN_MCR_SUPV_MASK) /**< CAN0_MCR.SUPV Field                     */
#define CAN_MCR_FRZACK_MASK                      (0x1000000U)                                        /**< CAN0_MCR.FRZACK Mask                    */
#define CAN_MCR_FRZACK_SHIFT                     (24U)                                               /**< CAN0_MCR.FRZACK Position                */
#define CAN_MCR_FRZACK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FRZACK_SHIFT))&CAN_MCR_FRZACK_MASK) /**< CAN0_MCR.FRZACK Field                   */
#define CAN_MCR_SOFTRST_MASK                     (0x2000000U)                                        /**< CAN0_MCR.SOFTRST Mask                   */
#define CAN_MCR_SOFTRST_SHIFT                    (25U)                                               /**< CAN0_MCR.SOFTRST Position               */
#define CAN_MCR_SOFTRST(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SOFTRST_SHIFT))&CAN_MCR_SOFTRST_MASK) /**< CAN0_MCR.SOFTRST Field                  */
#define CAN_MCR_NOTRDY_MASK                      (0x8000000U)                                        /**< CAN0_MCR.NOTRDY Mask                    */
#define CAN_MCR_NOTRDY_SHIFT                     (27U)                                               /**< CAN0_MCR.NOTRDY Position                */
#define CAN_MCR_NOTRDY(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_NOTRDY_SHIFT))&CAN_MCR_NOTRDY_MASK) /**< CAN0_MCR.NOTRDY Field                   */
#define CAN_MCR_HALT_MASK                        (0x10000000U)                                       /**< CAN0_MCR.HALT Mask                      */
#define CAN_MCR_HALT_SHIFT                       (28U)                                               /**< CAN0_MCR.HALT Position                  */
#define CAN_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_HALT_SHIFT))&CAN_MCR_HALT_MASK) /**< CAN0_MCR.HALT Field                     */
#define CAN_MCR_RFEN_MASK                        (0x20000000U)                                       /**< CAN0_MCR.RFEN Mask                      */
#define CAN_MCR_RFEN_SHIFT                       (29U)                                               /**< CAN0_MCR.RFEN Position                  */
#define CAN_MCR_RFEN(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_RFEN_SHIFT))&CAN_MCR_RFEN_MASK) /**< CAN0_MCR.RFEN Field                     */
#define CAN_MCR_FRZ_MASK                         (0x40000000U)                                       /**< CAN0_MCR.FRZ Mask                       */
#define CAN_MCR_FRZ_SHIFT                        (30U)                                               /**< CAN0_MCR.FRZ Position                   */
#define CAN_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FRZ_SHIFT))&CAN_MCR_FRZ_MASK) /**< CAN0_MCR.FRZ Field                      */
#define CAN_MCR_MDIS_MASK                        (0x80000000U)                                       /**< CAN0_MCR.MDIS Mask                      */
#define CAN_MCR_MDIS_SHIFT                       (31U)                                               /**< CAN0_MCR.MDIS Position                  */
#define CAN_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MDIS_SHIFT))&CAN_MCR_MDIS_MASK) /**< CAN0_MCR.MDIS Field                     */
/** @} */

/** @name CTRL1 - Control 1 Register */ /** @{ */
#define CAN_CTRL1_PROPSEG_MASK                   (0x7U)                                              /**< CAN0_CTRL1.PROPSEG Mask                 */
#define CAN_CTRL1_PROPSEG_SHIFT                  (0U)                                                /**< CAN0_CTRL1.PROPSEG Position             */
#define CAN_CTRL1_PROPSEG(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PROPSEG_SHIFT))&CAN_CTRL1_PROPSEG_MASK) /**< CAN0_CTRL1.PROPSEG Field                */
#define CAN_CTRL1_LOM_MASK                       (0x8U)                                              /**< CAN0_CTRL1.LOM Mask                     */
#define CAN_CTRL1_LOM_SHIFT                      (3U)                                                /**< CAN0_CTRL1.LOM Position                 */
#define CAN_CTRL1_LOM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LOM_SHIFT))&CAN_CTRL1_LOM_MASK) /**< CAN0_CTRL1.LOM Field                    */
#define CAN_CTRL1_LBUF_MASK                      (0x10U)                                             /**< CAN0_CTRL1.LBUF Mask                    */
#define CAN_CTRL1_LBUF_SHIFT                     (4U)                                                /**< CAN0_CTRL1.LBUF Position                */
#define CAN_CTRL1_LBUF(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LBUF_SHIFT))&CAN_CTRL1_LBUF_MASK) /**< CAN0_CTRL1.LBUF Field                   */
#define CAN_CTRL1_TSYN_MASK                      (0x20U)                                             /**< CAN0_CTRL1.TSYN Mask                    */
#define CAN_CTRL1_TSYN_SHIFT                     (5U)                                                /**< CAN0_CTRL1.TSYN Position                */
#define CAN_CTRL1_TSYN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_TSYN_SHIFT))&CAN_CTRL1_TSYN_MASK) /**< CAN0_CTRL1.TSYN Field                   */
#define CAN_CTRL1_BOFFREC_MASK                   (0x40U)                                             /**< CAN0_CTRL1.BOFFREC Mask                 */
#define CAN_CTRL1_BOFFREC_SHIFT                  (6U)                                                /**< CAN0_CTRL1.BOFFREC Position             */
#define CAN_CTRL1_BOFFREC(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_BOFFREC_SHIFT))&CAN_CTRL1_BOFFREC_MASK) /**< CAN0_CTRL1.BOFFREC Field                */
#define CAN_CTRL1_SMP_MASK                       (0x80U)                                             /**< CAN0_CTRL1.SMP Mask                     */
#define CAN_CTRL1_SMP_SHIFT                      (7U)                                                /**< CAN0_CTRL1.SMP Position                 */
#define CAN_CTRL1_SMP(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_SMP_SHIFT))&CAN_CTRL1_SMP_MASK) /**< CAN0_CTRL1.SMP Field                    */
#define CAN_CTRL1_RWRNMSK_MASK                   (0x400U)                                            /**< CAN0_CTRL1.RWRNMSK Mask                 */
#define CAN_CTRL1_RWRNMSK_SHIFT                  (10U)                                               /**< CAN0_CTRL1.RWRNMSK Position             */
#define CAN_CTRL1_RWRNMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RWRNMSK_SHIFT))&CAN_CTRL1_RWRNMSK_MASK) /**< CAN0_CTRL1.RWRNMSK Field                */
#define CAN_CTRL1_TWRNMSK_MASK                   (0x800U)                                            /**< CAN0_CTRL1.TWRNMSK Mask                 */
#define CAN_CTRL1_TWRNMSK_SHIFT                  (11U)                                               /**< CAN0_CTRL1.TWRNMSK Position             */
#define CAN_CTRL1_TWRNMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_TWRNMSK_SHIFT))&CAN_CTRL1_TWRNMSK_MASK) /**< CAN0_CTRL1.TWRNMSK Field                */
#define CAN_CTRL1_LPB_MASK                       (0x1000U)                                           /**< CAN0_CTRL1.LPB Mask                     */
#define CAN_CTRL1_LPB_SHIFT                      (12U)                                               /**< CAN0_CTRL1.LPB Position                 */
#define CAN_CTRL1_LPB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LPB_SHIFT))&CAN_CTRL1_LPB_MASK) /**< CAN0_CTRL1.LPB Field                    */
#define CAN_CTRL1_CLKSRC_MASK                    (0x2000U)                                           /**< CAN0_CTRL1.CLKSRC Mask                  */
#define CAN_CTRL1_CLKSRC_SHIFT                   (13U)                                               /**< CAN0_CTRL1.CLKSRC Position              */
#define CAN_CTRL1_CLKSRC(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_CLKSRC_SHIFT))&CAN_CTRL1_CLKSRC_MASK) /**< CAN0_CTRL1.CLKSRC Field                 */
#define CAN_CTRL1_ERRMSK_MASK                    (0x4000U)                                           /**< CAN0_CTRL1.ERRMSK Mask                  */
#define CAN_CTRL1_ERRMSK_SHIFT                   (14U)                                               /**< CAN0_CTRL1.ERRMSK Position              */
#define CAN_CTRL1_ERRMSK(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_ERRMSK_SHIFT))&CAN_CTRL1_ERRMSK_MASK) /**< CAN0_CTRL1.ERRMSK Field                 */
#define CAN_CTRL1_BOFFMSK_MASK                   (0x8000U)                                           /**< CAN0_CTRL1.BOFFMSK Mask                 */
#define CAN_CTRL1_BOFFMSK_SHIFT                  (15U)                                               /**< CAN0_CTRL1.BOFFMSK Position             */
#define CAN_CTRL1_BOFFMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_BOFFMSK_SHIFT))&CAN_CTRL1_BOFFMSK_MASK) /**< CAN0_CTRL1.BOFFMSK Field                */
#define CAN_CTRL1_PSEG2_MASK                     (0x70000U)                                          /**< CAN0_CTRL1.PSEG2 Mask                   */
#define CAN_CTRL1_PSEG2_SHIFT                    (16U)                                               /**< CAN0_CTRL1.PSEG2 Position               */
#define CAN_CTRL1_PSEG2(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG2_SHIFT))&CAN_CTRL1_PSEG2_MASK) /**< CAN0_CTRL1.PSEG2 Field                  */
#define CAN_CTRL1_PSEG1_MASK                     (0x380000U)                                         /**< CAN0_CTRL1.PSEG1 Mask                   */
#define CAN_CTRL1_PSEG1_SHIFT                    (19U)                                               /**< CAN0_CTRL1.PSEG1 Position               */
#define CAN_CTRL1_PSEG1(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG1_SHIFT))&CAN_CTRL1_PSEG1_MASK) /**< CAN0_CTRL1.PSEG1 Field                  */
#define CAN_CTRL1_RJW_MASK                       (0xC00000U)                                         /**< CAN0_CTRL1.RJW Mask                     */
#define CAN_CTRL1_RJW_SHIFT                      (22U)                                               /**< CAN0_CTRL1.RJW Position                 */
#define CAN_CTRL1_RJW(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RJW_SHIFT))&CAN_CTRL1_RJW_MASK) /**< CAN0_CTRL1.RJW Field                    */
#define CAN_CTRL1_PRESDIV_MASK                   (0xFF000000U)                                       /**< CAN0_CTRL1.PRESDIV Mask                 */
#define CAN_CTRL1_PRESDIV_SHIFT                  (24U)                                               /**< CAN0_CTRL1.PRESDIV Position             */
#define CAN_CTRL1_PRESDIV(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PRESDIV_SHIFT))&CAN_CTRL1_PRESDIV_MASK) /**< CAN0_CTRL1.PRESDIV Field                */
/** @} */

/** @name TIMER - Free Running Timer */ /** @{ */
#define CAN_TIMER_TIMER_MASK                     (0xFFFFU)                                           /**< CAN0_TIMER.TIMER Mask                   */
#define CAN_TIMER_TIMER_SHIFT                    (0U)                                                /**< CAN0_TIMER.TIMER Position               */
#define CAN_TIMER_TIMER(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_TIMER_TIMER_SHIFT))&CAN_TIMER_TIMER_MASK) /**< CAN0_TIMER.TIMER Field                  */
/** @} */

/** @name RXMGMASK - Rx Mailboxes Global Mask Register */ /** @{ */
#define CAN_RXMGMASK_MG_MASK                     (0xFFFFFFFFU)                                       /**< CAN0_RXMGMASK.MG Mask                   */
#define CAN_RXMGMASK_MG_SHIFT                    (0U)                                                /**< CAN0_RXMGMASK.MG Position               */
#define CAN_RXMGMASK_MG(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXMGMASK_MG_SHIFT))&CAN_RXMGMASK_MG_MASK) /**< CAN0_RXMGMASK.MG Field                  */
/** @} */

/** @name RX14MASK - Rx 14 Mask register */ /** @{ */
#define CAN_RX14MASK_RX14M_MASK                  (0xFFFFFFFFU)                                       /**< CAN0_RX14MASK.RX14M Mask                */
#define CAN_RX14MASK_RX14M_SHIFT                 (0U)                                                /**< CAN0_RX14MASK.RX14M Position            */
#define CAN_RX14MASK_RX14M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX14MASK_RX14M_SHIFT))&CAN_RX14MASK_RX14M_MASK) /**< CAN0_RX14MASK.RX14M Field               */
/** @} */

/** @name RX15MASK - Rx 15 Mask register */ /** @{ */
#define CAN_RX15MASK_RX15M_MASK                  (0xFFFFFFFFU)                                       /**< CAN0_RX15MASK.RX15M Mask                */
#define CAN_RX15MASK_RX15M_SHIFT                 (0U)                                                /**< CAN0_RX15MASK.RX15M Position            */
#define CAN_RX15MASK_RX15M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX15MASK_RX15M_SHIFT))&CAN_RX15MASK_RX15M_MASK) /**< CAN0_RX15MASK.RX15M Field               */
/** @} */

/** @name ECR - Error Counter */ /** @{ */
#define CAN_ECR_TXERRCNT_MASK                    (0xFFU)                                             /**< CAN0_ECR.TXERRCNT Mask                  */
#define CAN_ECR_TXERRCNT_SHIFT                   (0U)                                                /**< CAN0_ECR.TXERRCNT Position              */
#define CAN_ECR_TXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_TXERRCNT_SHIFT))&CAN_ECR_TXERRCNT_MASK) /**< CAN0_ECR.TXERRCNT Field                 */
#define CAN_ECR_RXERRCNT_MASK                    (0xFF00U)                                           /**< CAN0_ECR.RXERRCNT Mask                  */
#define CAN_ECR_RXERRCNT_SHIFT                   (8U)                                                /**< CAN0_ECR.RXERRCNT Position              */
#define CAN_ECR_RXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_RXERRCNT_SHIFT))&CAN_ECR_RXERRCNT_MASK) /**< CAN0_ECR.RXERRCNT Field                 */
#define CAN_ECR_TXERRCNT_FAST_MASK               (0xFF0000U)                                         /**< CAN0_ECR.TXERRCNT_FAST Mask             */
#define CAN_ECR_TXERRCNT_FAST_SHIFT              (16U)                                               /**< CAN0_ECR.TXERRCNT_FAST Position         */
#define CAN_ECR_TXERRCNT_FAST(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_ECR_TXERRCNT_FAST_SHIFT))&CAN_ECR_TXERRCNT_FAST_MASK) /**< CAN0_ECR.TXERRCNT_FAST Field            */
#define CAN_ECR_RXERRCNT_FAST_MASK               (0xFF000000U)                                       /**< CAN0_ECR.RXERRCNT_FAST Mask             */
#define CAN_ECR_RXERRCNT_FAST_SHIFT              (24U)                                               /**< CAN0_ECR.RXERRCNT_FAST Position         */
#define CAN_ECR_RXERRCNT_FAST(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_ECR_RXERRCNT_FAST_SHIFT))&CAN_ECR_RXERRCNT_FAST_MASK) /**< CAN0_ECR.RXERRCNT_FAST Field            */
/** @} */

/** @name ESR1 - Error and Status 1 register */ /** @{ */
#define CAN_ESR1_ERRINT_MASK                     (0x2U)                                              /**< CAN0_ESR1.ERRINT Mask                   */
#define CAN_ESR1_ERRINT_SHIFT                    (1U)                                                /**< CAN0_ESR1.ERRINT Position               */
#define CAN_ESR1_ERRINT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ERRINT_SHIFT))&CAN_ESR1_ERRINT_MASK) /**< CAN0_ESR1.ERRINT Field                  */
#define CAN_ESR1_BOFFINT_MASK                    (0x4U)                                              /**< CAN0_ESR1.BOFFINT Mask                  */
#define CAN_ESR1_BOFFINT_SHIFT                   (2U)                                                /**< CAN0_ESR1.BOFFINT Position              */
#define CAN_ESR1_BOFFINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BOFFINT_SHIFT))&CAN_ESR1_BOFFINT_MASK) /**< CAN0_ESR1.BOFFINT Field                 */
#define CAN_ESR1_RX_MASK                         (0x8U)                                              /**< CAN0_ESR1.RX Mask                       */
#define CAN_ESR1_RX_SHIFT                        (3U)                                                /**< CAN0_ESR1.RX Position                   */
#define CAN_ESR1_RX(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RX_SHIFT))&CAN_ESR1_RX_MASK) /**< CAN0_ESR1.RX Field                      */
#define CAN_ESR1_FLTCONF_MASK                    (0x30U)                                             /**< CAN0_ESR1.FLTCONF Mask                  */
#define CAN_ESR1_FLTCONF_SHIFT                   (4U)                                                /**< CAN0_ESR1.FLTCONF Position              */
#define CAN_ESR1_FLTCONF(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FLTCONF_SHIFT))&CAN_ESR1_FLTCONF_MASK) /**< CAN0_ESR1.FLTCONF Field                 */
#define CAN_ESR1_TX_MASK                         (0x40U)                                             /**< CAN0_ESR1.TX Mask                       */
#define CAN_ESR1_TX_SHIFT                        (6U)                                                /**< CAN0_ESR1.TX Position                   */
#define CAN_ESR1_TX(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TX_SHIFT))&CAN_ESR1_TX_MASK) /**< CAN0_ESR1.TX Field                      */
#define CAN_ESR1_IDLE_MASK                       (0x80U)                                             /**< CAN0_ESR1.IDLE Mask                     */
#define CAN_ESR1_IDLE_SHIFT                      (7U)                                                /**< CAN0_ESR1.IDLE Position                 */
#define CAN_ESR1_IDLE(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_IDLE_SHIFT))&CAN_ESR1_IDLE_MASK) /**< CAN0_ESR1.IDLE Field                    */
#define CAN_ESR1_RXWRN_MASK                      (0x100U)                                            /**< CAN0_ESR1.RXWRN Mask                    */
#define CAN_ESR1_RXWRN_SHIFT                     (8U)                                                /**< CAN0_ESR1.RXWRN Position                */
#define CAN_ESR1_RXWRN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RXWRN_SHIFT))&CAN_ESR1_RXWRN_MASK) /**< CAN0_ESR1.RXWRN Field                   */
#define CAN_ESR1_TXWRN_MASK                      (0x200U)                                            /**< CAN0_ESR1.TXWRN Mask                    */
#define CAN_ESR1_TXWRN_SHIFT                     (9U)                                                /**< CAN0_ESR1.TXWRN Position                */
#define CAN_ESR1_TXWRN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TXWRN_SHIFT))&CAN_ESR1_TXWRN_MASK) /**< CAN0_ESR1.TXWRN Field                   */
#define CAN_ESR1_STFERR_MASK                     (0x400U)                                            /**< CAN0_ESR1.STFERR Mask                   */
#define CAN_ESR1_STFERR_SHIFT                    (10U)                                               /**< CAN0_ESR1.STFERR Position               */
#define CAN_ESR1_STFERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_STFERR_SHIFT))&CAN_ESR1_STFERR_MASK) /**< CAN0_ESR1.STFERR Field                  */
#define CAN_ESR1_FRMERR_MASK                     (0x800U)                                            /**< CAN0_ESR1.FRMERR Mask                   */
#define CAN_ESR1_FRMERR_SHIFT                    (11U)                                               /**< CAN0_ESR1.FRMERR Position               */
#define CAN_ESR1_FRMERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FRMERR_SHIFT))&CAN_ESR1_FRMERR_MASK) /**< CAN0_ESR1.FRMERR Field                  */
#define CAN_ESR1_CRCERR_MASK                     (0x1000U)                                           /**< CAN0_ESR1.CRCERR Mask                   */
#define CAN_ESR1_CRCERR_SHIFT                    (12U)                                               /**< CAN0_ESR1.CRCERR Position               */
#define CAN_ESR1_CRCERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_CRCERR_SHIFT))&CAN_ESR1_CRCERR_MASK) /**< CAN0_ESR1.CRCERR Field                  */
#define CAN_ESR1_ACKERR_MASK                     (0x2000U)                                           /**< CAN0_ESR1.ACKERR Mask                   */
#define CAN_ESR1_ACKERR_SHIFT                    (13U)                                               /**< CAN0_ESR1.ACKERR Position               */
#define CAN_ESR1_ACKERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ACKERR_SHIFT))&CAN_ESR1_ACKERR_MASK) /**< CAN0_ESR1.ACKERR Field                  */
#define CAN_ESR1_BIT0ERR_MASK                    (0x4000U)                                           /**< CAN0_ESR1.BIT0ERR Mask                  */
#define CAN_ESR1_BIT0ERR_SHIFT                   (14U)                                               /**< CAN0_ESR1.BIT0ERR Position              */
#define CAN_ESR1_BIT0ERR(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT0ERR_SHIFT))&CAN_ESR1_BIT0ERR_MASK) /**< CAN0_ESR1.BIT0ERR Field                 */
#define CAN_ESR1_BIT1ERR_MASK                    (0x8000U)                                           /**< CAN0_ESR1.BIT1ERR Mask                  */
#define CAN_ESR1_BIT1ERR_SHIFT                   (15U)                                               /**< CAN0_ESR1.BIT1ERR Position              */
#define CAN_ESR1_BIT1ERR(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT1ERR_SHIFT))&CAN_ESR1_BIT1ERR_MASK) /**< CAN0_ESR1.BIT1ERR Field                 */
#define CAN_ESR1_RWRNINT_MASK                    (0x10000U)                                          /**< CAN0_ESR1.RWRNINT Mask                  */
#define CAN_ESR1_RWRNINT_SHIFT                   (16U)                                               /**< CAN0_ESR1.RWRNINT Position              */
#define CAN_ESR1_RWRNINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RWRNINT_SHIFT))&CAN_ESR1_RWRNINT_MASK) /**< CAN0_ESR1.RWRNINT Field                 */
#define CAN_ESR1_TWRNINT_MASK                    (0x20000U)                                          /**< CAN0_ESR1.TWRNINT Mask                  */
#define CAN_ESR1_TWRNINT_SHIFT                   (17U)                                               /**< CAN0_ESR1.TWRNINT Position              */
#define CAN_ESR1_TWRNINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TWRNINT_SHIFT))&CAN_ESR1_TWRNINT_MASK) /**< CAN0_ESR1.TWRNINT Field                 */
#define CAN_ESR1_SYNCH_MASK                      (0x40000U)                                          /**< CAN0_ESR1.SYNCH Mask                    */
#define CAN_ESR1_SYNCH_SHIFT                     (18U)                                               /**< CAN0_ESR1.SYNCH Position                */
#define CAN_ESR1_SYNCH(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_SYNCH_SHIFT))&CAN_ESR1_SYNCH_MASK) /**< CAN0_ESR1.SYNCH Field                   */
#define CAN_ESR1_BOFFDONEINT_MASK                (0x80000U)                                          /**< CAN0_ESR1.BOFFDONEINT Mask              */
#define CAN_ESR1_BOFFDONEINT_SHIFT               (19U)                                               /**< CAN0_ESR1.BOFFDONEINT Position          */
#define CAN_ESR1_BOFFDONEINT(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BOFFDONEINT_SHIFT))&CAN_ESR1_BOFFDONEINT_MASK) /**< CAN0_ESR1.BOFFDONEINT Field             */
#define CAN_ESR1_ERRINT_FAST_MASK                (0x100000U)                                         /**< CAN0_ESR1.ERRINT_FAST Mask              */
#define CAN_ESR1_ERRINT_FAST_SHIFT               (20U)                                               /**< CAN0_ESR1.ERRINT_FAST Position          */
#define CAN_ESR1_ERRINT_FAST(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ERRINT_FAST_SHIFT))&CAN_ESR1_ERRINT_FAST_MASK) /**< CAN0_ESR1.ERRINT_FAST Field             */
#define CAN_ESR1_ERROVR_MASK                     (0x200000U)                                         /**< CAN0_ESR1.ERROVR Mask                   */
#define CAN_ESR1_ERROVR_SHIFT                    (21U)                                               /**< CAN0_ESR1.ERROVR Position               */
#define CAN_ESR1_ERROVR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ERROVR_SHIFT))&CAN_ESR1_ERROVR_MASK) /**< CAN0_ESR1.ERROVR Field                  */
#define CAN_ESR1_STFERR_FAST_MASK                (0x4000000U)                                        /**< CAN0_ESR1.STFERR_FAST Mask              */
#define CAN_ESR1_STFERR_FAST_SHIFT               (26U)                                               /**< CAN0_ESR1.STFERR_FAST Position          */
#define CAN_ESR1_STFERR_FAST(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_STFERR_FAST_SHIFT))&CAN_ESR1_STFERR_FAST_MASK) /**< CAN0_ESR1.STFERR_FAST Field             */
#define CAN_ESR1_FRMERR_FAST_MASK                (0x8000000U)                                        /**< CAN0_ESR1.FRMERR_FAST Mask              */
#define CAN_ESR1_FRMERR_FAST_SHIFT               (27U)                                               /**< CAN0_ESR1.FRMERR_FAST Position          */
#define CAN_ESR1_FRMERR_FAST(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FRMERR_FAST_SHIFT))&CAN_ESR1_FRMERR_FAST_MASK) /**< CAN0_ESR1.FRMERR_FAST Field             */
#define CAN_ESR1_CRCERR_FAST_MASK                (0x10000000U)                                       /**< CAN0_ESR1.CRCERR_FAST Mask              */
#define CAN_ESR1_CRCERR_FAST_SHIFT               (28U)                                               /**< CAN0_ESR1.CRCERR_FAST Position          */
#define CAN_ESR1_CRCERR_FAST(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_CRCERR_FAST_SHIFT))&CAN_ESR1_CRCERR_FAST_MASK) /**< CAN0_ESR1.CRCERR_FAST Field             */
#define CAN_ESR1_BIT0ERR_FAST_MASK               (0x40000000U)                                       /**< CAN0_ESR1.BIT0ERR_FAST Mask             */
#define CAN_ESR1_BIT0ERR_FAST_SHIFT              (30U)                                               /**< CAN0_ESR1.BIT0ERR_FAST Position         */
#define CAN_ESR1_BIT0ERR_FAST(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT0ERR_FAST_SHIFT))&CAN_ESR1_BIT0ERR_FAST_MASK) /**< CAN0_ESR1.BIT0ERR_FAST Field            */
#define CAN_ESR1_BIT1ERR_FAST_MASK               (0x80000000U)                                       /**< CAN0_ESR1.BIT1ERR_FAST Mask             */
#define CAN_ESR1_BIT1ERR_FAST_SHIFT              (31U)                                               /**< CAN0_ESR1.BIT1ERR_FAST Position         */
#define CAN_ESR1_BIT1ERR_FAST(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT1ERR_FAST_SHIFT))&CAN_ESR1_BIT1ERR_FAST_MASK) /**< CAN0_ESR1.BIT1ERR_FAST Field            */
/** @} */

/** @name IMASK1 - Interrupt Masks 1 register */ /** @{ */
#define CAN_IMASK1_BUF31TO0M_MASK                (0xFFFFFFFFU)                                       /**< CAN0_IMASK1.BUF31TO0M Mask              */
#define CAN_IMASK1_BUF31TO0M_SHIFT               (0U)                                                /**< CAN0_IMASK1.BUF31TO0M Position          */
#define CAN_IMASK1_BUF31TO0M(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_IMASK1_BUF31TO0M_SHIFT))&CAN_IMASK1_BUF31TO0M_MASK) /**< CAN0_IMASK1.BUF31TO0M Field             */
/** @} */

/** @name IFLAG1 - Interrupt Flags 1 register */ /** @{ */
#define CAN_IFLAG1_BUF0I_MASK                    (0x1U)                                              /**< CAN0_IFLAG1.BUF0I Mask                  */
#define CAN_IFLAG1_BUF0I_SHIFT                   (0U)                                                /**< CAN0_IFLAG1.BUF0I Position              */
#define CAN_IFLAG1_BUF0I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF0I_SHIFT))&CAN_IFLAG1_BUF0I_MASK) /**< CAN0_IFLAG1.BUF0I Field                 */
#define CAN_IFLAG1_BUF4TO1I_MASK                 (0x1EU)                                             /**< CAN0_IFLAG1.BUF4TO1I Mask               */
#define CAN_IFLAG1_BUF4TO1I_SHIFT                (1U)                                                /**< CAN0_IFLAG1.BUF4TO1I Position           */
#define CAN_IFLAG1_BUF4TO1I(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF4TO1I_SHIFT))&CAN_IFLAG1_BUF4TO1I_MASK) /**< CAN0_IFLAG1.BUF4TO1I Field              */
#define CAN_IFLAG1_BUF5I_MASK                    (0x20U)                                             /**< CAN0_IFLAG1.BUF5I Mask                  */
#define CAN_IFLAG1_BUF5I_SHIFT                   (5U)                                                /**< CAN0_IFLAG1.BUF5I Position              */
#define CAN_IFLAG1_BUF5I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF5I_SHIFT))&CAN_IFLAG1_BUF5I_MASK) /**< CAN0_IFLAG1.BUF5I Field                 */
#define CAN_IFLAG1_BUF6I_MASK                    (0x40U)                                             /**< CAN0_IFLAG1.BUF6I Mask                  */
#define CAN_IFLAG1_BUF6I_SHIFT                   (6U)                                                /**< CAN0_IFLAG1.BUF6I Position              */
#define CAN_IFLAG1_BUF6I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF6I_SHIFT))&CAN_IFLAG1_BUF6I_MASK) /**< CAN0_IFLAG1.BUF6I Field                 */
#define CAN_IFLAG1_BUF7I_MASK                    (0x80U)                                             /**< CAN0_IFLAG1.BUF7I Mask                  */
#define CAN_IFLAG1_BUF7I_SHIFT                   (7U)                                                /**< CAN0_IFLAG1.BUF7I Position              */
#define CAN_IFLAG1_BUF7I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF7I_SHIFT))&CAN_IFLAG1_BUF7I_MASK) /**< CAN0_IFLAG1.BUF7I Field                 */
#define CAN_IFLAG1_BUF31TO8I_MASK                (0xFFFFFF00U)                                       /**< CAN0_IFLAG1.BUF31TO8I Mask              */
#define CAN_IFLAG1_BUF31TO8I_SHIFT               (8U)                                                /**< CAN0_IFLAG1.BUF31TO8I Position          */
#define CAN_IFLAG1_BUF31TO8I(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF31TO8I_SHIFT))&CAN_IFLAG1_BUF31TO8I_MASK) /**< CAN0_IFLAG1.BUF31TO8I Field             */
/** @} */

/** @name CTRL2 - Control 2 Register */ /** @{ */
#define CAN_CTRL2_EDFLTDIS_MASK                  (0x800U)                                            /**< CAN0_CTRL2.EDFLTDIS Mask                */
#define CAN_CTRL2_EDFLTDIS_SHIFT                 (11U)                                               /**< CAN0_CTRL2.EDFLTDIS Position            */
#define CAN_CTRL2_EDFLTDIS(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_EDFLTDIS_SHIFT))&CAN_CTRL2_EDFLTDIS_MASK) /**< CAN0_CTRL2.EDFLTDIS Field               */
#define CAN_CTRL2_ISOCANFDEN_MASK                (0x1000U)                                           /**< CAN0_CTRL2.ISOCANFDEN Mask              */
#define CAN_CTRL2_ISOCANFDEN_SHIFT               (12U)                                               /**< CAN0_CTRL2.ISOCANFDEN Position          */
#define CAN_CTRL2_ISOCANFDEN(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_ISOCANFDEN_SHIFT))&CAN_CTRL2_ISOCANFDEN_MASK) /**< CAN0_CTRL2.ISOCANFDEN Field             */
#define CAN_CTRL2_PREXCEN_MASK                   (0x4000U)                                           /**< CAN0_CTRL2.PREXCEN Mask                 */
#define CAN_CTRL2_PREXCEN_SHIFT                  (14U)                                               /**< CAN0_CTRL2.PREXCEN Position             */
#define CAN_CTRL2_PREXCEN(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_PREXCEN_SHIFT))&CAN_CTRL2_PREXCEN_MASK) /**< CAN0_CTRL2.PREXCEN Field                */
#define CAN_CTRL2_TIMER_SRC_MASK                 (0x8000U)                                           /**< CAN0_CTRL2.TIMER_SRC Mask               */
#define CAN_CTRL2_TIMER_SRC_SHIFT                (15U)                                               /**< CAN0_CTRL2.TIMER_SRC Position           */
#define CAN_CTRL2_TIMER_SRC(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_TIMER_SRC_SHIFT))&CAN_CTRL2_TIMER_SRC_MASK) /**< CAN0_CTRL2.TIMER_SRC Field              */
#define CAN_CTRL2_EACEN_MASK                     (0x10000U)                                          /**< CAN0_CTRL2.EACEN Mask                   */
#define CAN_CTRL2_EACEN_SHIFT                    (16U)                                               /**< CAN0_CTRL2.EACEN Position               */
#define CAN_CTRL2_EACEN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_EACEN_SHIFT))&CAN_CTRL2_EACEN_MASK) /**< CAN0_CTRL2.EACEN Field                  */
#define CAN_CTRL2_RRS_MASK                       (0x20000U)                                          /**< CAN0_CTRL2.RRS Mask                     */
#define CAN_CTRL2_RRS_SHIFT                      (17U)                                               /**< CAN0_CTRL2.RRS Position                 */
#define CAN_CTRL2_RRS(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RRS_SHIFT))&CAN_CTRL2_RRS_MASK) /**< CAN0_CTRL2.RRS Field                    */
#define CAN_CTRL2_MRP_MASK                       (0x40000U)                                          /**< CAN0_CTRL2.MRP Mask                     */
#define CAN_CTRL2_MRP_SHIFT                      (18U)                                               /**< CAN0_CTRL2.MRP Position                 */
#define CAN_CTRL2_MRP(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_MRP_SHIFT))&CAN_CTRL2_MRP_MASK) /**< CAN0_CTRL2.MRP Field                    */
#define CAN_CTRL2_TASD_MASK                      (0xF80000U)                                         /**< CAN0_CTRL2.TASD Mask                    */
#define CAN_CTRL2_TASD_SHIFT                     (19U)                                               /**< CAN0_CTRL2.TASD Position                */
#define CAN_CTRL2_TASD(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_TASD_SHIFT))&CAN_CTRL2_TASD_MASK) /**< CAN0_CTRL2.TASD Field                   */
#define CAN_CTRL2_RFFN_MASK                      (0xF000000U)                                        /**< CAN0_CTRL2.RFFN Mask                    */
#define CAN_CTRL2_RFFN_SHIFT                     (24U)                                               /**< CAN0_CTRL2.RFFN Position                */
#define CAN_CTRL2_RFFN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RFFN_SHIFT))&CAN_CTRL2_RFFN_MASK) /**< CAN0_CTRL2.RFFN Field                   */
#define CAN_CTRL2_BOFFDONEMSK_MASK               (0x40000000U)                                       /**< CAN0_CTRL2.BOFFDONEMSK Mask             */
#define CAN_CTRL2_BOFFDONEMSK_SHIFT              (30U)                                               /**< CAN0_CTRL2.BOFFDONEMSK Position         */
#define CAN_CTRL2_BOFFDONEMSK(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_BOFFDONEMSK_SHIFT))&CAN_CTRL2_BOFFDONEMSK_MASK) /**< CAN0_CTRL2.BOFFDONEMSK Field            */
#define CAN_CTRL2_ERRMSK_FAST_MASK               (0x80000000U)                                       /**< CAN0_CTRL2.ERRMSK_FAST Mask             */
#define CAN_CTRL2_ERRMSK_FAST_SHIFT              (31U)                                               /**< CAN0_CTRL2.ERRMSK_FAST Position         */
#define CAN_CTRL2_ERRMSK_FAST(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_ERRMSK_FAST_SHIFT))&CAN_CTRL2_ERRMSK_FAST_MASK) /**< CAN0_CTRL2.ERRMSK_FAST Field            */
/** @} */

/** @name ESR2 - Error and Status 2 register */ /** @{ */
#define CAN_ESR2_IMB_MASK                        (0x2000U)                                           /**< CAN0_ESR2.IMB Mask                      */
#define CAN_ESR2_IMB_SHIFT                       (13U)                                               /**< CAN0_ESR2.IMB Position                  */
#define CAN_ESR2_IMB(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_IMB_SHIFT))&CAN_ESR2_IMB_MASK) /**< CAN0_ESR2.IMB Field                     */
#define CAN_ESR2_VPS_MASK                        (0x4000U)                                           /**< CAN0_ESR2.VPS Mask                      */
#define CAN_ESR2_VPS_SHIFT                       (14U)                                               /**< CAN0_ESR2.VPS Position                  */
#define CAN_ESR2_VPS(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_VPS_SHIFT))&CAN_ESR2_VPS_MASK) /**< CAN0_ESR2.VPS Field                     */
#define CAN_ESR2_LPTM_MASK                       (0x7F0000U)                                         /**< CAN0_ESR2.LPTM Mask                     */
#define CAN_ESR2_LPTM_SHIFT                      (16U)                                               /**< CAN0_ESR2.LPTM Position                 */
#define CAN_ESR2_LPTM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_LPTM_SHIFT))&CAN_ESR2_LPTM_MASK) /**< CAN0_ESR2.LPTM Field                    */
/** @} */

/** @name CRCR - CRC Register */ /** @{ */
#define CAN_CRCR_TXCRC_MASK                      (0x7FFFU)                                           /**< CAN0_CRCR.TXCRC Mask                    */
#define CAN_CRCR_TXCRC_SHIFT                     (0U)                                                /**< CAN0_CRCR.TXCRC Position                */
#define CAN_CRCR_TXCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_TXCRC_SHIFT))&CAN_CRCR_TXCRC_MASK) /**< CAN0_CRCR.TXCRC Field                   */
#define CAN_CRCR_MBCRC_MASK                      (0x7F0000U)                                         /**< CAN0_CRCR.MBCRC Mask                    */
#define CAN_CRCR_MBCRC_SHIFT                     (16U)                                               /**< CAN0_CRCR.MBCRC Position                */
#define CAN_CRCR_MBCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_MBCRC_SHIFT))&CAN_CRCR_MBCRC_MASK) /**< CAN0_CRCR.MBCRC Field                   */
/** @} */

/** @name RXFGMASK - Rx FIFO Global Mask register */ /** @{ */
#define CAN_RXFGMASK_FGM_MASK                    (0xFFFFFFFFU)                                       /**< CAN0_RXFGMASK.FGM Mask                  */
#define CAN_RXFGMASK_FGM_SHIFT                   (0U)                                                /**< CAN0_RXFGMASK.FGM Position              */
#define CAN_RXFGMASK_FGM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_FGM_SHIFT))&CAN_RXFGMASK_FGM_MASK) /**< CAN0_RXFGMASK.FGM Field                 */
/** @} */

/** @name RXFGMASK_A - Rx FIFO Global Mask register (format A) */ /** @{ */
#define CAN_RXFGMASK_A_RXIDA_EXT_MASK            (0x3FFFFFFEU)                                       /**< CAN0_RXFGMASK_A.RXIDA_EXT Mask          */
#define CAN_RXFGMASK_A_RXIDA_EXT_SHIFT           (1U)                                                /**< CAN0_RXFGMASK_A.RXIDA_EXT Position      */
#define CAN_RXFGMASK_A_RXIDA_EXT(x)              (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_RXIDA_EXT_SHIFT))&CAN_RXFGMASK_A_RXIDA_EXT_MASK) /**< CAN0_RXFGMASK_A.RXIDA_EXT Field         */
#define CAN_RXFGMASK_A_RXIDA_STD_MASK            (0x3FF80000U)                                       /**< CAN0_RXFGMASK_A.RXIDA_STD Mask          */
#define CAN_RXFGMASK_A_RXIDA_STD_SHIFT           (19U)                                               /**< CAN0_RXFGMASK_A.RXIDA_STD Position      */
#define CAN_RXFGMASK_A_RXIDA_STD(x)              (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_RXIDA_STD_SHIFT))&CAN_RXFGMASK_A_RXIDA_STD_MASK) /**< CAN0_RXFGMASK_A.RXIDA_STD Field         */
#define CAN_RXFGMASK_A_IDEA_MASK                 (0x40000000U)                                       /**< CAN0_RXFGMASK_A.IDEA Mask               */
#define CAN_RXFGMASK_A_IDEA_SHIFT                (30U)                                               /**< CAN0_RXFGMASK_A.IDEA Position           */
#define CAN_RXFGMASK_A_IDEA(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_IDEA_SHIFT))&CAN_RXFGMASK_A_IDEA_MASK) /**< CAN0_RXFGMASK_A.IDEA Field              */
#define CAN_RXFGMASK_A_RTRA_MASK                 (0x80000000U)                                       /**< CAN0_RXFGMASK_A.RTRA Mask               */
#define CAN_RXFGMASK_A_RTRA_SHIFT                (31U)                                               /**< CAN0_RXFGMASK_A.RTRA Position           */
#define CAN_RXFGMASK_A_RTRA(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_RTRA_SHIFT))&CAN_RXFGMASK_A_RTRA_MASK) /**< CAN0_RXFGMASK_A.RTRA Field              */
/** @} */

/** @name RXFGMASK_B - Rx FIFO Global Mask register (format B) */ /** @{ */
#define CAN_RXFGMASK_B_RXIDB_EXT_1_MASK          (0x3FFFU)                                           /**< CAN0_RXFGMASK_B.RXIDB_EXT_1 Mask        */
#define CAN_RXFGMASK_B_RXIDB_EXT_1_SHIFT         (0U)                                                /**< CAN0_RXFGMASK_B.RXIDB_EXT_1 Position    */
#define CAN_RXFGMASK_B_RXIDB_EXT_1(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_EXT_1_SHIFT))&CAN_RXFGMASK_B_RXIDB_EXT_1_MASK) /**< CAN0_RXFGMASK_B.RXIDB_EXT_1 Field       */
#define CAN_RXFGMASK_B_RXIDB_STD_1_MASK          (0x3FF8U)                                           /**< CAN0_RXFGMASK_B.RXIDB_STD_1 Mask        */
#define CAN_RXFGMASK_B_RXIDB_STD_1_SHIFT         (3U)                                                /**< CAN0_RXFGMASK_B.RXIDB_STD_1 Position    */
#define CAN_RXFGMASK_B_RXIDB_STD_1(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_STD_1_SHIFT))&CAN_RXFGMASK_B_RXIDB_STD_1_MASK) /**< CAN0_RXFGMASK_B.RXIDB_STD_1 Field       */
#define CAN_RXFGMASK_B_IDEB_1_MASK               (0x4000U)                                           /**< CAN0_RXFGMASK_B.IDEB_1 Mask             */
#define CAN_RXFGMASK_B_IDEB_1_SHIFT              (14U)                                               /**< CAN0_RXFGMASK_B.IDEB_1 Position         */
#define CAN_RXFGMASK_B_IDEB_1(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_IDEB_1_SHIFT))&CAN_RXFGMASK_B_IDEB_1_MASK) /**< CAN0_RXFGMASK_B.IDEB_1 Field            */
#define CAN_RXFGMASK_B_RTRB_1_MASK               (0x8000U)                                           /**< CAN0_RXFGMASK_B.RTRB_1 Mask             */
#define CAN_RXFGMASK_B_RTRB_1_SHIFT              (15U)                                               /**< CAN0_RXFGMASK_B.RTRB_1 Position         */
#define CAN_RXFGMASK_B_RTRB_1(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RTRB_1_SHIFT))&CAN_RXFGMASK_B_RTRB_1_MASK) /**< CAN0_RXFGMASK_B.RTRB_1 Field            */
#define CAN_RXFGMASK_B_RXIDB_EXT_0_MASK          (0x3FFF0000U)                                       /**< CAN0_RXFGMASK_B.RXIDB_EXT_0 Mask        */
#define CAN_RXFGMASK_B_RXIDB_EXT_0_SHIFT         (16U)                                               /**< CAN0_RXFGMASK_B.RXIDB_EXT_0 Position    */
#define CAN_RXFGMASK_B_RXIDB_EXT_0(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_EXT_0_SHIFT))&CAN_RXFGMASK_B_RXIDB_EXT_0_MASK) /**< CAN0_RXFGMASK_B.RXIDB_EXT_0 Field       */
#define CAN_RXFGMASK_B_RXIDB_STD_0_MASK          (0x3FF80000U)                                       /**< CAN0_RXFGMASK_B.RXIDB_STD_0 Mask        */
#define CAN_RXFGMASK_B_RXIDB_STD_0_SHIFT         (19U)                                               /**< CAN0_RXFGMASK_B.RXIDB_STD_0 Position    */
#define CAN_RXFGMASK_B_RXIDB_STD_0(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_STD_0_SHIFT))&CAN_RXFGMASK_B_RXIDB_STD_0_MASK) /**< CAN0_RXFGMASK_B.RXIDB_STD_0 Field       */
#define CAN_RXFGMASK_B_IDEB_0_MASK               (0x40000000U)                                       /**< CAN0_RXFGMASK_B.IDEB_0 Mask             */
#define CAN_RXFGMASK_B_IDEB_0_SHIFT              (30U)                                               /**< CAN0_RXFGMASK_B.IDEB_0 Position         */
#define CAN_RXFGMASK_B_IDEB_0(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_IDEB_0_SHIFT))&CAN_RXFGMASK_B_IDEB_0_MASK) /**< CAN0_RXFGMASK_B.IDEB_0 Field            */
#define CAN_RXFGMASK_B_RTRB_0_MASK               (0x80000000U)                                       /**< CAN0_RXFGMASK_B.RTRB_0 Mask             */
#define CAN_RXFGMASK_B_RTRB_0_SHIFT              (31U)                                               /**< CAN0_RXFGMASK_B.RTRB_0 Position         */
#define CAN_RXFGMASK_B_RTRB_0(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RTRB_0_SHIFT))&CAN_RXFGMASK_B_RTRB_0_MASK) /**< CAN0_RXFGMASK_B.RTRB_0 Field            */
/** @} */

/** @name RXFGMASK_C - Rx FIFO Global Mask register (format C) */ /** @{ */
#define CAN_RXFGMASK_C_RXIDC_3_MASK              (0xFFU)                                             /**< CAN0_RXFGMASK_C.RXIDC_3 Mask            */
#define CAN_RXFGMASK_C_RXIDC_3_SHIFT             (0U)                                                /**< CAN0_RXFGMASK_C.RXIDC_3 Position        */
#define CAN_RXFGMASK_C_RXIDC_3(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_3_SHIFT))&CAN_RXFGMASK_C_RXIDC_3_MASK) /**< CAN0_RXFGMASK_C.RXIDC_3 Field           */
#define CAN_RXFGMASK_C_RXIDC_2_MASK              (0xFF00U)                                           /**< CAN0_RXFGMASK_C.RXIDC_2 Mask            */
#define CAN_RXFGMASK_C_RXIDC_2_SHIFT             (8U)                                                /**< CAN0_RXFGMASK_C.RXIDC_2 Position        */
#define CAN_RXFGMASK_C_RXIDC_2(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_2_SHIFT))&CAN_RXFGMASK_C_RXIDC_2_MASK) /**< CAN0_RXFGMASK_C.RXIDC_2 Field           */
#define CAN_RXFGMASK_C_RXIDC_1_MASK              (0xFF0000U)                                         /**< CAN0_RXFGMASK_C.RXIDC_1 Mask            */
#define CAN_RXFGMASK_C_RXIDC_1_SHIFT             (16U)                                               /**< CAN0_RXFGMASK_C.RXIDC_1 Position        */
#define CAN_RXFGMASK_C_RXIDC_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_1_SHIFT))&CAN_RXFGMASK_C_RXIDC_1_MASK) /**< CAN0_RXFGMASK_C.RXIDC_1 Field           */
#define CAN_RXFGMASK_C_RXIDC_0_MASK              (0xFF000000U)                                       /**< CAN0_RXFGMASK_C.RXIDC_0 Mask            */
#define CAN_RXFGMASK_C_RXIDC_0_SHIFT             (24U)                                               /**< CAN0_RXFGMASK_C.RXIDC_0 Position        */
#define CAN_RXFGMASK_C_RXIDC_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_0_SHIFT))&CAN_RXFGMASK_C_RXIDC_0_MASK) /**< CAN0_RXFGMASK_C.RXIDC_0 Field           */
/** @} */

/** @name RXFIR - Rx FIFO Information Register */ /** @{ */
#define CAN_RXFIR_IDHIT_MASK                     (0x1FFU)                                            /**< CAN0_RXFIR.IDHIT Mask                   */
#define CAN_RXFIR_IDHIT_SHIFT                    (0U)                                                /**< CAN0_RXFIR.IDHIT Position               */
#define CAN_RXFIR_IDHIT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXFIR_IDHIT_SHIFT))&CAN_RXFIR_IDHIT_MASK) /**< CAN0_RXFIR.IDHIT Field                  */
/** @} */

/** @name CBT - CAN Bit Timing Register */ /** @{ */
#define CAN_CBT_EPSEG2_MASK                      (0x1FU)                                             /**< CAN0_CBT.EPSEG2 Mask                    */
#define CAN_CBT_EPSEG2_SHIFT                     (0U)                                                /**< CAN0_CBT.EPSEG2 Position                */
#define CAN_CBT_EPSEG2(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPSEG2_SHIFT))&CAN_CBT_EPSEG2_MASK) /**< CAN0_CBT.EPSEG2 Field                   */
#define CAN_CBT_EPSEG1_MASK                      (0x3E0U)                                            /**< CAN0_CBT.EPSEG1 Mask                    */
#define CAN_CBT_EPSEG1_SHIFT                     (5U)                                                /**< CAN0_CBT.EPSEG1 Position                */
#define CAN_CBT_EPSEG1(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPSEG1_SHIFT))&CAN_CBT_EPSEG1_MASK) /**< CAN0_CBT.EPSEG1 Field                   */
#define CAN_CBT_EPROPSEG_MASK                    (0xFC00U)                                           /**< CAN0_CBT.EPROPSEG Mask                  */
#define CAN_CBT_EPROPSEG_SHIFT                   (10U)                                               /**< CAN0_CBT.EPROPSEG Position              */
#define CAN_CBT_EPROPSEG(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPROPSEG_SHIFT))&CAN_CBT_EPROPSEG_MASK) /**< CAN0_CBT.EPROPSEG Field                 */
#define CAN_CBT_ERJW_MASK                        (0x1F0000U)                                         /**< CAN0_CBT.ERJW Mask                      */
#define CAN_CBT_ERJW_SHIFT                       (16U)                                               /**< CAN0_CBT.ERJW Position                  */
#define CAN_CBT_ERJW(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_CBT_ERJW_SHIFT))&CAN_CBT_ERJW_MASK) /**< CAN0_CBT.ERJW Field                     */
#define CAN_CBT_EPRESDIV_MASK                    (0x7FE00000U)                                       /**< CAN0_CBT.EPRESDIV Mask                  */
#define CAN_CBT_EPRESDIV_SHIFT                   (21U)                                               /**< CAN0_CBT.EPRESDIV Position              */
#define CAN_CBT_EPRESDIV(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPRESDIV_SHIFT))&CAN_CBT_EPRESDIV_MASK) /**< CAN0_CBT.EPRESDIV Field                 */
#define CAN_CBT_BTF_MASK                         (0x80000000U)                                       /**< CAN0_CBT.BTF Mask                       */
#define CAN_CBT_BTF_SHIFT                        (31U)                                               /**< CAN0_CBT.BTF Position                   */
#define CAN_CBT_BTF(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_CBT_BTF_SHIFT))&CAN_CBT_BTF_MASK) /**< CAN0_CBT.BTF Field                      */
/** @} */

/** @name CS - FIFO Message Buffer CS Register */ /** @{ */
#define CAN_CS_TIME_STAMP_MASK                   (0xFFFFU)                                           /**< CAN0_CS.TIME_STAMP Mask                 */
#define CAN_CS_TIME_STAMP_SHIFT                  (0U)                                                /**< CAN0_CS.TIME_STAMP Position             */
#define CAN_CS_TIME_STAMP(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CS_TIME_STAMP_SHIFT))&CAN_CS_TIME_STAMP_MASK) /**< CAN0_CS.TIME_STAMP Field                */
#define CAN_CS_DLC_MASK                          (0xF0000U)                                          /**< CAN0_CS.DLC Mask                        */
#define CAN_CS_DLC_SHIFT                         (16U)                                               /**< CAN0_CS.DLC Position                    */
#define CAN_CS_DLC(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_DLC_SHIFT))&CAN_CS_DLC_MASK) /**< CAN0_CS.DLC Field                       */
#define CAN_CS_RTR_MASK                          (0x100000U)                                         /**< CAN0_CS.RTR Mask                        */
#define CAN_CS_RTR_SHIFT                         (20U)                                               /**< CAN0_CS.RTR Position                    */
#define CAN_CS_RTR(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_RTR_SHIFT))&CAN_CS_RTR_MASK) /**< CAN0_CS.RTR Field                       */
#define CAN_CS_IDE_MASK                          (0x200000U)                                         /**< CAN0_CS.IDE Mask                        */
#define CAN_CS_IDE_SHIFT                         (21U)                                               /**< CAN0_CS.IDE Position                    */
#define CAN_CS_IDE(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_IDE_SHIFT))&CAN_CS_IDE_MASK) /**< CAN0_CS.IDE Field                       */
#define CAN_CS_SRR_MASK                          (0x400000U)                                         /**< CAN0_CS.SRR Mask                        */
#define CAN_CS_SRR_SHIFT                         (22U)                                               /**< CAN0_CS.SRR Position                    */
#define CAN_CS_SRR(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_SRR_SHIFT))&CAN_CS_SRR_MASK) /**< CAN0_CS.SRR Field                       */
#define CAN_CS_IDHIT_MASK                        (0xFF000000U)                                       /**< CAN0_CS.IDHIT Mask                      */
#define CAN_CS_IDHIT_SHIFT                       (24U)                                               /**< CAN0_CS.IDHIT Position                  */
#define CAN_CS_IDHIT(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_CS_IDHIT_SHIFT))&CAN_CS_IDHIT_MASK) /**< CAN0_CS.IDHIT Field                     */
/** @} */

/** @name ID - FIFO Message Buffer ID Register */ /** @{ */
#define CAN_ID_EXT_MASK                          (0x1FFFFFFFU)                                       /**< CAN0_ID.EXT Mask                        */
#define CAN_ID_EXT_SHIFT                         (0U)                                                /**< CAN0_ID.EXT Position                    */
#define CAN_ID_EXT(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_ID_EXT_SHIFT))&CAN_ID_EXT_MASK) /**< CAN0_ID.EXT Field                       */
#define CAN_ID_STD_MASK                          (0x1FFC0000U)                                       /**< CAN0_ID.STD Mask                        */
#define CAN_ID_STD_SHIFT                         (18U)                                               /**< CAN0_ID.STD Position                    */
#define CAN_ID_STD(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_ID_STD_SHIFT))&CAN_ID_STD_MASK) /**< CAN0_ID.STD Field                       */
#define CAN_ID_PRIO_MASK                         (0xE0000000U)                                       /**< CAN0_ID.PRIO Mask                       */
#define CAN_ID_PRIO_SHIFT                        (29U)                                               /**< CAN0_ID.PRIO Position                   */
#define CAN_ID_PRIO(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ID_PRIO_SHIFT))&CAN_ID_PRIO_MASK) /**< CAN0_ID.PRIO Field                      */
/** @} */

/** @name WORD0 - FIFO Message Buffer WORD0 Register */ /** @{ */
#define CAN_WORD0_DATA_BYTE_3_MASK               (0xFFU)                                             /**< CAN0_WORD0.DATA_BYTE_3 Mask             */
#define CAN_WORD0_DATA_BYTE_3_SHIFT              (0U)                                                /**< CAN0_WORD0.DATA_BYTE_3 Position         */
#define CAN_WORD0_DATA_BYTE_3(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_3_SHIFT))&CAN_WORD0_DATA_BYTE_3_MASK) /**< CAN0_WORD0.DATA_BYTE_3 Field            */
#define CAN_WORD0_DATA_BYTE_2_MASK               (0xFF00U)                                           /**< CAN0_WORD0.DATA_BYTE_2 Mask             */
#define CAN_WORD0_DATA_BYTE_2_SHIFT              (8U)                                                /**< CAN0_WORD0.DATA_BYTE_2 Position         */
#define CAN_WORD0_DATA_BYTE_2(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_2_SHIFT))&CAN_WORD0_DATA_BYTE_2_MASK) /**< CAN0_WORD0.DATA_BYTE_2 Field            */
#define CAN_WORD0_DATA_BYTE_1_MASK               (0xFF0000U)                                         /**< CAN0_WORD0.DATA_BYTE_1 Mask             */
#define CAN_WORD0_DATA_BYTE_1_SHIFT              (16U)                                               /**< CAN0_WORD0.DATA_BYTE_1 Position         */
#define CAN_WORD0_DATA_BYTE_1(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_1_SHIFT))&CAN_WORD0_DATA_BYTE_1_MASK) /**< CAN0_WORD0.DATA_BYTE_1 Field            */
#define CAN_WORD0_DATA_BYTE_0_MASK               (0xFF000000U)                                       /**< CAN0_WORD0.DATA_BYTE_0 Mask             */
#define CAN_WORD0_DATA_BYTE_0_SHIFT              (24U)                                               /**< CAN0_WORD0.DATA_BYTE_0 Position         */
#define CAN_WORD0_DATA_BYTE_0(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_0_SHIFT))&CAN_WORD0_DATA_BYTE_0_MASK) /**< CAN0_WORD0.DATA_BYTE_0 Field            */
/** @} */

/** @name WORD1 - FIFO Message Buffer WORD1 Register */ /** @{ */
#define CAN_WORD1_DATA_BYTE_7_MASK               (0xFFU)                                             /**< CAN0_WORD1.DATA_BYTE_7 Mask             */
#define CAN_WORD1_DATA_BYTE_7_SHIFT              (0U)                                                /**< CAN0_WORD1.DATA_BYTE_7 Position         */
#define CAN_WORD1_DATA_BYTE_7(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_7_SHIFT))&CAN_WORD1_DATA_BYTE_7_MASK) /**< CAN0_WORD1.DATA_BYTE_7 Field            */
#define CAN_WORD1_DATA_BYTE_6_MASK               (0xFF00U)                                           /**< CAN0_WORD1.DATA_BYTE_6 Mask             */
#define CAN_WORD1_DATA_BYTE_6_SHIFT              (8U)                                                /**< CAN0_WORD1.DATA_BYTE_6 Position         */
#define CAN_WORD1_DATA_BYTE_6(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_6_SHIFT))&CAN_WORD1_DATA_BYTE_6_MASK) /**< CAN0_WORD1.DATA_BYTE_6 Field            */
#define CAN_WORD1_DATA_BYTE_5_MASK               (0xFF0000U)                                         /**< CAN0_WORD1.DATA_BYTE_5 Mask             */
#define CAN_WORD1_DATA_BYTE_5_SHIFT              (16U)                                               /**< CAN0_WORD1.DATA_BYTE_5 Position         */
#define CAN_WORD1_DATA_BYTE_5(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_5_SHIFT))&CAN_WORD1_DATA_BYTE_5_MASK) /**< CAN0_WORD1.DATA_BYTE_5 Field            */
#define CAN_WORD1_DATA_BYTE_4_MASK               (0xFF000000U)                                       /**< CAN0_WORD1.DATA_BYTE_4 Mask             */
#define CAN_WORD1_DATA_BYTE_4_SHIFT              (24U)                                               /**< CAN0_WORD1.DATA_BYTE_4 Position         */
#define CAN_WORD1_DATA_BYTE_4(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_4_SHIFT))&CAN_WORD1_DATA_BYTE_4_MASK) /**< CAN0_WORD1.DATA_BYTE_4 Field            */
/** @} */

/** @name FILTER_ID_A - FIFO Message Filter ID (format A) */ /** @{ */
#define CAN_FILTER_ID_A_RXIDA_EXT_MASK           (0x3FFFFFFEU)                                       /**< CAN0_FILTER_ID_A.RXIDA_EXT Mask         */
#define CAN_FILTER_ID_A_RXIDA_EXT_SHIFT          (1U)                                                /**< CAN0_FILTER_ID_A.RXIDA_EXT Position     */
#define CAN_FILTER_ID_A_RXIDA_EXT(x)             (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_RXIDA_EXT_SHIFT))&CAN_FILTER_ID_A_RXIDA_EXT_MASK) /**< CAN0_FILTER_ID_A.RXIDA_EXT Field        */
#define CAN_FILTER_ID_A_RXIDA_STD_MASK           (0x3FF80000U)                                       /**< CAN0_FILTER_ID_A.RXIDA_STD Mask         */
#define CAN_FILTER_ID_A_RXIDA_STD_SHIFT          (19U)                                               /**< CAN0_FILTER_ID_A.RXIDA_STD Position     */
#define CAN_FILTER_ID_A_RXIDA_STD(x)             (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_RXIDA_STD_SHIFT))&CAN_FILTER_ID_A_RXIDA_STD_MASK) /**< CAN0_FILTER_ID_A.RXIDA_STD Field        */
#define CAN_FILTER_ID_A_IDEA_MASK                (0x40000000U)                                       /**< CAN0_FILTER_ID_A.IDEA Mask              */
#define CAN_FILTER_ID_A_IDEA_SHIFT               (30U)                                               /**< CAN0_FILTER_ID_A.IDEA Position          */
#define CAN_FILTER_ID_A_IDEA(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_IDEA_SHIFT))&CAN_FILTER_ID_A_IDEA_MASK) /**< CAN0_FILTER_ID_A.IDEA Field             */
#define CAN_FILTER_ID_A_RTRA_MASK                (0x80000000U)                                       /**< CAN0_FILTER_ID_A.RTRA Mask              */
#define CAN_FILTER_ID_A_RTRA_SHIFT               (31U)                                               /**< CAN0_FILTER_ID_A.RTRA Position          */
#define CAN_FILTER_ID_A_RTRA(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_RTRA_SHIFT))&CAN_FILTER_ID_A_RTRA_MASK) /**< CAN0_FILTER_ID_A.RTRA Field             */
/** @} */

/** @name FILTER_ID_B - FIFO Message Filter ID (format B) */ /** @{ */
#define CAN_FILTER_ID_B_RXIDB_EXT_1_MASK         (0x3FFFU)                                           /**< CAN0_FILTER_ID_B.RXIDB_EXT_1 Mask       */
#define CAN_FILTER_ID_B_RXIDB_EXT_1_SHIFT        (0U)                                                /**< CAN0_FILTER_ID_B.RXIDB_EXT_1 Position   */
#define CAN_FILTER_ID_B_RXIDB_EXT_1(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_EXT_1_SHIFT))&CAN_FILTER_ID_B_RXIDB_EXT_1_MASK) /**< CAN0_FILTER_ID_B.RXIDB_EXT_1 Field      */
#define CAN_FILTER_ID_B_RXIDB_STD_1_MASK         (0x3FF8U)                                           /**< CAN0_FILTER_ID_B.RXIDB_STD_1 Mask       */
#define CAN_FILTER_ID_B_RXIDB_STD_1_SHIFT        (3U)                                                /**< CAN0_FILTER_ID_B.RXIDB_STD_1 Position   */
#define CAN_FILTER_ID_B_RXIDB_STD_1(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_STD_1_SHIFT))&CAN_FILTER_ID_B_RXIDB_STD_1_MASK) /**< CAN0_FILTER_ID_B.RXIDB_STD_1 Field      */
#define CAN_FILTER_ID_B_IDEB_1_MASK              (0x4000U)                                           /**< CAN0_FILTER_ID_B.IDEB_1 Mask            */
#define CAN_FILTER_ID_B_IDEB_1_SHIFT             (14U)                                               /**< CAN0_FILTER_ID_B.IDEB_1 Position        */
#define CAN_FILTER_ID_B_IDEB_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_IDEB_1_SHIFT))&CAN_FILTER_ID_B_IDEB_1_MASK) /**< CAN0_FILTER_ID_B.IDEB_1 Field           */
#define CAN_FILTER_ID_B_RTRB_1_MASK              (0x8000U)                                           /**< CAN0_FILTER_ID_B.RTRB_1 Mask            */
#define CAN_FILTER_ID_B_RTRB_1_SHIFT             (15U)                                               /**< CAN0_FILTER_ID_B.RTRB_1 Position        */
#define CAN_FILTER_ID_B_RTRB_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RTRB_1_SHIFT))&CAN_FILTER_ID_B_RTRB_1_MASK) /**< CAN0_FILTER_ID_B.RTRB_1 Field           */
#define CAN_FILTER_ID_B_RXIDB_EXT_0_MASK         (0x3FFF0000U)                                       /**< CAN0_FILTER_ID_B.RXIDB_EXT_0 Mask       */
#define CAN_FILTER_ID_B_RXIDB_EXT_0_SHIFT        (16U)                                               /**< CAN0_FILTER_ID_B.RXIDB_EXT_0 Position   */
#define CAN_FILTER_ID_B_RXIDB_EXT_0(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_EXT_0_SHIFT))&CAN_FILTER_ID_B_RXIDB_EXT_0_MASK) /**< CAN0_FILTER_ID_B.RXIDB_EXT_0 Field      */
#define CAN_FILTER_ID_B_RXIDB_STD_0_MASK         (0x3FF80000U)                                       /**< CAN0_FILTER_ID_B.RXIDB_STD_0 Mask       */
#define CAN_FILTER_ID_B_RXIDB_STD_0_SHIFT        (19U)                                               /**< CAN0_FILTER_ID_B.RXIDB_STD_0 Position   */
#define CAN_FILTER_ID_B_RXIDB_STD_0(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_STD_0_SHIFT))&CAN_FILTER_ID_B_RXIDB_STD_0_MASK) /**< CAN0_FILTER_ID_B.RXIDB_STD_0 Field      */
#define CAN_FILTER_ID_B_IDEB_0_MASK              (0x40000000U)                                       /**< CAN0_FILTER_ID_B.IDEB_0 Mask            */
#define CAN_FILTER_ID_B_IDEB_0_SHIFT             (30U)                                               /**< CAN0_FILTER_ID_B.IDEB_0 Position        */
#define CAN_FILTER_ID_B_IDEB_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_IDEB_0_SHIFT))&CAN_FILTER_ID_B_IDEB_0_MASK) /**< CAN0_FILTER_ID_B.IDEB_0 Field           */
#define CAN_FILTER_ID_B_RTRB_0_MASK              (0x80000000U)                                       /**< CAN0_FILTER_ID_B.RTRB_0 Mask            */
#define CAN_FILTER_ID_B_RTRB_0_SHIFT             (31U)                                               /**< CAN0_FILTER_ID_B.RTRB_0 Position        */
#define CAN_FILTER_ID_B_RTRB_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RTRB_0_SHIFT))&CAN_FILTER_ID_B_RTRB_0_MASK) /**< CAN0_FILTER_ID_B.RTRB_0 Field           */
/** @} */

/** @name FILTER_ID_C - FIFO Message Filter ID (format C) */ /** @{ */
#define CAN_FILTER_ID_C_RXIDC_3_MASK             (0xFFU)                                             /**< CAN0_FILTER_ID_C.RXIDC_3 Mask           */
#define CAN_FILTER_ID_C_RXIDC_3_SHIFT            (0U)                                                /**< CAN0_FILTER_ID_C.RXIDC_3 Position       */
#define CAN_FILTER_ID_C_RXIDC_3(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_3_SHIFT))&CAN_FILTER_ID_C_RXIDC_3_MASK) /**< CAN0_FILTER_ID_C.RXIDC_3 Field          */
#define CAN_FILTER_ID_C_RXIDC_2_MASK             (0xFF00U)                                           /**< CAN0_FILTER_ID_C.RXIDC_2 Mask           */
#define CAN_FILTER_ID_C_RXIDC_2_SHIFT            (8U)                                                /**< CAN0_FILTER_ID_C.RXIDC_2 Position       */
#define CAN_FILTER_ID_C_RXIDC_2(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_2_SHIFT))&CAN_FILTER_ID_C_RXIDC_2_MASK) /**< CAN0_FILTER_ID_C.RXIDC_2 Field          */
#define CAN_FILTER_ID_C_RXIDC_1_MASK             (0xFF0000U)                                         /**< CAN0_FILTER_ID_C.RXIDC_1 Mask           */
#define CAN_FILTER_ID_C_RXIDC_1_SHIFT            (16U)                                               /**< CAN0_FILTER_ID_C.RXIDC_1 Position       */
#define CAN_FILTER_ID_C_RXIDC_1(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_1_SHIFT))&CAN_FILTER_ID_C_RXIDC_1_MASK) /**< CAN0_FILTER_ID_C.RXIDC_1 Field          */
#define CAN_FILTER_ID_C_RXIDC_0_MASK             (0xFF000000U)                                       /**< CAN0_FILTER_ID_C.RXIDC_0 Mask           */
#define CAN_FILTER_ID_C_RXIDC_0_SHIFT            (24U)                                               /**< CAN0_FILTER_ID_C.RXIDC_0 Position       */
#define CAN_FILTER_ID_C_RXIDC_0(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_0_SHIFT))&CAN_FILTER_ID_C_RXIDC_0_MASK) /**< CAN0_FILTER_ID_C.RXIDC_0 Field          */
/** @} */

/** @name CS - Message Buffer 0 CS Register */ /** @{ */
#define CAN_CS_CODE_MASK                         (0xF000000U)                                        /**< CAN0_CS.CODE Mask                       */
#define CAN_CS_CODE_SHIFT                        (24U)                                               /**< CAN0_CS.CODE Position                   */
#define CAN_CS_CODE(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_CS_CODE_SHIFT))&CAN_CS_CODE_MASK) /**< CAN0_CS.CODE Field                      */
#define CAN_CS_ESI_MASK                          (0x20000000U)                                       /**< CAN0_CS.ESI Mask                        */
#define CAN_CS_ESI_SHIFT                         (29U)                                               /**< CAN0_CS.ESI Position                    */
#define CAN_CS_ESI(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_ESI_SHIFT))&CAN_CS_ESI_MASK) /**< CAN0_CS.ESI Field                       */
#define CAN_CS_BRS_MASK                          (0x40000000U)                                       /**< CAN0_CS.BRS Mask                        */
#define CAN_CS_BRS_SHIFT                         (30U)                                               /**< CAN0_CS.BRS Position                    */
#define CAN_CS_BRS(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_BRS_SHIFT))&CAN_CS_BRS_MASK) /**< CAN0_CS.BRS Field                       */
#define CAN_CS_EDL_MASK                          (0x80000000U)                                       /**< CAN0_CS.EDL Mask                        */
#define CAN_CS_EDL_SHIFT                         (31U)                                               /**< CAN0_CS.EDL Position                    */
#define CAN_CS_EDL(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_EDL_SHIFT))&CAN_CS_EDL_MASK) /**< CAN0_CS.EDL Field                       */
/** @} */

/** @name RXIMR - Rx Individual Mask */ /** @{ */
#define CAN_RXIMR_MI_MASK                        (0xFFFFFFFFU)                                       /**< CAN0_RXIMR.MI Mask                      */
#define CAN_RXIMR_MI_SHIFT                       (0U)                                                /**< CAN0_RXIMR.MI Position                  */
#define CAN_RXIMR_MI(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_RXIMR_MI_SHIFT))&CAN_RXIMR_MI_MASK) /**< CAN0_RXIMR.MI Field                     */
/** @} */

/** @name CTRL1_PN - Pretended Networking Control 1 Register */ /** @{ */
#define CAN_CTRL1_PN_FCS_MASK                    (0x3U)                                              /**< CAN0_CTRL1_PN.FCS Mask                  */
#define CAN_CTRL1_PN_FCS_SHIFT                   (0U)                                                /**< CAN0_CTRL1_PN.FCS Position              */
#define CAN_CTRL1_PN_FCS(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_FCS_SHIFT))&CAN_CTRL1_PN_FCS_MASK) /**< CAN0_CTRL1_PN.FCS Field                 */
#define CAN_CTRL1_PN_IDFS_MASK                   (0xCU)                                              /**< CAN0_CTRL1_PN.IDFS Mask                 */
#define CAN_CTRL1_PN_IDFS_SHIFT                  (2U)                                                /**< CAN0_CTRL1_PN.IDFS Position             */
#define CAN_CTRL1_PN_IDFS(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_IDFS_SHIFT))&CAN_CTRL1_PN_IDFS_MASK) /**< CAN0_CTRL1_PN.IDFS Field                */
#define CAN_CTRL1_PN_PLFS_MASK                   (0x30U)                                             /**< CAN0_CTRL1_PN.PLFS Mask                 */
#define CAN_CTRL1_PN_PLFS_SHIFT                  (4U)                                                /**< CAN0_CTRL1_PN.PLFS Position             */
#define CAN_CTRL1_PN_PLFS(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_PLFS_SHIFT))&CAN_CTRL1_PN_PLFS_MASK) /**< CAN0_CTRL1_PN.PLFS Field                */
#define CAN_CTRL1_PN_NMATCH_MASK                 (0xFF00U)                                           /**< CAN0_CTRL1_PN.NMATCH Mask               */
#define CAN_CTRL1_PN_NMATCH_SHIFT                (8U)                                                /**< CAN0_CTRL1_PN.NMATCH Position           */
#define CAN_CTRL1_PN_NMATCH(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_NMATCH_SHIFT))&CAN_CTRL1_PN_NMATCH_MASK) /**< CAN0_CTRL1_PN.NMATCH Field              */
#define CAN_CTRL1_PN_WUMF_MSK_MASK               (0x10000U)                                          /**< CAN0_CTRL1_PN.WUMF_MSK Mask             */
#define CAN_CTRL1_PN_WUMF_MSK_SHIFT              (16U)                                               /**< CAN0_CTRL1_PN.WUMF_MSK Position         */
#define CAN_CTRL1_PN_WUMF_MSK(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_WUMF_MSK_SHIFT))&CAN_CTRL1_PN_WUMF_MSK_MASK) /**< CAN0_CTRL1_PN.WUMF_MSK Field            */
#define CAN_CTRL1_PN_WTOF_MSK_MASK               (0x20000U)                                          /**< CAN0_CTRL1_PN.WTOF_MSK Mask             */
#define CAN_CTRL1_PN_WTOF_MSK_SHIFT              (17U)                                               /**< CAN0_CTRL1_PN.WTOF_MSK Position         */
#define CAN_CTRL1_PN_WTOF_MSK(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PN_WTOF_MSK_SHIFT))&CAN_CTRL1_PN_WTOF_MSK_MASK) /**< CAN0_CTRL1_PN.WTOF_MSK Field            */
/** @} */

/** @name CTRL2_PN - Pretended Networking Control 2 Register */ /** @{ */
#define CAN_CTRL2_PN_MATCHTO_MASK                (0xFFFFU)                                           /**< CAN0_CTRL2_PN.MATCHTO Mask              */
#define CAN_CTRL2_PN_MATCHTO_SHIFT               (0U)                                                /**< CAN0_CTRL2_PN.MATCHTO Position          */
#define CAN_CTRL2_PN_MATCHTO(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_PN_MATCHTO_SHIFT))&CAN_CTRL2_PN_MATCHTO_MASK) /**< CAN0_CTRL2_PN.MATCHTO Field             */
/** @} */

/** @name WU_MTC - Pretended Networking Wake Up Match Register */ /** @{ */
#define CAN_WU_MTC_MCOUNTER_MASK                 (0xFF00U)                                           /**< CAN0_WU_MTC.MCOUNTER Mask               */
#define CAN_WU_MTC_MCOUNTER_SHIFT                (8U)                                                /**< CAN0_WU_MTC.MCOUNTER Position           */
#define CAN_WU_MTC_MCOUNTER(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_WU_MTC_MCOUNTER_SHIFT))&CAN_WU_MTC_MCOUNTER_MASK) /**< CAN0_WU_MTC.MCOUNTER Field              */
#define CAN_WU_MTC_WUMF_MASK                     (0x10000U)                                          /**< CAN0_WU_MTC.WUMF Mask                   */
#define CAN_WU_MTC_WUMF_SHIFT                    (16U)                                               /**< CAN0_WU_MTC.WUMF Position               */
#define CAN_WU_MTC_WUMF(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WU_MTC_WUMF_SHIFT))&CAN_WU_MTC_WUMF_MASK) /**< CAN0_WU_MTC.WUMF Field                  */
#define CAN_WU_MTC_WTOF_MASK                     (0x20000U)                                          /**< CAN0_WU_MTC.WTOF Mask                   */
#define CAN_WU_MTC_WTOF_SHIFT                    (17U)                                               /**< CAN0_WU_MTC.WTOF Position               */
#define CAN_WU_MTC_WTOF(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WU_MTC_WTOF_SHIFT))&CAN_WU_MTC_WTOF_MASK) /**< CAN0_WU_MTC.WTOF Field                  */
/** @} */

/** @name FLT_ID1 - Pretended Networking ID Filter 1 Register */ /** @{ */
#define CAN_FLT_ID1_FLT_ID1_MASK                 (0x1FFFFFFFU)                                       /**< CAN0_FLT_ID1.FLT_ID1 Mask               */
#define CAN_FLT_ID1_FLT_ID1_SHIFT                (0U)                                                /**< CAN0_FLT_ID1.FLT_ID1 Position           */
#define CAN_FLT_ID1_FLT_ID1(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID1_FLT_ID1_SHIFT))&CAN_FLT_ID1_FLT_ID1_MASK) /**< CAN0_FLT_ID1.FLT_ID1 Field              */
#define CAN_FLT_ID1_FLT_RTR_MASK                 (0x20000000U)                                       /**< CAN0_FLT_ID1.FLT_RTR Mask               */
#define CAN_FLT_ID1_FLT_RTR_SHIFT                (29U)                                               /**< CAN0_FLT_ID1.FLT_RTR Position           */
#define CAN_FLT_ID1_FLT_RTR(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID1_FLT_RTR_SHIFT))&CAN_FLT_ID1_FLT_RTR_MASK) /**< CAN0_FLT_ID1.FLT_RTR Field              */
#define CAN_FLT_ID1_FLT_IDE_MASK                 (0x40000000U)                                       /**< CAN0_FLT_ID1.FLT_IDE Mask               */
#define CAN_FLT_ID1_FLT_IDE_SHIFT                (30U)                                               /**< CAN0_FLT_ID1.FLT_IDE Position           */
#define CAN_FLT_ID1_FLT_IDE(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID1_FLT_IDE_SHIFT))&CAN_FLT_ID1_FLT_IDE_MASK) /**< CAN0_FLT_ID1.FLT_IDE Field              */
/** @} */

/** @name FLT_DLC - Pretended Networking DLC Filter Register */ /** @{ */
#define CAN_FLT_DLC_FLT_DLC_HI_MASK              (0xFU)                                              /**< CAN0_FLT_DLC.FLT_DLC_HI Mask            */
#define CAN_FLT_DLC_FLT_DLC_HI_SHIFT             (0U)                                                /**< CAN0_FLT_DLC.FLT_DLC_HI Position        */
#define CAN_FLT_DLC_FLT_DLC_HI(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FLT_DLC_FLT_DLC_HI_SHIFT))&CAN_FLT_DLC_FLT_DLC_HI_MASK) /**< CAN0_FLT_DLC.FLT_DLC_HI Field           */
#define CAN_FLT_DLC_FLT_DLC_LO_MASK              (0xF0000U)                                          /**< CAN0_FLT_DLC.FLT_DLC_LO Mask            */
#define CAN_FLT_DLC_FLT_DLC_LO_SHIFT             (16U)                                               /**< CAN0_FLT_DLC.FLT_DLC_LO Position        */
#define CAN_FLT_DLC_FLT_DLC_LO(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FLT_DLC_FLT_DLC_LO_SHIFT))&CAN_FLT_DLC_FLT_DLC_LO_MASK) /**< CAN0_FLT_DLC.FLT_DLC_LO Field           */
/** @} */

/** @name PL1_LO - Pretended Networking payload Low Filter 1 Register */ /** @{ */
#define CAN_PL1_LO_Data_byte_3_MASK              (0xFFU)                                             /**< CAN0_PL1_LO.Data_byte_3 Mask            */
#define CAN_PL1_LO_Data_byte_3_SHIFT             (0U)                                                /**< CAN0_PL1_LO.Data_byte_3 Position        */
#define CAN_PL1_LO_Data_byte_3(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_LO_Data_byte_3_SHIFT))&CAN_PL1_LO_Data_byte_3_MASK) /**< CAN0_PL1_LO.Data_byte_3 Field           */
#define CAN_PL1_LO_Data_byte_2_MASK              (0xFF00U)                                           /**< CAN0_PL1_LO.Data_byte_2 Mask            */
#define CAN_PL1_LO_Data_byte_2_SHIFT             (8U)                                                /**< CAN0_PL1_LO.Data_byte_2 Position        */
#define CAN_PL1_LO_Data_byte_2(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_LO_Data_byte_2_SHIFT))&CAN_PL1_LO_Data_byte_2_MASK) /**< CAN0_PL1_LO.Data_byte_2 Field           */
#define CAN_PL1_LO_Data_byte_1_MASK              (0xFF0000U)                                         /**< CAN0_PL1_LO.Data_byte_1 Mask            */
#define CAN_PL1_LO_Data_byte_1_SHIFT             (16U)                                               /**< CAN0_PL1_LO.Data_byte_1 Position        */
#define CAN_PL1_LO_Data_byte_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_LO_Data_byte_1_SHIFT))&CAN_PL1_LO_Data_byte_1_MASK) /**< CAN0_PL1_LO.Data_byte_1 Field           */
#define CAN_PL1_LO_Data_byte_0_MASK              (0xFF000000U)                                       /**< CAN0_PL1_LO.Data_byte_0 Mask            */
#define CAN_PL1_LO_Data_byte_0_SHIFT             (24U)                                               /**< CAN0_PL1_LO.Data_byte_0 Position        */
#define CAN_PL1_LO_Data_byte_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_LO_Data_byte_0_SHIFT))&CAN_PL1_LO_Data_byte_0_MASK) /**< CAN0_PL1_LO.Data_byte_0 Field           */
/** @} */

/** @name PL1_HI - Pretended Networking payload High Filter 1 Register */ /** @{ */
#define CAN_PL1_HI_Data_byte_7_MASK              (0xFFU)                                             /**< CAN0_PL1_HI.Data_byte_7 Mask            */
#define CAN_PL1_HI_Data_byte_7_SHIFT             (0U)                                                /**< CAN0_PL1_HI.Data_byte_7 Position        */
#define CAN_PL1_HI_Data_byte_7(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_HI_Data_byte_7_SHIFT))&CAN_PL1_HI_Data_byte_7_MASK) /**< CAN0_PL1_HI.Data_byte_7 Field           */
#define CAN_PL1_HI_Data_byte_6_MASK              (0xFF00U)                                           /**< CAN0_PL1_HI.Data_byte_6 Mask            */
#define CAN_PL1_HI_Data_byte_6_SHIFT             (8U)                                                /**< CAN0_PL1_HI.Data_byte_6 Position        */
#define CAN_PL1_HI_Data_byte_6(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_HI_Data_byte_6_SHIFT))&CAN_PL1_HI_Data_byte_6_MASK) /**< CAN0_PL1_HI.Data_byte_6 Field           */
#define CAN_PL1_HI_Data_byte_5_MASK              (0xFF0000U)                                         /**< CAN0_PL1_HI.Data_byte_5 Mask            */
#define CAN_PL1_HI_Data_byte_5_SHIFT             (16U)                                               /**< CAN0_PL1_HI.Data_byte_5 Position        */
#define CAN_PL1_HI_Data_byte_5(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_HI_Data_byte_5_SHIFT))&CAN_PL1_HI_Data_byte_5_MASK) /**< CAN0_PL1_HI.Data_byte_5 Field           */
#define CAN_PL1_HI_Data_byte_4_MASK              (0xFF000000U)                                       /**< CAN0_PL1_HI.Data_byte_4 Mask            */
#define CAN_PL1_HI_Data_byte_4_SHIFT             (24U)                                               /**< CAN0_PL1_HI.Data_byte_4 Position        */
#define CAN_PL1_HI_Data_byte_4(x)                (((uint32_t)(((uint32_t)(x))<<CAN_PL1_HI_Data_byte_4_SHIFT))&CAN_PL1_HI_Data_byte_4_MASK) /**< CAN0_PL1_HI.Data_byte_4 Field           */
/** @} */

/** @name FLT_ID2_IDMASK - Pretended Networking ID Filter 2 Register / ID Mask Register */ /** @{ */
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_MASK   (0x1FFFFFFFU)                                       /**< CAN0_FLT_ID2_IDMASK.FLT_ID2_IDMASK Mask */
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_SHIFT  (0U)                                                /**< CAN0_FLT_ID2_IDMASK.FLT_ID2_IDMASK Position*/
#define CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK(x)     (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_SHIFT))&CAN_FLT_ID2_IDMASK_FLT_ID2_IDMASK_MASK) /**< CAN0_FLT_ID2_IDMASK.FLT_ID2_IDMASK Field*/
#define CAN_FLT_ID2_IDMASK_RTR_MSK_MASK          (0x20000000U)                                       /**< CAN0_FLT_ID2_IDMASK.RTR_MSK Mask        */
#define CAN_FLT_ID2_IDMASK_RTR_MSK_SHIFT         (29U)                                               /**< CAN0_FLT_ID2_IDMASK.RTR_MSK Position    */
#define CAN_FLT_ID2_IDMASK_RTR_MSK(x)            (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID2_IDMASK_RTR_MSK_SHIFT))&CAN_FLT_ID2_IDMASK_RTR_MSK_MASK) /**< CAN0_FLT_ID2_IDMASK.RTR_MSK Field       */
#define CAN_FLT_ID2_IDMASK_IDE_MSK_MASK          (0x40000000U)                                       /**< CAN0_FLT_ID2_IDMASK.IDE_MSK Mask        */
#define CAN_FLT_ID2_IDMASK_IDE_MSK_SHIFT         (30U)                                               /**< CAN0_FLT_ID2_IDMASK.IDE_MSK Position    */
#define CAN_FLT_ID2_IDMASK_IDE_MSK(x)            (((uint32_t)(((uint32_t)(x))<<CAN_FLT_ID2_IDMASK_IDE_MSK_SHIFT))&CAN_FLT_ID2_IDMASK_IDE_MSK_MASK) /**< CAN0_FLT_ID2_IDMASK.IDE_MSK Field       */
/** @} */

/** @name PL2_PLMASK_LO - Pretended Networking payload Low Filter 2 Register / payload Low Mask Register */ /** @{ */
#define CAN_PL2_PLMASK_LO_Data_byte_3_MASK       (0xFFU)                                             /**< CAN0_PL2_PLMASK_LO.Data_byte_3 Mask     */
#define CAN_PL2_PLMASK_LO_Data_byte_3_SHIFT      (0U)                                                /**< CAN0_PL2_PLMASK_LO.Data_byte_3 Position */
#define CAN_PL2_PLMASK_LO_Data_byte_3(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_LO_Data_byte_3_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_3_MASK) /**< CAN0_PL2_PLMASK_LO.Data_byte_3 Field    */
#define CAN_PL2_PLMASK_LO_Data_byte_2_MASK       (0xFF00U)                                           /**< CAN0_PL2_PLMASK_LO.Data_byte_2 Mask     */
#define CAN_PL2_PLMASK_LO_Data_byte_2_SHIFT      (8U)                                                /**< CAN0_PL2_PLMASK_LO.Data_byte_2 Position */
#define CAN_PL2_PLMASK_LO_Data_byte_2(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_LO_Data_byte_2_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_2_MASK) /**< CAN0_PL2_PLMASK_LO.Data_byte_2 Field    */
#define CAN_PL2_PLMASK_LO_Data_byte_1_MASK       (0xFF0000U)                                         /**< CAN0_PL2_PLMASK_LO.Data_byte_1 Mask     */
#define CAN_PL2_PLMASK_LO_Data_byte_1_SHIFT      (16U)                                               /**< CAN0_PL2_PLMASK_LO.Data_byte_1 Position */
#define CAN_PL2_PLMASK_LO_Data_byte_1(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_LO_Data_byte_1_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_1_MASK) /**< CAN0_PL2_PLMASK_LO.Data_byte_1 Field    */
#define CAN_PL2_PLMASK_LO_Data_byte_0_MASK       (0xFF000000U)                                       /**< CAN0_PL2_PLMASK_LO.Data_byte_0 Mask     */
#define CAN_PL2_PLMASK_LO_Data_byte_0_SHIFT      (24U)                                               /**< CAN0_PL2_PLMASK_LO.Data_byte_0 Position */
#define CAN_PL2_PLMASK_LO_Data_byte_0(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_LO_Data_byte_0_SHIFT))&CAN_PL2_PLMASK_LO_Data_byte_0_MASK) /**< CAN0_PL2_PLMASK_LO.Data_byte_0 Field    */
/** @} */

/** @name PL2_PLMASK_HI - Pretended Networking payload High Filter 2 low order bits / payload High Mask Register */ /** @{ */
#define CAN_PL2_PLMASK_HI_Data_byte_7_MASK       (0xFFU)                                             /**< CAN0_PL2_PLMASK_HI.Data_byte_7 Mask     */
#define CAN_PL2_PLMASK_HI_Data_byte_7_SHIFT      (0U)                                                /**< CAN0_PL2_PLMASK_HI.Data_byte_7 Position */
#define CAN_PL2_PLMASK_HI_Data_byte_7(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_HI_Data_byte_7_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_7_MASK) /**< CAN0_PL2_PLMASK_HI.Data_byte_7 Field    */
#define CAN_PL2_PLMASK_HI_Data_byte_6_MASK       (0xFF00U)                                           /**< CAN0_PL2_PLMASK_HI.Data_byte_6 Mask     */
#define CAN_PL2_PLMASK_HI_Data_byte_6_SHIFT      (8U)                                                /**< CAN0_PL2_PLMASK_HI.Data_byte_6 Position */
#define CAN_PL2_PLMASK_HI_Data_byte_6(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_HI_Data_byte_6_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_6_MASK) /**< CAN0_PL2_PLMASK_HI.Data_byte_6 Field    */
#define CAN_PL2_PLMASK_HI_Data_byte_5_MASK       (0xFF0000U)                                         /**< CAN0_PL2_PLMASK_HI.Data_byte_5 Mask     */
#define CAN_PL2_PLMASK_HI_Data_byte_5_SHIFT      (16U)                                               /**< CAN0_PL2_PLMASK_HI.Data_byte_5 Position */
#define CAN_PL2_PLMASK_HI_Data_byte_5(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_HI_Data_byte_5_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_5_MASK) /**< CAN0_PL2_PLMASK_HI.Data_byte_5 Field    */
#define CAN_PL2_PLMASK_HI_Data_byte_4_MASK       (0xFF000000U)                                       /**< CAN0_PL2_PLMASK_HI.Data_byte_4 Mask     */
#define CAN_PL2_PLMASK_HI_Data_byte_4_SHIFT      (24U)                                               /**< CAN0_PL2_PLMASK_HI.Data_byte_4 Position */
#define CAN_PL2_PLMASK_HI_Data_byte_4(x)         (((uint32_t)(((uint32_t)(x))<<CAN_PL2_PLMASK_HI_Data_byte_4_SHIFT))&CAN_PL2_PLMASK_HI_Data_byte_4_MASK) /**< CAN0_PL2_PLMASK_HI.Data_byte_4 Field    */
/** @} */

/** @name WMBn_CS - Wake Up Message Buffer Register for C/S */ /** @{ */
#define CAN_WMBn_CS_DLC_MASK                     (0xF0000U)                                          /**< CAN0_WMBn_CS.DLC Mask                   */
#define CAN_WMBn_CS_DLC_SHIFT                    (16U)                                               /**< CAN0_WMBn_CS.DLC Position               */
#define CAN_WMBn_CS_DLC(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_CS_DLC_SHIFT))&CAN_WMBn_CS_DLC_MASK) /**< CAN0_WMBn_CS.DLC Field                  */
#define CAN_WMBn_CS_RTR_MASK                     (0x100000U)                                         /**< CAN0_WMBn_CS.RTR Mask                   */
#define CAN_WMBn_CS_RTR_SHIFT                    (20U)                                               /**< CAN0_WMBn_CS.RTR Position               */
#define CAN_WMBn_CS_RTR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_CS_RTR_SHIFT))&CAN_WMBn_CS_RTR_MASK) /**< CAN0_WMBn_CS.RTR Field                  */
#define CAN_WMBn_CS_IDE_MASK                     (0x200000U)                                         /**< CAN0_WMBn_CS.IDE Mask                   */
#define CAN_WMBn_CS_IDE_SHIFT                    (21U)                                               /**< CAN0_WMBn_CS.IDE Position               */
#define CAN_WMBn_CS_IDE(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_CS_IDE_SHIFT))&CAN_WMBn_CS_IDE_MASK) /**< CAN0_WMBn_CS.IDE Field                  */
#define CAN_WMBn_CS_SRR_MASK                     (0x400000U)                                         /**< CAN0_WMBn_CS.SRR Mask                   */
#define CAN_WMBn_CS_SRR_SHIFT                    (22U)                                               /**< CAN0_WMBn_CS.SRR Position               */
#define CAN_WMBn_CS_SRR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_CS_SRR_SHIFT))&CAN_WMBn_CS_SRR_MASK) /**< CAN0_WMBn_CS.SRR Field                  */
/** @} */

/** @name WMBn_ID - Wake Up Message Buffer Register for ID */ /** @{ */
#define CAN_WMBn_ID_ID_MASK                      (0x1FFFFFFFU)                                       /**< CAN0_WMBn_ID.ID Mask                    */
#define CAN_WMBn_ID_ID_SHIFT                     (0U)                                                /**< CAN0_WMBn_ID.ID Position                */
#define CAN_WMBn_ID_ID(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_ID_ID_SHIFT))&CAN_WMBn_ID_ID_MASK) /**< CAN0_WMBn_ID.ID Field                   */
/** @} */

/** @name WMBn_D03 - Wake Up Message Buffer Register for Data 0-3 */ /** @{ */
#define CAN_WMBn_D03_Data_byte_3_MASK            (0xFFU)                                             /**< CAN0_WMBn_D03.Data_byte_3 Mask          */
#define CAN_WMBn_D03_Data_byte_3_SHIFT           (0U)                                                /**< CAN0_WMBn_D03.Data_byte_3 Position      */
#define CAN_WMBn_D03_Data_byte_3(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D03_Data_byte_3_SHIFT))&CAN_WMBn_D03_Data_byte_3_MASK) /**< CAN0_WMBn_D03.Data_byte_3 Field         */
#define CAN_WMBn_D03_Data_byte_2_MASK            (0xFF00U)                                           /**< CAN0_WMBn_D03.Data_byte_2 Mask          */
#define CAN_WMBn_D03_Data_byte_2_SHIFT           (8U)                                                /**< CAN0_WMBn_D03.Data_byte_2 Position      */
#define CAN_WMBn_D03_Data_byte_2(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D03_Data_byte_2_SHIFT))&CAN_WMBn_D03_Data_byte_2_MASK) /**< CAN0_WMBn_D03.Data_byte_2 Field         */
#define CAN_WMBn_D03_Data_byte_1_MASK            (0xFF0000U)                                         /**< CAN0_WMBn_D03.Data_byte_1 Mask          */
#define CAN_WMBn_D03_Data_byte_1_SHIFT           (16U)                                               /**< CAN0_WMBn_D03.Data_byte_1 Position      */
#define CAN_WMBn_D03_Data_byte_1(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D03_Data_byte_1_SHIFT))&CAN_WMBn_D03_Data_byte_1_MASK) /**< CAN0_WMBn_D03.Data_byte_1 Field         */
#define CAN_WMBn_D03_Data_byte_0_MASK            (0xFF000000U)                                       /**< CAN0_WMBn_D03.Data_byte_0 Mask          */
#define CAN_WMBn_D03_Data_byte_0_SHIFT           (24U)                                               /**< CAN0_WMBn_D03.Data_byte_0 Position      */
#define CAN_WMBn_D03_Data_byte_0(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D03_Data_byte_0_SHIFT))&CAN_WMBn_D03_Data_byte_0_MASK) /**< CAN0_WMBn_D03.Data_byte_0 Field         */
/** @} */

/** @name WMBn_D47 - Wake Up Message Buffer Register Data 4-7 */ /** @{ */
#define CAN_WMBn_D47_Data_byte_7_MASK            (0xFFU)                                             /**< CAN0_WMBn_D47.Data_byte_7 Mask          */
#define CAN_WMBn_D47_Data_byte_7_SHIFT           (0U)                                                /**< CAN0_WMBn_D47.Data_byte_7 Position      */
#define CAN_WMBn_D47_Data_byte_7(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D47_Data_byte_7_SHIFT))&CAN_WMBn_D47_Data_byte_7_MASK) /**< CAN0_WMBn_D47.Data_byte_7 Field         */
#define CAN_WMBn_D47_Data_byte_6_MASK            (0xFF00U)                                           /**< CAN0_WMBn_D47.Data_byte_6 Mask          */
#define CAN_WMBn_D47_Data_byte_6_SHIFT           (8U)                                                /**< CAN0_WMBn_D47.Data_byte_6 Position      */
#define CAN_WMBn_D47_Data_byte_6(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D47_Data_byte_6_SHIFT))&CAN_WMBn_D47_Data_byte_6_MASK) /**< CAN0_WMBn_D47.Data_byte_6 Field         */
#define CAN_WMBn_D47_Data_byte_5_MASK            (0xFF0000U)                                         /**< CAN0_WMBn_D47.Data_byte_5 Mask          */
#define CAN_WMBn_D47_Data_byte_5_SHIFT           (16U)                                               /**< CAN0_WMBn_D47.Data_byte_5 Position      */
#define CAN_WMBn_D47_Data_byte_5(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D47_Data_byte_5_SHIFT))&CAN_WMBn_D47_Data_byte_5_MASK) /**< CAN0_WMBn_D47.Data_byte_5 Field         */
#define CAN_WMBn_D47_Data_byte_4_MASK            (0xFF000000U)                                       /**< CAN0_WMBn_D47.Data_byte_4 Mask          */
#define CAN_WMBn_D47_Data_byte_4_SHIFT           (24U)                                               /**< CAN0_WMBn_D47.Data_byte_4 Position      */
#define CAN_WMBn_D47_Data_byte_4(x)              (((uint32_t)(((uint32_t)(x))<<CAN_WMBn_D47_Data_byte_4_SHIFT))&CAN_WMBn_D47_Data_byte_4_MASK) /**< CAN0_WMBn_D47.Data_byte_4 Field         */
/** @} */

/** @name FDCTRL - CAN FD Control Register */ /** @{ */
#define CAN_FDCTRL_TDCVAL_MASK                   (0x3FU)                                             /**< CAN0_FDCTRL.TDCVAL Mask                 */
#define CAN_FDCTRL_TDCVAL_SHIFT                  (0U)                                                /**< CAN0_FDCTRL.TDCVAL Position             */
#define CAN_FDCTRL_TDCVAL(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_TDCVAL_SHIFT))&CAN_FDCTRL_TDCVAL_MASK) /**< CAN0_FDCTRL.TDCVAL Field                */
#define CAN_FDCTRL_TDCOFF_MASK                   (0x1F00U)                                           /**< CAN0_FDCTRL.TDCOFF Mask                 */
#define CAN_FDCTRL_TDCOFF_SHIFT                  (8U)                                                /**< CAN0_FDCTRL.TDCOFF Position             */
#define CAN_FDCTRL_TDCOFF(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_TDCOFF_SHIFT))&CAN_FDCTRL_TDCOFF_MASK) /**< CAN0_FDCTRL.TDCOFF Field                */
#define CAN_FDCTRL_TDCFAIL_MASK                  (0x4000U)                                           /**< CAN0_FDCTRL.TDCFAIL Mask                */
#define CAN_FDCTRL_TDCFAIL_SHIFT                 (14U)                                               /**< CAN0_FDCTRL.TDCFAIL Position            */
#define CAN_FDCTRL_TDCFAIL(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_TDCFAIL_SHIFT))&CAN_FDCTRL_TDCFAIL_MASK) /**< CAN0_FDCTRL.TDCFAIL Field               */
#define CAN_FDCTRL_TDCEN_MASK                    (0x8000U)                                           /**< CAN0_FDCTRL.TDCEN Mask                  */
#define CAN_FDCTRL_TDCEN_SHIFT                   (15U)                                               /**< CAN0_FDCTRL.TDCEN Position              */
#define CAN_FDCTRL_TDCEN(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_TDCEN_SHIFT))&CAN_FDCTRL_TDCEN_MASK) /**< CAN0_FDCTRL.TDCEN Field                 */
#define CAN_FDCTRL_MBDSR0_MASK                   (0x30000U)                                          /**< CAN0_FDCTRL.MBDSR0 Mask                 */
#define CAN_FDCTRL_MBDSR0_SHIFT                  (16U)                                               /**< CAN0_FDCTRL.MBDSR0 Position             */
#define CAN_FDCTRL_MBDSR0(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_MBDSR0_SHIFT))&CAN_FDCTRL_MBDSR0_MASK) /**< CAN0_FDCTRL.MBDSR0 Field                */
#define CAN_FDCTRL_FDRATE_MASK                   (0x80000000U)                                       /**< CAN0_FDCTRL.FDRATE Mask                 */
#define CAN_FDCTRL_FDRATE_SHIFT                  (31U)                                               /**< CAN0_FDCTRL.FDRATE Position             */
#define CAN_FDCTRL_FDRATE(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_FDCTRL_FDRATE_SHIFT))&CAN_FDCTRL_FDRATE_MASK) /**< CAN0_FDCTRL.FDRATE Field                */
/** @} */

/** @name FDCBT - CAN FD Bit Timing Register */ /** @{ */
#define CAN_FDCBT_FPSEG2_MASK                    (0x7U)                                              /**< CAN0_FDCBT.FPSEG2 Mask                  */
#define CAN_FDCBT_FPSEG2_SHIFT                   (0U)                                                /**< CAN0_FDCBT.FPSEG2 Position              */
#define CAN_FDCBT_FPSEG2(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_FDCBT_FPSEG2_SHIFT))&CAN_FDCBT_FPSEG2_MASK) /**< CAN0_FDCBT.FPSEG2 Field                 */
#define CAN_FDCBT_FPSEG1_MASK                    (0xE0U)                                             /**< CAN0_FDCBT.FPSEG1 Mask                  */
#define CAN_FDCBT_FPSEG1_SHIFT                   (5U)                                                /**< CAN0_FDCBT.FPSEG1 Position              */
#define CAN_FDCBT_FPSEG1(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_FDCBT_FPSEG1_SHIFT))&CAN_FDCBT_FPSEG1_MASK) /**< CAN0_FDCBT.FPSEG1 Field                 */
#define CAN_FDCBT_FPROPSEG_MASK                  (0x7C00U)                                           /**< CAN0_FDCBT.FPROPSEG Mask                */
#define CAN_FDCBT_FPROPSEG_SHIFT                 (10U)                                               /**< CAN0_FDCBT.FPROPSEG Position            */
#define CAN_FDCBT_FPROPSEG(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_FDCBT_FPROPSEG_SHIFT))&CAN_FDCBT_FPROPSEG_MASK) /**< CAN0_FDCBT.FPROPSEG Field               */
#define CAN_FDCBT_FRJW_MASK                      (0x70000U)                                          /**< CAN0_FDCBT.FRJW Mask                    */
#define CAN_FDCBT_FRJW_SHIFT                     (16U)                                               /**< CAN0_FDCBT.FRJW Position                */
#define CAN_FDCBT_FRJW(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_FDCBT_FRJW_SHIFT))&CAN_FDCBT_FRJW_MASK) /**< CAN0_FDCBT.FRJW Field                   */
#define CAN_FDCBT_FPRESDIV_MASK                  (0x3FF00000U)                                       /**< CAN0_FDCBT.FPRESDIV Mask                */
#define CAN_FDCBT_FPRESDIV_SHIFT                 (20U)                                               /**< CAN0_FDCBT.FPRESDIV Position            */
#define CAN_FDCBT_FPRESDIV(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_FDCBT_FPRESDIV_SHIFT))&CAN_FDCBT_FPRESDIV_MASK) /**< CAN0_FDCBT.FPRESDIV Field               */
/** @} */

/** @name FDCRC - CAN FD CRC Register */ /** @{ */
#define CAN_FDCRC_FD_TXCRC_MASK                  (0x1FFFFFU)                                         /**< CAN0_FDCRC.FD_TXCRC Mask                */
#define CAN_FDCRC_FD_TXCRC_SHIFT                 (0U)                                                /**< CAN0_FDCRC.FD_TXCRC Position            */
#define CAN_FDCRC_FD_TXCRC(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_FDCRC_FD_TXCRC_SHIFT))&CAN_FDCRC_FD_TXCRC_MASK) /**< CAN0_FDCRC.FD_TXCRC Field               */
#define CAN_FDCRC_FD_MBCRC_MASK                  (0x7F000000U)                                       /**< CAN0_FDCRC.FD_MBCRC Mask                */
#define CAN_FDCRC_FD_MBCRC_SHIFT                 (24U)                                               /**< CAN0_FDCRC.FD_MBCRC Position            */
#define CAN_FDCRC_FD_MBCRC(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_FDCRC_FD_MBCRC_SHIFT))&CAN_FDCRC_FD_MBCRC_MASK) /**< CAN0_FDCRC.FD_MBCRC Field               */
/** @} */

/** @} */ /* End group CAN_Register_Masks_GROUP */


/* CAN0 - Peripheral instance base addresses */
#define CAN0_BasePtr                   0x40024000UL //!< Peripheral base address
#define CAN0                           ((CAN_Type *) CAN0_BasePtr) //!< Freescale base pointer
#define CAN0_BASE_PTR                  (CAN0) //!< Freescale style base pointer
#define CAN0_IRQS { CAN0_ORed_IRQn, CAN0_Error_IRQn, CAN0_WakeUp_IRQn, CAN0_MessageBuffer_0_15_IRQn, CAN0_MessageBuffer_16_31_IRQn,  }


/** @} */ /* End group CAN_Peripheral_access_layer_GROUP */


/** @brief C Struct for CAN */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CAN_Peripheral_access_layer_GROUP CAN Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CAN1 (file:CAN1_FLEX_S32K14x)        ================ */
/* ================================================================================ */

/**
 * @brief Flex Controller Area Network module
 */
#define CAN1_FIFO_FILTER_COUNT 40       /**< Number of Filter IDs                               */
#define CAN1_MESSAGE_BUFFER_COUNT 16    /**< Number of message buffers                          */
#define CAN1_WAKEUP_BUFFER_COUNT 4      /**< Number of wakeup buffers                           */
/**
 * @struct CAN1_Type
 * @brief  C Struct allowing access to CAN registers
 */
typedef struct CAN1_Type {
   __IO uint32_t  MCR;                          /**< 0000: Module Configuration Register                                */
   __IO uint32_t  CTRL1;                        /**< 0004: Control 1 Register                                           */
   __IO uint32_t  TIMER;                        /**< 0008: Free Running Timer                                           */
        uint8_t   RESERVED_0[4];                /**< 000C: 0x4 bytes                                                    */
   __IO uint32_t  RXMGMASK;                     /**< 0010: Rx Mailboxes Global Mask Register                            */
   __IO uint32_t  RX14MASK;                     /**< 0014: Rx 14 Mask register                                          */
   __IO uint32_t  RX15MASK;                     /**< 0018: Rx 15 Mask register                                          */
   __IO uint32_t  ECR;                          /**< 001C: Error Counter                                                */
   __IO uint32_t  ESR1;                         /**< 0020: Error and Status 1 register                                  */
        uint8_t   RESERVED_1[4];                /**< 0024: 0x4 bytes                                                    */
   __IO uint32_t  IMASK1;                       /**< 0028: Interrupt Masks 1 register                                   */
        uint8_t   RESERVED_2[4];                /**< 002C: 0x4 bytes                                                    */
   __IO uint32_t  IFLAG1;                       /**< 0030: Interrupt Flags 1 register                                   */
   __IO uint32_t  CTRL2;                        /**< 0034: Control 2 Register                                           */
   __I  uint32_t  ESR2;                         /**< 0038: Error and Status 2 register                                  */
        uint8_t   RESERVED_3[8];                /**< 003C: 0x8 bytes                                                    */
   __I  uint32_t  CRCR;                         /**< 0044: CRC Register                                                 */
   union {                                      /**< 0048: (size=0004)                                                  */
      __IO uint32_t  RXFGMASK;                  /**< 0048: Rx FIFO Global Mask register                                 */
      __IO uint32_t  RXFGMASK_A;                /**< 0048: Rx FIFO Global Mask register (format A)                      */
      __IO uint32_t  RXFGMASK_B;                /**< 0048: Rx FIFO Global Mask register (format B)                      */
      __IO uint32_t  RXFGMASK_C;                /**< 0048: Rx FIFO Global Mask register (format C)                      */
   };
   __I  uint32_t  RXFIR;                        /**< 004C: Rx FIFO Information Register                                 */
   __IO uint32_t  CBT;                          /**< 0050: CAN Bit Timing Register                                      */
        uint8_t   RESERVED_4[44];               /**< 0054: 0x2C bytes                                                   */
   union {                                      /**< 0080: (size=0100)                                                  */
      struct {
         __IO uint32_t  CS;                     /**< 0080: FIFO Message Buffer CS Register                              */
         __IO uint32_t  ID;                     /**< 0084: FIFO Message Buffer ID Register                              */
         __IO uint32_t  WORD0;                  /**< 0088: FIFO Message Buffer WORD0 Register                           */
         __IO uint32_t  WORD1;                  /**< 008C: FIFO Message Buffer WORD1 Register                           */
              uint8_t   RESERVED_5[80];         /**< 0090: 0x50 bytes                                                   */
         union {                                /**< 00E0: (size=00A0)                                                  */
            __IO uint32_t  FILTER_ID[CAN1_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID                                       */
            __IO uint32_t  FILTER_ID_A[CAN1_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format A)                            */
            __IO uint32_t  FILTER_ID_B[CAN1_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format B)                            */
            __IO uint32_t  FILTER_ID_C[CAN1_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format C)                            */
         };
      } FIFO;                                   /**< 0080: (cluster: size=0x0100, 256)                                  */
      struct {
         __IO uint32_t  CS;                     /**< 0080: Message Buffer 0 CS Register                                 */
         __IO uint32_t  ID;                     /**< 0084: Message Buffer 0 ID Register                                 */
         __IO uint32_t  WORD0;                  /**< 0088: Message Buffer 0 WORD0 Register                              */
         __IO uint32_t  WORD1;                  /**< 008C: Message Buffer 0 WORD1 Register                              */
      } MB[CAN1_MESSAGE_BUFFER_COUNT];          /**< 0080: (cluster: size=0x0100, 256)                                  */
   };
        uint8_t   RESERVED_7[1792];             /**< 0180: 0x700 bytes                                                  */
   __IO uint32_t  RXIMR[CAN1_MESSAGE_BUFFER_COUNT]; /**< 0880: Rx Individual Mask                                           */
        uint8_t   RESERVED_8[576];              /**< 08C0: 0x240 bytes                                                  */
   __IO uint32_t  CTRL1_PN;                     /**< 0B00: Pretended Networking Control 1 Register                      */
   __IO uint32_t  CTRL2_PN;                     /**< 0B04: Pretended Networking Control 2 Register                      */
   __IO uint32_t  WU_MTC;                       /**< 0B08: Pretended Networking Wake Up Match Register                  */
   __IO uint32_t  FLT_ID1;                      /**< 0B0C: Pretended Networking ID Filter 1 Register                    */
   __IO uint32_t  FLT_DLC;                      /**< 0B10: Pretended Networking DLC Filter Register                     */
   __IO uint32_t  PL1_LO;                       /**< 0B14: Pretended Networking payload Low Filter 1 Register           */
   __IO uint32_t  PL1_HI;                       /**< 0B18: Pretended Networking payload High Filter 1 Register          */
   __IO uint32_t  FLT_ID2_IDMASK;               /**< 0B1C: Pretended Networking ID Filter 2 Register / ID Mask Register */
   __IO uint32_t  PL2_PLMASK_LO;                /**< 0B20: Pretended Networking payload Low Filter 2 Register / payload Low Mask Register */
   __IO uint32_t  PL2_PLMASK_HI;                /**< 0B24: Pretended Networking payload High Filter 2 low order bits / payload High Mask Register */
        uint8_t   RESERVED_9[24];               /**< 0B28: 0x18 bytes                                                   */
   struct {
      __I  uint32_t  WMBn_CS;                   /**< 0B40: Wake Up Message Buffer Register for C/S                      */
      __I  uint32_t  WMBn_ID;                   /**< 0B44: Wake Up Message Buffer Register for ID                       */
      __I  uint32_t  WMBn_D03;                  /**< 0B48: Wake Up Message Buffer Register for Data 0-3                 */
      __I  uint32_t  WMBn_D47;                  /**< 0B4C: Wake Up Message Buffer Register Data 4-7                     */
   } WMB[CAN1_WAKEUP_BUFFER_COUNT];             /**< 0B40: (cluster: size=0x0040, 64)                                   */
        uint8_t   RESERVED_11[128];             /**< 0B80: 0x80 bytes                                                   */
   __IO uint32_t  FDCTRL;                       /**< 0C00: CAN FD Control Register                                      */
   __IO uint32_t  FDCBT;                        /**< 0C04: CAN FD Bit Timing Register                                   */
   __I  uint32_t  FDCRC;                        /**< 0C08: CAN FD CRC Register                                          */
} CAN1_Type;


/** @brief Register Masks for CAN */

/* -------------------------------------------------------------------------------- */
/* -----------     'CAN1' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup CAN_Register_Masks_GROUP CAN Register Masks */
/** @{ */

/** @} */ /* End group CAN_Register_Masks_GROUP */


/* CAN1 - Peripheral instance base addresses */
#define CAN1_BasePtr                   0x40025000UL //!< Peripheral base address
#define CAN1                           ((CAN1_Type *) CAN1_BasePtr) //!< Freescale base pointer
#define CAN1_BASE_PTR                  (CAN1) //!< Freescale style base pointer
#define CAN1_IRQS { CAN1_ORed_IRQn, CAN1_Error_IRQn, CAN1_MessageBuffer_0_15_IRQn,  }


/** @} */ /* End group CAN_Peripheral_access_layer_GROUP */


/** @brief C Struct for CAN */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CAN_Peripheral_access_layer_GROUP CAN Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CAN2 (derived from CAN1)             ================ */
/* ================================================================================ */

/**
 * @brief Flex Controller Area Network module
 */

/* CAN2 - Peripheral instance base addresses */
#define CAN2_BasePtr                   0x4002B000UL //!< Peripheral base address
#define CAN2                           ((CAN1_Type *) CAN2_BasePtr) //!< Freescale base pointer
#define CAN2_BASE_PTR                  (CAN2) //!< Freescale style base pointer
#define CAN2_IRQS { CAN2_ORed_IRQn, CAN2_Error_IRQn, CAN2_MessageBuffer_0_15_IRQn,  }


/** @} */ /* End group CAN_Peripheral_access_layer_GROUP */


/** @brief C Struct for CMP */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CMP_Peripheral_access_layer_GROUP CMP Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CMP0 (file:CMP0_MKE16F16)            ================ */
/* ================================================================================ */

/**
 * @brief Comparator, Voltage Ref, D-to-A Converter and Analog Mux
 */
/**
 * @struct CMP_Type
 * @brief  C Struct allowing access to CMP registers
 */
typedef struct CMP_Type {
   __IO uint32_t  C0;                           /**< 0000: CMP Control Register 0                                       */
   __IO uint32_t  C1;                           /**< 0004: CMP Control Register 1                                       */
   __IO uint32_t  C2;                           /**< 0008: CMP Control Register 2                                       */
} CMP_Type;


/** @brief Register Masks for CMP */

/* -------------------------------------------------------------------------------- */
/* -----------     'CMP0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup CMP_Register_Masks_GROUP CMP Register Masks */
/** @{ */

/** @name C0 - CMP Control Register 0 */ /** @{ */
#define CMP_C0_HYSTCTR_MASK                      (0x3U)                                              /**< CMP0_C0.HYSTCTR Mask                    */
#define CMP_C0_HYSTCTR_SHIFT                     (0U)                                                /**< CMP0_C0.HYSTCTR Position                */
#define CMP_C0_HYSTCTR(x)                        (((uint32_t)(((uint32_t)(x))<<CMP_C0_HYSTCTR_SHIFT))&CMP_C0_HYSTCTR_MASK) /**< CMP0_C0.HYSTCTR Field                   */
#define CMP_C0_OFFSET_MASK                       (0x4U)                                              /**< CMP0_C0.OFFSET Mask                     */
#define CMP_C0_OFFSET_SHIFT                      (2U)                                                /**< CMP0_C0.OFFSET Position                 */
#define CMP_C0_OFFSET(x)                         (((uint32_t)(((uint32_t)(x))<<CMP_C0_OFFSET_SHIFT))&CMP_C0_OFFSET_MASK) /**< CMP0_C0.OFFSET Field                    */
#define CMP_C0_FILTER_CNT_MASK                   (0x70U)                                             /**< CMP0_C0.FILTER_CNT Mask                 */
#define CMP_C0_FILTER_CNT_SHIFT                  (4U)                                                /**< CMP0_C0.FILTER_CNT Position             */
#define CMP_C0_FILTER_CNT(x)                     (((uint32_t)(((uint32_t)(x))<<CMP_C0_FILTER_CNT_SHIFT))&CMP_C0_FILTER_CNT_MASK) /**< CMP0_C0.FILTER_CNT Field                */
#define CMP_C0_EN_MASK                           (0x100U)                                            /**< CMP0_C0.EN Mask                         */
#define CMP_C0_EN_SHIFT                          (8U)                                                /**< CMP0_C0.EN Position                     */
#define CMP_C0_EN(x)                             (((uint32_t)(((uint32_t)(x))<<CMP_C0_EN_SHIFT))&CMP_C0_EN_MASK) /**< CMP0_C0.EN Field                        */
#define CMP_C0_OPE_MASK                          (0x200U)                                            /**< CMP0_C0.OPE Mask                        */
#define CMP_C0_OPE_SHIFT                         (9U)                                                /**< CMP0_C0.OPE Position                    */
#define CMP_C0_OPE(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_OPE_SHIFT))&CMP_C0_OPE_MASK) /**< CMP0_C0.OPE Field                       */
#define CMP_C0_COS_MASK                          (0x400U)                                            /**< CMP0_C0.COS Mask                        */
#define CMP_C0_COS_SHIFT                         (10U)                                               /**< CMP0_C0.COS Position                    */
#define CMP_C0_COS(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_COS_SHIFT))&CMP_C0_COS_MASK) /**< CMP0_C0.COS Field                       */
#define CMP_C0_INVT_MASK                         (0x800U)                                            /**< CMP0_C0.INVT Mask                       */
#define CMP_C0_INVT_SHIFT                        (11U)                                               /**< CMP0_C0.INVT Position                   */
#define CMP_C0_INVT(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C0_INVT_SHIFT))&CMP_C0_INVT_MASK) /**< CMP0_C0.INVT Field                      */
#define CMP_C0_PMODE_MASK                        (0x1000U)                                           /**< CMP0_C0.PMODE Mask                      */
#define CMP_C0_PMODE_SHIFT                       (12U)                                               /**< CMP0_C0.PMODE Position                  */
#define CMP_C0_PMODE(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C0_PMODE_SHIFT))&CMP_C0_PMODE_MASK) /**< CMP0_C0.PMODE Field                     */
#define CMP_C0_WE_MASK                           (0x4000U)                                           /**< CMP0_C0.WE Mask                         */
#define CMP_C0_WE_SHIFT                          (14U)                                               /**< CMP0_C0.WE Position                     */
#define CMP_C0_WE(x)                             (((uint32_t)(((uint32_t)(x))<<CMP_C0_WE_SHIFT))&CMP_C0_WE_MASK) /**< CMP0_C0.WE Field                        */
#define CMP_C0_SE_MASK                           (0x8000U)                                           /**< CMP0_C0.SE Mask                         */
#define CMP_C0_SE_SHIFT                          (15U)                                               /**< CMP0_C0.SE Position                     */
#define CMP_C0_SE(x)                             (((uint32_t)(((uint32_t)(x))<<CMP_C0_SE_SHIFT))&CMP_C0_SE_MASK) /**< CMP0_C0.SE Field                        */
#define CMP_C0_FPR_MASK                          (0xFF0000U)                                         /**< CMP0_C0.FPR Mask                        */
#define CMP_C0_FPR_SHIFT                         (16U)                                               /**< CMP0_C0.FPR Position                    */
#define CMP_C0_FPR(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_FPR_SHIFT))&CMP_C0_FPR_MASK) /**< CMP0_C0.FPR Field                       */
#define CMP_C0_COUT_MASK                         (0x1000000U)                                        /**< CMP0_C0.COUT Mask                       */
#define CMP_C0_COUT_SHIFT                        (24U)                                               /**< CMP0_C0.COUT Position                   */
#define CMP_C0_COUT(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C0_COUT_SHIFT))&CMP_C0_COUT_MASK) /**< CMP0_C0.COUT Field                      */
#define CMP_C0_CFF_MASK                          (0x2000000U)                                        /**< CMP0_C0.CFF Mask                        */
#define CMP_C0_CFF_SHIFT                         (25U)                                               /**< CMP0_C0.CFF Position                    */
#define CMP_C0_CFF(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_CFF_SHIFT))&CMP_C0_CFF_MASK) /**< CMP0_C0.CFF Field                       */
#define CMP_C0_CFR_MASK                          (0x4000000U)                                        /**< CMP0_C0.CFR Mask                        */
#define CMP_C0_CFR_SHIFT                         (26U)                                               /**< CMP0_C0.CFR Position                    */
#define CMP_C0_CFR(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_CFR_SHIFT))&CMP_C0_CFR_MASK) /**< CMP0_C0.CFR Field                       */
#define CMP_C0_IEF_MASK                          (0x8000000U)                                        /**< CMP0_C0.IEF Mask                        */
#define CMP_C0_IEF_SHIFT                         (27U)                                               /**< CMP0_C0.IEF Position                    */
#define CMP_C0_IEF(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_IEF_SHIFT))&CMP_C0_IEF_MASK) /**< CMP0_C0.IEF Field                       */
#define CMP_C0_IER_MASK                          (0x10000000U)                                       /**< CMP0_C0.IER Mask                        */
#define CMP_C0_IER_SHIFT                         (28U)                                               /**< CMP0_C0.IER Position                    */
#define CMP_C0_IER(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C0_IER_SHIFT))&CMP_C0_IER_MASK) /**< CMP0_C0.IER Field                       */
#define CMP_C0_DMAEN_MASK                        (0x40000000U)                                       /**< CMP0_C0.DMAEN Mask                      */
#define CMP_C0_DMAEN_SHIFT                       (30U)                                               /**< CMP0_C0.DMAEN Position                  */
#define CMP_C0_DMAEN(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C0_DMAEN_SHIFT))&CMP_C0_DMAEN_MASK) /**< CMP0_C0.DMAEN Field                     */
/** @} */

/** @name C1 - CMP Control Register 1 */ /** @{ */
#define CMP_C1_VOSEL_MASK                        (0xFFU)                                             /**< CMP0_C1.VOSEL Mask                      */
#define CMP_C1_VOSEL_SHIFT                       (0U)                                                /**< CMP0_C1.VOSEL Position                  */
#define CMP_C1_VOSEL(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C1_VOSEL_SHIFT))&CMP_C1_VOSEL_MASK) /**< CMP0_C1.VOSEL Field                     */
#define CMP_C1_MSEL_MASK                         (0x700U)                                            /**< CMP0_C1.MSEL Mask                       */
#define CMP_C1_MSEL_SHIFT                        (8U)                                                /**< CMP0_C1.MSEL Position                   */
#define CMP_C1_MSEL(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_MSEL_SHIFT))&CMP_C1_MSEL_MASK) /**< CMP0_C1.MSEL Field                      */
#define CMP_C1_PSEL_MASK                         (0x3800U)                                           /**< CMP0_C1.PSEL Mask                       */
#define CMP_C1_PSEL_SHIFT                        (11U)                                               /**< CMP0_C1.PSEL Position                   */
#define CMP_C1_PSEL(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_PSEL_SHIFT))&CMP_C1_PSEL_MASK) /**< CMP0_C1.PSEL Field                      */
#define CMP_C1_VRSEL_MASK                        (0x4000U)                                           /**< CMP0_C1.VRSEL Mask                      */
#define CMP_C1_VRSEL_SHIFT                       (14U)                                               /**< CMP0_C1.VRSEL Position                  */
#define CMP_C1_VRSEL(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C1_VRSEL_SHIFT))&CMP_C1_VRSEL_MASK) /**< CMP0_C1.VRSEL Field                     */
#define CMP_C1_DACEN_MASK                        (0x8000U)                                           /**< CMP0_C1.DACEN Mask                      */
#define CMP_C1_DACEN_SHIFT                       (15U)                                               /**< CMP0_C1.DACEN Position                  */
#define CMP_C1_DACEN(x)                          (((uint32_t)(((uint32_t)(x))<<CMP_C1_DACEN_SHIFT))&CMP_C1_DACEN_MASK) /**< CMP0_C1.DACEN Field                     */
#define CMP_C1_CHN_MASK                          (0xFF0000U)                                         /**< CMP0_C1.CHN Mask                        */
#define CMP_C1_CHN_SHIFT                         (16U)                                               /**< CMP0_C1.CHN Position                    */
#define CMP_C1_CHN(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN_SHIFT))&CMP_C1_CHN_MASK) /**< CMP0_C1.CHN Field                       */
#define CMP_C1_CHN0_MASK                         (0x10000U)                                          /**< CMP0_C1.CHN0 Mask                       */
#define CMP_C1_CHN0_SHIFT                        (16U)                                               /**< CMP0_C1.CHN0 Position                   */
#define CMP_C1_CHN0(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN0_SHIFT))&CMP_C1_CHN0_MASK) /**< CMP0_C1.CHN0 Field                      */
#define CMP_C1_CHN1_MASK                         (0x20000U)                                          /**< CMP0_C1.CHN1 Mask                       */
#define CMP_C1_CHN1_SHIFT                        (17U)                                               /**< CMP0_C1.CHN1 Position                   */
#define CMP_C1_CHN1(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN1_SHIFT))&CMP_C1_CHN1_MASK) /**< CMP0_C1.CHN1 Field                      */
#define CMP_C1_CHN2_MASK                         (0x40000U)                                          /**< CMP0_C1.CHN2 Mask                       */
#define CMP_C1_CHN2_SHIFT                        (18U)                                               /**< CMP0_C1.CHN2 Position                   */
#define CMP_C1_CHN2(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN2_SHIFT))&CMP_C1_CHN2_MASK) /**< CMP0_C1.CHN2 Field                      */
#define CMP_C1_CHN3_MASK                         (0x80000U)                                          /**< CMP0_C1.CHN3 Mask                       */
#define CMP_C1_CHN3_SHIFT                        (19U)                                               /**< CMP0_C1.CHN3 Position                   */
#define CMP_C1_CHN3(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN3_SHIFT))&CMP_C1_CHN3_MASK) /**< CMP0_C1.CHN3 Field                      */
#define CMP_C1_CHN4_MASK                         (0x100000U)                                         /**< CMP0_C1.CHN4 Mask                       */
#define CMP_C1_CHN4_SHIFT                        (20U)                                               /**< CMP0_C1.CHN4 Position                   */
#define CMP_C1_CHN4(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN4_SHIFT))&CMP_C1_CHN4_MASK) /**< CMP0_C1.CHN4 Field                      */
#define CMP_C1_CHN5_MASK                         (0x200000U)                                         /**< CMP0_C1.CHN5 Mask                       */
#define CMP_C1_CHN5_SHIFT                        (21U)                                               /**< CMP0_C1.CHN5 Position                   */
#define CMP_C1_CHN5(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN5_SHIFT))&CMP_C1_CHN5_MASK) /**< CMP0_C1.CHN5 Field                      */
#define CMP_C1_CHN6_MASK                         (0x400000U)                                         /**< CMP0_C1.CHN6 Mask                       */
#define CMP_C1_CHN6_SHIFT                        (22U)                                               /**< CMP0_C1.CHN6 Position                   */
#define CMP_C1_CHN6(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN6_SHIFT))&CMP_C1_CHN6_MASK) /**< CMP0_C1.CHN6 Field                      */
#define CMP_C1_CHN7_MASK                         (0x800000U)                                         /**< CMP0_C1.CHN7 Mask                       */
#define CMP_C1_CHN7_SHIFT                        (23U)                                               /**< CMP0_C1.CHN7 Position                   */
#define CMP_C1_CHN7(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C1_CHN7_SHIFT))&CMP_C1_CHN7_MASK) /**< CMP0_C1.CHN7 Field                      */
#define CMP_C1_INNSEL_MASK                       (0x3000000U)                                        /**< CMP0_C1.INNSEL Mask                     */
#define CMP_C1_INNSEL_SHIFT                      (24U)                                               /**< CMP0_C1.INNSEL Position                 */
#define CMP_C1_INNSEL(x)                         (((uint32_t)(((uint32_t)(x))<<CMP_C1_INNSEL_SHIFT))&CMP_C1_INNSEL_MASK) /**< CMP0_C1.INNSEL Field                    */
#define CMP_C1_INPSEL_MASK                       (0x18000000U)                                       /**< CMP0_C1.INPSEL Mask                     */
#define CMP_C1_INPSEL_SHIFT                      (27U)                                               /**< CMP0_C1.INPSEL Position                 */
#define CMP_C1_INPSEL(x)                         (((uint32_t)(((uint32_t)(x))<<CMP_C1_INPSEL_SHIFT))&CMP_C1_INPSEL_MASK) /**< CMP0_C1.INPSEL Field                    */
/** @} */

/** @name C2 - CMP Control Register 2 */ /** @{ */
#define CMP_C2_ACOn_MASK                         (0xFFU)                                             /**< CMP0_C2.ACOn Mask                       */
#define CMP_C2_ACOn_SHIFT                        (0U)                                                /**< CMP0_C2.ACOn Position                   */
#define CMP_C2_ACOn(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_ACOn_SHIFT))&CMP_C2_ACOn_MASK) /**< CMP0_C2.ACOn Field                      */
#define CMP_C2_INITMOD_MASK                      (0x3F00U)                                           /**< CMP0_C2.INITMOD Mask                    */
#define CMP_C2_INITMOD_SHIFT                     (8U)                                                /**< CMP0_C2.INITMOD Position                */
#define CMP_C2_INITMOD(x)                        (((uint32_t)(((uint32_t)(x))<<CMP_C2_INITMOD_SHIFT))&CMP_C2_INITMOD_MASK) /**< CMP0_C2.INITMOD Field                   */
#define CMP_C2_NSAM_MASK                         (0xC000U)                                           /**< CMP0_C2.NSAM Mask                       */
#define CMP_C2_NSAM_SHIFT                        (14U)                                               /**< CMP0_C2.NSAM Position                   */
#define CMP_C2_NSAM(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_NSAM_SHIFT))&CMP_C2_NSAM_MASK) /**< CMP0_C2.NSAM Field                      */
#define CMP_C2_CHF_MASK                          (0xFF0000U)                                         /**< CMP0_C2.CHF Mask                        */
#define CMP_C2_CHF_SHIFT                         (16U)                                               /**< CMP0_C2.CHF Position                    */
#define CMP_C2_CHF(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C2_CHF_SHIFT))&CMP_C2_CHF_MASK) /**< CMP0_C2.CHF Field                       */
#define CMP_C2_CH0F_MASK                         (0x10000U)                                          /**< CMP0_C2.CH0F Mask                       */
#define CMP_C2_CH0F_SHIFT                        (16U)                                               /**< CMP0_C2.CH0F Position                   */
#define CMP_C2_CH0F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH0F_SHIFT))&CMP_C2_CH0F_MASK) /**< CMP0_C2.CH0F Field                      */
#define CMP_C2_CH1F_MASK                         (0x20000U)                                          /**< CMP0_C2.CH1F Mask                       */
#define CMP_C2_CH1F_SHIFT                        (17U)                                               /**< CMP0_C2.CH1F Position                   */
#define CMP_C2_CH1F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH1F_SHIFT))&CMP_C2_CH1F_MASK) /**< CMP0_C2.CH1F Field                      */
#define CMP_C2_CH2F_MASK                         (0x40000U)                                          /**< CMP0_C2.CH2F Mask                       */
#define CMP_C2_CH2F_SHIFT                        (18U)                                               /**< CMP0_C2.CH2F Position                   */
#define CMP_C2_CH2F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH2F_SHIFT))&CMP_C2_CH2F_MASK) /**< CMP0_C2.CH2F Field                      */
#define CMP_C2_CH3F_MASK                         (0x80000U)                                          /**< CMP0_C2.CH3F Mask                       */
#define CMP_C2_CH3F_SHIFT                        (19U)                                               /**< CMP0_C2.CH3F Position                   */
#define CMP_C2_CH3F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH3F_SHIFT))&CMP_C2_CH3F_MASK) /**< CMP0_C2.CH3F Field                      */
#define CMP_C2_CH4F_MASK                         (0x100000U)                                         /**< CMP0_C2.CH4F Mask                       */
#define CMP_C2_CH4F_SHIFT                        (20U)                                               /**< CMP0_C2.CH4F Position                   */
#define CMP_C2_CH4F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH4F_SHIFT))&CMP_C2_CH4F_MASK) /**< CMP0_C2.CH4F Field                      */
#define CMP_C2_CH5F_MASK                         (0x200000U)                                         /**< CMP0_C2.CH5F Mask                       */
#define CMP_C2_CH5F_SHIFT                        (21U)                                               /**< CMP0_C2.CH5F Position                   */
#define CMP_C2_CH5F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH5F_SHIFT))&CMP_C2_CH5F_MASK) /**< CMP0_C2.CH5F Field                      */
#define CMP_C2_CH6F_MASK                         (0x400000U)                                         /**< CMP0_C2.CH6F Mask                       */
#define CMP_C2_CH6F_SHIFT                        (22U)                                               /**< CMP0_C2.CH6F Position                   */
#define CMP_C2_CH6F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH6F_SHIFT))&CMP_C2_CH6F_MASK) /**< CMP0_C2.CH6F Field                      */
#define CMP_C2_CH7F_MASK                         (0x800000U)                                         /**< CMP0_C2.CH7F Mask                       */
#define CMP_C2_CH7F_SHIFT                        (23U)                                               /**< CMP0_C2.CH7F Position                   */
#define CMP_C2_CH7F(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_CH7F_SHIFT))&CMP_C2_CH7F_MASK) /**< CMP0_C2.CH7F Field                      */
#define CMP_C2_FXMXCH_MASK                       (0xE000000U)                                        /**< CMP0_C2.FXMXCH Mask                     */
#define CMP_C2_FXMXCH_SHIFT                      (25U)                                               /**< CMP0_C2.FXMXCH Position                 */
#define CMP_C2_FXMXCH(x)                         (((uint32_t)(((uint32_t)(x))<<CMP_C2_FXMXCH_SHIFT))&CMP_C2_FXMXCH_MASK) /**< CMP0_C2.FXMXCH Field                    */
#define CMP_C2_FXMP_MASK                         (0x20000000U)                                       /**< CMP0_C2.FXMP Mask                       */
#define CMP_C2_FXMP_SHIFT                        (29U)                                               /**< CMP0_C2.FXMP Position                   */
#define CMP_C2_FXMP(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_FXMP_SHIFT))&CMP_C2_FXMP_MASK) /**< CMP0_C2.FXMP Field                      */
#define CMP_C2_RRIE_MASK                         (0x40000000U)                                       /**< CMP0_C2.RRIE Mask                       */
#define CMP_C2_RRIE_SHIFT                        (30U)                                               /**< CMP0_C2.RRIE Position                   */
#define CMP_C2_RRIE(x)                           (((uint32_t)(((uint32_t)(x))<<CMP_C2_RRIE_SHIFT))&CMP_C2_RRIE_MASK) /**< CMP0_C2.RRIE Field                      */
#define CMP_C2_RRE_MASK                          (0x80000000U)                                       /**< CMP0_C2.RRE Mask                        */
#define CMP_C2_RRE_SHIFT                         (31U)                                               /**< CMP0_C2.RRE Position                    */
#define CMP_C2_RRE(x)                            (((uint32_t)(((uint32_t)(x))<<CMP_C2_RRE_SHIFT))&CMP_C2_RRE_MASK) /**< CMP0_C2.RRE Field                       */
/** @} */

/** @} */ /* End group CMP_Register_Masks_GROUP */


/* CMP0 - Peripheral instance base addresses */
#define CMP0_BasePtr                   0x40073000UL //!< Peripheral base address
#define CMP0                           ((CMP_Type *) CMP0_BasePtr) //!< Freescale base pointer
#define CMP0_BASE_PTR                  (CMP0) //!< Freescale style base pointer
#define CMP0_IRQS { CMP0_IRQn,  }


/** @} */ /* End group CMP_Peripheral_access_layer_GROUP */


/** @brief C Struct for CRC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CRC_Peripheral_access_layer_GROUP CRC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CRC0 (file:CRC0_0x40032000)          ================ */
/* ================================================================================ */

/**
 * @brief Cyclic Redundancy Check
 */
/**
 * @struct CRC_Type
 * @brief  C Struct allowing access to CRC registers
 */
typedef struct CRC_Type {
   union {                                      /**< 0000: (size=0004)                                                  */
      __IO uint32_t  DATA;                      /**< 0000: Data register                                                */
      struct {                                  /**< 0000: (size=0004)                                                  */
         union {                                /**< 0000: (size=0002)                                                  */
            __IO uint16_t  DATAL;               /**< 0000: DATAL register                                               */
            struct {                            /**< 0000: (size=0002)                                                  */
               __IO uint8_t   DATALL;           /**< 0000: DATALL register                                              */
               __IO uint8_t   DATALU;           /**< 0001: DATALU register                                              */
            };
         };
         union {                                /**< 0002: (size=0002)                                                  */
            __IO uint16_t  DATAH;               /**< 0002: DATAH register                                               */
            struct {                            /**< 0002: (size=0002)                                                  */
               __IO uint8_t   DATAHL;           /**< 0002: DATAHL register                                              */
               __IO uint8_t   DATAHU;           /**< 0003: DATAHU register                                              */
            };
         };
      };
   };
   union {                                      /**< 0004: (size=0004)                                                  */
      __IO uint32_t  GPOLY;                     /**< 0004: Polynomial register                                          */
      struct {                                  /**< 0004: (size=0004)                                                  */
         __IO uint16_t  GPOLYL;                 /**< 0004: GPOLYL register                                              */
         __IO uint16_t  GPOLYH;                 /**< 0006: GPOLYH register                                              */
      };
   };
   union {                                      /**< 0008: (size=0004)                                                  */
      __IO uint32_t  CTRL;                      /**< 0008: Control register                                             */
      struct {                                  /**< 0008: (size=0004)                                                  */
              uint8_t   RESERVED_4[3];          /**< 0008: 0x3 bytes                                                    */
         __IO uint8_t   CTRLHU;                 /**< 000B: Control register (byte access)                               */
      };
   };
} CRC_Type;


/** @brief Register Masks for CRC */

/* -------------------------------------------------------------------------------- */
/* -----------     'CRC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup CRC_Register_Masks_GROUP CRC Register Masks */
/** @{ */

/** @name DATA - Data register */ /** @{ */
#define CRC_DATA_LL_MASK                         (0xFFU)                                             /**< CRC0_DATA.LL Mask                       */
#define CRC_DATA_LL_SHIFT                        (0U)                                                /**< CRC0_DATA.LL Position                   */
#define CRC_DATA_LL(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_LL_SHIFT))&CRC_DATA_LL_MASK) /**< CRC0_DATA.LL Field                      */
#define CRC_DATA_LU_MASK                         (0xFF00U)                                           /**< CRC0_DATA.LU Mask                       */
#define CRC_DATA_LU_SHIFT                        (8U)                                                /**< CRC0_DATA.LU Position                   */
#define CRC_DATA_LU(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_LU_SHIFT))&CRC_DATA_LU_MASK) /**< CRC0_DATA.LU Field                      */
#define CRC_DATA_HL_MASK                         (0xFF0000U)                                         /**< CRC0_DATA.HL Mask                       */
#define CRC_DATA_HL_SHIFT                        (16U)                                               /**< CRC0_DATA.HL Position                   */
#define CRC_DATA_HL(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_HL_SHIFT))&CRC_DATA_HL_MASK) /**< CRC0_DATA.HL Field                      */
#define CRC_DATA_HU_MASK                         (0xFF000000U)                                       /**< CRC0_DATA.HU Mask                       */
#define CRC_DATA_HU_SHIFT                        (24U)                                               /**< CRC0_DATA.HU Position                   */
#define CRC_DATA_HU(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_HU_SHIFT))&CRC_DATA_HU_MASK) /**< CRC0_DATA.HU Field                      */
/** @} */

/** @name DATAL - DATAL register */ /** @{ */
#define CRC_DATAL_DATAL_MASK                     (0xFFFFU)                                           /**< CRC0_DATAL.DATAL Mask                   */
#define CRC_DATAL_DATAL_SHIFT                    (0U)                                                /**< CRC0_DATAL.DATAL Position               */
#define CRC_DATAL_DATAL(x)                       (((uint16_t)(((uint16_t)(x))<<CRC_DATAL_DATAL_SHIFT))&CRC_DATAL_DATAL_MASK) /**< CRC0_DATAL.DATAL Field                  */
/** @} */

/** @name DATALL - DATALL register */ /** @{ */
#define CRC_DATALL_DATALL_MASK                   (0xFFU)                                             /**< CRC0_DATALL.DATALL Mask                 */
#define CRC_DATALL_DATALL_SHIFT                  (0U)                                                /**< CRC0_DATALL.DATALL Position             */
#define CRC_DATALL_DATALL(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATALL_DATALL_SHIFT))&CRC_DATALL_DATALL_MASK) /**< CRC0_DATALL.DATALL Field                */
/** @} */

/** @name DATALU - DATALU register */ /** @{ */
#define CRC_DATALU_DATALU_MASK                   (0xFFU)                                             /**< CRC0_DATALU.DATALU Mask                 */
#define CRC_DATALU_DATALU_SHIFT                  (0U)                                                /**< CRC0_DATALU.DATALU Position             */
#define CRC_DATALU_DATALU(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATALU_DATALU_SHIFT))&CRC_DATALU_DATALU_MASK) /**< CRC0_DATALU.DATALU Field                */
/** @} */

/** @name DATAH - DATAH register */ /** @{ */
#define CRC_DATAH_DATAH_MASK                     (0xFFFFU)                                           /**< CRC0_DATAH.DATAH Mask                   */
#define CRC_DATAH_DATAH_SHIFT                    (0U)                                                /**< CRC0_DATAH.DATAH Position               */
#define CRC_DATAH_DATAH(x)                       (((uint16_t)(((uint16_t)(x))<<CRC_DATAH_DATAH_SHIFT))&CRC_DATAH_DATAH_MASK) /**< CRC0_DATAH.DATAH Field                  */
/** @} */

/** @name DATAHL - DATAHL register */ /** @{ */
#define CRC_DATAHL_DATAHL_MASK                   (0xFFU)                                             /**< CRC0_DATAHL.DATAHL Mask                 */
#define CRC_DATAHL_DATAHL_SHIFT                  (0U)                                                /**< CRC0_DATAHL.DATAHL Position             */
#define CRC_DATAHL_DATAHL(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATAHL_DATAHL_SHIFT))&CRC_DATAHL_DATAHL_MASK) /**< CRC0_DATAHL.DATAHL Field                */
/** @} */

/** @name DATAHU - DATAHU register */ /** @{ */
#define CRC_DATAHU_DATAHU_MASK                   (0xFFU)                                             /**< CRC0_DATAHU.DATAHU Mask                 */
#define CRC_DATAHU_DATAHU_SHIFT                  (0U)                                                /**< CRC0_DATAHU.DATAHU Position             */
#define CRC_DATAHU_DATAHU(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATAHU_DATAHU_SHIFT))&CRC_DATAHU_DATAHU_MASK) /**< CRC0_DATAHU.DATAHU Field                */
/** @} */

/** @name GPOLY - Polynomial register */ /** @{ */
#define CRC_GPOLY_LOW_MASK                       (0xFFFFU)                                           /**< CRC0_GPOLY.LOW Mask                     */
#define CRC_GPOLY_LOW_SHIFT                      (0U)                                                /**< CRC0_GPOLY.LOW Position                 */
#define CRC_GPOLY_LOW(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_GPOLY_LOW_SHIFT))&CRC_GPOLY_LOW_MASK) /**< CRC0_GPOLY.LOW Field                    */
#define CRC_GPOLY_HIGH_MASK                      (0xFFFF0000U)                                       /**< CRC0_GPOLY.HIGH Mask                    */
#define CRC_GPOLY_HIGH_SHIFT                     (16U)                                               /**< CRC0_GPOLY.HIGH Position                */
#define CRC_GPOLY_HIGH(x)                        (((uint32_t)(((uint32_t)(x))<<CRC_GPOLY_HIGH_SHIFT))&CRC_GPOLY_HIGH_MASK) /**< CRC0_GPOLY.HIGH Field                   */
/** @} */

/** @name GPOLYL - GPOLYL register */ /** @{ */
#define CRC_GPOLYL_GPOLYL_MASK                   (0xFFFFU)                                           /**< CRC0_GPOLYL.GPOLYL Mask                 */
#define CRC_GPOLYL_GPOLYL_SHIFT                  (0U)                                                /**< CRC0_GPOLYL.GPOLYL Position             */
#define CRC_GPOLYL_GPOLYL(x)                     (((uint16_t)(((uint16_t)(x))<<CRC_GPOLYL_GPOLYL_SHIFT))&CRC_GPOLYL_GPOLYL_MASK) /**< CRC0_GPOLYL.GPOLYL Field                */
/** @} */

/** @name GPOLYH - GPOLYH register */ /** @{ */
#define CRC_GPOLYH_GPOLYH_MASK                   (0xFFFFU)                                           /**< CRC0_GPOLYH.GPOLYH Mask                 */
#define CRC_GPOLYH_GPOLYH_SHIFT                  (0U)                                                /**< CRC0_GPOLYH.GPOLYH Position             */
#define CRC_GPOLYH_GPOLYH(x)                     (((uint16_t)(((uint16_t)(x))<<CRC_GPOLYH_GPOLYH_SHIFT))&CRC_GPOLYH_GPOLYH_MASK) /**< CRC0_GPOLYH.GPOLYH Field                */
/** @} */

/** @name CTRL - Control register */ /** @{ */
#define CRC_CTRL_TCRC_MASK                       (0x1000000U)                                        /**< CRC0_CTRL.TCRC Mask                     */
#define CRC_CTRL_TCRC_SHIFT                      (24U)                                               /**< CRC0_CTRL.TCRC Position                 */
#define CRC_CTRL_TCRC(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TCRC_SHIFT))&CRC_CTRL_TCRC_MASK) /**< CRC0_CTRL.TCRC Field                    */
#define CRC_CTRL_WAS_MASK                        (0x2000000U)                                        /**< CRC0_CTRL.WAS Mask                      */
#define CRC_CTRL_WAS_SHIFT                       (25U)                                               /**< CRC0_CTRL.WAS Position                  */
#define CRC_CTRL_WAS(x)                          (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_WAS_SHIFT))&CRC_CTRL_WAS_MASK) /**< CRC0_CTRL.WAS Field                     */
#define CRC_CTRL_FXOR_MASK                       (0x4000000U)                                        /**< CRC0_CTRL.FXOR Mask                     */
#define CRC_CTRL_FXOR_SHIFT                      (26U)                                               /**< CRC0_CTRL.FXOR Position                 */
#define CRC_CTRL_FXOR(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_FXOR_SHIFT))&CRC_CTRL_FXOR_MASK) /**< CRC0_CTRL.FXOR Field                    */
#define CRC_CTRL_TOTR_MASK                       (0x30000000U)                                       /**< CRC0_CTRL.TOTR Mask                     */
#define CRC_CTRL_TOTR_SHIFT                      (28U)                                               /**< CRC0_CTRL.TOTR Position                 */
#define CRC_CTRL_TOTR(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TOTR_SHIFT))&CRC_CTRL_TOTR_MASK) /**< CRC0_CTRL.TOTR Field                    */
#define CRC_CTRL_TOT_MASK                        (0xC0000000U)                                       /**< CRC0_CTRL.TOT Mask                      */
#define CRC_CTRL_TOT_SHIFT                       (30U)                                               /**< CRC0_CTRL.TOT Position                  */
#define CRC_CTRL_TOT(x)                          (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TOT_SHIFT))&CRC_CTRL_TOT_MASK) /**< CRC0_CTRL.TOT Field                     */
/** @} */

/** @name CTRLHU - Control register (byte access) */ /** @{ */
#define CRC_CTRLHU_TCRC_MASK                     (0x1U)                                              /**< CRC0_CTRLHU.TCRC Mask                   */
#define CRC_CTRLHU_TCRC_SHIFT                    (0U)                                                /**< CRC0_CTRLHU.TCRC Position               */
#define CRC_CTRLHU_TCRC(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TCRC_SHIFT))&CRC_CTRLHU_TCRC_MASK) /**< CRC0_CTRLHU.TCRC Field                  */
#define CRC_CTRLHU_WAS_MASK                      (0x2U)                                              /**< CRC0_CTRLHU.WAS Mask                    */
#define CRC_CTRLHU_WAS_SHIFT                     (1U)                                                /**< CRC0_CTRLHU.WAS Position                */
#define CRC_CTRLHU_WAS(x)                        (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_WAS_SHIFT))&CRC_CTRLHU_WAS_MASK) /**< CRC0_CTRLHU.WAS Field                   */
#define CRC_CTRLHU_FXOR_MASK                     (0x4U)                                              /**< CRC0_CTRLHU.FXOR Mask                   */
#define CRC_CTRLHU_FXOR_SHIFT                    (2U)                                                /**< CRC0_CTRLHU.FXOR Position               */
#define CRC_CTRLHU_FXOR(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_FXOR_SHIFT))&CRC_CTRLHU_FXOR_MASK) /**< CRC0_CTRLHU.FXOR Field                  */
#define CRC_CTRLHU_TOTR_MASK                     (0x30U)                                             /**< CRC0_CTRLHU.TOTR Mask                   */
#define CRC_CTRLHU_TOTR_SHIFT                    (4U)                                                /**< CRC0_CTRLHU.TOTR Position               */
#define CRC_CTRLHU_TOTR(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TOTR_SHIFT))&CRC_CTRLHU_TOTR_MASK) /**< CRC0_CTRLHU.TOTR Field                  */
#define CRC_CTRLHU_TOT_MASK                      (0xC0U)                                             /**< CRC0_CTRLHU.TOT Mask                    */
#define CRC_CTRLHU_TOT_SHIFT                     (6U)                                                /**< CRC0_CTRLHU.TOT Position                */
#define CRC_CTRLHU_TOT(x)                        (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TOT_SHIFT))&CRC_CTRLHU_TOT_MASK) /**< CRC0_CTRLHU.TOT Field                   */
/** @} */

/** @} */ /* End group CRC_Register_Masks_GROUP */


/* CRC0 - Peripheral instance base addresses */
#define CRC0_BasePtr                   0x40032000UL //!< Peripheral base address
#define CRC0                           ((CRC_Type *) CRC0_BasePtr) //!< Freescale base pointer
#define CRC0_BASE_PTR                  (CRC0) //!< Freescale style base pointer

/** @} */ /* End group CRC_Peripheral_access_layer_GROUP */


/** @brief C Struct for CSE_PRAM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CSE_PRAM_Peripheral_access_layer_GROUP CSE_PRAM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CSE_PRAM (file:CSE_PRAM_S32K14x)       ================ */
/* ================================================================================ */

/**
 * @brief CSEc Parameter space RAM
 */
/**
 * @struct CSE_PRAM_Type
 * @brief  C Struct allowing access to CSE_PRAM registers
 */
typedef struct CSE_PRAM_Type {
   struct {
      union {                                   /**< 0000: (size=0004)                                                  */
         __IO uint32_t  DATA_32;                /**< 0000: CSE PRAM Register                                            */
         struct {                               /**< 0000: (size=0004)                                                  */
            __IO uint8_t   DATA_8LL;            /**< 0000: CSE PRAM0LL register                                         */
            __IO uint8_t   DATA_8LU;            /**< 0001: CSE PRAM0LU register                                         */
            __IO uint8_t   DATA_8HL;            /**< 0002: CSE PRAM0HL register                                         */
            __IO uint8_t   DATA_8HU;            /**< 0003: CSE PRAM0HU register                                         */
         };
      };
   } RAMn[32];                                  /**< 0000: (cluster: size=0x0080, 128)                                  */
} CSE_PRAM_Type;


/** @brief Register Masks for CSE_PRAM */

/* -------------------------------------------------------------------------------- */
/* -----------     'CSE_PRAM' Position & Mask macros                    ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup CSE_PRAM_Register_Masks_GROUP CSE_PRAM Register Masks */
/** @{ */

/** @name DATA_32 - CSE PRAM Register */ /** @{ */
#define CSE_PRAM_DATA_32_BYTE_3_MASK             (0xFFU)                                             /**< CSE_PRAM_DATA_32.BYTE_3 Mask            */
#define CSE_PRAM_DATA_32_BYTE_3_SHIFT            (0U)                                                /**< CSE_PRAM_DATA_32.BYTE_3 Position        */
#define CSE_PRAM_DATA_32_BYTE_3(x)               (((uint32_t)(((uint32_t)(x))<<CSE_PRAM_DATA_32_BYTE_3_SHIFT))&CSE_PRAM_DATA_32_BYTE_3_MASK) /**< CSE_PRAM_DATA_32.BYTE_3 Field           */
#define CSE_PRAM_DATA_32_BYTE_2_MASK             (0xFF00U)                                           /**< CSE_PRAM_DATA_32.BYTE_2 Mask            */
#define CSE_PRAM_DATA_32_BYTE_2_SHIFT            (8U)                                                /**< CSE_PRAM_DATA_32.BYTE_2 Position        */
#define CSE_PRAM_DATA_32_BYTE_2(x)               (((uint32_t)(((uint32_t)(x))<<CSE_PRAM_DATA_32_BYTE_2_SHIFT))&CSE_PRAM_DATA_32_BYTE_2_MASK) /**< CSE_PRAM_DATA_32.BYTE_2 Field           */
#define CSE_PRAM_DATA_32_BYTE_1_MASK             (0xFF0000U)                                         /**< CSE_PRAM_DATA_32.BYTE_1 Mask            */
#define CSE_PRAM_DATA_32_BYTE_1_SHIFT            (16U)                                               /**< CSE_PRAM_DATA_32.BYTE_1 Position        */
#define CSE_PRAM_DATA_32_BYTE_1(x)               (((uint32_t)(((uint32_t)(x))<<CSE_PRAM_DATA_32_BYTE_1_SHIFT))&CSE_PRAM_DATA_32_BYTE_1_MASK) /**< CSE_PRAM_DATA_32.BYTE_1 Field           */
#define CSE_PRAM_DATA_32_BYTE_0_MASK             (0xFF000000U)                                       /**< CSE_PRAM_DATA_32.BYTE_0 Mask            */
#define CSE_PRAM_DATA_32_BYTE_0_SHIFT            (24U)                                               /**< CSE_PRAM_DATA_32.BYTE_0 Position        */
#define CSE_PRAM_DATA_32_BYTE_0(x)               (((uint32_t)(((uint32_t)(x))<<CSE_PRAM_DATA_32_BYTE_0_SHIFT))&CSE_PRAM_DATA_32_BYTE_0_MASK) /**< CSE_PRAM_DATA_32.BYTE_0 Field           */
/** @} */

/** @name DATA_8LL - CSE PRAM0LL register */ /** @{ */
#define CSE_PRAM_DATA_8LL_RAM_LL_MASK            (0xFFU)                                             /**< CSE_PRAM_DATA_8LL.RAM_LL Mask           */
#define CSE_PRAM_DATA_8LL_RAM_LL_SHIFT           (0U)                                                /**< CSE_PRAM_DATA_8LL.RAM_LL Position       */
#define CSE_PRAM_DATA_8LL_RAM_LL(x)              (((uint8_t)(((uint8_t)(x))<<CSE_PRAM_DATA_8LL_RAM_LL_SHIFT))&CSE_PRAM_DATA_8LL_RAM_LL_MASK) /**< CSE_PRAM_DATA_8LL.RAM_LL Field          */
/** @} */

/** @name DATA_8LU - CSE PRAM0LU register */ /** @{ */
#define CSE_PRAM_DATA_8LU_RAM_LU_MASK            (0xFFU)                                             /**< CSE_PRAM_DATA_8LU.RAM_LU Mask           */
#define CSE_PRAM_DATA_8LU_RAM_LU_SHIFT           (0U)                                                /**< CSE_PRAM_DATA_8LU.RAM_LU Position       */
#define CSE_PRAM_DATA_8LU_RAM_LU(x)              (((uint8_t)(((uint8_t)(x))<<CSE_PRAM_DATA_8LU_RAM_LU_SHIFT))&CSE_PRAM_DATA_8LU_RAM_LU_MASK) /**< CSE_PRAM_DATA_8LU.RAM_LU Field          */
/** @} */

/** @name DATA_8HL - CSE PRAM0HL register */ /** @{ */
#define CSE_PRAM_DATA_8HL_RAM_HL_MASK            (0xFFU)                                             /**< CSE_PRAM_DATA_8HL.RAM_HL Mask           */
#define CSE_PRAM_DATA_8HL_RAM_HL_SHIFT           (0U)                                                /**< CSE_PRAM_DATA_8HL.RAM_HL Position       */
#define CSE_PRAM_DATA_8HL_RAM_HL(x)              (((uint8_t)(((uint8_t)(x))<<CSE_PRAM_DATA_8HL_RAM_HL_SHIFT))&CSE_PRAM_DATA_8HL_RAM_HL_MASK) /**< CSE_PRAM_DATA_8HL.RAM_HL Field          */
/** @} */

/** @name DATA_8HU - CSE PRAM0HU register */ /** @{ */
#define CSE_PRAM_DATA_8HU_RAM_HU_MASK            (0xFFU)                                             /**< CSE_PRAM_DATA_8HU.RAM_HU Mask           */
#define CSE_PRAM_DATA_8HU_RAM_HU_SHIFT           (0U)                                                /**< CSE_PRAM_DATA_8HU.RAM_HU Position       */
#define CSE_PRAM_DATA_8HU_RAM_HU(x)              (((uint8_t)(((uint8_t)(x))<<CSE_PRAM_DATA_8HU_RAM_HU_SHIFT))&CSE_PRAM_DATA_8HU_RAM_HU_MASK) /**< CSE_PRAM_DATA_8HU.RAM_HU Field          */
/** @} */

/** @} */ /* End group CSE_PRAM_Register_Masks_GROUP */


/* CSE_PRAM - Peripheral instance base addresses */
#define CSE_PRAM_BasePtr               0x14001000UL //!< Peripheral base address
#define CSE_PRAM                       ((CSE_PRAM_Type *) CSE_PRAM_BasePtr) //!< Freescale base pointer
#define CSE_PRAM_BASE_PTR              (CSE_PRAM) //!< Freescale style base pointer

/** @} */ /* End group CSE_PRAM_Peripheral_access_layer_GROUP */


/** @brief C Struct for DMA0 */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup DMA0_Peripheral_access_layer_GROUP DMA0 Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           DMA0 (file:DMA0_16CH_EARS16)         ================ */
/* ================================================================================ */

/**
 * @brief Enhanced direct memory access controller
 */
/**
 * @struct DMA_Type
 * @brief  C Struct allowing access to DMA0 registers
 */
typedef struct DMA_Type {
   __IO uint32_t  CR;                           /**< 0000: Control Register                                             */
   __I  uint32_t  ES;                           /**< 0004: Error Status Register                                        */
        uint8_t   RESERVED_0[4];                /**< 0008: 0x4 bytes                                                    */
   __IO uint32_t  ERQ;                          /**< 000C: Enable Request Register                                      */
        uint8_t   RESERVED_1[4];                /**< 0010: 0x4 bytes                                                    */
   __IO uint32_t  EEI;                          /**< 0014: Enable Error Interrupt Register                              */
   __O  uint8_t   CEEI;                         /**< 0018: Clear Enable Error Interrupt Register                        */
   __O  uint8_t   SEEI;                         /**< 0019: Set Enable Error Interrupt Register                          */
   __O  uint8_t   CERQ;                         /**< 001A: Clear Enable Request Register                                */
   __O  uint8_t   SERQ;                         /**< 001B: Set Enable Request Register                                  */
   __O  uint8_t   CDNE;                         /**< 001C: Clear DONE Status Bit Register                               */
   __O  uint8_t   SSRT;                         /**< 001D: Set START Bit Register                                       */
   __O  uint8_t   CERR;                         /**< 001E: Clear Error Register                                         */
   __O  uint8_t   CINT;                         /**< 001F: Clear Interrupt Request Register                             */
        uint8_t   RESERVED_2[4];                /**< 0020: 0x4 bytes                                                    */
   __IO uint32_t  INT;                          /**< 0024: Interrupt Request Register                                   */
        uint8_t   RESERVED_3[4];                /**< 0028: 0x4 bytes                                                    */
   __IO uint32_t  ERR;                          /**< 002C: Error Register                                               */
        uint8_t   RESERVED_4[4];                /**< 0030: 0x4 bytes                                                    */
   __I  uint32_t  HRS;                          /**< 0034: Hardware Request Status Register                             */
        uint8_t   RESERVED_5[12];               /**< 0038: 0xC bytes                                                    */
   __IO uint32_t  EARS;                         /**< 0044: Enable Asynchronous Request in Stop Register                 */
        uint8_t   RESERVED_6[184];              /**< 0048: 0xB8 bytes                                                   */
   union {                                      /**< 0100: (size=0010)                                                  */
      struct {                                  /**< 0100: (size=0010)                                                  */
      __IO uint8_t   DCHPRI3;                   /**< 0100: Channel 3 Priority Register                                  */
      __IO uint8_t   DCHPRI2;                   /**< 0101: Channel 2 Priority Register                                  */
      __IO uint8_t   DCHPRI1;                   /**< 0102: Channel 1 Priority Register                                  */
      __IO uint8_t   DCHPRI0;                   /**< 0103: Channel 0 Priority Register                                  */
      __IO uint8_t   DCHPRI7;                   /**< 0104: Channel 7 Priority Register                                  */
      __IO uint8_t   DCHPRI6;                   /**< 0105: Channel 6 Priority Register                                  */
      __IO uint8_t   DCHPRI5;                   /**< 0106: Channel 5 Priority Register                                  */
      __IO uint8_t   DCHPRI4;                   /**< 0107: Channel 4 Priority Register                                  */
      __IO uint8_t   DCHPRI11;                  /**< 0108: Channel 11 Priority Register                                 */
      __IO uint8_t   DCHPRI10;                  /**< 0109: Channel 10 Priority Register                                 */
      __IO uint8_t   DCHPRI9;                   /**< 010A: Channel 9 Priority Register                                  */
      __IO uint8_t   DCHPRI8;                   /**< 010B: Channel 8 Priority Register                                  */
      __IO uint8_t   DCHPRI15;                  /**< 010C: Channel 15 Priority Register                                 */
      __IO uint8_t   DCHPRI14;                  /**< 010D: Channel 14 Priority Register                                 */
      __IO uint8_t   DCHPRI13;                  /**< 010E: Channel 13 Priority Register                                 */
      __IO uint8_t   DCHPRI12;                  /**< 010F: Channel 12 Priority Register                                 */
      };
      __IO uint8_t   DCHPRI[16];                /**< 0100: Channel  Priority Register                                   */
   };
        uint8_t   RESERVED_7[3824];             /**< 0110: 0xEF0 bytes                                                  */
   struct {
      __IO uint32_t  SADDR;                     /**< 1000: Source Address                                               */
      __IO uint16_t  SOFF;                      /**< 1004: Signed Source Address Offset                                 */
      __IO uint16_t  ATTR;                      /**< 1006: Transfer Attributes                                          */
      union {                                   /**< 1008: (size=0004)                                                  */
         __IO uint32_t  NBYTES_MLNO;            /**< 1008: Minor Byte Count (Minor Loop Disabled)                       */
         __IO uint32_t  NBYTES_MLOFFNO;         /**< 1008: Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled) */
         __IO uint32_t  NBYTES_MLOFFYES;        /**< 1008: Signed Minor Loop Offset (Minor Loop and Offset Enabled)     */
      };
      __IO uint32_t  SLAST;                     /**< 100C: Last Source Address Adjustment                               */
      __IO uint32_t  DADDR;                     /**< 1010: Destination Address                                          */
      __IO uint16_t  DOFF;                      /**< 1014: Signed Destination Address Offset                            */
      union {                                   /**< 1016: (size=0002)                                                  */
         __IO uint16_t  CITER_ELINKNO;          /**< 1016: Current Minor Loop Link, Major Loop Count (Channel Linking Disabled) */
         __IO uint16_t  CITER_ELINKYES;         /**< 1016: Current Minor Loop Link, Major Loop Count (Channel Linking Enabled) */
      };
      __IO uint32_t  DLASTSGA;                  /**< 1018: Last Destination Address Adjustment/Scatter Gather Address   */
      __IO uint16_t  CSR;                       /**< 101C: Control and Status                                           */
      union {                                   /**< 101E: (size=0002)                                                  */
         __IO uint16_t  BITER_ELINKNO;          /**< 101E: Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled) */
         __IO uint16_t  BITER_ELINKYES;         /**< 101E: Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled) */
      };
   } TCD[16];                                   /**< 1000: (cluster: size=0x0200, 512)                                  */
} DMA_Type;


/** @brief Register Masks for DMA0 */

/* -------------------------------------------------------------------------------- */
/* -----------     'DMA0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup DMA0_Register_Masks_GROUP DMA0 Register Masks */
/** @{ */

/** @name CR - Control Register */ /** @{ */
#define DMA_CR_EDBG_MASK                         (0x2U)                                              /**< DMA0_CR.EDBG Mask                       */
#define DMA_CR_EDBG_SHIFT                        (1U)                                                /**< DMA0_CR.EDBG Position                   */
#define DMA_CR_EDBG(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_EDBG_SHIFT))&DMA_CR_EDBG_MASK) /**< DMA0_CR.EDBG Field                      */
#define DMA_CR_ERCA_MASK                         (0x4U)                                              /**< DMA0_CR.ERCA Mask                       */
#define DMA_CR_ERCA_SHIFT                        (2U)                                                /**< DMA0_CR.ERCA Position                   */
#define DMA_CR_ERCA(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_ERCA_SHIFT))&DMA_CR_ERCA_MASK) /**< DMA0_CR.ERCA Field                      */
#define DMA_CR_HOE_MASK                          (0x10U)                                             /**< DMA0_CR.HOE Mask                        */
#define DMA_CR_HOE_SHIFT                         (4U)                                                /**< DMA0_CR.HOE Position                    */
#define DMA_CR_HOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_HOE_SHIFT))&DMA_CR_HOE_MASK) /**< DMA0_CR.HOE Field                       */
#define DMA_CR_HALT_MASK                         (0x20U)                                             /**< DMA0_CR.HALT Mask                       */
#define DMA_CR_HALT_SHIFT                        (5U)                                                /**< DMA0_CR.HALT Position                   */
#define DMA_CR_HALT(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_HALT_SHIFT))&DMA_CR_HALT_MASK) /**< DMA0_CR.HALT Field                      */
#define DMA_CR_CLM_MASK                          (0x40U)                                             /**< DMA0_CR.CLM Mask                        */
#define DMA_CR_CLM_SHIFT                         (6U)                                                /**< DMA0_CR.CLM Position                    */
#define DMA_CR_CLM(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_CLM_SHIFT))&DMA_CR_CLM_MASK) /**< DMA0_CR.CLM Field                       */
#define DMA_CR_EMLM_MASK                         (0x80U)                                             /**< DMA0_CR.EMLM Mask                       */
#define DMA_CR_EMLM_SHIFT                        (7U)                                                /**< DMA0_CR.EMLM Position                   */
#define DMA_CR_EMLM(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_EMLM_SHIFT))&DMA_CR_EMLM_MASK) /**< DMA0_CR.EMLM Field                      */
#define DMA_CR_ECX_MASK                          (0x10000U)                                          /**< DMA0_CR.ECX Mask                        */
#define DMA_CR_ECX_SHIFT                         (16U)                                               /**< DMA0_CR.ECX Position                    */
#define DMA_CR_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_ECX_SHIFT))&DMA_CR_ECX_MASK) /**< DMA0_CR.ECX Field                       */
#define DMA_CR_CX_MASK                           (0x20000U)                                          /**< DMA0_CR.CX Mask                         */
#define DMA_CR_CX_SHIFT                          (17U)                                               /**< DMA0_CR.CX Position                     */
#define DMA_CR_CX(x)                             (((uint32_t)(((uint32_t)(x))<<DMA_CR_CX_SHIFT))&DMA_CR_CX_MASK) /**< DMA0_CR.CX Field                        */
/** @} */

/** @name ES - Error Status Register */ /** @{ */
#define DMA_ES_DBE_MASK                          (0x1U)                                              /**< DMA0_ES.DBE Mask                        */
#define DMA_ES_DBE_SHIFT                         (0U)                                                /**< DMA0_ES.DBE Position                    */
#define DMA_ES_DBE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DBE_SHIFT))&DMA_ES_DBE_MASK) /**< DMA0_ES.DBE Field                       */
#define DMA_ES_SBE_MASK                          (0x2U)                                              /**< DMA0_ES.SBE Mask                        */
#define DMA_ES_SBE_SHIFT                         (1U)                                                /**< DMA0_ES.SBE Position                    */
#define DMA_ES_SBE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SBE_SHIFT))&DMA_ES_SBE_MASK) /**< DMA0_ES.SBE Field                       */
#define DMA_ES_SGE_MASK                          (0x4U)                                              /**< DMA0_ES.SGE Mask                        */
#define DMA_ES_SGE_SHIFT                         (2U)                                                /**< DMA0_ES.SGE Position                    */
#define DMA_ES_SGE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SGE_SHIFT))&DMA_ES_SGE_MASK) /**< DMA0_ES.SGE Field                       */
#define DMA_ES_NCE_MASK                          (0x8U)                                              /**< DMA0_ES.NCE Mask                        */
#define DMA_ES_NCE_SHIFT                         (3U)                                                /**< DMA0_ES.NCE Position                    */
#define DMA_ES_NCE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_NCE_SHIFT))&DMA_ES_NCE_MASK) /**< DMA0_ES.NCE Field                       */
#define DMA_ES_DOE_MASK                          (0x10U)                                             /**< DMA0_ES.DOE Mask                        */
#define DMA_ES_DOE_SHIFT                         (4U)                                                /**< DMA0_ES.DOE Position                    */
#define DMA_ES_DOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DOE_SHIFT))&DMA_ES_DOE_MASK) /**< DMA0_ES.DOE Field                       */
#define DMA_ES_DAE_MASK                          (0x20U)                                             /**< DMA0_ES.DAE Mask                        */
#define DMA_ES_DAE_SHIFT                         (5U)                                                /**< DMA0_ES.DAE Position                    */
#define DMA_ES_DAE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DAE_SHIFT))&DMA_ES_DAE_MASK) /**< DMA0_ES.DAE Field                       */
#define DMA_ES_SOE_MASK                          (0x40U)                                             /**< DMA0_ES.SOE Mask                        */
#define DMA_ES_SOE_SHIFT                         (6U)                                                /**< DMA0_ES.SOE Position                    */
#define DMA_ES_SOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SOE_SHIFT))&DMA_ES_SOE_MASK) /**< DMA0_ES.SOE Field                       */
#define DMA_ES_SAE_MASK                          (0x80U)                                             /**< DMA0_ES.SAE Mask                        */
#define DMA_ES_SAE_SHIFT                         (7U)                                                /**< DMA0_ES.SAE Position                    */
#define DMA_ES_SAE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SAE_SHIFT))&DMA_ES_SAE_MASK) /**< DMA0_ES.SAE Field                       */
#define DMA_ES_ERRCHN_MASK                       (0xF00U)                                            /**< DMA0_ES.ERRCHN Mask                     */
#define DMA_ES_ERRCHN_SHIFT                      (8U)                                                /**< DMA0_ES.ERRCHN Position                 */
#define DMA_ES_ERRCHN(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ES_ERRCHN_SHIFT))&DMA_ES_ERRCHN_MASK) /**< DMA0_ES.ERRCHN Field                    */
#define DMA_ES_CPE_MASK                          (0x4000U)                                           /**< DMA0_ES.CPE Mask                        */
#define DMA_ES_CPE_SHIFT                         (14U)                                               /**< DMA0_ES.CPE Position                    */
#define DMA_ES_CPE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_CPE_SHIFT))&DMA_ES_CPE_MASK) /**< DMA0_ES.CPE Field                       */
#define DMA_ES_ECX_MASK                          (0x10000U)                                          /**< DMA0_ES.ECX Mask                        */
#define DMA_ES_ECX_SHIFT                         (16U)                                               /**< DMA0_ES.ECX Position                    */
#define DMA_ES_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_ECX_SHIFT))&DMA_ES_ECX_MASK) /**< DMA0_ES.ECX Field                       */
#define DMA_ES_VLD_MASK                          (0x80000000U)                                       /**< DMA0_ES.VLD Mask                        */
#define DMA_ES_VLD_SHIFT                         (31U)                                               /**< DMA0_ES.VLD Position                    */
#define DMA_ES_VLD(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_VLD_SHIFT))&DMA_ES_VLD_MASK) /**< DMA0_ES.VLD Field                       */
/** @} */

/** @name ERQ - Enable Request Register */ /** @{ */
#define DMA_ERQ_ERQ0_MASK                        (0x1U)                                              /**< DMA0_ERQ.ERQ0 Mask                      */
#define DMA_ERQ_ERQ0_SHIFT                       (0U)                                                /**< DMA0_ERQ.ERQ0 Position                  */
#define DMA_ERQ_ERQ0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ0_SHIFT))&DMA_ERQ_ERQ0_MASK) /**< DMA0_ERQ.ERQ0 Field                     */
#define DMA_ERQ_ERQ1_MASK                        (0x2U)                                              /**< DMA0_ERQ.ERQ1 Mask                      */
#define DMA_ERQ_ERQ1_SHIFT                       (1U)                                                /**< DMA0_ERQ.ERQ1 Position                  */
#define DMA_ERQ_ERQ1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ1_SHIFT))&DMA_ERQ_ERQ1_MASK) /**< DMA0_ERQ.ERQ1 Field                     */
#define DMA_ERQ_ERQ2_MASK                        (0x4U)                                              /**< DMA0_ERQ.ERQ2 Mask                      */
#define DMA_ERQ_ERQ2_SHIFT                       (2U)                                                /**< DMA0_ERQ.ERQ2 Position                  */
#define DMA_ERQ_ERQ2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ2_SHIFT))&DMA_ERQ_ERQ2_MASK) /**< DMA0_ERQ.ERQ2 Field                     */
#define DMA_ERQ_ERQ3_MASK                        (0x8U)                                              /**< DMA0_ERQ.ERQ3 Mask                      */
#define DMA_ERQ_ERQ3_SHIFT                       (3U)                                                /**< DMA0_ERQ.ERQ3 Position                  */
#define DMA_ERQ_ERQ3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ3_SHIFT))&DMA_ERQ_ERQ3_MASK) /**< DMA0_ERQ.ERQ3 Field                     */
#define DMA_ERQ_ERQ4_MASK                        (0x10U)                                             /**< DMA0_ERQ.ERQ4 Mask                      */
#define DMA_ERQ_ERQ4_SHIFT                       (4U)                                                /**< DMA0_ERQ.ERQ4 Position                  */
#define DMA_ERQ_ERQ4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ4_SHIFT))&DMA_ERQ_ERQ4_MASK) /**< DMA0_ERQ.ERQ4 Field                     */
#define DMA_ERQ_ERQ5_MASK                        (0x20U)                                             /**< DMA0_ERQ.ERQ5 Mask                      */
#define DMA_ERQ_ERQ5_SHIFT                       (5U)                                                /**< DMA0_ERQ.ERQ5 Position                  */
#define DMA_ERQ_ERQ5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ5_SHIFT))&DMA_ERQ_ERQ5_MASK) /**< DMA0_ERQ.ERQ5 Field                     */
#define DMA_ERQ_ERQ6_MASK                        (0x40U)                                             /**< DMA0_ERQ.ERQ6 Mask                      */
#define DMA_ERQ_ERQ6_SHIFT                       (6U)                                                /**< DMA0_ERQ.ERQ6 Position                  */
#define DMA_ERQ_ERQ6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ6_SHIFT))&DMA_ERQ_ERQ6_MASK) /**< DMA0_ERQ.ERQ6 Field                     */
#define DMA_ERQ_ERQ7_MASK                        (0x80U)                                             /**< DMA0_ERQ.ERQ7 Mask                      */
#define DMA_ERQ_ERQ7_SHIFT                       (7U)                                                /**< DMA0_ERQ.ERQ7 Position                  */
#define DMA_ERQ_ERQ7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ7_SHIFT))&DMA_ERQ_ERQ7_MASK) /**< DMA0_ERQ.ERQ7 Field                     */
#define DMA_ERQ_ERQ8_MASK                        (0x100U)                                            /**< DMA0_ERQ.ERQ8 Mask                      */
#define DMA_ERQ_ERQ8_SHIFT                       (8U)                                                /**< DMA0_ERQ.ERQ8 Position                  */
#define DMA_ERQ_ERQ8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ8_SHIFT))&DMA_ERQ_ERQ8_MASK) /**< DMA0_ERQ.ERQ8 Field                     */
#define DMA_ERQ_ERQ9_MASK                        (0x200U)                                            /**< DMA0_ERQ.ERQ9 Mask                      */
#define DMA_ERQ_ERQ9_SHIFT                       (9U)                                                /**< DMA0_ERQ.ERQ9 Position                  */
#define DMA_ERQ_ERQ9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ9_SHIFT))&DMA_ERQ_ERQ9_MASK) /**< DMA0_ERQ.ERQ9 Field                     */
#define DMA_ERQ_ERQ10_MASK                       (0x400U)                                            /**< DMA0_ERQ.ERQ10 Mask                     */
#define DMA_ERQ_ERQ10_SHIFT                      (10U)                                               /**< DMA0_ERQ.ERQ10 Position                 */
#define DMA_ERQ_ERQ10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ10_SHIFT))&DMA_ERQ_ERQ10_MASK) /**< DMA0_ERQ.ERQ10 Field                    */
#define DMA_ERQ_ERQ11_MASK                       (0x800U)                                            /**< DMA0_ERQ.ERQ11 Mask                     */
#define DMA_ERQ_ERQ11_SHIFT                      (11U)                                               /**< DMA0_ERQ.ERQ11 Position                 */
#define DMA_ERQ_ERQ11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ11_SHIFT))&DMA_ERQ_ERQ11_MASK) /**< DMA0_ERQ.ERQ11 Field                    */
#define DMA_ERQ_ERQ12_MASK                       (0x1000U)                                           /**< DMA0_ERQ.ERQ12 Mask                     */
#define DMA_ERQ_ERQ12_SHIFT                      (12U)                                               /**< DMA0_ERQ.ERQ12 Position                 */
#define DMA_ERQ_ERQ12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ12_SHIFT))&DMA_ERQ_ERQ12_MASK) /**< DMA0_ERQ.ERQ12 Field                    */
#define DMA_ERQ_ERQ13_MASK                       (0x2000U)                                           /**< DMA0_ERQ.ERQ13 Mask                     */
#define DMA_ERQ_ERQ13_SHIFT                      (13U)                                               /**< DMA0_ERQ.ERQ13 Position                 */
#define DMA_ERQ_ERQ13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ13_SHIFT))&DMA_ERQ_ERQ13_MASK) /**< DMA0_ERQ.ERQ13 Field                    */
#define DMA_ERQ_ERQ14_MASK                       (0x4000U)                                           /**< DMA0_ERQ.ERQ14 Mask                     */
#define DMA_ERQ_ERQ14_SHIFT                      (14U)                                               /**< DMA0_ERQ.ERQ14 Position                 */
#define DMA_ERQ_ERQ14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ14_SHIFT))&DMA_ERQ_ERQ14_MASK) /**< DMA0_ERQ.ERQ14 Field                    */
#define DMA_ERQ_ERQ15_MASK                       (0x8000U)                                           /**< DMA0_ERQ.ERQ15 Mask                     */
#define DMA_ERQ_ERQ15_SHIFT                      (15U)                                               /**< DMA0_ERQ.ERQ15 Position                 */
#define DMA_ERQ_ERQ15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ15_SHIFT))&DMA_ERQ_ERQ15_MASK) /**< DMA0_ERQ.ERQ15 Field                    */
/** @} */

/** @name EEI - Enable Error Interrupt Register */ /** @{ */
#define DMA_EEI_EEI0_MASK                        (0x1U)                                              /**< DMA0_EEI.EEI0 Mask                      */
#define DMA_EEI_EEI0_SHIFT                       (0U)                                                /**< DMA0_EEI.EEI0 Position                  */
#define DMA_EEI_EEI0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI0_SHIFT))&DMA_EEI_EEI0_MASK) /**< DMA0_EEI.EEI0 Field                     */
#define DMA_EEI_EEI1_MASK                        (0x2U)                                              /**< DMA0_EEI.EEI1 Mask                      */
#define DMA_EEI_EEI1_SHIFT                       (1U)                                                /**< DMA0_EEI.EEI1 Position                  */
#define DMA_EEI_EEI1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI1_SHIFT))&DMA_EEI_EEI1_MASK) /**< DMA0_EEI.EEI1 Field                     */
#define DMA_EEI_EEI2_MASK                        (0x4U)                                              /**< DMA0_EEI.EEI2 Mask                      */
#define DMA_EEI_EEI2_SHIFT                       (2U)                                                /**< DMA0_EEI.EEI2 Position                  */
#define DMA_EEI_EEI2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI2_SHIFT))&DMA_EEI_EEI2_MASK) /**< DMA0_EEI.EEI2 Field                     */
#define DMA_EEI_EEI3_MASK                        (0x8U)                                              /**< DMA0_EEI.EEI3 Mask                      */
#define DMA_EEI_EEI3_SHIFT                       (3U)                                                /**< DMA0_EEI.EEI3 Position                  */
#define DMA_EEI_EEI3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI3_SHIFT))&DMA_EEI_EEI3_MASK) /**< DMA0_EEI.EEI3 Field                     */
#define DMA_EEI_EEI4_MASK                        (0x10U)                                             /**< DMA0_EEI.EEI4 Mask                      */
#define DMA_EEI_EEI4_SHIFT                       (4U)                                                /**< DMA0_EEI.EEI4 Position                  */
#define DMA_EEI_EEI4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI4_SHIFT))&DMA_EEI_EEI4_MASK) /**< DMA0_EEI.EEI4 Field                     */
#define DMA_EEI_EEI5_MASK                        (0x20U)                                             /**< DMA0_EEI.EEI5 Mask                      */
#define DMA_EEI_EEI5_SHIFT                       (5U)                                                /**< DMA0_EEI.EEI5 Position                  */
#define DMA_EEI_EEI5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI5_SHIFT))&DMA_EEI_EEI5_MASK) /**< DMA0_EEI.EEI5 Field                     */
#define DMA_EEI_EEI6_MASK                        (0x40U)                                             /**< DMA0_EEI.EEI6 Mask                      */
#define DMA_EEI_EEI6_SHIFT                       (6U)                                                /**< DMA0_EEI.EEI6 Position                  */
#define DMA_EEI_EEI6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI6_SHIFT))&DMA_EEI_EEI6_MASK) /**< DMA0_EEI.EEI6 Field                     */
#define DMA_EEI_EEI7_MASK                        (0x80U)                                             /**< DMA0_EEI.EEI7 Mask                      */
#define DMA_EEI_EEI7_SHIFT                       (7U)                                                /**< DMA0_EEI.EEI7 Position                  */
#define DMA_EEI_EEI7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI7_SHIFT))&DMA_EEI_EEI7_MASK) /**< DMA0_EEI.EEI7 Field                     */
#define DMA_EEI_EEI8_MASK                        (0x100U)                                            /**< DMA0_EEI.EEI8 Mask                      */
#define DMA_EEI_EEI8_SHIFT                       (8U)                                                /**< DMA0_EEI.EEI8 Position                  */
#define DMA_EEI_EEI8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI8_SHIFT))&DMA_EEI_EEI8_MASK) /**< DMA0_EEI.EEI8 Field                     */
#define DMA_EEI_EEI9_MASK                        (0x200U)                                            /**< DMA0_EEI.EEI9 Mask                      */
#define DMA_EEI_EEI9_SHIFT                       (9U)                                                /**< DMA0_EEI.EEI9 Position                  */
#define DMA_EEI_EEI9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI9_SHIFT))&DMA_EEI_EEI9_MASK) /**< DMA0_EEI.EEI9 Field                     */
#define DMA_EEI_EEI10_MASK                       (0x400U)                                            /**< DMA0_EEI.EEI10 Mask                     */
#define DMA_EEI_EEI10_SHIFT                      (10U)                                               /**< DMA0_EEI.EEI10 Position                 */
#define DMA_EEI_EEI10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI10_SHIFT))&DMA_EEI_EEI10_MASK) /**< DMA0_EEI.EEI10 Field                    */
#define DMA_EEI_EEI11_MASK                       (0x800U)                                            /**< DMA0_EEI.EEI11 Mask                     */
#define DMA_EEI_EEI11_SHIFT                      (11U)                                               /**< DMA0_EEI.EEI11 Position                 */
#define DMA_EEI_EEI11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI11_SHIFT))&DMA_EEI_EEI11_MASK) /**< DMA0_EEI.EEI11 Field                    */
#define DMA_EEI_EEI12_MASK                       (0x1000U)                                           /**< DMA0_EEI.EEI12 Mask                     */
#define DMA_EEI_EEI12_SHIFT                      (12U)                                               /**< DMA0_EEI.EEI12 Position                 */
#define DMA_EEI_EEI12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI12_SHIFT))&DMA_EEI_EEI12_MASK) /**< DMA0_EEI.EEI12 Field                    */
#define DMA_EEI_EEI13_MASK                       (0x2000U)                                           /**< DMA0_EEI.EEI13 Mask                     */
#define DMA_EEI_EEI13_SHIFT                      (13U)                                               /**< DMA0_EEI.EEI13 Position                 */
#define DMA_EEI_EEI13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI13_SHIFT))&DMA_EEI_EEI13_MASK) /**< DMA0_EEI.EEI13 Field                    */
#define DMA_EEI_EEI14_MASK                       (0x4000U)                                           /**< DMA0_EEI.EEI14 Mask                     */
#define DMA_EEI_EEI14_SHIFT                      (14U)                                               /**< DMA0_EEI.EEI14 Position                 */
#define DMA_EEI_EEI14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI14_SHIFT))&DMA_EEI_EEI14_MASK) /**< DMA0_EEI.EEI14 Field                    */
#define DMA_EEI_EEI15_MASK                       (0x8000U)                                           /**< DMA0_EEI.EEI15 Mask                     */
#define DMA_EEI_EEI15_SHIFT                      (15U)                                               /**< DMA0_EEI.EEI15 Position                 */
#define DMA_EEI_EEI15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI15_SHIFT))&DMA_EEI_EEI15_MASK) /**< DMA0_EEI.EEI15 Field                    */
/** @} */

/** @name CEEI - Clear Enable Error Interrupt Register */ /** @{ */
#define DMA_CEEI_CEEI_MASK                       (0xFU)                                              /**< DMA0_CEEI.CEEI Mask                     */
#define DMA_CEEI_CEEI_SHIFT                      (0U)                                                /**< DMA0_CEEI.CEEI Position                 */
#define DMA_CEEI_CEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CEEI_SHIFT))&DMA_CEEI_CEEI_MASK) /**< DMA0_CEEI.CEEI Field                    */
#define DMA_CEEI_CAEE_MASK                       (0x40U)                                             /**< DMA0_CEEI.CAEE Mask                     */
#define DMA_CEEI_CAEE_SHIFT                      (6U)                                                /**< DMA0_CEEI.CAEE Position                 */
#define DMA_CEEI_CAEE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CAEE_SHIFT))&DMA_CEEI_CAEE_MASK) /**< DMA0_CEEI.CAEE Field                    */
#define DMA_CEEI_NOP_MASK                        (0x80U)                                             /**< DMA0_CEEI.NOP Mask                      */
#define DMA_CEEI_NOP_SHIFT                       (7U)                                                /**< DMA0_CEEI.NOP Position                  */
#define DMA_CEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_NOP_SHIFT))&DMA_CEEI_NOP_MASK) /**< DMA0_CEEI.NOP Field                     */
/** @} */

/** @name SEEI - Set Enable Error Interrupt Register */ /** @{ */
#define DMA_SEEI_SEEI_MASK                       (0xFU)                                              /**< DMA0_SEEI.SEEI Mask                     */
#define DMA_SEEI_SEEI_SHIFT                      (0U)                                                /**< DMA0_SEEI.SEEI Position                 */
#define DMA_SEEI_SEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SEEI_SHIFT))&DMA_SEEI_SEEI_MASK) /**< DMA0_SEEI.SEEI Field                    */
#define DMA_SEEI_SAEE_MASK                       (0x40U)                                             /**< DMA0_SEEI.SAEE Mask                     */
#define DMA_SEEI_SAEE_SHIFT                      (6U)                                                /**< DMA0_SEEI.SAEE Position                 */
#define DMA_SEEI_SAEE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SAEE_SHIFT))&DMA_SEEI_SAEE_MASK) /**< DMA0_SEEI.SAEE Field                    */
#define DMA_SEEI_NOP_MASK                        (0x80U)                                             /**< DMA0_SEEI.NOP Mask                      */
#define DMA_SEEI_NOP_SHIFT                       (7U)                                                /**< DMA0_SEEI.NOP Position                  */
#define DMA_SEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_NOP_SHIFT))&DMA_SEEI_NOP_MASK) /**< DMA0_SEEI.NOP Field                     */
/** @} */

/** @name CERQ - Clear Enable Request Register */ /** @{ */
#define DMA_CERQ_CERQ_MASK                       (0xFU)                                              /**< DMA0_CERQ.CERQ Mask                     */
#define DMA_CERQ_CERQ_SHIFT                      (0U)                                                /**< DMA0_CERQ.CERQ Position                 */
#define DMA_CERQ_CERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CERQ_SHIFT))&DMA_CERQ_CERQ_MASK) /**< DMA0_CERQ.CERQ Field                    */
#define DMA_CERQ_CAER_MASK                       (0x40U)                                             /**< DMA0_CERQ.CAER Mask                     */
#define DMA_CERQ_CAER_SHIFT                      (6U)                                                /**< DMA0_CERQ.CAER Position                 */
#define DMA_CERQ_CAER(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CAER_SHIFT))&DMA_CERQ_CAER_MASK) /**< DMA0_CERQ.CAER Field                    */
#define DMA_CERQ_NOP_MASK                        (0x80U)                                             /**< DMA0_CERQ.NOP Mask                      */
#define DMA_CERQ_NOP_SHIFT                       (7U)                                                /**< DMA0_CERQ.NOP Position                  */
#define DMA_CERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_NOP_SHIFT))&DMA_CERQ_NOP_MASK) /**< DMA0_CERQ.NOP Field                     */
/** @} */

/** @name SERQ - Set Enable Request Register */ /** @{ */
#define DMA_SERQ_SERQ_MASK                       (0xFU)                                              /**< DMA0_SERQ.SERQ Mask                     */
#define DMA_SERQ_SERQ_SHIFT                      (0U)                                                /**< DMA0_SERQ.SERQ Position                 */
#define DMA_SERQ_SERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SERQ_SHIFT))&DMA_SERQ_SERQ_MASK) /**< DMA0_SERQ.SERQ Field                    */
#define DMA_SERQ_SAER_MASK                       (0x40U)                                             /**< DMA0_SERQ.SAER Mask                     */
#define DMA_SERQ_SAER_SHIFT                      (6U)                                                /**< DMA0_SERQ.SAER Position                 */
#define DMA_SERQ_SAER(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SAER_SHIFT))&DMA_SERQ_SAER_MASK) /**< DMA0_SERQ.SAER Field                    */
#define DMA_SERQ_NOP_MASK                        (0x80U)                                             /**< DMA0_SERQ.NOP Mask                      */
#define DMA_SERQ_NOP_SHIFT                       (7U)                                                /**< DMA0_SERQ.NOP Position                  */
#define DMA_SERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_NOP_SHIFT))&DMA_SERQ_NOP_MASK) /**< DMA0_SERQ.NOP Field                     */
/** @} */

/** @name CDNE - Clear DONE Status Bit Register */ /** @{ */
#define DMA_CDNE_CDNE_MASK                       (0xFU)                                              /**< DMA0_CDNE.CDNE Mask                     */
#define DMA_CDNE_CDNE_SHIFT                      (0U)                                                /**< DMA0_CDNE.CDNE Position                 */
#define DMA_CDNE_CDNE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CDNE_SHIFT))&DMA_CDNE_CDNE_MASK) /**< DMA0_CDNE.CDNE Field                    */
#define DMA_CDNE_CADN_MASK                       (0x40U)                                             /**< DMA0_CDNE.CADN Mask                     */
#define DMA_CDNE_CADN_SHIFT                      (6U)                                                /**< DMA0_CDNE.CADN Position                 */
#define DMA_CDNE_CADN(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CADN_SHIFT))&DMA_CDNE_CADN_MASK) /**< DMA0_CDNE.CADN Field                    */
#define DMA_CDNE_NOP_MASK                        (0x80U)                                             /**< DMA0_CDNE.NOP Mask                      */
#define DMA_CDNE_NOP_SHIFT                       (7U)                                                /**< DMA0_CDNE.NOP Position                  */
#define DMA_CDNE_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_NOP_SHIFT))&DMA_CDNE_NOP_MASK) /**< DMA0_CDNE.NOP Field                     */
/** @} */

/** @name SSRT - Set START Bit Register */ /** @{ */
#define DMA_SSRT_SSRT_MASK                       (0xFU)                                              /**< DMA0_SSRT.SSRT Mask                     */
#define DMA_SSRT_SSRT_SHIFT                      (0U)                                                /**< DMA0_SSRT.SSRT Position                 */
#define DMA_SSRT_SSRT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SSRT_SHIFT))&DMA_SSRT_SSRT_MASK) /**< DMA0_SSRT.SSRT Field                    */
#define DMA_SSRT_SAST_MASK                       (0x40U)                                             /**< DMA0_SSRT.SAST Mask                     */
#define DMA_SSRT_SAST_SHIFT                      (6U)                                                /**< DMA0_SSRT.SAST Position                 */
#define DMA_SSRT_SAST(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SAST_SHIFT))&DMA_SSRT_SAST_MASK) /**< DMA0_SSRT.SAST Field                    */
#define DMA_SSRT_NOP_MASK                        (0x80U)                                             /**< DMA0_SSRT.NOP Mask                      */
#define DMA_SSRT_NOP_SHIFT                       (7U)                                                /**< DMA0_SSRT.NOP Position                  */
#define DMA_SSRT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_NOP_SHIFT))&DMA_SSRT_NOP_MASK) /**< DMA0_SSRT.NOP Field                     */
/** @} */

/** @name CERR - Clear Error Register */ /** @{ */
#define DMA_CERR_CERR_MASK                       (0xFU)                                              /**< DMA0_CERR.CERR Mask                     */
#define DMA_CERR_CERR_SHIFT                      (0U)                                                /**< DMA0_CERR.CERR Position                 */
#define DMA_CERR_CERR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CERR_SHIFT))&DMA_CERR_CERR_MASK) /**< DMA0_CERR.CERR Field                    */
#define DMA_CERR_CAEI_MASK                       (0x40U)                                             /**< DMA0_CERR.CAEI Mask                     */
#define DMA_CERR_CAEI_SHIFT                      (6U)                                                /**< DMA0_CERR.CAEI Position                 */
#define DMA_CERR_CAEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CAEI_SHIFT))&DMA_CERR_CAEI_MASK) /**< DMA0_CERR.CAEI Field                    */
#define DMA_CERR_NOP_MASK                        (0x80U)                                             /**< DMA0_CERR.NOP Mask                      */
#define DMA_CERR_NOP_SHIFT                       (7U)                                                /**< DMA0_CERR.NOP Position                  */
#define DMA_CERR_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CERR_NOP_SHIFT))&DMA_CERR_NOP_MASK) /**< DMA0_CERR.NOP Field                     */
/** @} */

/** @name CINT - Clear Interrupt Request Register */ /** @{ */
#define DMA_CINT_CINT_MASK                       (0xFU)                                              /**< DMA0_CINT.CINT Mask                     */
#define DMA_CINT_CINT_SHIFT                      (0U)                                                /**< DMA0_CINT.CINT Position                 */
#define DMA_CINT_CINT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CINT_SHIFT))&DMA_CINT_CINT_MASK) /**< DMA0_CINT.CINT Field                    */
#define DMA_CINT_CAIR_MASK                       (0x40U)                                             /**< DMA0_CINT.CAIR Mask                     */
#define DMA_CINT_CAIR_SHIFT                      (6U)                                                /**< DMA0_CINT.CAIR Position                 */
#define DMA_CINT_CAIR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CAIR_SHIFT))&DMA_CINT_CAIR_MASK) /**< DMA0_CINT.CAIR Field                    */
#define DMA_CINT_NOP_MASK                        (0x80U)                                             /**< DMA0_CINT.NOP Mask                      */
#define DMA_CINT_NOP_SHIFT                       (7U)                                                /**< DMA0_CINT.NOP Position                  */
#define DMA_CINT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CINT_NOP_SHIFT))&DMA_CINT_NOP_MASK) /**< DMA0_CINT.NOP Field                     */
/** @} */

/** @name INT - Interrupt Request Register */ /** @{ */
#define DMA_INT_INT0_MASK                        (0x1U)                                              /**< DMA0_INT.INT0 Mask                      */
#define DMA_INT_INT0_SHIFT                       (0U)                                                /**< DMA0_INT.INT0 Position                  */
#define DMA_INT_INT0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT0_SHIFT))&DMA_INT_INT0_MASK) /**< DMA0_INT.INT0 Field                     */
#define DMA_INT_INT1_MASK                        (0x2U)                                              /**< DMA0_INT.INT1 Mask                      */
#define DMA_INT_INT1_SHIFT                       (1U)                                                /**< DMA0_INT.INT1 Position                  */
#define DMA_INT_INT1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT1_SHIFT))&DMA_INT_INT1_MASK) /**< DMA0_INT.INT1 Field                     */
#define DMA_INT_INT2_MASK                        (0x4U)                                              /**< DMA0_INT.INT2 Mask                      */
#define DMA_INT_INT2_SHIFT                       (2U)                                                /**< DMA0_INT.INT2 Position                  */
#define DMA_INT_INT2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT2_SHIFT))&DMA_INT_INT2_MASK) /**< DMA0_INT.INT2 Field                     */
#define DMA_INT_INT3_MASK                        (0x8U)                                              /**< DMA0_INT.INT3 Mask                      */
#define DMA_INT_INT3_SHIFT                       (3U)                                                /**< DMA0_INT.INT3 Position                  */
#define DMA_INT_INT3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT3_SHIFT))&DMA_INT_INT3_MASK) /**< DMA0_INT.INT3 Field                     */
#define DMA_INT_INT4_MASK                        (0x10U)                                             /**< DMA0_INT.INT4 Mask                      */
#define DMA_INT_INT4_SHIFT                       (4U)                                                /**< DMA0_INT.INT4 Position                  */
#define DMA_INT_INT4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT4_SHIFT))&DMA_INT_INT4_MASK) /**< DMA0_INT.INT4 Field                     */
#define DMA_INT_INT5_MASK                        (0x20U)                                             /**< DMA0_INT.INT5 Mask                      */
#define DMA_INT_INT5_SHIFT                       (5U)                                                /**< DMA0_INT.INT5 Position                  */
#define DMA_INT_INT5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT5_SHIFT))&DMA_INT_INT5_MASK) /**< DMA0_INT.INT5 Field                     */
#define DMA_INT_INT6_MASK                        (0x40U)                                             /**< DMA0_INT.INT6 Mask                      */
#define DMA_INT_INT6_SHIFT                       (6U)                                                /**< DMA0_INT.INT6 Position                  */
#define DMA_INT_INT6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT6_SHIFT))&DMA_INT_INT6_MASK) /**< DMA0_INT.INT6 Field                     */
#define DMA_INT_INT7_MASK                        (0x80U)                                             /**< DMA0_INT.INT7 Mask                      */
#define DMA_INT_INT7_SHIFT                       (7U)                                                /**< DMA0_INT.INT7 Position                  */
#define DMA_INT_INT7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT7_SHIFT))&DMA_INT_INT7_MASK) /**< DMA0_INT.INT7 Field                     */
#define DMA_INT_INT8_MASK                        (0x100U)                                            /**< DMA0_INT.INT8 Mask                      */
#define DMA_INT_INT8_SHIFT                       (8U)                                                /**< DMA0_INT.INT8 Position                  */
#define DMA_INT_INT8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT8_SHIFT))&DMA_INT_INT8_MASK) /**< DMA0_INT.INT8 Field                     */
#define DMA_INT_INT9_MASK                        (0x200U)                                            /**< DMA0_INT.INT9 Mask                      */
#define DMA_INT_INT9_SHIFT                       (9U)                                                /**< DMA0_INT.INT9 Position                  */
#define DMA_INT_INT9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT9_SHIFT))&DMA_INT_INT9_MASK) /**< DMA0_INT.INT9 Field                     */
#define DMA_INT_INT10_MASK                       (0x400U)                                            /**< DMA0_INT.INT10 Mask                     */
#define DMA_INT_INT10_SHIFT                      (10U)                                               /**< DMA0_INT.INT10 Position                 */
#define DMA_INT_INT10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT10_SHIFT))&DMA_INT_INT10_MASK) /**< DMA0_INT.INT10 Field                    */
#define DMA_INT_INT11_MASK                       (0x800U)                                            /**< DMA0_INT.INT11 Mask                     */
#define DMA_INT_INT11_SHIFT                      (11U)                                               /**< DMA0_INT.INT11 Position                 */
#define DMA_INT_INT11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT11_SHIFT))&DMA_INT_INT11_MASK) /**< DMA0_INT.INT11 Field                    */
#define DMA_INT_INT12_MASK                       (0x1000U)                                           /**< DMA0_INT.INT12 Mask                     */
#define DMA_INT_INT12_SHIFT                      (12U)                                               /**< DMA0_INT.INT12 Position                 */
#define DMA_INT_INT12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT12_SHIFT))&DMA_INT_INT12_MASK) /**< DMA0_INT.INT12 Field                    */
#define DMA_INT_INT13_MASK                       (0x2000U)                                           /**< DMA0_INT.INT13 Mask                     */
#define DMA_INT_INT13_SHIFT                      (13U)                                               /**< DMA0_INT.INT13 Position                 */
#define DMA_INT_INT13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT13_SHIFT))&DMA_INT_INT13_MASK) /**< DMA0_INT.INT13 Field                    */
#define DMA_INT_INT14_MASK                       (0x4000U)                                           /**< DMA0_INT.INT14 Mask                     */
#define DMA_INT_INT14_SHIFT                      (14U)                                               /**< DMA0_INT.INT14 Position                 */
#define DMA_INT_INT14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT14_SHIFT))&DMA_INT_INT14_MASK) /**< DMA0_INT.INT14 Field                    */
#define DMA_INT_INT15_MASK                       (0x8000U)                                           /**< DMA0_INT.INT15 Mask                     */
#define DMA_INT_INT15_SHIFT                      (15U)                                               /**< DMA0_INT.INT15 Position                 */
#define DMA_INT_INT15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT15_SHIFT))&DMA_INT_INT15_MASK) /**< DMA0_INT.INT15 Field                    */
/** @} */

/** @name ERR - Error Register */ /** @{ */
#define DMA_ERR_ERR0_MASK                        (0x1U)                                              /**< DMA0_ERR.ERR0 Mask                      */
#define DMA_ERR_ERR0_SHIFT                       (0U)                                                /**< DMA0_ERR.ERR0 Position                  */
#define DMA_ERR_ERR0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR0_SHIFT))&DMA_ERR_ERR0_MASK) /**< DMA0_ERR.ERR0 Field                     */
#define DMA_ERR_ERR1_MASK                        (0x2U)                                              /**< DMA0_ERR.ERR1 Mask                      */
#define DMA_ERR_ERR1_SHIFT                       (1U)                                                /**< DMA0_ERR.ERR1 Position                  */
#define DMA_ERR_ERR1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR1_SHIFT))&DMA_ERR_ERR1_MASK) /**< DMA0_ERR.ERR1 Field                     */
#define DMA_ERR_ERR2_MASK                        (0x4U)                                              /**< DMA0_ERR.ERR2 Mask                      */
#define DMA_ERR_ERR2_SHIFT                       (2U)                                                /**< DMA0_ERR.ERR2 Position                  */
#define DMA_ERR_ERR2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR2_SHIFT))&DMA_ERR_ERR2_MASK) /**< DMA0_ERR.ERR2 Field                     */
#define DMA_ERR_ERR3_MASK                        (0x8U)                                              /**< DMA0_ERR.ERR3 Mask                      */
#define DMA_ERR_ERR3_SHIFT                       (3U)                                                /**< DMA0_ERR.ERR3 Position                  */
#define DMA_ERR_ERR3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR3_SHIFT))&DMA_ERR_ERR3_MASK) /**< DMA0_ERR.ERR3 Field                     */
#define DMA_ERR_ERR4_MASK                        (0x10U)                                             /**< DMA0_ERR.ERR4 Mask                      */
#define DMA_ERR_ERR4_SHIFT                       (4U)                                                /**< DMA0_ERR.ERR4 Position                  */
#define DMA_ERR_ERR4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR4_SHIFT))&DMA_ERR_ERR4_MASK) /**< DMA0_ERR.ERR4 Field                     */
#define DMA_ERR_ERR5_MASK                        (0x20U)                                             /**< DMA0_ERR.ERR5 Mask                      */
#define DMA_ERR_ERR5_SHIFT                       (5U)                                                /**< DMA0_ERR.ERR5 Position                  */
#define DMA_ERR_ERR5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR5_SHIFT))&DMA_ERR_ERR5_MASK) /**< DMA0_ERR.ERR5 Field                     */
#define DMA_ERR_ERR6_MASK                        (0x40U)                                             /**< DMA0_ERR.ERR6 Mask                      */
#define DMA_ERR_ERR6_SHIFT                       (6U)                                                /**< DMA0_ERR.ERR6 Position                  */
#define DMA_ERR_ERR6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR6_SHIFT))&DMA_ERR_ERR6_MASK) /**< DMA0_ERR.ERR6 Field                     */
#define DMA_ERR_ERR7_MASK                        (0x80U)                                             /**< DMA0_ERR.ERR7 Mask                      */
#define DMA_ERR_ERR7_SHIFT                       (7U)                                                /**< DMA0_ERR.ERR7 Position                  */
#define DMA_ERR_ERR7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR7_SHIFT))&DMA_ERR_ERR7_MASK) /**< DMA0_ERR.ERR7 Field                     */
#define DMA_ERR_ERR8_MASK                        (0x100U)                                            /**< DMA0_ERR.ERR8 Mask                      */
#define DMA_ERR_ERR8_SHIFT                       (8U)                                                /**< DMA0_ERR.ERR8 Position                  */
#define DMA_ERR_ERR8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR8_SHIFT))&DMA_ERR_ERR8_MASK) /**< DMA0_ERR.ERR8 Field                     */
#define DMA_ERR_ERR9_MASK                        (0x200U)                                            /**< DMA0_ERR.ERR9 Mask                      */
#define DMA_ERR_ERR9_SHIFT                       (9U)                                                /**< DMA0_ERR.ERR9 Position                  */
#define DMA_ERR_ERR9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR9_SHIFT))&DMA_ERR_ERR9_MASK) /**< DMA0_ERR.ERR9 Field                     */
#define DMA_ERR_ERR10_MASK                       (0x400U)                                            /**< DMA0_ERR.ERR10 Mask                     */
#define DMA_ERR_ERR10_SHIFT                      (10U)                                               /**< DMA0_ERR.ERR10 Position                 */
#define DMA_ERR_ERR10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR10_SHIFT))&DMA_ERR_ERR10_MASK) /**< DMA0_ERR.ERR10 Field                    */
#define DMA_ERR_ERR11_MASK                       (0x800U)                                            /**< DMA0_ERR.ERR11 Mask                     */
#define DMA_ERR_ERR11_SHIFT                      (11U)                                               /**< DMA0_ERR.ERR11 Position                 */
#define DMA_ERR_ERR11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR11_SHIFT))&DMA_ERR_ERR11_MASK) /**< DMA0_ERR.ERR11 Field                    */
#define DMA_ERR_ERR12_MASK                       (0x1000U)                                           /**< DMA0_ERR.ERR12 Mask                     */
#define DMA_ERR_ERR12_SHIFT                      (12U)                                               /**< DMA0_ERR.ERR12 Position                 */
#define DMA_ERR_ERR12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR12_SHIFT))&DMA_ERR_ERR12_MASK) /**< DMA0_ERR.ERR12 Field                    */
#define DMA_ERR_ERR13_MASK                       (0x2000U)                                           /**< DMA0_ERR.ERR13 Mask                     */
#define DMA_ERR_ERR13_SHIFT                      (13U)                                               /**< DMA0_ERR.ERR13 Position                 */
#define DMA_ERR_ERR13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR13_SHIFT))&DMA_ERR_ERR13_MASK) /**< DMA0_ERR.ERR13 Field                    */
#define DMA_ERR_ERR14_MASK                       (0x4000U)                                           /**< DMA0_ERR.ERR14 Mask                     */
#define DMA_ERR_ERR14_SHIFT                      (14U)                                               /**< DMA0_ERR.ERR14 Position                 */
#define DMA_ERR_ERR14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR14_SHIFT))&DMA_ERR_ERR14_MASK) /**< DMA0_ERR.ERR14 Field                    */
#define DMA_ERR_ERR15_MASK                       (0x8000U)                                           /**< DMA0_ERR.ERR15 Mask                     */
#define DMA_ERR_ERR15_SHIFT                      (15U)                                               /**< DMA0_ERR.ERR15 Position                 */
#define DMA_ERR_ERR15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR15_SHIFT))&DMA_ERR_ERR15_MASK) /**< DMA0_ERR.ERR15 Field                    */
/** @} */

/** @name HRS - Hardware Request Status Register */ /** @{ */
#define DMA_HRS_HRS0_MASK                        (0x1U)                                              /**< DMA0_HRS.HRS0 Mask                      */
#define DMA_HRS_HRS0_SHIFT                       (0U)                                                /**< DMA0_HRS.HRS0 Position                  */
#define DMA_HRS_HRS0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS0_SHIFT))&DMA_HRS_HRS0_MASK) /**< DMA0_HRS.HRS0 Field                     */
#define DMA_HRS_HRS1_MASK                        (0x2U)                                              /**< DMA0_HRS.HRS1 Mask                      */
#define DMA_HRS_HRS1_SHIFT                       (1U)                                                /**< DMA0_HRS.HRS1 Position                  */
#define DMA_HRS_HRS1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS1_SHIFT))&DMA_HRS_HRS1_MASK) /**< DMA0_HRS.HRS1 Field                     */
#define DMA_HRS_HRS2_MASK                        (0x4U)                                              /**< DMA0_HRS.HRS2 Mask                      */
#define DMA_HRS_HRS2_SHIFT                       (2U)                                                /**< DMA0_HRS.HRS2 Position                  */
#define DMA_HRS_HRS2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS2_SHIFT))&DMA_HRS_HRS2_MASK) /**< DMA0_HRS.HRS2 Field                     */
#define DMA_HRS_HRS3_MASK                        (0x8U)                                              /**< DMA0_HRS.HRS3 Mask                      */
#define DMA_HRS_HRS3_SHIFT                       (3U)                                                /**< DMA0_HRS.HRS3 Position                  */
#define DMA_HRS_HRS3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS3_SHIFT))&DMA_HRS_HRS3_MASK) /**< DMA0_HRS.HRS3 Field                     */
#define DMA_HRS_HRS4_MASK                        (0x10U)                                             /**< DMA0_HRS.HRS4 Mask                      */
#define DMA_HRS_HRS4_SHIFT                       (4U)                                                /**< DMA0_HRS.HRS4 Position                  */
#define DMA_HRS_HRS4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS4_SHIFT))&DMA_HRS_HRS4_MASK) /**< DMA0_HRS.HRS4 Field                     */
#define DMA_HRS_HRS5_MASK                        (0x20U)                                             /**< DMA0_HRS.HRS5 Mask                      */
#define DMA_HRS_HRS5_SHIFT                       (5U)                                                /**< DMA0_HRS.HRS5 Position                  */
#define DMA_HRS_HRS5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS5_SHIFT))&DMA_HRS_HRS5_MASK) /**< DMA0_HRS.HRS5 Field                     */
#define DMA_HRS_HRS6_MASK                        (0x40U)                                             /**< DMA0_HRS.HRS6 Mask                      */
#define DMA_HRS_HRS6_SHIFT                       (6U)                                                /**< DMA0_HRS.HRS6 Position                  */
#define DMA_HRS_HRS6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS6_SHIFT))&DMA_HRS_HRS6_MASK) /**< DMA0_HRS.HRS6 Field                     */
#define DMA_HRS_HRS7_MASK                        (0x80U)                                             /**< DMA0_HRS.HRS7 Mask                      */
#define DMA_HRS_HRS7_SHIFT                       (7U)                                                /**< DMA0_HRS.HRS7 Position                  */
#define DMA_HRS_HRS7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS7_SHIFT))&DMA_HRS_HRS7_MASK) /**< DMA0_HRS.HRS7 Field                     */
#define DMA_HRS_HRS8_MASK                        (0x100U)                                            /**< DMA0_HRS.HRS8 Mask                      */
#define DMA_HRS_HRS8_SHIFT                       (8U)                                                /**< DMA0_HRS.HRS8 Position                  */
#define DMA_HRS_HRS8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS8_SHIFT))&DMA_HRS_HRS8_MASK) /**< DMA0_HRS.HRS8 Field                     */
#define DMA_HRS_HRS9_MASK                        (0x200U)                                            /**< DMA0_HRS.HRS9 Mask                      */
#define DMA_HRS_HRS9_SHIFT                       (9U)                                                /**< DMA0_HRS.HRS9 Position                  */
#define DMA_HRS_HRS9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS9_SHIFT))&DMA_HRS_HRS9_MASK) /**< DMA0_HRS.HRS9 Field                     */
#define DMA_HRS_HRS10_MASK                       (0x400U)                                            /**< DMA0_HRS.HRS10 Mask                     */
#define DMA_HRS_HRS10_SHIFT                      (10U)                                               /**< DMA0_HRS.HRS10 Position                 */
#define DMA_HRS_HRS10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS10_SHIFT))&DMA_HRS_HRS10_MASK) /**< DMA0_HRS.HRS10 Field                    */
#define DMA_HRS_HRS11_MASK                       (0x800U)                                            /**< DMA0_HRS.HRS11 Mask                     */
#define DMA_HRS_HRS11_SHIFT                      (11U)                                               /**< DMA0_HRS.HRS11 Position                 */
#define DMA_HRS_HRS11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS11_SHIFT))&DMA_HRS_HRS11_MASK) /**< DMA0_HRS.HRS11 Field                    */
#define DMA_HRS_HRS12_MASK                       (0x1000U)                                           /**< DMA0_HRS.HRS12 Mask                     */
#define DMA_HRS_HRS12_SHIFT                      (12U)                                               /**< DMA0_HRS.HRS12 Position                 */
#define DMA_HRS_HRS12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS12_SHIFT))&DMA_HRS_HRS12_MASK) /**< DMA0_HRS.HRS12 Field                    */
#define DMA_HRS_HRS13_MASK                       (0x2000U)                                           /**< DMA0_HRS.HRS13 Mask                     */
#define DMA_HRS_HRS13_SHIFT                      (13U)                                               /**< DMA0_HRS.HRS13 Position                 */
#define DMA_HRS_HRS13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS13_SHIFT))&DMA_HRS_HRS13_MASK) /**< DMA0_HRS.HRS13 Field                    */
#define DMA_HRS_HRS14_MASK                       (0x4000U)                                           /**< DMA0_HRS.HRS14 Mask                     */
#define DMA_HRS_HRS14_SHIFT                      (14U)                                               /**< DMA0_HRS.HRS14 Position                 */
#define DMA_HRS_HRS14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS14_SHIFT))&DMA_HRS_HRS14_MASK) /**< DMA0_HRS.HRS14 Field                    */
#define DMA_HRS_HRS15_MASK                       (0x8000U)                                           /**< DMA0_HRS.HRS15 Mask                     */
#define DMA_HRS_HRS15_SHIFT                      (15U)                                               /**< DMA0_HRS.HRS15 Position                 */
#define DMA_HRS_HRS15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS15_SHIFT))&DMA_HRS_HRS15_MASK) /**< DMA0_HRS.HRS15 Field                    */
/** @} */

/** @name EARS - Enable Asynchronous Request in Stop Register */ /** @{ */
#define DMA_EARS_EDREQ_0_MASK                    (0x1U)                                              /**< DMA0_EARS.EDREQ_0 Mask                  */
#define DMA_EARS_EDREQ_0_SHIFT                   (0U)                                                /**< DMA0_EARS.EDREQ_0 Position              */
#define DMA_EARS_EDREQ_0(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_0_SHIFT))&DMA_EARS_EDREQ_0_MASK) /**< DMA0_EARS.EDREQ_0 Field                 */
#define DMA_EARS_EDREQ_1_MASK                    (0x2U)                                              /**< DMA0_EARS.EDREQ_1 Mask                  */
#define DMA_EARS_EDREQ_1_SHIFT                   (1U)                                                /**< DMA0_EARS.EDREQ_1 Position              */
#define DMA_EARS_EDREQ_1(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_1_SHIFT))&DMA_EARS_EDREQ_1_MASK) /**< DMA0_EARS.EDREQ_1 Field                 */
#define DMA_EARS_EDREQ_2_MASK                    (0x4U)                                              /**< DMA0_EARS.EDREQ_2 Mask                  */
#define DMA_EARS_EDREQ_2_SHIFT                   (2U)                                                /**< DMA0_EARS.EDREQ_2 Position              */
#define DMA_EARS_EDREQ_2(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_2_SHIFT))&DMA_EARS_EDREQ_2_MASK) /**< DMA0_EARS.EDREQ_2 Field                 */
#define DMA_EARS_EDREQ_3_MASK                    (0x8U)                                              /**< DMA0_EARS.EDREQ_3 Mask                  */
#define DMA_EARS_EDREQ_3_SHIFT                   (3U)                                                /**< DMA0_EARS.EDREQ_3 Position              */
#define DMA_EARS_EDREQ_3(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_3_SHIFT))&DMA_EARS_EDREQ_3_MASK) /**< DMA0_EARS.EDREQ_3 Field                 */
#define DMA_EARS_EDREQ_4_MASK                    (0x10U)                                             /**< DMA0_EARS.EDREQ_4 Mask                  */
#define DMA_EARS_EDREQ_4_SHIFT                   (4U)                                                /**< DMA0_EARS.EDREQ_4 Position              */
#define DMA_EARS_EDREQ_4(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_4_SHIFT))&DMA_EARS_EDREQ_4_MASK) /**< DMA0_EARS.EDREQ_4 Field                 */
#define DMA_EARS_EDREQ_5_MASK                    (0x20U)                                             /**< DMA0_EARS.EDREQ_5 Mask                  */
#define DMA_EARS_EDREQ_5_SHIFT                   (5U)                                                /**< DMA0_EARS.EDREQ_5 Position              */
#define DMA_EARS_EDREQ_5(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_5_SHIFT))&DMA_EARS_EDREQ_5_MASK) /**< DMA0_EARS.EDREQ_5 Field                 */
#define DMA_EARS_EDREQ_6_MASK                    (0x40U)                                             /**< DMA0_EARS.EDREQ_6 Mask                  */
#define DMA_EARS_EDREQ_6_SHIFT                   (6U)                                                /**< DMA0_EARS.EDREQ_6 Position              */
#define DMA_EARS_EDREQ_6(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_6_SHIFT))&DMA_EARS_EDREQ_6_MASK) /**< DMA0_EARS.EDREQ_6 Field                 */
#define DMA_EARS_EDREQ_7_MASK                    (0x80U)                                             /**< DMA0_EARS.EDREQ_7 Mask                  */
#define DMA_EARS_EDREQ_7_SHIFT                   (7U)                                                /**< DMA0_EARS.EDREQ_7 Position              */
#define DMA_EARS_EDREQ_7(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_7_SHIFT))&DMA_EARS_EDREQ_7_MASK) /**< DMA0_EARS.EDREQ_7 Field                 */
#define DMA_EARS_EDREQ_8_MASK                    (0x100U)                                            /**< DMA0_EARS.EDREQ_8 Mask                  */
#define DMA_EARS_EDREQ_8_SHIFT                   (8U)                                                /**< DMA0_EARS.EDREQ_8 Position              */
#define DMA_EARS_EDREQ_8(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_8_SHIFT))&DMA_EARS_EDREQ_8_MASK) /**< DMA0_EARS.EDREQ_8 Field                 */
#define DMA_EARS_EDREQ_9_MASK                    (0x200U)                                            /**< DMA0_EARS.EDREQ_9 Mask                  */
#define DMA_EARS_EDREQ_9_SHIFT                   (9U)                                                /**< DMA0_EARS.EDREQ_9 Position              */
#define DMA_EARS_EDREQ_9(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_9_SHIFT))&DMA_EARS_EDREQ_9_MASK) /**< DMA0_EARS.EDREQ_9 Field                 */
#define DMA_EARS_EDREQ_10_MASK                   (0x400U)                                            /**< DMA0_EARS.EDREQ_10 Mask                 */
#define DMA_EARS_EDREQ_10_SHIFT                  (10U)                                               /**< DMA0_EARS.EDREQ_10 Position             */
#define DMA_EARS_EDREQ_10(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_10_SHIFT))&DMA_EARS_EDREQ_10_MASK) /**< DMA0_EARS.EDREQ_10 Field                */
#define DMA_EARS_EDREQ_11_MASK                   (0x800U)                                            /**< DMA0_EARS.EDREQ_11 Mask                 */
#define DMA_EARS_EDREQ_11_SHIFT                  (11U)                                               /**< DMA0_EARS.EDREQ_11 Position             */
#define DMA_EARS_EDREQ_11(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_11_SHIFT))&DMA_EARS_EDREQ_11_MASK) /**< DMA0_EARS.EDREQ_11 Field                */
#define DMA_EARS_EDREQ_12_MASK                   (0x1000U)                                           /**< DMA0_EARS.EDREQ_12 Mask                 */
#define DMA_EARS_EDREQ_12_SHIFT                  (12U)                                               /**< DMA0_EARS.EDREQ_12 Position             */
#define DMA_EARS_EDREQ_12(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_12_SHIFT))&DMA_EARS_EDREQ_12_MASK) /**< DMA0_EARS.EDREQ_12 Field                */
#define DMA_EARS_EDREQ_13_MASK                   (0x2000U)                                           /**< DMA0_EARS.EDREQ_13 Mask                 */
#define DMA_EARS_EDREQ_13_SHIFT                  (13U)                                               /**< DMA0_EARS.EDREQ_13 Position             */
#define DMA_EARS_EDREQ_13(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_13_SHIFT))&DMA_EARS_EDREQ_13_MASK) /**< DMA0_EARS.EDREQ_13 Field                */
#define DMA_EARS_EDREQ_14_MASK                   (0x4000U)                                           /**< DMA0_EARS.EDREQ_14 Mask                 */
#define DMA_EARS_EDREQ_14_SHIFT                  (14U)                                               /**< DMA0_EARS.EDREQ_14 Position             */
#define DMA_EARS_EDREQ_14(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_14_SHIFT))&DMA_EARS_EDREQ_14_MASK) /**< DMA0_EARS.EDREQ_14 Field                */
#define DMA_EARS_EDREQ_15_MASK                   (0x8000U)                                           /**< DMA0_EARS.EDREQ_15 Mask                 */
#define DMA_EARS_EDREQ_15_SHIFT                  (15U)                                               /**< DMA0_EARS.EDREQ_15 Position             */
#define DMA_EARS_EDREQ_15(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_15_SHIFT))&DMA_EARS_EDREQ_15_MASK) /**< DMA0_EARS.EDREQ_15 Field                */
/** @} */

/** @name DCHPRI - Channel %s Priority Register */ /** @{ */
#define DMA_DCHPRI_CHPRI_MASK                    (0xFU)                                              /**< DMA0_DCHPRI.CHPRI Mask                  */
#define DMA_DCHPRI_CHPRI_SHIFT                   (0U)                                                /**< DMA0_DCHPRI.CHPRI Position              */
#define DMA_DCHPRI_CHPRI(x)                      (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_CHPRI_SHIFT))&DMA_DCHPRI_CHPRI_MASK) /**< DMA0_DCHPRI.CHPRI Field                 */
#define DMA_DCHPRI_DPA_MASK                      (0x40U)                                             /**< DMA0_DCHPRI.DPA Mask                    */
#define DMA_DCHPRI_DPA_SHIFT                     (6U)                                                /**< DMA0_DCHPRI.DPA Position                */
#define DMA_DCHPRI_DPA(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_DPA_SHIFT))&DMA_DCHPRI_DPA_MASK) /**< DMA0_DCHPRI.DPA Field                   */
#define DMA_DCHPRI_ECP_MASK                      (0x80U)                                             /**< DMA0_DCHPRI.ECP Mask                    */
#define DMA_DCHPRI_ECP_SHIFT                     (7U)                                                /**< DMA0_DCHPRI.ECP Position                */
#define DMA_DCHPRI_ECP(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_ECP_SHIFT))&DMA_DCHPRI_ECP_MASK) /**< DMA0_DCHPRI.ECP Field                   */
/** @} */

/** @name SADDR - Source Address */ /** @{ */
#define DMA_SADDR_SADDR_MASK                     (0xFFFFFFFFU)                                       /**< DMA0_SADDR.SADDR Mask                   */
#define DMA_SADDR_SADDR_SHIFT                    (0U)                                                /**< DMA0_SADDR.SADDR Position               */
#define DMA_SADDR_SADDR(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_SADDR_SADDR_SHIFT))&DMA_SADDR_SADDR_MASK) /**< DMA0_SADDR.SADDR Field                  */
/** @} */

/** @name SOFF - Signed Source Address Offset */ /** @{ */
#define DMA_SOFF_SOFF_MASK                       (0xFFFFU)                                           /**< DMA0_SOFF.SOFF Mask                     */
#define DMA_SOFF_SOFF_SHIFT                      (0U)                                                /**< DMA0_SOFF.SOFF Position                 */
#define DMA_SOFF_SOFF(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_SOFF_SOFF_SHIFT))&DMA_SOFF_SOFF_MASK) /**< DMA0_SOFF.SOFF Field                    */
/** @} */

/** @name ATTR - Transfer Attributes */ /** @{ */
#define DMA_ATTR_DSIZE_MASK                      (0x7U)                                              /**< DMA0_ATTR.DSIZE Mask                    */
#define DMA_ATTR_DSIZE_SHIFT                     (0U)                                                /**< DMA0_ATTR.DSIZE Position                */
#define DMA_ATTR_DSIZE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_DSIZE_SHIFT))&DMA_ATTR_DSIZE_MASK) /**< DMA0_ATTR.DSIZE Field                   */
#define DMA_ATTR_DMOD_MASK                       (0xF8U)                                             /**< DMA0_ATTR.DMOD Mask                     */
#define DMA_ATTR_DMOD_SHIFT                      (3U)                                                /**< DMA0_ATTR.DMOD Position                 */
#define DMA_ATTR_DMOD(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_DMOD_SHIFT))&DMA_ATTR_DMOD_MASK) /**< DMA0_ATTR.DMOD Field                    */
#define DMA_ATTR_SSIZE_MASK                      (0x700U)                                            /**< DMA0_ATTR.SSIZE Mask                    */
#define DMA_ATTR_SSIZE_SHIFT                     (8U)                                                /**< DMA0_ATTR.SSIZE Position                */
#define DMA_ATTR_SSIZE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_SSIZE_SHIFT))&DMA_ATTR_SSIZE_MASK) /**< DMA0_ATTR.SSIZE Field                   */
#define DMA_ATTR_SMOD_MASK                       (0xF800U)                                           /**< DMA0_ATTR.SMOD Mask                     */
#define DMA_ATTR_SMOD_SHIFT                      (11U)                                               /**< DMA0_ATTR.SMOD Position                 */
#define DMA_ATTR_SMOD(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_SMOD_SHIFT))&DMA_ATTR_SMOD_MASK) /**< DMA0_ATTR.SMOD Field                    */
/** @} */

/** @name NBYTES_MLNO - Minor Byte Count (Minor Loop Disabled) */ /** @{ */
#define DMA_NBYTES_MLNO_NBYTES_MASK              (0xFFFFFFFFU)                                       /**< DMA0_NBYTES_MLNO.NBYTES Mask            */
#define DMA_NBYTES_MLNO_NBYTES_SHIFT             (0U)                                                /**< DMA0_NBYTES_MLNO.NBYTES Position        */
#define DMA_NBYTES_MLNO_NBYTES(x)                (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLNO_NBYTES_SHIFT))&DMA_NBYTES_MLNO_NBYTES_MASK) /**< DMA0_NBYTES_MLNO.NBYTES Field           */
/** @} */

/** @name NBYTES_MLOFFNO - Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled) */ /** @{ */
#define DMA_NBYTES_MLOFFNO_NBYTES_MASK           (0x3FFFFFFFU)                                       /**< DMA0_NBYTES_MLOFFNO.NBYTES Mask         */
#define DMA_NBYTES_MLOFFNO_NBYTES_SHIFT          (0U)                                                /**< DMA0_NBYTES_MLOFFNO.NBYTES Position     */
#define DMA_NBYTES_MLOFFNO_NBYTES(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_NBYTES_MLOFFNO_NBYTES_MASK) /**< DMA0_NBYTES_MLOFFNO.NBYTES Field        */
#define DMA_NBYTES_MLOFFNO_DMLOE_MASK            (0x40000000U)                                       /**< DMA0_NBYTES_MLOFFNO.DMLOE Mask          */
#define DMA_NBYTES_MLOFFNO_DMLOE_SHIFT           (30U)                                               /**< DMA0_NBYTES_MLOFFNO.DMLOE Position      */
#define DMA_NBYTES_MLOFFNO_DMLOE(x)              (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_NBYTES_MLOFFNO_DMLOE_MASK) /**< DMA0_NBYTES_MLOFFNO.DMLOE Field         */
#define DMA_NBYTES_MLOFFNO_SMLOE_MASK            (0x80000000U)                                       /**< DMA0_NBYTES_MLOFFNO.SMLOE Mask          */
#define DMA_NBYTES_MLOFFNO_SMLOE_SHIFT           (31U)                                               /**< DMA0_NBYTES_MLOFFNO.SMLOE Position      */
#define DMA_NBYTES_MLOFFNO_SMLOE(x)              (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_NBYTES_MLOFFNO_SMLOE_MASK) /**< DMA0_NBYTES_MLOFFNO.SMLOE Field         */
/** @} */

/** @name NBYTES_MLOFFYES - Signed Minor Loop Offset (Minor Loop and Offset Enabled) */ /** @{ */
#define DMA_NBYTES_MLOFFYES_NBYTES_MASK          (0x3FFU)                                            /**< DMA0_NBYTES_MLOFFYES.NBYTES Mask        */
#define DMA_NBYTES_MLOFFYES_NBYTES_SHIFT         (0U)                                                /**< DMA0_NBYTES_MLOFFYES.NBYTES Position    */
#define DMA_NBYTES_MLOFFYES_NBYTES(x)            (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_NBYTES_MLOFFYES_NBYTES_MASK) /**< DMA0_NBYTES_MLOFFYES.NBYTES Field       */
#define DMA_NBYTES_MLOFFYES_MLOFF_MASK           (0x3FFFFC00U)                                       /**< DMA0_NBYTES_MLOFFYES.MLOFF Mask         */
#define DMA_NBYTES_MLOFFYES_MLOFF_SHIFT          (10U)                                               /**< DMA0_NBYTES_MLOFFYES.MLOFF Position     */
#define DMA_NBYTES_MLOFFYES_MLOFF(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_NBYTES_MLOFFYES_MLOFF_MASK) /**< DMA0_NBYTES_MLOFFYES.MLOFF Field        */
#define DMA_NBYTES_MLOFFYES_DMLOE_MASK           (0x40000000U)                                       /**< DMA0_NBYTES_MLOFFYES.DMLOE Mask         */
#define DMA_NBYTES_MLOFFYES_DMLOE_SHIFT          (30U)                                               /**< DMA0_NBYTES_MLOFFYES.DMLOE Position     */
#define DMA_NBYTES_MLOFFYES_DMLOE(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_NBYTES_MLOFFYES_DMLOE_MASK) /**< DMA0_NBYTES_MLOFFYES.DMLOE Field        */
#define DMA_NBYTES_MLOFFYES_SMLOE_MASK           (0x80000000U)                                       /**< DMA0_NBYTES_MLOFFYES.SMLOE Mask         */
#define DMA_NBYTES_MLOFFYES_SMLOE_SHIFT          (31U)                                               /**< DMA0_NBYTES_MLOFFYES.SMLOE Position     */
#define DMA_NBYTES_MLOFFYES_SMLOE(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_NBYTES_MLOFFYES_SMLOE_MASK) /**< DMA0_NBYTES_MLOFFYES.SMLOE Field        */
/** @} */

/** @name SLAST - Last Source Address Adjustment */ /** @{ */
#define DMA_SLAST_SLAST_MASK                     (0xFFFFFFFFU)                                       /**< DMA0_SLAST.SLAST Mask                   */
#define DMA_SLAST_SLAST_SHIFT                    (0U)                                                /**< DMA0_SLAST.SLAST Position               */
#define DMA_SLAST_SLAST(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_SLAST_SLAST_SHIFT))&DMA_SLAST_SLAST_MASK) /**< DMA0_SLAST.SLAST Field                  */
/** @} */

/** @name DADDR - Destination Address */ /** @{ */
#define DMA_DADDR_DADDR_MASK                     (0xFFFFFFFFU)                                       /**< DMA0_DADDR.DADDR Mask                   */
#define DMA_DADDR_DADDR_SHIFT                    (0U)                                                /**< DMA0_DADDR.DADDR Position               */
#define DMA_DADDR_DADDR(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_DADDR_DADDR_SHIFT))&DMA_DADDR_DADDR_MASK) /**< DMA0_DADDR.DADDR Field                  */
/** @} */

/** @name DOFF - Signed Destination Address Offset */ /** @{ */
#define DMA_DOFF_DOFF_MASK                       (0xFFFFU)                                           /**< DMA0_DOFF.DOFF Mask                     */
#define DMA_DOFF_DOFF_SHIFT                      (0U)                                                /**< DMA0_DOFF.DOFF Position                 */
#define DMA_DOFF_DOFF(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_DOFF_DOFF_SHIFT))&DMA_DOFF_DOFF_MASK) /**< DMA0_DOFF.DOFF Field                    */
/** @} */

/** @name CITER_ELINKNO - Current Minor Loop Link, Major Loop Count (Channel Linking Disabled) */ /** @{ */
#define DMA_CITER_ELINKNO_CITER_MASK             (0x7FFFU)                                           /**< DMA0_CITER_ELINKNO.CITER Mask           */
#define DMA_CITER_ELINKNO_CITER_SHIFT            (0U)                                                /**< DMA0_CITER_ELINKNO.CITER Position       */
#define DMA_CITER_ELINKNO_CITER(x)               (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKNO_CITER_SHIFT))&DMA_CITER_ELINKNO_CITER_MASK) /**< DMA0_CITER_ELINKNO.CITER Field          */
#define DMA_CITER_ELINKNO_ELINK_MASK             (0x8000U)                                           /**< DMA0_CITER_ELINKNO.ELINK Mask           */
#define DMA_CITER_ELINKNO_ELINK_SHIFT            (15U)                                               /**< DMA0_CITER_ELINKNO.ELINK Position       */
#define DMA_CITER_ELINKNO_ELINK(x)               (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKNO_ELINK_SHIFT))&DMA_CITER_ELINKNO_ELINK_MASK) /**< DMA0_CITER_ELINKNO.ELINK Field          */
/** @} */

/** @name CITER_ELINKYES - Current Minor Loop Link, Major Loop Count (Channel Linking Enabled) */ /** @{ */
#define DMA_CITER_ELINKYES_CITER_MASK            (0x1FFU)                                            /**< DMA0_CITER_ELINKYES.CITER Mask          */
#define DMA_CITER_ELINKYES_CITER_SHIFT           (0U)                                                /**< DMA0_CITER_ELINKYES.CITER Position      */
#define DMA_CITER_ELINKYES_CITER(x)              (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_CITER_SHIFT))&DMA_CITER_ELINKYES_CITER_MASK) /**< DMA0_CITER_ELINKYES.CITER Field         */
#define DMA_CITER_ELINKYES_LINKCH_MASK           (0x1E00U)                                           /**< DMA0_CITER_ELINKYES.LINKCH Mask         */
#define DMA_CITER_ELINKYES_LINKCH_SHIFT          (9U)                                                /**< DMA0_CITER_ELINKYES.LINKCH Position     */
#define DMA_CITER_ELINKYES_LINKCH(x)             (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_LINKCH_SHIFT))&DMA_CITER_ELINKYES_LINKCH_MASK) /**< DMA0_CITER_ELINKYES.LINKCH Field        */
#define DMA_CITER_ELINKYES_ELINK_MASK            (0x8000U)                                           /**< DMA0_CITER_ELINKYES.ELINK Mask          */
#define DMA_CITER_ELINKYES_ELINK_SHIFT           (15U)                                               /**< DMA0_CITER_ELINKYES.ELINK Position      */
#define DMA_CITER_ELINKYES_ELINK(x)              (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_ELINK_SHIFT))&DMA_CITER_ELINKYES_ELINK_MASK) /**< DMA0_CITER_ELINKYES.ELINK Field         */
/** @} */

/** @name DLASTSGA - Last Destination Address Adjustment/Scatter Gather Address */ /** @{ */
#define DMA_DLASTSGA_DLASTSGA_MASK               (0xFFFFFFFFU)                                       /**< DMA0_DLASTSGA.DLASTSGA Mask             */
#define DMA_DLASTSGA_DLASTSGA_SHIFT              (0U)                                                /**< DMA0_DLASTSGA.DLASTSGA Position         */
#define DMA_DLASTSGA_DLASTSGA(x)                 (((uint32_t)(((uint32_t)(x))<<DMA_DLASTSGA_DLASTSGA_SHIFT))&DMA_DLASTSGA_DLASTSGA_MASK) /**< DMA0_DLASTSGA.DLASTSGA Field            */
/** @} */

/** @name CSR - Control and Status */ /** @{ */
#define DMA_CSR_START_MASK                       (0x1U)                                              /**< DMA0_CSR.START Mask                     */
#define DMA_CSR_START_SHIFT                      (0U)                                                /**< DMA0_CSR.START Position                 */
#define DMA_CSR_START(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_CSR_START_SHIFT))&DMA_CSR_START_MASK) /**< DMA0_CSR.START Field                    */
#define DMA_CSR_INTMAJOR_MASK                    (0x2U)                                              /**< DMA0_CSR.INTMAJOR Mask                  */
#define DMA_CSR_INTMAJOR_SHIFT                   (1U)                                                /**< DMA0_CSR.INTMAJOR Position              */
#define DMA_CSR_INTMAJOR(x)                      (((uint16_t)(((uint16_t)(x))<<DMA_CSR_INTMAJOR_SHIFT))&DMA_CSR_INTMAJOR_MASK) /**< DMA0_CSR.INTMAJOR Field                 */
#define DMA_CSR_INTHALF_MASK                     (0x4U)                                              /**< DMA0_CSR.INTHALF Mask                   */
#define DMA_CSR_INTHALF_SHIFT                    (2U)                                                /**< DMA0_CSR.INTHALF Position               */
#define DMA_CSR_INTHALF(x)                       (((uint16_t)(((uint16_t)(x))<<DMA_CSR_INTHALF_SHIFT))&DMA_CSR_INTHALF_MASK) /**< DMA0_CSR.INTHALF Field                  */
#define DMA_CSR_DREQ_MASK                        (0x8U)                                              /**< DMA0_CSR.DREQ Mask                      */
#define DMA_CSR_DREQ_SHIFT                       (3U)                                                /**< DMA0_CSR.DREQ Position                  */
#define DMA_CSR_DREQ(x)                          (((uint16_t)(((uint16_t)(x))<<DMA_CSR_DREQ_SHIFT))&DMA_CSR_DREQ_MASK) /**< DMA0_CSR.DREQ Field                     */
#define DMA_CSR_ESG_MASK                         (0x10U)                                             /**< DMA0_CSR.ESG Mask                       */
#define DMA_CSR_ESG_SHIFT                        (4U)                                                /**< DMA0_CSR.ESG Position                   */
#define DMA_CSR_ESG(x)                           (((uint16_t)(((uint16_t)(x))<<DMA_CSR_ESG_SHIFT))&DMA_CSR_ESG_MASK) /**< DMA0_CSR.ESG Field                      */
#define DMA_CSR_MAJORELINK_MASK                  (0x20U)                                             /**< DMA0_CSR.MAJORELINK Mask                */
#define DMA_CSR_MAJORELINK_SHIFT                 (5U)                                                /**< DMA0_CSR.MAJORELINK Position            */
#define DMA_CSR_MAJORELINK(x)                    (((uint16_t)(((uint16_t)(x))<<DMA_CSR_MAJORELINK_SHIFT))&DMA_CSR_MAJORELINK_MASK) /**< DMA0_CSR.MAJORELINK Field               */
#define DMA_CSR_ACTIVE_MASK                      (0x40U)                                             /**< DMA0_CSR.ACTIVE Mask                    */
#define DMA_CSR_ACTIVE_SHIFT                     (6U)                                                /**< DMA0_CSR.ACTIVE Position                */
#define DMA_CSR_ACTIVE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_CSR_ACTIVE_SHIFT))&DMA_CSR_ACTIVE_MASK) /**< DMA0_CSR.ACTIVE Field                   */
#define DMA_CSR_DONE_MASK                        (0x80U)                                             /**< DMA0_CSR.DONE Mask                      */
#define DMA_CSR_DONE_SHIFT                       (7U)                                                /**< DMA0_CSR.DONE Position                  */
#define DMA_CSR_DONE(x)                          (((uint16_t)(((uint16_t)(x))<<DMA_CSR_DONE_SHIFT))&DMA_CSR_DONE_MASK) /**< DMA0_CSR.DONE Field                     */
#define DMA_CSR_MAJORLINKCH_MASK                 (0xF00U)                                            /**< DMA0_CSR.MAJORLINKCH Mask               */
#define DMA_CSR_MAJORLINKCH_SHIFT                (8U)                                                /**< DMA0_CSR.MAJORLINKCH Position           */
#define DMA_CSR_MAJORLINKCH(x)                   (((uint16_t)(((uint16_t)(x))<<DMA_CSR_MAJORLINKCH_SHIFT))&DMA_CSR_MAJORLINKCH_MASK) /**< DMA0_CSR.MAJORLINKCH Field              */
#define DMA_CSR_BWC_MASK                         (0xC000U)                                           /**< DMA0_CSR.BWC Mask                       */
#define DMA_CSR_BWC_SHIFT                        (14U)                                               /**< DMA0_CSR.BWC Position                   */
#define DMA_CSR_BWC(x)                           (((uint16_t)(((uint16_t)(x))<<DMA_CSR_BWC_SHIFT))&DMA_CSR_BWC_MASK) /**< DMA0_CSR.BWC Field                      */
/** @} */

/** @name BITER_ELINKNO - Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled) */ /** @{ */
#define DMA_BITER_ELINKNO_BITER_MASK             (0x7FFFU)                                           /**< DMA0_BITER_ELINKNO.BITER Mask           */
#define DMA_BITER_ELINKNO_BITER_SHIFT            (0U)                                                /**< DMA0_BITER_ELINKNO.BITER Position       */
#define DMA_BITER_ELINKNO_BITER(x)               (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKNO_BITER_SHIFT))&DMA_BITER_ELINKNO_BITER_MASK) /**< DMA0_BITER_ELINKNO.BITER Field          */
#define DMA_BITER_ELINKNO_ELINK_MASK             (0x8000U)                                           /**< DMA0_BITER_ELINKNO.ELINK Mask           */
#define DMA_BITER_ELINKNO_ELINK_SHIFT            (15U)                                               /**< DMA0_BITER_ELINKNO.ELINK Position       */
#define DMA_BITER_ELINKNO_ELINK(x)               (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKNO_ELINK_SHIFT))&DMA_BITER_ELINKNO_ELINK_MASK) /**< DMA0_BITER_ELINKNO.ELINK Field          */
/** @} */

/** @name BITER_ELINKYES - Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled) */ /** @{ */
#define DMA_BITER_ELINKYES_BITER_MASK            (0x1FFU)                                            /**< DMA0_BITER_ELINKYES.BITER Mask          */
#define DMA_BITER_ELINKYES_BITER_SHIFT           (0U)                                                /**< DMA0_BITER_ELINKYES.BITER Position      */
#define DMA_BITER_ELINKYES_BITER(x)              (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_BITER_SHIFT))&DMA_BITER_ELINKYES_BITER_MASK) /**< DMA0_BITER_ELINKYES.BITER Field         */
#define DMA_BITER_ELINKYES_LINKCH_MASK           (0x1E00U)                                           /**< DMA0_BITER_ELINKYES.LINKCH Mask         */
#define DMA_BITER_ELINKYES_LINKCH_SHIFT          (9U)                                                /**< DMA0_BITER_ELINKYES.LINKCH Position     */
#define DMA_BITER_ELINKYES_LINKCH(x)             (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_LINKCH_SHIFT))&DMA_BITER_ELINKYES_LINKCH_MASK) /**< DMA0_BITER_ELINKYES.LINKCH Field        */
#define DMA_BITER_ELINKYES_ELINK_MASK            (0x8000U)                                           /**< DMA0_BITER_ELINKYES.ELINK Mask          */
#define DMA_BITER_ELINKYES_ELINK_SHIFT           (15U)                                               /**< DMA0_BITER_ELINKYES.ELINK Position      */
#define DMA_BITER_ELINKYES_ELINK(x)              (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_ELINK_SHIFT))&DMA_BITER_ELINKYES_ELINK_MASK) /**< DMA0_BITER_ELINKYES.ELINK Field         */
/** @} */

/** @} */ /* End group DMA0_Register_Masks_GROUP */


/* DMA0 - Peripheral instance base addresses */
#define DMA0_BasePtr                   0x40008000UL //!< Peripheral base address
#define DMA0                           ((DMA_Type *) DMA0_BasePtr) //!< Freescale base pointer
#define DMA0_BASE_PTR                  (DMA0) //!< Freescale style base pointer
#define DMA0_IRQS { DMA0_IRQn, DMA1_IRQn, DMA2_IRQn, DMA3_IRQn, DMA4_IRQn, DMA5_IRQn, DMA6_IRQn, DMA7_IRQn, DMA8_IRQn, DMA9_IRQn, DMA10_IRQn, DMA11_IRQn, DMA12_IRQn, DMA13_IRQn, DMA14_IRQn, DMA15_IRQn, DMA_Error_IRQn,  }


/** @} */ /* End group DMA0_Peripheral_access_layer_GROUP */


/** @brief C Struct for DMAMUX */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup DMAMUX_Peripheral_access_layer_GROUP DMAMUX Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           DMAMUX0 (file:DMAMUX0_16CH_TRIG_S32K14x)       ================ */
/* ================================================================================ */

/**
 * @brief DMA channel multiplexor
 */
/**
 * @struct DMAMUX_Type
 * @brief  C Struct allowing access to DMAMUX registers
 */
typedef struct DMAMUX_Type {
   __IO uint8_t   CHCFG[16];                    /**< 0000: Channel Configuration Register                               */
} DMAMUX_Type;


/** @brief Register Masks for DMAMUX */

/* -------------------------------------------------------------------------------- */
/* -----------     'DMAMUX0' Position & Mask macros                     ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup DMAMUX_Register_Masks_GROUP DMAMUX Register Masks */
/** @{ */

/** @name CHCFG - Channel Configuration Register */ /** @{ */
#define DMAMUX_CHCFG_SOURCE_MASK                 (0x3FU)                                             /**< DMAMUX0_CHCFG.SOURCE Mask               */
#define DMAMUX_CHCFG_SOURCE_SHIFT                (0U)                                                /**< DMAMUX0_CHCFG.SOURCE Position           */
#define DMAMUX_CHCFG_SOURCE(x)                   (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_SOURCE_SHIFT))&DMAMUX_CHCFG_SOURCE_MASK) /**< DMAMUX0_CHCFG.SOURCE Field              */
#define DMAMUX_CHCFG_TRIG_MASK                   (0x40U)                                             /**< DMAMUX0_CHCFG.TRIG Mask                 */
#define DMAMUX_CHCFG_TRIG_SHIFT                  (6U)                                                /**< DMAMUX0_CHCFG.TRIG Position             */
#define DMAMUX_CHCFG_TRIG(x)                     (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_TRIG_SHIFT))&DMAMUX_CHCFG_TRIG_MASK) /**< DMAMUX0_CHCFG.TRIG Field                */
#define DMAMUX_CHCFG_ENBL_MASK                   (0x80U)                                             /**< DMAMUX0_CHCFG.ENBL Mask                 */
#define DMAMUX_CHCFG_ENBL_SHIFT                  (7U)                                                /**< DMAMUX0_CHCFG.ENBL Position             */
#define DMAMUX_CHCFG_ENBL(x)                     (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_ENBL_SHIFT))&DMAMUX_CHCFG_ENBL_MASK) /**< DMAMUX0_CHCFG.ENBL Field                */
/** @} */

/** @} */ /* End group DMAMUX_Register_Masks_GROUP */


/* DMAMUX0 - Peripheral instance base addresses */
#define DMAMUX0_BasePtr                0x40021000UL //!< Peripheral base address
#define DMAMUX0                        ((DMAMUX_Type *) DMAMUX0_BasePtr) //!< Freescale base pointer
#define DMAMUX0_BASE_PTR               (DMAMUX0) //!< Freescale style base pointer

/**
 * DMA multiplexor slot (source) numbers
 */
typedef enum DmaSlot {
   Dma0Slot_Disabled                   =        0, //!<  Disabled
   Dma0Slot_ENET                       =        1, //!<  ENET
   Dma0Slot_LPUART0_Rx                 =        2, //!<  LPUART0_Rx
   Dma0Slot_LPUART0_Tx                 =        3, //!<  LPUART0_Tx
   Dma0Slot_LPUART1_Rx                 =        4, //!<  LPUART1_Rx
   Dma0Slot_LPUART1_Tx                 =        5, //!<  LPUART1_Tx
   Dma0Slot_LPUART2_Rx                 =        6, //!<  LPUART2_Rx
   Dma0Slot_LPUART2_Tx                 =        7, //!<  LPUART2_Tx
   Dma0Slot_LPI2C1_Rx                  =        8, //!<  LPI2C1_Rx
   Dma0Slot_LPI2C1_Tx                  =        9, //!<  LPI2C1_Tx
   Dma0Slot_FLEXIO_Sh0                 =       10, //!<  FLEXIO_Sh0
   Dma0Slot_FLEXIO_Sh1                 =       11, //!<  FLEXIO_Sh1
   Dma0Slot_FLEXIO_Sh2                 =       12, //!<  FLEXIO_Sh2
   Dma0Slot_FLEXIO_Sh3                 =       13, //!<  FLEXIO_Sh3
   Dma0Slot_LPSPI0_Rx                  =       14, //!<  LPSPI0_Rx
   Dma0Slot_LPSPI0_Tx                  =       15, //!<  LPSPI0_Tx
   Dma0Slot_LPSPI1_Rx                  =       16, //!<  LPSPI1_Rx
   Dma0Slot_LPSPI1_Tx                  =       17, //!<  LPSPI1_Tx
   Dma0Slot_LPSPI2_Rx                  =       18, //!<  LPSPI2_Rx
   Dma0Slot_LPSPI2_Tx                  =       19, //!<  LPSPI2_Tx
   Dma0Slot_FTM1_Ch0                   =       20, //!<  FTM1_Ch0
   Dma0Slot_FTM1_Ch1                   =       21, //!<  FTM1_Ch1
   Dma0Slot_FTM1_Ch2                   =       22, //!<  FTM1_Ch2
   Dma0Slot_FTM1_Ch3                   =       23, //!<  FTM1_Ch3
   Dma0Slot_FTM1_Ch4                   =       24, //!<  FTM1_Ch4
   Dma0Slot_FTM1_Ch5                   =       25, //!<  FTM1_Ch5
   Dma0Slot_FTM1_Ch6                   =       26, //!<  FTM1_Ch6
   Dma0Slot_FTM1_Ch7                   =       27, //!<  FTM1_Ch7
   Dma0Slot_FTM2_Ch0                   =       28, //!<  FTM2_Ch0
   Dma0Slot_FTM2_Ch1                   =       29, //!<  FTM2_Ch1
   Dma0Slot_FTM2_Ch2                   =       30, //!<  FTM2_Ch2
   Dma0Slot_FTM2_Ch3                   =       31, //!<  FTM2_Ch3
   Dma0Slot_FTM2_Ch4                   =       32, //!<  FTM2_Ch4
   Dma0Slot_FTM2_Ch5                   =       33, //!<  FTM2_Ch5
   Dma0Slot_FTM2_Ch6                   =       34, //!<  FTM2_Ch6
   Dma0Slot_FTM2_Ch7                   =       35, //!<  FTM2_Ch7
   Dma0Slot_FTM0_Or                    =       36, //!<  FTM0_Or
   Dma0Slot_FTM3_Or                    =       37, //!<  FTM3_Or
   Dma0Slot_FTM4_Or                    =       38, //!<  FTM4_Or
   Dma0Slot_FTM5_Or                    =       39, //!<  FTM5_Or
   Dma0Slot_FTM6_Or                    =       40, //!<  FTM6_Or
   Dma0Slot_FTM7_Or                    =       41, //!<  FTM7_Or
   Dma0Slot_ADC0                       =       42, //!<  ADC0
   Dma0Slot_ADC1                       =       43, //!<  ADC1
   Dma0Slot_LPI2C0_Rx                  =       44, //!<  LPI2C0_Rx
   Dma0Slot_LPI2C0_Tx                  =       45, //!<  LPI2C0_Tx
   Dma0Slot_PDB0                       =       46, //!<  PDB0
   Dma0Slot_PDB1                       =       47, //!<  PDB1
   Dma0Slot_CMP0                       =       48, //!<  CMP0
   Dma0Slot_PORTA                      =       49, //!<  PORTA
   Dma0Slot_PORTB                      =       50, //!<  PORTB
   Dma0Slot_PORTC                      =       51, //!<  PORTC
   Dma0Slot_PORTD                      =       52, //!<  PORTD
   Dma0Slot_PORTE                      =       53, //!<  PORTE
   Dma0Slot_CAN0                       =       54, //!<  CAN0
   Dma0Slot_CAN1                       =       55, //!<  CAN1
   Dma0Slot_CAN2                       =       56, //!<  CAN2
   Dma0Slot_SAI0_Rx                    =       57, //!<  SAI0_Rx
   Dma0Slot_SAI0_tx                    =       58, //!<  SAI0_tx
   Dma0Slot_LPTMR0                     =       59, //!<  LPTMR0
   Dma0Slot_QUADSPI_Rx                 =       60, //!<  QUADSPI_Rx
   Dma0Slot_QUADSPI_Tx                 =       61, //!<  QUADSPI_Tx
   Dma0Slot_AlwaysEnabled62            =       62, //!<  AlwaysEnabled62
   Dma0Slot_AlwaysEnabled63            =       63, //!<  AlwaysEnabled63
} DmaSlot;


/** @} */ /* End group DMAMUX_Peripheral_access_layer_GROUP */


/** @brief C Struct for EIM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup EIM_Peripheral_access_layer_GROUP EIM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           EIM (file:EIM_S32K14x)               ================ */
/* ================================================================================ */

/**
 * @brief Error Injection Module
 */
/**
 * @struct EIM_Type
 * @brief  C Struct allowing access to EIM registers
 */
typedef struct EIM_Type {
   __IO uint32_t  EIMCR;                        /**< 0000: Error Injection Module Configuration Register                */
   __IO uint32_t  EICHEN;                       /**< 0004: Error Injection Channel Enable register                      */
        uint8_t   RESERVED_0[248];              /**< 0008: 0xF8 bytes                                                   */
   struct {
      __IO uint32_t  WORD0;                     /**< 0100: Error Injection Channel Descriptor n, Word0                  */
      __IO uint32_t  WORD1;                     /**< 0104: Error Injection Channel Descriptor n, Word1                  */
           uint8_t   RESERVED_1[248];           /**< 0108: 0xF8 bytes                                                   */
   } EICHDn[2];                                 /**< 0100: (cluster: size=0x0200, 512)                                  */
} EIM_Type;


/** @brief Register Masks for EIM */

/* -------------------------------------------------------------------------------- */
/* -----------     'EIM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup EIM_Register_Masks_GROUP EIM Register Masks */
/** @{ */

/** @name EIMCR - Error Injection Module Configuration Register */ /** @{ */
#define EIM_EIMCR_GEIEN_MASK                     (0x1U)                                              /**< EIM_EIMCR.GEIEN Mask                    */
#define EIM_EIMCR_GEIEN_SHIFT                    (0U)                                                /**< EIM_EIMCR.GEIEN Position                */
#define EIM_EIMCR_GEIEN(x)                       (((uint32_t)(((uint32_t)(x))<<EIM_EIMCR_GEIEN_SHIFT))&EIM_EIMCR_GEIEN_MASK) /**< EIM_EIMCR.GEIEN Field                   */
/** @} */

/** @name EICHEN - Error Injection Channel Enable register */ /** @{ */
#define EIM_EICHEN_EICH1EN_MASK                  (0x40000000U)                                       /**< EIM_EICHEN.EICH1EN Mask                 */
#define EIM_EICHEN_EICH1EN_SHIFT                 (30U)                                               /**< EIM_EICHEN.EICH1EN Position             */
#define EIM_EICHEN_EICH1EN(x)                    (((uint32_t)(((uint32_t)(x))<<EIM_EICHEN_EICH1EN_SHIFT))&EIM_EICHEN_EICH1EN_MASK) /**< EIM_EICHEN.EICH1EN Field                */
#define EIM_EICHEN_EICH0EN_MASK                  (0x80000000U)                                       /**< EIM_EICHEN.EICH0EN Mask                 */
#define EIM_EICHEN_EICH0EN_SHIFT                 (31U)                                               /**< EIM_EICHEN.EICH0EN Position             */
#define EIM_EICHEN_EICH0EN(x)                    (((uint32_t)(((uint32_t)(x))<<EIM_EICHEN_EICH0EN_SHIFT))&EIM_EICHEN_EICH0EN_MASK) /**< EIM_EICHEN.EICH0EN Field                */
/** @} */

/** @name WORD0 - Error Injection Channel Descriptor n, Word0 */ /** @{ */
#define EIM_WORD0_CHKBIT_MASK_MASK               (0xFE000000U)                                       /**< EIM_WORD0.CHKBIT_MASK Mask              */
#define EIM_WORD0_CHKBIT_MASK_SHIFT              (25U)                                               /**< EIM_WORD0.CHKBIT_MASK Position          */
#define EIM_WORD0_CHKBIT_MASK(x)                 (((uint32_t)(((uint32_t)(x))<<EIM_WORD0_CHKBIT_MASK_SHIFT))&EIM_WORD0_CHKBIT_MASK_MASK) /**< EIM_WORD0.CHKBIT_MASK Field             */
/** @} */

/** @name WORD1 - Error Injection Channel Descriptor n, Word1 */ /** @{ */
#define EIM_WORD1_B0_3DATA_MASK_MASK             (0xFFFFFFFFU)                                       /**< EIM_WORD1.B0_3DATA_MASK Mask            */
#define EIM_WORD1_B0_3DATA_MASK_SHIFT            (0U)                                                /**< EIM_WORD1.B0_3DATA_MASK Position        */
#define EIM_WORD1_B0_3DATA_MASK(x)               (((uint32_t)(((uint32_t)(x))<<EIM_WORD1_B0_3DATA_MASK_SHIFT))&EIM_WORD1_B0_3DATA_MASK_MASK) /**< EIM_WORD1.B0_3DATA_MASK Field           */
/** @} */

/** @} */ /* End group EIM_Register_Masks_GROUP */


/* EIM - Peripheral instance base addresses */
#define EIM_BasePtr                    0x40019000UL //!< Peripheral base address
#define EIM                            ((EIM_Type *) EIM_BasePtr) //!< Freescale base pointer
#define EIM_BASE_PTR                   (EIM) //!< Freescale style base pointer

/** @} */ /* End group EIM_Peripheral_access_layer_GROUP */


/** @brief C Struct for ERM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup ERM_Peripheral_access_layer_GROUP ERM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           ERM (file:ERM_S32K14x)               ================ */
/* ================================================================================ */

/**
 * @brief Error Reporting Module
 */
/**
 * @struct ERM_Type
 * @brief  C Struct allowing access to ERM registers
 */
typedef struct ERM_Type {
   __IO uint32_t  CR0;                          /**< 0000: ERM Configuration Register 0                                 */
        uint8_t   RESERVED_0[12];               /**< 0004: 0xC bytes                                                    */
   __IO uint32_t  SR0;                          /**< 0010: ERM Status Register 0                                        */
        uint8_t   RESERVED_1[236];              /**< 0014: 0xEC bytes                                                   */
   struct {
      __I  uint32_t  EAR;                       /**< 0100: ERM Memory n Error Address Register                          */
           uint8_t   RESERVED_2[12];            /**< 0104: 0xC bytes                                                    */
   } EARn[2];                                   /**< 0100: (cluster: size=0x0020, 32)                                   */
} ERM_Type;


/** @brief Register Masks for ERM */

/* -------------------------------------------------------------------------------- */
/* -----------     'ERM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup ERM_Register_Masks_GROUP ERM Register Masks */
/** @{ */

/** @name CR0 - ERM Configuration Register 0 */ /** @{ */
#define ERM_CR0_ENCIE1_MASK                      (0x4000000U)                                        /**< ERM_CR0.ENCIE1 Mask                     */
#define ERM_CR0_ENCIE1_SHIFT                     (26U)                                               /**< ERM_CR0.ENCIE1 Position                 */
#define ERM_CR0_ENCIE1(x)                        (((uint32_t)(((uint32_t)(x))<<ERM_CR0_ENCIE1_SHIFT))&ERM_CR0_ENCIE1_MASK) /**< ERM_CR0.ENCIE1 Field                    */
#define ERM_CR0_ESCIE1_MASK                      (0x8000000U)                                        /**< ERM_CR0.ESCIE1 Mask                     */
#define ERM_CR0_ESCIE1_SHIFT                     (27U)                                               /**< ERM_CR0.ESCIE1 Position                 */
#define ERM_CR0_ESCIE1(x)                        (((uint32_t)(((uint32_t)(x))<<ERM_CR0_ESCIE1_SHIFT))&ERM_CR0_ESCIE1_MASK) /**< ERM_CR0.ESCIE1 Field                    */
#define ERM_CR0_ENCIE0_MASK                      (0x40000000U)                                       /**< ERM_CR0.ENCIE0 Mask                     */
#define ERM_CR0_ENCIE0_SHIFT                     (30U)                                               /**< ERM_CR0.ENCIE0 Position                 */
#define ERM_CR0_ENCIE0(x)                        (((uint32_t)(((uint32_t)(x))<<ERM_CR0_ENCIE0_SHIFT))&ERM_CR0_ENCIE0_MASK) /**< ERM_CR0.ENCIE0 Field                    */
#define ERM_CR0_ESCIE0_MASK                      (0x80000000U)                                       /**< ERM_CR0.ESCIE0 Mask                     */
#define ERM_CR0_ESCIE0_SHIFT                     (31U)                                               /**< ERM_CR0.ESCIE0 Position                 */
#define ERM_CR0_ESCIE0(x)                        (((uint32_t)(((uint32_t)(x))<<ERM_CR0_ESCIE0_SHIFT))&ERM_CR0_ESCIE0_MASK) /**< ERM_CR0.ESCIE0 Field                    */
/** @} */

/** @name SR0 - ERM Status Register 0 */ /** @{ */
#define ERM_SR0_NCE1_MASK                        (0x4000000U)                                        /**< ERM_SR0.NCE1 Mask                       */
#define ERM_SR0_NCE1_SHIFT                       (26U)                                               /**< ERM_SR0.NCE1 Position                   */
#define ERM_SR0_NCE1(x)                          (((uint32_t)(((uint32_t)(x))<<ERM_SR0_NCE1_SHIFT))&ERM_SR0_NCE1_MASK) /**< ERM_SR0.NCE1 Field                      */
#define ERM_SR0_SBC1_MASK                        (0x8000000U)                                        /**< ERM_SR0.SBC1 Mask                       */
#define ERM_SR0_SBC1_SHIFT                       (27U)                                               /**< ERM_SR0.SBC1 Position                   */
#define ERM_SR0_SBC1(x)                          (((uint32_t)(((uint32_t)(x))<<ERM_SR0_SBC1_SHIFT))&ERM_SR0_SBC1_MASK) /**< ERM_SR0.SBC1 Field                      */
#define ERM_SR0_NCE0_MASK                        (0x40000000U)                                       /**< ERM_SR0.NCE0 Mask                       */
#define ERM_SR0_NCE0_SHIFT                       (30U)                                               /**< ERM_SR0.NCE0 Position                   */
#define ERM_SR0_NCE0(x)                          (((uint32_t)(((uint32_t)(x))<<ERM_SR0_NCE0_SHIFT))&ERM_SR0_NCE0_MASK) /**< ERM_SR0.NCE0 Field                      */
#define ERM_SR0_SBC0_MASK                        (0x80000000U)                                       /**< ERM_SR0.SBC0 Mask                       */
#define ERM_SR0_SBC0_SHIFT                       (31U)                                               /**< ERM_SR0.SBC0 Position                   */
#define ERM_SR0_SBC0(x)                          (((uint32_t)(((uint32_t)(x))<<ERM_SR0_SBC0_SHIFT))&ERM_SR0_SBC0_MASK) /**< ERM_SR0.SBC0 Field                      */
/** @} */

/** @name EAR - ERM Memory n Error Address Register */ /** @{ */
#define ERM_EAR_EAR_MASK                         (0xFFFFFFFFU)                                       /**< ERM_EAR.EAR Mask                        */
#define ERM_EAR_EAR_SHIFT                        (0U)                                                /**< ERM_EAR.EAR Position                    */
#define ERM_EAR_EAR(x)                           (((uint32_t)(((uint32_t)(x))<<ERM_EAR_EAR_SHIFT))&ERM_EAR_EAR_MASK) /**< ERM_EAR.EAR Field                       */
/** @} */

/** @} */ /* End group ERM_Register_Masks_GROUP */


/* ERM - Peripheral instance base addresses */
#define ERM_BasePtr                    0x40018000UL //!< Peripheral base address
#define ERM                            ((ERM_Type *) ERM_BasePtr) //!< Freescale base pointer
#define ERM_BASE_PTR                   (ERM) //!< Freescale style base pointer
#define ERM_IRQS { ERM_single_fault_IRQn, ERM_double_fault_IRQn,  }


/** @} */ /* End group ERM_Peripheral_access_layer_GROUP */


/** @brief C Struct for EWM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup EWM_Peripheral_access_layer_GROUP EWM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           EWM (file:EWM_INT_PR)                ================ */
/* ================================================================================ */

/**
 * @brief External Watchdog Monitor
 */
/**
 * @struct EWM_Type
 * @brief  C Struct allowing access to EWM registers
 */
typedef struct EWM_Type {
   __IO uint8_t   CTRL;                         /**< 0000: Control Register                                             */
   __O  uint8_t   SERV;                         /**< 0001: Service Register                                             */
   __IO uint8_t   CMPL;                         /**< 0002: Compare Low Register                                         */
   __IO uint8_t   CMPH;                         /**< 0003: Compare High Register                                        */
        uint8_t   RESERVED_0;                   /**< 0004: 0x1 bytes                                                    */
   __IO uint8_t   CLKPRESCALER;                 /**< 0005: Clock Prescaler Register                                     */
} EWM_Type;


/** @brief Register Masks for EWM */

/* -------------------------------------------------------------------------------- */
/* -----------     'EWM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup EWM_Register_Masks_GROUP EWM Register Masks */
/** @{ */

/** @name CTRL - Control Register */ /** @{ */
#define EWM_CTRL_EWMEN_MASK                      (0x1U)                                              /**< EWM_CTRL.EWMEN Mask                     */
#define EWM_CTRL_EWMEN_SHIFT                     (0U)                                                /**< EWM_CTRL.EWMEN Position                 */
#define EWM_CTRL_EWMEN(x)                        (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_EWMEN_SHIFT))&EWM_CTRL_EWMEN_MASK) /**< EWM_CTRL.EWMEN Field                    */
#define EWM_CTRL_ASSIN_MASK                      (0x2U)                                              /**< EWM_CTRL.ASSIN Mask                     */
#define EWM_CTRL_ASSIN_SHIFT                     (1U)                                                /**< EWM_CTRL.ASSIN Position                 */
#define EWM_CTRL_ASSIN(x)                        (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_ASSIN_SHIFT))&EWM_CTRL_ASSIN_MASK) /**< EWM_CTRL.ASSIN Field                    */
#define EWM_CTRL_INEN_MASK                       (0x4U)                                              /**< EWM_CTRL.INEN Mask                      */
#define EWM_CTRL_INEN_SHIFT                      (2U)                                                /**< EWM_CTRL.INEN Position                  */
#define EWM_CTRL_INEN(x)                         (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_INEN_SHIFT))&EWM_CTRL_INEN_MASK) /**< EWM_CTRL.INEN Field                     */
#define EWM_CTRL_INTEN_MASK                      (0x8U)                                              /**< EWM_CTRL.INTEN Mask                     */
#define EWM_CTRL_INTEN_SHIFT                     (3U)                                                /**< EWM_CTRL.INTEN Position                 */
#define EWM_CTRL_INTEN(x)                        (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_INTEN_SHIFT))&EWM_CTRL_INTEN_MASK) /**< EWM_CTRL.INTEN Field                    */
/** @} */

/** @name SERV - Service Register */ /** @{ */
#define EWM_SERV_SERVICE_MASK                    (0xFFU)                                             /**< EWM_SERV.SERVICE Mask                   */
#define EWM_SERV_SERVICE_SHIFT                   (0U)                                                /**< EWM_SERV.SERVICE Position               */
#define EWM_SERV_SERVICE(x)                      (((uint8_t)(((uint8_t)(x))<<EWM_SERV_SERVICE_SHIFT))&EWM_SERV_SERVICE_MASK) /**< EWM_SERV.SERVICE Field                  */
/** @} */

/** @name CMPL - Compare Low Register */ /** @{ */
#define EWM_CMPL_COMPAREL_MASK                   (0xFFU)                                             /**< EWM_CMPL.COMPAREL Mask                  */
#define EWM_CMPL_COMPAREL_SHIFT                  (0U)                                                /**< EWM_CMPL.COMPAREL Position              */
#define EWM_CMPL_COMPAREL(x)                     (((uint8_t)(((uint8_t)(x))<<EWM_CMPL_COMPAREL_SHIFT))&EWM_CMPL_COMPAREL_MASK) /**< EWM_CMPL.COMPAREL Field                 */
/** @} */

/** @name CMPH - Compare High Register */ /** @{ */
#define EWM_CMPH_COMPAREH_MASK                   (0xFFU)                                             /**< EWM_CMPH.COMPAREH Mask                  */
#define EWM_CMPH_COMPAREH_SHIFT                  (0U)                                                /**< EWM_CMPH.COMPAREH Position              */
#define EWM_CMPH_COMPAREH(x)                     (((uint8_t)(((uint8_t)(x))<<EWM_CMPH_COMPAREH_SHIFT))&EWM_CMPH_COMPAREH_MASK) /**< EWM_CMPH.COMPAREH Field                 */
/** @} */

/** @name CLKPRESCALER - Clock Prescaler Register */ /** @{ */
#define EWM_CLKPRESCALER_CLK_DIV_MASK            (0xFFU)                                             /**< EWM_CLKPRESCALER.CLK_DIV Mask           */
#define EWM_CLKPRESCALER_CLK_DIV_SHIFT           (0U)                                                /**< EWM_CLKPRESCALER.CLK_DIV Position       */
#define EWM_CLKPRESCALER_CLK_DIV(x)              (((uint8_t)(((uint8_t)(x))<<EWM_CLKPRESCALER_CLK_DIV_SHIFT))&EWM_CLKPRESCALER_CLK_DIV_MASK) /**< EWM_CLKPRESCALER.CLK_DIV Field          */
/** @} */

/** @} */ /* End group EWM_Register_Masks_GROUP */


/* EWM - Peripheral instance base addresses */
#define EWM_BasePtr                    0x40061000UL //!< Peripheral base address
#define EWM                            ((EWM_Type *) EWM_BasePtr) //!< Freescale base pointer
#define EWM_BASE_PTR                   (EWM) //!< Freescale style base pointer
#define EWM_IRQS { WDOG_EWM_IRQn,  }


/** @} */ /* End group EWM_Peripheral_access_layer_GROUP */


/** @brief C Struct for FLEXIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FLEXIO_Peripheral_access_layer_GROUP FLEXIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FLEXIO (file:FLEXIO_4SH_4TMR_MKE15Z7)       ================ */
/* ================================================================================ */

/**
 * @brief Flexible I/O
 */
#define FLEXIO_PIN_COUNT     8          /**< Number of Pins implemented                         */
#define FLEXIO_SHIFTER_COUNT 4          /**< Number of Shifters implemented                     */
#define FLEXIO_TIMER_COUNT   4          /**< Number of Timers implemented                       */
#define FLEXIO_TRIGGER_COUNT 4          /**< Number of external triggers implemented            */
/**
 * @struct FLEXIO_Type
 * @brief  C Struct allowing access to FLEXIO registers
 */
typedef struct FLEXIO_Type {
   __I  uint32_t  VERID;                        /**< 0000: Version ID Register                                          */
   __I  uint32_t  PARAM;                        /**< 0004: Parameter Register                                           */
   __IO uint32_t  CTRL;                         /**< 0008: FlexIO Control Register                                      */
   __I  uint32_t  PIN;                          /**< 000C: Pin State Register                                           */
   __IO uint32_t  SHIFTSTAT;                    /**< 0010: Shifter Status Register                                      */
   __IO uint32_t  SHIFTERR;                     /**< 0014: Shifter Error Register                                       */
   __IO uint32_t  TIMSTAT;                      /**< 0018: Timer Status Register                                        */
        uint8_t   RESERVED_0[4];                /**< 001C: 0x4 bytes                                                    */
   __IO uint32_t  SHIFTSIEN;                    /**< 0020: Shifter Status Interrupt Enable                              */
   __IO uint32_t  SHIFTEIEN;                    /**< 0024: Shifter Error Interrupt Enable                               */
   __IO uint32_t  TIMIEN;                       /**< 0028: Timer Interrupt Enable Register                              */
        uint8_t   RESERVED_1[4];                /**< 002C: 0x4 bytes                                                    */
   __IO uint32_t  SHIFTSDEN;                    /**< 0030: Shifter Status DMA Enable                                    */
        uint8_t   RESERVED_2[76];               /**< 0034: 0x4C bytes                                                   */
   __IO uint32_t  SHIFTCTL[FLEXIO_SHIFTER_COUNT]; /**< 0080: Shifter Control N Register                                   */
        uint8_t   RESERVED_3[112];              /**< 0090: 0x70 bytes                                                   */
   __IO uint32_t  SHIFTCFG[FLEXIO_SHIFTER_COUNT]; /**< 0100: Shifter Configuration N Register                             */
        uint8_t   RESERVED_4[240];              /**< 0110: 0xF0 bytes                                                   */
   __IO uint32_t  SHIFTBUF[FLEXIO_SHIFTER_COUNT]; /**< 0200: Shifter Buffer N Register                                    */
        uint8_t   RESERVED_5[112];              /**< 0210: 0x70 bytes                                                   */
   __IO uint32_t  SHIFTBUFBIS[FLEXIO_SHIFTER_COUNT]; /**< 0280: Shifter Buffer N Bit Swapped Register                        */
        uint8_t   RESERVED_6[112];              /**< 0290: 0x70 bytes                                                   */
   __IO uint32_t  SHIFTBUFBYS[FLEXIO_SHIFTER_COUNT]; /**< 0300: Shifter Buffer N Byte Swapped Register                       */
        uint8_t   RESERVED_7[112];              /**< 0310: 0x70 bytes                                                   */
   __IO uint32_t  SHIFTBUFBBS[FLEXIO_SHIFTER_COUNT]; /**< 0380: Shifter Buffer N Bit Byte Swapped Register                   */
        uint8_t   RESERVED_8[112];              /**< 0390: 0x70 bytes                                                   */
   __IO uint32_t  TIMCTL[FLEXIO_TIMER_COUNT];   /**< 0400: Timer Control N Register                                     */
        uint8_t   RESERVED_9[112];              /**< 0410: 0x70 bytes                                                   */
   __IO uint32_t  TIMCFG[FLEXIO_TIMER_COUNT];   /**< 0480: Timer Configuration N Register                               */
        uint8_t   RESERVED_10[112];             /**< 0490: 0x70 bytes                                                   */
   __IO uint32_t  TIMCMP[FLEXIO_TIMER_COUNT];   /**< 0500: Timer Compare N Register                                     */
} FLEXIO_Type;


/** @brief Register Masks for FLEXIO */

/* -------------------------------------------------------------------------------- */
/* -----------     'FLEXIO' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup FLEXIO_Register_Masks_GROUP FLEXIO Register Masks */
/** @{ */

/** @name VERID - Version ID Register */ /** @{ */
#define FLEXIO_VERID_FEATURE_MASK                (0xFFFFU)                                           /**< FLEXIO_VERID.FEATURE Mask               */
#define FLEXIO_VERID_FEATURE_SHIFT               (0U)                                                /**< FLEXIO_VERID.FEATURE Position           */
#define FLEXIO_VERID_FEATURE(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_VERID_FEATURE_SHIFT))&FLEXIO_VERID_FEATURE_MASK) /**< FLEXIO_VERID.FEATURE Field              */
#define FLEXIO_VERID_MINOR_MASK                  (0xFF0000U)                                         /**< FLEXIO_VERID.MINOR Mask                 */
#define FLEXIO_VERID_MINOR_SHIFT                 (16U)                                               /**< FLEXIO_VERID.MINOR Position             */
#define FLEXIO_VERID_MINOR(x)                    (((uint32_t)(((uint32_t)(x))<<FLEXIO_VERID_MINOR_SHIFT))&FLEXIO_VERID_MINOR_MASK) /**< FLEXIO_VERID.MINOR Field                */
#define FLEXIO_VERID_MAJOR_MASK                  (0xFF000000U)                                       /**< FLEXIO_VERID.MAJOR Mask                 */
#define FLEXIO_VERID_MAJOR_SHIFT                 (24U)                                               /**< FLEXIO_VERID.MAJOR Position             */
#define FLEXIO_VERID_MAJOR(x)                    (((uint32_t)(((uint32_t)(x))<<FLEXIO_VERID_MAJOR_SHIFT))&FLEXIO_VERID_MAJOR_MASK) /**< FLEXIO_VERID.MAJOR Field                */
/** @} */

/** @name PARAM - Parameter Register */ /** @{ */
#define FLEXIO_PARAM_SHIFTER_MASK                (0xFFU)                                             /**< FLEXIO_PARAM.SHIFTER Mask               */
#define FLEXIO_PARAM_SHIFTER_SHIFT               (0U)                                                /**< FLEXIO_PARAM.SHIFTER Position           */
#define FLEXIO_PARAM_SHIFTER(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_PARAM_SHIFTER_SHIFT))&FLEXIO_PARAM_SHIFTER_MASK) /**< FLEXIO_PARAM.SHIFTER Field              */
#define FLEXIO_PARAM_TIMER_MASK                  (0xFF00U)                                           /**< FLEXIO_PARAM.TIMER Mask                 */
#define FLEXIO_PARAM_TIMER_SHIFT                 (8U)                                                /**< FLEXIO_PARAM.TIMER Position             */
#define FLEXIO_PARAM_TIMER(x)                    (((uint32_t)(((uint32_t)(x))<<FLEXIO_PARAM_TIMER_SHIFT))&FLEXIO_PARAM_TIMER_MASK) /**< FLEXIO_PARAM.TIMER Field                */
#define FLEXIO_PARAM_PIN_MASK                    (0xFF0000U)                                         /**< FLEXIO_PARAM.PIN Mask                   */
#define FLEXIO_PARAM_PIN_SHIFT                   (16U)                                               /**< FLEXIO_PARAM.PIN Position               */
#define FLEXIO_PARAM_PIN(x)                      (((uint32_t)(((uint32_t)(x))<<FLEXIO_PARAM_PIN_SHIFT))&FLEXIO_PARAM_PIN_MASK) /**< FLEXIO_PARAM.PIN Field                  */
#define FLEXIO_PARAM_TRIGGER_MASK                (0xFF000000U)                                       /**< FLEXIO_PARAM.TRIGGER Mask               */
#define FLEXIO_PARAM_TRIGGER_SHIFT               (24U)                                               /**< FLEXIO_PARAM.TRIGGER Position           */
#define FLEXIO_PARAM_TRIGGER(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_PARAM_TRIGGER_SHIFT))&FLEXIO_PARAM_TRIGGER_MASK) /**< FLEXIO_PARAM.TRIGGER Field              */
/** @} */

/** @name CTRL - FlexIO Control Register */ /** @{ */
#define FLEXIO_CTRL_FLEXEN_MASK                  (0x1U)                                              /**< FLEXIO_CTRL.FLEXEN Mask                 */
#define FLEXIO_CTRL_FLEXEN_SHIFT                 (0U)                                                /**< FLEXIO_CTRL.FLEXEN Position             */
#define FLEXIO_CTRL_FLEXEN(x)                    (((uint32_t)(((uint32_t)(x))<<FLEXIO_CTRL_FLEXEN_SHIFT))&FLEXIO_CTRL_FLEXEN_MASK) /**< FLEXIO_CTRL.FLEXEN Field                */
#define FLEXIO_CTRL_SWRST_MASK                   (0x2U)                                              /**< FLEXIO_CTRL.SWRST Mask                  */
#define FLEXIO_CTRL_SWRST_SHIFT                  (1U)                                                /**< FLEXIO_CTRL.SWRST Position              */
#define FLEXIO_CTRL_SWRST(x)                     (((uint32_t)(((uint32_t)(x))<<FLEXIO_CTRL_SWRST_SHIFT))&FLEXIO_CTRL_SWRST_MASK) /**< FLEXIO_CTRL.SWRST Field                 */
#define FLEXIO_CTRL_FASTACC_MASK                 (0x4U)                                              /**< FLEXIO_CTRL.FASTACC Mask                */
#define FLEXIO_CTRL_FASTACC_SHIFT                (2U)                                                /**< FLEXIO_CTRL.FASTACC Position            */
#define FLEXIO_CTRL_FASTACC(x)                   (((uint32_t)(((uint32_t)(x))<<FLEXIO_CTRL_FASTACC_SHIFT))&FLEXIO_CTRL_FASTACC_MASK) /**< FLEXIO_CTRL.FASTACC Field               */
#define FLEXIO_CTRL_DBGE_MASK                    (0x40000000U)                                       /**< FLEXIO_CTRL.DBGE Mask                   */
#define FLEXIO_CTRL_DBGE_SHIFT                   (30U)                                               /**< FLEXIO_CTRL.DBGE Position               */
#define FLEXIO_CTRL_DBGE(x)                      (((uint32_t)(((uint32_t)(x))<<FLEXIO_CTRL_DBGE_SHIFT))&FLEXIO_CTRL_DBGE_MASK) /**< FLEXIO_CTRL.DBGE Field                  */
#define FLEXIO_CTRL_DOZEN_MASK                   (0x80000000U)                                       /**< FLEXIO_CTRL.DOZEN Mask                  */
#define FLEXIO_CTRL_DOZEN_SHIFT                  (31U)                                               /**< FLEXIO_CTRL.DOZEN Position              */
#define FLEXIO_CTRL_DOZEN(x)                     (((uint32_t)(((uint32_t)(x))<<FLEXIO_CTRL_DOZEN_SHIFT))&FLEXIO_CTRL_DOZEN_MASK) /**< FLEXIO_CTRL.DOZEN Field                 */
/** @} */

/** @name PIN - Pin State Register */ /** @{ */
#define FLEXIO_PIN_PDI_MASK                      (0xFFU)                                             /**< FLEXIO_PIN.PDI Mask                     */
#define FLEXIO_PIN_PDI_SHIFT                     (0U)                                                /**< FLEXIO_PIN.PDI Position                 */
#define FLEXIO_PIN_PDI(x)                        (((uint32_t)(((uint32_t)(x))<<FLEXIO_PIN_PDI_SHIFT))&FLEXIO_PIN_PDI_MASK) /**< FLEXIO_PIN.PDI Field                    */
/** @} */

/** @name SHIFTSTAT - Shifter Status Register */ /** @{ */
#define FLEXIO_SHIFTSTAT_SSF_MASK                (0xFU)                                              /**< FLEXIO_SHIFTSTAT.SSF Mask               */
#define FLEXIO_SHIFTSTAT_SSF_SHIFT               (0U)                                                /**< FLEXIO_SHIFTSTAT.SSF Position           */
#define FLEXIO_SHIFTSTAT_SSF(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTSTAT_SSF_SHIFT))&FLEXIO_SHIFTSTAT_SSF_MASK) /**< FLEXIO_SHIFTSTAT.SSF Field              */
/** @} */

/** @name SHIFTERR - Shifter Error Register */ /** @{ */
#define FLEXIO_SHIFTERR_SEF_MASK                 (0xFU)                                              /**< FLEXIO_SHIFTERR.SEF Mask                */
#define FLEXIO_SHIFTERR_SEF_SHIFT                (0U)                                                /**< FLEXIO_SHIFTERR.SEF Position            */
#define FLEXIO_SHIFTERR_SEF(x)                   (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTERR_SEF_SHIFT))&FLEXIO_SHIFTERR_SEF_MASK) /**< FLEXIO_SHIFTERR.SEF Field               */
/** @} */

/** @name TIMSTAT - Timer Status Register */ /** @{ */
#define FLEXIO_TIMSTAT_TSF_MASK                  (0xFU)                                              /**< FLEXIO_TIMSTAT.TSF Mask                 */
#define FLEXIO_TIMSTAT_TSF_SHIFT                 (0U)                                                /**< FLEXIO_TIMSTAT.TSF Position             */
#define FLEXIO_TIMSTAT_TSF(x)                    (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMSTAT_TSF_SHIFT))&FLEXIO_TIMSTAT_TSF_MASK) /**< FLEXIO_TIMSTAT.TSF Field                */
/** @} */

/** @name SHIFTSIEN - Shifter Status Interrupt Enable */ /** @{ */
#define FLEXIO_SHIFTSIEN_SSIE_MASK               (0xFU)                                              /**< FLEXIO_SHIFTSIEN.SSIE Mask              */
#define FLEXIO_SHIFTSIEN_SSIE_SHIFT              (0U)                                                /**< FLEXIO_SHIFTSIEN.SSIE Position          */
#define FLEXIO_SHIFTSIEN_SSIE(x)                 (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTSIEN_SSIE_SHIFT))&FLEXIO_SHIFTSIEN_SSIE_MASK) /**< FLEXIO_SHIFTSIEN.SSIE Field             */
/** @} */

/** @name SHIFTEIEN - Shifter Error Interrupt Enable */ /** @{ */
#define FLEXIO_SHIFTEIEN_SEIE_MASK               (0xFU)                                              /**< FLEXIO_SHIFTEIEN.SEIE Mask              */
#define FLEXIO_SHIFTEIEN_SEIE_SHIFT              (0U)                                                /**< FLEXIO_SHIFTEIEN.SEIE Position          */
#define FLEXIO_SHIFTEIEN_SEIE(x)                 (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTEIEN_SEIE_SHIFT))&FLEXIO_SHIFTEIEN_SEIE_MASK) /**< FLEXIO_SHIFTEIEN.SEIE Field             */
/** @} */

/** @name TIMIEN - Timer Interrupt Enable Register */ /** @{ */
#define FLEXIO_TIMIEN_TEIE_MASK                  (0xFU)                                              /**< FLEXIO_TIMIEN.TEIE Mask                 */
#define FLEXIO_TIMIEN_TEIE_SHIFT                 (0U)                                                /**< FLEXIO_TIMIEN.TEIE Position             */
#define FLEXIO_TIMIEN_TEIE(x)                    (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMIEN_TEIE_SHIFT))&FLEXIO_TIMIEN_TEIE_MASK) /**< FLEXIO_TIMIEN.TEIE Field                */
/** @} */

/** @name SHIFTSDEN - Shifter Status DMA Enable */ /** @{ */
#define FLEXIO_SHIFTSDEN_SSDE_MASK               (0xFU)                                              /**< FLEXIO_SHIFTSDEN.SSDE Mask              */
#define FLEXIO_SHIFTSDEN_SSDE_SHIFT              (0U)                                                /**< FLEXIO_SHIFTSDEN.SSDE Position          */
#define FLEXIO_SHIFTSDEN_SSDE(x)                 (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTSDEN_SSDE_SHIFT))&FLEXIO_SHIFTSDEN_SSDE_MASK) /**< FLEXIO_SHIFTSDEN.SSDE Field             */
/** @} */

/** @name SHIFTCTL - Shifter Control N Register */ /** @{ */
#define FLEXIO_SHIFTCTL_SMOD_MASK                (0x7U)                                              /**< FLEXIO_SHIFTCTL.SMOD Mask               */
#define FLEXIO_SHIFTCTL_SMOD_SHIFT               (0U)                                                /**< FLEXIO_SHIFTCTL.SMOD Position           */
#define FLEXIO_SHIFTCTL_SMOD(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTCTL_SMOD_SHIFT))&FLEXIO_SHIFTCTL_SMOD_MASK) /**< FLEXIO_SHIFTCTL.SMOD Field              */
#define FLEXIO_SHIFTCTL_PINPOL_MASK              (0x80U)                                             /**< FLEXIO_SHIFTCTL.PINPOL Mask             */
#define FLEXIO_SHIFTCTL_PINPOL_SHIFT             (7U)                                                /**< FLEXIO_SHIFTCTL.PINPOL Position         */
#define FLEXIO_SHIFTCTL_PINPOL(x)                (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTCTL_PINPOL_SHIFT))&FLEXIO_SHIFTCTL_PINPOL_MASK) /**< FLEXIO_SHIFTCTL.PINPOL Field            */
#define FLEXIO_SHIFTCTL_PINSEL_MASK              (0x700U)                                            /**< FLEXIO_SHIFTCTL.PINSEL Mask             */
#define FLEXIO_SHIFTCTL_PINSEL_SHIFT             (8U)                                                /**< FLEXIO_SHIFTCTL.PINSEL Position         */
#define FLEXIO_SHIFTCTL_PINSEL(x)                (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTCTL_PINSEL_SHIFT))&FLEXIO_SHIFTCTL_PINSEL_MASK) /**< FLEXIO_SHIFTCTL.PINSEL Field            */
#define FLEXIO_SHIFTCTL_PINCFG_MASK              (0x30000U)                                          /**< FLEXIO_SHIFTCTL.PINCFG Mask             */
#define FLEXIO_SHIFTCTL_PINCFG_SHIFT             (16U)                                               /**< FLEXIO_SHIFTCTL.PINCFG Position         */
#define FLEXIO_SHIFTCTL_PINCFG(x)                (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTCTL_PINCFG_SHIFT))&FLEXIO_SHIFTCTL_PINCFG_MASK) /**< FLEXIO_SHIFTCTL.PINCFG Field            */
#define FLEXIO_SHIFTCTL_TIMPOL_MASK              (0x800000U)                                         /**< FLEXIO_SHIFTCTL.TIMPOL Mask             */
#define FLEXIO_SHIFTCTL_TIMPOL_SHIFT             (23U)                                               /**< FLEXIO_SHIFTCTL.TIMPOL Position         */
#define FLEXIO_SHIFTCTL_TIMPOL(x)                (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTCTL_TIMPOL_SHIFT))&FLEXIO_SHIFTCTL_TIMPOL_MASK) /**< FLEXIO_SHIFTCTL.TIMPOL Field            */
#define FLEXIO_SHIFTCTL_TIMSEL_MASK              (0x3000000U)                                        /**< FLEXIO_SHIFTCTL.TIMSEL Mask             */
#define FLEXIO_SHIFTCTL_TIMSEL_SHIFT             (24U)                                               /**< FLEXIO_SHIFTCTL.TIMSEL Position         */
#define FLEXIO_SHIFTCTL_TIMSEL(x)                (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTCTL_TIMSEL_SHIFT))&FLEXIO_SHIFTCTL_TIMSEL_MASK) /**< FLEXIO_SHIFTCTL.TIMSEL Field            */
/** @} */

/** @name SHIFTCFG - Shifter Configuration N Register */ /** @{ */
#define FLEXIO_SHIFTCFG_SSTART_MASK              (0x3U)                                              /**< FLEXIO_SHIFTCFG.SSTART Mask             */
#define FLEXIO_SHIFTCFG_SSTART_SHIFT             (0U)                                                /**< FLEXIO_SHIFTCFG.SSTART Position         */
#define FLEXIO_SHIFTCFG_SSTART(x)                (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTCFG_SSTART_SHIFT))&FLEXIO_SHIFTCFG_SSTART_MASK) /**< FLEXIO_SHIFTCFG.SSTART Field            */
#define FLEXIO_SHIFTCFG_SSTOP_MASK               (0x30U)                                             /**< FLEXIO_SHIFTCFG.SSTOP Mask              */
#define FLEXIO_SHIFTCFG_SSTOP_SHIFT              (4U)                                                /**< FLEXIO_SHIFTCFG.SSTOP Position          */
#define FLEXIO_SHIFTCFG_SSTOP(x)                 (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTCFG_SSTOP_SHIFT))&FLEXIO_SHIFTCFG_SSTOP_MASK) /**< FLEXIO_SHIFTCFG.SSTOP Field             */
#define FLEXIO_SHIFTCFG_INSRC_MASK               (0x100U)                                            /**< FLEXIO_SHIFTCFG.INSRC Mask              */
#define FLEXIO_SHIFTCFG_INSRC_SHIFT              (8U)                                                /**< FLEXIO_SHIFTCFG.INSRC Position          */
#define FLEXIO_SHIFTCFG_INSRC(x)                 (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTCFG_INSRC_SHIFT))&FLEXIO_SHIFTCFG_INSRC_MASK) /**< FLEXIO_SHIFTCFG.INSRC Field             */
/** @} */

/** @name SHIFTBUF - Shifter Buffer N Register */ /** @{ */
#define FLEXIO_SHIFTBUF_SHIFTBUF_MASK            (0xFFFFFFFFU)                                       /**< FLEXIO_SHIFTBUF.SHIFTBUF Mask           */
#define FLEXIO_SHIFTBUF_SHIFTBUF_SHIFT           (0U)                                                /**< FLEXIO_SHIFTBUF.SHIFTBUF Position       */
#define FLEXIO_SHIFTBUF_SHIFTBUF(x)              (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTBUF_SHIFTBUF_SHIFT))&FLEXIO_SHIFTBUF_SHIFTBUF_MASK) /**< FLEXIO_SHIFTBUF.SHIFTBUF Field          */
/** @} */

/** @name SHIFTBUFBIS - Shifter Buffer N Bit Swapped Register */ /** @{ */
#define FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS_MASK      (0xFFFFFFFFU)                                       /**< FLEXIO_SHIFTBUFBIS.SHIFTBUFBIS Mask     */
#define FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS_SHIFT     (0U)                                                /**< FLEXIO_SHIFTBUFBIS.SHIFTBUFBIS Position */
#define FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS(x)        (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS_SHIFT))&FLEXIO_SHIFTBUFBIS_SHIFTBUFBIS_MASK) /**< FLEXIO_SHIFTBUFBIS.SHIFTBUFBIS Field    */
/** @} */

/** @name SHIFTBUFBYS - Shifter Buffer N Byte Swapped Register */ /** @{ */
#define FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS_MASK      (0xFFFFFFFFU)                                       /**< FLEXIO_SHIFTBUFBYS.SHIFTBUFBYS Mask     */
#define FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS_SHIFT     (0U)                                                /**< FLEXIO_SHIFTBUFBYS.SHIFTBUFBYS Position */
#define FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS(x)        (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS_SHIFT))&FLEXIO_SHIFTBUFBYS_SHIFTBUFBYS_MASK) /**< FLEXIO_SHIFTBUFBYS.SHIFTBUFBYS Field    */
/** @} */

/** @name SHIFTBUFBBS - Shifter Buffer N Bit Byte Swapped Register */ /** @{ */
#define FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS_MASK      (0xFFFFFFFFU)                                       /**< FLEXIO_SHIFTBUFBBS.SHIFTBUFBBS Mask     */
#define FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS_SHIFT     (0U)                                                /**< FLEXIO_SHIFTBUFBBS.SHIFTBUFBBS Position */
#define FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS(x)        (((uint32_t)(((uint32_t)(x))<<FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS_SHIFT))&FLEXIO_SHIFTBUFBBS_SHIFTBUFBBS_MASK) /**< FLEXIO_SHIFTBUFBBS.SHIFTBUFBBS Field    */
/** @} */

/** @name TIMCTL - Timer Control N Register */ /** @{ */
#define FLEXIO_TIMCTL_TIMOD_MASK                 (0x3U)                                              /**< FLEXIO_TIMCTL.TIMOD Mask                */
#define FLEXIO_TIMCTL_TIMOD_SHIFT                (0U)                                                /**< FLEXIO_TIMCTL.TIMOD Position            */
#define FLEXIO_TIMCTL_TIMOD(x)                   (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCTL_TIMOD_SHIFT))&FLEXIO_TIMCTL_TIMOD_MASK) /**< FLEXIO_TIMCTL.TIMOD Field               */
#define FLEXIO_TIMCTL_PINPOL_MASK                (0x80U)                                             /**< FLEXIO_TIMCTL.PINPOL Mask               */
#define FLEXIO_TIMCTL_PINPOL_SHIFT               (7U)                                                /**< FLEXIO_TIMCTL.PINPOL Position           */
#define FLEXIO_TIMCTL_PINPOL(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCTL_PINPOL_SHIFT))&FLEXIO_TIMCTL_PINPOL_MASK) /**< FLEXIO_TIMCTL.PINPOL Field              */
#define FLEXIO_TIMCTL_PINSEL_MASK                (0x700U)                                            /**< FLEXIO_TIMCTL.PINSEL Mask               */
#define FLEXIO_TIMCTL_PINSEL_SHIFT               (8U)                                                /**< FLEXIO_TIMCTL.PINSEL Position           */
#define FLEXIO_TIMCTL_PINSEL(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCTL_PINSEL_SHIFT))&FLEXIO_TIMCTL_PINSEL_MASK) /**< FLEXIO_TIMCTL.PINSEL Field              */
#define FLEXIO_TIMCTL_PINCFG_MASK                (0x30000U)                                          /**< FLEXIO_TIMCTL.PINCFG Mask               */
#define FLEXIO_TIMCTL_PINCFG_SHIFT               (16U)                                               /**< FLEXIO_TIMCTL.PINCFG Position           */
#define FLEXIO_TIMCTL_PINCFG(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCTL_PINCFG_SHIFT))&FLEXIO_TIMCTL_PINCFG_MASK) /**< FLEXIO_TIMCTL.PINCFG Field              */
#define FLEXIO_TIMCTL_TRGSRC_MASK                (0x400000U)                                         /**< FLEXIO_TIMCTL.TRGSRC Mask               */
#define FLEXIO_TIMCTL_TRGSRC_SHIFT               (22U)                                               /**< FLEXIO_TIMCTL.TRGSRC Position           */
#define FLEXIO_TIMCTL_TRGSRC(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCTL_TRGSRC_SHIFT))&FLEXIO_TIMCTL_TRGSRC_MASK) /**< FLEXIO_TIMCTL.TRGSRC Field              */
#define FLEXIO_TIMCTL_TRGPOL_MASK                (0x800000U)                                         /**< FLEXIO_TIMCTL.TRGPOL Mask               */
#define FLEXIO_TIMCTL_TRGPOL_SHIFT               (23U)                                               /**< FLEXIO_TIMCTL.TRGPOL Position           */
#define FLEXIO_TIMCTL_TRGPOL(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCTL_TRGPOL_SHIFT))&FLEXIO_TIMCTL_TRGPOL_MASK) /**< FLEXIO_TIMCTL.TRGPOL Field              */
#define FLEXIO_TIMCTL_TRGSEL_MASK                (0xF000000U)                                        /**< FLEXIO_TIMCTL.TRGSEL Mask               */
#define FLEXIO_TIMCTL_TRGSEL_SHIFT               (24U)                                               /**< FLEXIO_TIMCTL.TRGSEL Position           */
#define FLEXIO_TIMCTL_TRGSEL(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCTL_TRGSEL_SHIFT))&FLEXIO_TIMCTL_TRGSEL_MASK) /**< FLEXIO_TIMCTL.TRGSEL Field              */
/** @} */

/** @name TIMCFG - Timer Configuration N Register */ /** @{ */
#define FLEXIO_TIMCFG_TSTART_MASK                (0x2U)                                              /**< FLEXIO_TIMCFG.TSTART Mask               */
#define FLEXIO_TIMCFG_TSTART_SHIFT               (1U)                                                /**< FLEXIO_TIMCFG.TSTART Position           */
#define FLEXIO_TIMCFG_TSTART(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCFG_TSTART_SHIFT))&FLEXIO_TIMCFG_TSTART_MASK) /**< FLEXIO_TIMCFG.TSTART Field              */
#define FLEXIO_TIMCFG_TSTOP_MASK                 (0x30U)                                             /**< FLEXIO_TIMCFG.TSTOP Mask                */
#define FLEXIO_TIMCFG_TSTOP_SHIFT                (4U)                                                /**< FLEXIO_TIMCFG.TSTOP Position            */
#define FLEXIO_TIMCFG_TSTOP(x)                   (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCFG_TSTOP_SHIFT))&FLEXIO_TIMCFG_TSTOP_MASK) /**< FLEXIO_TIMCFG.TSTOP Field               */
#define FLEXIO_TIMCFG_TIMENA_MASK                (0x700U)                                            /**< FLEXIO_TIMCFG.TIMENA Mask               */
#define FLEXIO_TIMCFG_TIMENA_SHIFT               (8U)                                                /**< FLEXIO_TIMCFG.TIMENA Position           */
#define FLEXIO_TIMCFG_TIMENA(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCFG_TIMENA_SHIFT))&FLEXIO_TIMCFG_TIMENA_MASK) /**< FLEXIO_TIMCFG.TIMENA Field              */
#define FLEXIO_TIMCFG_TIMDIS_MASK                (0x7000U)                                           /**< FLEXIO_TIMCFG.TIMDIS Mask               */
#define FLEXIO_TIMCFG_TIMDIS_SHIFT               (12U)                                               /**< FLEXIO_TIMCFG.TIMDIS Position           */
#define FLEXIO_TIMCFG_TIMDIS(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCFG_TIMDIS_SHIFT))&FLEXIO_TIMCFG_TIMDIS_MASK) /**< FLEXIO_TIMCFG.TIMDIS Field              */
#define FLEXIO_TIMCFG_TIMRST_MASK                (0x70000U)                                          /**< FLEXIO_TIMCFG.TIMRST Mask               */
#define FLEXIO_TIMCFG_TIMRST_SHIFT               (16U)                                               /**< FLEXIO_TIMCFG.TIMRST Position           */
#define FLEXIO_TIMCFG_TIMRST(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCFG_TIMRST_SHIFT))&FLEXIO_TIMCFG_TIMRST_MASK) /**< FLEXIO_TIMCFG.TIMRST Field              */
#define FLEXIO_TIMCFG_TIMDEC_MASK                (0x300000U)                                         /**< FLEXIO_TIMCFG.TIMDEC Mask               */
#define FLEXIO_TIMCFG_TIMDEC_SHIFT               (20U)                                               /**< FLEXIO_TIMCFG.TIMDEC Position           */
#define FLEXIO_TIMCFG_TIMDEC(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCFG_TIMDEC_SHIFT))&FLEXIO_TIMCFG_TIMDEC_MASK) /**< FLEXIO_TIMCFG.TIMDEC Field              */
#define FLEXIO_TIMCFG_TIMOUT_MASK                (0x3000000U)                                        /**< FLEXIO_TIMCFG.TIMOUT Mask               */
#define FLEXIO_TIMCFG_TIMOUT_SHIFT               (24U)                                               /**< FLEXIO_TIMCFG.TIMOUT Position           */
#define FLEXIO_TIMCFG_TIMOUT(x)                  (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCFG_TIMOUT_SHIFT))&FLEXIO_TIMCFG_TIMOUT_MASK) /**< FLEXIO_TIMCFG.TIMOUT Field              */
/** @} */

/** @name TIMCMP - Timer Compare N Register */ /** @{ */
#define FLEXIO_TIMCMP_CMP_MASK                   (0xFFFFU)                                           /**< FLEXIO_TIMCMP.CMP Mask                  */
#define FLEXIO_TIMCMP_CMP_SHIFT                  (0U)                                                /**< FLEXIO_TIMCMP.CMP Position              */
#define FLEXIO_TIMCMP_CMP(x)                     (((uint32_t)(((uint32_t)(x))<<FLEXIO_TIMCMP_CMP_SHIFT))&FLEXIO_TIMCMP_CMP_MASK) /**< FLEXIO_TIMCMP.CMP Field                 */
/** @} */

/** @} */ /* End group FLEXIO_Register_Masks_GROUP */


/* FLEXIO - Peripheral instance base addresses */
#define FLEXIO_BasePtr                 0x4005A000UL //!< Peripheral base address
#define FLEXIO                         ((FLEXIO_Type *) FLEXIO_BasePtr) //!< Freescale base pointer
#define FLEXIO_BASE_PTR                (FLEXIO) //!< Freescale style base pointer
#define FLEXIO_IRQS { FLEXIO_IRQn,  }


/** @} */ /* End group FLEXIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for FTFC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FTFC_Peripheral_access_layer_GROUP FTFC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FTFC (file:FTFC_S32K14x)             ================ */
/* ================================================================================ */

/**
 * @brief Flash Memory Interface
 */
/**
 * @struct FTFC_Type
 * @brief  C Struct allowing access to FTFC registers
 */
typedef struct FTFC_Type {
   __IO uint8_t   FSTAT;                        /**< 0000: Flash Status Register                                        */
   __IO uint8_t   FCNFG;                        /**< 0001: Flash Configuration Register                                 */
   __I  uint8_t   FSEC;                         /**< 0002: Flash Security Register                                      */
   __I  uint8_t   FOPT;                         /**< 0003: Flash Option Register                                        */
   __IO uint8_t   FCCOB3;                       /**< 0004: FCCOB 3 - Usually Flash address [7..0]                       */
   __IO uint8_t   FCCOB2;                       /**< 0005: FCCOB 2 - Usually Flash address [15..8]                      */
   __IO uint8_t   FCCOB1;                       /**< 0006: FCCOB 1 - Usually Flash address [23..16]                     */
   __IO uint8_t   FCCOB0;                       /**< 0007: FCCOB 0 - Usually FCMD (Flash command)                       */
   __IO uint8_t   FCCOB7;                       /**< 0008: FCCOB 7 - Usually Data Byte 3                                */
   __IO uint8_t   FCCOB6;                       /**< 0009: FCCOB 6 - Usually Data Byte 2                                */
   __IO uint8_t   FCCOB5;                       /**< 000A: FCCOB 5 - Usually Data Byte 1                                */
   __IO uint8_t   FCCOB4;                       /**< 000B: FCCOB 4 - Usually Data Byte 0                                */
   __IO uint8_t   FCCOBB;                       /**< 000C: FCCOB B - Usually Data Byte 7                                */
   __IO uint8_t   FCCOBA;                       /**< 000D: FCCOB A - Usually Data Byte 6                                */
   __IO uint8_t   FCCOB9;                       /**< 000E: FCCOB 9 - Usually Data Byte 5                                */
   __IO uint8_t   FCCOB8;                       /**< 000F: FCCOB 8 - Usually Data Byte 4                                */
   __IO uint8_t   FPROT3;                       /**< 0010: Program Flash Protection                                     */
   __IO uint8_t   FPROT2;                       /**< 0011: Program Flash Protection                                     */
   __IO uint8_t   FPROT1;                       /**< 0012: Program Flash Protection                                     */
   __IO uint8_t   FPROT0;                       /**< 0013: Program Flash Protection                                     */
        uint8_t   RESERVED_0[2];                /**< 0014: 0x2 bytes                                                    */
   __IO uint8_t   FEPROT;                       /**< 0016: EEPROM Protection Register                                   */
   __IO uint8_t   FDPROT;                       /**< 0017: Data Flash Protection Register                               */
        uint8_t   RESERVED_1[20];               /**< 0018: 0x14 bytes                                                   */
   __I  uint8_t   FCSESTAT;                     /**< 002C: Flash CSEc Status Register                                   */
        uint8_t   RESERVED_2;                   /**< 002D: 0x1 bytes                                                    */
   __IO uint8_t   FERSTAT;                      /**< 002E: Flash Error Status Register                                  */
   __IO uint8_t   FERCNFG;                      /**< 002F: Flash Error Configuration Register                           */
} FTFC_Type;


/** @brief Register Masks for FTFC */

/* -------------------------------------------------------------------------------- */
/* -----------     'FTFC' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup FTFC_Register_Masks_GROUP FTFC Register Masks */
/** @{ */

/** @name FSTAT - Flash Status Register */ /** @{ */
#define FTFC_FSTAT_MGSTAT0_MASK                  (0x1U)                                              /**< FTFC_FSTAT.MGSTAT0 Mask                 */
#define FTFC_FSTAT_MGSTAT0_SHIFT                 (0U)                                                /**< FTFC_FSTAT.MGSTAT0 Position             */
#define FTFC_FSTAT_MGSTAT0(x)                    (((uint8_t)(((uint8_t)(x))<<FTFC_FSTAT_MGSTAT0_SHIFT))&FTFC_FSTAT_MGSTAT0_MASK) /**< FTFC_FSTAT.MGSTAT0 Field                */
#define FTFC_FSTAT_FPVIOL_MASK                   (0x10U)                                             /**< FTFC_FSTAT.FPVIOL Mask                  */
#define FTFC_FSTAT_FPVIOL_SHIFT                  (4U)                                                /**< FTFC_FSTAT.FPVIOL Position              */
#define FTFC_FSTAT_FPVIOL(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FSTAT_FPVIOL_SHIFT))&FTFC_FSTAT_FPVIOL_MASK) /**< FTFC_FSTAT.FPVIOL Field                 */
#define FTFC_FSTAT_ACCERR_MASK                   (0x20U)                                             /**< FTFC_FSTAT.ACCERR Mask                  */
#define FTFC_FSTAT_ACCERR_SHIFT                  (5U)                                                /**< FTFC_FSTAT.ACCERR Position              */
#define FTFC_FSTAT_ACCERR(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FSTAT_ACCERR_SHIFT))&FTFC_FSTAT_ACCERR_MASK) /**< FTFC_FSTAT.ACCERR Field                 */
#define FTFC_FSTAT_RDCOLERR_MASK                 (0x40U)                                             /**< FTFC_FSTAT.RDCOLERR Mask                */
#define FTFC_FSTAT_RDCOLERR_SHIFT                (6U)                                                /**< FTFC_FSTAT.RDCOLERR Position            */
#define FTFC_FSTAT_RDCOLERR(x)                   (((uint8_t)(((uint8_t)(x))<<FTFC_FSTAT_RDCOLERR_SHIFT))&FTFC_FSTAT_RDCOLERR_MASK) /**< FTFC_FSTAT.RDCOLERR Field               */
#define FTFC_FSTAT_CCIF_MASK                     (0x80U)                                             /**< FTFC_FSTAT.CCIF Mask                    */
#define FTFC_FSTAT_CCIF_SHIFT                    (7U)                                                /**< FTFC_FSTAT.CCIF Position                */
#define FTFC_FSTAT_CCIF(x)                       (((uint8_t)(((uint8_t)(x))<<FTFC_FSTAT_CCIF_SHIFT))&FTFC_FSTAT_CCIF_MASK) /**< FTFC_FSTAT.CCIF Field                   */
/** @} */

/** @name FCNFG - Flash Configuration Register */ /** @{ */
#define FTFC_FCNFG_EEERDY_MASK                   (0x1U)                                              /**< FTFC_FCNFG.EEERDY Mask                  */
#define FTFC_FCNFG_EEERDY_SHIFT                  (0U)                                                /**< FTFC_FCNFG.EEERDY Position              */
#define FTFC_FCNFG_EEERDY(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FCNFG_EEERDY_SHIFT))&FTFC_FCNFG_EEERDY_MASK) /**< FTFC_FCNFG.EEERDY Field                 */
#define FTFC_FCNFG_RAMRDY_MASK                   (0x2U)                                              /**< FTFC_FCNFG.RAMRDY Mask                  */
#define FTFC_FCNFG_RAMRDY_SHIFT                  (1U)                                                /**< FTFC_FCNFG.RAMRDY Position              */
#define FTFC_FCNFG_RAMRDY(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FCNFG_RAMRDY_SHIFT))&FTFC_FCNFG_RAMRDY_MASK) /**< FTFC_FCNFG.RAMRDY Field                 */
#define FTFC_FCNFG_ERSSUSP_MASK                  (0x10U)                                             /**< FTFC_FCNFG.ERSSUSP Mask                 */
#define FTFC_FCNFG_ERSSUSP_SHIFT                 (4U)                                                /**< FTFC_FCNFG.ERSSUSP Position             */
#define FTFC_FCNFG_ERSSUSP(x)                    (((uint8_t)(((uint8_t)(x))<<FTFC_FCNFG_ERSSUSP_SHIFT))&FTFC_FCNFG_ERSSUSP_MASK) /**< FTFC_FCNFG.ERSSUSP Field                */
#define FTFC_FCNFG_ERSAREQ_MASK                  (0x20U)                                             /**< FTFC_FCNFG.ERSAREQ Mask                 */
#define FTFC_FCNFG_ERSAREQ_SHIFT                 (5U)                                                /**< FTFC_FCNFG.ERSAREQ Position             */
#define FTFC_FCNFG_ERSAREQ(x)                    (((uint8_t)(((uint8_t)(x))<<FTFC_FCNFG_ERSAREQ_SHIFT))&FTFC_FCNFG_ERSAREQ_MASK) /**< FTFC_FCNFG.ERSAREQ Field                */
#define FTFC_FCNFG_RDCOLLIE_MASK                 (0x40U)                                             /**< FTFC_FCNFG.RDCOLLIE Mask                */
#define FTFC_FCNFG_RDCOLLIE_SHIFT                (6U)                                                /**< FTFC_FCNFG.RDCOLLIE Position            */
#define FTFC_FCNFG_RDCOLLIE(x)                   (((uint8_t)(((uint8_t)(x))<<FTFC_FCNFG_RDCOLLIE_SHIFT))&FTFC_FCNFG_RDCOLLIE_MASK) /**< FTFC_FCNFG.RDCOLLIE Field               */
#define FTFC_FCNFG_CCIE_MASK                     (0x80U)                                             /**< FTFC_FCNFG.CCIE Mask                    */
#define FTFC_FCNFG_CCIE_SHIFT                    (7U)                                                /**< FTFC_FCNFG.CCIE Position                */
#define FTFC_FCNFG_CCIE(x)                       (((uint8_t)(((uint8_t)(x))<<FTFC_FCNFG_CCIE_SHIFT))&FTFC_FCNFG_CCIE_MASK) /**< FTFC_FCNFG.CCIE Field                   */
/** @} */

/** @name FSEC - Flash Security Register */ /** @{ */
#define FTFC_FSEC_SEC_MASK                       (0x3U)                                              /**< FTFC_FSEC.SEC Mask                      */
#define FTFC_FSEC_SEC_SHIFT                      (0U)                                                /**< FTFC_FSEC.SEC Position                  */
#define FTFC_FSEC_SEC(x)                         (((uint8_t)(((uint8_t)(x))<<FTFC_FSEC_SEC_SHIFT))&FTFC_FSEC_SEC_MASK) /**< FTFC_FSEC.SEC Field                     */
#define FTFC_FSEC_FSLACC_MASK                    (0xCU)                                              /**< FTFC_FSEC.FSLACC Mask                   */
#define FTFC_FSEC_FSLACC_SHIFT                   (2U)                                                /**< FTFC_FSEC.FSLACC Position               */
#define FTFC_FSEC_FSLACC(x)                      (((uint8_t)(((uint8_t)(x))<<FTFC_FSEC_FSLACC_SHIFT))&FTFC_FSEC_FSLACC_MASK) /**< FTFC_FSEC.FSLACC Field                  */
#define FTFC_FSEC_MEEN_MASK                      (0x30U)                                             /**< FTFC_FSEC.MEEN Mask                     */
#define FTFC_FSEC_MEEN_SHIFT                     (4U)                                                /**< FTFC_FSEC.MEEN Position                 */
#define FTFC_FSEC_MEEN(x)                        (((uint8_t)(((uint8_t)(x))<<FTFC_FSEC_MEEN_SHIFT))&FTFC_FSEC_MEEN_MASK) /**< FTFC_FSEC.MEEN Field                    */
#define FTFC_FSEC_KEYEN_MASK                     (0xC0U)                                             /**< FTFC_FSEC.KEYEN Mask                    */
#define FTFC_FSEC_KEYEN_SHIFT                    (6U)                                                /**< FTFC_FSEC.KEYEN Position                */
#define FTFC_FSEC_KEYEN(x)                       (((uint8_t)(((uint8_t)(x))<<FTFC_FSEC_KEYEN_SHIFT))&FTFC_FSEC_KEYEN_MASK) /**< FTFC_FSEC.KEYEN Field                   */
/** @} */

/** @name FOPT - Flash Option Register  */ /** @{ */
#define FTFC_FOPT_OPT_MASK                       (0xFFU)                                             /**< FTFC_FOPT.OPT Mask                      */
#define FTFC_FOPT_OPT_SHIFT                      (0U)                                                /**< FTFC_FOPT.OPT Position                  */
#define FTFC_FOPT_OPT(x)                         (((uint8_t)(((uint8_t)(x))<<FTFC_FOPT_OPT_SHIFT))&FTFC_FOPT_OPT_MASK) /**< FTFC_FOPT.OPT Field                     */
/** @} */

/** @name FCCOB - FCCOB %s - Usually %m  */ /** @{ */
#define FTFC_FCCOB_CCOBn_MASK                    (0xFFU)                                             /**< FTFC_FCCOB.CCOBn Mask                   */
#define FTFC_FCCOB_CCOBn_SHIFT                   (0U)                                                /**< FTFC_FCCOB.CCOBn Position               */
#define FTFC_FCCOB_CCOBn(x)                      (((uint8_t)(((uint8_t)(x))<<FTFC_FCCOB_CCOBn_SHIFT))&FTFC_FCCOB_CCOBn_MASK) /**< FTFC_FCCOB.CCOBn Field                  */
/** @} */

/** @name FPROT - Program Flash Protection  */ /** @{ */
#define FTFC_FPROT_PROT_MASK                     (0xFFU)                                             /**< FTFC_FPROT.PROT Mask                    */
#define FTFC_FPROT_PROT_SHIFT                    (0U)                                                /**< FTFC_FPROT.PROT Position                */
#define FTFC_FPROT_PROT(x)                       (((uint8_t)(((uint8_t)(x))<<FTFC_FPROT_PROT_SHIFT))&FTFC_FPROT_PROT_MASK) /**< FTFC_FPROT.PROT Field                   */
/** @} */

/** @name FEPROT - EEPROM Protection Register */ /** @{ */
#define FTFC_FEPROT_EPROT_MASK                   (0xFFU)                                             /**< FTFC_FEPROT.EPROT Mask                  */
#define FTFC_FEPROT_EPROT_SHIFT                  (0U)                                                /**< FTFC_FEPROT.EPROT Position              */
#define FTFC_FEPROT_EPROT(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FEPROT_EPROT_SHIFT))&FTFC_FEPROT_EPROT_MASK) /**< FTFC_FEPROT.EPROT Field                 */
/** @} */

/** @name FDPROT - Data Flash Protection Register */ /** @{ */
#define FTFC_FDPROT_DPROT_MASK                   (0xFFU)                                             /**< FTFC_FDPROT.DPROT Mask                  */
#define FTFC_FDPROT_DPROT_SHIFT                  (0U)                                                /**< FTFC_FDPROT.DPROT Position              */
#define FTFC_FDPROT_DPROT(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FDPROT_DPROT_SHIFT))&FTFC_FDPROT_DPROT_MASK) /**< FTFC_FDPROT.DPROT Field                 */
/** @} */

/** @name FCSESTAT - Flash CSEc Status Register */ /** @{ */
#define FTFC_FCSESTAT_BSY_MASK                   (0x1U)                                              /**< FTFC_FCSESTAT.BSY Mask                  */
#define FTFC_FCSESTAT_BSY_SHIFT                  (0U)                                                /**< FTFC_FCSESTAT.BSY Position              */
#define FTFC_FCSESTAT_BSY(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FCSESTAT_BSY_SHIFT))&FTFC_FCSESTAT_BSY_MASK) /**< FTFC_FCSESTAT.BSY Field                 */
#define FTFC_FCSESTAT_SB_MASK                    (0x2U)                                              /**< FTFC_FCSESTAT.SB Mask                   */
#define FTFC_FCSESTAT_SB_SHIFT                   (1U)                                                /**< FTFC_FCSESTAT.SB Position               */
#define FTFC_FCSESTAT_SB(x)                      (((uint8_t)(((uint8_t)(x))<<FTFC_FCSESTAT_SB_SHIFT))&FTFC_FCSESTAT_SB_MASK) /**< FTFC_FCSESTAT.SB Field                  */
#define FTFC_FCSESTAT_BIN_MASK                   (0x4U)                                              /**< FTFC_FCSESTAT.BIN Mask                  */
#define FTFC_FCSESTAT_BIN_SHIFT                  (2U)                                                /**< FTFC_FCSESTAT.BIN Position              */
#define FTFC_FCSESTAT_BIN(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FCSESTAT_BIN_SHIFT))&FTFC_FCSESTAT_BIN_MASK) /**< FTFC_FCSESTAT.BIN Field                 */
#define FTFC_FCSESTAT_BFN_MASK                   (0x8U)                                              /**< FTFC_FCSESTAT.BFN Mask                  */
#define FTFC_FCSESTAT_BFN_SHIFT                  (3U)                                                /**< FTFC_FCSESTAT.BFN Position              */
#define FTFC_FCSESTAT_BFN(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FCSESTAT_BFN_SHIFT))&FTFC_FCSESTAT_BFN_MASK) /**< FTFC_FCSESTAT.BFN Field                 */
#define FTFC_FCSESTAT_BOK_MASK                   (0x10U)                                             /**< FTFC_FCSESTAT.BOK Mask                  */
#define FTFC_FCSESTAT_BOK_SHIFT                  (4U)                                                /**< FTFC_FCSESTAT.BOK Position              */
#define FTFC_FCSESTAT_BOK(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FCSESTAT_BOK_SHIFT))&FTFC_FCSESTAT_BOK_MASK) /**< FTFC_FCSESTAT.BOK Field                 */
#define FTFC_FCSESTAT_RIN_MASK                   (0x20U)                                             /**< FTFC_FCSESTAT.RIN Mask                  */
#define FTFC_FCSESTAT_RIN_SHIFT                  (5U)                                                /**< FTFC_FCSESTAT.RIN Position              */
#define FTFC_FCSESTAT_RIN(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FCSESTAT_RIN_SHIFT))&FTFC_FCSESTAT_RIN_MASK) /**< FTFC_FCSESTAT.RIN Field                 */
#define FTFC_FCSESTAT_EDB_MASK                   (0x40U)                                             /**< FTFC_FCSESTAT.EDB Mask                  */
#define FTFC_FCSESTAT_EDB_SHIFT                  (6U)                                                /**< FTFC_FCSESTAT.EDB Position              */
#define FTFC_FCSESTAT_EDB(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FCSESTAT_EDB_SHIFT))&FTFC_FCSESTAT_EDB_MASK) /**< FTFC_FCSESTAT.EDB Field                 */
#define FTFC_FCSESTAT_IDB_MASK                   (0x80U)                                             /**< FTFC_FCSESTAT.IDB Mask                  */
#define FTFC_FCSESTAT_IDB_SHIFT                  (7U)                                                /**< FTFC_FCSESTAT.IDB Position              */
#define FTFC_FCSESTAT_IDB(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FCSESTAT_IDB_SHIFT))&FTFC_FCSESTAT_IDB_MASK) /**< FTFC_FCSESTAT.IDB Field                 */
/** @} */

/** @name FERSTAT - Flash Error Status Register */ /** @{ */
#define FTFC_FERSTAT_DFDIF_MASK                  (0x2U)                                              /**< FTFC_FERSTAT.DFDIF Mask                 */
#define FTFC_FERSTAT_DFDIF_SHIFT                 (1U)                                                /**< FTFC_FERSTAT.DFDIF Position             */
#define FTFC_FERSTAT_DFDIF(x)                    (((uint8_t)(((uint8_t)(x))<<FTFC_FERSTAT_DFDIF_SHIFT))&FTFC_FERSTAT_DFDIF_MASK) /**< FTFC_FERSTAT.DFDIF Field                */
/** @} */

/** @name FERCNFG - Flash Error Configuration Register */ /** @{ */
#define FTFC_FERCNFG_DFDIE_MASK                  (0x2U)                                              /**< FTFC_FERCNFG.DFDIE Mask                 */
#define FTFC_FERCNFG_DFDIE_SHIFT                 (1U)                                                /**< FTFC_FERCNFG.DFDIE Position             */
#define FTFC_FERCNFG_DFDIE(x)                    (((uint8_t)(((uint8_t)(x))<<FTFC_FERCNFG_DFDIE_SHIFT))&FTFC_FERCNFG_DFDIE_MASK) /**< FTFC_FERCNFG.DFDIE Field                */
#define FTFC_FERCNFG_FDFD_MASK                   (0x20U)                                             /**< FTFC_FERCNFG.FDFD Mask                  */
#define FTFC_FERCNFG_FDFD_SHIFT                  (5U)                                                /**< FTFC_FERCNFG.FDFD Position              */
#define FTFC_FERCNFG_FDFD(x)                     (((uint8_t)(((uint8_t)(x))<<FTFC_FERCNFG_FDFD_SHIFT))&FTFC_FERCNFG_FDFD_MASK) /**< FTFC_FERCNFG.FDFD Field                 */
/** @} */

/** @} */ /* End group FTFC_Register_Masks_GROUP */


/* FTFC - Peripheral instance base addresses */
#define FTFC_BasePtr                   0x40020000UL //!< Peripheral base address
#define FTFC                           ((FTFC_Type *) FTFC_BasePtr) //!< Freescale base pointer
#define FTFC_BASE_PTR                  (FTFC) //!< Freescale style base pointer
#define FTFC_IRQS { FTFC_IRQn, FTFC_Read_Collision_IRQn, FTFC_Fault_IRQn,  }


/** @} */ /* End group FTFC_Peripheral_access_layer_GROUP */


/** @brief C Struct for FTM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FTM_Peripheral_access_layer_GROUP FTM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FTM0 (file:FTM0_8CH_S32K144)         ================ */
/* ================================================================================ */

/**
 * @brief FlexTimer Module (8 channels)
 */
#define FTM_CONTROLS_COUNT   8          /**< Number of FTM channels                             */
/**
 * @struct FTM_Type
 * @brief  C Struct allowing access to FTM registers
 */
typedef struct FTM_Type {
   __IO uint32_t  SC;                           /**< 0000: Status and Control                                           */
   __IO uint32_t  CNT;                          /**< 0004: Counter                                                      */
   __IO uint32_t  MOD;                          /**< 0008: Modulo                                                       */
   struct {
      __IO uint32_t  CnSC;                      /**< 000C: Channel  Status and Control                                  */
      __IO uint32_t  CnV;                       /**< 0010: Channel  Value                                               */
   } CONTROLS[FTM_CONTROLS_COUNT];              /**< 000C: (cluster: size=0x0040, 64)                                   */
   __IO uint32_t  CNTIN;                        /**< 004C: Counter Initial Value                                        */
   __IO uint32_t  STATUS;                       /**< 0050: Capture and Compare Status                                   */
   __IO uint32_t  MODE;                         /**< 0054: Features Mode Selection                                      */
   __IO uint32_t  SYNC;                         /**< 0058: Synchronization                                              */
   __IO uint32_t  OUTINIT;                      /**< 005C: Initial State for Channels Output                            */
   __IO uint32_t  OUTMASK;                      /**< 0060: Output Mask                                                  */
   __IO uint32_t  COMBINE;                      /**< 0064: Function for Linked Channels                                 */
   __IO uint32_t  DEADTIME;                     /**< 0068: Deadtime Insertion Control                                   */
   __IO uint32_t  EXTTRIG;                      /**< 006C: FTM External Trigger                                         */
   __IO uint32_t  POL;                          /**< 0070: Channels Polarity                                            */
   __IO uint32_t  FMS;                          /**< 0074: Fault Mode Status                                            */
   __IO uint32_t  FILTER;                       /**< 0078: Input Capture Filter Control                                 */
   __IO uint32_t  FLTCTRL;                      /**< 007C: Fault Control                                                */
   __IO uint32_t  QDCTRL;                       /**< 0080: Quadrature Decoder Control and Status                        */
   __IO uint32_t  CONF;                         /**< 0084: Configuration                                                */
   __IO uint32_t  FLTPOL;                       /**< 0088: FTM Fault Input Polarity                                     */
   __IO uint32_t  SYNCONF;                      /**< 008C: Synchronization Configuration                                */
   __IO uint32_t  INVCTRL;                      /**< 0090: FTM Inverting Control                                        */
   __IO uint32_t  SWOCTRL;                      /**< 0094: FTM Software Output Control                                  */
   __IO uint32_t  PWMLOAD;                      /**< 0098: FTM PWM Load                                                 */
   __IO uint32_t  HCR;                          /**< 009C: Half Cycle Register                                          */
   __IO uint32_t  PAIR0DEADTIME;                /**< 00A0: Pair 0 Deadtime Configuration                                */
        uint8_t   RESERVED_1[4];                /**< 00A4: 0x4 bytes                                                    */
   __IO uint32_t  PAIR1DEADTIME;                /**< 00A8: Pair 1 Deadtime Configuration                                */
        uint8_t   RESERVED_2[4];                /**< 00AC: 0x4 bytes                                                    */
   __IO uint32_t  PAIR2DEADTIME;                /**< 00B0: Pair 2 Deadtime Configuration                                */
        uint8_t   RESERVED_3[4];                /**< 00B4: 0x4 bytes                                                    */
   __IO uint32_t  PAIR3DEADTIME;                /**< 00B8: Pair 3 Deadtime Configuration                                */
} FTM_Type;


/** @brief Register Masks for FTM */

/* -------------------------------------------------------------------------------- */
/* -----------     'FTM0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup FTM_Register_Masks_GROUP FTM Register Masks */
/** @{ */

/** @name SC - Status and Control */ /** @{ */
#define FTM_SC_PS_MASK                           (0x7U)                                              /**< FTM0_SC.PS Mask                         */
#define FTM_SC_PS_SHIFT                          (0U)                                                /**< FTM0_SC.PS Position                     */
#define FTM_SC_PS(x)                             (((uint32_t)(((uint32_t)(x))<<FTM_SC_PS_SHIFT))&FTM_SC_PS_MASK) /**< FTM0_SC.PS Field                        */
#define FTM_SC_CLKS_MASK                         (0x18U)                                             /**< FTM0_SC.CLKS Mask                       */
#define FTM_SC_CLKS_SHIFT                        (3U)                                                /**< FTM0_SC.CLKS Position                   */
#define FTM_SC_CLKS(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_SC_CLKS_SHIFT))&FTM_SC_CLKS_MASK) /**< FTM0_SC.CLKS Field                      */
#define FTM_SC_CPWMS_MASK                        (0x20U)                                             /**< FTM0_SC.CPWMS Mask                      */
#define FTM_SC_CPWMS_SHIFT                       (5U)                                                /**< FTM0_SC.CPWMS Position                  */
#define FTM_SC_CPWMS(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_SC_CPWMS_SHIFT))&FTM_SC_CPWMS_MASK) /**< FTM0_SC.CPWMS Field                     */
#define FTM_SC_RIE_MASK                          (0x40U)                                             /**< FTM0_SC.RIE Mask                        */
#define FTM_SC_RIE_SHIFT                         (6U)                                                /**< FTM0_SC.RIE Position                    */
#define FTM_SC_RIE(x)                            (((uint32_t)(((uint32_t)(x))<<FTM_SC_RIE_SHIFT))&FTM_SC_RIE_MASK) /**< FTM0_SC.RIE Field                       */
#define FTM_SC_RF_MASK                           (0x80U)                                             /**< FTM0_SC.RF Mask                         */
#define FTM_SC_RF_SHIFT                          (7U)                                                /**< FTM0_SC.RF Position                     */
#define FTM_SC_RF(x)                             (((uint32_t)(((uint32_t)(x))<<FTM_SC_RF_SHIFT))&FTM_SC_RF_MASK) /**< FTM0_SC.RF Field                        */
#define FTM_SC_TOIE_MASK                         (0x100U)                                            /**< FTM0_SC.TOIE Mask                       */
#define FTM_SC_TOIE_SHIFT                        (8U)                                                /**< FTM0_SC.TOIE Position                   */
#define FTM_SC_TOIE(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_SC_TOIE_SHIFT))&FTM_SC_TOIE_MASK) /**< FTM0_SC.TOIE Field                      */
#define FTM_SC_TOF_MASK                          (0x200U)                                            /**< FTM0_SC.TOF Mask                        */
#define FTM_SC_TOF_SHIFT                         (9U)                                                /**< FTM0_SC.TOF Position                    */
#define FTM_SC_TOF(x)                            (((uint32_t)(((uint32_t)(x))<<FTM_SC_TOF_SHIFT))&FTM_SC_TOF_MASK) /**< FTM0_SC.TOF Field                       */
#define FTM_SC_PWMEN0_MASK                       (0x10000U)                                          /**< FTM0_SC.PWMEN0 Mask                     */
#define FTM_SC_PWMEN0_SHIFT                      (16U)                                               /**< FTM0_SC.PWMEN0 Position                 */
#define FTM_SC_PWMEN0(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_SC_PWMEN0_SHIFT))&FTM_SC_PWMEN0_MASK) /**< FTM0_SC.PWMEN0 Field                    */
#define FTM_SC_PWMEN1_MASK                       (0x20000U)                                          /**< FTM0_SC.PWMEN1 Mask                     */
#define FTM_SC_PWMEN1_SHIFT                      (17U)                                               /**< FTM0_SC.PWMEN1 Position                 */
#define FTM_SC_PWMEN1(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_SC_PWMEN1_SHIFT))&FTM_SC_PWMEN1_MASK) /**< FTM0_SC.PWMEN1 Field                    */
#define FTM_SC_PWMEN2_MASK                       (0x40000U)                                          /**< FTM0_SC.PWMEN2 Mask                     */
#define FTM_SC_PWMEN2_SHIFT                      (18U)                                               /**< FTM0_SC.PWMEN2 Position                 */
#define FTM_SC_PWMEN2(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_SC_PWMEN2_SHIFT))&FTM_SC_PWMEN2_MASK) /**< FTM0_SC.PWMEN2 Field                    */
#define FTM_SC_PWMEN3_MASK                       (0x80000U)                                          /**< FTM0_SC.PWMEN3 Mask                     */
#define FTM_SC_PWMEN3_SHIFT                      (19U)                                               /**< FTM0_SC.PWMEN3 Position                 */
#define FTM_SC_PWMEN3(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_SC_PWMEN3_SHIFT))&FTM_SC_PWMEN3_MASK) /**< FTM0_SC.PWMEN3 Field                    */
#define FTM_SC_PWMEN4_MASK                       (0x100000U)                                         /**< FTM0_SC.PWMEN4 Mask                     */
#define FTM_SC_PWMEN4_SHIFT                      (20U)                                               /**< FTM0_SC.PWMEN4 Position                 */
#define FTM_SC_PWMEN4(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_SC_PWMEN4_SHIFT))&FTM_SC_PWMEN4_MASK) /**< FTM0_SC.PWMEN4 Field                    */
#define FTM_SC_PWMEN5_MASK                       (0x200000U)                                         /**< FTM0_SC.PWMEN5 Mask                     */
#define FTM_SC_PWMEN5_SHIFT                      (21U)                                               /**< FTM0_SC.PWMEN5 Position                 */
#define FTM_SC_PWMEN5(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_SC_PWMEN5_SHIFT))&FTM_SC_PWMEN5_MASK) /**< FTM0_SC.PWMEN5 Field                    */
#define FTM_SC_PWMEN6_MASK                       (0x400000U)                                         /**< FTM0_SC.PWMEN6 Mask                     */
#define FTM_SC_PWMEN6_SHIFT                      (22U)                                               /**< FTM0_SC.PWMEN6 Position                 */
#define FTM_SC_PWMEN6(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_SC_PWMEN6_SHIFT))&FTM_SC_PWMEN6_MASK) /**< FTM0_SC.PWMEN6 Field                    */
#define FTM_SC_PWMEN7_MASK                       (0x800000U)                                         /**< FTM0_SC.PWMEN7 Mask                     */
#define FTM_SC_PWMEN7_SHIFT                      (23U)                                               /**< FTM0_SC.PWMEN7 Position                 */
#define FTM_SC_PWMEN7(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_SC_PWMEN7_SHIFT))&FTM_SC_PWMEN7_MASK) /**< FTM0_SC.PWMEN7 Field                    */
#define FTM_SC_FLTPS_MASK                        (0xF000000U)                                        /**< FTM0_SC.FLTPS Mask                      */
#define FTM_SC_FLTPS_SHIFT                       (24U)                                               /**< FTM0_SC.FLTPS Position                  */
#define FTM_SC_FLTPS(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_SC_FLTPS_SHIFT))&FTM_SC_FLTPS_MASK) /**< FTM0_SC.FLTPS Field                     */
/** @} */

/** @name CNT - Counter */ /** @{ */
#define FTM_CNT_COUNT_MASK                       (0xFFFFU)                                           /**< FTM0_CNT.COUNT Mask                     */
#define FTM_CNT_COUNT_SHIFT                      (0U)                                                /**< FTM0_CNT.COUNT Position                 */
#define FTM_CNT_COUNT(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CNT_COUNT_SHIFT))&FTM_CNT_COUNT_MASK) /**< FTM0_CNT.COUNT Field                    */
/** @} */

/** @name MOD - Modulo */ /** @{ */
#define FTM_MOD_MOD_MASK                         (0xFFFFU)                                           /**< FTM0_MOD.MOD Mask                       */
#define FTM_MOD_MOD_SHIFT                        (0U)                                                /**< FTM0_MOD.MOD Position                   */
#define FTM_MOD_MOD(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_MOD_MOD_SHIFT))&FTM_MOD_MOD_MASK) /**< FTM0_MOD.MOD Field                      */
/** @} */

/** @name CnSC - Channel %s Status and Control */ /** @{ */
#define FTM_CnSC_DMA_MASK                        (0x1U)                                              /**< FTM0_CnSC.DMA Mask                      */
#define FTM_CnSC_DMA_SHIFT                       (0U)                                                /**< FTM0_CnSC.DMA Position                  */
#define FTM_CnSC_DMA(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_DMA_SHIFT))&FTM_CnSC_DMA_MASK) /**< FTM0_CnSC.DMA Field                     */
#define FTM_CnSC_ICRST_MASK                      (0x2U)                                              /**< FTM0_CnSC.ICRST Mask                    */
#define FTM_CnSC_ICRST_SHIFT                     (1U)                                                /**< FTM0_CnSC.ICRST Position                */
#define FTM_CnSC_ICRST(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_ICRST_SHIFT))&FTM_CnSC_ICRST_MASK) /**< FTM0_CnSC.ICRST Field                   */
#define FTM_CnSC_ELS_MASK                        (0xCU)                                              /**< FTM0_CnSC.ELS Mask                      */
#define FTM_CnSC_ELS_SHIFT                       (2U)                                                /**< FTM0_CnSC.ELS Position                  */
#define FTM_CnSC_ELS(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_ELS_SHIFT))&FTM_CnSC_ELS_MASK) /**< FTM0_CnSC.ELS Field                     */
#define FTM_CnSC_ELSA_MASK                       (0x4U)                                              /**< FTM0_CnSC.ELSA Mask                     */
#define FTM_CnSC_ELSA_SHIFT                      (2U)                                                /**< FTM0_CnSC.ELSA Position                 */
#define FTM_CnSC_ELSA(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_ELSA_SHIFT))&FTM_CnSC_ELSA_MASK) /**< FTM0_CnSC.ELSA Field                    */
#define FTM_CnSC_ELSB_MASK                       (0x8U)                                              /**< FTM0_CnSC.ELSB Mask                     */
#define FTM_CnSC_ELSB_SHIFT                      (3U)                                                /**< FTM0_CnSC.ELSB Position                 */
#define FTM_CnSC_ELSB(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_ELSB_SHIFT))&FTM_CnSC_ELSB_MASK) /**< FTM0_CnSC.ELSB Field                    */
#define FTM_CnSC_MS_MASK                         (0x30U)                                             /**< FTM0_CnSC.MS Mask                       */
#define FTM_CnSC_MS_SHIFT                        (4U)                                                /**< FTM0_CnSC.MS Position                   */
#define FTM_CnSC_MS(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_MS_SHIFT))&FTM_CnSC_MS_MASK) /**< FTM0_CnSC.MS Field                      */
#define FTM_CnSC_MSA_MASK                        (0x10U)                                             /**< FTM0_CnSC.MSA Mask                      */
#define FTM_CnSC_MSA_SHIFT                       (4U)                                                /**< FTM0_CnSC.MSA Position                  */
#define FTM_CnSC_MSA(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_MSA_SHIFT))&FTM_CnSC_MSA_MASK) /**< FTM0_CnSC.MSA Field                     */
#define FTM_CnSC_MSB_MASK                        (0x20U)                                             /**< FTM0_CnSC.MSB Mask                      */
#define FTM_CnSC_MSB_SHIFT                       (5U)                                                /**< FTM0_CnSC.MSB Position                  */
#define FTM_CnSC_MSB(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_MSB_SHIFT))&FTM_CnSC_MSB_MASK) /**< FTM0_CnSC.MSB Field                     */
#define FTM_CnSC_CHIE_MASK                       (0x40U)                                             /**< FTM0_CnSC.CHIE Mask                     */
#define FTM_CnSC_CHIE_SHIFT                      (6U)                                                /**< FTM0_CnSC.CHIE Position                 */
#define FTM_CnSC_CHIE(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_CHIE_SHIFT))&FTM_CnSC_CHIE_MASK) /**< FTM0_CnSC.CHIE Field                    */
#define FTM_CnSC_CHF_MASK                        (0x80U)                                             /**< FTM0_CnSC.CHF Mask                      */
#define FTM_CnSC_CHF_SHIFT                       (7U)                                                /**< FTM0_CnSC.CHF Position                  */
#define FTM_CnSC_CHF(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_CHF_SHIFT))&FTM_CnSC_CHF_MASK) /**< FTM0_CnSC.CHF Field                     */
#define FTM_CnSC_TRIGMODE_MASK                   (0x100U)                                            /**< FTM0_CnSC.TRIGMODE Mask                 */
#define FTM_CnSC_TRIGMODE_SHIFT                  (8U)                                                /**< FTM0_CnSC.TRIGMODE Position             */
#define FTM_CnSC_TRIGMODE(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_TRIGMODE_SHIFT))&FTM_CnSC_TRIGMODE_MASK) /**< FTM0_CnSC.TRIGMODE Field                */
#define FTM_CnSC_CHIS_MASK                       (0x200U)                                            /**< FTM0_CnSC.CHIS Mask                     */
#define FTM_CnSC_CHIS_SHIFT                      (9U)                                                /**< FTM0_CnSC.CHIS Position                 */
#define FTM_CnSC_CHIS(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_CHIS_SHIFT))&FTM_CnSC_CHIS_MASK) /**< FTM0_CnSC.CHIS Field                    */
#define FTM_CnSC_CHOV_MASK                       (0x400U)                                            /**< FTM0_CnSC.CHOV Mask                     */
#define FTM_CnSC_CHOV_SHIFT                      (10U)                                               /**< FTM0_CnSC.CHOV Position                 */
#define FTM_CnSC_CHOV(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_CHOV_SHIFT))&FTM_CnSC_CHOV_MASK) /**< FTM0_CnSC.CHOV Field                    */
/** @} */

/** @name CnV - Channel %s Value */ /** @{ */
#define FTM_CnV_VAL_MASK                         (0xFFFFU)                                           /**< FTM0_CnV.VAL Mask                       */
#define FTM_CnV_VAL_SHIFT                        (0U)                                                /**< FTM0_CnV.VAL Position                   */
#define FTM_CnV_VAL(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_CnV_VAL_SHIFT))&FTM_CnV_VAL_MASK) /**< FTM0_CnV.VAL Field                      */
/** @} */

/** @name CNTIN - Counter Initial Value */ /** @{ */
#define FTM_CNTIN_INIT_MASK                      (0xFFFFU)                                           /**< FTM0_CNTIN.INIT Mask                    */
#define FTM_CNTIN_INIT_SHIFT                     (0U)                                                /**< FTM0_CNTIN.INIT Position                */
#define FTM_CNTIN_INIT(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_CNTIN_INIT_SHIFT))&FTM_CNTIN_INIT_MASK) /**< FTM0_CNTIN.INIT Field                   */
/** @} */

/** @name STATUS - Capture and Compare Status */ /** @{ */
#define FTM_STATUS_CH0F_MASK                     (0x1U)                                              /**< FTM0_STATUS.CH0F Mask                   */
#define FTM_STATUS_CH0F_SHIFT                    (0U)                                                /**< FTM0_STATUS.CH0F Position               */
#define FTM_STATUS_CH0F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH0F_SHIFT))&FTM_STATUS_CH0F_MASK) /**< FTM0_STATUS.CH0F Field                  */
#define FTM_STATUS_CH1F_MASK                     (0x2U)                                              /**< FTM0_STATUS.CH1F Mask                   */
#define FTM_STATUS_CH1F_SHIFT                    (1U)                                                /**< FTM0_STATUS.CH1F Position               */
#define FTM_STATUS_CH1F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH1F_SHIFT))&FTM_STATUS_CH1F_MASK) /**< FTM0_STATUS.CH1F Field                  */
#define FTM_STATUS_CH2F_MASK                     (0x4U)                                              /**< FTM0_STATUS.CH2F Mask                   */
#define FTM_STATUS_CH2F_SHIFT                    (2U)                                                /**< FTM0_STATUS.CH2F Position               */
#define FTM_STATUS_CH2F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH2F_SHIFT))&FTM_STATUS_CH2F_MASK) /**< FTM0_STATUS.CH2F Field                  */
#define FTM_STATUS_CH3F_MASK                     (0x8U)                                              /**< FTM0_STATUS.CH3F Mask                   */
#define FTM_STATUS_CH3F_SHIFT                    (3U)                                                /**< FTM0_STATUS.CH3F Position               */
#define FTM_STATUS_CH3F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH3F_SHIFT))&FTM_STATUS_CH3F_MASK) /**< FTM0_STATUS.CH3F Field                  */
#define FTM_STATUS_CH4F_MASK                     (0x10U)                                             /**< FTM0_STATUS.CH4F Mask                   */
#define FTM_STATUS_CH4F_SHIFT                    (4U)                                                /**< FTM0_STATUS.CH4F Position               */
#define FTM_STATUS_CH4F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH4F_SHIFT))&FTM_STATUS_CH4F_MASK) /**< FTM0_STATUS.CH4F Field                  */
#define FTM_STATUS_CH5F_MASK                     (0x20U)                                             /**< FTM0_STATUS.CH5F Mask                   */
#define FTM_STATUS_CH5F_SHIFT                    (5U)                                                /**< FTM0_STATUS.CH5F Position               */
#define FTM_STATUS_CH5F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH5F_SHIFT))&FTM_STATUS_CH5F_MASK) /**< FTM0_STATUS.CH5F Field                  */
#define FTM_STATUS_CH6F_MASK                     (0x40U)                                             /**< FTM0_STATUS.CH6F Mask                   */
#define FTM_STATUS_CH6F_SHIFT                    (6U)                                                /**< FTM0_STATUS.CH6F Position               */
#define FTM_STATUS_CH6F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH6F_SHIFT))&FTM_STATUS_CH6F_MASK) /**< FTM0_STATUS.CH6F Field                  */
#define FTM_STATUS_CH7F_MASK                     (0x80U)                                             /**< FTM0_STATUS.CH7F Mask                   */
#define FTM_STATUS_CH7F_SHIFT                    (7U)                                                /**< FTM0_STATUS.CH7F Position               */
#define FTM_STATUS_CH7F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH7F_SHIFT))&FTM_STATUS_CH7F_MASK) /**< FTM0_STATUS.CH7F Field                  */
/** @} */

/** @name MODE - Features Mode Selection */ /** @{ */
#define FTM_MODE_FTMEN_MASK                      (0x1U)                                              /**< FTM0_MODE.FTMEN Mask                    */
#define FTM_MODE_FTMEN_SHIFT                     (0U)                                                /**< FTM0_MODE.FTMEN Position                */
#define FTM_MODE_FTMEN(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_MODE_FTMEN_SHIFT))&FTM_MODE_FTMEN_MASK) /**< FTM0_MODE.FTMEN Field                   */
#define FTM_MODE_INIT_MASK                       (0x2U)                                              /**< FTM0_MODE.INIT Mask                     */
#define FTM_MODE_INIT_SHIFT                      (1U)                                                /**< FTM0_MODE.INIT Position                 */
#define FTM_MODE_INIT(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_MODE_INIT_SHIFT))&FTM_MODE_INIT_MASK) /**< FTM0_MODE.INIT Field                    */
#define FTM_MODE_WPDIS_MASK                      (0x4U)                                              /**< FTM0_MODE.WPDIS Mask                    */
#define FTM_MODE_WPDIS_SHIFT                     (2U)                                                /**< FTM0_MODE.WPDIS Position                */
#define FTM_MODE_WPDIS(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_MODE_WPDIS_SHIFT))&FTM_MODE_WPDIS_MASK) /**< FTM0_MODE.WPDIS Field                   */
#define FTM_MODE_PWMSYNC_MASK                    (0x8U)                                              /**< FTM0_MODE.PWMSYNC Mask                  */
#define FTM_MODE_PWMSYNC_SHIFT                   (3U)                                                /**< FTM0_MODE.PWMSYNC Position              */
#define FTM_MODE_PWMSYNC(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_MODE_PWMSYNC_SHIFT))&FTM_MODE_PWMSYNC_MASK) /**< FTM0_MODE.PWMSYNC Field                 */
#define FTM_MODE_CAPTEST_MASK                    (0x10U)                                             /**< FTM0_MODE.CAPTEST Mask                  */
#define FTM_MODE_CAPTEST_SHIFT                   (4U)                                                /**< FTM0_MODE.CAPTEST Position              */
#define FTM_MODE_CAPTEST(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_MODE_CAPTEST_SHIFT))&FTM_MODE_CAPTEST_MASK) /**< FTM0_MODE.CAPTEST Field                 */
#define FTM_MODE_FAULTM_MASK                     (0x60U)                                             /**< FTM0_MODE.FAULTM Mask                   */
#define FTM_MODE_FAULTM_SHIFT                    (5U)                                                /**< FTM0_MODE.FAULTM Position               */
#define FTM_MODE_FAULTM(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_MODE_FAULTM_SHIFT))&FTM_MODE_FAULTM_MASK) /**< FTM0_MODE.FAULTM Field                  */
#define FTM_MODE_FAULTIE_MASK                    (0x80U)                                             /**< FTM0_MODE.FAULTIE Mask                  */
#define FTM_MODE_FAULTIE_SHIFT                   (7U)                                                /**< FTM0_MODE.FAULTIE Position              */
#define FTM_MODE_FAULTIE(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_MODE_FAULTIE_SHIFT))&FTM_MODE_FAULTIE_MASK) /**< FTM0_MODE.FAULTIE Field                 */
/** @} */

/** @name SYNC - Synchronization */ /** @{ */
#define FTM_SYNC_CNTMIN_MASK                     (0x1U)                                              /**< FTM0_SYNC.CNTMIN Mask                   */
#define FTM_SYNC_CNTMIN_SHIFT                    (0U)                                                /**< FTM0_SYNC.CNTMIN Position               */
#define FTM_SYNC_CNTMIN(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_CNTMIN_SHIFT))&FTM_SYNC_CNTMIN_MASK) /**< FTM0_SYNC.CNTMIN Field                  */
#define FTM_SYNC_CNTMAX_MASK                     (0x2U)                                              /**< FTM0_SYNC.CNTMAX Mask                   */
#define FTM_SYNC_CNTMAX_SHIFT                    (1U)                                                /**< FTM0_SYNC.CNTMAX Position               */
#define FTM_SYNC_CNTMAX(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_CNTMAX_SHIFT))&FTM_SYNC_CNTMAX_MASK) /**< FTM0_SYNC.CNTMAX Field                  */
#define FTM_SYNC_REINIT_MASK                     (0x4U)                                              /**< FTM0_SYNC.REINIT Mask                   */
#define FTM_SYNC_REINIT_SHIFT                    (2U)                                                /**< FTM0_SYNC.REINIT Position               */
#define FTM_SYNC_REINIT(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_REINIT_SHIFT))&FTM_SYNC_REINIT_MASK) /**< FTM0_SYNC.REINIT Field                  */
#define FTM_SYNC_SYNCHOM_MASK                    (0x8U)                                              /**< FTM0_SYNC.SYNCHOM Mask                  */
#define FTM_SYNC_SYNCHOM_SHIFT                   (3U)                                                /**< FTM0_SYNC.SYNCHOM Position              */
#define FTM_SYNC_SYNCHOM(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_SYNCHOM_SHIFT))&FTM_SYNC_SYNCHOM_MASK) /**< FTM0_SYNC.SYNCHOM Field                 */
#define FTM_SYNC_TRIG0_MASK                      (0x10U)                                             /**< FTM0_SYNC.TRIG0 Mask                    */
#define FTM_SYNC_TRIG0_SHIFT                     (4U)                                                /**< FTM0_SYNC.TRIG0 Position                */
#define FTM_SYNC_TRIG0(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_TRIG0_SHIFT))&FTM_SYNC_TRIG0_MASK) /**< FTM0_SYNC.TRIG0 Field                   */
#define FTM_SYNC_TRIG1_MASK                      (0x20U)                                             /**< FTM0_SYNC.TRIG1 Mask                    */
#define FTM_SYNC_TRIG1_SHIFT                     (5U)                                                /**< FTM0_SYNC.TRIG1 Position                */
#define FTM_SYNC_TRIG1(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_TRIG1_SHIFT))&FTM_SYNC_TRIG1_MASK) /**< FTM0_SYNC.TRIG1 Field                   */
#define FTM_SYNC_TRIG2_MASK                      (0x40U)                                             /**< FTM0_SYNC.TRIG2 Mask                    */
#define FTM_SYNC_TRIG2_SHIFT                     (6U)                                                /**< FTM0_SYNC.TRIG2 Position                */
#define FTM_SYNC_TRIG2(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_TRIG2_SHIFT))&FTM_SYNC_TRIG2_MASK) /**< FTM0_SYNC.TRIG2 Field                   */
#define FTM_SYNC_SWSYNC_MASK                     (0x80U)                                             /**< FTM0_SYNC.SWSYNC Mask                   */
#define FTM_SYNC_SWSYNC_SHIFT                    (7U)                                                /**< FTM0_SYNC.SWSYNC Position               */
#define FTM_SYNC_SWSYNC(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_SWSYNC_SHIFT))&FTM_SYNC_SWSYNC_MASK) /**< FTM0_SYNC.SWSYNC Field                  */
/** @} */

/** @name OUTINIT - Initial State for Channels Output */ /** @{ */
#define FTM_OUTINIT_CH0OI_MASK                   (0x1U)                                              /**< FTM0_OUTINIT.CH0OI Mask                 */
#define FTM_OUTINIT_CH0OI_SHIFT                  (0U)                                                /**< FTM0_OUTINIT.CH0OI Position             */
#define FTM_OUTINIT_CH0OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH0OI_SHIFT))&FTM_OUTINIT_CH0OI_MASK) /**< FTM0_OUTINIT.CH0OI Field                */
#define FTM_OUTINIT_CH1OI_MASK                   (0x2U)                                              /**< FTM0_OUTINIT.CH1OI Mask                 */
#define FTM_OUTINIT_CH1OI_SHIFT                  (1U)                                                /**< FTM0_OUTINIT.CH1OI Position             */
#define FTM_OUTINIT_CH1OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH1OI_SHIFT))&FTM_OUTINIT_CH1OI_MASK) /**< FTM0_OUTINIT.CH1OI Field                */
#define FTM_OUTINIT_CH2OI_MASK                   (0x4U)                                              /**< FTM0_OUTINIT.CH2OI Mask                 */
#define FTM_OUTINIT_CH2OI_SHIFT                  (2U)                                                /**< FTM0_OUTINIT.CH2OI Position             */
#define FTM_OUTINIT_CH2OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH2OI_SHIFT))&FTM_OUTINIT_CH2OI_MASK) /**< FTM0_OUTINIT.CH2OI Field                */
#define FTM_OUTINIT_CH3OI_MASK                   (0x8U)                                              /**< FTM0_OUTINIT.CH3OI Mask                 */
#define FTM_OUTINIT_CH3OI_SHIFT                  (3U)                                                /**< FTM0_OUTINIT.CH3OI Position             */
#define FTM_OUTINIT_CH3OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH3OI_SHIFT))&FTM_OUTINIT_CH3OI_MASK) /**< FTM0_OUTINIT.CH3OI Field                */
#define FTM_OUTINIT_CH4OI_MASK                   (0x10U)                                             /**< FTM0_OUTINIT.CH4OI Mask                 */
#define FTM_OUTINIT_CH4OI_SHIFT                  (4U)                                                /**< FTM0_OUTINIT.CH4OI Position             */
#define FTM_OUTINIT_CH4OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH4OI_SHIFT))&FTM_OUTINIT_CH4OI_MASK) /**< FTM0_OUTINIT.CH4OI Field                */
#define FTM_OUTINIT_CH5OI_MASK                   (0x20U)                                             /**< FTM0_OUTINIT.CH5OI Mask                 */
#define FTM_OUTINIT_CH5OI_SHIFT                  (5U)                                                /**< FTM0_OUTINIT.CH5OI Position             */
#define FTM_OUTINIT_CH5OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH5OI_SHIFT))&FTM_OUTINIT_CH5OI_MASK) /**< FTM0_OUTINIT.CH5OI Field                */
#define FTM_OUTINIT_CH6OI_MASK                   (0x40U)                                             /**< FTM0_OUTINIT.CH6OI Mask                 */
#define FTM_OUTINIT_CH6OI_SHIFT                  (6U)                                                /**< FTM0_OUTINIT.CH6OI Position             */
#define FTM_OUTINIT_CH6OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH6OI_SHIFT))&FTM_OUTINIT_CH6OI_MASK) /**< FTM0_OUTINIT.CH6OI Field                */
#define FTM_OUTINIT_CH7OI_MASK                   (0x80U)                                             /**< FTM0_OUTINIT.CH7OI Mask                 */
#define FTM_OUTINIT_CH7OI_SHIFT                  (7U)                                                /**< FTM0_OUTINIT.CH7OI Position             */
#define FTM_OUTINIT_CH7OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH7OI_SHIFT))&FTM_OUTINIT_CH7OI_MASK) /**< FTM0_OUTINIT.CH7OI Field                */
/** @} */

/** @name OUTMASK - Output Mask */ /** @{ */
#define FTM_OUTMASK_CH0OM_MASK                   (0x1U)                                              /**< FTM0_OUTMASK.CH0OM Mask                 */
#define FTM_OUTMASK_CH0OM_SHIFT                  (0U)                                                /**< FTM0_OUTMASK.CH0OM Position             */
#define FTM_OUTMASK_CH0OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH0OM_SHIFT))&FTM_OUTMASK_CH0OM_MASK) /**< FTM0_OUTMASK.CH0OM Field                */
#define FTM_OUTMASK_CH1OM_MASK                   (0x2U)                                              /**< FTM0_OUTMASK.CH1OM Mask                 */
#define FTM_OUTMASK_CH1OM_SHIFT                  (1U)                                                /**< FTM0_OUTMASK.CH1OM Position             */
#define FTM_OUTMASK_CH1OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH1OM_SHIFT))&FTM_OUTMASK_CH1OM_MASK) /**< FTM0_OUTMASK.CH1OM Field                */
#define FTM_OUTMASK_CH2OM_MASK                   (0x4U)                                              /**< FTM0_OUTMASK.CH2OM Mask                 */
#define FTM_OUTMASK_CH2OM_SHIFT                  (2U)                                                /**< FTM0_OUTMASK.CH2OM Position             */
#define FTM_OUTMASK_CH2OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH2OM_SHIFT))&FTM_OUTMASK_CH2OM_MASK) /**< FTM0_OUTMASK.CH2OM Field                */
#define FTM_OUTMASK_CH3OM_MASK                   (0x8U)                                              /**< FTM0_OUTMASK.CH3OM Mask                 */
#define FTM_OUTMASK_CH3OM_SHIFT                  (3U)                                                /**< FTM0_OUTMASK.CH3OM Position             */
#define FTM_OUTMASK_CH3OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH3OM_SHIFT))&FTM_OUTMASK_CH3OM_MASK) /**< FTM0_OUTMASK.CH3OM Field                */
#define FTM_OUTMASK_CH4OM_MASK                   (0x10U)                                             /**< FTM0_OUTMASK.CH4OM Mask                 */
#define FTM_OUTMASK_CH4OM_SHIFT                  (4U)                                                /**< FTM0_OUTMASK.CH4OM Position             */
#define FTM_OUTMASK_CH4OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH4OM_SHIFT))&FTM_OUTMASK_CH4OM_MASK) /**< FTM0_OUTMASK.CH4OM Field                */
#define FTM_OUTMASK_CH5OM_MASK                   (0x20U)                                             /**< FTM0_OUTMASK.CH5OM Mask                 */
#define FTM_OUTMASK_CH5OM_SHIFT                  (5U)                                                /**< FTM0_OUTMASK.CH5OM Position             */
#define FTM_OUTMASK_CH5OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH5OM_SHIFT))&FTM_OUTMASK_CH5OM_MASK) /**< FTM0_OUTMASK.CH5OM Field                */
#define FTM_OUTMASK_CH6OM_MASK                   (0x40U)                                             /**< FTM0_OUTMASK.CH6OM Mask                 */
#define FTM_OUTMASK_CH6OM_SHIFT                  (6U)                                                /**< FTM0_OUTMASK.CH6OM Position             */
#define FTM_OUTMASK_CH6OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH6OM_SHIFT))&FTM_OUTMASK_CH6OM_MASK) /**< FTM0_OUTMASK.CH6OM Field                */
#define FTM_OUTMASK_CH7OM_MASK                   (0x80U)                                             /**< FTM0_OUTMASK.CH7OM Mask                 */
#define FTM_OUTMASK_CH7OM_SHIFT                  (7U)                                                /**< FTM0_OUTMASK.CH7OM Position             */
#define FTM_OUTMASK_CH7OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH7OM_SHIFT))&FTM_OUTMASK_CH7OM_MASK) /**< FTM0_OUTMASK.CH7OM Field                */
/** @} */

/** @name COMBINE - Function for Linked Channels */ /** @{ */
#define FTM_COMBINE_COMBINE0_MASK                (0x1U)                                              /**< FTM0_COMBINE.COMBINE0 Mask              */
#define FTM_COMBINE_COMBINE0_SHIFT               (0U)                                                /**< FTM0_COMBINE.COMBINE0 Position          */
#define FTM_COMBINE_COMBINE0(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMBINE0_SHIFT))&FTM_COMBINE_COMBINE0_MASK) /**< FTM0_COMBINE.COMBINE0 Field             */
#define FTM_COMBINE_COMP0_MASK                   (0x2U)                                              /**< FTM0_COMBINE.COMP0 Mask                 */
#define FTM_COMBINE_COMP0_SHIFT                  (1U)                                                /**< FTM0_COMBINE.COMP0 Position             */
#define FTM_COMBINE_COMP0(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMP0_SHIFT))&FTM_COMBINE_COMP0_MASK) /**< FTM0_COMBINE.COMP0 Field                */
#define FTM_COMBINE_DECAPEN0_MASK                (0x4U)                                              /**< FTM0_COMBINE.DECAPEN0 Mask              */
#define FTM_COMBINE_DECAPEN0_SHIFT               (2U)                                                /**< FTM0_COMBINE.DECAPEN0 Position          */
#define FTM_COMBINE_DECAPEN0(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAPEN0_SHIFT))&FTM_COMBINE_DECAPEN0_MASK) /**< FTM0_COMBINE.DECAPEN0 Field             */
#define FTM_COMBINE_DECAP0_MASK                  (0x8U)                                              /**< FTM0_COMBINE.DECAP0 Mask                */
#define FTM_COMBINE_DECAP0_SHIFT                 (3U)                                                /**< FTM0_COMBINE.DECAP0 Position            */
#define FTM_COMBINE_DECAP0(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAP0_SHIFT))&FTM_COMBINE_DECAP0_MASK) /**< FTM0_COMBINE.DECAP0 Field               */
#define FTM_COMBINE_DTEN0_MASK                   (0x10U)                                             /**< FTM0_COMBINE.DTEN0 Mask                 */
#define FTM_COMBINE_DTEN0_SHIFT                  (4U)                                                /**< FTM0_COMBINE.DTEN0 Position             */
#define FTM_COMBINE_DTEN0(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DTEN0_SHIFT))&FTM_COMBINE_DTEN0_MASK) /**< FTM0_COMBINE.DTEN0 Field                */
#define FTM_COMBINE_SYNCEN0_MASK                 (0x20U)                                             /**< FTM0_COMBINE.SYNCEN0 Mask               */
#define FTM_COMBINE_SYNCEN0_SHIFT                (5U)                                                /**< FTM0_COMBINE.SYNCEN0 Position           */
#define FTM_COMBINE_SYNCEN0(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_SYNCEN0_SHIFT))&FTM_COMBINE_SYNCEN0_MASK) /**< FTM0_COMBINE.SYNCEN0 Field              */
#define FTM_COMBINE_FAULTEN0_MASK                (0x40U)                                             /**< FTM0_COMBINE.FAULTEN0 Mask              */
#define FTM_COMBINE_FAULTEN0_SHIFT               (6U)                                                /**< FTM0_COMBINE.FAULTEN0 Position          */
#define FTM_COMBINE_FAULTEN0(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_FAULTEN0_SHIFT))&FTM_COMBINE_FAULTEN0_MASK) /**< FTM0_COMBINE.FAULTEN0 Field             */
#define FTM_COMBINE_MCOMBINE0_MASK               (0x80U)                                             /**< FTM0_COMBINE.MCOMBINE0 Mask             */
#define FTM_COMBINE_MCOMBINE0_SHIFT              (7U)                                                /**< FTM0_COMBINE.MCOMBINE0 Position         */
#define FTM_COMBINE_MCOMBINE0(x)                 (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_MCOMBINE0_SHIFT))&FTM_COMBINE_MCOMBINE0_MASK) /**< FTM0_COMBINE.MCOMBINE0 Field            */
#define FTM_COMBINE_COMBINE1_MASK                (0x100U)                                            /**< FTM0_COMBINE.COMBINE1 Mask              */
#define FTM_COMBINE_COMBINE1_SHIFT               (8U)                                                /**< FTM0_COMBINE.COMBINE1 Position          */
#define FTM_COMBINE_COMBINE1(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMBINE1_SHIFT))&FTM_COMBINE_COMBINE1_MASK) /**< FTM0_COMBINE.COMBINE1 Field             */
#define FTM_COMBINE_COMP1_MASK                   (0x200U)                                            /**< FTM0_COMBINE.COMP1 Mask                 */
#define FTM_COMBINE_COMP1_SHIFT                  (9U)                                                /**< FTM0_COMBINE.COMP1 Position             */
#define FTM_COMBINE_COMP1(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMP1_SHIFT))&FTM_COMBINE_COMP1_MASK) /**< FTM0_COMBINE.COMP1 Field                */
#define FTM_COMBINE_DECAPEN1_MASK                (0x400U)                                            /**< FTM0_COMBINE.DECAPEN1 Mask              */
#define FTM_COMBINE_DECAPEN1_SHIFT               (10U)                                               /**< FTM0_COMBINE.DECAPEN1 Position          */
#define FTM_COMBINE_DECAPEN1(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAPEN1_SHIFT))&FTM_COMBINE_DECAPEN1_MASK) /**< FTM0_COMBINE.DECAPEN1 Field             */
#define FTM_COMBINE_DECAP1_MASK                  (0x800U)                                            /**< FTM0_COMBINE.DECAP1 Mask                */
#define FTM_COMBINE_DECAP1_SHIFT                 (11U)                                               /**< FTM0_COMBINE.DECAP1 Position            */
#define FTM_COMBINE_DECAP1(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAP1_SHIFT))&FTM_COMBINE_DECAP1_MASK) /**< FTM0_COMBINE.DECAP1 Field               */
#define FTM_COMBINE_DTEN1_MASK                   (0x1000U)                                           /**< FTM0_COMBINE.DTEN1 Mask                 */
#define FTM_COMBINE_DTEN1_SHIFT                  (12U)                                               /**< FTM0_COMBINE.DTEN1 Position             */
#define FTM_COMBINE_DTEN1(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DTEN1_SHIFT))&FTM_COMBINE_DTEN1_MASK) /**< FTM0_COMBINE.DTEN1 Field                */
#define FTM_COMBINE_SYNCEN1_MASK                 (0x2000U)                                           /**< FTM0_COMBINE.SYNCEN1 Mask               */
#define FTM_COMBINE_SYNCEN1_SHIFT                (13U)                                               /**< FTM0_COMBINE.SYNCEN1 Position           */
#define FTM_COMBINE_SYNCEN1(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_SYNCEN1_SHIFT))&FTM_COMBINE_SYNCEN1_MASK) /**< FTM0_COMBINE.SYNCEN1 Field              */
#define FTM_COMBINE_FAULTEN1_MASK                (0x4000U)                                           /**< FTM0_COMBINE.FAULTEN1 Mask              */
#define FTM_COMBINE_FAULTEN1_SHIFT               (14U)                                               /**< FTM0_COMBINE.FAULTEN1 Position          */
#define FTM_COMBINE_FAULTEN1(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_FAULTEN1_SHIFT))&FTM_COMBINE_FAULTEN1_MASK) /**< FTM0_COMBINE.FAULTEN1 Field             */
#define FTM_COMBINE_MCOMBINE1_MASK               (0x8000U)                                           /**< FTM0_COMBINE.MCOMBINE1 Mask             */
#define FTM_COMBINE_MCOMBINE1_SHIFT              (15U)                                               /**< FTM0_COMBINE.MCOMBINE1 Position         */
#define FTM_COMBINE_MCOMBINE1(x)                 (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_MCOMBINE1_SHIFT))&FTM_COMBINE_MCOMBINE1_MASK) /**< FTM0_COMBINE.MCOMBINE1 Field            */
#define FTM_COMBINE_COMBINE2_MASK                (0x10000U)                                          /**< FTM0_COMBINE.COMBINE2 Mask              */
#define FTM_COMBINE_COMBINE2_SHIFT               (16U)                                               /**< FTM0_COMBINE.COMBINE2 Position          */
#define FTM_COMBINE_COMBINE2(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMBINE2_SHIFT))&FTM_COMBINE_COMBINE2_MASK) /**< FTM0_COMBINE.COMBINE2 Field             */
#define FTM_COMBINE_COMP2_MASK                   (0x20000U)                                          /**< FTM0_COMBINE.COMP2 Mask                 */
#define FTM_COMBINE_COMP2_SHIFT                  (17U)                                               /**< FTM0_COMBINE.COMP2 Position             */
#define FTM_COMBINE_COMP2(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMP2_SHIFT))&FTM_COMBINE_COMP2_MASK) /**< FTM0_COMBINE.COMP2 Field                */
#define FTM_COMBINE_DECAPEN2_MASK                (0x40000U)                                          /**< FTM0_COMBINE.DECAPEN2 Mask              */
#define FTM_COMBINE_DECAPEN2_SHIFT               (18U)                                               /**< FTM0_COMBINE.DECAPEN2 Position          */
#define FTM_COMBINE_DECAPEN2(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAPEN2_SHIFT))&FTM_COMBINE_DECAPEN2_MASK) /**< FTM0_COMBINE.DECAPEN2 Field             */
#define FTM_COMBINE_DECAP2_MASK                  (0x80000U)                                          /**< FTM0_COMBINE.DECAP2 Mask                */
#define FTM_COMBINE_DECAP2_SHIFT                 (19U)                                               /**< FTM0_COMBINE.DECAP2 Position            */
#define FTM_COMBINE_DECAP2(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAP2_SHIFT))&FTM_COMBINE_DECAP2_MASK) /**< FTM0_COMBINE.DECAP2 Field               */
#define FTM_COMBINE_DTEN2_MASK                   (0x100000U)                                         /**< FTM0_COMBINE.DTEN2 Mask                 */
#define FTM_COMBINE_DTEN2_SHIFT                  (20U)                                               /**< FTM0_COMBINE.DTEN2 Position             */
#define FTM_COMBINE_DTEN2(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DTEN2_SHIFT))&FTM_COMBINE_DTEN2_MASK) /**< FTM0_COMBINE.DTEN2 Field                */
#define FTM_COMBINE_SYNCEN2_MASK                 (0x200000U)                                         /**< FTM0_COMBINE.SYNCEN2 Mask               */
#define FTM_COMBINE_SYNCEN2_SHIFT                (21U)                                               /**< FTM0_COMBINE.SYNCEN2 Position           */
#define FTM_COMBINE_SYNCEN2(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_SYNCEN2_SHIFT))&FTM_COMBINE_SYNCEN2_MASK) /**< FTM0_COMBINE.SYNCEN2 Field              */
#define FTM_COMBINE_FAULTEN2_MASK                (0x400000U)                                         /**< FTM0_COMBINE.FAULTEN2 Mask              */
#define FTM_COMBINE_FAULTEN2_SHIFT               (22U)                                               /**< FTM0_COMBINE.FAULTEN2 Position          */
#define FTM_COMBINE_FAULTEN2(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_FAULTEN2_SHIFT))&FTM_COMBINE_FAULTEN2_MASK) /**< FTM0_COMBINE.FAULTEN2 Field             */
#define FTM_COMBINE_MCOMBINE2_MASK               (0x800000U)                                         /**< FTM0_COMBINE.MCOMBINE2 Mask             */
#define FTM_COMBINE_MCOMBINE2_SHIFT              (23U)                                               /**< FTM0_COMBINE.MCOMBINE2 Position         */
#define FTM_COMBINE_MCOMBINE2(x)                 (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_MCOMBINE2_SHIFT))&FTM_COMBINE_MCOMBINE2_MASK) /**< FTM0_COMBINE.MCOMBINE2 Field            */
#define FTM_COMBINE_COMBINE3_MASK                (0x1000000U)                                        /**< FTM0_COMBINE.COMBINE3 Mask              */
#define FTM_COMBINE_COMBINE3_SHIFT               (24U)                                               /**< FTM0_COMBINE.COMBINE3 Position          */
#define FTM_COMBINE_COMBINE3(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMBINE3_SHIFT))&FTM_COMBINE_COMBINE3_MASK) /**< FTM0_COMBINE.COMBINE3 Field             */
#define FTM_COMBINE_COMP3_MASK                   (0x2000000U)                                        /**< FTM0_COMBINE.COMP3 Mask                 */
#define FTM_COMBINE_COMP3_SHIFT                  (25U)                                               /**< FTM0_COMBINE.COMP3 Position             */
#define FTM_COMBINE_COMP3(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMP3_SHIFT))&FTM_COMBINE_COMP3_MASK) /**< FTM0_COMBINE.COMP3 Field                */
#define FTM_COMBINE_DECAPEN3_MASK                (0x4000000U)                                        /**< FTM0_COMBINE.DECAPEN3 Mask              */
#define FTM_COMBINE_DECAPEN3_SHIFT               (26U)                                               /**< FTM0_COMBINE.DECAPEN3 Position          */
#define FTM_COMBINE_DECAPEN3(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAPEN3_SHIFT))&FTM_COMBINE_DECAPEN3_MASK) /**< FTM0_COMBINE.DECAPEN3 Field             */
#define FTM_COMBINE_DECAP3_MASK                  (0x8000000U)                                        /**< FTM0_COMBINE.DECAP3 Mask                */
#define FTM_COMBINE_DECAP3_SHIFT                 (27U)                                               /**< FTM0_COMBINE.DECAP3 Position            */
#define FTM_COMBINE_DECAP3(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAP3_SHIFT))&FTM_COMBINE_DECAP3_MASK) /**< FTM0_COMBINE.DECAP3 Field               */
#define FTM_COMBINE_DTEN3_MASK                   (0x10000000U)                                       /**< FTM0_COMBINE.DTEN3 Mask                 */
#define FTM_COMBINE_DTEN3_SHIFT                  (28U)                                               /**< FTM0_COMBINE.DTEN3 Position             */
#define FTM_COMBINE_DTEN3(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DTEN3_SHIFT))&FTM_COMBINE_DTEN3_MASK) /**< FTM0_COMBINE.DTEN3 Field                */
#define FTM_COMBINE_SYNCEN3_MASK                 (0x20000000U)                                       /**< FTM0_COMBINE.SYNCEN3 Mask               */
#define FTM_COMBINE_SYNCEN3_SHIFT                (29U)                                               /**< FTM0_COMBINE.SYNCEN3 Position           */
#define FTM_COMBINE_SYNCEN3(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_SYNCEN3_SHIFT))&FTM_COMBINE_SYNCEN3_MASK) /**< FTM0_COMBINE.SYNCEN3 Field              */
#define FTM_COMBINE_FAULTEN3_MASK                (0x40000000U)                                       /**< FTM0_COMBINE.FAULTEN3 Mask              */
#define FTM_COMBINE_FAULTEN3_SHIFT               (30U)                                               /**< FTM0_COMBINE.FAULTEN3 Position          */
#define FTM_COMBINE_FAULTEN3(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_FAULTEN3_SHIFT))&FTM_COMBINE_FAULTEN3_MASK) /**< FTM0_COMBINE.FAULTEN3 Field             */
#define FTM_COMBINE_MCOMBINE3_MASK               (0x80000000U)                                       /**< FTM0_COMBINE.MCOMBINE3 Mask             */
#define FTM_COMBINE_MCOMBINE3_SHIFT              (31U)                                               /**< FTM0_COMBINE.MCOMBINE3 Position         */
#define FTM_COMBINE_MCOMBINE3(x)                 (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_MCOMBINE3_SHIFT))&FTM_COMBINE_MCOMBINE3_MASK) /**< FTM0_COMBINE.MCOMBINE3 Field            */
/** @} */

/** @name DEADTIME - Deadtime Insertion Control */ /** @{ */
#define FTM_DEADTIME_DTVAL_MASK                  (0x3FU)                                             /**< FTM0_DEADTIME.DTVAL Mask                */
#define FTM_DEADTIME_DTVAL_SHIFT                 (0U)                                                /**< FTM0_DEADTIME.DTVAL Position            */
#define FTM_DEADTIME_DTVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_DEADTIME_DTVAL_SHIFT))&FTM_DEADTIME_DTVAL_MASK) /**< FTM0_DEADTIME.DTVAL Field               */
#define FTM_DEADTIME_DTPS_MASK                   (0xC0U)                                             /**< FTM0_DEADTIME.DTPS Mask                 */
#define FTM_DEADTIME_DTPS_SHIFT                  (6U)                                                /**< FTM0_DEADTIME.DTPS Position             */
#define FTM_DEADTIME_DTPS(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_DEADTIME_DTPS_SHIFT))&FTM_DEADTIME_DTPS_MASK) /**< FTM0_DEADTIME.DTPS Field                */
#define FTM_DEADTIME_DTVALEX_MASK                (0xF0000U)                                          /**< FTM0_DEADTIME.DTVALEX Mask              */
#define FTM_DEADTIME_DTVALEX_SHIFT               (16U)                                               /**< FTM0_DEADTIME.DTVALEX Position          */
#define FTM_DEADTIME_DTVALEX(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_DEADTIME_DTVALEX_SHIFT))&FTM_DEADTIME_DTVALEX_MASK) /**< FTM0_DEADTIME.DTVALEX Field             */
/** @} */

/** @name EXTTRIG - FTM External Trigger */ /** @{ */
#define FTM_EXTTRIG_CH2TRIG_MASK                 (0x1U)                                              /**< FTM0_EXTTRIG.CH2TRIG Mask               */
#define FTM_EXTTRIG_CH2TRIG_SHIFT                (0U)                                                /**< FTM0_EXTTRIG.CH2TRIG Position           */
#define FTM_EXTTRIG_CH2TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH2TRIG_SHIFT))&FTM_EXTTRIG_CH2TRIG_MASK) /**< FTM0_EXTTRIG.CH2TRIG Field              */
#define FTM_EXTTRIG_CH3TRIG_MASK                 (0x2U)                                              /**< FTM0_EXTTRIG.CH3TRIG Mask               */
#define FTM_EXTTRIG_CH3TRIG_SHIFT                (1U)                                                /**< FTM0_EXTTRIG.CH3TRIG Position           */
#define FTM_EXTTRIG_CH3TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH3TRIG_SHIFT))&FTM_EXTTRIG_CH3TRIG_MASK) /**< FTM0_EXTTRIG.CH3TRIG Field              */
#define FTM_EXTTRIG_CH4TRIG_MASK                 (0x4U)                                              /**< FTM0_EXTTRIG.CH4TRIG Mask               */
#define FTM_EXTTRIG_CH4TRIG_SHIFT                (2U)                                                /**< FTM0_EXTTRIG.CH4TRIG Position           */
#define FTM_EXTTRIG_CH4TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH4TRIG_SHIFT))&FTM_EXTTRIG_CH4TRIG_MASK) /**< FTM0_EXTTRIG.CH4TRIG Field              */
#define FTM_EXTTRIG_CH5TRIG_MASK                 (0x8U)                                              /**< FTM0_EXTTRIG.CH5TRIG Mask               */
#define FTM_EXTTRIG_CH5TRIG_SHIFT                (3U)                                                /**< FTM0_EXTTRIG.CH5TRIG Position           */
#define FTM_EXTTRIG_CH5TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH5TRIG_SHIFT))&FTM_EXTTRIG_CH5TRIG_MASK) /**< FTM0_EXTTRIG.CH5TRIG Field              */
#define FTM_EXTTRIG_CH0TRIG_MASK                 (0x10U)                                             /**< FTM0_EXTTRIG.CH0TRIG Mask               */
#define FTM_EXTTRIG_CH0TRIG_SHIFT                (4U)                                                /**< FTM0_EXTTRIG.CH0TRIG Position           */
#define FTM_EXTTRIG_CH0TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH0TRIG_SHIFT))&FTM_EXTTRIG_CH0TRIG_MASK) /**< FTM0_EXTTRIG.CH0TRIG Field              */
#define FTM_EXTTRIG_CH1TRIG_MASK                 (0x20U)                                             /**< FTM0_EXTTRIG.CH1TRIG Mask               */
#define FTM_EXTTRIG_CH1TRIG_SHIFT                (5U)                                                /**< FTM0_EXTTRIG.CH1TRIG Position           */
#define FTM_EXTTRIG_CH1TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH1TRIG_SHIFT))&FTM_EXTTRIG_CH1TRIG_MASK) /**< FTM0_EXTTRIG.CH1TRIG Field              */
#define FTM_EXTTRIG_INITTRIGEN_MASK              (0x40U)                                             /**< FTM0_EXTTRIG.INITTRIGEN Mask            */
#define FTM_EXTTRIG_INITTRIGEN_SHIFT             (6U)                                                /**< FTM0_EXTTRIG.INITTRIGEN Position        */
#define FTM_EXTTRIG_INITTRIGEN(x)                (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_INITTRIGEN_SHIFT))&FTM_EXTTRIG_INITTRIGEN_MASK) /**< FTM0_EXTTRIG.INITTRIGEN Field           */
#define FTM_EXTTRIG_TRIGF_MASK                   (0x80U)                                             /**< FTM0_EXTTRIG.TRIGF Mask                 */
#define FTM_EXTTRIG_TRIGF_SHIFT                  (7U)                                                /**< FTM0_EXTTRIG.TRIGF Position             */
#define FTM_EXTTRIG_TRIGF(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_TRIGF_SHIFT))&FTM_EXTTRIG_TRIGF_MASK) /**< FTM0_EXTTRIG.TRIGF Field                */
#define FTM_EXTTRIG_CH6TRIG_MASK                 (0x100U)                                            /**< FTM0_EXTTRIG.CH6TRIG Mask               */
#define FTM_EXTTRIG_CH6TRIG_SHIFT                (8U)                                                /**< FTM0_EXTTRIG.CH6TRIG Position           */
#define FTM_EXTTRIG_CH6TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH6TRIG_SHIFT))&FTM_EXTTRIG_CH6TRIG_MASK) /**< FTM0_EXTTRIG.CH6TRIG Field              */
#define FTM_EXTTRIG_CH7TRIG_MASK                 (0x200U)                                            /**< FTM0_EXTTRIG.CH7TRIG Mask               */
#define FTM_EXTTRIG_CH7TRIG_SHIFT                (9U)                                                /**< FTM0_EXTTRIG.CH7TRIG Position           */
#define FTM_EXTTRIG_CH7TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH7TRIG_SHIFT))&FTM_EXTTRIG_CH7TRIG_MASK) /**< FTM0_EXTTRIG.CH7TRIG Field              */
/** @} */

/** @name POL - Channels Polarity */ /** @{ */
#define FTM_POL_POL0_MASK                        (0x1U)                                              /**< FTM0_POL.POL0 Mask                      */
#define FTM_POL_POL0_SHIFT                       (0U)                                                /**< FTM0_POL.POL0 Position                  */
#define FTM_POL_POL0(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL0_SHIFT))&FTM_POL_POL0_MASK) /**< FTM0_POL.POL0 Field                     */
#define FTM_POL_POL1_MASK                        (0x2U)                                              /**< FTM0_POL.POL1 Mask                      */
#define FTM_POL_POL1_SHIFT                       (1U)                                                /**< FTM0_POL.POL1 Position                  */
#define FTM_POL_POL1(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL1_SHIFT))&FTM_POL_POL1_MASK) /**< FTM0_POL.POL1 Field                     */
#define FTM_POL_POL2_MASK                        (0x4U)                                              /**< FTM0_POL.POL2 Mask                      */
#define FTM_POL_POL2_SHIFT                       (2U)                                                /**< FTM0_POL.POL2 Position                  */
#define FTM_POL_POL2(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL2_SHIFT))&FTM_POL_POL2_MASK) /**< FTM0_POL.POL2 Field                     */
#define FTM_POL_POL3_MASK                        (0x8U)                                              /**< FTM0_POL.POL3 Mask                      */
#define FTM_POL_POL3_SHIFT                       (3U)                                                /**< FTM0_POL.POL3 Position                  */
#define FTM_POL_POL3(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL3_SHIFT))&FTM_POL_POL3_MASK) /**< FTM0_POL.POL3 Field                     */
#define FTM_POL_POL4_MASK                        (0x10U)                                             /**< FTM0_POL.POL4 Mask                      */
#define FTM_POL_POL4_SHIFT                       (4U)                                                /**< FTM0_POL.POL4 Position                  */
#define FTM_POL_POL4(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL4_SHIFT))&FTM_POL_POL4_MASK) /**< FTM0_POL.POL4 Field                     */
#define FTM_POL_POL5_MASK                        (0x20U)                                             /**< FTM0_POL.POL5 Mask                      */
#define FTM_POL_POL5_SHIFT                       (5U)                                                /**< FTM0_POL.POL5 Position                  */
#define FTM_POL_POL5(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL5_SHIFT))&FTM_POL_POL5_MASK) /**< FTM0_POL.POL5 Field                     */
#define FTM_POL_POL6_MASK                        (0x40U)                                             /**< FTM0_POL.POL6 Mask                      */
#define FTM_POL_POL6_SHIFT                       (6U)                                                /**< FTM0_POL.POL6 Position                  */
#define FTM_POL_POL6(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL6_SHIFT))&FTM_POL_POL6_MASK) /**< FTM0_POL.POL6 Field                     */
#define FTM_POL_POL7_MASK                        (0x80U)                                             /**< FTM0_POL.POL7 Mask                      */
#define FTM_POL_POL7_SHIFT                       (7U)                                                /**< FTM0_POL.POL7 Position                  */
#define FTM_POL_POL7(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL7_SHIFT))&FTM_POL_POL7_MASK) /**< FTM0_POL.POL7 Field                     */
/** @} */

/** @name FMS - Fault Mode Status */ /** @{ */
#define FTM_FMS_FAULTF0_MASK                     (0x1U)                                              /**< FTM0_FMS.FAULTF0 Mask                   */
#define FTM_FMS_FAULTF0_SHIFT                    (0U)                                                /**< FTM0_FMS.FAULTF0 Position               */
#define FTM_FMS_FAULTF0(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTF0_SHIFT))&FTM_FMS_FAULTF0_MASK) /**< FTM0_FMS.FAULTF0 Field                  */
#define FTM_FMS_FAULTF1_MASK                     (0x2U)                                              /**< FTM0_FMS.FAULTF1 Mask                   */
#define FTM_FMS_FAULTF1_SHIFT                    (1U)                                                /**< FTM0_FMS.FAULTF1 Position               */
#define FTM_FMS_FAULTF1(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTF1_SHIFT))&FTM_FMS_FAULTF1_MASK) /**< FTM0_FMS.FAULTF1 Field                  */
#define FTM_FMS_FAULTF2_MASK                     (0x4U)                                              /**< FTM0_FMS.FAULTF2 Mask                   */
#define FTM_FMS_FAULTF2_SHIFT                    (2U)                                                /**< FTM0_FMS.FAULTF2 Position               */
#define FTM_FMS_FAULTF2(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTF2_SHIFT))&FTM_FMS_FAULTF2_MASK) /**< FTM0_FMS.FAULTF2 Field                  */
#define FTM_FMS_FAULTF3_MASK                     (0x8U)                                              /**< FTM0_FMS.FAULTF3 Mask                   */
#define FTM_FMS_FAULTF3_SHIFT                    (3U)                                                /**< FTM0_FMS.FAULTF3 Position               */
#define FTM_FMS_FAULTF3(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTF3_SHIFT))&FTM_FMS_FAULTF3_MASK) /**< FTM0_FMS.FAULTF3 Field                  */
#define FTM_FMS_FAULTIN_MASK                     (0x20U)                                             /**< FTM0_FMS.FAULTIN Mask                   */
#define FTM_FMS_FAULTIN_SHIFT                    (5U)                                                /**< FTM0_FMS.FAULTIN Position               */
#define FTM_FMS_FAULTIN(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTIN_SHIFT))&FTM_FMS_FAULTIN_MASK) /**< FTM0_FMS.FAULTIN Field                  */
#define FTM_FMS_WPEN_MASK                        (0x40U)                                             /**< FTM0_FMS.WPEN Mask                      */
#define FTM_FMS_WPEN_SHIFT                       (6U)                                                /**< FTM0_FMS.WPEN Position                  */
#define FTM_FMS_WPEN(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_FMS_WPEN_SHIFT))&FTM_FMS_WPEN_MASK) /**< FTM0_FMS.WPEN Field                     */
#define FTM_FMS_FAULTF_MASK                      (0x80U)                                             /**< FTM0_FMS.FAULTF Mask                    */
#define FTM_FMS_FAULTF_SHIFT                     (7U)                                                /**< FTM0_FMS.FAULTF Position                */
#define FTM_FMS_FAULTF(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTF_SHIFT))&FTM_FMS_FAULTF_MASK) /**< FTM0_FMS.FAULTF Field                   */
/** @} */

/** @name FILTER - Input Capture Filter Control */ /** @{ */
#define FTM_FILTER_CH0FVAL_MASK                  (0xFU)                                              /**< FTM0_FILTER.CH0FVAL Mask                */
#define FTM_FILTER_CH0FVAL_SHIFT                 (0U)                                                /**< FTM0_FILTER.CH0FVAL Position            */
#define FTM_FILTER_CH0FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH0FVAL_SHIFT))&FTM_FILTER_CH0FVAL_MASK) /**< FTM0_FILTER.CH0FVAL Field               */
#define FTM_FILTER_CH1FVAL_MASK                  (0xF0U)                                             /**< FTM0_FILTER.CH1FVAL Mask                */
#define FTM_FILTER_CH1FVAL_SHIFT                 (4U)                                                /**< FTM0_FILTER.CH1FVAL Position            */
#define FTM_FILTER_CH1FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH1FVAL_SHIFT))&FTM_FILTER_CH1FVAL_MASK) /**< FTM0_FILTER.CH1FVAL Field               */
#define FTM_FILTER_CH2FVAL_MASK                  (0xF00U)                                            /**< FTM0_FILTER.CH2FVAL Mask                */
#define FTM_FILTER_CH2FVAL_SHIFT                 (8U)                                                /**< FTM0_FILTER.CH2FVAL Position            */
#define FTM_FILTER_CH2FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH2FVAL_SHIFT))&FTM_FILTER_CH2FVAL_MASK) /**< FTM0_FILTER.CH2FVAL Field               */
#define FTM_FILTER_CH3FVAL_MASK                  (0xF000U)                                           /**< FTM0_FILTER.CH3FVAL Mask                */
#define FTM_FILTER_CH3FVAL_SHIFT                 (12U)                                               /**< FTM0_FILTER.CH3FVAL Position            */
#define FTM_FILTER_CH3FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH3FVAL_SHIFT))&FTM_FILTER_CH3FVAL_MASK) /**< FTM0_FILTER.CH3FVAL Field               */
/** @} */

/** @name FLTCTRL - Fault Control */ /** @{ */
#define FTM_FLTCTRL_FAULT0EN_MASK                (0x1U)                                              /**< FTM0_FLTCTRL.FAULT0EN Mask              */
#define FTM_FLTCTRL_FAULT0EN_SHIFT               (0U)                                                /**< FTM0_FLTCTRL.FAULT0EN Position          */
#define FTM_FLTCTRL_FAULT0EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FAULT0EN_SHIFT))&FTM_FLTCTRL_FAULT0EN_MASK) /**< FTM0_FLTCTRL.FAULT0EN Field             */
#define FTM_FLTCTRL_FAULT1EN_MASK                (0x2U)                                              /**< FTM0_FLTCTRL.FAULT1EN Mask              */
#define FTM_FLTCTRL_FAULT1EN_SHIFT               (1U)                                                /**< FTM0_FLTCTRL.FAULT1EN Position          */
#define FTM_FLTCTRL_FAULT1EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FAULT1EN_SHIFT))&FTM_FLTCTRL_FAULT1EN_MASK) /**< FTM0_FLTCTRL.FAULT1EN Field             */
#define FTM_FLTCTRL_FAULT2EN_MASK                (0x4U)                                              /**< FTM0_FLTCTRL.FAULT2EN Mask              */
#define FTM_FLTCTRL_FAULT2EN_SHIFT               (2U)                                                /**< FTM0_FLTCTRL.FAULT2EN Position          */
#define FTM_FLTCTRL_FAULT2EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FAULT2EN_SHIFT))&FTM_FLTCTRL_FAULT2EN_MASK) /**< FTM0_FLTCTRL.FAULT2EN Field             */
#define FTM_FLTCTRL_FAULT3EN_MASK                (0x8U)                                              /**< FTM0_FLTCTRL.FAULT3EN Mask              */
#define FTM_FLTCTRL_FAULT3EN_SHIFT               (3U)                                                /**< FTM0_FLTCTRL.FAULT3EN Position          */
#define FTM_FLTCTRL_FAULT3EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FAULT3EN_SHIFT))&FTM_FLTCTRL_FAULT3EN_MASK) /**< FTM0_FLTCTRL.FAULT3EN Field             */
#define FTM_FLTCTRL_FFLTR0EN_MASK                (0x10U)                                             /**< FTM0_FLTCTRL.FFLTR0EN Mask              */
#define FTM_FLTCTRL_FFLTR0EN_SHIFT               (4U)                                                /**< FTM0_FLTCTRL.FFLTR0EN Position          */
#define FTM_FLTCTRL_FFLTR0EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFLTR0EN_SHIFT))&FTM_FLTCTRL_FFLTR0EN_MASK) /**< FTM0_FLTCTRL.FFLTR0EN Field             */
#define FTM_FLTCTRL_FFLTR1EN_MASK                (0x20U)                                             /**< FTM0_FLTCTRL.FFLTR1EN Mask              */
#define FTM_FLTCTRL_FFLTR1EN_SHIFT               (5U)                                                /**< FTM0_FLTCTRL.FFLTR1EN Position          */
#define FTM_FLTCTRL_FFLTR1EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFLTR1EN_SHIFT))&FTM_FLTCTRL_FFLTR1EN_MASK) /**< FTM0_FLTCTRL.FFLTR1EN Field             */
#define FTM_FLTCTRL_FFLTR2EN_MASK                (0x40U)                                             /**< FTM0_FLTCTRL.FFLTR2EN Mask              */
#define FTM_FLTCTRL_FFLTR2EN_SHIFT               (6U)                                                /**< FTM0_FLTCTRL.FFLTR2EN Position          */
#define FTM_FLTCTRL_FFLTR2EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFLTR2EN_SHIFT))&FTM_FLTCTRL_FFLTR2EN_MASK) /**< FTM0_FLTCTRL.FFLTR2EN Field             */
#define FTM_FLTCTRL_FFLTR3EN_MASK                (0x80U)                                             /**< FTM0_FLTCTRL.FFLTR3EN Mask              */
#define FTM_FLTCTRL_FFLTR3EN_SHIFT               (7U)                                                /**< FTM0_FLTCTRL.FFLTR3EN Position          */
#define FTM_FLTCTRL_FFLTR3EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFLTR3EN_SHIFT))&FTM_FLTCTRL_FFLTR3EN_MASK) /**< FTM0_FLTCTRL.FFLTR3EN Field             */
#define FTM_FLTCTRL_FFVAL_MASK                   (0xF00U)                                            /**< FTM0_FLTCTRL.FFVAL Mask                 */
#define FTM_FLTCTRL_FFVAL_SHIFT                  (8U)                                                /**< FTM0_FLTCTRL.FFVAL Position             */
#define FTM_FLTCTRL_FFVAL(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFVAL_SHIFT))&FTM_FLTCTRL_FFVAL_MASK) /**< FTM0_FLTCTRL.FFVAL Field                */
#define FTM_FLTCTRL_FSTATE_MASK                  (0x8000U)                                           /**< FTM0_FLTCTRL.FSTATE Mask                */
#define FTM_FLTCTRL_FSTATE_SHIFT                 (15U)                                               /**< FTM0_FLTCTRL.FSTATE Position            */
#define FTM_FLTCTRL_FSTATE(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FSTATE_SHIFT))&FTM_FLTCTRL_FSTATE_MASK) /**< FTM0_FLTCTRL.FSTATE Field               */
/** @} */

/** @name QDCTRL - Quadrature Decoder Control and Status */ /** @{ */
#define FTM_QDCTRL_QUADEN_MASK                   (0x1U)                                              /**< FTM0_QDCTRL.QUADEN Mask                 */
#define FTM_QDCTRL_QUADEN_SHIFT                  (0U)                                                /**< FTM0_QDCTRL.QUADEN Position             */
#define FTM_QDCTRL_QUADEN(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_QUADEN_SHIFT))&FTM_QDCTRL_QUADEN_MASK) /**< FTM0_QDCTRL.QUADEN Field                */
#define FTM_QDCTRL_TOFDIR_MASK                   (0x2U)                                              /**< FTM0_QDCTRL.TOFDIR Mask                 */
#define FTM_QDCTRL_TOFDIR_SHIFT                  (1U)                                                /**< FTM0_QDCTRL.TOFDIR Position             */
#define FTM_QDCTRL_TOFDIR(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_TOFDIR_SHIFT))&FTM_QDCTRL_TOFDIR_MASK) /**< FTM0_QDCTRL.TOFDIR Field                */
#define FTM_QDCTRL_QUADIR_MASK                   (0x4U)                                              /**< FTM0_QDCTRL.QUADIR Mask                 */
#define FTM_QDCTRL_QUADIR_SHIFT                  (2U)                                                /**< FTM0_QDCTRL.QUADIR Position             */
#define FTM_QDCTRL_QUADIR(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_QUADIR_SHIFT))&FTM_QDCTRL_QUADIR_MASK) /**< FTM0_QDCTRL.QUADIR Field                */
#define FTM_QDCTRL_QUADMODE_MASK                 (0x8U)                                              /**< FTM0_QDCTRL.QUADMODE Mask               */
#define FTM_QDCTRL_QUADMODE_SHIFT                (3U)                                                /**< FTM0_QDCTRL.QUADMODE Position           */
#define FTM_QDCTRL_QUADMODE(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_QUADMODE_SHIFT))&FTM_QDCTRL_QUADMODE_MASK) /**< FTM0_QDCTRL.QUADMODE Field              */
#define FTM_QDCTRL_PHBPOL_MASK                   (0x10U)                                             /**< FTM0_QDCTRL.PHBPOL Mask                 */
#define FTM_QDCTRL_PHBPOL_SHIFT                  (4U)                                                /**< FTM0_QDCTRL.PHBPOL Position             */
#define FTM_QDCTRL_PHBPOL(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_PHBPOL_SHIFT))&FTM_QDCTRL_PHBPOL_MASK) /**< FTM0_QDCTRL.PHBPOL Field                */
#define FTM_QDCTRL_PHAPOL_MASK                   (0x20U)                                             /**< FTM0_QDCTRL.PHAPOL Mask                 */
#define FTM_QDCTRL_PHAPOL_SHIFT                  (5U)                                                /**< FTM0_QDCTRL.PHAPOL Position             */
#define FTM_QDCTRL_PHAPOL(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_PHAPOL_SHIFT))&FTM_QDCTRL_PHAPOL_MASK) /**< FTM0_QDCTRL.PHAPOL Field                */
#define FTM_QDCTRL_PHBFLTREN_MASK                (0x40U)                                             /**< FTM0_QDCTRL.PHBFLTREN Mask              */
#define FTM_QDCTRL_PHBFLTREN_SHIFT               (6U)                                                /**< FTM0_QDCTRL.PHBFLTREN Position          */
#define FTM_QDCTRL_PHBFLTREN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_PHBFLTREN_SHIFT))&FTM_QDCTRL_PHBFLTREN_MASK) /**< FTM0_QDCTRL.PHBFLTREN Field             */
#define FTM_QDCTRL_PHAFLTREN_MASK                (0x80U)                                             /**< FTM0_QDCTRL.PHAFLTREN Mask              */
#define FTM_QDCTRL_PHAFLTREN_SHIFT               (7U)                                                /**< FTM0_QDCTRL.PHAFLTREN Position          */
#define FTM_QDCTRL_PHAFLTREN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_PHAFLTREN_SHIFT))&FTM_QDCTRL_PHAFLTREN_MASK) /**< FTM0_QDCTRL.PHAFLTREN Field             */
/** @} */

/** @name CONF - Configuration */ /** @{ */
#define FTM_CONF_LDFQ_MASK                       (0x1FU)                                             /**< FTM0_CONF.LDFQ Mask                     */
#define FTM_CONF_LDFQ_SHIFT                      (0U)                                                /**< FTM0_CONF.LDFQ Position                 */
#define FTM_CONF_LDFQ(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CONF_LDFQ_SHIFT))&FTM_CONF_LDFQ_MASK) /**< FTM0_CONF.LDFQ Field                    */
#define FTM_CONF_BDMMODE_MASK                    (0xC0U)                                             /**< FTM0_CONF.BDMMODE Mask                  */
#define FTM_CONF_BDMMODE_SHIFT                   (6U)                                                /**< FTM0_CONF.BDMMODE Position              */
#define FTM_CONF_BDMMODE(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_CONF_BDMMODE_SHIFT))&FTM_CONF_BDMMODE_MASK) /**< FTM0_CONF.BDMMODE Field                 */
#define FTM_CONF_GTBEEN_MASK                     (0x200U)                                            /**< FTM0_CONF.GTBEEN Mask                   */
#define FTM_CONF_GTBEEN_SHIFT                    (9U)                                                /**< FTM0_CONF.GTBEEN Position               */
#define FTM_CONF_GTBEEN(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_CONF_GTBEEN_SHIFT))&FTM_CONF_GTBEEN_MASK) /**< FTM0_CONF.GTBEEN Field                  */
#define FTM_CONF_GTBEOUT_MASK                    (0x400U)                                            /**< FTM0_CONF.GTBEOUT Mask                  */
#define FTM_CONF_GTBEOUT_SHIFT                   (10U)                                               /**< FTM0_CONF.GTBEOUT Position              */
#define FTM_CONF_GTBEOUT(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_CONF_GTBEOUT_SHIFT))&FTM_CONF_GTBEOUT_MASK) /**< FTM0_CONF.GTBEOUT Field                 */
#define FTM_CONF_ITRIGR_MASK                     (0x800U)                                            /**< FTM0_CONF.ITRIGR Mask                   */
#define FTM_CONF_ITRIGR_SHIFT                    (11U)                                               /**< FTM0_CONF.ITRIGR Position               */
#define FTM_CONF_ITRIGR(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_CONF_ITRIGR_SHIFT))&FTM_CONF_ITRIGR_MASK) /**< FTM0_CONF.ITRIGR Field                  */
/** @} */

/** @name FLTPOL - FTM Fault Input Polarity */ /** @{ */
#define FTM_FLTPOL_FLT0POL_MASK                  (0x1U)                                              /**< FTM0_FLTPOL.FLT0POL Mask                */
#define FTM_FLTPOL_FLT0POL_SHIFT                 (0U)                                                /**< FTM0_FLTPOL.FLT0POL Position            */
#define FTM_FLTPOL_FLT0POL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FLTPOL_FLT0POL_SHIFT))&FTM_FLTPOL_FLT0POL_MASK) /**< FTM0_FLTPOL.FLT0POL Field               */
#define FTM_FLTPOL_FLT1POL_MASK                  (0x2U)                                              /**< FTM0_FLTPOL.FLT1POL Mask                */
#define FTM_FLTPOL_FLT1POL_SHIFT                 (1U)                                                /**< FTM0_FLTPOL.FLT1POL Position            */
#define FTM_FLTPOL_FLT1POL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FLTPOL_FLT1POL_SHIFT))&FTM_FLTPOL_FLT1POL_MASK) /**< FTM0_FLTPOL.FLT1POL Field               */
#define FTM_FLTPOL_FLT2POL_MASK                  (0x4U)                                              /**< FTM0_FLTPOL.FLT2POL Mask                */
#define FTM_FLTPOL_FLT2POL_SHIFT                 (2U)                                                /**< FTM0_FLTPOL.FLT2POL Position            */
#define FTM_FLTPOL_FLT2POL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FLTPOL_FLT2POL_SHIFT))&FTM_FLTPOL_FLT2POL_MASK) /**< FTM0_FLTPOL.FLT2POL Field               */
#define FTM_FLTPOL_FLT3POL_MASK                  (0x8U)                                              /**< FTM0_FLTPOL.FLT3POL Mask                */
#define FTM_FLTPOL_FLT3POL_SHIFT                 (3U)                                                /**< FTM0_FLTPOL.FLT3POL Position            */
#define FTM_FLTPOL_FLT3POL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FLTPOL_FLT3POL_SHIFT))&FTM_FLTPOL_FLT3POL_MASK) /**< FTM0_FLTPOL.FLT3POL Field               */
/** @} */

/** @name SYNCONF - Synchronization Configuration */ /** @{ */
#define FTM_SYNCONF_HWTRIGMODE_MASK              (0x1U)                                              /**< FTM0_SYNCONF.HWTRIGMODE Mask            */
#define FTM_SYNCONF_HWTRIGMODE_SHIFT             (0U)                                                /**< FTM0_SYNCONF.HWTRIGMODE Position        */
#define FTM_SYNCONF_HWTRIGMODE(x)                (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWTRIGMODE_SHIFT))&FTM_SYNCONF_HWTRIGMODE_MASK) /**< FTM0_SYNCONF.HWTRIGMODE Field           */
#define FTM_SYNCONF_CNTINC_MASK                  (0x4U)                                              /**< FTM0_SYNCONF.CNTINC Mask                */
#define FTM_SYNCONF_CNTINC_SHIFT                 (2U)                                                /**< FTM0_SYNCONF.CNTINC Position            */
#define FTM_SYNCONF_CNTINC(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_CNTINC_SHIFT))&FTM_SYNCONF_CNTINC_MASK) /**< FTM0_SYNCONF.CNTINC Field               */
#define FTM_SYNCONF_INVC_MASK                    (0x10U)                                             /**< FTM0_SYNCONF.INVC Mask                  */
#define FTM_SYNCONF_INVC_SHIFT                   (4U)                                                /**< FTM0_SYNCONF.INVC Position              */
#define FTM_SYNCONF_INVC(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_INVC_SHIFT))&FTM_SYNCONF_INVC_MASK) /**< FTM0_SYNCONF.INVC Field                 */
#define FTM_SYNCONF_SWOC_MASK                    (0x20U)                                             /**< FTM0_SYNCONF.SWOC Mask                  */
#define FTM_SYNCONF_SWOC_SHIFT                   (5U)                                                /**< FTM0_SYNCONF.SWOC Position              */
#define FTM_SYNCONF_SWOC(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWOC_SHIFT))&FTM_SYNCONF_SWOC_MASK) /**< FTM0_SYNCONF.SWOC Field                 */
#define FTM_SYNCONF_SYNCMODE_MASK                (0x80U)                                             /**< FTM0_SYNCONF.SYNCMODE Mask              */
#define FTM_SYNCONF_SYNCMODE_SHIFT               (7U)                                                /**< FTM0_SYNCONF.SYNCMODE Position          */
#define FTM_SYNCONF_SYNCMODE(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SYNCMODE_SHIFT))&FTM_SYNCONF_SYNCMODE_MASK) /**< FTM0_SYNCONF.SYNCMODE Field             */
#define FTM_SYNCONF_SWRSTCNT_MASK                (0x100U)                                            /**< FTM0_SYNCONF.SWRSTCNT Mask              */
#define FTM_SYNCONF_SWRSTCNT_SHIFT               (8U)                                                /**< FTM0_SYNCONF.SWRSTCNT Position          */
#define FTM_SYNCONF_SWRSTCNT(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWRSTCNT_SHIFT))&FTM_SYNCONF_SWRSTCNT_MASK) /**< FTM0_SYNCONF.SWRSTCNT Field             */
#define FTM_SYNCONF_SWWRBUF_MASK                 (0x200U)                                            /**< FTM0_SYNCONF.SWWRBUF Mask               */
#define FTM_SYNCONF_SWWRBUF_SHIFT                (9U)                                                /**< FTM0_SYNCONF.SWWRBUF Position           */
#define FTM_SYNCONF_SWWRBUF(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWWRBUF_SHIFT))&FTM_SYNCONF_SWWRBUF_MASK) /**< FTM0_SYNCONF.SWWRBUF Field              */
#define FTM_SYNCONF_SWOM_MASK                    (0x400U)                                            /**< FTM0_SYNCONF.SWOM Mask                  */
#define FTM_SYNCONF_SWOM_SHIFT                   (10U)                                               /**< FTM0_SYNCONF.SWOM Position              */
#define FTM_SYNCONF_SWOM(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWOM_SHIFT))&FTM_SYNCONF_SWOM_MASK) /**< FTM0_SYNCONF.SWOM Field                 */
#define FTM_SYNCONF_SWINVC_MASK                  (0x800U)                                            /**< FTM0_SYNCONF.SWINVC Mask                */
#define FTM_SYNCONF_SWINVC_SHIFT                 (11U)                                               /**< FTM0_SYNCONF.SWINVC Position            */
#define FTM_SYNCONF_SWINVC(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWINVC_SHIFT))&FTM_SYNCONF_SWINVC_MASK) /**< FTM0_SYNCONF.SWINVC Field               */
#define FTM_SYNCONF_SWSOC_MASK                   (0x1000U)                                           /**< FTM0_SYNCONF.SWSOC Mask                 */
#define FTM_SYNCONF_SWSOC_SHIFT                  (12U)                                               /**< FTM0_SYNCONF.SWSOC Position             */
#define FTM_SYNCONF_SWSOC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWSOC_SHIFT))&FTM_SYNCONF_SWSOC_MASK) /**< FTM0_SYNCONF.SWSOC Field                */
#define FTM_SYNCONF_HWRSTCNT_MASK                (0x10000U)                                          /**< FTM0_SYNCONF.HWRSTCNT Mask              */
#define FTM_SYNCONF_HWRSTCNT_SHIFT               (16U)                                               /**< FTM0_SYNCONF.HWRSTCNT Position          */
#define FTM_SYNCONF_HWRSTCNT(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWRSTCNT_SHIFT))&FTM_SYNCONF_HWRSTCNT_MASK) /**< FTM0_SYNCONF.HWRSTCNT Field             */
#define FTM_SYNCONF_HWWRBUF_MASK                 (0x20000U)                                          /**< FTM0_SYNCONF.HWWRBUF Mask               */
#define FTM_SYNCONF_HWWRBUF_SHIFT                (17U)                                               /**< FTM0_SYNCONF.HWWRBUF Position           */
#define FTM_SYNCONF_HWWRBUF(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWWRBUF_SHIFT))&FTM_SYNCONF_HWWRBUF_MASK) /**< FTM0_SYNCONF.HWWRBUF Field              */
#define FTM_SYNCONF_HWOM_MASK                    (0x40000U)                                          /**< FTM0_SYNCONF.HWOM Mask                  */
#define FTM_SYNCONF_HWOM_SHIFT                   (18U)                                               /**< FTM0_SYNCONF.HWOM Position              */
#define FTM_SYNCONF_HWOM(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWOM_SHIFT))&FTM_SYNCONF_HWOM_MASK) /**< FTM0_SYNCONF.HWOM Field                 */
#define FTM_SYNCONF_HWINVC_MASK                  (0x80000U)                                          /**< FTM0_SYNCONF.HWINVC Mask                */
#define FTM_SYNCONF_HWINVC_SHIFT                 (19U)                                               /**< FTM0_SYNCONF.HWINVC Position            */
#define FTM_SYNCONF_HWINVC(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWINVC_SHIFT))&FTM_SYNCONF_HWINVC_MASK) /**< FTM0_SYNCONF.HWINVC Field               */
#define FTM_SYNCONF_HWSOC_MASK                   (0x100000U)                                         /**< FTM0_SYNCONF.HWSOC Mask                 */
#define FTM_SYNCONF_HWSOC_SHIFT                  (20U)                                               /**< FTM0_SYNCONF.HWSOC Position             */
#define FTM_SYNCONF_HWSOC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWSOC_SHIFT))&FTM_SYNCONF_HWSOC_MASK) /**< FTM0_SYNCONF.HWSOC Field                */
/** @} */

/** @name INVCTRL - FTM Inverting Control */ /** @{ */
#define FTM_INVCTRL_INV0EN_MASK                  (0x1U)                                              /**< FTM0_INVCTRL.INV0EN Mask                */
#define FTM_INVCTRL_INV0EN_SHIFT                 (0U)                                                /**< FTM0_INVCTRL.INV0EN Position            */
#define FTM_INVCTRL_INV0EN(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_INVCTRL_INV0EN_SHIFT))&FTM_INVCTRL_INV0EN_MASK) /**< FTM0_INVCTRL.INV0EN Field               */
#define FTM_INVCTRL_INV1EN_MASK                  (0x2U)                                              /**< FTM0_INVCTRL.INV1EN Mask                */
#define FTM_INVCTRL_INV1EN_SHIFT                 (1U)                                                /**< FTM0_INVCTRL.INV1EN Position            */
#define FTM_INVCTRL_INV1EN(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_INVCTRL_INV1EN_SHIFT))&FTM_INVCTRL_INV1EN_MASK) /**< FTM0_INVCTRL.INV1EN Field               */
#define FTM_INVCTRL_INV2EN_MASK                  (0x4U)                                              /**< FTM0_INVCTRL.INV2EN Mask                */
#define FTM_INVCTRL_INV2EN_SHIFT                 (2U)                                                /**< FTM0_INVCTRL.INV2EN Position            */
#define FTM_INVCTRL_INV2EN(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_INVCTRL_INV2EN_SHIFT))&FTM_INVCTRL_INV2EN_MASK) /**< FTM0_INVCTRL.INV2EN Field               */
#define FTM_INVCTRL_INV3EN_MASK                  (0x8U)                                              /**< FTM0_INVCTRL.INV3EN Mask                */
#define FTM_INVCTRL_INV3EN_SHIFT                 (3U)                                                /**< FTM0_INVCTRL.INV3EN Position            */
#define FTM_INVCTRL_INV3EN(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_INVCTRL_INV3EN_SHIFT))&FTM_INVCTRL_INV3EN_MASK) /**< FTM0_INVCTRL.INV3EN Field               */
/** @} */

/** @name SWOCTRL - FTM Software Output Control */ /** @{ */
#define FTM_SWOCTRL_CH0OC_MASK                   (0x1U)                                              /**< FTM0_SWOCTRL.CH0OC Mask                 */
#define FTM_SWOCTRL_CH0OC_SHIFT                  (0U)                                                /**< FTM0_SWOCTRL.CH0OC Position             */
#define FTM_SWOCTRL_CH0OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH0OC_SHIFT))&FTM_SWOCTRL_CH0OC_MASK) /**< FTM0_SWOCTRL.CH0OC Field                */
#define FTM_SWOCTRL_CH1OC_MASK                   (0x2U)                                              /**< FTM0_SWOCTRL.CH1OC Mask                 */
#define FTM_SWOCTRL_CH1OC_SHIFT                  (1U)                                                /**< FTM0_SWOCTRL.CH1OC Position             */
#define FTM_SWOCTRL_CH1OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH1OC_SHIFT))&FTM_SWOCTRL_CH1OC_MASK) /**< FTM0_SWOCTRL.CH1OC Field                */
#define FTM_SWOCTRL_CH2OC_MASK                   (0x4U)                                              /**< FTM0_SWOCTRL.CH2OC Mask                 */
#define FTM_SWOCTRL_CH2OC_SHIFT                  (2U)                                                /**< FTM0_SWOCTRL.CH2OC Position             */
#define FTM_SWOCTRL_CH2OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH2OC_SHIFT))&FTM_SWOCTRL_CH2OC_MASK) /**< FTM0_SWOCTRL.CH2OC Field                */
#define FTM_SWOCTRL_CH3OC_MASK                   (0x8U)                                              /**< FTM0_SWOCTRL.CH3OC Mask                 */
#define FTM_SWOCTRL_CH3OC_SHIFT                  (3U)                                                /**< FTM0_SWOCTRL.CH3OC Position             */
#define FTM_SWOCTRL_CH3OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH3OC_SHIFT))&FTM_SWOCTRL_CH3OC_MASK) /**< FTM0_SWOCTRL.CH3OC Field                */
#define FTM_SWOCTRL_CH4OC_MASK                   (0x10U)                                             /**< FTM0_SWOCTRL.CH4OC Mask                 */
#define FTM_SWOCTRL_CH4OC_SHIFT                  (4U)                                                /**< FTM0_SWOCTRL.CH4OC Position             */
#define FTM_SWOCTRL_CH4OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH4OC_SHIFT))&FTM_SWOCTRL_CH4OC_MASK) /**< FTM0_SWOCTRL.CH4OC Field                */
#define FTM_SWOCTRL_CH5OC_MASK                   (0x20U)                                             /**< FTM0_SWOCTRL.CH5OC Mask                 */
#define FTM_SWOCTRL_CH5OC_SHIFT                  (5U)                                                /**< FTM0_SWOCTRL.CH5OC Position             */
#define FTM_SWOCTRL_CH5OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH5OC_SHIFT))&FTM_SWOCTRL_CH5OC_MASK) /**< FTM0_SWOCTRL.CH5OC Field                */
#define FTM_SWOCTRL_CH6OC_MASK                   (0x40U)                                             /**< FTM0_SWOCTRL.CH6OC Mask                 */
#define FTM_SWOCTRL_CH6OC_SHIFT                  (6U)                                                /**< FTM0_SWOCTRL.CH6OC Position             */
#define FTM_SWOCTRL_CH6OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH6OC_SHIFT))&FTM_SWOCTRL_CH6OC_MASK) /**< FTM0_SWOCTRL.CH6OC Field                */
#define FTM_SWOCTRL_CH7OC_MASK                   (0x80U)                                             /**< FTM0_SWOCTRL.CH7OC Mask                 */
#define FTM_SWOCTRL_CH7OC_SHIFT                  (7U)                                                /**< FTM0_SWOCTRL.CH7OC Position             */
#define FTM_SWOCTRL_CH7OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH7OC_SHIFT))&FTM_SWOCTRL_CH7OC_MASK) /**< FTM0_SWOCTRL.CH7OC Field                */
#define FTM_SWOCTRL_CH0OCV_MASK                  (0x100U)                                            /**< FTM0_SWOCTRL.CH0OCV Mask                */
#define FTM_SWOCTRL_CH0OCV_SHIFT                 (8U)                                                /**< FTM0_SWOCTRL.CH0OCV Position            */
#define FTM_SWOCTRL_CH0OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH0OCV_SHIFT))&FTM_SWOCTRL_CH0OCV_MASK) /**< FTM0_SWOCTRL.CH0OCV Field               */
#define FTM_SWOCTRL_CH1OCV_MASK                  (0x200U)                                            /**< FTM0_SWOCTRL.CH1OCV Mask                */
#define FTM_SWOCTRL_CH1OCV_SHIFT                 (9U)                                                /**< FTM0_SWOCTRL.CH1OCV Position            */
#define FTM_SWOCTRL_CH1OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH1OCV_SHIFT))&FTM_SWOCTRL_CH1OCV_MASK) /**< FTM0_SWOCTRL.CH1OCV Field               */
#define FTM_SWOCTRL_CH2OCV_MASK                  (0x400U)                                            /**< FTM0_SWOCTRL.CH2OCV Mask                */
#define FTM_SWOCTRL_CH2OCV_SHIFT                 (10U)                                               /**< FTM0_SWOCTRL.CH2OCV Position            */
#define FTM_SWOCTRL_CH2OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH2OCV_SHIFT))&FTM_SWOCTRL_CH2OCV_MASK) /**< FTM0_SWOCTRL.CH2OCV Field               */
#define FTM_SWOCTRL_CH3OCV_MASK                  (0x800U)                                            /**< FTM0_SWOCTRL.CH3OCV Mask                */
#define FTM_SWOCTRL_CH3OCV_SHIFT                 (11U)                                               /**< FTM0_SWOCTRL.CH3OCV Position            */
#define FTM_SWOCTRL_CH3OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH3OCV_SHIFT))&FTM_SWOCTRL_CH3OCV_MASK) /**< FTM0_SWOCTRL.CH3OCV Field               */
#define FTM_SWOCTRL_CH4OCV_MASK                  (0x1000U)                                           /**< FTM0_SWOCTRL.CH4OCV Mask                */
#define FTM_SWOCTRL_CH4OCV_SHIFT                 (12U)                                               /**< FTM0_SWOCTRL.CH4OCV Position            */
#define FTM_SWOCTRL_CH4OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH4OCV_SHIFT))&FTM_SWOCTRL_CH4OCV_MASK) /**< FTM0_SWOCTRL.CH4OCV Field               */
#define FTM_SWOCTRL_CH5OCV_MASK                  (0x2000U)                                           /**< FTM0_SWOCTRL.CH5OCV Mask                */
#define FTM_SWOCTRL_CH5OCV_SHIFT                 (13U)                                               /**< FTM0_SWOCTRL.CH5OCV Position            */
#define FTM_SWOCTRL_CH5OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH5OCV_SHIFT))&FTM_SWOCTRL_CH5OCV_MASK) /**< FTM0_SWOCTRL.CH5OCV Field               */
#define FTM_SWOCTRL_CH6OCV_MASK                  (0x4000U)                                           /**< FTM0_SWOCTRL.CH6OCV Mask                */
#define FTM_SWOCTRL_CH6OCV_SHIFT                 (14U)                                               /**< FTM0_SWOCTRL.CH6OCV Position            */
#define FTM_SWOCTRL_CH6OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH6OCV_SHIFT))&FTM_SWOCTRL_CH6OCV_MASK) /**< FTM0_SWOCTRL.CH6OCV Field               */
#define FTM_SWOCTRL_CH7OCV_MASK                  (0x8000U)                                           /**< FTM0_SWOCTRL.CH7OCV Mask                */
#define FTM_SWOCTRL_CH7OCV_SHIFT                 (15U)                                               /**< FTM0_SWOCTRL.CH7OCV Position            */
#define FTM_SWOCTRL_CH7OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH7OCV_SHIFT))&FTM_SWOCTRL_CH7OCV_MASK) /**< FTM0_SWOCTRL.CH7OCV Field               */
/** @} */

/** @name PWMLOAD - FTM PWM Load */ /** @{ */
#define FTM_PWMLOAD_CH0SEL_MASK                  (0x1U)                                              /**< FTM0_PWMLOAD.CH0SEL Mask                */
#define FTM_PWMLOAD_CH0SEL_SHIFT                 (0U)                                                /**< FTM0_PWMLOAD.CH0SEL Position            */
#define FTM_PWMLOAD_CH0SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH0SEL_SHIFT))&FTM_PWMLOAD_CH0SEL_MASK) /**< FTM0_PWMLOAD.CH0SEL Field               */
#define FTM_PWMLOAD_CH1SEL_MASK                  (0x2U)                                              /**< FTM0_PWMLOAD.CH1SEL Mask                */
#define FTM_PWMLOAD_CH1SEL_SHIFT                 (1U)                                                /**< FTM0_PWMLOAD.CH1SEL Position            */
#define FTM_PWMLOAD_CH1SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH1SEL_SHIFT))&FTM_PWMLOAD_CH1SEL_MASK) /**< FTM0_PWMLOAD.CH1SEL Field               */
#define FTM_PWMLOAD_CH2SEL_MASK                  (0x4U)                                              /**< FTM0_PWMLOAD.CH2SEL Mask                */
#define FTM_PWMLOAD_CH2SEL_SHIFT                 (2U)                                                /**< FTM0_PWMLOAD.CH2SEL Position            */
#define FTM_PWMLOAD_CH2SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH2SEL_SHIFT))&FTM_PWMLOAD_CH2SEL_MASK) /**< FTM0_PWMLOAD.CH2SEL Field               */
#define FTM_PWMLOAD_CH3SEL_MASK                  (0x8U)                                              /**< FTM0_PWMLOAD.CH3SEL Mask                */
#define FTM_PWMLOAD_CH3SEL_SHIFT                 (3U)                                                /**< FTM0_PWMLOAD.CH3SEL Position            */
#define FTM_PWMLOAD_CH3SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH3SEL_SHIFT))&FTM_PWMLOAD_CH3SEL_MASK) /**< FTM0_PWMLOAD.CH3SEL Field               */
#define FTM_PWMLOAD_CH4SEL_MASK                  (0x10U)                                             /**< FTM0_PWMLOAD.CH4SEL Mask                */
#define FTM_PWMLOAD_CH4SEL_SHIFT                 (4U)                                                /**< FTM0_PWMLOAD.CH4SEL Position            */
#define FTM_PWMLOAD_CH4SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH4SEL_SHIFT))&FTM_PWMLOAD_CH4SEL_MASK) /**< FTM0_PWMLOAD.CH4SEL Field               */
#define FTM_PWMLOAD_CH5SEL_MASK                  (0x20U)                                             /**< FTM0_PWMLOAD.CH5SEL Mask                */
#define FTM_PWMLOAD_CH5SEL_SHIFT                 (5U)                                                /**< FTM0_PWMLOAD.CH5SEL Position            */
#define FTM_PWMLOAD_CH5SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH5SEL_SHIFT))&FTM_PWMLOAD_CH5SEL_MASK) /**< FTM0_PWMLOAD.CH5SEL Field               */
#define FTM_PWMLOAD_CH6SEL_MASK                  (0x40U)                                             /**< FTM0_PWMLOAD.CH6SEL Mask                */
#define FTM_PWMLOAD_CH6SEL_SHIFT                 (6U)                                                /**< FTM0_PWMLOAD.CH6SEL Position            */
#define FTM_PWMLOAD_CH6SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH6SEL_SHIFT))&FTM_PWMLOAD_CH6SEL_MASK) /**< FTM0_PWMLOAD.CH6SEL Field               */
#define FTM_PWMLOAD_CH7SEL_MASK                  (0x80U)                                             /**< FTM0_PWMLOAD.CH7SEL Mask                */
#define FTM_PWMLOAD_CH7SEL_SHIFT                 (7U)                                                /**< FTM0_PWMLOAD.CH7SEL Position            */
#define FTM_PWMLOAD_CH7SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH7SEL_SHIFT))&FTM_PWMLOAD_CH7SEL_MASK) /**< FTM0_PWMLOAD.CH7SEL Field               */
#define FTM_PWMLOAD_HCSEL_MASK                   (0x100U)                                            /**< FTM0_PWMLOAD.HCSEL Mask                 */
#define FTM_PWMLOAD_HCSEL_SHIFT                  (8U)                                                /**< FTM0_PWMLOAD.HCSEL Position             */
#define FTM_PWMLOAD_HCSEL(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_HCSEL_SHIFT))&FTM_PWMLOAD_HCSEL_MASK) /**< FTM0_PWMLOAD.HCSEL Field                */
#define FTM_PWMLOAD_LDOK_MASK                    (0x200U)                                            /**< FTM0_PWMLOAD.LDOK Mask                  */
#define FTM_PWMLOAD_LDOK_SHIFT                   (9U)                                                /**< FTM0_PWMLOAD.LDOK Position              */
#define FTM_PWMLOAD_LDOK(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_LDOK_SHIFT))&FTM_PWMLOAD_LDOK_MASK) /**< FTM0_PWMLOAD.LDOK Field                 */
#define FTM_PWMLOAD_GLEN_MASK                    (0x400U)                                            /**< FTM0_PWMLOAD.GLEN Mask                  */
#define FTM_PWMLOAD_GLEN_SHIFT                   (10U)                                               /**< FTM0_PWMLOAD.GLEN Position              */
#define FTM_PWMLOAD_GLEN(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_GLEN_SHIFT))&FTM_PWMLOAD_GLEN_MASK) /**< FTM0_PWMLOAD.GLEN Field                 */
#define FTM_PWMLOAD_GLDOK_MASK                   (0x800U)                                            /**< FTM0_PWMLOAD.GLDOK Mask                 */
#define FTM_PWMLOAD_GLDOK_SHIFT                  (11U)                                               /**< FTM0_PWMLOAD.GLDOK Position             */
#define FTM_PWMLOAD_GLDOK(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_GLDOK_SHIFT))&FTM_PWMLOAD_GLDOK_MASK) /**< FTM0_PWMLOAD.GLDOK Field                */
/** @} */

/** @name HCR - Half Cycle Register */ /** @{ */
#define FTM_HCR_HCVAL_MASK                       (0xFFFFU)                                           /**< FTM0_HCR.HCVAL Mask                     */
#define FTM_HCR_HCVAL_SHIFT                      (0U)                                                /**< FTM0_HCR.HCVAL Position                 */
#define FTM_HCR_HCVAL(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_HCR_HCVAL_SHIFT))&FTM_HCR_HCVAL_MASK) /**< FTM0_HCR.HCVAL Field                    */
/** @} */

/** @name PAIR0DEADTIME - Pair 0 Deadtime Configuration */ /** @{ */
#define FTM_PAIR0DEADTIME_DTVAL_MASK             (0x3FU)                                             /**< FTM0_PAIR0DEADTIME.DTVAL Mask           */
#define FTM_PAIR0DEADTIME_DTVAL_SHIFT            (0U)                                                /**< FTM0_PAIR0DEADTIME.DTVAL Position       */
#define FTM_PAIR0DEADTIME_DTVAL(x)               (((uint32_t)(((uint32_t)(x))<<FTM_PAIR0DEADTIME_DTVAL_SHIFT))&FTM_PAIR0DEADTIME_DTVAL_MASK) /**< FTM0_PAIR0DEADTIME.DTVAL Field          */
#define FTM_PAIR0DEADTIME_DTPS_MASK              (0xC0U)                                             /**< FTM0_PAIR0DEADTIME.DTPS Mask            */
#define FTM_PAIR0DEADTIME_DTPS_SHIFT             (6U)                                                /**< FTM0_PAIR0DEADTIME.DTPS Position        */
#define FTM_PAIR0DEADTIME_DTPS(x)                (((uint32_t)(((uint32_t)(x))<<FTM_PAIR0DEADTIME_DTPS_SHIFT))&FTM_PAIR0DEADTIME_DTPS_MASK) /**< FTM0_PAIR0DEADTIME.DTPS Field           */
#define FTM_PAIR0DEADTIME_DTVALEX_MASK           (0xF0000U)                                          /**< FTM0_PAIR0DEADTIME.DTVALEX Mask         */
#define FTM_PAIR0DEADTIME_DTVALEX_SHIFT          (16U)                                               /**< FTM0_PAIR0DEADTIME.DTVALEX Position     */
#define FTM_PAIR0DEADTIME_DTVALEX(x)             (((uint32_t)(((uint32_t)(x))<<FTM_PAIR0DEADTIME_DTVALEX_SHIFT))&FTM_PAIR0DEADTIME_DTVALEX_MASK) /**< FTM0_PAIR0DEADTIME.DTVALEX Field        */
/** @} */

/** @name PAIR1DEADTIME - Pair 1 Deadtime Configuration */ /** @{ */
#define FTM_PAIR1DEADTIME_DTVAL_MASK             (0x3FU)                                             /**< FTM0_PAIR1DEADTIME.DTVAL Mask           */
#define FTM_PAIR1DEADTIME_DTVAL_SHIFT            (0U)                                                /**< FTM0_PAIR1DEADTIME.DTVAL Position       */
#define FTM_PAIR1DEADTIME_DTVAL(x)               (((uint32_t)(((uint32_t)(x))<<FTM_PAIR1DEADTIME_DTVAL_SHIFT))&FTM_PAIR1DEADTIME_DTVAL_MASK) /**< FTM0_PAIR1DEADTIME.DTVAL Field          */
#define FTM_PAIR1DEADTIME_DTPS_MASK              (0xC0U)                                             /**< FTM0_PAIR1DEADTIME.DTPS Mask            */
#define FTM_PAIR1DEADTIME_DTPS_SHIFT             (6U)                                                /**< FTM0_PAIR1DEADTIME.DTPS Position        */
#define FTM_PAIR1DEADTIME_DTPS(x)                (((uint32_t)(((uint32_t)(x))<<FTM_PAIR1DEADTIME_DTPS_SHIFT))&FTM_PAIR1DEADTIME_DTPS_MASK) /**< FTM0_PAIR1DEADTIME.DTPS Field           */
#define FTM_PAIR1DEADTIME_DTVALEX_MASK           (0xF0000U)                                          /**< FTM0_PAIR1DEADTIME.DTVALEX Mask         */
#define FTM_PAIR1DEADTIME_DTVALEX_SHIFT          (16U)                                               /**< FTM0_PAIR1DEADTIME.DTVALEX Position     */
#define FTM_PAIR1DEADTIME_DTVALEX(x)             (((uint32_t)(((uint32_t)(x))<<FTM_PAIR1DEADTIME_DTVALEX_SHIFT))&FTM_PAIR1DEADTIME_DTVALEX_MASK) /**< FTM0_PAIR1DEADTIME.DTVALEX Field        */
/** @} */

/** @name PAIR2DEADTIME - Pair 2 Deadtime Configuration */ /** @{ */
#define FTM_PAIR2DEADTIME_DTVAL_MASK             (0x3FU)                                             /**< FTM0_PAIR2DEADTIME.DTVAL Mask           */
#define FTM_PAIR2DEADTIME_DTVAL_SHIFT            (0U)                                                /**< FTM0_PAIR2DEADTIME.DTVAL Position       */
#define FTM_PAIR2DEADTIME_DTVAL(x)               (((uint32_t)(((uint32_t)(x))<<FTM_PAIR2DEADTIME_DTVAL_SHIFT))&FTM_PAIR2DEADTIME_DTVAL_MASK) /**< FTM0_PAIR2DEADTIME.DTVAL Field          */
#define FTM_PAIR2DEADTIME_DTPS_MASK              (0xC0U)                                             /**< FTM0_PAIR2DEADTIME.DTPS Mask            */
#define FTM_PAIR2DEADTIME_DTPS_SHIFT             (6U)                                                /**< FTM0_PAIR2DEADTIME.DTPS Position        */
#define FTM_PAIR2DEADTIME_DTPS(x)                (((uint32_t)(((uint32_t)(x))<<FTM_PAIR2DEADTIME_DTPS_SHIFT))&FTM_PAIR2DEADTIME_DTPS_MASK) /**< FTM0_PAIR2DEADTIME.DTPS Field           */
#define FTM_PAIR2DEADTIME_DTVALEX_MASK           (0xF0000U)                                          /**< FTM0_PAIR2DEADTIME.DTVALEX Mask         */
#define FTM_PAIR2DEADTIME_DTVALEX_SHIFT          (16U)                                               /**< FTM0_PAIR2DEADTIME.DTVALEX Position     */
#define FTM_PAIR2DEADTIME_DTVALEX(x)             (((uint32_t)(((uint32_t)(x))<<FTM_PAIR2DEADTIME_DTVALEX_SHIFT))&FTM_PAIR2DEADTIME_DTVALEX_MASK) /**< FTM0_PAIR2DEADTIME.DTVALEX Field        */
/** @} */

/** @name PAIR3DEADTIME - Pair 3 Deadtime Configuration */ /** @{ */
#define FTM_PAIR3DEADTIME_DTVAL_MASK             (0x3FU)                                             /**< FTM0_PAIR3DEADTIME.DTVAL Mask           */
#define FTM_PAIR3DEADTIME_DTVAL_SHIFT            (0U)                                                /**< FTM0_PAIR3DEADTIME.DTVAL Position       */
#define FTM_PAIR3DEADTIME_DTVAL(x)               (((uint32_t)(((uint32_t)(x))<<FTM_PAIR3DEADTIME_DTVAL_SHIFT))&FTM_PAIR3DEADTIME_DTVAL_MASK) /**< FTM0_PAIR3DEADTIME.DTVAL Field          */
#define FTM_PAIR3DEADTIME_DTPS_MASK              (0xC0U)                                             /**< FTM0_PAIR3DEADTIME.DTPS Mask            */
#define FTM_PAIR3DEADTIME_DTPS_SHIFT             (6U)                                                /**< FTM0_PAIR3DEADTIME.DTPS Position        */
#define FTM_PAIR3DEADTIME_DTPS(x)                (((uint32_t)(((uint32_t)(x))<<FTM_PAIR3DEADTIME_DTPS_SHIFT))&FTM_PAIR3DEADTIME_DTPS_MASK) /**< FTM0_PAIR3DEADTIME.DTPS Field           */
#define FTM_PAIR3DEADTIME_DTVALEX_MASK           (0xF0000U)                                          /**< FTM0_PAIR3DEADTIME.DTVALEX Mask         */
#define FTM_PAIR3DEADTIME_DTVALEX_SHIFT          (16U)                                               /**< FTM0_PAIR3DEADTIME.DTVALEX Position     */
#define FTM_PAIR3DEADTIME_DTVALEX(x)             (((uint32_t)(((uint32_t)(x))<<FTM_PAIR3DEADTIME_DTVALEX_SHIFT))&FTM_PAIR3DEADTIME_DTVALEX_MASK) /**< FTM0_PAIR3DEADTIME.DTVALEX Field        */
/** @} */

/** @} */ /* End group FTM_Register_Masks_GROUP */


/* FTM0 - Peripheral instance base addresses */
#define FTM0_BasePtr                   0x40038000UL //!< Peripheral base address
#define FTM0                           ((FTM_Type *) FTM0_BasePtr) //!< Freescale base pointer
#define FTM0_BASE_PTR                  (FTM0) //!< Freescale style base pointer
#define FTM0_IRQS { FTM0_Ch0_Ch1_IRQn, FTM0_Ch2_Ch3_IRQn, FTM0_Ch4_Ch5_IRQn, FTM0_Ch6_Ch7_IRQn, FTM0_Fault_IRQn, FTM0_Ovf_Reload_IRQn,  }


/** @} */ /* End group FTM_Peripheral_access_layer_GROUP */


/** @brief C Struct for FTM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FTM_Peripheral_access_layer_GROUP FTM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FTM1 (derived from FTM0)             ================ */
/* ================================================================================ */

/**
 * @brief FlexTimer Module (8 channels)
 */

/* FTM1 - Peripheral instance base addresses */
#define FTM1_BasePtr                   0x40039000UL //!< Peripheral base address
#define FTM1                           ((FTM_Type *) FTM1_BasePtr) //!< Freescale base pointer
#define FTM1_BASE_PTR                  (FTM1) //!< Freescale style base pointer
#define FTM1_IRQS { FTM1_Ch0_Ch1_IRQn, FTM1_Ch2_Ch3_IRQn, FTM1_Ch4_Ch5_IRQn, FTM1_Ch6_Ch7_IRQn, FTM1_Fault_IRQn, FTM1_Ovf_Reload_IRQn,  }


/** @} */ /* End group FTM_Peripheral_access_layer_GROUP */


/** @brief C Struct for FTM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FTM_Peripheral_access_layer_GROUP FTM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FTM2 (derived from FTM0)             ================ */
/* ================================================================================ */

/**
 * @brief FlexTimer Module (8 channels)
 */

/* FTM2 - Peripheral instance base addresses */
#define FTM2_BasePtr                   0x4003A000UL //!< Peripheral base address
#define FTM2                           ((FTM_Type *) FTM2_BasePtr) //!< Freescale base pointer
#define FTM2_BASE_PTR                  (FTM2) //!< Freescale style base pointer
#define FTM2_IRQS { FTM2_Ch0_Ch1_IRQn, FTM2_Ch2_Ch3_IRQn, FTM2_Ch4_Ch5_IRQn, FTM2_Ch6_Ch7_IRQn, FTM2_Fault_IRQn, FTM2_Ovf_Reload_IRQn,  }


/** @} */ /* End group FTM_Peripheral_access_layer_GROUP */


/** @brief C Struct for FTM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FTM_Peripheral_access_layer_GROUP FTM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FTM3 (derived from FTM0)             ================ */
/* ================================================================================ */

/**
 * @brief FlexTimer Module (8 channels)
 */

/* FTM3 - Peripheral instance base addresses */
#define FTM3_BasePtr                   0x40026000UL //!< Peripheral base address
#define FTM3                           ((FTM_Type *) FTM3_BasePtr) //!< Freescale base pointer
#define FTM3_BASE_PTR                  (FTM3) //!< Freescale style base pointer
#define FTM3_IRQS { FTM3_Ch0_Ch1_IRQn, FTM3_Ch2_Ch3_IRQn, FTM3_Ch4_Ch5_IRQn, FTM3_Ch6_Ch7_IRQn, FTM3_Fault_IRQn, FTM3_Ovf_Reload_IRQn,  }


/** @} */ /* End group FTM_Peripheral_access_layer_GROUP */


/** @brief C Struct for GPIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           GPIOA (file:GPIOA_S32K)              ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */
/**
 * @struct GPIO_Type
 * @brief  C Struct allowing access to GPIO registers
 */
typedef struct GPIO_Type {
   __IO uint32_t  PDOR;                         /**< 0000: Port Data Output Register                                    */
   __O  uint32_t  PSOR;                         /**< 0004: Port Set Output Register                                     */
   __O  uint32_t  PCOR;                         /**< 0008: Port Clear Output Register                                   */
   __O  uint32_t  PTOR;                         /**< 000C: Port Toggle Output Register                                  */
   __I  uint32_t  PDIR;                         /**< 0010: Port Data Input Register                                     */
   __IO uint32_t  PDDR;                         /**< 0014: Port Data Direction Register                                 */
   __IO uint32_t  PIDR;                         /**< 0018: Port Input Disable Register                                  */
} GPIO_Type;


/** @brief Register Masks for GPIO */

/* -------------------------------------------------------------------------------- */
/* -----------     'GPIOA' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup GPIO_Register_Masks_GROUP GPIO Register Masks */
/** @{ */

/** @} */ /* End group GPIO_Register_Masks_GROUP */


/* GPIOA - Peripheral instance base addresses */
#define GPIOA_BasePtr                  0x400FF000UL //!< Peripheral base address
#define GPIOA                          ((GPIO_Type *) GPIOA_BasePtr) //!< Freescale base pointer
#define GPIOA_BASE_PTR                 (GPIOA) //!< Freescale style base pointer

/** @} */ /* End group GPIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for GPIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           GPIOB (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOB - Peripheral instance base addresses */
#define GPIOB_BasePtr                  0x400FF040UL //!< Peripheral base address
#define GPIOB                          ((GPIO_Type *) GPIOB_BasePtr) //!< Freescale base pointer
#define GPIOB_BASE_PTR                 (GPIOB) //!< Freescale style base pointer

/** @} */ /* End group GPIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for GPIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           GPIOC (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOC - Peripheral instance base addresses */
#define GPIOC_BasePtr                  0x400FF080UL //!< Peripheral base address
#define GPIOC                          ((GPIO_Type *) GPIOC_BasePtr) //!< Freescale base pointer
#define GPIOC_BASE_PTR                 (GPIOC) //!< Freescale style base pointer

/** @} */ /* End group GPIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for GPIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           GPIOD (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOD - Peripheral instance base addresses */
#define GPIOD_BasePtr                  0x400FF0C0UL //!< Peripheral base address
#define GPIOD                          ((GPIO_Type *) GPIOD_BasePtr) //!< Freescale base pointer
#define GPIOD_BASE_PTR                 (GPIOD) //!< Freescale style base pointer

/** @} */ /* End group GPIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for GPIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           GPIOE (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOE - Peripheral instance base addresses */
#define GPIOE_BasePtr                  0x400FF100UL //!< Peripheral base address
#define GPIOE                          ((GPIO_Type *) GPIOE_BasePtr) //!< Freescale base pointer
#define GPIOE_BASE_PTR                 (GPIOE) //!< Freescale style base pointer

/** @} */ /* End group GPIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for LMEM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LMEM_Peripheral_access_layer_GROUP LMEM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LMEM (file:LMEM_S32K14x)             ================ */
/* ================================================================================ */

/**
 * @brief Local Memory Controller
 */
/**
 * @struct LMEM_Type
 * @brief  C Struct allowing access to LMEM registers
 */
typedef struct LMEM_Type {
   __IO uint32_t  PCCCR;                        /**< 0000: Cache control register                                       */
   __IO uint32_t  PCCLCR;                       /**< 0004: Cache line control register                                  */
   __IO uint32_t  PCCSAR;                       /**< 0008: Cache search address register                                */
   __IO uint32_t  PCCCVR;                       /**< 000C: Cache read/write value register                              */
        uint8_t   RESERVED_0[16];               /**< 0010: 0x10 bytes                                                   */
   __IO uint32_t  PCCRMR;                       /**< 0020: Cache regions mode register                                  */
} LMEM_Type;


/** @brief Register Masks for LMEM */

/* -------------------------------------------------------------------------------- */
/* -----------     'LMEM' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup LMEM_Register_Masks_GROUP LMEM Register Masks */
/** @{ */

/** @name PCCCR - Cache control register */ /** @{ */
#define LMEM_PCCCR_ENCACHE_MASK                  (0x1U)                                              /**< LMEM_PCCCR.ENCACHE Mask                 */
#define LMEM_PCCCR_ENCACHE_SHIFT                 (0U)                                                /**< LMEM_PCCCR.ENCACHE Position             */
#define LMEM_PCCCR_ENCACHE(x)                    (((uint32_t)(((uint32_t)(x))<<LMEM_PCCCR_ENCACHE_SHIFT))&LMEM_PCCCR_ENCACHE_MASK) /**< LMEM_PCCCR.ENCACHE Field                */
#define LMEM_PCCCR_PCCR2_MASK                    (0x4U)                                              /**< LMEM_PCCCR.PCCR2 Mask                   */
#define LMEM_PCCCR_PCCR2_SHIFT                   (2U)                                                /**< LMEM_PCCCR.PCCR2 Position               */
#define LMEM_PCCCR_PCCR2(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PCCCR_PCCR2_SHIFT))&LMEM_PCCCR_PCCR2_MASK) /**< LMEM_PCCCR.PCCR2 Field                  */
#define LMEM_PCCCR_PCCR3_MASK                    (0x8U)                                              /**< LMEM_PCCCR.PCCR3 Mask                   */
#define LMEM_PCCCR_PCCR3_SHIFT                   (3U)                                                /**< LMEM_PCCCR.PCCR3 Position               */
#define LMEM_PCCCR_PCCR3(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PCCCR_PCCR3_SHIFT))&LMEM_PCCCR_PCCR3_MASK) /**< LMEM_PCCCR.PCCR3 Field                  */
#define LMEM_PCCCR_INVW0_MASK                    (0x1000000U)                                        /**< LMEM_PCCCR.INVW0 Mask                   */
#define LMEM_PCCCR_INVW0_SHIFT                   (24U)                                               /**< LMEM_PCCCR.INVW0 Position               */
#define LMEM_PCCCR_INVW0(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PCCCR_INVW0_SHIFT))&LMEM_PCCCR_INVW0_MASK) /**< LMEM_PCCCR.INVW0 Field                  */
#define LMEM_PCCCR_PUSHW0_MASK                   (0x2000000U)                                        /**< LMEM_PCCCR.PUSHW0 Mask                  */
#define LMEM_PCCCR_PUSHW0_SHIFT                  (25U)                                               /**< LMEM_PCCCR.PUSHW0 Position              */
#define LMEM_PCCCR_PUSHW0(x)                     (((uint32_t)(((uint32_t)(x))<<LMEM_PCCCR_PUSHW0_SHIFT))&LMEM_PCCCR_PUSHW0_MASK) /**< LMEM_PCCCR.PUSHW0 Field                 */
#define LMEM_PCCCR_INVW1_MASK                    (0x4000000U)                                        /**< LMEM_PCCCR.INVW1 Mask                   */
#define LMEM_PCCCR_INVW1_SHIFT                   (26U)                                               /**< LMEM_PCCCR.INVW1 Position               */
#define LMEM_PCCCR_INVW1(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PCCCR_INVW1_SHIFT))&LMEM_PCCCR_INVW1_MASK) /**< LMEM_PCCCR.INVW1 Field                  */
#define LMEM_PCCCR_PUSHW1_MASK                   (0x8000000U)                                        /**< LMEM_PCCCR.PUSHW1 Mask                  */
#define LMEM_PCCCR_PUSHW1_SHIFT                  (27U)                                               /**< LMEM_PCCCR.PUSHW1 Position              */
#define LMEM_PCCCR_PUSHW1(x)                     (((uint32_t)(((uint32_t)(x))<<LMEM_PCCCR_PUSHW1_SHIFT))&LMEM_PCCCR_PUSHW1_MASK) /**< LMEM_PCCCR.PUSHW1 Field                 */
#define LMEM_PCCCR_GO_MASK                       (0x80000000U)                                       /**< LMEM_PCCCR.GO Mask                      */
#define LMEM_PCCCR_GO_SHIFT                      (31U)                                               /**< LMEM_PCCCR.GO Position                  */
#define LMEM_PCCCR_GO(x)                         (((uint32_t)(((uint32_t)(x))<<LMEM_PCCCR_GO_SHIFT))&LMEM_PCCCR_GO_MASK) /**< LMEM_PCCCR.GO Field                     */
/** @} */

/** @name PCCLCR - Cache line control register */ /** @{ */
#define LMEM_PCCLCR_LGO_MASK                     (0x1U)                                              /**< LMEM_PCCLCR.LGO Mask                    */
#define LMEM_PCCLCR_LGO_SHIFT                    (0U)                                                /**< LMEM_PCCLCR.LGO Position                */
#define LMEM_PCCLCR_LGO(x)                       (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_LGO_SHIFT))&LMEM_PCCLCR_LGO_MASK) /**< LMEM_PCCLCR.LGO Field                   */
#define LMEM_PCCLCR_CACHEADDR_MASK               (0x3FFCU)                                           /**< LMEM_PCCLCR.CACHEADDR Mask              */
#define LMEM_PCCLCR_CACHEADDR_SHIFT              (2U)                                                /**< LMEM_PCCLCR.CACHEADDR Position          */
#define LMEM_PCCLCR_CACHEADDR(x)                 (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_CACHEADDR_SHIFT))&LMEM_PCCLCR_CACHEADDR_MASK) /**< LMEM_PCCLCR.CACHEADDR Field             */
#define LMEM_PCCLCR_WSEL_MASK                    (0x4000U)                                           /**< LMEM_PCCLCR.WSEL Mask                   */
#define LMEM_PCCLCR_WSEL_SHIFT                   (14U)                                               /**< LMEM_PCCLCR.WSEL Position               */
#define LMEM_PCCLCR_WSEL(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_WSEL_SHIFT))&LMEM_PCCLCR_WSEL_MASK) /**< LMEM_PCCLCR.WSEL Field                  */
#define LMEM_PCCLCR_TDSEL_MASK                   (0x10000U)                                          /**< LMEM_PCCLCR.TDSEL Mask                  */
#define LMEM_PCCLCR_TDSEL_SHIFT                  (16U)                                               /**< LMEM_PCCLCR.TDSEL Position              */
#define LMEM_PCCLCR_TDSEL(x)                     (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_TDSEL_SHIFT))&LMEM_PCCLCR_TDSEL_MASK) /**< LMEM_PCCLCR.TDSEL Field                 */
#define LMEM_PCCLCR_LCIVB_MASK                   (0x100000U)                                         /**< LMEM_PCCLCR.LCIVB Mask                  */
#define LMEM_PCCLCR_LCIVB_SHIFT                  (20U)                                               /**< LMEM_PCCLCR.LCIVB Position              */
#define LMEM_PCCLCR_LCIVB(x)                     (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_LCIVB_SHIFT))&LMEM_PCCLCR_LCIVB_MASK) /**< LMEM_PCCLCR.LCIVB Field                 */
#define LMEM_PCCLCR_LCIMB_MASK                   (0x200000U)                                         /**< LMEM_PCCLCR.LCIMB Mask                  */
#define LMEM_PCCLCR_LCIMB_SHIFT                  (21U)                                               /**< LMEM_PCCLCR.LCIMB Position              */
#define LMEM_PCCLCR_LCIMB(x)                     (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_LCIMB_SHIFT))&LMEM_PCCLCR_LCIMB_MASK) /**< LMEM_PCCLCR.LCIMB Field                 */
#define LMEM_PCCLCR_LCWAY_MASK                   (0x400000U)                                         /**< LMEM_PCCLCR.LCWAY Mask                  */
#define LMEM_PCCLCR_LCWAY_SHIFT                  (22U)                                               /**< LMEM_PCCLCR.LCWAY Position              */
#define LMEM_PCCLCR_LCWAY(x)                     (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_LCWAY_SHIFT))&LMEM_PCCLCR_LCWAY_MASK) /**< LMEM_PCCLCR.LCWAY Field                 */
#define LMEM_PCCLCR_LCMD_MASK                    (0x3000000U)                                        /**< LMEM_PCCLCR.LCMD Mask                   */
#define LMEM_PCCLCR_LCMD_SHIFT                   (24U)                                               /**< LMEM_PCCLCR.LCMD Position               */
#define LMEM_PCCLCR_LCMD(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_LCMD_SHIFT))&LMEM_PCCLCR_LCMD_MASK) /**< LMEM_PCCLCR.LCMD Field                  */
#define LMEM_PCCLCR_LADSEL_MASK                  (0x4000000U)                                        /**< LMEM_PCCLCR.LADSEL Mask                 */
#define LMEM_PCCLCR_LADSEL_SHIFT                 (26U)                                               /**< LMEM_PCCLCR.LADSEL Position             */
#define LMEM_PCCLCR_LADSEL(x)                    (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_LADSEL_SHIFT))&LMEM_PCCLCR_LADSEL_MASK) /**< LMEM_PCCLCR.LADSEL Field                */
#define LMEM_PCCLCR_LACC_MASK                    (0x8000000U)                                        /**< LMEM_PCCLCR.LACC Mask                   */
#define LMEM_PCCLCR_LACC_SHIFT                   (27U)                                               /**< LMEM_PCCLCR.LACC Position               */
#define LMEM_PCCLCR_LACC(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PCCLCR_LACC_SHIFT))&LMEM_PCCLCR_LACC_MASK) /**< LMEM_PCCLCR.LACC Field                  */
/** @} */

/** @name PCCSAR - Cache search address register */ /** @{ */
#define LMEM_PCCSAR_LGO_MASK                     (0x1U)                                              /**< LMEM_PCCSAR.LGO Mask                    */
#define LMEM_PCCSAR_LGO_SHIFT                    (0U)                                                /**< LMEM_PCCSAR.LGO Position                */
#define LMEM_PCCSAR_LGO(x)                       (((uint32_t)(((uint32_t)(x))<<LMEM_PCCSAR_LGO_SHIFT))&LMEM_PCCSAR_LGO_MASK) /**< LMEM_PCCSAR.LGO Field                   */
#define LMEM_PCCSAR_PHYADDR_MASK                 (0xFFFFFFFCU)                                       /**< LMEM_PCCSAR.PHYADDR Mask                */
#define LMEM_PCCSAR_PHYADDR_SHIFT                (2U)                                                /**< LMEM_PCCSAR.PHYADDR Position            */
#define LMEM_PCCSAR_PHYADDR(x)                   (((uint32_t)(((uint32_t)(x))<<LMEM_PCCSAR_PHYADDR_SHIFT))&LMEM_PCCSAR_PHYADDR_MASK) /**< LMEM_PCCSAR.PHYADDR Field               */
/** @} */

/** @name PCCCVR - Cache read/write value register */ /** @{ */
#define LMEM_PCCCVR_DATA_MASK                    (0xFFFFFFFFU)                                       /**< LMEM_PCCCVR.DATA Mask                   */
#define LMEM_PCCCVR_DATA_SHIFT                   (0U)                                                /**< LMEM_PCCCVR.DATA Position               */
#define LMEM_PCCCVR_DATA(x)                      (((uint32_t)(((uint32_t)(x))<<LMEM_PCCCVR_DATA_SHIFT))&LMEM_PCCCVR_DATA_MASK) /**< LMEM_PCCCVR.DATA Field                  */
/** @} */

/** @name PCCRMR - Cache regions mode register */ /** @{ */
#define LMEM_PCCRMR_R15_MASK                     (0x3U)                                              /**< LMEM_PCCRMR.R15 Mask                    */
#define LMEM_PCCRMR_R15_SHIFT                    (0U)                                                /**< LMEM_PCCRMR.R15 Position                */
#define LMEM_PCCRMR_R15(x)                       (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R15_SHIFT))&LMEM_PCCRMR_R15_MASK) /**< LMEM_PCCRMR.R15 Field                   */
#define LMEM_PCCRMR_R14_MASK                     (0xCU)                                              /**< LMEM_PCCRMR.R14 Mask                    */
#define LMEM_PCCRMR_R14_SHIFT                    (2U)                                                /**< LMEM_PCCRMR.R14 Position                */
#define LMEM_PCCRMR_R14(x)                       (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R14_SHIFT))&LMEM_PCCRMR_R14_MASK) /**< LMEM_PCCRMR.R14 Field                   */
#define LMEM_PCCRMR_R13_MASK                     (0x30U)                                             /**< LMEM_PCCRMR.R13 Mask                    */
#define LMEM_PCCRMR_R13_SHIFT                    (4U)                                                /**< LMEM_PCCRMR.R13 Position                */
#define LMEM_PCCRMR_R13(x)                       (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R13_SHIFT))&LMEM_PCCRMR_R13_MASK) /**< LMEM_PCCRMR.R13 Field                   */
#define LMEM_PCCRMR_R12_MASK                     (0xC0U)                                             /**< LMEM_PCCRMR.R12 Mask                    */
#define LMEM_PCCRMR_R12_SHIFT                    (6U)                                                /**< LMEM_PCCRMR.R12 Position                */
#define LMEM_PCCRMR_R12(x)                       (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R12_SHIFT))&LMEM_PCCRMR_R12_MASK) /**< LMEM_PCCRMR.R12 Field                   */
#define LMEM_PCCRMR_R11_MASK                     (0x300U)                                            /**< LMEM_PCCRMR.R11 Mask                    */
#define LMEM_PCCRMR_R11_SHIFT                    (8U)                                                /**< LMEM_PCCRMR.R11 Position                */
#define LMEM_PCCRMR_R11(x)                       (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R11_SHIFT))&LMEM_PCCRMR_R11_MASK) /**< LMEM_PCCRMR.R11 Field                   */
#define LMEM_PCCRMR_R10_MASK                     (0xC00U)                                            /**< LMEM_PCCRMR.R10 Mask                    */
#define LMEM_PCCRMR_R10_SHIFT                    (10U)                                               /**< LMEM_PCCRMR.R10 Position                */
#define LMEM_PCCRMR_R10(x)                       (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R10_SHIFT))&LMEM_PCCRMR_R10_MASK) /**< LMEM_PCCRMR.R10 Field                   */
#define LMEM_PCCRMR_R9_MASK                      (0x3000U)                                           /**< LMEM_PCCRMR.R9 Mask                     */
#define LMEM_PCCRMR_R9_SHIFT                     (12U)                                               /**< LMEM_PCCRMR.R9 Position                 */
#define LMEM_PCCRMR_R9(x)                        (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R9_SHIFT))&LMEM_PCCRMR_R9_MASK) /**< LMEM_PCCRMR.R9 Field                    */
#define LMEM_PCCRMR_R8_MASK                      (0xC000U)                                           /**< LMEM_PCCRMR.R8 Mask                     */
#define LMEM_PCCRMR_R8_SHIFT                     (14U)                                               /**< LMEM_PCCRMR.R8 Position                 */
#define LMEM_PCCRMR_R8(x)                        (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R8_SHIFT))&LMEM_PCCRMR_R8_MASK) /**< LMEM_PCCRMR.R8 Field                    */
#define LMEM_PCCRMR_R7_MASK                      (0x30000U)                                          /**< LMEM_PCCRMR.R7 Mask                     */
#define LMEM_PCCRMR_R7_SHIFT                     (16U)                                               /**< LMEM_PCCRMR.R7 Position                 */
#define LMEM_PCCRMR_R7(x)                        (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R7_SHIFT))&LMEM_PCCRMR_R7_MASK) /**< LMEM_PCCRMR.R7 Field                    */
#define LMEM_PCCRMR_R6_MASK                      (0xC0000U)                                          /**< LMEM_PCCRMR.R6 Mask                     */
#define LMEM_PCCRMR_R6_SHIFT                     (18U)                                               /**< LMEM_PCCRMR.R6 Position                 */
#define LMEM_PCCRMR_R6(x)                        (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R6_SHIFT))&LMEM_PCCRMR_R6_MASK) /**< LMEM_PCCRMR.R6 Field                    */
#define LMEM_PCCRMR_R5_MASK                      (0x300000U)                                         /**< LMEM_PCCRMR.R5 Mask                     */
#define LMEM_PCCRMR_R5_SHIFT                     (20U)                                               /**< LMEM_PCCRMR.R5 Position                 */
#define LMEM_PCCRMR_R5(x)                        (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R5_SHIFT))&LMEM_PCCRMR_R5_MASK) /**< LMEM_PCCRMR.R5 Field                    */
#define LMEM_PCCRMR_R4_MASK                      (0xC00000U)                                         /**< LMEM_PCCRMR.R4 Mask                     */
#define LMEM_PCCRMR_R4_SHIFT                     (22U)                                               /**< LMEM_PCCRMR.R4 Position                 */
#define LMEM_PCCRMR_R4(x)                        (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R4_SHIFT))&LMEM_PCCRMR_R4_MASK) /**< LMEM_PCCRMR.R4 Field                    */
#define LMEM_PCCRMR_R3_MASK                      (0x3000000U)                                        /**< LMEM_PCCRMR.R3 Mask                     */
#define LMEM_PCCRMR_R3_SHIFT                     (24U)                                               /**< LMEM_PCCRMR.R3 Position                 */
#define LMEM_PCCRMR_R3(x)                        (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R3_SHIFT))&LMEM_PCCRMR_R3_MASK) /**< LMEM_PCCRMR.R3 Field                    */
#define LMEM_PCCRMR_R2_MASK                      (0xC000000U)                                        /**< LMEM_PCCRMR.R2 Mask                     */
#define LMEM_PCCRMR_R2_SHIFT                     (26U)                                               /**< LMEM_PCCRMR.R2 Position                 */
#define LMEM_PCCRMR_R2(x)                        (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R2_SHIFT))&LMEM_PCCRMR_R2_MASK) /**< LMEM_PCCRMR.R2 Field                    */
#define LMEM_PCCRMR_R1_MASK                      (0x30000000U)                                       /**< LMEM_PCCRMR.R1 Mask                     */
#define LMEM_PCCRMR_R1_SHIFT                     (28U)                                               /**< LMEM_PCCRMR.R1 Position                 */
#define LMEM_PCCRMR_R1(x)                        (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R1_SHIFT))&LMEM_PCCRMR_R1_MASK) /**< LMEM_PCCRMR.R1 Field                    */
#define LMEM_PCCRMR_R0_MASK                      (0xC0000000U)                                       /**< LMEM_PCCRMR.R0 Mask                     */
#define LMEM_PCCRMR_R0_SHIFT                     (30U)                                               /**< LMEM_PCCRMR.R0 Position                 */
#define LMEM_PCCRMR_R0(x)                        (((uint32_t)(((uint32_t)(x))<<LMEM_PCCRMR_R0_SHIFT))&LMEM_PCCRMR_R0_MASK) /**< LMEM_PCCRMR.R0 Field                    */
/** @} */

/** @} */ /* End group LMEM_Register_Masks_GROUP */


/* LMEM - Peripheral instance base addresses */
#define LMEM_BasePtr                   0xE0082000UL //!< Peripheral base address
#define LMEM                           ((LMEM_Type *) LMEM_BasePtr) //!< Freescale base pointer
#define LMEM_BASE_PTR                  (LMEM) //!< Freescale style base pointer

/** @} */ /* End group LMEM_Peripheral_access_layer_GROUP */


/** @brief C Struct for LPI2C */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LPI2C_Peripheral_access_layer_GROUP LPI2C Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LPI2C0 (file:LPI2C0_S32K14x)         ================ */
/* ================================================================================ */

/**
 * @brief Low power I2C
 */
/**
 * @struct LPI2C_Type
 * @brief  C Struct allowing access to LPI2C registers
 */
typedef struct LPI2C_Type {
   __I  uint32_t  VERID;                        /**< 0000: Version ID Register                                          */
   __I  uint32_t  PARAM;                        /**< 0004: Parameter Register                                           */
        uint8_t   RESERVED_0[8];                /**< 0008: 0x8 bytes                                                    */
   __IO uint32_t  MCR;                          /**< 0010: Master Control Register                                      */
   __IO uint32_t  MSR;                          /**< 0014: Master Status Register                                       */
   __IO uint32_t  MIER;                         /**< 0018: Master Interrupt Enable Register                             */
   __IO uint32_t  MDER;                         /**< 001C: Master DMA Enable Register                                   */
   __IO uint32_t  MCFGR0;                       /**< 0020: Master Configuration Register 0                              */
   __IO uint32_t  MCFGR1;                       /**< 0024: Master Configuration Register 1                              */
   __IO uint32_t  MCFGR2;                       /**< 0028: Master Configuration Register 2                              */
   __IO uint32_t  MCFGR3;                       /**< 002C: Master Configuration Register 3                              */
        uint8_t   RESERVED_1[16];               /**< 0030: 0x10 bytes                                                   */
   __IO uint32_t  MDMR;                         /**< 0040: Master Data Match Register                                   */
        uint8_t   RESERVED_2[4];                /**< 0044: 0x4 bytes                                                    */
   __IO uint32_t  MCCR0;                        /**< 0048: Master Clock Configuration Register 0                        */
        uint8_t   RESERVED_3[4];                /**< 004C: 0x4 bytes                                                    */
   __IO uint32_t  MCCR1;                        /**< 0050: Master Clock Configuration Register 1                        */
        uint8_t   RESERVED_4[4];                /**< 0054: 0x4 bytes                                                    */
   __IO uint32_t  MFCR;                         /**< 0058: Master FIFO Control Register                                 */
   __I  uint32_t  MFSR;                         /**< 005C: Master FIFO Status Register                                  */
   __O  uint32_t  MTDR;                         /**< 0060: Master Transmit Data Register                                */
        uint8_t   RESERVED_5[12];               /**< 0064: 0xC bytes                                                    */
   __I  uint32_t  MRDR;                         /**< 0070: Master Receive Data Register                                 */
        uint8_t   RESERVED_6[156];              /**< 0074: 0x9C bytes                                                   */
   __IO uint32_t  SCR;                          /**< 0110: Slave Control Register                                       */
   __IO uint32_t  SSR;                          /**< 0114: Slave Status Register                                        */
   __IO uint32_t  SIER;                         /**< 0118: Slave Interrupt Enable Register                              */
   __IO uint32_t  SDER;                         /**< 011C: Slave DMA Enable Register                                    */
        uint8_t   RESERVED_7[4];                /**< 0120: 0x4 bytes                                                    */
   __IO uint32_t  SCFGR1;                       /**< 0124: Slave Configuration Register 1                               */
   __IO uint32_t  SCFGR2;                       /**< 0128: Slave Configuration Register 2                               */
        uint8_t   RESERVED_8[20];               /**< 012C: 0x14 bytes                                                   */
   __IO uint32_t  SAMR;                         /**< 0140: Slave Address Match Register                                 */
        uint8_t   RESERVED_9[12];               /**< 0144: 0xC bytes                                                    */
   __I  uint32_t  SASR;                         /**< 0150: Slave Address Status Register                                */
   __IO uint32_t  STAR;                         /**< 0154: Slave Transmit ACK Register                                  */
        uint8_t   RESERVED_10[8];               /**< 0158: 0x8 bytes                                                    */
   __O  uint32_t  STDR;                         /**< 0160: Slave Transmit Data Register                                 */
        uint8_t   RESERVED_11[12];              /**< 0164: 0xC bytes                                                    */
   __I  uint32_t  SRDR;                         /**< 0170: Slave Receive Data Register                                  */
} LPI2C_Type;


/** @brief Register Masks for LPI2C */

/* -------------------------------------------------------------------------------- */
/* -----------     'LPI2C0' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup LPI2C_Register_Masks_GROUP LPI2C Register Masks */
/** @{ */

/** @name VERID - Version ID Register */ /** @{ */
#define LPI2C_VERID_FEATURE_MASK                 (0xFFFFU)                                           /**< LPI2C0_VERID.FEATURE Mask               */
#define LPI2C_VERID_FEATURE_SHIFT                (0U)                                                /**< LPI2C0_VERID.FEATURE Position           */
#define LPI2C_VERID_FEATURE(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_VERID_FEATURE_SHIFT))&LPI2C_VERID_FEATURE_MASK) /**< LPI2C0_VERID.FEATURE Field              */
#define LPI2C_VERID_MINOR_MASK                   (0xFF0000U)                                         /**< LPI2C0_VERID.MINOR Mask                 */
#define LPI2C_VERID_MINOR_SHIFT                  (16U)                                               /**< LPI2C0_VERID.MINOR Position             */
#define LPI2C_VERID_MINOR(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_VERID_MINOR_SHIFT))&LPI2C_VERID_MINOR_MASK) /**< LPI2C0_VERID.MINOR Field                */
#define LPI2C_VERID_MAJOR_MASK                   (0xFF000000U)                                       /**< LPI2C0_VERID.MAJOR Mask                 */
#define LPI2C_VERID_MAJOR_SHIFT                  (24U)                                               /**< LPI2C0_VERID.MAJOR Position             */
#define LPI2C_VERID_MAJOR(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_VERID_MAJOR_SHIFT))&LPI2C_VERID_MAJOR_MASK) /**< LPI2C0_VERID.MAJOR Field                */
/** @} */

/** @name PARAM - Parameter Register */ /** @{ */
#define LPI2C_PARAM_MTXFIFO_MASK                 (0xFU)                                              /**< LPI2C0_PARAM.MTXFIFO Mask               */
#define LPI2C_PARAM_MTXFIFO_SHIFT                (0U)                                                /**< LPI2C0_PARAM.MTXFIFO Position           */
#define LPI2C_PARAM_MTXFIFO(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_PARAM_MTXFIFO_SHIFT))&LPI2C_PARAM_MTXFIFO_MASK) /**< LPI2C0_PARAM.MTXFIFO Field              */
#define LPI2C_PARAM_MRXFIFO_MASK                 (0xF00U)                                            /**< LPI2C0_PARAM.MRXFIFO Mask               */
#define LPI2C_PARAM_MRXFIFO_SHIFT                (8U)                                                /**< LPI2C0_PARAM.MRXFIFO Position           */
#define LPI2C_PARAM_MRXFIFO(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_PARAM_MRXFIFO_SHIFT))&LPI2C_PARAM_MRXFIFO_MASK) /**< LPI2C0_PARAM.MRXFIFO Field              */
/** @} */

/** @name MCR - Master Control Register */ /** @{ */
#define LPI2C_MCR_MEN_MASK                       (0x1U)                                              /**< LPI2C0_MCR.MEN Mask                     */
#define LPI2C_MCR_MEN_SHIFT                      (0U)                                                /**< LPI2C0_MCR.MEN Position                 */
#define LPI2C_MCR_MEN(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MCR_MEN_SHIFT))&LPI2C_MCR_MEN_MASK) /**< LPI2C0_MCR.MEN Field                    */
#define LPI2C_MCR_RST_MASK                       (0x2U)                                              /**< LPI2C0_MCR.RST Mask                     */
#define LPI2C_MCR_RST_SHIFT                      (1U)                                                /**< LPI2C0_MCR.RST Position                 */
#define LPI2C_MCR_RST(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MCR_RST_SHIFT))&LPI2C_MCR_RST_MASK) /**< LPI2C0_MCR.RST Field                    */
#define LPI2C_MCR_DOZEN_MASK                     (0x4U)                                              /**< LPI2C0_MCR.DOZEN Mask                   */
#define LPI2C_MCR_DOZEN_SHIFT                    (2U)                                                /**< LPI2C0_MCR.DOZEN Position               */
#define LPI2C_MCR_DOZEN(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MCR_DOZEN_SHIFT))&LPI2C_MCR_DOZEN_MASK) /**< LPI2C0_MCR.DOZEN Field                  */
#define LPI2C_MCR_DBGEN_MASK                     (0x8U)                                              /**< LPI2C0_MCR.DBGEN Mask                   */
#define LPI2C_MCR_DBGEN_SHIFT                    (3U)                                                /**< LPI2C0_MCR.DBGEN Position               */
#define LPI2C_MCR_DBGEN(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MCR_DBGEN_SHIFT))&LPI2C_MCR_DBGEN_MASK) /**< LPI2C0_MCR.DBGEN Field                  */
#define LPI2C_MCR_RTF_MASK                       (0x100U)                                            /**< LPI2C0_MCR.RTF Mask                     */
#define LPI2C_MCR_RTF_SHIFT                      (8U)                                                /**< LPI2C0_MCR.RTF Position                 */
#define LPI2C_MCR_RTF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MCR_RTF_SHIFT))&LPI2C_MCR_RTF_MASK) /**< LPI2C0_MCR.RTF Field                    */
#define LPI2C_MCR_RRF_MASK                       (0x200U)                                            /**< LPI2C0_MCR.RRF Mask                     */
#define LPI2C_MCR_RRF_SHIFT                      (9U)                                                /**< LPI2C0_MCR.RRF Position                 */
#define LPI2C_MCR_RRF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MCR_RRF_SHIFT))&LPI2C_MCR_RRF_MASK) /**< LPI2C0_MCR.RRF Field                    */
/** @} */

/** @name MSR - Master Status Register */ /** @{ */
#define LPI2C_MSR_TDF_MASK                       (0x1U)                                              /**< LPI2C0_MSR.TDF Mask                     */
#define LPI2C_MSR_TDF_SHIFT                      (0U)                                                /**< LPI2C0_MSR.TDF Position                 */
#define LPI2C_MSR_TDF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_TDF_SHIFT))&LPI2C_MSR_TDF_MASK) /**< LPI2C0_MSR.TDF Field                    */
#define LPI2C_MSR_RDF_MASK                       (0x2U)                                              /**< LPI2C0_MSR.RDF Mask                     */
#define LPI2C_MSR_RDF_SHIFT                      (1U)                                                /**< LPI2C0_MSR.RDF Position                 */
#define LPI2C_MSR_RDF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_RDF_SHIFT))&LPI2C_MSR_RDF_MASK) /**< LPI2C0_MSR.RDF Field                    */
#define LPI2C_MSR_EPF_MASK                       (0x100U)                                            /**< LPI2C0_MSR.EPF Mask                     */
#define LPI2C_MSR_EPF_SHIFT                      (8U)                                                /**< LPI2C0_MSR.EPF Position                 */
#define LPI2C_MSR_EPF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_EPF_SHIFT))&LPI2C_MSR_EPF_MASK) /**< LPI2C0_MSR.EPF Field                    */
#define LPI2C_MSR_SDF_MASK                       (0x200U)                                            /**< LPI2C0_MSR.SDF Mask                     */
#define LPI2C_MSR_SDF_SHIFT                      (9U)                                                /**< LPI2C0_MSR.SDF Position                 */
#define LPI2C_MSR_SDF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_SDF_SHIFT))&LPI2C_MSR_SDF_MASK) /**< LPI2C0_MSR.SDF Field                    */
#define LPI2C_MSR_NDF_MASK                       (0x400U)                                            /**< LPI2C0_MSR.NDF Mask                     */
#define LPI2C_MSR_NDF_SHIFT                      (10U)                                               /**< LPI2C0_MSR.NDF Position                 */
#define LPI2C_MSR_NDF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_NDF_SHIFT))&LPI2C_MSR_NDF_MASK) /**< LPI2C0_MSR.NDF Field                    */
#define LPI2C_MSR_ALF_MASK                       (0x800U)                                            /**< LPI2C0_MSR.ALF Mask                     */
#define LPI2C_MSR_ALF_SHIFT                      (11U)                                               /**< LPI2C0_MSR.ALF Position                 */
#define LPI2C_MSR_ALF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_ALF_SHIFT))&LPI2C_MSR_ALF_MASK) /**< LPI2C0_MSR.ALF Field                    */
#define LPI2C_MSR_FEF_MASK                       (0x1000U)                                           /**< LPI2C0_MSR.FEF Mask                     */
#define LPI2C_MSR_FEF_SHIFT                      (12U)                                               /**< LPI2C0_MSR.FEF Position                 */
#define LPI2C_MSR_FEF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_FEF_SHIFT))&LPI2C_MSR_FEF_MASK) /**< LPI2C0_MSR.FEF Field                    */
#define LPI2C_MSR_PLTF_MASK                      (0x2000U)                                           /**< LPI2C0_MSR.PLTF Mask                    */
#define LPI2C_MSR_PLTF_SHIFT                     (13U)                                               /**< LPI2C0_MSR.PLTF Position                */
#define LPI2C_MSR_PLTF(x)                        (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_PLTF_SHIFT))&LPI2C_MSR_PLTF_MASK) /**< LPI2C0_MSR.PLTF Field                   */
#define LPI2C_MSR_DMF_MASK                       (0x4000U)                                           /**< LPI2C0_MSR.DMF Mask                     */
#define LPI2C_MSR_DMF_SHIFT                      (14U)                                               /**< LPI2C0_MSR.DMF Position                 */
#define LPI2C_MSR_DMF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_DMF_SHIFT))&LPI2C_MSR_DMF_MASK) /**< LPI2C0_MSR.DMF Field                    */
#define LPI2C_MSR_MBF_MASK                       (0x1000000U)                                        /**< LPI2C0_MSR.MBF Mask                     */
#define LPI2C_MSR_MBF_SHIFT                      (24U)                                               /**< LPI2C0_MSR.MBF Position                 */
#define LPI2C_MSR_MBF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_MBF_SHIFT))&LPI2C_MSR_MBF_MASK) /**< LPI2C0_MSR.MBF Field                    */
#define LPI2C_MSR_BBF_MASK                       (0x2000000U)                                        /**< LPI2C0_MSR.BBF Mask                     */
#define LPI2C_MSR_BBF_SHIFT                      (25U)                                               /**< LPI2C0_MSR.BBF Position                 */
#define LPI2C_MSR_BBF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_MSR_BBF_SHIFT))&LPI2C_MSR_BBF_MASK) /**< LPI2C0_MSR.BBF Field                    */
/** @} */

/** @name MIER - Master Interrupt Enable Register */ /** @{ */
#define LPI2C_MIER_TDIE_MASK                     (0x1U)                                              /**< LPI2C0_MIER.TDIE Mask                   */
#define LPI2C_MIER_TDIE_SHIFT                    (0U)                                                /**< LPI2C0_MIER.TDIE Position               */
#define LPI2C_MIER_TDIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MIER_TDIE_SHIFT))&LPI2C_MIER_TDIE_MASK) /**< LPI2C0_MIER.TDIE Field                  */
#define LPI2C_MIER_RDIE_MASK                     (0x2U)                                              /**< LPI2C0_MIER.RDIE Mask                   */
#define LPI2C_MIER_RDIE_SHIFT                    (1U)                                                /**< LPI2C0_MIER.RDIE Position               */
#define LPI2C_MIER_RDIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MIER_RDIE_SHIFT))&LPI2C_MIER_RDIE_MASK) /**< LPI2C0_MIER.RDIE Field                  */
#define LPI2C_MIER_EPIE_MASK                     (0x100U)                                            /**< LPI2C0_MIER.EPIE Mask                   */
#define LPI2C_MIER_EPIE_SHIFT                    (8U)                                                /**< LPI2C0_MIER.EPIE Position               */
#define LPI2C_MIER_EPIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MIER_EPIE_SHIFT))&LPI2C_MIER_EPIE_MASK) /**< LPI2C0_MIER.EPIE Field                  */
#define LPI2C_MIER_SDIE_MASK                     (0x200U)                                            /**< LPI2C0_MIER.SDIE Mask                   */
#define LPI2C_MIER_SDIE_SHIFT                    (9U)                                                /**< LPI2C0_MIER.SDIE Position               */
#define LPI2C_MIER_SDIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MIER_SDIE_SHIFT))&LPI2C_MIER_SDIE_MASK) /**< LPI2C0_MIER.SDIE Field                  */
#define LPI2C_MIER_NDIE_MASK                     (0x400U)                                            /**< LPI2C0_MIER.NDIE Mask                   */
#define LPI2C_MIER_NDIE_SHIFT                    (10U)                                               /**< LPI2C0_MIER.NDIE Position               */
#define LPI2C_MIER_NDIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MIER_NDIE_SHIFT))&LPI2C_MIER_NDIE_MASK) /**< LPI2C0_MIER.NDIE Field                  */
#define LPI2C_MIER_ALIE_MASK                     (0x800U)                                            /**< LPI2C0_MIER.ALIE Mask                   */
#define LPI2C_MIER_ALIE_SHIFT                    (11U)                                               /**< LPI2C0_MIER.ALIE Position               */
#define LPI2C_MIER_ALIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MIER_ALIE_SHIFT))&LPI2C_MIER_ALIE_MASK) /**< LPI2C0_MIER.ALIE Field                  */
#define LPI2C_MIER_FEIE_MASK                     (0x1000U)                                           /**< LPI2C0_MIER.FEIE Mask                   */
#define LPI2C_MIER_FEIE_SHIFT                    (12U)                                               /**< LPI2C0_MIER.FEIE Position               */
#define LPI2C_MIER_FEIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MIER_FEIE_SHIFT))&LPI2C_MIER_FEIE_MASK) /**< LPI2C0_MIER.FEIE Field                  */
#define LPI2C_MIER_PLTIE_MASK                    (0x2000U)                                           /**< LPI2C0_MIER.PLTIE Mask                  */
#define LPI2C_MIER_PLTIE_SHIFT                   (13U)                                               /**< LPI2C0_MIER.PLTIE Position              */
#define LPI2C_MIER_PLTIE(x)                      (((uint32_t)(((uint32_t)(x))<<LPI2C_MIER_PLTIE_SHIFT))&LPI2C_MIER_PLTIE_MASK) /**< LPI2C0_MIER.PLTIE Field                 */
#define LPI2C_MIER_DMIE_MASK                     (0x4000U)                                           /**< LPI2C0_MIER.DMIE Mask                   */
#define LPI2C_MIER_DMIE_SHIFT                    (14U)                                               /**< LPI2C0_MIER.DMIE Position               */
#define LPI2C_MIER_DMIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MIER_DMIE_SHIFT))&LPI2C_MIER_DMIE_MASK) /**< LPI2C0_MIER.DMIE Field                  */
/** @} */

/** @name MDER - Master DMA Enable Register */ /** @{ */
#define LPI2C_MDER_TDDE_MASK                     (0x1U)                                              /**< LPI2C0_MDER.TDDE Mask                   */
#define LPI2C_MDER_TDDE_SHIFT                    (0U)                                                /**< LPI2C0_MDER.TDDE Position               */
#define LPI2C_MDER_TDDE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MDER_TDDE_SHIFT))&LPI2C_MDER_TDDE_MASK) /**< LPI2C0_MDER.TDDE Field                  */
#define LPI2C_MDER_RDDE_MASK                     (0x2U)                                              /**< LPI2C0_MDER.RDDE Mask                   */
#define LPI2C_MDER_RDDE_SHIFT                    (1U)                                                /**< LPI2C0_MDER.RDDE Position               */
#define LPI2C_MDER_RDDE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MDER_RDDE_SHIFT))&LPI2C_MDER_RDDE_MASK) /**< LPI2C0_MDER.RDDE Field                  */
/** @} */

/** @name MCFGR0 - Master Configuration Register 0 */ /** @{ */
#define LPI2C_MCFGR0_HREN_MASK                   (0x1U)                                              /**< LPI2C0_MCFGR0.HREN Mask                 */
#define LPI2C_MCFGR0_HREN_SHIFT                  (0U)                                                /**< LPI2C0_MCFGR0.HREN Position             */
#define LPI2C_MCFGR0_HREN(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR0_HREN_SHIFT))&LPI2C_MCFGR0_HREN_MASK) /**< LPI2C0_MCFGR0.HREN Field                */
#define LPI2C_MCFGR0_HRPOL_MASK                  (0x2U)                                              /**< LPI2C0_MCFGR0.HRPOL Mask                */
#define LPI2C_MCFGR0_HRPOL_SHIFT                 (1U)                                                /**< LPI2C0_MCFGR0.HRPOL Position            */
#define LPI2C_MCFGR0_HRPOL(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR0_HRPOL_SHIFT))&LPI2C_MCFGR0_HRPOL_MASK) /**< LPI2C0_MCFGR0.HRPOL Field               */
#define LPI2C_MCFGR0_HRSEL_MASK                  (0x4U)                                              /**< LPI2C0_MCFGR0.HRSEL Mask                */
#define LPI2C_MCFGR0_HRSEL_SHIFT                 (2U)                                                /**< LPI2C0_MCFGR0.HRSEL Position            */
#define LPI2C_MCFGR0_HRSEL(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR0_HRSEL_SHIFT))&LPI2C_MCFGR0_HRSEL_MASK) /**< LPI2C0_MCFGR0.HRSEL Field               */
#define LPI2C_MCFGR0_CIRFIFO_MASK                (0x100U)                                            /**< LPI2C0_MCFGR0.CIRFIFO Mask              */
#define LPI2C_MCFGR0_CIRFIFO_SHIFT               (8U)                                                /**< LPI2C0_MCFGR0.CIRFIFO Position          */
#define LPI2C_MCFGR0_CIRFIFO(x)                  (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR0_CIRFIFO_SHIFT))&LPI2C_MCFGR0_CIRFIFO_MASK) /**< LPI2C0_MCFGR0.CIRFIFO Field             */
#define LPI2C_MCFGR0_RDMO_MASK                   (0x200U)                                            /**< LPI2C0_MCFGR0.RDMO Mask                 */
#define LPI2C_MCFGR0_RDMO_SHIFT                  (9U)                                                /**< LPI2C0_MCFGR0.RDMO Position             */
#define LPI2C_MCFGR0_RDMO(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR0_RDMO_SHIFT))&LPI2C_MCFGR0_RDMO_MASK) /**< LPI2C0_MCFGR0.RDMO Field                */
/** @} */

/** @name MCFGR1 - Master Configuration Register 1 */ /** @{ */
#define LPI2C_MCFGR1_PRESCALE_MASK               (0x7U)                                              /**< LPI2C0_MCFGR1.PRESCALE Mask             */
#define LPI2C_MCFGR1_PRESCALE_SHIFT              (0U)                                                /**< LPI2C0_MCFGR1.PRESCALE Position         */
#define LPI2C_MCFGR1_PRESCALE(x)                 (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR1_PRESCALE_SHIFT))&LPI2C_MCFGR1_PRESCALE_MASK) /**< LPI2C0_MCFGR1.PRESCALE Field            */
#define LPI2C_MCFGR1_AUTOSTOP_MASK               (0x100U)                                            /**< LPI2C0_MCFGR1.AUTOSTOP Mask             */
#define LPI2C_MCFGR1_AUTOSTOP_SHIFT              (8U)                                                /**< LPI2C0_MCFGR1.AUTOSTOP Position         */
#define LPI2C_MCFGR1_AUTOSTOP(x)                 (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR1_AUTOSTOP_SHIFT))&LPI2C_MCFGR1_AUTOSTOP_MASK) /**< LPI2C0_MCFGR1.AUTOSTOP Field            */
#define LPI2C_MCFGR1_IGNACK_MASK                 (0x200U)                                            /**< LPI2C0_MCFGR1.IGNACK Mask               */
#define LPI2C_MCFGR1_IGNACK_SHIFT                (9U)                                                /**< LPI2C0_MCFGR1.IGNACK Position           */
#define LPI2C_MCFGR1_IGNACK(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR1_IGNACK_SHIFT))&LPI2C_MCFGR1_IGNACK_MASK) /**< LPI2C0_MCFGR1.IGNACK Field              */
#define LPI2C_MCFGR1_TIMECFG_MASK                (0x400U)                                            /**< LPI2C0_MCFGR1.TIMECFG Mask              */
#define LPI2C_MCFGR1_TIMECFG_SHIFT               (10U)                                               /**< LPI2C0_MCFGR1.TIMECFG Position          */
#define LPI2C_MCFGR1_TIMECFG(x)                  (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR1_TIMECFG_SHIFT))&LPI2C_MCFGR1_TIMECFG_MASK) /**< LPI2C0_MCFGR1.TIMECFG Field             */
#define LPI2C_MCFGR1_MATCFG_MASK                 (0x70000U)                                          /**< LPI2C0_MCFGR1.MATCFG Mask               */
#define LPI2C_MCFGR1_MATCFG_SHIFT                (16U)                                               /**< LPI2C0_MCFGR1.MATCFG Position           */
#define LPI2C_MCFGR1_MATCFG(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR1_MATCFG_SHIFT))&LPI2C_MCFGR1_MATCFG_MASK) /**< LPI2C0_MCFGR1.MATCFG Field              */
#define LPI2C_MCFGR1_PINCFG_MASK                 (0x7000000U)                                        /**< LPI2C0_MCFGR1.PINCFG Mask               */
#define LPI2C_MCFGR1_PINCFG_SHIFT                (24U)                                               /**< LPI2C0_MCFGR1.PINCFG Position           */
#define LPI2C_MCFGR1_PINCFG(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR1_PINCFG_SHIFT))&LPI2C_MCFGR1_PINCFG_MASK) /**< LPI2C0_MCFGR1.PINCFG Field              */
/** @} */

/** @name MCFGR2 - Master Configuration Register 2 */ /** @{ */
#define LPI2C_MCFGR2_BUSIDLE_MASK                (0xFFFU)                                            /**< LPI2C0_MCFGR2.BUSIDLE Mask              */
#define LPI2C_MCFGR2_BUSIDLE_SHIFT               (0U)                                                /**< LPI2C0_MCFGR2.BUSIDLE Position          */
#define LPI2C_MCFGR2_BUSIDLE(x)                  (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR2_BUSIDLE_SHIFT))&LPI2C_MCFGR2_BUSIDLE_MASK) /**< LPI2C0_MCFGR2.BUSIDLE Field             */
#define LPI2C_MCFGR2_FILTSCL_MASK                (0xF0000U)                                          /**< LPI2C0_MCFGR2.FILTSCL Mask              */
#define LPI2C_MCFGR2_FILTSCL_SHIFT               (16U)                                               /**< LPI2C0_MCFGR2.FILTSCL Position          */
#define LPI2C_MCFGR2_FILTSCL(x)                  (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR2_FILTSCL_SHIFT))&LPI2C_MCFGR2_FILTSCL_MASK) /**< LPI2C0_MCFGR2.FILTSCL Field             */
#define LPI2C_MCFGR2_FILTSDA_MASK                (0xF000000U)                                        /**< LPI2C0_MCFGR2.FILTSDA Mask              */
#define LPI2C_MCFGR2_FILTSDA_SHIFT               (24U)                                               /**< LPI2C0_MCFGR2.FILTSDA Position          */
#define LPI2C_MCFGR2_FILTSDA(x)                  (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR2_FILTSDA_SHIFT))&LPI2C_MCFGR2_FILTSDA_MASK) /**< LPI2C0_MCFGR2.FILTSDA Field             */
/** @} */

/** @name MCFGR3 - Master Configuration Register 3 */ /** @{ */
#define LPI2C_MCFGR3_PINLOW_MASK                 (0xFFF00U)                                          /**< LPI2C0_MCFGR3.PINLOW Mask               */
#define LPI2C_MCFGR3_PINLOW_SHIFT                (8U)                                                /**< LPI2C0_MCFGR3.PINLOW Position           */
#define LPI2C_MCFGR3_PINLOW(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_MCFGR3_PINLOW_SHIFT))&LPI2C_MCFGR3_PINLOW_MASK) /**< LPI2C0_MCFGR3.PINLOW Field              */
/** @} */

/** @name MDMR - Master Data Match Register */ /** @{ */
#define LPI2C_MDMR_MATCH0_MASK                   (0xFFU)                                             /**< LPI2C0_MDMR.MATCH0 Mask                 */
#define LPI2C_MDMR_MATCH0_SHIFT                  (0U)                                                /**< LPI2C0_MDMR.MATCH0 Position             */
#define LPI2C_MDMR_MATCH0(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_MDMR_MATCH0_SHIFT))&LPI2C_MDMR_MATCH0_MASK) /**< LPI2C0_MDMR.MATCH0 Field                */
#define LPI2C_MDMR_MATCH1_MASK                   (0xFF0000U)                                         /**< LPI2C0_MDMR.MATCH1 Mask                 */
#define LPI2C_MDMR_MATCH1_SHIFT                  (16U)                                               /**< LPI2C0_MDMR.MATCH1 Position             */
#define LPI2C_MDMR_MATCH1(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_MDMR_MATCH1_SHIFT))&LPI2C_MDMR_MATCH1_MASK) /**< LPI2C0_MDMR.MATCH1 Field                */
/** @} */

/** @name MCCR0 - Master Clock Configuration Register 0 */ /** @{ */
#define LPI2C_MCCR0_CLKLO_MASK                   (0x3FU)                                             /**< LPI2C0_MCCR0.CLKLO Mask                 */
#define LPI2C_MCCR0_CLKLO_SHIFT                  (0U)                                                /**< LPI2C0_MCCR0.CLKLO Position             */
#define LPI2C_MCCR0_CLKLO(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_MCCR0_CLKLO_SHIFT))&LPI2C_MCCR0_CLKLO_MASK) /**< LPI2C0_MCCR0.CLKLO Field                */
#define LPI2C_MCCR0_CLKHI_MASK                   (0x3F00U)                                           /**< LPI2C0_MCCR0.CLKHI Mask                 */
#define LPI2C_MCCR0_CLKHI_SHIFT                  (8U)                                                /**< LPI2C0_MCCR0.CLKHI Position             */
#define LPI2C_MCCR0_CLKHI(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_MCCR0_CLKHI_SHIFT))&LPI2C_MCCR0_CLKHI_MASK) /**< LPI2C0_MCCR0.CLKHI Field                */
#define LPI2C_MCCR0_SETHOLD_MASK                 (0x3F0000U)                                         /**< LPI2C0_MCCR0.SETHOLD Mask               */
#define LPI2C_MCCR0_SETHOLD_SHIFT                (16U)                                               /**< LPI2C0_MCCR0.SETHOLD Position           */
#define LPI2C_MCCR0_SETHOLD(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_MCCR0_SETHOLD_SHIFT))&LPI2C_MCCR0_SETHOLD_MASK) /**< LPI2C0_MCCR0.SETHOLD Field              */
#define LPI2C_MCCR0_DATAVD_MASK                  (0x3F000000U)                                       /**< LPI2C0_MCCR0.DATAVD Mask                */
#define LPI2C_MCCR0_DATAVD_SHIFT                 (24U)                                               /**< LPI2C0_MCCR0.DATAVD Position            */
#define LPI2C_MCCR0_DATAVD(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_MCCR0_DATAVD_SHIFT))&LPI2C_MCCR0_DATAVD_MASK) /**< LPI2C0_MCCR0.DATAVD Field               */
/** @} */

/** @name MCCR1 - Master Clock Configuration Register 1 */ /** @{ */
#define LPI2C_MCCR1_CLKLO_MASK                   (0x3FU)                                             /**< LPI2C0_MCCR1.CLKLO Mask                 */
#define LPI2C_MCCR1_CLKLO_SHIFT                  (0U)                                                /**< LPI2C0_MCCR1.CLKLO Position             */
#define LPI2C_MCCR1_CLKLO(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_MCCR1_CLKLO_SHIFT))&LPI2C_MCCR1_CLKLO_MASK) /**< LPI2C0_MCCR1.CLKLO Field                */
#define LPI2C_MCCR1_CLKHI_MASK                   (0x3F00U)                                           /**< LPI2C0_MCCR1.CLKHI Mask                 */
#define LPI2C_MCCR1_CLKHI_SHIFT                  (8U)                                                /**< LPI2C0_MCCR1.CLKHI Position             */
#define LPI2C_MCCR1_CLKHI(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_MCCR1_CLKHI_SHIFT))&LPI2C_MCCR1_CLKHI_MASK) /**< LPI2C0_MCCR1.CLKHI Field                */
#define LPI2C_MCCR1_SETHOLD_MASK                 (0x3F0000U)                                         /**< LPI2C0_MCCR1.SETHOLD Mask               */
#define LPI2C_MCCR1_SETHOLD_SHIFT                (16U)                                               /**< LPI2C0_MCCR1.SETHOLD Position           */
#define LPI2C_MCCR1_SETHOLD(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_MCCR1_SETHOLD_SHIFT))&LPI2C_MCCR1_SETHOLD_MASK) /**< LPI2C0_MCCR1.SETHOLD Field              */
#define LPI2C_MCCR1_DATAVD_MASK                  (0x3F000000U)                                       /**< LPI2C0_MCCR1.DATAVD Mask                */
#define LPI2C_MCCR1_DATAVD_SHIFT                 (24U)                                               /**< LPI2C0_MCCR1.DATAVD Position            */
#define LPI2C_MCCR1_DATAVD(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_MCCR1_DATAVD_SHIFT))&LPI2C_MCCR1_DATAVD_MASK) /**< LPI2C0_MCCR1.DATAVD Field               */
/** @} */

/** @name MFCR - Master FIFO Control Register */ /** @{ */
#define LPI2C_MFCR_TXWATER_MASK                  (0x3U)                                              /**< LPI2C0_MFCR.TXWATER Mask                */
#define LPI2C_MFCR_TXWATER_SHIFT                 (0U)                                                /**< LPI2C0_MFCR.TXWATER Position            */
#define LPI2C_MFCR_TXWATER(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_MFCR_TXWATER_SHIFT))&LPI2C_MFCR_TXWATER_MASK) /**< LPI2C0_MFCR.TXWATER Field               */
#define LPI2C_MFCR_RXWATER_MASK                  (0x30000U)                                          /**< LPI2C0_MFCR.RXWATER Mask                */
#define LPI2C_MFCR_RXWATER_SHIFT                 (16U)                                               /**< LPI2C0_MFCR.RXWATER Position            */
#define LPI2C_MFCR_RXWATER(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_MFCR_RXWATER_SHIFT))&LPI2C_MFCR_RXWATER_MASK) /**< LPI2C0_MFCR.RXWATER Field               */
/** @} */

/** @name MFSR - Master FIFO Status Register */ /** @{ */
#define LPI2C_MFSR_TXCOUNT_MASK                  (0x7U)                                              /**< LPI2C0_MFSR.TXCOUNT Mask                */
#define LPI2C_MFSR_TXCOUNT_SHIFT                 (0U)                                                /**< LPI2C0_MFSR.TXCOUNT Position            */
#define LPI2C_MFSR_TXCOUNT(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_MFSR_TXCOUNT_SHIFT))&LPI2C_MFSR_TXCOUNT_MASK) /**< LPI2C0_MFSR.TXCOUNT Field               */
#define LPI2C_MFSR_RXCOUNT_MASK                  (0x70000U)                                          /**< LPI2C0_MFSR.RXCOUNT Mask                */
#define LPI2C_MFSR_RXCOUNT_SHIFT                 (16U)                                               /**< LPI2C0_MFSR.RXCOUNT Position            */
#define LPI2C_MFSR_RXCOUNT(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_MFSR_RXCOUNT_SHIFT))&LPI2C_MFSR_RXCOUNT_MASK) /**< LPI2C0_MFSR.RXCOUNT Field               */
/** @} */

/** @name MTDR - Master Transmit Data Register */ /** @{ */
#define LPI2C_MTDR_DATA_MASK                     (0xFFU)                                             /**< LPI2C0_MTDR.DATA Mask                   */
#define LPI2C_MTDR_DATA_SHIFT                    (0U)                                                /**< LPI2C0_MTDR.DATA Position               */
#define LPI2C_MTDR_DATA(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MTDR_DATA_SHIFT))&LPI2C_MTDR_DATA_MASK) /**< LPI2C0_MTDR.DATA Field                  */
#define LPI2C_MTDR_CMD_MASK                      (0x700U)                                            /**< LPI2C0_MTDR.CMD Mask                    */
#define LPI2C_MTDR_CMD_SHIFT                     (8U)                                                /**< LPI2C0_MTDR.CMD Position                */
#define LPI2C_MTDR_CMD(x)                        (((uint32_t)(((uint32_t)(x))<<LPI2C_MTDR_CMD_SHIFT))&LPI2C_MTDR_CMD_MASK) /**< LPI2C0_MTDR.CMD Field                   */
/** @} */

/** @name MRDR - Master Receive Data Register */ /** @{ */
#define LPI2C_MRDR_DATA_MASK                     (0xFFU)                                             /**< LPI2C0_MRDR.DATA Mask                   */
#define LPI2C_MRDR_DATA_SHIFT                    (0U)                                                /**< LPI2C0_MRDR.DATA Position               */
#define LPI2C_MRDR_DATA(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_MRDR_DATA_SHIFT))&LPI2C_MRDR_DATA_MASK) /**< LPI2C0_MRDR.DATA Field                  */
#define LPI2C_MRDR_RXEMPTY_MASK                  (0x4000U)                                           /**< LPI2C0_MRDR.RXEMPTY Mask                */
#define LPI2C_MRDR_RXEMPTY_SHIFT                 (14U)                                               /**< LPI2C0_MRDR.RXEMPTY Position            */
#define LPI2C_MRDR_RXEMPTY(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_MRDR_RXEMPTY_SHIFT))&LPI2C_MRDR_RXEMPTY_MASK) /**< LPI2C0_MRDR.RXEMPTY Field               */
/** @} */

/** @name SCR - Slave Control Register */ /** @{ */
#define LPI2C_SCR_SEN_MASK                       (0x1U)                                              /**< LPI2C0_SCR.SEN Mask                     */
#define LPI2C_SCR_SEN_SHIFT                      (0U)                                                /**< LPI2C0_SCR.SEN Position                 */
#define LPI2C_SCR_SEN(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SCR_SEN_SHIFT))&LPI2C_SCR_SEN_MASK) /**< LPI2C0_SCR.SEN Field                    */
#define LPI2C_SCR_RST_MASK                       (0x2U)                                              /**< LPI2C0_SCR.RST Mask                     */
#define LPI2C_SCR_RST_SHIFT                      (1U)                                                /**< LPI2C0_SCR.RST Position                 */
#define LPI2C_SCR_RST(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SCR_RST_SHIFT))&LPI2C_SCR_RST_MASK) /**< LPI2C0_SCR.RST Field                    */
#define LPI2C_SCR_FILTEN_MASK                    (0x10U)                                             /**< LPI2C0_SCR.FILTEN Mask                  */
#define LPI2C_SCR_FILTEN_SHIFT                   (4U)                                                /**< LPI2C0_SCR.FILTEN Position              */
#define LPI2C_SCR_FILTEN(x)                      (((uint32_t)(((uint32_t)(x))<<LPI2C_SCR_FILTEN_SHIFT))&LPI2C_SCR_FILTEN_MASK) /**< LPI2C0_SCR.FILTEN Field                 */
#define LPI2C_SCR_FILTDZ_MASK                    (0x20U)                                             /**< LPI2C0_SCR.FILTDZ Mask                  */
#define LPI2C_SCR_FILTDZ_SHIFT                   (5U)                                                /**< LPI2C0_SCR.FILTDZ Position              */
#define LPI2C_SCR_FILTDZ(x)                      (((uint32_t)(((uint32_t)(x))<<LPI2C_SCR_FILTDZ_SHIFT))&LPI2C_SCR_FILTDZ_MASK) /**< LPI2C0_SCR.FILTDZ Field                 */
/** @} */

/** @name SSR - Slave Status Register */ /** @{ */
#define LPI2C_SSR_TDF_MASK                       (0x1U)                                              /**< LPI2C0_SSR.TDF Mask                     */
#define LPI2C_SSR_TDF_SHIFT                      (0U)                                                /**< LPI2C0_SSR.TDF Position                 */
#define LPI2C_SSR_TDF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_TDF_SHIFT))&LPI2C_SSR_TDF_MASK) /**< LPI2C0_SSR.TDF Field                    */
#define LPI2C_SSR_RDF_MASK                       (0x2U)                                              /**< LPI2C0_SSR.RDF Mask                     */
#define LPI2C_SSR_RDF_SHIFT                      (1U)                                                /**< LPI2C0_SSR.RDF Position                 */
#define LPI2C_SSR_RDF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_RDF_SHIFT))&LPI2C_SSR_RDF_MASK) /**< LPI2C0_SSR.RDF Field                    */
#define LPI2C_SSR_AVF_MASK                       (0x4U)                                              /**< LPI2C0_SSR.AVF Mask                     */
#define LPI2C_SSR_AVF_SHIFT                      (2U)                                                /**< LPI2C0_SSR.AVF Position                 */
#define LPI2C_SSR_AVF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_AVF_SHIFT))&LPI2C_SSR_AVF_MASK) /**< LPI2C0_SSR.AVF Field                    */
#define LPI2C_SSR_TAF_MASK                       (0x8U)                                              /**< LPI2C0_SSR.TAF Mask                     */
#define LPI2C_SSR_TAF_SHIFT                      (3U)                                                /**< LPI2C0_SSR.TAF Position                 */
#define LPI2C_SSR_TAF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_TAF_SHIFT))&LPI2C_SSR_TAF_MASK) /**< LPI2C0_SSR.TAF Field                    */
#define LPI2C_SSR_RSF_MASK                       (0x100U)                                            /**< LPI2C0_SSR.RSF Mask                     */
#define LPI2C_SSR_RSF_SHIFT                      (8U)                                                /**< LPI2C0_SSR.RSF Position                 */
#define LPI2C_SSR_RSF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_RSF_SHIFT))&LPI2C_SSR_RSF_MASK) /**< LPI2C0_SSR.RSF Field                    */
#define LPI2C_SSR_SDF_MASK                       (0x200U)                                            /**< LPI2C0_SSR.SDF Mask                     */
#define LPI2C_SSR_SDF_SHIFT                      (9U)                                                /**< LPI2C0_SSR.SDF Position                 */
#define LPI2C_SSR_SDF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_SDF_SHIFT))&LPI2C_SSR_SDF_MASK) /**< LPI2C0_SSR.SDF Field                    */
#define LPI2C_SSR_BEF_MASK                       (0x400U)                                            /**< LPI2C0_SSR.BEF Mask                     */
#define LPI2C_SSR_BEF_SHIFT                      (10U)                                               /**< LPI2C0_SSR.BEF Position                 */
#define LPI2C_SSR_BEF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_BEF_SHIFT))&LPI2C_SSR_BEF_MASK) /**< LPI2C0_SSR.BEF Field                    */
#define LPI2C_SSR_FEF_MASK                       (0x800U)                                            /**< LPI2C0_SSR.FEF Mask                     */
#define LPI2C_SSR_FEF_SHIFT                      (11U)                                               /**< LPI2C0_SSR.FEF Position                 */
#define LPI2C_SSR_FEF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_FEF_SHIFT))&LPI2C_SSR_FEF_MASK) /**< LPI2C0_SSR.FEF Field                    */
#define LPI2C_SSR_AM0F_MASK                      (0x1000U)                                           /**< LPI2C0_SSR.AM0F Mask                    */
#define LPI2C_SSR_AM0F_SHIFT                     (12U)                                               /**< LPI2C0_SSR.AM0F Position                */
#define LPI2C_SSR_AM0F(x)                        (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_AM0F_SHIFT))&LPI2C_SSR_AM0F_MASK) /**< LPI2C0_SSR.AM0F Field                   */
#define LPI2C_SSR_AM1F_MASK                      (0x2000U)                                           /**< LPI2C0_SSR.AM1F Mask                    */
#define LPI2C_SSR_AM1F_SHIFT                     (13U)                                               /**< LPI2C0_SSR.AM1F Position                */
#define LPI2C_SSR_AM1F(x)                        (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_AM1F_SHIFT))&LPI2C_SSR_AM1F_MASK) /**< LPI2C0_SSR.AM1F Field                   */
#define LPI2C_SSR_GCF_MASK                       (0x4000U)                                           /**< LPI2C0_SSR.GCF Mask                     */
#define LPI2C_SSR_GCF_SHIFT                      (14U)                                               /**< LPI2C0_SSR.GCF Position                 */
#define LPI2C_SSR_GCF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_GCF_SHIFT))&LPI2C_SSR_GCF_MASK) /**< LPI2C0_SSR.GCF Field                    */
#define LPI2C_SSR_SARF_MASK                      (0x8000U)                                           /**< LPI2C0_SSR.SARF Mask                    */
#define LPI2C_SSR_SARF_SHIFT                     (15U)                                               /**< LPI2C0_SSR.SARF Position                */
#define LPI2C_SSR_SARF(x)                        (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_SARF_SHIFT))&LPI2C_SSR_SARF_MASK) /**< LPI2C0_SSR.SARF Field                   */
#define LPI2C_SSR_SBF_MASK                       (0x1000000U)                                        /**< LPI2C0_SSR.SBF Mask                     */
#define LPI2C_SSR_SBF_SHIFT                      (24U)                                               /**< LPI2C0_SSR.SBF Position                 */
#define LPI2C_SSR_SBF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_SBF_SHIFT))&LPI2C_SSR_SBF_MASK) /**< LPI2C0_SSR.SBF Field                    */
#define LPI2C_SSR_BBF_MASK                       (0x2000000U)                                        /**< LPI2C0_SSR.BBF Mask                     */
#define LPI2C_SSR_BBF_SHIFT                      (25U)                                               /**< LPI2C0_SSR.BBF Position                 */
#define LPI2C_SSR_BBF(x)                         (((uint32_t)(((uint32_t)(x))<<LPI2C_SSR_BBF_SHIFT))&LPI2C_SSR_BBF_MASK) /**< LPI2C0_SSR.BBF Field                    */
/** @} */

/** @name SIER - Slave Interrupt Enable Register */ /** @{ */
#define LPI2C_SIER_TDIE_MASK                     (0x1U)                                              /**< LPI2C0_SIER.TDIE Mask                   */
#define LPI2C_SIER_TDIE_SHIFT                    (0U)                                                /**< LPI2C0_SIER.TDIE Position               */
#define LPI2C_SIER_TDIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_TDIE_SHIFT))&LPI2C_SIER_TDIE_MASK) /**< LPI2C0_SIER.TDIE Field                  */
#define LPI2C_SIER_RDIE_MASK                     (0x2U)                                              /**< LPI2C0_SIER.RDIE Mask                   */
#define LPI2C_SIER_RDIE_SHIFT                    (1U)                                                /**< LPI2C0_SIER.RDIE Position               */
#define LPI2C_SIER_RDIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_RDIE_SHIFT))&LPI2C_SIER_RDIE_MASK) /**< LPI2C0_SIER.RDIE Field                  */
#define LPI2C_SIER_AVIE_MASK                     (0x4U)                                              /**< LPI2C0_SIER.AVIE Mask                   */
#define LPI2C_SIER_AVIE_SHIFT                    (2U)                                                /**< LPI2C0_SIER.AVIE Position               */
#define LPI2C_SIER_AVIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_AVIE_SHIFT))&LPI2C_SIER_AVIE_MASK) /**< LPI2C0_SIER.AVIE Field                  */
#define LPI2C_SIER_TAIE_MASK                     (0x8U)                                              /**< LPI2C0_SIER.TAIE Mask                   */
#define LPI2C_SIER_TAIE_SHIFT                    (3U)                                                /**< LPI2C0_SIER.TAIE Position               */
#define LPI2C_SIER_TAIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_TAIE_SHIFT))&LPI2C_SIER_TAIE_MASK) /**< LPI2C0_SIER.TAIE Field                  */
#define LPI2C_SIER_RSIE_MASK                     (0x100U)                                            /**< LPI2C0_SIER.RSIE Mask                   */
#define LPI2C_SIER_RSIE_SHIFT                    (8U)                                                /**< LPI2C0_SIER.RSIE Position               */
#define LPI2C_SIER_RSIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_RSIE_SHIFT))&LPI2C_SIER_RSIE_MASK) /**< LPI2C0_SIER.RSIE Field                  */
#define LPI2C_SIER_SDIE_MASK                     (0x200U)                                            /**< LPI2C0_SIER.SDIE Mask                   */
#define LPI2C_SIER_SDIE_SHIFT                    (9U)                                                /**< LPI2C0_SIER.SDIE Position               */
#define LPI2C_SIER_SDIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_SDIE_SHIFT))&LPI2C_SIER_SDIE_MASK) /**< LPI2C0_SIER.SDIE Field                  */
#define LPI2C_SIER_BEIE_MASK                     (0x400U)                                            /**< LPI2C0_SIER.BEIE Mask                   */
#define LPI2C_SIER_BEIE_SHIFT                    (10U)                                               /**< LPI2C0_SIER.BEIE Position               */
#define LPI2C_SIER_BEIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_BEIE_SHIFT))&LPI2C_SIER_BEIE_MASK) /**< LPI2C0_SIER.BEIE Field                  */
#define LPI2C_SIER_FEIE_MASK                     (0x800U)                                            /**< LPI2C0_SIER.FEIE Mask                   */
#define LPI2C_SIER_FEIE_SHIFT                    (11U)                                               /**< LPI2C0_SIER.FEIE Position               */
#define LPI2C_SIER_FEIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_FEIE_SHIFT))&LPI2C_SIER_FEIE_MASK) /**< LPI2C0_SIER.FEIE Field                  */
#define LPI2C_SIER_AM0IE_MASK                    (0x1000U)                                           /**< LPI2C0_SIER.AM0IE Mask                  */
#define LPI2C_SIER_AM0IE_SHIFT                   (12U)                                               /**< LPI2C0_SIER.AM0IE Position              */
#define LPI2C_SIER_AM0IE(x)                      (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_AM0IE_SHIFT))&LPI2C_SIER_AM0IE_MASK) /**< LPI2C0_SIER.AM0IE Field                 */
#define LPI2C_SIER_AM1F_MASK                     (0x2000U)                                           /**< LPI2C0_SIER.AM1F Mask                   */
#define LPI2C_SIER_AM1F_SHIFT                    (13U)                                               /**< LPI2C0_SIER.AM1F Position               */
#define LPI2C_SIER_AM1F(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_AM1F_SHIFT))&LPI2C_SIER_AM1F_MASK) /**< LPI2C0_SIER.AM1F Field                  */
#define LPI2C_SIER_GCIE_MASK                     (0x4000U)                                           /**< LPI2C0_SIER.GCIE Mask                   */
#define LPI2C_SIER_GCIE_SHIFT                    (14U)                                               /**< LPI2C0_SIER.GCIE Position               */
#define LPI2C_SIER_GCIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_GCIE_SHIFT))&LPI2C_SIER_GCIE_MASK) /**< LPI2C0_SIER.GCIE Field                  */
#define LPI2C_SIER_SARIE_MASK                    (0x8000U)                                           /**< LPI2C0_SIER.SARIE Mask                  */
#define LPI2C_SIER_SARIE_SHIFT                   (15U)                                               /**< LPI2C0_SIER.SARIE Position              */
#define LPI2C_SIER_SARIE(x)                      (((uint32_t)(((uint32_t)(x))<<LPI2C_SIER_SARIE_SHIFT))&LPI2C_SIER_SARIE_MASK) /**< LPI2C0_SIER.SARIE Field                 */
/** @} */

/** @name SDER - Slave DMA Enable Register */ /** @{ */
#define LPI2C_SDER_TDDE_MASK                     (0x1U)                                              /**< LPI2C0_SDER.TDDE Mask                   */
#define LPI2C_SDER_TDDE_SHIFT                    (0U)                                                /**< LPI2C0_SDER.TDDE Position               */
#define LPI2C_SDER_TDDE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SDER_TDDE_SHIFT))&LPI2C_SDER_TDDE_MASK) /**< LPI2C0_SDER.TDDE Field                  */
#define LPI2C_SDER_RDDE_MASK                     (0x2U)                                              /**< LPI2C0_SDER.RDDE Mask                   */
#define LPI2C_SDER_RDDE_SHIFT                    (1U)                                                /**< LPI2C0_SDER.RDDE Position               */
#define LPI2C_SDER_RDDE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SDER_RDDE_SHIFT))&LPI2C_SDER_RDDE_MASK) /**< LPI2C0_SDER.RDDE Field                  */
#define LPI2C_SDER_AVDE_MASK                     (0x4U)                                              /**< LPI2C0_SDER.AVDE Mask                   */
#define LPI2C_SDER_AVDE_SHIFT                    (2U)                                                /**< LPI2C0_SDER.AVDE Position               */
#define LPI2C_SDER_AVDE(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SDER_AVDE_SHIFT))&LPI2C_SDER_AVDE_MASK) /**< LPI2C0_SDER.AVDE Field                  */
/** @} */

/** @name SCFGR1 - Slave Configuration Register 1 */ /** @{ */
#define LPI2C_SCFGR1_ADRSTALL_MASK               (0x1U)                                              /**< LPI2C0_SCFGR1.ADRSTALL Mask             */
#define LPI2C_SCFGR1_ADRSTALL_SHIFT              (0U)                                                /**< LPI2C0_SCFGR1.ADRSTALL Position         */
#define LPI2C_SCFGR1_ADRSTALL(x)                 (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_ADRSTALL_SHIFT))&LPI2C_SCFGR1_ADRSTALL_MASK) /**< LPI2C0_SCFGR1.ADRSTALL Field            */
#define LPI2C_SCFGR1_RXSTALL_MASK                (0x2U)                                              /**< LPI2C0_SCFGR1.RXSTALL Mask              */
#define LPI2C_SCFGR1_RXSTALL_SHIFT               (1U)                                                /**< LPI2C0_SCFGR1.RXSTALL Position          */
#define LPI2C_SCFGR1_RXSTALL(x)                  (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_RXSTALL_SHIFT))&LPI2C_SCFGR1_RXSTALL_MASK) /**< LPI2C0_SCFGR1.RXSTALL Field             */
#define LPI2C_SCFGR1_TXDSTALL_MASK               (0x4U)                                              /**< LPI2C0_SCFGR1.TXDSTALL Mask             */
#define LPI2C_SCFGR1_TXDSTALL_SHIFT              (2U)                                                /**< LPI2C0_SCFGR1.TXDSTALL Position         */
#define LPI2C_SCFGR1_TXDSTALL(x)                 (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_TXDSTALL_SHIFT))&LPI2C_SCFGR1_TXDSTALL_MASK) /**< LPI2C0_SCFGR1.TXDSTALL Field            */
#define LPI2C_SCFGR1_ACKSTALL_MASK               (0x8U)                                              /**< LPI2C0_SCFGR1.ACKSTALL Mask             */
#define LPI2C_SCFGR1_ACKSTALL_SHIFT              (3U)                                                /**< LPI2C0_SCFGR1.ACKSTALL Position         */
#define LPI2C_SCFGR1_ACKSTALL(x)                 (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_ACKSTALL_SHIFT))&LPI2C_SCFGR1_ACKSTALL_MASK) /**< LPI2C0_SCFGR1.ACKSTALL Field            */
#define LPI2C_SCFGR1_GCEN_MASK                   (0x100U)                                            /**< LPI2C0_SCFGR1.GCEN Mask                 */
#define LPI2C_SCFGR1_GCEN_SHIFT                  (8U)                                                /**< LPI2C0_SCFGR1.GCEN Position             */
#define LPI2C_SCFGR1_GCEN(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_GCEN_SHIFT))&LPI2C_SCFGR1_GCEN_MASK) /**< LPI2C0_SCFGR1.GCEN Field                */
#define LPI2C_SCFGR1_SAEN_MASK                   (0x200U)                                            /**< LPI2C0_SCFGR1.SAEN Mask                 */
#define LPI2C_SCFGR1_SAEN_SHIFT                  (9U)                                                /**< LPI2C0_SCFGR1.SAEN Position             */
#define LPI2C_SCFGR1_SAEN(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_SAEN_SHIFT))&LPI2C_SCFGR1_SAEN_MASK) /**< LPI2C0_SCFGR1.SAEN Field                */
#define LPI2C_SCFGR1_TXCFG_MASK                  (0x400U)                                            /**< LPI2C0_SCFGR1.TXCFG Mask                */
#define LPI2C_SCFGR1_TXCFG_SHIFT                 (10U)                                               /**< LPI2C0_SCFGR1.TXCFG Position            */
#define LPI2C_SCFGR1_TXCFG(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_TXCFG_SHIFT))&LPI2C_SCFGR1_TXCFG_MASK) /**< LPI2C0_SCFGR1.TXCFG Field               */
#define LPI2C_SCFGR1_RXCFG_MASK                  (0x800U)                                            /**< LPI2C0_SCFGR1.RXCFG Mask                */
#define LPI2C_SCFGR1_RXCFG_SHIFT                 (11U)                                               /**< LPI2C0_SCFGR1.RXCFG Position            */
#define LPI2C_SCFGR1_RXCFG(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_RXCFG_SHIFT))&LPI2C_SCFGR1_RXCFG_MASK) /**< LPI2C0_SCFGR1.RXCFG Field               */
#define LPI2C_SCFGR1_IGNACK_MASK                 (0x1000U)                                           /**< LPI2C0_SCFGR1.IGNACK Mask               */
#define LPI2C_SCFGR1_IGNACK_SHIFT                (12U)                                               /**< LPI2C0_SCFGR1.IGNACK Position           */
#define LPI2C_SCFGR1_IGNACK(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_IGNACK_SHIFT))&LPI2C_SCFGR1_IGNACK_MASK) /**< LPI2C0_SCFGR1.IGNACK Field              */
#define LPI2C_SCFGR1_HSMEN_MASK                  (0x2000U)                                           /**< LPI2C0_SCFGR1.HSMEN Mask                */
#define LPI2C_SCFGR1_HSMEN_SHIFT                 (13U)                                               /**< LPI2C0_SCFGR1.HSMEN Position            */
#define LPI2C_SCFGR1_HSMEN(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_HSMEN_SHIFT))&LPI2C_SCFGR1_HSMEN_MASK) /**< LPI2C0_SCFGR1.HSMEN Field               */
#define LPI2C_SCFGR1_ADDRCFG_MASK                (0x70000U)                                          /**< LPI2C0_SCFGR1.ADDRCFG Mask              */
#define LPI2C_SCFGR1_ADDRCFG_SHIFT               (16U)                                               /**< LPI2C0_SCFGR1.ADDRCFG Position          */
#define LPI2C_SCFGR1_ADDRCFG(x)                  (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR1_ADDRCFG_SHIFT))&LPI2C_SCFGR1_ADDRCFG_MASK) /**< LPI2C0_SCFGR1.ADDRCFG Field             */
/** @} */

/** @name SCFGR2 - Slave Configuration Register 2 */ /** @{ */
#define LPI2C_SCFGR2_CLKHOLD_MASK                (0xFU)                                              /**< LPI2C0_SCFGR2.CLKHOLD Mask              */
#define LPI2C_SCFGR2_CLKHOLD_SHIFT               (0U)                                                /**< LPI2C0_SCFGR2.CLKHOLD Position          */
#define LPI2C_SCFGR2_CLKHOLD(x)                  (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR2_CLKHOLD_SHIFT))&LPI2C_SCFGR2_CLKHOLD_MASK) /**< LPI2C0_SCFGR2.CLKHOLD Field             */
#define LPI2C_SCFGR2_DATAVD_MASK                 (0x3F00U)                                           /**< LPI2C0_SCFGR2.DATAVD Mask               */
#define LPI2C_SCFGR2_DATAVD_SHIFT                (8U)                                                /**< LPI2C0_SCFGR2.DATAVD Position           */
#define LPI2C_SCFGR2_DATAVD(x)                   (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR2_DATAVD_SHIFT))&LPI2C_SCFGR2_DATAVD_MASK) /**< LPI2C0_SCFGR2.DATAVD Field              */
#define LPI2C_SCFGR2_FILTSCL_MASK                (0xF0000U)                                          /**< LPI2C0_SCFGR2.FILTSCL Mask              */
#define LPI2C_SCFGR2_FILTSCL_SHIFT               (16U)                                               /**< LPI2C0_SCFGR2.FILTSCL Position          */
#define LPI2C_SCFGR2_FILTSCL(x)                  (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR2_FILTSCL_SHIFT))&LPI2C_SCFGR2_FILTSCL_MASK) /**< LPI2C0_SCFGR2.FILTSCL Field             */
#define LPI2C_SCFGR2_FILTSDA_MASK                (0xF000000U)                                        /**< LPI2C0_SCFGR2.FILTSDA Mask              */
#define LPI2C_SCFGR2_FILTSDA_SHIFT               (24U)                                               /**< LPI2C0_SCFGR2.FILTSDA Position          */
#define LPI2C_SCFGR2_FILTSDA(x)                  (((uint32_t)(((uint32_t)(x))<<LPI2C_SCFGR2_FILTSDA_SHIFT))&LPI2C_SCFGR2_FILTSDA_MASK) /**< LPI2C0_SCFGR2.FILTSDA Field             */
/** @} */

/** @name SAMR - Slave Address Match Register */ /** @{ */
#define LPI2C_SAMR_ADDR0_MASK                    (0x7FEU)                                            /**< LPI2C0_SAMR.ADDR0 Mask                  */
#define LPI2C_SAMR_ADDR0_SHIFT                   (1U)                                                /**< LPI2C0_SAMR.ADDR0 Position              */
#define LPI2C_SAMR_ADDR0(x)                      (((uint32_t)(((uint32_t)(x))<<LPI2C_SAMR_ADDR0_SHIFT))&LPI2C_SAMR_ADDR0_MASK) /**< LPI2C0_SAMR.ADDR0 Field                 */
#define LPI2C_SAMR_ADDR1_MASK                    (0x7FE0000U)                                        /**< LPI2C0_SAMR.ADDR1 Mask                  */
#define LPI2C_SAMR_ADDR1_SHIFT                   (17U)                                               /**< LPI2C0_SAMR.ADDR1 Position              */
#define LPI2C_SAMR_ADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<LPI2C_SAMR_ADDR1_SHIFT))&LPI2C_SAMR_ADDR1_MASK) /**< LPI2C0_SAMR.ADDR1 Field                 */
/** @} */

/** @name SASR - Slave Address Status Register */ /** @{ */
#define LPI2C_SASR_RADDR_MASK                    (0x7FFU)                                            /**< LPI2C0_SASR.RADDR Mask                  */
#define LPI2C_SASR_RADDR_SHIFT                   (0U)                                                /**< LPI2C0_SASR.RADDR Position              */
#define LPI2C_SASR_RADDR(x)                      (((uint32_t)(((uint32_t)(x))<<LPI2C_SASR_RADDR_SHIFT))&LPI2C_SASR_RADDR_MASK) /**< LPI2C0_SASR.RADDR Field                 */
#define LPI2C_SASR_ANV_MASK                      (0x4000U)                                           /**< LPI2C0_SASR.ANV Mask                    */
#define LPI2C_SASR_ANV_SHIFT                     (14U)                                               /**< LPI2C0_SASR.ANV Position                */
#define LPI2C_SASR_ANV(x)                        (((uint32_t)(((uint32_t)(x))<<LPI2C_SASR_ANV_SHIFT))&LPI2C_SASR_ANV_MASK) /**< LPI2C0_SASR.ANV Field                   */
/** @} */

/** @name STAR - Slave Transmit ACK Register */ /** @{ */
#define LPI2C_STAR_TXNACK_MASK                   (0x1U)                                              /**< LPI2C0_STAR.TXNACK Mask                 */
#define LPI2C_STAR_TXNACK_SHIFT                  (0U)                                                /**< LPI2C0_STAR.TXNACK Position             */
#define LPI2C_STAR_TXNACK(x)                     (((uint32_t)(((uint32_t)(x))<<LPI2C_STAR_TXNACK_SHIFT))&LPI2C_STAR_TXNACK_MASK) /**< LPI2C0_STAR.TXNACK Field                */
/** @} */

/** @name STDR - Slave Transmit Data Register */ /** @{ */
#define LPI2C_STDR_DATA_MASK                     (0xFFU)                                             /**< LPI2C0_STDR.DATA Mask                   */
#define LPI2C_STDR_DATA_SHIFT                    (0U)                                                /**< LPI2C0_STDR.DATA Position               */
#define LPI2C_STDR_DATA(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_STDR_DATA_SHIFT))&LPI2C_STDR_DATA_MASK) /**< LPI2C0_STDR.DATA Field                  */
/** @} */

/** @name SRDR - Slave Receive Data Register */ /** @{ */
#define LPI2C_SRDR_DATA_MASK                     (0xFFU)                                             /**< LPI2C0_SRDR.DATA Mask                   */
#define LPI2C_SRDR_DATA_SHIFT                    (0U)                                                /**< LPI2C0_SRDR.DATA Position               */
#define LPI2C_SRDR_DATA(x)                       (((uint32_t)(((uint32_t)(x))<<LPI2C_SRDR_DATA_SHIFT))&LPI2C_SRDR_DATA_MASK) /**< LPI2C0_SRDR.DATA Field                  */
#define LPI2C_SRDR_RXEMPTY_MASK                  (0x4000U)                                           /**< LPI2C0_SRDR.RXEMPTY Mask                */
#define LPI2C_SRDR_RXEMPTY_SHIFT                 (14U)                                               /**< LPI2C0_SRDR.RXEMPTY Position            */
#define LPI2C_SRDR_RXEMPTY(x)                    (((uint32_t)(((uint32_t)(x))<<LPI2C_SRDR_RXEMPTY_SHIFT))&LPI2C_SRDR_RXEMPTY_MASK) /**< LPI2C0_SRDR.RXEMPTY Field               */
#define LPI2C_SRDR_SOF_MASK                      (0x8000U)                                           /**< LPI2C0_SRDR.SOF Mask                    */
#define LPI2C_SRDR_SOF_SHIFT                     (15U)                                               /**< LPI2C0_SRDR.SOF Position                */
#define LPI2C_SRDR_SOF(x)                        (((uint32_t)(((uint32_t)(x))<<LPI2C_SRDR_SOF_SHIFT))&LPI2C_SRDR_SOF_MASK) /**< LPI2C0_SRDR.SOF Field                   */
/** @} */

/** @} */ /* End group LPI2C_Register_Masks_GROUP */


/* LPI2C0 - Peripheral instance base addresses */
#define LPI2C0_BasePtr                 0x40066000UL //!< Peripheral base address
#define LPI2C0                         ((LPI2C_Type *) LPI2C0_BasePtr) //!< Freescale base pointer
#define LPI2C0_BASE_PTR                (LPI2C0) //!< Freescale style base pointer
#define LPI2C0_IRQS { LPI2C0_Master_IRQn, LPI2C0_Slave_IRQn,  }


/** @} */ /* End group LPI2C_Peripheral_access_layer_GROUP */


/** @brief C Struct for LPIT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LPIT_Peripheral_access_layer_GROUP LPIT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LPIT0 (file:LPIT0)                   ================ */
/* ================================================================================ */

/**
 * @brief Low Power Periodic Interrupt Timer
 */
#define LPIT_TMR_COUNT       4          /**< Number of timer channels                           */
/**
 * @struct LPIT_Type
 * @brief  C Struct allowing access to LPIT registers
 */
typedef struct LPIT_Type {
   __I  uint32_t  VERID;                        /**< 0000: Version ID Register                                          */
   __I  uint32_t  PARAM;                        /**< 0004: Parameter Register                                           */
   __IO uint32_t  MCR;                          /**< 0008: Module Control Register                                      */
   __IO uint32_t  MSR;                          /**< 000C: Module Status Register                                       */
   __IO uint32_t  MIER;                         /**< 0010: Module Interrupt Enable Register                             */
   __IO uint32_t  SETTEN;                       /**< 0014: Set Timer Enable Register                                    */
   __O  uint32_t  CLRTEN;                       /**< 0018: Clear Timer Enable Register                                  */
        uint8_t   RESERVED_0[4];                /**< 001C: 0x4 bytes                                                    */
   struct {
      __IO uint32_t  TVAL;                      /**< 0020: Timer Value Register                                         */
      __I  uint32_t  CVAL;                      /**< 0024: Current Timer Value                                          */
      __IO uint32_t  TCTRL;                     /**< 0028: Timer Control Register                                       */
           uint8_t   RESERVED_1[4];             /**< 002C: 0x4 bytes                                                    */
   } TMR[LPIT_TMR_COUNT];                       /**< 0020: (cluster: size=0x0040, 64)                                   */
} LPIT_Type;


/** @brief Register Masks for LPIT */

/* -------------------------------------------------------------------------------- */
/* -----------     'LPIT0' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup LPIT_Register_Masks_GROUP LPIT Register Masks */
/** @{ */

/** @name VERID - Version ID Register */ /** @{ */
#define LPIT_VERID_FEATURE_MASK                  (0xFFFFU)                                           /**< LPIT0_VERID.FEATURE Mask                */
#define LPIT_VERID_FEATURE_SHIFT                 (0U)                                                /**< LPIT0_VERID.FEATURE Position            */
#define LPIT_VERID_FEATURE(x)                    (((uint32_t)(((uint32_t)(x))<<LPIT_VERID_FEATURE_SHIFT))&LPIT_VERID_FEATURE_MASK) /**< LPIT0_VERID.FEATURE Field               */
#define LPIT_VERID_MINOR_MASK                    (0xFF0000U)                                         /**< LPIT0_VERID.MINOR Mask                  */
#define LPIT_VERID_MINOR_SHIFT                   (16U)                                               /**< LPIT0_VERID.MINOR Position              */
#define LPIT_VERID_MINOR(x)                      (((uint32_t)(((uint32_t)(x))<<LPIT_VERID_MINOR_SHIFT))&LPIT_VERID_MINOR_MASK) /**< LPIT0_VERID.MINOR Field                 */
#define LPIT_VERID_MAJOR_MASK                    (0xFF000000U)                                       /**< LPIT0_VERID.MAJOR Mask                  */
#define LPIT_VERID_MAJOR_SHIFT                   (24U)                                               /**< LPIT0_VERID.MAJOR Position              */
#define LPIT_VERID_MAJOR(x)                      (((uint32_t)(((uint32_t)(x))<<LPIT_VERID_MAJOR_SHIFT))&LPIT_VERID_MAJOR_MASK) /**< LPIT0_VERID.MAJOR Field                 */
/** @} */

/** @name PARAM - Parameter Register */ /** @{ */
#define LPIT_PARAM_CHANNEL_MASK                  (0xFFU)                                             /**< LPIT0_PARAM.CHANNEL Mask                */
#define LPIT_PARAM_CHANNEL_SHIFT                 (0U)                                                /**< LPIT0_PARAM.CHANNEL Position            */
#define LPIT_PARAM_CHANNEL(x)                    (((uint32_t)(((uint32_t)(x))<<LPIT_PARAM_CHANNEL_SHIFT))&LPIT_PARAM_CHANNEL_MASK) /**< LPIT0_PARAM.CHANNEL Field               */
#define LPIT_PARAM_EXT_TRIG_MASK                 (0xFF00U)                                           /**< LPIT0_PARAM.EXT_TRIG Mask               */
#define LPIT_PARAM_EXT_TRIG_SHIFT                (8U)                                                /**< LPIT0_PARAM.EXT_TRIG Position           */
#define LPIT_PARAM_EXT_TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<LPIT_PARAM_EXT_TRIG_SHIFT))&LPIT_PARAM_EXT_TRIG_MASK) /**< LPIT0_PARAM.EXT_TRIG Field              */
/** @} */

/** @name MCR - Module Control Register */ /** @{ */
#define LPIT_MCR_M_CEN_MASK                      (0x1U)                                              /**< LPIT0_MCR.M_CEN Mask                    */
#define LPIT_MCR_M_CEN_SHIFT                     (0U)                                                /**< LPIT0_MCR.M_CEN Position                */
#define LPIT_MCR_M_CEN(x)                        (((uint32_t)(((uint32_t)(x))<<LPIT_MCR_M_CEN_SHIFT))&LPIT_MCR_M_CEN_MASK) /**< LPIT0_MCR.M_CEN Field                   */
#define LPIT_MCR_SW_RST_MASK                     (0x2U)                                              /**< LPIT0_MCR.SW_RST Mask                   */
#define LPIT_MCR_SW_RST_SHIFT                    (1U)                                                /**< LPIT0_MCR.SW_RST Position               */
#define LPIT_MCR_SW_RST(x)                       (((uint32_t)(((uint32_t)(x))<<LPIT_MCR_SW_RST_SHIFT))&LPIT_MCR_SW_RST_MASK) /**< LPIT0_MCR.SW_RST Field                  */
#define LPIT_MCR_DOZE_EN_MASK                    (0x4U)                                              /**< LPIT0_MCR.DOZE_EN Mask                  */
#define LPIT_MCR_DOZE_EN_SHIFT                   (2U)                                                /**< LPIT0_MCR.DOZE_EN Position              */
#define LPIT_MCR_DOZE_EN(x)                      (((uint32_t)(((uint32_t)(x))<<LPIT_MCR_DOZE_EN_SHIFT))&LPIT_MCR_DOZE_EN_MASK) /**< LPIT0_MCR.DOZE_EN Field                 */
#define LPIT_MCR_DBG_EN_MASK                     (0x8U)                                              /**< LPIT0_MCR.DBG_EN Mask                   */
#define LPIT_MCR_DBG_EN_SHIFT                    (3U)                                                /**< LPIT0_MCR.DBG_EN Position               */
#define LPIT_MCR_DBG_EN(x)                       (((uint32_t)(((uint32_t)(x))<<LPIT_MCR_DBG_EN_SHIFT))&LPIT_MCR_DBG_EN_MASK) /**< LPIT0_MCR.DBG_EN Field                  */
/** @} */

/** @name MSR - Module Status Register */ /** @{ */
#define LPIT_MSR_TIF0_MASK                       (0x1U)                                              /**< LPIT0_MSR.TIF0 Mask                     */
#define LPIT_MSR_TIF0_SHIFT                      (0U)                                                /**< LPIT0_MSR.TIF0 Position                 */
#define LPIT_MSR_TIF0(x)                         (((uint32_t)(((uint32_t)(x))<<LPIT_MSR_TIF0_SHIFT))&LPIT_MSR_TIF0_MASK) /**< LPIT0_MSR.TIF0 Field                    */
#define LPIT_MSR_TIF1_MASK                       (0x2U)                                              /**< LPIT0_MSR.TIF1 Mask                     */
#define LPIT_MSR_TIF1_SHIFT                      (1U)                                                /**< LPIT0_MSR.TIF1 Position                 */
#define LPIT_MSR_TIF1(x)                         (((uint32_t)(((uint32_t)(x))<<LPIT_MSR_TIF1_SHIFT))&LPIT_MSR_TIF1_MASK) /**< LPIT0_MSR.TIF1 Field                    */
#define LPIT_MSR_TIF2_MASK                       (0x4U)                                              /**< LPIT0_MSR.TIF2 Mask                     */
#define LPIT_MSR_TIF2_SHIFT                      (2U)                                                /**< LPIT0_MSR.TIF2 Position                 */
#define LPIT_MSR_TIF2(x)                         (((uint32_t)(((uint32_t)(x))<<LPIT_MSR_TIF2_SHIFT))&LPIT_MSR_TIF2_MASK) /**< LPIT0_MSR.TIF2 Field                    */
#define LPIT_MSR_TIF3_MASK                       (0x8U)                                              /**< LPIT0_MSR.TIF3 Mask                     */
#define LPIT_MSR_TIF3_SHIFT                      (3U)                                                /**< LPIT0_MSR.TIF3 Position                 */
#define LPIT_MSR_TIF3(x)                         (((uint32_t)(((uint32_t)(x))<<LPIT_MSR_TIF3_SHIFT))&LPIT_MSR_TIF3_MASK) /**< LPIT0_MSR.TIF3 Field                    */
/** @} */

/** @name MIER - Module Interrupt Enable Register */ /** @{ */
#define LPIT_MIER_TIE0_MASK                      (0x1U)                                              /**< LPIT0_MIER.TIE0 Mask                    */
#define LPIT_MIER_TIE0_SHIFT                     (0U)                                                /**< LPIT0_MIER.TIE0 Position                */
#define LPIT_MIER_TIE0(x)                        (((uint32_t)(((uint32_t)(x))<<LPIT_MIER_TIE0_SHIFT))&LPIT_MIER_TIE0_MASK) /**< LPIT0_MIER.TIE0 Field                   */
#define LPIT_MIER_TIE1_MASK                      (0x2U)                                              /**< LPIT0_MIER.TIE1 Mask                    */
#define LPIT_MIER_TIE1_SHIFT                     (1U)                                                /**< LPIT0_MIER.TIE1 Position                */
#define LPIT_MIER_TIE1(x)                        (((uint32_t)(((uint32_t)(x))<<LPIT_MIER_TIE1_SHIFT))&LPIT_MIER_TIE1_MASK) /**< LPIT0_MIER.TIE1 Field                   */
#define LPIT_MIER_TIE2_MASK                      (0x4U)                                              /**< LPIT0_MIER.TIE2 Mask                    */
#define LPIT_MIER_TIE2_SHIFT                     (2U)                                                /**< LPIT0_MIER.TIE2 Position                */
#define LPIT_MIER_TIE2(x)                        (((uint32_t)(((uint32_t)(x))<<LPIT_MIER_TIE2_SHIFT))&LPIT_MIER_TIE2_MASK) /**< LPIT0_MIER.TIE2 Field                   */
#define LPIT_MIER_TIE3_MASK                      (0x8U)                                              /**< LPIT0_MIER.TIE3 Mask                    */
#define LPIT_MIER_TIE3_SHIFT                     (3U)                                                /**< LPIT0_MIER.TIE3 Position                */
#define LPIT_MIER_TIE3(x)                        (((uint32_t)(((uint32_t)(x))<<LPIT_MIER_TIE3_SHIFT))&LPIT_MIER_TIE3_MASK) /**< LPIT0_MIER.TIE3 Field                   */
/** @} */

/** @name SETTEN - Set Timer Enable Register */ /** @{ */
#define LPIT_SETTEN_SET_T_EN_0_MASK              (0x1U)                                              /**< LPIT0_SETTEN.SET_T_EN_0 Mask            */
#define LPIT_SETTEN_SET_T_EN_0_SHIFT             (0U)                                                /**< LPIT0_SETTEN.SET_T_EN_0 Position        */
#define LPIT_SETTEN_SET_T_EN_0(x)                (((uint32_t)(((uint32_t)(x))<<LPIT_SETTEN_SET_T_EN_0_SHIFT))&LPIT_SETTEN_SET_T_EN_0_MASK) /**< LPIT0_SETTEN.SET_T_EN_0 Field           */
#define LPIT_SETTEN_SET_T_EN_1_MASK              (0x2U)                                              /**< LPIT0_SETTEN.SET_T_EN_1 Mask            */
#define LPIT_SETTEN_SET_T_EN_1_SHIFT             (1U)                                                /**< LPIT0_SETTEN.SET_T_EN_1 Position        */
#define LPIT_SETTEN_SET_T_EN_1(x)                (((uint32_t)(((uint32_t)(x))<<LPIT_SETTEN_SET_T_EN_1_SHIFT))&LPIT_SETTEN_SET_T_EN_1_MASK) /**< LPIT0_SETTEN.SET_T_EN_1 Field           */
#define LPIT_SETTEN_SET_T_EN_2_MASK              (0x4U)                                              /**< LPIT0_SETTEN.SET_T_EN_2 Mask            */
#define LPIT_SETTEN_SET_T_EN_2_SHIFT             (2U)                                                /**< LPIT0_SETTEN.SET_T_EN_2 Position        */
#define LPIT_SETTEN_SET_T_EN_2(x)                (((uint32_t)(((uint32_t)(x))<<LPIT_SETTEN_SET_T_EN_2_SHIFT))&LPIT_SETTEN_SET_T_EN_2_MASK) /**< LPIT0_SETTEN.SET_T_EN_2 Field           */
#define LPIT_SETTEN_SET_T_EN_3_MASK              (0x8U)                                              /**< LPIT0_SETTEN.SET_T_EN_3 Mask            */
#define LPIT_SETTEN_SET_T_EN_3_SHIFT             (3U)                                                /**< LPIT0_SETTEN.SET_T_EN_3 Position        */
#define LPIT_SETTEN_SET_T_EN_3(x)                (((uint32_t)(((uint32_t)(x))<<LPIT_SETTEN_SET_T_EN_3_SHIFT))&LPIT_SETTEN_SET_T_EN_3_MASK) /**< LPIT0_SETTEN.SET_T_EN_3 Field           */
/** @} */

/** @name CLRTEN - Clear Timer Enable Register */ /** @{ */
#define LPIT_CLRTEN_CLR_T_EN_0_MASK              (0x1U)                                              /**< LPIT0_CLRTEN.CLR_T_EN_0 Mask            */
#define LPIT_CLRTEN_CLR_T_EN_0_SHIFT             (0U)                                                /**< LPIT0_CLRTEN.CLR_T_EN_0 Position        */
#define LPIT_CLRTEN_CLR_T_EN_0(x)                (((uint32_t)(((uint32_t)(x))<<LPIT_CLRTEN_CLR_T_EN_0_SHIFT))&LPIT_CLRTEN_CLR_T_EN_0_MASK) /**< LPIT0_CLRTEN.CLR_T_EN_0 Field           */
#define LPIT_CLRTEN_CLR_T_EN_1_MASK              (0x2U)                                              /**< LPIT0_CLRTEN.CLR_T_EN_1 Mask            */
#define LPIT_CLRTEN_CLR_T_EN_1_SHIFT             (1U)                                                /**< LPIT0_CLRTEN.CLR_T_EN_1 Position        */
#define LPIT_CLRTEN_CLR_T_EN_1(x)                (((uint32_t)(((uint32_t)(x))<<LPIT_CLRTEN_CLR_T_EN_1_SHIFT))&LPIT_CLRTEN_CLR_T_EN_1_MASK) /**< LPIT0_CLRTEN.CLR_T_EN_1 Field           */
#define LPIT_CLRTEN_CLR_T_EN_2_MASK              (0x4U)                                              /**< LPIT0_CLRTEN.CLR_T_EN_2 Mask            */
#define LPIT_CLRTEN_CLR_T_EN_2_SHIFT             (2U)                                                /**< LPIT0_CLRTEN.CLR_T_EN_2 Position        */
#define LPIT_CLRTEN_CLR_T_EN_2(x)                (((uint32_t)(((uint32_t)(x))<<LPIT_CLRTEN_CLR_T_EN_2_SHIFT))&LPIT_CLRTEN_CLR_T_EN_2_MASK) /**< LPIT0_CLRTEN.CLR_T_EN_2 Field           */
#define LPIT_CLRTEN_CLR_T_EN_3_MASK              (0x8U)                                              /**< LPIT0_CLRTEN.CLR_T_EN_3 Mask            */
#define LPIT_CLRTEN_CLR_T_EN_3_SHIFT             (3U)                                                /**< LPIT0_CLRTEN.CLR_T_EN_3 Position        */
#define LPIT_CLRTEN_CLR_T_EN_3(x)                (((uint32_t)(((uint32_t)(x))<<LPIT_CLRTEN_CLR_T_EN_3_SHIFT))&LPIT_CLRTEN_CLR_T_EN_3_MASK) /**< LPIT0_CLRTEN.CLR_T_EN_3 Field           */
/** @} */

/** @name TVAL - Timer Value Register */ /** @{ */
#define LPIT_TVAL_TMR_VAL_MASK                   (0xFFFFFFFFU)                                       /**< LPIT0_TVAL.TMR_VAL Mask                 */
#define LPIT_TVAL_TMR_VAL_SHIFT                  (0U)                                                /**< LPIT0_TVAL.TMR_VAL Position             */
#define LPIT_TVAL_TMR_VAL(x)                     (((uint32_t)(((uint32_t)(x))<<LPIT_TVAL_TMR_VAL_SHIFT))&LPIT_TVAL_TMR_VAL_MASK) /**< LPIT0_TVAL.TMR_VAL Field                */
/** @} */

/** @name CVAL - Current Timer Value */ /** @{ */
#define LPIT_CVAL_TMR_CUR_VAL_MASK               (0xFFFFFFFFU)                                       /**< LPIT0_CVAL.TMR_CUR_VAL Mask             */
#define LPIT_CVAL_TMR_CUR_VAL_SHIFT              (0U)                                                /**< LPIT0_CVAL.TMR_CUR_VAL Position         */
#define LPIT_CVAL_TMR_CUR_VAL(x)                 (((uint32_t)(((uint32_t)(x))<<LPIT_CVAL_TMR_CUR_VAL_SHIFT))&LPIT_CVAL_TMR_CUR_VAL_MASK) /**< LPIT0_CVAL.TMR_CUR_VAL Field            */
/** @} */

/** @name TCTRL - Timer Control Register */ /** @{ */
#define LPIT_TCTRL_T_EN_MASK                     (0x1U)                                              /**< LPIT0_TCTRL.T_EN Mask                   */
#define LPIT_TCTRL_T_EN_SHIFT                    (0U)                                                /**< LPIT0_TCTRL.T_EN Position               */
#define LPIT_TCTRL_T_EN(x)                       (((uint32_t)(((uint32_t)(x))<<LPIT_TCTRL_T_EN_SHIFT))&LPIT_TCTRL_T_EN_MASK) /**< LPIT0_TCTRL.T_EN Field                  */
#define LPIT_TCTRL_CHAIN_MASK                    (0x2U)                                              /**< LPIT0_TCTRL.CHAIN Mask                  */
#define LPIT_TCTRL_CHAIN_SHIFT                   (1U)                                                /**< LPIT0_TCTRL.CHAIN Position              */
#define LPIT_TCTRL_CHAIN(x)                      (((uint32_t)(((uint32_t)(x))<<LPIT_TCTRL_CHAIN_SHIFT))&LPIT_TCTRL_CHAIN_MASK) /**< LPIT0_TCTRL.CHAIN Field                 */
#define LPIT_TCTRL_MODE_MASK                     (0xCU)                                              /**< LPIT0_TCTRL.MODE Mask                   */
#define LPIT_TCTRL_MODE_SHIFT                    (2U)                                                /**< LPIT0_TCTRL.MODE Position               */
#define LPIT_TCTRL_MODE(x)                       (((uint32_t)(((uint32_t)(x))<<LPIT_TCTRL_MODE_SHIFT))&LPIT_TCTRL_MODE_MASK) /**< LPIT0_TCTRL.MODE Field                  */
#define LPIT_TCTRL_TSOT_MASK                     (0x10000U)                                          /**< LPIT0_TCTRL.TSOT Mask                   */
#define LPIT_TCTRL_TSOT_SHIFT                    (16U)                                               /**< LPIT0_TCTRL.TSOT Position               */
#define LPIT_TCTRL_TSOT(x)                       (((uint32_t)(((uint32_t)(x))<<LPIT_TCTRL_TSOT_SHIFT))&LPIT_TCTRL_TSOT_MASK) /**< LPIT0_TCTRL.TSOT Field                  */
#define LPIT_TCTRL_TSOI_MASK                     (0x20000U)                                          /**< LPIT0_TCTRL.TSOI Mask                   */
#define LPIT_TCTRL_TSOI_SHIFT                    (17U)                                               /**< LPIT0_TCTRL.TSOI Position               */
#define LPIT_TCTRL_TSOI(x)                       (((uint32_t)(((uint32_t)(x))<<LPIT_TCTRL_TSOI_SHIFT))&LPIT_TCTRL_TSOI_MASK) /**< LPIT0_TCTRL.TSOI Field                  */
#define LPIT_TCTRL_TROT_MASK                     (0x40000U)                                          /**< LPIT0_TCTRL.TROT Mask                   */
#define LPIT_TCTRL_TROT_SHIFT                    (18U)                                               /**< LPIT0_TCTRL.TROT Position               */
#define LPIT_TCTRL_TROT(x)                       (((uint32_t)(((uint32_t)(x))<<LPIT_TCTRL_TROT_SHIFT))&LPIT_TCTRL_TROT_MASK) /**< LPIT0_TCTRL.TROT Field                  */
#define LPIT_TCTRL_TRG_SRC_MASK                  (0x800000U)                                         /**< LPIT0_TCTRL.TRG_SRC Mask                */
#define LPIT_TCTRL_TRG_SRC_SHIFT                 (23U)                                               /**< LPIT0_TCTRL.TRG_SRC Position            */
#define LPIT_TCTRL_TRG_SRC(x)                    (((uint32_t)(((uint32_t)(x))<<LPIT_TCTRL_TRG_SRC_SHIFT))&LPIT_TCTRL_TRG_SRC_MASK) /**< LPIT0_TCTRL.TRG_SRC Field               */
#define LPIT_TCTRL_TRG_SEL_MASK                  (0xF000000U)                                        /**< LPIT0_TCTRL.TRG_SEL Mask                */
#define LPIT_TCTRL_TRG_SEL_SHIFT                 (24U)                                               /**< LPIT0_TCTRL.TRG_SEL Position            */
#define LPIT_TCTRL_TRG_SEL(x)                    (((uint32_t)(((uint32_t)(x))<<LPIT_TCTRL_TRG_SEL_SHIFT))&LPIT_TCTRL_TRG_SEL_MASK) /**< LPIT0_TCTRL.TRG_SEL Field               */
/** @} */

/** @} */ /* End group LPIT_Register_Masks_GROUP */


/* LPIT0 - Peripheral instance base addresses */
#define LPIT0_BasePtr                  0x40037000UL //!< Peripheral base address
#define LPIT0                          ((LPIT_Type *) LPIT0_BasePtr) //!< Freescale base pointer
#define LPIT0_BASE_PTR                 (LPIT0) //!< Freescale style base pointer
#define LPIT0_IRQS { LPIT0_Ch0_IRQn, LPIT0_Ch1_IRQn, LPIT0_Ch2_IRQn, LPIT0_Ch3_IRQn,  }


/** @} */ /* End group LPIT_Peripheral_access_layer_GROUP */


/** @brief C Struct for LPSPI */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LPSPI_Peripheral_access_layer_GROUP LPSPI Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LPSPI0 (file:LPSPI0)                 ================ */
/* ================================================================================ */

/**
 * @brief Low power SPI
 */
/**
 * @struct LPSPI_Type
 * @brief  C Struct allowing access to LPSPI registers
 */
typedef struct LPSPI_Type {
   __I  uint32_t  VERID;                        /**< 0000: Version ID Register                                          */
   __I  uint32_t  PARAM;                        /**< 0004: Parameter Register                                           */
        uint8_t   RESERVED_0[8];                /**< 0008: 0x8 bytes                                                    */
   __IO uint32_t  CR;                           /**< 0010: Control Register                                             */
   __IO uint32_t  SR;                           /**< 0014: Status Register                                              */
   __IO uint32_t  IER;                          /**< 0018: Interrupt Enable Register                                    */
   __IO uint32_t  DER;                          /**< 001C: DMA Enable Register                                          */
   __IO uint32_t  CFGR0;                        /**< 0020: Configuration Register 0                                     */
   __IO uint32_t  CFGR1;                        /**< 0024: Configuration Register 1                                     */
        uint8_t   RESERVED_1[8];                /**< 0028: 0x8 bytes                                                    */
   __IO uint32_t  DMR[2];                       /**< 0030: Data Match Register                                          */
        uint8_t   RESERVED_2[8];                /**< 0038: 0x8 bytes                                                    */
   __IO uint32_t  CCR;                          /**< 0040: Clock Configuration Register                                 */
        uint8_t   RESERVED_3[20];               /**< 0044: 0x14 bytes                                                   */
   __IO uint32_t  FCR;                          /**< 0058: FIFO Control Register                                        */
   __I  uint32_t  FSR;                          /**< 005C: FIFO Status Register                                         */
   __IO uint32_t  TCR;                          /**< 0060: Transmit Command Register                                    */
   __O  uint32_t  TDR;                          /**< 0064: Transmit Data Register                                       */
        uint8_t   RESERVED_4[8];                /**< 0068: 0x8 bytes                                                    */
   __I  uint32_t  RSR;                          /**< 0070: Receive Status Register                                      */
   __I  uint32_t  RDR;                          /**< 0074: Receive Data Register                                        */
} LPSPI_Type;


/** @brief Register Masks for LPSPI */

/* -------------------------------------------------------------------------------- */
/* -----------     'LPSPI0' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup LPSPI_Register_Masks_GROUP LPSPI Register Masks */
/** @{ */

/** @name VERID - Version ID Register */ /** @{ */
#define LPSPI_VERID_FEATURE_MASK                 (0xFFFFU)                                           /**< LPSPI0_VERID.FEATURE Mask               */
#define LPSPI_VERID_FEATURE_SHIFT                (0U)                                                /**< LPSPI0_VERID.FEATURE Position           */
#define LPSPI_VERID_FEATURE(x)                   (((uint32_t)(((uint32_t)(x))<<LPSPI_VERID_FEATURE_SHIFT))&LPSPI_VERID_FEATURE_MASK) /**< LPSPI0_VERID.FEATURE Field              */
#define LPSPI_VERID_MINOR_MASK                   (0xFF0000U)                                         /**< LPSPI0_VERID.MINOR Mask                 */
#define LPSPI_VERID_MINOR_SHIFT                  (16U)                                               /**< LPSPI0_VERID.MINOR Position             */
#define LPSPI_VERID_MINOR(x)                     (((uint32_t)(((uint32_t)(x))<<LPSPI_VERID_MINOR_SHIFT))&LPSPI_VERID_MINOR_MASK) /**< LPSPI0_VERID.MINOR Field                */
#define LPSPI_VERID_MAJOR_MASK                   (0xFF000000U)                                       /**< LPSPI0_VERID.MAJOR Mask                 */
#define LPSPI_VERID_MAJOR_SHIFT                  (24U)                                               /**< LPSPI0_VERID.MAJOR Position             */
#define LPSPI_VERID_MAJOR(x)                     (((uint32_t)(((uint32_t)(x))<<LPSPI_VERID_MAJOR_SHIFT))&LPSPI_VERID_MAJOR_MASK) /**< LPSPI0_VERID.MAJOR Field                */
/** @} */

/** @name PARAM - Parameter Register */ /** @{ */
#define LPSPI_PARAM_TXFIFO_MASK                  (0xFFU)                                             /**< LPSPI0_PARAM.TXFIFO Mask                */
#define LPSPI_PARAM_TXFIFO_SHIFT                 (0U)                                                /**< LPSPI0_PARAM.TXFIFO Position            */
#define LPSPI_PARAM_TXFIFO(x)                    (((uint32_t)(((uint32_t)(x))<<LPSPI_PARAM_TXFIFO_SHIFT))&LPSPI_PARAM_TXFIFO_MASK) /**< LPSPI0_PARAM.TXFIFO Field               */
#define LPSPI_PARAM_RXFIFO_MASK                  (0xFF00U)                                           /**< LPSPI0_PARAM.RXFIFO Mask                */
#define LPSPI_PARAM_RXFIFO_SHIFT                 (8U)                                                /**< LPSPI0_PARAM.RXFIFO Position            */
#define LPSPI_PARAM_RXFIFO(x)                    (((uint32_t)(((uint32_t)(x))<<LPSPI_PARAM_RXFIFO_SHIFT))&LPSPI_PARAM_RXFIFO_MASK) /**< LPSPI0_PARAM.RXFIFO Field               */
/** @} */

/** @name CR - Control Register */ /** @{ */
#define LPSPI_CR_MEN_MASK                        (0x1U)                                              /**< LPSPI0_CR.MEN Mask                      */
#define LPSPI_CR_MEN_SHIFT                       (0U)                                                /**< LPSPI0_CR.MEN Position                  */
#define LPSPI_CR_MEN(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_CR_MEN_SHIFT))&LPSPI_CR_MEN_MASK) /**< LPSPI0_CR.MEN Field                     */
#define LPSPI_CR_RST_MASK                        (0x2U)                                              /**< LPSPI0_CR.RST Mask                      */
#define LPSPI_CR_RST_SHIFT                       (1U)                                                /**< LPSPI0_CR.RST Position                  */
#define LPSPI_CR_RST(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_CR_RST_SHIFT))&LPSPI_CR_RST_MASK) /**< LPSPI0_CR.RST Field                     */
#define LPSPI_CR_DOZEN_MASK                      (0x4U)                                              /**< LPSPI0_CR.DOZEN Mask                    */
#define LPSPI_CR_DOZEN_SHIFT                     (2U)                                                /**< LPSPI0_CR.DOZEN Position                */
#define LPSPI_CR_DOZEN(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_CR_DOZEN_SHIFT))&LPSPI_CR_DOZEN_MASK) /**< LPSPI0_CR.DOZEN Field                   */
#define LPSPI_CR_DBGEN_MASK                      (0x8U)                                              /**< LPSPI0_CR.DBGEN Mask                    */
#define LPSPI_CR_DBGEN_SHIFT                     (3U)                                                /**< LPSPI0_CR.DBGEN Position                */
#define LPSPI_CR_DBGEN(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_CR_DBGEN_SHIFT))&LPSPI_CR_DBGEN_MASK) /**< LPSPI0_CR.DBGEN Field                   */
#define LPSPI_CR_RTF_MASK                        (0x100U)                                            /**< LPSPI0_CR.RTF Mask                      */
#define LPSPI_CR_RTF_SHIFT                       (8U)                                                /**< LPSPI0_CR.RTF Position                  */
#define LPSPI_CR_RTF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_CR_RTF_SHIFT))&LPSPI_CR_RTF_MASK) /**< LPSPI0_CR.RTF Field                     */
#define LPSPI_CR_RRF_MASK                        (0x200U)                                            /**< LPSPI0_CR.RRF Mask                      */
#define LPSPI_CR_RRF_SHIFT                       (9U)                                                /**< LPSPI0_CR.RRF Position                  */
#define LPSPI_CR_RRF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_CR_RRF_SHIFT))&LPSPI_CR_RRF_MASK) /**< LPSPI0_CR.RRF Field                     */
/** @} */

/** @name SR - Status Register */ /** @{ */
#define LPSPI_SR_TDF_MASK                        (0x1U)                                              /**< LPSPI0_SR.TDF Mask                      */
#define LPSPI_SR_TDF_SHIFT                       (0U)                                                /**< LPSPI0_SR.TDF Position                  */
#define LPSPI_SR_TDF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_SR_TDF_SHIFT))&LPSPI_SR_TDF_MASK) /**< LPSPI0_SR.TDF Field                     */
#define LPSPI_SR_RDF_MASK                        (0x2U)                                              /**< LPSPI0_SR.RDF Mask                      */
#define LPSPI_SR_RDF_SHIFT                       (1U)                                                /**< LPSPI0_SR.RDF Position                  */
#define LPSPI_SR_RDF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_SR_RDF_SHIFT))&LPSPI_SR_RDF_MASK) /**< LPSPI0_SR.RDF Field                     */
#define LPSPI_SR_WCF_MASK                        (0x100U)                                            /**< LPSPI0_SR.WCF Mask                      */
#define LPSPI_SR_WCF_SHIFT                       (8U)                                                /**< LPSPI0_SR.WCF Position                  */
#define LPSPI_SR_WCF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_SR_WCF_SHIFT))&LPSPI_SR_WCF_MASK) /**< LPSPI0_SR.WCF Field                     */
#define LPSPI_SR_FCF_MASK                        (0x200U)                                            /**< LPSPI0_SR.FCF Mask                      */
#define LPSPI_SR_FCF_SHIFT                       (9U)                                                /**< LPSPI0_SR.FCF Position                  */
#define LPSPI_SR_FCF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_SR_FCF_SHIFT))&LPSPI_SR_FCF_MASK) /**< LPSPI0_SR.FCF Field                     */
#define LPSPI_SR_TCF_MASK                        (0x400U)                                            /**< LPSPI0_SR.TCF Mask                      */
#define LPSPI_SR_TCF_SHIFT                       (10U)                                               /**< LPSPI0_SR.TCF Position                  */
#define LPSPI_SR_TCF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_SR_TCF_SHIFT))&LPSPI_SR_TCF_MASK) /**< LPSPI0_SR.TCF Field                     */
#define LPSPI_SR_TEF_MASK                        (0x800U)                                            /**< LPSPI0_SR.TEF Mask                      */
#define LPSPI_SR_TEF_SHIFT                       (11U)                                               /**< LPSPI0_SR.TEF Position                  */
#define LPSPI_SR_TEF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_SR_TEF_SHIFT))&LPSPI_SR_TEF_MASK) /**< LPSPI0_SR.TEF Field                     */
#define LPSPI_SR_REF_MASK                        (0x1000U)                                           /**< LPSPI0_SR.REF Mask                      */
#define LPSPI_SR_REF_SHIFT                       (12U)                                               /**< LPSPI0_SR.REF Position                  */
#define LPSPI_SR_REF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_SR_REF_SHIFT))&LPSPI_SR_REF_MASK) /**< LPSPI0_SR.REF Field                     */
#define LPSPI_SR_DMF_MASK                        (0x2000U)                                           /**< LPSPI0_SR.DMF Mask                      */
#define LPSPI_SR_DMF_SHIFT                       (13U)                                               /**< LPSPI0_SR.DMF Position                  */
#define LPSPI_SR_DMF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_SR_DMF_SHIFT))&LPSPI_SR_DMF_MASK) /**< LPSPI0_SR.DMF Field                     */
#define LPSPI_SR_MBF_MASK                        (0x1000000U)                                        /**< LPSPI0_SR.MBF Mask                      */
#define LPSPI_SR_MBF_SHIFT                       (24U)                                               /**< LPSPI0_SR.MBF Position                  */
#define LPSPI_SR_MBF(x)                          (((uint32_t)(((uint32_t)(x))<<LPSPI_SR_MBF_SHIFT))&LPSPI_SR_MBF_MASK) /**< LPSPI0_SR.MBF Field                     */
/** @} */

/** @name IER - Interrupt Enable Register */ /** @{ */
#define LPSPI_IER_TDIE_MASK                      (0x1U)                                              /**< LPSPI0_IER.TDIE Mask                    */
#define LPSPI_IER_TDIE_SHIFT                     (0U)                                                /**< LPSPI0_IER.TDIE Position                */
#define LPSPI_IER_TDIE(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_IER_TDIE_SHIFT))&LPSPI_IER_TDIE_MASK) /**< LPSPI0_IER.TDIE Field                   */
#define LPSPI_IER_RDIE_MASK                      (0x2U)                                              /**< LPSPI0_IER.RDIE Mask                    */
#define LPSPI_IER_RDIE_SHIFT                     (1U)                                                /**< LPSPI0_IER.RDIE Position                */
#define LPSPI_IER_RDIE(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_IER_RDIE_SHIFT))&LPSPI_IER_RDIE_MASK) /**< LPSPI0_IER.RDIE Field                   */
#define LPSPI_IER_WCIE_MASK                      (0x100U)                                            /**< LPSPI0_IER.WCIE Mask                    */
#define LPSPI_IER_WCIE_SHIFT                     (8U)                                                /**< LPSPI0_IER.WCIE Position                */
#define LPSPI_IER_WCIE(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_IER_WCIE_SHIFT))&LPSPI_IER_WCIE_MASK) /**< LPSPI0_IER.WCIE Field                   */
#define LPSPI_IER_FCIE_MASK                      (0x200U)                                            /**< LPSPI0_IER.FCIE Mask                    */
#define LPSPI_IER_FCIE_SHIFT                     (9U)                                                /**< LPSPI0_IER.FCIE Position                */
#define LPSPI_IER_FCIE(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_IER_FCIE_SHIFT))&LPSPI_IER_FCIE_MASK) /**< LPSPI0_IER.FCIE Field                   */
#define LPSPI_IER_TCIE_MASK                      (0x400U)                                            /**< LPSPI0_IER.TCIE Mask                    */
#define LPSPI_IER_TCIE_SHIFT                     (10U)                                               /**< LPSPI0_IER.TCIE Position                */
#define LPSPI_IER_TCIE(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_IER_TCIE_SHIFT))&LPSPI_IER_TCIE_MASK) /**< LPSPI0_IER.TCIE Field                   */
#define LPSPI_IER_TEIE_MASK                      (0x800U)                                            /**< LPSPI0_IER.TEIE Mask                    */
#define LPSPI_IER_TEIE_SHIFT                     (11U)                                               /**< LPSPI0_IER.TEIE Position                */
#define LPSPI_IER_TEIE(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_IER_TEIE_SHIFT))&LPSPI_IER_TEIE_MASK) /**< LPSPI0_IER.TEIE Field                   */
#define LPSPI_IER_REIE_MASK                      (0x1000U)                                           /**< LPSPI0_IER.REIE Mask                    */
#define LPSPI_IER_REIE_SHIFT                     (12U)                                               /**< LPSPI0_IER.REIE Position                */
#define LPSPI_IER_REIE(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_IER_REIE_SHIFT))&LPSPI_IER_REIE_MASK) /**< LPSPI0_IER.REIE Field                   */
#define LPSPI_IER_DMIE_MASK                      (0x2000U)                                           /**< LPSPI0_IER.DMIE Mask                    */
#define LPSPI_IER_DMIE_SHIFT                     (13U)                                               /**< LPSPI0_IER.DMIE Position                */
#define LPSPI_IER_DMIE(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_IER_DMIE_SHIFT))&LPSPI_IER_DMIE_MASK) /**< LPSPI0_IER.DMIE Field                   */
/** @} */

/** @name DER - DMA Enable Register */ /** @{ */
#define LPSPI_DER_TDDE_MASK                      (0x1U)                                              /**< LPSPI0_DER.TDDE Mask                    */
#define LPSPI_DER_TDDE_SHIFT                     (0U)                                                /**< LPSPI0_DER.TDDE Position                */
#define LPSPI_DER_TDDE(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_DER_TDDE_SHIFT))&LPSPI_DER_TDDE_MASK) /**< LPSPI0_DER.TDDE Field                   */
#define LPSPI_DER_RDDE_MASK                      (0x2U)                                              /**< LPSPI0_DER.RDDE Mask                    */
#define LPSPI_DER_RDDE_SHIFT                     (1U)                                                /**< LPSPI0_DER.RDDE Position                */
#define LPSPI_DER_RDDE(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_DER_RDDE_SHIFT))&LPSPI_DER_RDDE_MASK) /**< LPSPI0_DER.RDDE Field                   */
/** @} */

/** @name CFGR0 - Configuration Register 0 */ /** @{ */
#define LPSPI_CFGR0_HREN_MASK                    (0x1U)                                              /**< LPSPI0_CFGR0.HREN Mask                  */
#define LPSPI_CFGR0_HREN_SHIFT                   (0U)                                                /**< LPSPI0_CFGR0.HREN Position              */
#define LPSPI_CFGR0_HREN(x)                      (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR0_HREN_SHIFT))&LPSPI_CFGR0_HREN_MASK) /**< LPSPI0_CFGR0.HREN Field                 */
#define LPSPI_CFGR0_HRPOL_MASK                   (0x2U)                                              /**< LPSPI0_CFGR0.HRPOL Mask                 */
#define LPSPI_CFGR0_HRPOL_SHIFT                  (1U)                                                /**< LPSPI0_CFGR0.HRPOL Position             */
#define LPSPI_CFGR0_HRPOL(x)                     (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR0_HRPOL_SHIFT))&LPSPI_CFGR0_HRPOL_MASK) /**< LPSPI0_CFGR0.HRPOL Field                */
#define LPSPI_CFGR0_HRSEL_MASK                   (0x4U)                                              /**< LPSPI0_CFGR0.HRSEL Mask                 */
#define LPSPI_CFGR0_HRSEL_SHIFT                  (2U)                                                /**< LPSPI0_CFGR0.HRSEL Position             */
#define LPSPI_CFGR0_HRSEL(x)                     (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR0_HRSEL_SHIFT))&LPSPI_CFGR0_HRSEL_MASK) /**< LPSPI0_CFGR0.HRSEL Field                */
#define LPSPI_CFGR0_CIRFIFO_MASK                 (0x100U)                                            /**< LPSPI0_CFGR0.CIRFIFO Mask               */
#define LPSPI_CFGR0_CIRFIFO_SHIFT                (8U)                                                /**< LPSPI0_CFGR0.CIRFIFO Position           */
#define LPSPI_CFGR0_CIRFIFO(x)                   (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR0_CIRFIFO_SHIFT))&LPSPI_CFGR0_CIRFIFO_MASK) /**< LPSPI0_CFGR0.CIRFIFO Field              */
#define LPSPI_CFGR0_RDMO_MASK                    (0x200U)                                            /**< LPSPI0_CFGR0.RDMO Mask                  */
#define LPSPI_CFGR0_RDMO_SHIFT                   (9U)                                                /**< LPSPI0_CFGR0.RDMO Position              */
#define LPSPI_CFGR0_RDMO(x)                      (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR0_RDMO_SHIFT))&LPSPI_CFGR0_RDMO_MASK) /**< LPSPI0_CFGR0.RDMO Field                 */
/** @} */

/** @name CFGR1 - Configuration Register 1 */ /** @{ */
#define LPSPI_CFGR1_MASTER_MASK                  (0x1U)                                              /**< LPSPI0_CFGR1.MASTER Mask                */
#define LPSPI_CFGR1_MASTER_SHIFT                 (0U)                                                /**< LPSPI0_CFGR1.MASTER Position            */
#define LPSPI_CFGR1_MASTER(x)                    (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR1_MASTER_SHIFT))&LPSPI_CFGR1_MASTER_MASK) /**< LPSPI0_CFGR1.MASTER Field               */
#define LPSPI_CFGR1_SAMPLE_MASK                  (0x2U)                                              /**< LPSPI0_CFGR1.SAMPLE Mask                */
#define LPSPI_CFGR1_SAMPLE_SHIFT                 (1U)                                                /**< LPSPI0_CFGR1.SAMPLE Position            */
#define LPSPI_CFGR1_SAMPLE(x)                    (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR1_SAMPLE_SHIFT))&LPSPI_CFGR1_SAMPLE_MASK) /**< LPSPI0_CFGR1.SAMPLE Field               */
#define LPSPI_CFGR1_AUTOPCS_MASK                 (0x4U)                                              /**< LPSPI0_CFGR1.AUTOPCS Mask               */
#define LPSPI_CFGR1_AUTOPCS_SHIFT                (2U)                                                /**< LPSPI0_CFGR1.AUTOPCS Position           */
#define LPSPI_CFGR1_AUTOPCS(x)                   (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR1_AUTOPCS_SHIFT))&LPSPI_CFGR1_AUTOPCS_MASK) /**< LPSPI0_CFGR1.AUTOPCS Field              */
#define LPSPI_CFGR1_NOSTALL_MASK                 (0x8U)                                              /**< LPSPI0_CFGR1.NOSTALL Mask               */
#define LPSPI_CFGR1_NOSTALL_SHIFT                (3U)                                                /**< LPSPI0_CFGR1.NOSTALL Position           */
#define LPSPI_CFGR1_NOSTALL(x)                   (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR1_NOSTALL_SHIFT))&LPSPI_CFGR1_NOSTALL_MASK) /**< LPSPI0_CFGR1.NOSTALL Field              */
#define LPSPI_CFGR1_PCSPOL_MASK                  (0xF00U)                                            /**< LPSPI0_CFGR1.PCSPOL Mask                */
#define LPSPI_CFGR1_PCSPOL_SHIFT                 (8U)                                                /**< LPSPI0_CFGR1.PCSPOL Position            */
#define LPSPI_CFGR1_PCSPOL(x)                    (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR1_PCSPOL_SHIFT))&LPSPI_CFGR1_PCSPOL_MASK) /**< LPSPI0_CFGR1.PCSPOL Field               */
#define LPSPI_CFGR1_MATCFG_MASK                  (0x70000U)                                          /**< LPSPI0_CFGR1.MATCFG Mask                */
#define LPSPI_CFGR1_MATCFG_SHIFT                 (16U)                                               /**< LPSPI0_CFGR1.MATCFG Position            */
#define LPSPI_CFGR1_MATCFG(x)                    (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR1_MATCFG_SHIFT))&LPSPI_CFGR1_MATCFG_MASK) /**< LPSPI0_CFGR1.MATCFG Field               */
#define LPSPI_CFGR1_PINCFG_MASK                  (0x3000000U)                                        /**< LPSPI0_CFGR1.PINCFG Mask                */
#define LPSPI_CFGR1_PINCFG_SHIFT                 (24U)                                               /**< LPSPI0_CFGR1.PINCFG Position            */
#define LPSPI_CFGR1_PINCFG(x)                    (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR1_PINCFG_SHIFT))&LPSPI_CFGR1_PINCFG_MASK) /**< LPSPI0_CFGR1.PINCFG Field               */
#define LPSPI_CFGR1_OUTCFG_MASK                  (0x4000000U)                                        /**< LPSPI0_CFGR1.OUTCFG Mask                */
#define LPSPI_CFGR1_OUTCFG_SHIFT                 (26U)                                               /**< LPSPI0_CFGR1.OUTCFG Position            */
#define LPSPI_CFGR1_OUTCFG(x)                    (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR1_OUTCFG_SHIFT))&LPSPI_CFGR1_OUTCFG_MASK) /**< LPSPI0_CFGR1.OUTCFG Field               */
#define LPSPI_CFGR1_PCSCFG_MASK                  (0x8000000U)                                        /**< LPSPI0_CFGR1.PCSCFG Mask                */
#define LPSPI_CFGR1_PCSCFG_SHIFT                 (27U)                                               /**< LPSPI0_CFGR1.PCSCFG Position            */
#define LPSPI_CFGR1_PCSCFG(x)                    (((uint32_t)(((uint32_t)(x))<<LPSPI_CFGR1_PCSCFG_SHIFT))&LPSPI_CFGR1_PCSCFG_MASK) /**< LPSPI0_CFGR1.PCSCFG Field               */
/** @} */

/** @name DMR - Data Match Register %s */ /** @{ */
#define LPSPI_DMR_MATCH0_MASK                    (0xFFFFFFFFU)                                       /**< LPSPI0_DMR.MATCH0 Mask                  */
#define LPSPI_DMR_MATCH0_SHIFT                   (0U)                                                /**< LPSPI0_DMR.MATCH0 Position              */
#define LPSPI_DMR_MATCH0(x)                      (((uint32_t)(((uint32_t)(x))<<LPSPI_DMR_MATCH0_SHIFT))&LPSPI_DMR_MATCH0_MASK) /**< LPSPI0_DMR.MATCH0 Field                 */
/** @} */

/** @name CCR - Clock Configuration Register */ /** @{ */
#define LPSPI_CCR_SCKDIV_MASK                    (0xFFU)                                             /**< LPSPI0_CCR.SCKDIV Mask                  */
#define LPSPI_CCR_SCKDIV_SHIFT                   (0U)                                                /**< LPSPI0_CCR.SCKDIV Position              */
#define LPSPI_CCR_SCKDIV(x)                      (((uint32_t)(((uint32_t)(x))<<LPSPI_CCR_SCKDIV_SHIFT))&LPSPI_CCR_SCKDIV_MASK) /**< LPSPI0_CCR.SCKDIV Field                 */
#define LPSPI_CCR_DBT_MASK                       (0xFF00U)                                           /**< LPSPI0_CCR.DBT Mask                     */
#define LPSPI_CCR_DBT_SHIFT                      (8U)                                                /**< LPSPI0_CCR.DBT Position                 */
#define LPSPI_CCR_DBT(x)                         (((uint32_t)(((uint32_t)(x))<<LPSPI_CCR_DBT_SHIFT))&LPSPI_CCR_DBT_MASK) /**< LPSPI0_CCR.DBT Field                    */
#define LPSPI_CCR_PCSSCK_MASK                    (0xFF0000U)                                         /**< LPSPI0_CCR.PCSSCK Mask                  */
#define LPSPI_CCR_PCSSCK_SHIFT                   (16U)                                               /**< LPSPI0_CCR.PCSSCK Position              */
#define LPSPI_CCR_PCSSCK(x)                      (((uint32_t)(((uint32_t)(x))<<LPSPI_CCR_PCSSCK_SHIFT))&LPSPI_CCR_PCSSCK_MASK) /**< LPSPI0_CCR.PCSSCK Field                 */
#define LPSPI_CCR_SCKPCS_MASK                    (0xFF000000U)                                       /**< LPSPI0_CCR.SCKPCS Mask                  */
#define LPSPI_CCR_SCKPCS_SHIFT                   (24U)                                               /**< LPSPI0_CCR.SCKPCS Position              */
#define LPSPI_CCR_SCKPCS(x)                      (((uint32_t)(((uint32_t)(x))<<LPSPI_CCR_SCKPCS_SHIFT))&LPSPI_CCR_SCKPCS_MASK) /**< LPSPI0_CCR.SCKPCS Field                 */
/** @} */

/** @name FCR - FIFO Control Register */ /** @{ */
#define LPSPI_FCR_TXWATER_MASK                   (0xFFU)                                             /**< LPSPI0_FCR.TXWATER Mask                 */
#define LPSPI_FCR_TXWATER_SHIFT                  (0U)                                                /**< LPSPI0_FCR.TXWATER Position             */
#define LPSPI_FCR_TXWATER(x)                     (((uint32_t)(((uint32_t)(x))<<LPSPI_FCR_TXWATER_SHIFT))&LPSPI_FCR_TXWATER_MASK) /**< LPSPI0_FCR.TXWATER Field                */
#define LPSPI_FCR_RXWATER_MASK                   (0xFF0000U)                                         /**< LPSPI0_FCR.RXWATER Mask                 */
#define LPSPI_FCR_RXWATER_SHIFT                  (16U)                                               /**< LPSPI0_FCR.RXWATER Position             */
#define LPSPI_FCR_RXWATER(x)                     (((uint32_t)(((uint32_t)(x))<<LPSPI_FCR_RXWATER_SHIFT))&LPSPI_FCR_RXWATER_MASK) /**< LPSPI0_FCR.RXWATER Field                */
/** @} */

/** @name FSR - FIFO Status Register */ /** @{ */
#define LPSPI_FSR_TXCOUNT_MASK                   (0xFFU)                                             /**< LPSPI0_FSR.TXCOUNT Mask                 */
#define LPSPI_FSR_TXCOUNT_SHIFT                  (0U)                                                /**< LPSPI0_FSR.TXCOUNT Position             */
#define LPSPI_FSR_TXCOUNT(x)                     (((uint32_t)(((uint32_t)(x))<<LPSPI_FSR_TXCOUNT_SHIFT))&LPSPI_FSR_TXCOUNT_MASK) /**< LPSPI0_FSR.TXCOUNT Field                */
#define LPSPI_FSR_RXCOUNT_MASK                   (0xFF0000U)                                         /**< LPSPI0_FSR.RXCOUNT Mask                 */
#define LPSPI_FSR_RXCOUNT_SHIFT                  (16U)                                               /**< LPSPI0_FSR.RXCOUNT Position             */
#define LPSPI_FSR_RXCOUNT(x)                     (((uint32_t)(((uint32_t)(x))<<LPSPI_FSR_RXCOUNT_SHIFT))&LPSPI_FSR_RXCOUNT_MASK) /**< LPSPI0_FSR.RXCOUNT Field                */
/** @} */

/** @name TCR - Transmit Command Register */ /** @{ */
#define LPSPI_TCR_FRAMESZ_MASK                   (0xFFFU)                                            /**< LPSPI0_TCR.FRAMESZ Mask                 */
#define LPSPI_TCR_FRAMESZ_SHIFT                  (0U)                                                /**< LPSPI0_TCR.FRAMESZ Position             */
#define LPSPI_TCR_FRAMESZ(x)                     (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_FRAMESZ_SHIFT))&LPSPI_TCR_FRAMESZ_MASK) /**< LPSPI0_TCR.FRAMESZ Field                */
#define LPSPI_TCR_WIDTH_MASK                     (0x30000U)                                          /**< LPSPI0_TCR.WIDTH Mask                   */
#define LPSPI_TCR_WIDTH_SHIFT                    (16U)                                               /**< LPSPI0_TCR.WIDTH Position               */
#define LPSPI_TCR_WIDTH(x)                       (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_WIDTH_SHIFT))&LPSPI_TCR_WIDTH_MASK) /**< LPSPI0_TCR.WIDTH Field                  */
#define LPSPI_TCR_TXMSK_MASK                     (0x40000U)                                          /**< LPSPI0_TCR.TXMSK Mask                   */
#define LPSPI_TCR_TXMSK_SHIFT                    (18U)                                               /**< LPSPI0_TCR.TXMSK Position               */
#define LPSPI_TCR_TXMSK(x)                       (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_TXMSK_SHIFT))&LPSPI_TCR_TXMSK_MASK) /**< LPSPI0_TCR.TXMSK Field                  */
#define LPSPI_TCR_RXMSK_MASK                     (0x80000U)                                          /**< LPSPI0_TCR.RXMSK Mask                   */
#define LPSPI_TCR_RXMSK_SHIFT                    (19U)                                               /**< LPSPI0_TCR.RXMSK Position               */
#define LPSPI_TCR_RXMSK(x)                       (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_RXMSK_SHIFT))&LPSPI_TCR_RXMSK_MASK) /**< LPSPI0_TCR.RXMSK Field                  */
#define LPSPI_TCR_CONTC_MASK                     (0x100000U)                                         /**< LPSPI0_TCR.CONTC Mask                   */
#define LPSPI_TCR_CONTC_SHIFT                    (20U)                                               /**< LPSPI0_TCR.CONTC Position               */
#define LPSPI_TCR_CONTC(x)                       (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_CONTC_SHIFT))&LPSPI_TCR_CONTC_MASK) /**< LPSPI0_TCR.CONTC Field                  */
#define LPSPI_TCR_CONT_MASK                      (0x200000U)                                         /**< LPSPI0_TCR.CONT Mask                    */
#define LPSPI_TCR_CONT_SHIFT                     (21U)                                               /**< LPSPI0_TCR.CONT Position                */
#define LPSPI_TCR_CONT(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_CONT_SHIFT))&LPSPI_TCR_CONT_MASK) /**< LPSPI0_TCR.CONT Field                   */
#define LPSPI_TCR_BYSW_MASK                      (0x400000U)                                         /**< LPSPI0_TCR.BYSW Mask                    */
#define LPSPI_TCR_BYSW_SHIFT                     (22U)                                               /**< LPSPI0_TCR.BYSW Position                */
#define LPSPI_TCR_BYSW(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_BYSW_SHIFT))&LPSPI_TCR_BYSW_MASK) /**< LPSPI0_TCR.BYSW Field                   */
#define LPSPI_TCR_LSBF_MASK                      (0x800000U)                                         /**< LPSPI0_TCR.LSBF Mask                    */
#define LPSPI_TCR_LSBF_SHIFT                     (23U)                                               /**< LPSPI0_TCR.LSBF Position                */
#define LPSPI_TCR_LSBF(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_LSBF_SHIFT))&LPSPI_TCR_LSBF_MASK) /**< LPSPI0_TCR.LSBF Field                   */
#define LPSPI_TCR_PCS_MASK                       (0x3000000U)                                        /**< LPSPI0_TCR.PCS Mask                     */
#define LPSPI_TCR_PCS_SHIFT                      (24U)                                               /**< LPSPI0_TCR.PCS Position                 */
#define LPSPI_TCR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_PCS_SHIFT))&LPSPI_TCR_PCS_MASK) /**< LPSPI0_TCR.PCS Field                    */
#define LPSPI_TCR_PRESCALE_MASK                  (0x38000000U)                                       /**< LPSPI0_TCR.PRESCALE Mask                */
#define LPSPI_TCR_PRESCALE_SHIFT                 (27U)                                               /**< LPSPI0_TCR.PRESCALE Position            */
#define LPSPI_TCR_PRESCALE(x)                    (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_PRESCALE_SHIFT))&LPSPI_TCR_PRESCALE_MASK) /**< LPSPI0_TCR.PRESCALE Field               */
#define LPSPI_TCR_CPHA_MASK                      (0x40000000U)                                       /**< LPSPI0_TCR.CPHA Mask                    */
#define LPSPI_TCR_CPHA_SHIFT                     (30U)                                               /**< LPSPI0_TCR.CPHA Position                */
#define LPSPI_TCR_CPHA(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_CPHA_SHIFT))&LPSPI_TCR_CPHA_MASK) /**< LPSPI0_TCR.CPHA Field                   */
#define LPSPI_TCR_CPOL_MASK                      (0x80000000U)                                       /**< LPSPI0_TCR.CPOL Mask                    */
#define LPSPI_TCR_CPOL_SHIFT                     (31U)                                               /**< LPSPI0_TCR.CPOL Position                */
#define LPSPI_TCR_CPOL(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_TCR_CPOL_SHIFT))&LPSPI_TCR_CPOL_MASK) /**< LPSPI0_TCR.CPOL Field                   */
/** @} */

/** @name TDR - Transmit Data Register */ /** @{ */
#define LPSPI_TDR_DATA_MASK                      (0xFFFFFFFFU)                                       /**< LPSPI0_TDR.DATA Mask                    */
#define LPSPI_TDR_DATA_SHIFT                     (0U)                                                /**< LPSPI0_TDR.DATA Position                */
#define LPSPI_TDR_DATA(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_TDR_DATA_SHIFT))&LPSPI_TDR_DATA_MASK) /**< LPSPI0_TDR.DATA Field                   */
/** @} */

/** @name RSR - Receive Status Register */ /** @{ */
#define LPSPI_RSR_SOF_MASK                       (0x1U)                                              /**< LPSPI0_RSR.SOF Mask                     */
#define LPSPI_RSR_SOF_SHIFT                      (0U)                                                /**< LPSPI0_RSR.SOF Position                 */
#define LPSPI_RSR_SOF(x)                         (((uint32_t)(((uint32_t)(x))<<LPSPI_RSR_SOF_SHIFT))&LPSPI_RSR_SOF_MASK) /**< LPSPI0_RSR.SOF Field                    */
#define LPSPI_RSR_RXEMPTY_MASK                   (0x2U)                                              /**< LPSPI0_RSR.RXEMPTY Mask                 */
#define LPSPI_RSR_RXEMPTY_SHIFT                  (1U)                                                /**< LPSPI0_RSR.RXEMPTY Position             */
#define LPSPI_RSR_RXEMPTY(x)                     (((uint32_t)(((uint32_t)(x))<<LPSPI_RSR_RXEMPTY_SHIFT))&LPSPI_RSR_RXEMPTY_MASK) /**< LPSPI0_RSR.RXEMPTY Field                */
/** @} */

/** @name RDR - Receive Data Register */ /** @{ */
#define LPSPI_RDR_DATA_MASK                      (0xFFFFFFFFU)                                       /**< LPSPI0_RDR.DATA Mask                    */
#define LPSPI_RDR_DATA_SHIFT                     (0U)                                                /**< LPSPI0_RDR.DATA Position                */
#define LPSPI_RDR_DATA(x)                        (((uint32_t)(((uint32_t)(x))<<LPSPI_RDR_DATA_SHIFT))&LPSPI_RDR_DATA_MASK) /**< LPSPI0_RDR.DATA Field                   */
/** @} */

/** @} */ /* End group LPSPI_Register_Masks_GROUP */


/* LPSPI0 - Peripheral instance base addresses */
#define LPSPI0_BasePtr                 0x4002C000UL //!< Peripheral base address
#define LPSPI0                         ((LPSPI_Type *) LPSPI0_BasePtr) //!< Freescale base pointer
#define LPSPI0_BASE_PTR                (LPSPI0) //!< Freescale style base pointer
#define LPSPI0_IRQS { LPSPI0_IRQn,  }


/** @} */ /* End group LPSPI_Peripheral_access_layer_GROUP */


/** @brief C Struct for LPSPI */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LPSPI_Peripheral_access_layer_GROUP LPSPI Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LPSPI1 (derived from LPSPI0)         ================ */
/* ================================================================================ */

/**
 * @brief Low power SPI
 */

/* LPSPI1 - Peripheral instance base addresses */
#define LPSPI1_BasePtr                 0x4002D000UL //!< Peripheral base address
#define LPSPI1                         ((LPSPI_Type *) LPSPI1_BasePtr) //!< Freescale base pointer
#define LPSPI1_BASE_PTR                (LPSPI1) //!< Freescale style base pointer
#define LPSPI1_IRQS { LPSPI1_IRQn,  }


/** @} */ /* End group LPSPI_Peripheral_access_layer_GROUP */


/** @brief C Struct for LPSPI */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LPSPI_Peripheral_access_layer_GROUP LPSPI Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LPSPI2 (derived from LPSPI0)         ================ */
/* ================================================================================ */

/**
 * @brief Low power SPI
 */

/* LPSPI2 - Peripheral instance base addresses */
#define LPSPI2_BasePtr                 0x4002E000UL //!< Peripheral base address
#define LPSPI2                         ((LPSPI_Type *) LPSPI2_BasePtr) //!< Freescale base pointer
#define LPSPI2_BASE_PTR                (LPSPI2) //!< Freescale style base pointer
#define LPSPI2_IRQS { LPSPI2_IRQn,  }


/** @} */ /* End group LPSPI_Peripheral_access_layer_GROUP */


/** @brief C Struct for LPTMR */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LPTMR_Peripheral_access_layer_GROUP LPTMR Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LPTMR0 (file:LPTMR0_DMA)             ================ */
/* ================================================================================ */

/**
 * @brief Low Power Timer
 */
/**
 * @struct LPTMR_Type
 * @brief  C Struct allowing access to LPTMR registers
 */
typedef struct LPTMR_Type {
   __IO uint32_t  CSR;                          /**< 0000: Control Status Register                                      */
   __IO uint32_t  PSR;                          /**< 0004: Prescale Register                                            */
   __IO uint32_t  CMR;                          /**< 0008: Compare Register                                             */
   __IO uint32_t  CNR;                          /**< 000C: Counter Register                                             */
} LPTMR_Type;


/** @brief Register Masks for LPTMR */

/* -------------------------------------------------------------------------------- */
/* -----------     'LPTMR0' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup LPTMR_Register_Masks_GROUP LPTMR Register Masks */
/** @{ */

/** @name CSR - Control Status Register */ /** @{ */
#define LPTMR_CSR_TEN_MASK                       (0x1U)                                              /**< LPTMR0_CSR.TEN Mask                     */
#define LPTMR_CSR_TEN_SHIFT                      (0U)                                                /**< LPTMR0_CSR.TEN Position                 */
#define LPTMR_CSR_TEN(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TEN_SHIFT))&LPTMR_CSR_TEN_MASK) /**< LPTMR0_CSR.TEN Field                    */
#define LPTMR_CSR_TMS_MASK                       (0x2U)                                              /**< LPTMR0_CSR.TMS Mask                     */
#define LPTMR_CSR_TMS_SHIFT                      (1U)                                                /**< LPTMR0_CSR.TMS Position                 */
#define LPTMR_CSR_TMS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TMS_SHIFT))&LPTMR_CSR_TMS_MASK) /**< LPTMR0_CSR.TMS Field                    */
#define LPTMR_CSR_TFC_MASK                       (0x4U)                                              /**< LPTMR0_CSR.TFC Mask                     */
#define LPTMR_CSR_TFC_SHIFT                      (2U)                                                /**< LPTMR0_CSR.TFC Position                 */
#define LPTMR_CSR_TFC(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TFC_SHIFT))&LPTMR_CSR_TFC_MASK) /**< LPTMR0_CSR.TFC Field                    */
#define LPTMR_CSR_TPP_MASK                       (0x8U)                                              /**< LPTMR0_CSR.TPP Mask                     */
#define LPTMR_CSR_TPP_SHIFT                      (3U)                                                /**< LPTMR0_CSR.TPP Position                 */
#define LPTMR_CSR_TPP(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TPP_SHIFT))&LPTMR_CSR_TPP_MASK) /**< LPTMR0_CSR.TPP Field                    */
#define LPTMR_CSR_TPS_MASK                       (0x30U)                                             /**< LPTMR0_CSR.TPS Mask                     */
#define LPTMR_CSR_TPS_SHIFT                      (4U)                                                /**< LPTMR0_CSR.TPS Position                 */
#define LPTMR_CSR_TPS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TPS_SHIFT))&LPTMR_CSR_TPS_MASK) /**< LPTMR0_CSR.TPS Field                    */
#define LPTMR_CSR_TIE_MASK                       (0x40U)                                             /**< LPTMR0_CSR.TIE Mask                     */
#define LPTMR_CSR_TIE_SHIFT                      (6U)                                                /**< LPTMR0_CSR.TIE Position                 */
#define LPTMR_CSR_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TIE_SHIFT))&LPTMR_CSR_TIE_MASK) /**< LPTMR0_CSR.TIE Field                    */
#define LPTMR_CSR_TCF_MASK                       (0x80U)                                             /**< LPTMR0_CSR.TCF Mask                     */
#define LPTMR_CSR_TCF_SHIFT                      (7U)                                                /**< LPTMR0_CSR.TCF Position                 */
#define LPTMR_CSR_TCF(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TCF_SHIFT))&LPTMR_CSR_TCF_MASK) /**< LPTMR0_CSR.TCF Field                    */
#define LPTMR_CSR_TDRE_MASK                      (0x100U)                                            /**< LPTMR0_CSR.TDRE Mask                    */
#define LPTMR_CSR_TDRE_SHIFT                     (8U)                                                /**< LPTMR0_CSR.TDRE Position                */
#define LPTMR_CSR_TDRE(x)                        (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TDRE_SHIFT))&LPTMR_CSR_TDRE_MASK) /**< LPTMR0_CSR.TDRE Field                   */
/** @} */

/** @name PSR - Prescale Register */ /** @{ */
#define LPTMR_PSR_PCS_MASK                       (0x3U)                                              /**< LPTMR0_PSR.PCS Mask                     */
#define LPTMR_PSR_PCS_SHIFT                      (0U)                                                /**< LPTMR0_PSR.PCS Position                 */
#define LPTMR_PSR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PCS_SHIFT))&LPTMR_PSR_PCS_MASK) /**< LPTMR0_PSR.PCS Field                    */
#define LPTMR_PSR_PBYP_MASK                      (0x4U)                                              /**< LPTMR0_PSR.PBYP Mask                    */
#define LPTMR_PSR_PBYP_SHIFT                     (2U)                                                /**< LPTMR0_PSR.PBYP Position                */
#define LPTMR_PSR_PBYP(x)                        (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PBYP_SHIFT))&LPTMR_PSR_PBYP_MASK) /**< LPTMR0_PSR.PBYP Field                   */
#define LPTMR_PSR_PRESCALE_MASK                  (0x78U)                                             /**< LPTMR0_PSR.PRESCALE Mask                */
#define LPTMR_PSR_PRESCALE_SHIFT                 (3U)                                                /**< LPTMR0_PSR.PRESCALE Position            */
#define LPTMR_PSR_PRESCALE(x)                    (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PRESCALE_SHIFT))&LPTMR_PSR_PRESCALE_MASK) /**< LPTMR0_PSR.PRESCALE Field               */
/** @} */

/** @name CMR - Compare Register */ /** @{ */
#define LPTMR_CMR_COMPARE_MASK                   (0xFFFFU)                                           /**< LPTMR0_CMR.COMPARE Mask                 */
#define LPTMR_CMR_COMPARE_SHIFT                  (0U)                                                /**< LPTMR0_CMR.COMPARE Position             */
#define LPTMR_CMR_COMPARE(x)                     (((uint32_t)(((uint32_t)(x))<<LPTMR_CMR_COMPARE_SHIFT))&LPTMR_CMR_COMPARE_MASK) /**< LPTMR0_CMR.COMPARE Field                */
/** @} */

/** @name CNR - Counter Register */ /** @{ */
#define LPTMR_CNR_COUNTER_MASK                   (0xFFFFU)                                           /**< LPTMR0_CNR.COUNTER Mask                 */
#define LPTMR_CNR_COUNTER_SHIFT                  (0U)                                                /**< LPTMR0_CNR.COUNTER Position             */
#define LPTMR_CNR_COUNTER(x)                     (((uint32_t)(((uint32_t)(x))<<LPTMR_CNR_COUNTER_SHIFT))&LPTMR_CNR_COUNTER_MASK) /**< LPTMR0_CNR.COUNTER Field                */
/** @} */

/** @} */ /* End group LPTMR_Register_Masks_GROUP */


/* LPTMR0 - Peripheral instance base addresses */
#define LPTMR0_BasePtr                 0x40040000UL //!< Peripheral base address
#define LPTMR0                         ((LPTMR_Type *) LPTMR0_BasePtr) //!< Freescale base pointer
#define LPTMR0_BASE_PTR                (LPTMR0) //!< Freescale style base pointer
#define LPTMR0_IRQS { LPTMR0_IRQn,  }


/** @} */ /* End group LPTMR_Peripheral_access_layer_GROUP */


/** @brief C Struct for LPUART */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LPUART_Peripheral_access_layer_GROUP LPUART Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LPUART0 (file:LPUART0_MKE_FIFO)       ================ */
/* ================================================================================ */

/**
 * @brief Low Power Universal Asynchronous Receiver/Transmitter
 */
/**
 * @struct LPUART_Type
 * @brief  C Struct allowing access to LPUART registers
 */
typedef struct LPUART_Type {
   __I  uint32_t  VERID;                        /**< 0000: Version ID Register                                          */
   __I  uint32_t  PARAM;                        /**< 0004: Parameter Register                                           */
   __IO uint32_t  GLOBAL;                       /**< 0008: Global Register                                              */
   __IO uint32_t  PINCFG;                       /**< 000C: Pin Configuration Register                                   */
   __IO uint32_t  BAUD;                         /**< 0010: Baud Rate Register                                           */
   __IO uint32_t  STAT;                         /**< 0014: Status Register                                              */
   __IO uint32_t  CTRL;                         /**< 0018: Control Register                                             */
   __IO uint32_t  DATA;                         /**< 001C: Data Register                                                */
   __IO uint32_t  MATCH;                        /**< 0020: Match Address Register                                       */
   __IO uint32_t  MODIR;                        /**< 0024: MODEM IrDA register                                          */
   __IO uint32_t  FIFO;                         /**< 0028: FIFO Register                                                */
   __IO uint32_t  WATER;                        /**< 002C: Watermark Register                                           */
} LPUART_Type;


/** @brief Register Masks for LPUART */

/* -------------------------------------------------------------------------------- */
/* -----------     'LPUART0' Position & Mask macros                     ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup LPUART_Register_Masks_GROUP LPUART Register Masks */
/** @{ */

/** @name VERID - Version ID Register */ /** @{ */
#define LPUART_VERID_FEATURE_MASK                (0xFFFFU)                                           /**< LPUART0_VERID.FEATURE Mask              */
#define LPUART_VERID_FEATURE_SHIFT               (0U)                                                /**< LPUART0_VERID.FEATURE Position          */
#define LPUART_VERID_FEATURE(x)                  (((uint32_t)(((uint32_t)(x))<<LPUART_VERID_FEATURE_SHIFT))&LPUART_VERID_FEATURE_MASK) /**< LPUART0_VERID.FEATURE Field             */
#define LPUART_VERID_MINOR_MASK                  (0xFF0000U)                                         /**< LPUART0_VERID.MINOR Mask                */
#define LPUART_VERID_MINOR_SHIFT                 (16U)                                               /**< LPUART0_VERID.MINOR Position            */
#define LPUART_VERID_MINOR(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_VERID_MINOR_SHIFT))&LPUART_VERID_MINOR_MASK) /**< LPUART0_VERID.MINOR Field               */
#define LPUART_VERID_MAJOR_MASK                  (0xFF000000U)                                       /**< LPUART0_VERID.MAJOR Mask                */
#define LPUART_VERID_MAJOR_SHIFT                 (24U)                                               /**< LPUART0_VERID.MAJOR Position            */
#define LPUART_VERID_MAJOR(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_VERID_MAJOR_SHIFT))&LPUART_VERID_MAJOR_MASK) /**< LPUART0_VERID.MAJOR Field               */
/** @} */

/** @name PARAM - Parameter Register */ /** @{ */
#define LPUART_PARAM_TXFIFO_MASK                 (0xFFU)                                             /**< LPUART0_PARAM.TXFIFO Mask               */
#define LPUART_PARAM_TXFIFO_SHIFT                (0U)                                                /**< LPUART0_PARAM.TXFIFO Position           */
#define LPUART_PARAM_TXFIFO(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_PARAM_TXFIFO_SHIFT))&LPUART_PARAM_TXFIFO_MASK) /**< LPUART0_PARAM.TXFIFO Field              */
#define LPUART_PARAM_RXFIFO_MASK                 (0xFF00U)                                           /**< LPUART0_PARAM.RXFIFO Mask               */
#define LPUART_PARAM_RXFIFO_SHIFT                (8U)                                                /**< LPUART0_PARAM.RXFIFO Position           */
#define LPUART_PARAM_RXFIFO(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_PARAM_RXFIFO_SHIFT))&LPUART_PARAM_RXFIFO_MASK) /**< LPUART0_PARAM.RXFIFO Field              */
/** @} */

/** @name GLOBAL - Global Register */ /** @{ */
#define LPUART_GLOBAL_RST_MASK                   (0x2U)                                              /**< LPUART0_GLOBAL.RST Mask                 */
#define LPUART_GLOBAL_RST_SHIFT                  (1U)                                                /**< LPUART0_GLOBAL.RST Position             */
#define LPUART_GLOBAL_RST(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_GLOBAL_RST_SHIFT))&LPUART_GLOBAL_RST_MASK) /**< LPUART0_GLOBAL.RST Field                */
/** @} */

/** @name PINCFG - Pin Configuration Register */ /** @{ */
#define LPUART_PINCFG_TRGSEL_MASK                (0x3U)                                              /**< LPUART0_PINCFG.TRGSEL Mask              */
#define LPUART_PINCFG_TRGSEL_SHIFT               (0U)                                                /**< LPUART0_PINCFG.TRGSEL Position          */
#define LPUART_PINCFG_TRGSEL(x)                  (((uint32_t)(((uint32_t)(x))<<LPUART_PINCFG_TRGSEL_SHIFT))&LPUART_PINCFG_TRGSEL_MASK) /**< LPUART0_PINCFG.TRGSEL Field             */
/** @} */

/** @name BAUD - Baud Rate Register */ /** @{ */
#define LPUART_BAUD_SBR_MASK                     (0x1FFFU)                                           /**< LPUART0_BAUD.SBR Mask                   */
#define LPUART_BAUD_SBR_SHIFT                    (0U)                                                /**< LPUART0_BAUD.SBR Position               */
#define LPUART_BAUD_SBR(x)                       (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_SBR_SHIFT))&LPUART_BAUD_SBR_MASK) /**< LPUART0_BAUD.SBR Field                  */
#define LPUART_BAUD_SBNS_MASK                    (0x2000U)                                           /**< LPUART0_BAUD.SBNS Mask                  */
#define LPUART_BAUD_SBNS_SHIFT                   (13U)                                               /**< LPUART0_BAUD.SBNS Position              */
#define LPUART_BAUD_SBNS(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_SBNS_SHIFT))&LPUART_BAUD_SBNS_MASK) /**< LPUART0_BAUD.SBNS Field                 */
#define LPUART_BAUD_RXEDGIE_MASK                 (0x4000U)                                           /**< LPUART0_BAUD.RXEDGIE Mask               */
#define LPUART_BAUD_RXEDGIE_SHIFT                (14U)                                               /**< LPUART0_BAUD.RXEDGIE Position           */
#define LPUART_BAUD_RXEDGIE(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_RXEDGIE_SHIFT))&LPUART_BAUD_RXEDGIE_MASK) /**< LPUART0_BAUD.RXEDGIE Field              */
#define LPUART_BAUD_LBKDIE_MASK                  (0x8000U)                                           /**< LPUART0_BAUD.LBKDIE Mask                */
#define LPUART_BAUD_LBKDIE_SHIFT                 (15U)                                               /**< LPUART0_BAUD.LBKDIE Position            */
#define LPUART_BAUD_LBKDIE(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_LBKDIE_SHIFT))&LPUART_BAUD_LBKDIE_MASK) /**< LPUART0_BAUD.LBKDIE Field               */
#define LPUART_BAUD_RESYNCDIS_MASK               (0x10000U)                                          /**< LPUART0_BAUD.RESYNCDIS Mask             */
#define LPUART_BAUD_RESYNCDIS_SHIFT              (16U)                                               /**< LPUART0_BAUD.RESYNCDIS Position         */
#define LPUART_BAUD_RESYNCDIS(x)                 (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_RESYNCDIS_SHIFT))&LPUART_BAUD_RESYNCDIS_MASK) /**< LPUART0_BAUD.RESYNCDIS Field            */
#define LPUART_BAUD_BOTHEDGE_MASK                (0x20000U)                                          /**< LPUART0_BAUD.BOTHEDGE Mask              */
#define LPUART_BAUD_BOTHEDGE_SHIFT               (17U)                                               /**< LPUART0_BAUD.BOTHEDGE Position          */
#define LPUART_BAUD_BOTHEDGE(x)                  (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_BOTHEDGE_SHIFT))&LPUART_BAUD_BOTHEDGE_MASK) /**< LPUART0_BAUD.BOTHEDGE Field             */
#define LPUART_BAUD_MATCFG_MASK                  (0xC0000U)                                          /**< LPUART0_BAUD.MATCFG Mask                */
#define LPUART_BAUD_MATCFG_SHIFT                 (18U)                                               /**< LPUART0_BAUD.MATCFG Position            */
#define LPUART_BAUD_MATCFG(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_MATCFG_SHIFT))&LPUART_BAUD_MATCFG_MASK) /**< LPUART0_BAUD.MATCFG Field               */
#define LPUART_BAUD_RIDMAE_MASK                  (0x100000U)                                         /**< LPUART0_BAUD.RIDMAE Mask                */
#define LPUART_BAUD_RIDMAE_SHIFT                 (20U)                                               /**< LPUART0_BAUD.RIDMAE Position            */
#define LPUART_BAUD_RIDMAE(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_RIDMAE_SHIFT))&LPUART_BAUD_RIDMAE_MASK) /**< LPUART0_BAUD.RIDMAE Field               */
#define LPUART_BAUD_RDMAE_MASK                   (0x200000U)                                         /**< LPUART0_BAUD.RDMAE Mask                 */
#define LPUART_BAUD_RDMAE_SHIFT                  (21U)                                               /**< LPUART0_BAUD.RDMAE Position             */
#define LPUART_BAUD_RDMAE(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_RDMAE_SHIFT))&LPUART_BAUD_RDMAE_MASK) /**< LPUART0_BAUD.RDMAE Field                */
#define LPUART_BAUD_TDMAE_MASK                   (0x800000U)                                         /**< LPUART0_BAUD.TDMAE Mask                 */
#define LPUART_BAUD_TDMAE_SHIFT                  (23U)                                               /**< LPUART0_BAUD.TDMAE Position             */
#define LPUART_BAUD_TDMAE(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_TDMAE_SHIFT))&LPUART_BAUD_TDMAE_MASK) /**< LPUART0_BAUD.TDMAE Field                */
#define LPUART_BAUD_OSR_MASK                     (0x1F000000U)                                       /**< LPUART0_BAUD.OSR Mask                   */
#define LPUART_BAUD_OSR_SHIFT                    (24U)                                               /**< LPUART0_BAUD.OSR Position               */
#define LPUART_BAUD_OSR(x)                       (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_OSR_SHIFT))&LPUART_BAUD_OSR_MASK) /**< LPUART0_BAUD.OSR Field                  */
#define LPUART_BAUD_M10_MASK                     (0x20000000U)                                       /**< LPUART0_BAUD.M10 Mask                   */
#define LPUART_BAUD_M10_SHIFT                    (29U)                                               /**< LPUART0_BAUD.M10 Position               */
#define LPUART_BAUD_M10(x)                       (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_M10_SHIFT))&LPUART_BAUD_M10_MASK) /**< LPUART0_BAUD.M10 Field                  */
#define LPUART_BAUD_MAEN2_MASK                   (0x40000000U)                                       /**< LPUART0_BAUD.MAEN2 Mask                 */
#define LPUART_BAUD_MAEN2_SHIFT                  (30U)                                               /**< LPUART0_BAUD.MAEN2 Position             */
#define LPUART_BAUD_MAEN2(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_MAEN2_SHIFT))&LPUART_BAUD_MAEN2_MASK) /**< LPUART0_BAUD.MAEN2 Field                */
#define LPUART_BAUD_MAEN1_MASK                   (0x80000000U)                                       /**< LPUART0_BAUD.MAEN1 Mask                 */
#define LPUART_BAUD_MAEN1_SHIFT                  (31U)                                               /**< LPUART0_BAUD.MAEN1 Position             */
#define LPUART_BAUD_MAEN1(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_BAUD_MAEN1_SHIFT))&LPUART_BAUD_MAEN1_MASK) /**< LPUART0_BAUD.MAEN1 Field                */
/** @} */

/** @name STAT - Status Register */ /** @{ */
#define LPUART_STAT_MA2F_MASK                    (0x4000U)                                           /**< LPUART0_STAT.MA2F Mask                  */
#define LPUART_STAT_MA2F_SHIFT                   (14U)                                               /**< LPUART0_STAT.MA2F Position              */
#define LPUART_STAT_MA2F(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_MA2F_SHIFT))&LPUART_STAT_MA2F_MASK) /**< LPUART0_STAT.MA2F Field                 */
#define LPUART_STAT_MA1F_MASK                    (0x8000U)                                           /**< LPUART0_STAT.MA1F Mask                  */
#define LPUART_STAT_MA1F_SHIFT                   (15U)                                               /**< LPUART0_STAT.MA1F Position              */
#define LPUART_STAT_MA1F(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_MA1F_SHIFT))&LPUART_STAT_MA1F_MASK) /**< LPUART0_STAT.MA1F Field                 */
#define LPUART_STAT_PF_MASK                      (0x10000U)                                          /**< LPUART0_STAT.PF Mask                    */
#define LPUART_STAT_PF_SHIFT                     (16U)                                               /**< LPUART0_STAT.PF Position                */
#define LPUART_STAT_PF(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_PF_SHIFT))&LPUART_STAT_PF_MASK) /**< LPUART0_STAT.PF Field                   */
#define LPUART_STAT_FE_MASK                      (0x20000U)                                          /**< LPUART0_STAT.FE Mask                    */
#define LPUART_STAT_FE_SHIFT                     (17U)                                               /**< LPUART0_STAT.FE Position                */
#define LPUART_STAT_FE(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_FE_SHIFT))&LPUART_STAT_FE_MASK) /**< LPUART0_STAT.FE Field                   */
#define LPUART_STAT_NF_MASK                      (0x40000U)                                          /**< LPUART0_STAT.NF Mask                    */
#define LPUART_STAT_NF_SHIFT                     (18U)                                               /**< LPUART0_STAT.NF Position                */
#define LPUART_STAT_NF(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_NF_SHIFT))&LPUART_STAT_NF_MASK) /**< LPUART0_STAT.NF Field                   */
#define LPUART_STAT_OR_MASK                      (0x80000U)                                          /**< LPUART0_STAT.OR Mask                    */
#define LPUART_STAT_OR_SHIFT                     (19U)                                               /**< LPUART0_STAT.OR Position                */
#define LPUART_STAT_OR(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_OR_SHIFT))&LPUART_STAT_OR_MASK) /**< LPUART0_STAT.OR Field                   */
#define LPUART_STAT_IDLE_MASK                    (0x100000U)                                         /**< LPUART0_STAT.IDLE Mask                  */
#define LPUART_STAT_IDLE_SHIFT                   (20U)                                               /**< LPUART0_STAT.IDLE Position              */
#define LPUART_STAT_IDLE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_IDLE_SHIFT))&LPUART_STAT_IDLE_MASK) /**< LPUART0_STAT.IDLE Field                 */
#define LPUART_STAT_RDRF_MASK                    (0x200000U)                                         /**< LPUART0_STAT.RDRF Mask                  */
#define LPUART_STAT_RDRF_SHIFT                   (21U)                                               /**< LPUART0_STAT.RDRF Position              */
#define LPUART_STAT_RDRF(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_RDRF_SHIFT))&LPUART_STAT_RDRF_MASK) /**< LPUART0_STAT.RDRF Field                 */
#define LPUART_STAT_TC_MASK                      (0x400000U)                                         /**< LPUART0_STAT.TC Mask                    */
#define LPUART_STAT_TC_SHIFT                     (22U)                                               /**< LPUART0_STAT.TC Position                */
#define LPUART_STAT_TC(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_TC_SHIFT))&LPUART_STAT_TC_MASK) /**< LPUART0_STAT.TC Field                   */
#define LPUART_STAT_TDRE_MASK                    (0x800000U)                                         /**< LPUART0_STAT.TDRE Mask                  */
#define LPUART_STAT_TDRE_SHIFT                   (23U)                                               /**< LPUART0_STAT.TDRE Position              */
#define LPUART_STAT_TDRE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_TDRE_SHIFT))&LPUART_STAT_TDRE_MASK) /**< LPUART0_STAT.TDRE Field                 */
#define LPUART_STAT_RAF_MASK                     (0x1000000U)                                        /**< LPUART0_STAT.RAF Mask                   */
#define LPUART_STAT_RAF_SHIFT                    (24U)                                               /**< LPUART0_STAT.RAF Position               */
#define LPUART_STAT_RAF(x)                       (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_RAF_SHIFT))&LPUART_STAT_RAF_MASK) /**< LPUART0_STAT.RAF Field                  */
#define LPUART_STAT_LBKDE_MASK                   (0x2000000U)                                        /**< LPUART0_STAT.LBKDE Mask                 */
#define LPUART_STAT_LBKDE_SHIFT                  (25U)                                               /**< LPUART0_STAT.LBKDE Position             */
#define LPUART_STAT_LBKDE(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_LBKDE_SHIFT))&LPUART_STAT_LBKDE_MASK) /**< LPUART0_STAT.LBKDE Field                */
#define LPUART_STAT_BRK13_MASK                   (0x4000000U)                                        /**< LPUART0_STAT.BRK13 Mask                 */
#define LPUART_STAT_BRK13_SHIFT                  (26U)                                               /**< LPUART0_STAT.BRK13 Position             */
#define LPUART_STAT_BRK13(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_BRK13_SHIFT))&LPUART_STAT_BRK13_MASK) /**< LPUART0_STAT.BRK13 Field                */
#define LPUART_STAT_RWUID_MASK                   (0x8000000U)                                        /**< LPUART0_STAT.RWUID Mask                 */
#define LPUART_STAT_RWUID_SHIFT                  (27U)                                               /**< LPUART0_STAT.RWUID Position             */
#define LPUART_STAT_RWUID(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_RWUID_SHIFT))&LPUART_STAT_RWUID_MASK) /**< LPUART0_STAT.RWUID Field                */
#define LPUART_STAT_RXINV_MASK                   (0x10000000U)                                       /**< LPUART0_STAT.RXINV Mask                 */
#define LPUART_STAT_RXINV_SHIFT                  (28U)                                               /**< LPUART0_STAT.RXINV Position             */
#define LPUART_STAT_RXINV(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_RXINV_SHIFT))&LPUART_STAT_RXINV_MASK) /**< LPUART0_STAT.RXINV Field                */
#define LPUART_STAT_MSBF_MASK                    (0x20000000U)                                       /**< LPUART0_STAT.MSBF Mask                  */
#define LPUART_STAT_MSBF_SHIFT                   (29U)                                               /**< LPUART0_STAT.MSBF Position              */
#define LPUART_STAT_MSBF(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_MSBF_SHIFT))&LPUART_STAT_MSBF_MASK) /**< LPUART0_STAT.MSBF Field                 */
#define LPUART_STAT_RXEDGIF_MASK                 (0x40000000U)                                       /**< LPUART0_STAT.RXEDGIF Mask               */
#define LPUART_STAT_RXEDGIF_SHIFT                (30U)                                               /**< LPUART0_STAT.RXEDGIF Position           */
#define LPUART_STAT_RXEDGIF(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_RXEDGIF_SHIFT))&LPUART_STAT_RXEDGIF_MASK) /**< LPUART0_STAT.RXEDGIF Field              */
#define LPUART_STAT_LBKDIF_MASK                  (0x80000000U)                                       /**< LPUART0_STAT.LBKDIF Mask                */
#define LPUART_STAT_LBKDIF_SHIFT                 (31U)                                               /**< LPUART0_STAT.LBKDIF Position            */
#define LPUART_STAT_LBKDIF(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_STAT_LBKDIF_SHIFT))&LPUART_STAT_LBKDIF_MASK) /**< LPUART0_STAT.LBKDIF Field               */
/** @} */

/** @name CTRL - Control Register */ /** @{ */
#define LPUART_CTRL_PT_MASK                      (0x1U)                                              /**< LPUART0_CTRL.PT Mask                    */
#define LPUART_CTRL_PT_SHIFT                     (0U)                                                /**< LPUART0_CTRL.PT Position                */
#define LPUART_CTRL_PT(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_PT_SHIFT))&LPUART_CTRL_PT_MASK) /**< LPUART0_CTRL.PT Field                   */
#define LPUART_CTRL_PE_MASK                      (0x2U)                                              /**< LPUART0_CTRL.PE Mask                    */
#define LPUART_CTRL_PE_SHIFT                     (1U)                                                /**< LPUART0_CTRL.PE Position                */
#define LPUART_CTRL_PE(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_PE_SHIFT))&LPUART_CTRL_PE_MASK) /**< LPUART0_CTRL.PE Field                   */
#define LPUART_CTRL_ILT_MASK                     (0x4U)                                              /**< LPUART0_CTRL.ILT Mask                   */
#define LPUART_CTRL_ILT_SHIFT                    (2U)                                                /**< LPUART0_CTRL.ILT Position               */
#define LPUART_CTRL_ILT(x)                       (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_ILT_SHIFT))&LPUART_CTRL_ILT_MASK) /**< LPUART0_CTRL.ILT Field                  */
#define LPUART_CTRL_WAKE_MASK                    (0x8U)                                              /**< LPUART0_CTRL.WAKE Mask                  */
#define LPUART_CTRL_WAKE_SHIFT                   (3U)                                                /**< LPUART0_CTRL.WAKE Position              */
#define LPUART_CTRL_WAKE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_WAKE_SHIFT))&LPUART_CTRL_WAKE_MASK) /**< LPUART0_CTRL.WAKE Field                 */
#define LPUART_CTRL_M_MASK                       (0x10U)                                             /**< LPUART0_CTRL.M Mask                     */
#define LPUART_CTRL_M_SHIFT                      (4U)                                                /**< LPUART0_CTRL.M Position                 */
#define LPUART_CTRL_M(x)                         (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_M_SHIFT))&LPUART_CTRL_M_MASK) /**< LPUART0_CTRL.M Field                    */
#define LPUART_CTRL_RSRC_MASK                    (0x20U)                                             /**< LPUART0_CTRL.RSRC Mask                  */
#define LPUART_CTRL_RSRC_SHIFT                   (5U)                                                /**< LPUART0_CTRL.RSRC Position              */
#define LPUART_CTRL_RSRC(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_RSRC_SHIFT))&LPUART_CTRL_RSRC_MASK) /**< LPUART0_CTRL.RSRC Field                 */
#define LPUART_CTRL_DOZEEN_MASK                  (0x40U)                                             /**< LPUART0_CTRL.DOZEEN Mask                */
#define LPUART_CTRL_DOZEEN_SHIFT                 (6U)                                                /**< LPUART0_CTRL.DOZEEN Position            */
#define LPUART_CTRL_DOZEEN(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_DOZEEN_SHIFT))&LPUART_CTRL_DOZEEN_MASK) /**< LPUART0_CTRL.DOZEEN Field               */
#define LPUART_CTRL_LOOPS_MASK                   (0x80U)                                             /**< LPUART0_CTRL.LOOPS Mask                 */
#define LPUART_CTRL_LOOPS_SHIFT                  (7U)                                                /**< LPUART0_CTRL.LOOPS Position             */
#define LPUART_CTRL_LOOPS(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_LOOPS_SHIFT))&LPUART_CTRL_LOOPS_MASK) /**< LPUART0_CTRL.LOOPS Field                */
#define LPUART_CTRL_IDLECFG_MASK                 (0x700U)                                            /**< LPUART0_CTRL.IDLECFG Mask               */
#define LPUART_CTRL_IDLECFG_SHIFT                (8U)                                                /**< LPUART0_CTRL.IDLECFG Position           */
#define LPUART_CTRL_IDLECFG(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_IDLECFG_SHIFT))&LPUART_CTRL_IDLECFG_MASK) /**< LPUART0_CTRL.IDLECFG Field              */
#define LPUART_CTRL_M7_MASK                      (0x800U)                                            /**< LPUART0_CTRL.M7 Mask                    */
#define LPUART_CTRL_M7_SHIFT                     (11U)                                               /**< LPUART0_CTRL.M7 Position                */
#define LPUART_CTRL_M7(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_M7_SHIFT))&LPUART_CTRL_M7_MASK) /**< LPUART0_CTRL.M7 Field                   */
#define LPUART_CTRL_MA2IE_MASK                   (0x4000U)                                           /**< LPUART0_CTRL.MA2IE Mask                 */
#define LPUART_CTRL_MA2IE_SHIFT                  (14U)                                               /**< LPUART0_CTRL.MA2IE Position             */
#define LPUART_CTRL_MA2IE(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_MA2IE_SHIFT))&LPUART_CTRL_MA2IE_MASK) /**< LPUART0_CTRL.MA2IE Field                */
#define LPUART_CTRL_MA1IE_MASK                   (0x8000U)                                           /**< LPUART0_CTRL.MA1IE Mask                 */
#define LPUART_CTRL_MA1IE_SHIFT                  (15U)                                               /**< LPUART0_CTRL.MA1IE Position             */
#define LPUART_CTRL_MA1IE(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_MA1IE_SHIFT))&LPUART_CTRL_MA1IE_MASK) /**< LPUART0_CTRL.MA1IE Field                */
#define LPUART_CTRL_SBK_MASK                     (0x10000U)                                          /**< LPUART0_CTRL.SBK Mask                   */
#define LPUART_CTRL_SBK_SHIFT                    (16U)                                               /**< LPUART0_CTRL.SBK Position               */
#define LPUART_CTRL_SBK(x)                       (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_SBK_SHIFT))&LPUART_CTRL_SBK_MASK) /**< LPUART0_CTRL.SBK Field                  */
#define LPUART_CTRL_RWU_MASK                     (0x20000U)                                          /**< LPUART0_CTRL.RWU Mask                   */
#define LPUART_CTRL_RWU_SHIFT                    (17U)                                               /**< LPUART0_CTRL.RWU Position               */
#define LPUART_CTRL_RWU(x)                       (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_RWU_SHIFT))&LPUART_CTRL_RWU_MASK) /**< LPUART0_CTRL.RWU Field                  */
#define LPUART_CTRL_RE_MASK                      (0x40000U)                                          /**< LPUART0_CTRL.RE Mask                    */
#define LPUART_CTRL_RE_SHIFT                     (18U)                                               /**< LPUART0_CTRL.RE Position                */
#define LPUART_CTRL_RE(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_RE_SHIFT))&LPUART_CTRL_RE_MASK) /**< LPUART0_CTRL.RE Field                   */
#define LPUART_CTRL_TE_MASK                      (0x80000U)                                          /**< LPUART0_CTRL.TE Mask                    */
#define LPUART_CTRL_TE_SHIFT                     (19U)                                               /**< LPUART0_CTRL.TE Position                */
#define LPUART_CTRL_TE(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_TE_SHIFT))&LPUART_CTRL_TE_MASK) /**< LPUART0_CTRL.TE Field                   */
#define LPUART_CTRL_ILIE_MASK                    (0x100000U)                                         /**< LPUART0_CTRL.ILIE Mask                  */
#define LPUART_CTRL_ILIE_SHIFT                   (20U)                                               /**< LPUART0_CTRL.ILIE Position              */
#define LPUART_CTRL_ILIE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_ILIE_SHIFT))&LPUART_CTRL_ILIE_MASK) /**< LPUART0_CTRL.ILIE Field                 */
#define LPUART_CTRL_RIE_MASK                     (0x200000U)                                         /**< LPUART0_CTRL.RIE Mask                   */
#define LPUART_CTRL_RIE_SHIFT                    (21U)                                               /**< LPUART0_CTRL.RIE Position               */
#define LPUART_CTRL_RIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_RIE_SHIFT))&LPUART_CTRL_RIE_MASK) /**< LPUART0_CTRL.RIE Field                  */
#define LPUART_CTRL_TCIE_MASK                    (0x400000U)                                         /**< LPUART0_CTRL.TCIE Mask                  */
#define LPUART_CTRL_TCIE_SHIFT                   (22U)                                               /**< LPUART0_CTRL.TCIE Position              */
#define LPUART_CTRL_TCIE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_TCIE_SHIFT))&LPUART_CTRL_TCIE_MASK) /**< LPUART0_CTRL.TCIE Field                 */
#define LPUART_CTRL_TIE_MASK                     (0x800000U)                                         /**< LPUART0_CTRL.TIE Mask                   */
#define LPUART_CTRL_TIE_SHIFT                    (23U)                                               /**< LPUART0_CTRL.TIE Position               */
#define LPUART_CTRL_TIE(x)                       (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_TIE_SHIFT))&LPUART_CTRL_TIE_MASK) /**< LPUART0_CTRL.TIE Field                  */
#define LPUART_CTRL_PEIE_MASK                    (0x1000000U)                                        /**< LPUART0_CTRL.PEIE Mask                  */
#define LPUART_CTRL_PEIE_SHIFT                   (24U)                                               /**< LPUART0_CTRL.PEIE Position              */
#define LPUART_CTRL_PEIE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_PEIE_SHIFT))&LPUART_CTRL_PEIE_MASK) /**< LPUART0_CTRL.PEIE Field                 */
#define LPUART_CTRL_FEIE_MASK                    (0x2000000U)                                        /**< LPUART0_CTRL.FEIE Mask                  */
#define LPUART_CTRL_FEIE_SHIFT                   (25U)                                               /**< LPUART0_CTRL.FEIE Position              */
#define LPUART_CTRL_FEIE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_FEIE_SHIFT))&LPUART_CTRL_FEIE_MASK) /**< LPUART0_CTRL.FEIE Field                 */
#define LPUART_CTRL_NEIE_MASK                    (0x4000000U)                                        /**< LPUART0_CTRL.NEIE Mask                  */
#define LPUART_CTRL_NEIE_SHIFT                   (26U)                                               /**< LPUART0_CTRL.NEIE Position              */
#define LPUART_CTRL_NEIE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_NEIE_SHIFT))&LPUART_CTRL_NEIE_MASK) /**< LPUART0_CTRL.NEIE Field                 */
#define LPUART_CTRL_ORIE_MASK                    (0x8000000U)                                        /**< LPUART0_CTRL.ORIE Mask                  */
#define LPUART_CTRL_ORIE_SHIFT                   (27U)                                               /**< LPUART0_CTRL.ORIE Position              */
#define LPUART_CTRL_ORIE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_ORIE_SHIFT))&LPUART_CTRL_ORIE_MASK) /**< LPUART0_CTRL.ORIE Field                 */
#define LPUART_CTRL_TXINV_MASK                   (0x10000000U)                                       /**< LPUART0_CTRL.TXINV Mask                 */
#define LPUART_CTRL_TXINV_SHIFT                  (28U)                                               /**< LPUART0_CTRL.TXINV Position             */
#define LPUART_CTRL_TXINV(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_TXINV_SHIFT))&LPUART_CTRL_TXINV_MASK) /**< LPUART0_CTRL.TXINV Field                */
#define LPUART_CTRL_TXDIR_MASK                   (0x20000000U)                                       /**< LPUART0_CTRL.TXDIR Mask                 */
#define LPUART_CTRL_TXDIR_SHIFT                  (29U)                                               /**< LPUART0_CTRL.TXDIR Position             */
#define LPUART_CTRL_TXDIR(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_TXDIR_SHIFT))&LPUART_CTRL_TXDIR_MASK) /**< LPUART0_CTRL.TXDIR Field                */
#define LPUART_CTRL_R9T8_MASK                    (0x40000000U)                                       /**< LPUART0_CTRL.R9T8 Mask                  */
#define LPUART_CTRL_R9T8_SHIFT                   (30U)                                               /**< LPUART0_CTRL.R9T8 Position              */
#define LPUART_CTRL_R9T8(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_R9T8_SHIFT))&LPUART_CTRL_R9T8_MASK) /**< LPUART0_CTRL.R9T8 Field                 */
#define LPUART_CTRL_R8T9_MASK                    (0x80000000U)                                       /**< LPUART0_CTRL.R8T9 Mask                  */
#define LPUART_CTRL_R8T9_SHIFT                   (31U)                                               /**< LPUART0_CTRL.R8T9 Position              */
#define LPUART_CTRL_R8T9(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_CTRL_R8T9_SHIFT))&LPUART_CTRL_R8T9_MASK) /**< LPUART0_CTRL.R8T9 Field                 */
/** @} */

/** @name DATA - Data Register */ /** @{ */
#define LPUART_DATA_RT_MASK                      (0x3FFU)                                            /**< LPUART0_DATA.RT Mask                    */
#define LPUART_DATA_RT_SHIFT                     (0U)                                                /**< LPUART0_DATA.RT Position                */
#define LPUART_DATA_RT(x)                        (((uint32_t)(((uint32_t)(x))<<LPUART_DATA_RT_SHIFT))&LPUART_DATA_RT_MASK) /**< LPUART0_DATA.RT Field                   */
#define LPUART_DATA_IDLINE_MASK                  (0x800U)                                            /**< LPUART0_DATA.IDLINE Mask                */
#define LPUART_DATA_IDLINE_SHIFT                 (11U)                                               /**< LPUART0_DATA.IDLINE Position            */
#define LPUART_DATA_IDLINE(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_DATA_IDLINE_SHIFT))&LPUART_DATA_IDLINE_MASK) /**< LPUART0_DATA.IDLINE Field               */
#define LPUART_DATA_RXEMPT_MASK                  (0x1000U)                                           /**< LPUART0_DATA.RXEMPT Mask                */
#define LPUART_DATA_RXEMPT_SHIFT                 (12U)                                               /**< LPUART0_DATA.RXEMPT Position            */
#define LPUART_DATA_RXEMPT(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_DATA_RXEMPT_SHIFT))&LPUART_DATA_RXEMPT_MASK) /**< LPUART0_DATA.RXEMPT Field               */
#define LPUART_DATA_FRETSC_MASK                  (0x2000U)                                           /**< LPUART0_DATA.FRETSC Mask                */
#define LPUART_DATA_FRETSC_SHIFT                 (13U)                                               /**< LPUART0_DATA.FRETSC Position            */
#define LPUART_DATA_FRETSC(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_DATA_FRETSC_SHIFT))&LPUART_DATA_FRETSC_MASK) /**< LPUART0_DATA.FRETSC Field               */
#define LPUART_DATA_PARITYE_MASK                 (0x4000U)                                           /**< LPUART0_DATA.PARITYE Mask               */
#define LPUART_DATA_PARITYE_SHIFT                (14U)                                               /**< LPUART0_DATA.PARITYE Position           */
#define LPUART_DATA_PARITYE(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_DATA_PARITYE_SHIFT))&LPUART_DATA_PARITYE_MASK) /**< LPUART0_DATA.PARITYE Field              */
#define LPUART_DATA_NOISY_MASK                   (0x8000U)                                           /**< LPUART0_DATA.NOISY Mask                 */
#define LPUART_DATA_NOISY_SHIFT                  (15U)                                               /**< LPUART0_DATA.NOISY Position             */
#define LPUART_DATA_NOISY(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_DATA_NOISY_SHIFT))&LPUART_DATA_NOISY_MASK) /**< LPUART0_DATA.NOISY Field                */
/** @} */

/** @name MATCH - Match Address Register */ /** @{ */
#define LPUART_MATCH_MA1_MASK                    (0x3FFU)                                            /**< LPUART0_MATCH.MA1 Mask                  */
#define LPUART_MATCH_MA1_SHIFT                   (0U)                                                /**< LPUART0_MATCH.MA1 Position              */
#define LPUART_MATCH_MA1(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_MATCH_MA1_SHIFT))&LPUART_MATCH_MA1_MASK) /**< LPUART0_MATCH.MA1 Field                 */
#define LPUART_MATCH_MA2_MASK                    (0x3FF0000U)                                        /**< LPUART0_MATCH.MA2 Mask                  */
#define LPUART_MATCH_MA2_SHIFT                   (16U)                                               /**< LPUART0_MATCH.MA2 Position              */
#define LPUART_MATCH_MA2(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_MATCH_MA2_SHIFT))&LPUART_MATCH_MA2_MASK) /**< LPUART0_MATCH.MA2 Field                 */
/** @} */

/** @name MODIR - MODEM IrDA register */ /** @{ */
#define LPUART_MODIR_TXCTSE_MASK                 (0x1U)                                              /**< LPUART0_MODIR.TXCTSE Mask               */
#define LPUART_MODIR_TXCTSE_SHIFT                (0U)                                                /**< LPUART0_MODIR.TXCTSE Position           */
#define LPUART_MODIR_TXCTSE(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_MODIR_TXCTSE_SHIFT))&LPUART_MODIR_TXCTSE_MASK) /**< LPUART0_MODIR.TXCTSE Field              */
#define LPUART_MODIR_TXRTSE_MASK                 (0x2U)                                              /**< LPUART0_MODIR.TXRTSE Mask               */
#define LPUART_MODIR_TXRTSE_SHIFT                (1U)                                                /**< LPUART0_MODIR.TXRTSE Position           */
#define LPUART_MODIR_TXRTSE(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_MODIR_TXRTSE_SHIFT))&LPUART_MODIR_TXRTSE_MASK) /**< LPUART0_MODIR.TXRTSE Field              */
#define LPUART_MODIR_TXRTSPOL_MASK               (0x4U)                                              /**< LPUART0_MODIR.TXRTSPOL Mask             */
#define LPUART_MODIR_TXRTSPOL_SHIFT              (2U)                                                /**< LPUART0_MODIR.TXRTSPOL Position         */
#define LPUART_MODIR_TXRTSPOL(x)                 (((uint32_t)(((uint32_t)(x))<<LPUART_MODIR_TXRTSPOL_SHIFT))&LPUART_MODIR_TXRTSPOL_MASK) /**< LPUART0_MODIR.TXRTSPOL Field            */
#define LPUART_MODIR_RXRTSE_MASK                 (0x8U)                                              /**< LPUART0_MODIR.RXRTSE Mask               */
#define LPUART_MODIR_RXRTSE_SHIFT                (3U)                                                /**< LPUART0_MODIR.RXRTSE Position           */
#define LPUART_MODIR_RXRTSE(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_MODIR_RXRTSE_SHIFT))&LPUART_MODIR_RXRTSE_MASK) /**< LPUART0_MODIR.RXRTSE Field              */
#define LPUART_MODIR_TXCTSC_MASK                 (0x10U)                                             /**< LPUART0_MODIR.TXCTSC Mask               */
#define LPUART_MODIR_TXCTSC_SHIFT                (4U)                                                /**< LPUART0_MODIR.TXCTSC Position           */
#define LPUART_MODIR_TXCTSC(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_MODIR_TXCTSC_SHIFT))&LPUART_MODIR_TXCTSC_MASK) /**< LPUART0_MODIR.TXCTSC Field              */
#define LPUART_MODIR_TXCTSSRC_MASK               (0x20U)                                             /**< LPUART0_MODIR.TXCTSSRC Mask             */
#define LPUART_MODIR_TXCTSSRC_SHIFT              (5U)                                                /**< LPUART0_MODIR.TXCTSSRC Position         */
#define LPUART_MODIR_TXCTSSRC(x)                 (((uint32_t)(((uint32_t)(x))<<LPUART_MODIR_TXCTSSRC_SHIFT))&LPUART_MODIR_TXCTSSRC_MASK) /**< LPUART0_MODIR.TXCTSSRC Field            */
#define LPUART_MODIR_RTSWATER_MASK               (0xFF00U)                                           /**< LPUART0_MODIR.RTSWATER Mask             */
#define LPUART_MODIR_RTSWATER_SHIFT              (8U)                                                /**< LPUART0_MODIR.RTSWATER Position         */
#define LPUART_MODIR_RTSWATER(x)                 (((uint32_t)(((uint32_t)(x))<<LPUART_MODIR_RTSWATER_SHIFT))&LPUART_MODIR_RTSWATER_MASK) /**< LPUART0_MODIR.RTSWATER Field            */
#define LPUART_MODIR_TNP_MASK                    (0x30000U)                                          /**< LPUART0_MODIR.TNP Mask                  */
#define LPUART_MODIR_TNP_SHIFT                   (16U)                                               /**< LPUART0_MODIR.TNP Position              */
#define LPUART_MODIR_TNP(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_MODIR_TNP_SHIFT))&LPUART_MODIR_TNP_MASK) /**< LPUART0_MODIR.TNP Field                 */
#define LPUART_MODIR_IREN_MASK                   (0x40000U)                                          /**< LPUART0_MODIR.IREN Mask                 */
#define LPUART_MODIR_IREN_SHIFT                  (18U)                                               /**< LPUART0_MODIR.IREN Position             */
#define LPUART_MODIR_IREN(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_MODIR_IREN_SHIFT))&LPUART_MODIR_IREN_MASK) /**< LPUART0_MODIR.IREN Field                */
/** @} */

/** @name FIFO - FIFO Register */ /** @{ */
#define LPUART_FIFO_RXFIFOSIZE_MASK              (0x7U)                                              /**< LPUART0_FIFO.RXFIFOSIZE Mask            */
#define LPUART_FIFO_RXFIFOSIZE_SHIFT             (0U)                                                /**< LPUART0_FIFO.RXFIFOSIZE Position        */
#define LPUART_FIFO_RXFIFOSIZE(x)                (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_RXFIFOSIZE_SHIFT))&LPUART_FIFO_RXFIFOSIZE_MASK) /**< LPUART0_FIFO.RXFIFOSIZE Field           */
#define LPUART_FIFO_RXFE_MASK                    (0x8U)                                              /**< LPUART0_FIFO.RXFE Mask                  */
#define LPUART_FIFO_RXFE_SHIFT                   (3U)                                                /**< LPUART0_FIFO.RXFE Position              */
#define LPUART_FIFO_RXFE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_RXFE_SHIFT))&LPUART_FIFO_RXFE_MASK) /**< LPUART0_FIFO.RXFE Field                 */
#define LPUART_FIFO_TXFIFOSIZE_MASK              (0x70U)                                             /**< LPUART0_FIFO.TXFIFOSIZE Mask            */
#define LPUART_FIFO_TXFIFOSIZE_SHIFT             (4U)                                                /**< LPUART0_FIFO.TXFIFOSIZE Position        */
#define LPUART_FIFO_TXFIFOSIZE(x)                (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_TXFIFOSIZE_SHIFT))&LPUART_FIFO_TXFIFOSIZE_MASK) /**< LPUART0_FIFO.TXFIFOSIZE Field           */
#define LPUART_FIFO_TXFE_MASK                    (0x80U)                                             /**< LPUART0_FIFO.TXFE Mask                  */
#define LPUART_FIFO_TXFE_SHIFT                   (7U)                                                /**< LPUART0_FIFO.TXFE Position              */
#define LPUART_FIFO_TXFE(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_TXFE_SHIFT))&LPUART_FIFO_TXFE_MASK) /**< LPUART0_FIFO.TXFE Field                 */
#define LPUART_FIFO_RXUFE_MASK                   (0x100U)                                            /**< LPUART0_FIFO.RXUFE Mask                 */
#define LPUART_FIFO_RXUFE_SHIFT                  (8U)                                                /**< LPUART0_FIFO.RXUFE Position             */
#define LPUART_FIFO_RXUFE(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_RXUFE_SHIFT))&LPUART_FIFO_RXUFE_MASK) /**< LPUART0_FIFO.RXUFE Field                */
#define LPUART_FIFO_TXOFE_MASK                   (0x200U)                                            /**< LPUART0_FIFO.TXOFE Mask                 */
#define LPUART_FIFO_TXOFE_SHIFT                  (9U)                                                /**< LPUART0_FIFO.TXOFE Position             */
#define LPUART_FIFO_TXOFE(x)                     (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_TXOFE_SHIFT))&LPUART_FIFO_TXOFE_MASK) /**< LPUART0_FIFO.TXOFE Field                */
#define LPUART_FIFO_RXIDEN_MASK                  (0x1C00U)                                           /**< LPUART0_FIFO.RXIDEN Mask                */
#define LPUART_FIFO_RXIDEN_SHIFT                 (10U)                                               /**< LPUART0_FIFO.RXIDEN Position            */
#define LPUART_FIFO_RXIDEN(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_RXIDEN_SHIFT))&LPUART_FIFO_RXIDEN_MASK) /**< LPUART0_FIFO.RXIDEN Field               */
#define LPUART_FIFO_RXFLUSH_MASK                 (0x4000U)                                           /**< LPUART0_FIFO.RXFLUSH Mask               */
#define LPUART_FIFO_RXFLUSH_SHIFT                (14U)                                               /**< LPUART0_FIFO.RXFLUSH Position           */
#define LPUART_FIFO_RXFLUSH(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_RXFLUSH_SHIFT))&LPUART_FIFO_RXFLUSH_MASK) /**< LPUART0_FIFO.RXFLUSH Field              */
#define LPUART_FIFO_TXFLUSH_MASK                 (0x8000U)                                           /**< LPUART0_FIFO.TXFLUSH Mask               */
#define LPUART_FIFO_TXFLUSH_SHIFT                (15U)                                               /**< LPUART0_FIFO.TXFLUSH Position           */
#define LPUART_FIFO_TXFLUSH(x)                   (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_TXFLUSH_SHIFT))&LPUART_FIFO_TXFLUSH_MASK) /**< LPUART0_FIFO.TXFLUSH Field              */
#define LPUART_FIFO_RXUF_MASK                    (0x10000U)                                          /**< LPUART0_FIFO.RXUF Mask                  */
#define LPUART_FIFO_RXUF_SHIFT                   (16U)                                               /**< LPUART0_FIFO.RXUF Position              */
#define LPUART_FIFO_RXUF(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_RXUF_SHIFT))&LPUART_FIFO_RXUF_MASK) /**< LPUART0_FIFO.RXUF Field                 */
#define LPUART_FIFO_TXOF_MASK                    (0x20000U)                                          /**< LPUART0_FIFO.TXOF Mask                  */
#define LPUART_FIFO_TXOF_SHIFT                   (17U)                                               /**< LPUART0_FIFO.TXOF Position              */
#define LPUART_FIFO_TXOF(x)                      (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_TXOF_SHIFT))&LPUART_FIFO_TXOF_MASK) /**< LPUART0_FIFO.TXOF Field                 */
#define LPUART_FIFO_RXEMPT_MASK                  (0x400000U)                                         /**< LPUART0_FIFO.RXEMPT Mask                */
#define LPUART_FIFO_RXEMPT_SHIFT                 (22U)                                               /**< LPUART0_FIFO.RXEMPT Position            */
#define LPUART_FIFO_RXEMPT(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_RXEMPT_SHIFT))&LPUART_FIFO_RXEMPT_MASK) /**< LPUART0_FIFO.RXEMPT Field               */
#define LPUART_FIFO_TXEMPT_MASK                  (0x800000U)                                         /**< LPUART0_FIFO.TXEMPT Mask                */
#define LPUART_FIFO_TXEMPT_SHIFT                 (23U)                                               /**< LPUART0_FIFO.TXEMPT Position            */
#define LPUART_FIFO_TXEMPT(x)                    (((uint32_t)(((uint32_t)(x))<<LPUART_FIFO_TXEMPT_SHIFT))&LPUART_FIFO_TXEMPT_MASK) /**< LPUART0_FIFO.TXEMPT Field               */
/** @} */

/** @name WATER - Watermark Register */ /** @{ */
#define LPUART_WATER_TXWATER_MASK                (0xFFU)                                             /**< LPUART0_WATER.TXWATER Mask              */
#define LPUART_WATER_TXWATER_SHIFT               (0U)                                                /**< LPUART0_WATER.TXWATER Position          */
#define LPUART_WATER_TXWATER(x)                  (((uint32_t)(((uint32_t)(x))<<LPUART_WATER_TXWATER_SHIFT))&LPUART_WATER_TXWATER_MASK) /**< LPUART0_WATER.TXWATER Field             */
#define LPUART_WATER_TXCOUNT_MASK                (0xFF00U)                                           /**< LPUART0_WATER.TXCOUNT Mask              */
#define LPUART_WATER_TXCOUNT_SHIFT               (8U)                                                /**< LPUART0_WATER.TXCOUNT Position          */
#define LPUART_WATER_TXCOUNT(x)                  (((uint32_t)(((uint32_t)(x))<<LPUART_WATER_TXCOUNT_SHIFT))&LPUART_WATER_TXCOUNT_MASK) /**< LPUART0_WATER.TXCOUNT Field             */
#define LPUART_WATER_RXWATER_MASK                (0xFF0000U)                                         /**< LPUART0_WATER.RXWATER Mask              */
#define LPUART_WATER_RXWATER_SHIFT               (16U)                                               /**< LPUART0_WATER.RXWATER Position          */
#define LPUART_WATER_RXWATER(x)                  (((uint32_t)(((uint32_t)(x))<<LPUART_WATER_RXWATER_SHIFT))&LPUART_WATER_RXWATER_MASK) /**< LPUART0_WATER.RXWATER Field             */
#define LPUART_WATER_RXCOUNT_MASK                (0xFF000000U)                                       /**< LPUART0_WATER.RXCOUNT Mask              */
#define LPUART_WATER_RXCOUNT_SHIFT               (24U)                                               /**< LPUART0_WATER.RXCOUNT Position          */
#define LPUART_WATER_RXCOUNT(x)                  (((uint32_t)(((uint32_t)(x))<<LPUART_WATER_RXCOUNT_SHIFT))&LPUART_WATER_RXCOUNT_MASK) /**< LPUART0_WATER.RXCOUNT Field             */
/** @} */

/** @} */ /* End group LPUART_Register_Masks_GROUP */


/* LPUART0 - Peripheral instance base addresses */
#define LPUART0_BasePtr                0x4006A000UL //!< Peripheral base address
#define LPUART0                        ((LPUART_Type *) LPUART0_BasePtr) //!< Freescale base pointer
#define LPUART0_BASE_PTR               (LPUART0) //!< Freescale style base pointer
#define LPUART0_IRQS { LPUART0_RxTx_IRQn,  }


/** @} */ /* End group LPUART_Peripheral_access_layer_GROUP */


/** @brief C Struct for LPUART */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LPUART_Peripheral_access_layer_GROUP LPUART Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LPUART1 (derived from LPUART0)       ================ */
/* ================================================================================ */

/**
 * @brief Low Power Universal Asynchronous Receiver/Transmitter
 */

/* LPUART1 - Peripheral instance base addresses */
#define LPUART1_BasePtr                0x4006B000UL //!< Peripheral base address
#define LPUART1                        ((LPUART_Type *) LPUART1_BasePtr) //!< Freescale base pointer
#define LPUART1_BASE_PTR               (LPUART1) //!< Freescale style base pointer
#define LPUART1_IRQS { LPUART1_RxTx_IRQn,  }


/** @} */ /* End group LPUART_Peripheral_access_layer_GROUP */


/** @brief C Struct for LPUART */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LPUART_Peripheral_access_layer_GROUP LPUART Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LPUART2 (derived from LPUART0)       ================ */
/* ================================================================================ */

/**
 * @brief Low Power Universal Asynchronous Receiver/Transmitter
 */

/* LPUART2 - Peripheral instance base addresses */
#define LPUART2_BasePtr                0x4006C000UL //!< Peripheral base address
#define LPUART2                        ((LPUART_Type *) LPUART2_BasePtr) //!< Freescale base pointer
#define LPUART2_BASE_PTR               (LPUART2) //!< Freescale style base pointer
#define LPUART2_IRQS { LPUART2_RxTx_IRQn,  }


/** @} */ /* End group LPUART_Peripheral_access_layer_GROUP */


/** @brief C Struct for MCM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup MCM_Peripheral_access_layer_GROUP MCM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           MCM (file:MCM_S32K14x)               ================ */
/* ================================================================================ */

/**
 * @brief Core Platform Miscellaneous Control Module
 */
/**
 * @struct MCM_Type
 * @brief  C Struct allowing access to MCM registers
 */
typedef struct MCM_Type {
        uint8_t   RESERVED_0[8];                /**< 0000: 0x8 bytes                                                    */
   __I  uint16_t  PLASC;                        /**< 0008: Crossbar Switch (AXBS) Slave Configuration                   */
   __I  uint16_t  PLAMC;                        /**< 000A: Crossbar Switch (AXBS) Master Configuration                  */
   __IO uint32_t  CPCR;                         /**< 000C: Core Platform Control Register                               */
   __IO uint32_t  ISCR;                         /**< 0010: Interrupt Status and Control Register                        */
        uint8_t   RESERVED_1[28];               /**< 0014: 0x1C bytes                                                   */
   __IO uint32_t  PID;                          /**< 0030: Process ID Register                                          */
        uint8_t   RESERVED_2[12];               /**< 0034: 0xC bytes                                                    */
   __IO uint32_t  CPO;                          /**< 0040: Compute Operation Control Register                           */
        uint8_t   RESERVED_3[956];              /**< 0044: 0x3BC bytes                                                  */
   __IO uint32_t  LMDR[2];                      /**< 0400: Local Memory Descriptor Register                             */
   __IO uint32_t  LMDR2;                        /**< 0408: Local Memory Descriptor Register2                            */
        uint8_t   RESERVED_4[116];              /**< 040C: 0x74 bytes                                                   */
   __IO uint32_t  LMPECR;                       /**< 0480: LMEM Parity and ECC Control Register                         */
        uint8_t   RESERVED_5[4];                /**< 0484: 0x4 bytes                                                    */
   __IO uint32_t  LMPEIR;                       /**< 0488: LMEM Parity and ECC Interrupt Register                       */
        uint8_t   RESERVED_6[4];                /**< 048C: 0x4 bytes                                                    */
   __I  uint32_t  LMFAR;                        /**< 0490: LMEM Fault Address Register                                  */
   __I  uint32_t  LMFATR;                       /**< 0494: LMEM Fault Attribute Register                                */
        uint8_t   RESERVED_7[8];                /**< 0498: 0x8 bytes                                                    */
   __I  uint32_t  LMFDHR;                       /**< 04A0: LMEM Fault Data High Register                                */
   __I  uint32_t  LMFDLR;                       /**< 04A4: LMEM Fault Data Low Register                                 */
} MCM_Type;


/** @brief Register Masks for MCM */

/* -------------------------------------------------------------------------------- */
/* -----------     'MCM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup MCM_Register_Masks_GROUP MCM Register Masks */
/** @{ */

/** @name PLASC - Crossbar Switch (AXBS) Slave Configuration */ /** @{ */
#define MCM_PLASC_ASC_MASK                       (0xFFU)                                             /**< MCM_PLASC.ASC Mask                      */
#define MCM_PLASC_ASC_SHIFT                      (0U)                                                /**< MCM_PLASC.ASC Position                  */
#define MCM_PLASC_ASC(x)                         (((uint16_t)(((uint16_t)(x))<<MCM_PLASC_ASC_SHIFT))&MCM_PLASC_ASC_MASK) /**< MCM_PLASC.ASC Field                     */
/** @} */

/** @name PLAMC - Crossbar Switch (AXBS) Master Configuration */ /** @{ */
#define MCM_PLAMC_AMC_MASK                       (0xFFU)                                             /**< MCM_PLAMC.AMC Mask                      */
#define MCM_PLAMC_AMC_SHIFT                      (0U)                                                /**< MCM_PLAMC.AMC Position                  */
#define MCM_PLAMC_AMC(x)                         (((uint16_t)(((uint16_t)(x))<<MCM_PLAMC_AMC_SHIFT))&MCM_PLAMC_AMC_MASK) /**< MCM_PLAMC.AMC Field                     */
/** @} */

/** @name CPCR - Core Platform Control Register */ /** @{ */
#define MCM_CPCR_HLT_FSM_ST_MASK                 (0x3U)                                              /**< MCM_CPCR.HLT_FSM_ST Mask                */
#define MCM_CPCR_HLT_FSM_ST_SHIFT                (0U)                                                /**< MCM_CPCR.HLT_FSM_ST Position            */
#define MCM_CPCR_HLT_FSM_ST(x)                   (((uint32_t)(((uint32_t)(x))<<MCM_CPCR_HLT_FSM_ST_SHIFT))&MCM_CPCR_HLT_FSM_ST_MASK) /**< MCM_CPCR.HLT_FSM_ST Field               */
#define MCM_CPCR_AXBS_HLT_REQ_MASK               (0x4U)                                              /**< MCM_CPCR.AXBS_HLT_REQ Mask              */
#define MCM_CPCR_AXBS_HLT_REQ_SHIFT              (2U)                                                /**< MCM_CPCR.AXBS_HLT_REQ Position          */
#define MCM_CPCR_AXBS_HLT_REQ(x)                 (((uint32_t)(((uint32_t)(x))<<MCM_CPCR_AXBS_HLT_REQ_SHIFT))&MCM_CPCR_AXBS_HLT_REQ_MASK) /**< MCM_CPCR.AXBS_HLT_REQ Field             */
#define MCM_CPCR_AXBS_HLTD_MASK                  (0x8U)                                              /**< MCM_CPCR.AXBS_HLTD Mask                 */
#define MCM_CPCR_AXBS_HLTD_SHIFT                 (3U)                                                /**< MCM_CPCR.AXBS_HLTD Position             */
#define MCM_CPCR_AXBS_HLTD(x)                    (((uint32_t)(((uint32_t)(x))<<MCM_CPCR_AXBS_HLTD_SHIFT))&MCM_CPCR_AXBS_HLTD_MASK) /**< MCM_CPCR.AXBS_HLTD Field                */
#define MCM_CPCR_FMC_PF_IDLE_MASK                (0x10U)                                             /**< MCM_CPCR.FMC_PF_IDLE Mask               */
#define MCM_CPCR_FMC_PF_IDLE_SHIFT               (4U)                                                /**< MCM_CPCR.FMC_PF_IDLE Position           */
#define MCM_CPCR_FMC_PF_IDLE(x)                  (((uint32_t)(((uint32_t)(x))<<MCM_CPCR_FMC_PF_IDLE_SHIFT))&MCM_CPCR_FMC_PF_IDLE_MASK) /**< MCM_CPCR.FMC_PF_IDLE Field              */
#define MCM_CPCR_PBRIDGE_IDLE_MASK               (0x40U)                                             /**< MCM_CPCR.PBRIDGE_IDLE Mask              */
#define MCM_CPCR_PBRIDGE_IDLE_SHIFT              (6U)                                                /**< MCM_CPCR.PBRIDGE_IDLE Position          */
#define MCM_CPCR_PBRIDGE_IDLE(x)                 (((uint32_t)(((uint32_t)(x))<<MCM_CPCR_PBRIDGE_IDLE_SHIFT))&MCM_CPCR_PBRIDGE_IDLE_MASK) /**< MCM_CPCR.PBRIDGE_IDLE Field             */
#define MCM_CPCR_CBRR_MASK                       (0x200U)                                            /**< MCM_CPCR.CBRR Mask                      */
#define MCM_CPCR_CBRR_SHIFT                      (9U)                                                /**< MCM_CPCR.CBRR Position                  */
#define MCM_CPCR_CBRR(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_CPCR_CBRR_SHIFT))&MCM_CPCR_CBRR_MASK) /**< MCM_CPCR.CBRR Field                     */
#define MCM_CPCR_SRAMUAP_MASK                    (0x3000000U)                                        /**< MCM_CPCR.SRAMUAP Mask                   */
#define MCM_CPCR_SRAMUAP_SHIFT                   (24U)                                               /**< MCM_CPCR.SRAMUAP Position               */
#define MCM_CPCR_SRAMUAP(x)                      (((uint32_t)(((uint32_t)(x))<<MCM_CPCR_SRAMUAP_SHIFT))&MCM_CPCR_SRAMUAP_MASK) /**< MCM_CPCR.SRAMUAP Field                  */
#define MCM_CPCR_SRAMUWP_MASK                    (0x4000000U)                                        /**< MCM_CPCR.SRAMUWP Mask                   */
#define MCM_CPCR_SRAMUWP_SHIFT                   (26U)                                               /**< MCM_CPCR.SRAMUWP Position               */
#define MCM_CPCR_SRAMUWP(x)                      (((uint32_t)(((uint32_t)(x))<<MCM_CPCR_SRAMUWP_SHIFT))&MCM_CPCR_SRAMUWP_MASK) /**< MCM_CPCR.SRAMUWP Field                  */
#define MCM_CPCR_SRAMLAP_MASK                    (0x30000000U)                                       /**< MCM_CPCR.SRAMLAP Mask                   */
#define MCM_CPCR_SRAMLAP_SHIFT                   (28U)                                               /**< MCM_CPCR.SRAMLAP Position               */
#define MCM_CPCR_SRAMLAP(x)                      (((uint32_t)(((uint32_t)(x))<<MCM_CPCR_SRAMLAP_SHIFT))&MCM_CPCR_SRAMLAP_MASK) /**< MCM_CPCR.SRAMLAP Field                  */
#define MCM_CPCR_SRAMLWP_MASK                    (0x40000000U)                                       /**< MCM_CPCR.SRAMLWP Mask                   */
#define MCM_CPCR_SRAMLWP_SHIFT                   (30U)                                               /**< MCM_CPCR.SRAMLWP Position               */
#define MCM_CPCR_SRAMLWP(x)                      (((uint32_t)(((uint32_t)(x))<<MCM_CPCR_SRAMLWP_SHIFT))&MCM_CPCR_SRAMLWP_MASK) /**< MCM_CPCR.SRAMLWP Field                  */
/** @} */

/** @name ISCR - Interrupt Status and Control Register */ /** @{ */
#define MCM_ISCR_FIOC_MASK                       (0x100U)                                            /**< MCM_ISCR.FIOC Mask                      */
#define MCM_ISCR_FIOC_SHIFT                      (8U)                                                /**< MCM_ISCR.FIOC Position                  */
#define MCM_ISCR_FIOC(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FIOC_SHIFT))&MCM_ISCR_FIOC_MASK) /**< MCM_ISCR.FIOC Field                     */
#define MCM_ISCR_FDZC_MASK                       (0x200U)                                            /**< MCM_ISCR.FDZC Mask                      */
#define MCM_ISCR_FDZC_SHIFT                      (9U)                                                /**< MCM_ISCR.FDZC Position                  */
#define MCM_ISCR_FDZC(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FDZC_SHIFT))&MCM_ISCR_FDZC_MASK) /**< MCM_ISCR.FDZC Field                     */
#define MCM_ISCR_FOFC_MASK                       (0x400U)                                            /**< MCM_ISCR.FOFC Mask                      */
#define MCM_ISCR_FOFC_SHIFT                      (10U)                                               /**< MCM_ISCR.FOFC Position                  */
#define MCM_ISCR_FOFC(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FOFC_SHIFT))&MCM_ISCR_FOFC_MASK) /**< MCM_ISCR.FOFC Field                     */
#define MCM_ISCR_FUFC_MASK                       (0x800U)                                            /**< MCM_ISCR.FUFC Mask                      */
#define MCM_ISCR_FUFC_SHIFT                      (11U)                                               /**< MCM_ISCR.FUFC Position                  */
#define MCM_ISCR_FUFC(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FUFC_SHIFT))&MCM_ISCR_FUFC_MASK) /**< MCM_ISCR.FUFC Field                     */
#define MCM_ISCR_FIXC_MASK                       (0x1000U)                                           /**< MCM_ISCR.FIXC Mask                      */
#define MCM_ISCR_FIXC_SHIFT                      (12U)                                               /**< MCM_ISCR.FIXC Position                  */
#define MCM_ISCR_FIXC(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FIXC_SHIFT))&MCM_ISCR_FIXC_MASK) /**< MCM_ISCR.FIXC Field                     */
#define MCM_ISCR_FIDC_MASK                       (0x8000U)                                           /**< MCM_ISCR.FIDC Mask                      */
#define MCM_ISCR_FIDC_SHIFT                      (15U)                                               /**< MCM_ISCR.FIDC Position                  */
#define MCM_ISCR_FIDC(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FIDC_SHIFT))&MCM_ISCR_FIDC_MASK) /**< MCM_ISCR.FIDC Field                     */
#define MCM_ISCR_FIOCE_MASK                      (0x1000000U)                                        /**< MCM_ISCR.FIOCE Mask                     */
#define MCM_ISCR_FIOCE_SHIFT                     (24U)                                               /**< MCM_ISCR.FIOCE Position                 */
#define MCM_ISCR_FIOCE(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FIOCE_SHIFT))&MCM_ISCR_FIOCE_MASK) /**< MCM_ISCR.FIOCE Field                    */
#define MCM_ISCR_FDZCE_MASK                      (0x2000000U)                                        /**< MCM_ISCR.FDZCE Mask                     */
#define MCM_ISCR_FDZCE_SHIFT                     (25U)                                               /**< MCM_ISCR.FDZCE Position                 */
#define MCM_ISCR_FDZCE(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FDZCE_SHIFT))&MCM_ISCR_FDZCE_MASK) /**< MCM_ISCR.FDZCE Field                    */
#define MCM_ISCR_FOFCE_MASK                      (0x4000000U)                                        /**< MCM_ISCR.FOFCE Mask                     */
#define MCM_ISCR_FOFCE_SHIFT                     (26U)                                               /**< MCM_ISCR.FOFCE Position                 */
#define MCM_ISCR_FOFCE(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FOFCE_SHIFT))&MCM_ISCR_FOFCE_MASK) /**< MCM_ISCR.FOFCE Field                    */
#define MCM_ISCR_FUFCE_MASK                      (0x8000000U)                                        /**< MCM_ISCR.FUFCE Mask                     */
#define MCM_ISCR_FUFCE_SHIFT                     (27U)                                               /**< MCM_ISCR.FUFCE Position                 */
#define MCM_ISCR_FUFCE(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FUFCE_SHIFT))&MCM_ISCR_FUFCE_MASK) /**< MCM_ISCR.FUFCE Field                    */
#define MCM_ISCR_FIXCE_MASK                      (0x10000000U)                                       /**< MCM_ISCR.FIXCE Mask                     */
#define MCM_ISCR_FIXCE_SHIFT                     (28U)                                               /**< MCM_ISCR.FIXCE Position                 */
#define MCM_ISCR_FIXCE(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FIXCE_SHIFT))&MCM_ISCR_FIXCE_MASK) /**< MCM_ISCR.FIXCE Field                    */
#define MCM_ISCR_FIDCE_MASK                      (0x80000000U)                                       /**< MCM_ISCR.FIDCE Mask                     */
#define MCM_ISCR_FIDCE_SHIFT                     (31U)                                               /**< MCM_ISCR.FIDCE Position                 */
#define MCM_ISCR_FIDCE(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_ISCR_FIDCE_SHIFT))&MCM_ISCR_FIDCE_MASK) /**< MCM_ISCR.FIDCE Field                    */
/** @} */

/** @name PID - Process ID Register */ /** @{ */
#define MCM_PID_PID_MASK                         (0xFFU)                                             /**< MCM_PID.PID Mask                        */
#define MCM_PID_PID_SHIFT                        (0U)                                                /**< MCM_PID.PID Position                    */
#define MCM_PID_PID(x)                           (((uint32_t)(((uint32_t)(x))<<MCM_PID_PID_SHIFT))&MCM_PID_PID_MASK) /**< MCM_PID.PID Field                       */
/** @} */

/** @name CPO - Compute Operation Control Register */ /** @{ */
#define MCM_CPO_CPOREQ_MASK                      (0x1U)                                              /**< MCM_CPO.CPOREQ Mask                     */
#define MCM_CPO_CPOREQ_SHIFT                     (0U)                                                /**< MCM_CPO.CPOREQ Position                 */
#define MCM_CPO_CPOREQ(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CPO_CPOREQ_SHIFT))&MCM_CPO_CPOREQ_MASK) /**< MCM_CPO.CPOREQ Field                    */
#define MCM_CPO_CPOACK_MASK                      (0x2U)                                              /**< MCM_CPO.CPOACK Mask                     */
#define MCM_CPO_CPOACK_SHIFT                     (1U)                                                /**< MCM_CPO.CPOACK Position                 */
#define MCM_CPO_CPOACK(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CPO_CPOACK_SHIFT))&MCM_CPO_CPOACK_MASK) /**< MCM_CPO.CPOACK Field                    */
#define MCM_CPO_CPOWOI_MASK                      (0x4U)                                              /**< MCM_CPO.CPOWOI Mask                     */
#define MCM_CPO_CPOWOI_SHIFT                     (2U)                                                /**< MCM_CPO.CPOWOI Position                 */
#define MCM_CPO_CPOWOI(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CPO_CPOWOI_SHIFT))&MCM_CPO_CPOWOI_MASK) /**< MCM_CPO.CPOWOI Field                    */
/** @} */

/** @name LMDR - Local Memory Descriptor Register */ /** @{ */
#define MCM_LMDR_CF0_MASK                        (0xFU)                                              /**< MCM_LMDR.CF0 Mask                       */
#define MCM_LMDR_CF0_SHIFT                       (0U)                                                /**< MCM_LMDR.CF0 Position                   */
#define MCM_LMDR_CF0(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_LMDR_CF0_SHIFT))&MCM_LMDR_CF0_MASK) /**< MCM_LMDR.CF0 Field                      */
#define MCM_LMDR_MT_MASK                         (0xE000U)                                           /**< MCM_LMDR.MT Mask                        */
#define MCM_LMDR_MT_SHIFT                        (13U)                                               /**< MCM_LMDR.MT Position                    */
#define MCM_LMDR_MT(x)                           (((uint32_t)(((uint32_t)(x))<<MCM_LMDR_MT_SHIFT))&MCM_LMDR_MT_MASK) /**< MCM_LMDR.MT Field                       */
#define MCM_LMDR_LOCK_MASK                       (0x10000U)                                          /**< MCM_LMDR.LOCK Mask                      */
#define MCM_LMDR_LOCK_SHIFT                      (16U)                                               /**< MCM_LMDR.LOCK Position                  */
#define MCM_LMDR_LOCK(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_LMDR_LOCK_SHIFT))&MCM_LMDR_LOCK_MASK) /**< MCM_LMDR.LOCK Field                     */
#define MCM_LMDR_DPW_MASK                        (0xE0000U)                                          /**< MCM_LMDR.DPW Mask                       */
#define MCM_LMDR_DPW_SHIFT                       (17U)                                               /**< MCM_LMDR.DPW Position                   */
#define MCM_LMDR_DPW(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_LMDR_DPW_SHIFT))&MCM_LMDR_DPW_MASK) /**< MCM_LMDR.DPW Field                      */
#define MCM_LMDR_WY_MASK                         (0xF00000U)                                         /**< MCM_LMDR.WY Mask                        */
#define MCM_LMDR_WY_SHIFT                        (20U)                                               /**< MCM_LMDR.WY Position                    */
#define MCM_LMDR_WY(x)                           (((uint32_t)(((uint32_t)(x))<<MCM_LMDR_WY_SHIFT))&MCM_LMDR_WY_MASK) /**< MCM_LMDR.WY Field                       */
#define MCM_LMDR_LMSZ_MASK                       (0xF000000U)                                        /**< MCM_LMDR.LMSZ Mask                      */
#define MCM_LMDR_LMSZ_SHIFT                      (24U)                                               /**< MCM_LMDR.LMSZ Position                  */
#define MCM_LMDR_LMSZ(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_LMDR_LMSZ_SHIFT))&MCM_LMDR_LMSZ_MASK) /**< MCM_LMDR.LMSZ Field                     */
#define MCM_LMDR_LMSZH_MASK                      (0x10000000U)                                       /**< MCM_LMDR.LMSZH Mask                     */
#define MCM_LMDR_LMSZH_SHIFT                     (28U)                                               /**< MCM_LMDR.LMSZH Position                 */
#define MCM_LMDR_LMSZH(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_LMDR_LMSZH_SHIFT))&MCM_LMDR_LMSZH_MASK) /**< MCM_LMDR.LMSZH Field                    */
#define MCM_LMDR_V_MASK                          (0x80000000U)                                       /**< MCM_LMDR.V Mask                         */
#define MCM_LMDR_V_SHIFT                         (31U)                                               /**< MCM_LMDR.V Position                     */
#define MCM_LMDR_V(x)                            (((uint32_t)(((uint32_t)(x))<<MCM_LMDR_V_SHIFT))&MCM_LMDR_V_MASK) /**< MCM_LMDR.V Field                        */
/** @} */

/** @name LMDR2 - Local Memory Descriptor Register2 */ /** @{ */
#define MCM_LMDR2_CF1_MASK                       (0xF0U)                                             /**< MCM_LMDR2.CF1 Mask                      */
#define MCM_LMDR2_CF1_SHIFT                      (4U)                                                /**< MCM_LMDR2.CF1 Position                  */
#define MCM_LMDR2_CF1(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_LMDR2_CF1_SHIFT))&MCM_LMDR2_CF1_MASK) /**< MCM_LMDR2.CF1 Field                     */
#define MCM_LMDR2_MT_MASK                        (0xE000U)                                           /**< MCM_LMDR2.MT Mask                       */
#define MCM_LMDR2_MT_SHIFT                       (13U)                                               /**< MCM_LMDR2.MT Position                   */
#define MCM_LMDR2_MT(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_LMDR2_MT_SHIFT))&MCM_LMDR2_MT_MASK) /**< MCM_LMDR2.MT Field                      */
#define MCM_LMDR2_LOCK_MASK                      (0x10000U)                                          /**< MCM_LMDR2.LOCK Mask                     */
#define MCM_LMDR2_LOCK_SHIFT                     (16U)                                               /**< MCM_LMDR2.LOCK Position                 */
#define MCM_LMDR2_LOCK(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_LMDR2_LOCK_SHIFT))&MCM_LMDR2_LOCK_MASK) /**< MCM_LMDR2.LOCK Field                    */
#define MCM_LMDR2_DPW_MASK                       (0xE0000U)                                          /**< MCM_LMDR2.DPW Mask                      */
#define MCM_LMDR2_DPW_SHIFT                      (17U)                                               /**< MCM_LMDR2.DPW Position                  */
#define MCM_LMDR2_DPW(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_LMDR2_DPW_SHIFT))&MCM_LMDR2_DPW_MASK) /**< MCM_LMDR2.DPW Field                     */
#define MCM_LMDR2_WY_MASK                        (0xF00000U)                                         /**< MCM_LMDR2.WY Mask                       */
#define MCM_LMDR2_WY_SHIFT                       (20U)                                               /**< MCM_LMDR2.WY Position                   */
#define MCM_LMDR2_WY(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_LMDR2_WY_SHIFT))&MCM_LMDR2_WY_MASK) /**< MCM_LMDR2.WY Field                      */
#define MCM_LMDR2_LMSZ_MASK                      (0xF000000U)                                        /**< MCM_LMDR2.LMSZ Mask                     */
#define MCM_LMDR2_LMSZ_SHIFT                     (24U)                                               /**< MCM_LMDR2.LMSZ Position                 */
#define MCM_LMDR2_LMSZ(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_LMDR2_LMSZ_SHIFT))&MCM_LMDR2_LMSZ_MASK) /**< MCM_LMDR2.LMSZ Field                    */
#define MCM_LMDR2_LMSZH_MASK                     (0x10000000U)                                       /**< MCM_LMDR2.LMSZH Mask                    */
#define MCM_LMDR2_LMSZH_SHIFT                    (28U)                                               /**< MCM_LMDR2.LMSZH Position                */
#define MCM_LMDR2_LMSZH(x)                       (((uint32_t)(((uint32_t)(x))<<MCM_LMDR2_LMSZH_SHIFT))&MCM_LMDR2_LMSZH_MASK) /**< MCM_LMDR2.LMSZH Field                   */
#define MCM_LMDR2_V_MASK                         (0x80000000U)                                       /**< MCM_LMDR2.V Mask                        */
#define MCM_LMDR2_V_SHIFT                        (31U)                                               /**< MCM_LMDR2.V Position                    */
#define MCM_LMDR2_V(x)                           (((uint32_t)(((uint32_t)(x))<<MCM_LMDR2_V_SHIFT))&MCM_LMDR2_V_MASK) /**< MCM_LMDR2.V Field                       */
/** @} */

/** @name LMPECR - LMEM Parity and ECC Control Register */ /** @{ */
#define MCM_LMPECR_ERNCR_MASK                    (0x1U)                                              /**< MCM_LMPECR.ERNCR Mask                   */
#define MCM_LMPECR_ERNCR_SHIFT                   (0U)                                                /**< MCM_LMPECR.ERNCR Position               */
#define MCM_LMPECR_ERNCR(x)                      (((uint32_t)(((uint32_t)(x))<<MCM_LMPECR_ERNCR_SHIFT))&MCM_LMPECR_ERNCR_MASK) /**< MCM_LMPECR.ERNCR Field                  */
#define MCM_LMPECR_ER1BR_MASK                    (0x100U)                                            /**< MCM_LMPECR.ER1BR Mask                   */
#define MCM_LMPECR_ER1BR_SHIFT                   (8U)                                                /**< MCM_LMPECR.ER1BR Position               */
#define MCM_LMPECR_ER1BR(x)                      (((uint32_t)(((uint32_t)(x))<<MCM_LMPECR_ER1BR_SHIFT))&MCM_LMPECR_ER1BR_MASK) /**< MCM_LMPECR.ER1BR Field                  */
#define MCM_LMPECR_ECPR_MASK                     (0x100000U)                                         /**< MCM_LMPECR.ECPR Mask                    */
#define MCM_LMPECR_ECPR_SHIFT                    (20U)                                               /**< MCM_LMPECR.ECPR Position                */
#define MCM_LMPECR_ECPR(x)                       (((uint32_t)(((uint32_t)(x))<<MCM_LMPECR_ECPR_SHIFT))&MCM_LMPECR_ECPR_MASK) /**< MCM_LMPECR.ECPR Field                   */
/** @} */

/** @name LMPEIR - LMEM Parity and ECC Interrupt Register */ /** @{ */
#define MCM_LMPEIR_ENC_MASK                      (0xFFU)                                             /**< MCM_LMPEIR.ENC Mask                     */
#define MCM_LMPEIR_ENC_SHIFT                     (0U)                                                /**< MCM_LMPEIR.ENC Position                 */
#define MCM_LMPEIR_ENC(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_LMPEIR_ENC_SHIFT))&MCM_LMPEIR_ENC_MASK) /**< MCM_LMPEIR.ENC Field                    */
#define MCM_LMPEIR_E1B_MASK                      (0xFF00U)                                           /**< MCM_LMPEIR.E1B Mask                     */
#define MCM_LMPEIR_E1B_SHIFT                     (8U)                                                /**< MCM_LMPEIR.E1B Position                 */
#define MCM_LMPEIR_E1B(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_LMPEIR_E1B_SHIFT))&MCM_LMPEIR_E1B_MASK) /**< MCM_LMPEIR.E1B Field                    */
#define MCM_LMPEIR_PE_MASK                       (0xFF0000U)                                         /**< MCM_LMPEIR.PE Mask                      */
#define MCM_LMPEIR_PE_SHIFT                      (16U)                                               /**< MCM_LMPEIR.PE Position                  */
#define MCM_LMPEIR_PE(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_LMPEIR_PE_SHIFT))&MCM_LMPEIR_PE_MASK) /**< MCM_LMPEIR.PE Field                     */
#define MCM_LMPEIR_PEELOC_MASK                   (0x1F000000U)                                       /**< MCM_LMPEIR.PEELOC Mask                  */
#define MCM_LMPEIR_PEELOC_SHIFT                  (24U)                                               /**< MCM_LMPEIR.PEELOC Position              */
#define MCM_LMPEIR_PEELOC(x)                     (((uint32_t)(((uint32_t)(x))<<MCM_LMPEIR_PEELOC_SHIFT))&MCM_LMPEIR_PEELOC_MASK) /**< MCM_LMPEIR.PEELOC Field                 */
#define MCM_LMPEIR_V_MASK                        (0x80000000U)                                       /**< MCM_LMPEIR.V Mask                       */
#define MCM_LMPEIR_V_SHIFT                       (31U)                                               /**< MCM_LMPEIR.V Position                   */
#define MCM_LMPEIR_V(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_LMPEIR_V_SHIFT))&MCM_LMPEIR_V_MASK) /**< MCM_LMPEIR.V Field                      */
/** @} */

/** @name LMFAR - LMEM Fault Address Register */ /** @{ */
#define MCM_LMFAR_EFADD_MASK                     (0xFFFFFFFFU)                                       /**< MCM_LMFAR.EFADD Mask                    */
#define MCM_LMFAR_EFADD_SHIFT                    (0U)                                                /**< MCM_LMFAR.EFADD Position                */
#define MCM_LMFAR_EFADD(x)                       (((uint32_t)(((uint32_t)(x))<<MCM_LMFAR_EFADD_SHIFT))&MCM_LMFAR_EFADD_MASK) /**< MCM_LMFAR.EFADD Field                   */
/** @} */

/** @name LMFATR - LMEM Fault Attribute Register */ /** @{ */
#define MCM_LMFATR_PEFPRT_MASK                   (0xFU)                                              /**< MCM_LMFATR.PEFPRT Mask                  */
#define MCM_LMFATR_PEFPRT_SHIFT                  (0U)                                                /**< MCM_LMFATR.PEFPRT Position              */
#define MCM_LMFATR_PEFPRT(x)                     (((uint32_t)(((uint32_t)(x))<<MCM_LMFATR_PEFPRT_SHIFT))&MCM_LMFATR_PEFPRT_MASK) /**< MCM_LMFATR.PEFPRT Field                 */
#define MCM_LMFATR_PEFSIZE_MASK                  (0x70U)                                             /**< MCM_LMFATR.PEFSIZE Mask                 */
#define MCM_LMFATR_PEFSIZE_SHIFT                 (4U)                                                /**< MCM_LMFATR.PEFSIZE Position             */
#define MCM_LMFATR_PEFSIZE(x)                    (((uint32_t)(((uint32_t)(x))<<MCM_LMFATR_PEFSIZE_SHIFT))&MCM_LMFATR_PEFSIZE_MASK) /**< MCM_LMFATR.PEFSIZE Field                */
#define MCM_LMFATR_PEFW_MASK                     (0x80U)                                             /**< MCM_LMFATR.PEFW Mask                    */
#define MCM_LMFATR_PEFW_SHIFT                    (7U)                                                /**< MCM_LMFATR.PEFW Position                */
#define MCM_LMFATR_PEFW(x)                       (((uint32_t)(((uint32_t)(x))<<MCM_LMFATR_PEFW_SHIFT))&MCM_LMFATR_PEFW_MASK) /**< MCM_LMFATR.PEFW Field                   */
#define MCM_LMFATR_PEFMST_MASK                   (0xFF00U)                                           /**< MCM_LMFATR.PEFMST Mask                  */
#define MCM_LMFATR_PEFMST_SHIFT                  (8U)                                                /**< MCM_LMFATR.PEFMST Position              */
#define MCM_LMFATR_PEFMST(x)                     (((uint32_t)(((uint32_t)(x))<<MCM_LMFATR_PEFMST_SHIFT))&MCM_LMFATR_PEFMST_MASK) /**< MCM_LMFATR.PEFMST Field                 */
#define MCM_LMFATR_OVR_MASK                      (0x80000000U)                                       /**< MCM_LMFATR.OVR Mask                     */
#define MCM_LMFATR_OVR_SHIFT                     (31U)                                               /**< MCM_LMFATR.OVR Position                 */
#define MCM_LMFATR_OVR(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_LMFATR_OVR_SHIFT))&MCM_LMFATR_OVR_MASK) /**< MCM_LMFATR.OVR Field                    */
/** @} */

/** @name LMFDHR - LMEM Fault Data High Register */ /** @{ */
#define MCM_LMFDHR_PEFDH_MASK                    (0xFFFFFFFFU)                                       /**< MCM_LMFDHR.PEFDH Mask                   */
#define MCM_LMFDHR_PEFDH_SHIFT                   (0U)                                                /**< MCM_LMFDHR.PEFDH Position               */
#define MCM_LMFDHR_PEFDH(x)                      (((uint32_t)(((uint32_t)(x))<<MCM_LMFDHR_PEFDH_SHIFT))&MCM_LMFDHR_PEFDH_MASK) /**< MCM_LMFDHR.PEFDH Field                  */
/** @} */

/** @name LMFDLR - LMEM Fault Data Low Register */ /** @{ */
#define MCM_LMFDLR_PEFDL_MASK                    (0xFFFFFFFFU)                                       /**< MCM_LMFDLR.PEFDL Mask                   */
#define MCM_LMFDLR_PEFDL_SHIFT                   (0U)                                                /**< MCM_LMFDLR.PEFDL Position               */
#define MCM_LMFDLR_PEFDL(x)                      (((uint32_t)(((uint32_t)(x))<<MCM_LMFDLR_PEFDL_SHIFT))&MCM_LMFDLR_PEFDL_MASK) /**< MCM_LMFDLR.PEFDL Field                  */
/** @} */

/** @} */ /* End group MCM_Register_Masks_GROUP */


/* MCM - Peripheral instance base addresses */
#define MCM_BasePtr                    0xE0080000UL //!< Peripheral base address
#define MCM                            ((MCM_Type *) MCM_BasePtr) //!< Freescale base pointer
#define MCM_BASE_PTR                   (MCM) //!< Freescale style base pointer
#define MCM_IRQS { MCM_IRQn,  }


/** @} */ /* End group MCM_Peripheral_access_layer_GROUP */


/** @brief C Struct for MPU */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup MPU_Peripheral_access_layer_GROUP MPU Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           MPU (file:MPU_S32K142)               ================ */
/* ================================================================================ */

/**
 * @brief Memory protection unit
 */
/**
 * @struct MPU_Type
 * @brief  C Struct allowing access to MPU registers
 */
typedef struct MPU_Type {
   __IO uint32_t  CESR;                         /**< 0000: Control/Error Status Register                                */
        uint8_t   RESERVED_0[12];               /**< 0004: 0xC bytes                                                    */
   struct {
      __I  uint32_t  EAR;                       /**< 0010: Error Address Register, Slave Port n                         */
      __I  uint32_t  EDR;                       /**< 0014: Error Detail Register, Slave Port n                          */
   } SP[4];                                     /**< 0010: (cluster: size=0x0020, 32)                                   */
        uint8_t   RESERVED_2[976];              /**< 0030: 0x3D0 bytes                                                  */
   struct {
      __IO uint32_t  WORD0;                     /**< 0400: Region Descriptor n, Word 0                                  */
      __IO uint32_t  WORD1;                     /**< 0404: Region Descriptor n, Word 1                                  */
      __IO uint32_t  WORD2;                     /**< 0408: Region Descriptor n, Word 2                                  */
      __IO uint32_t  WORD3;                     /**< 040C: Region Descriptor n, Word 3                                  */
   } RGD[8];                                    /**< 0400: (cluster: size=0x0080, 128)                                  */
        uint8_t   RESERVED_4[896];              /**< 0480: 0x380 bytes                                                  */
   __IO uint32_t  RGDAAC[8];                    /**< 0800: Region Descriptor Alternate Access Control                   */
} MPU_Type;


/** @brief Register Masks for MPU */

/* -------------------------------------------------------------------------------- */
/* -----------     'MPU' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup MPU_Register_Masks_GROUP MPU Register Masks */
/** @{ */

/** @name CESR - Control/Error Status Register */ /** @{ */
#define MPU_CESR_VLD_MASK                        (0x1U)                                              /**< MPU_CESR.VLD Mask                       */
#define MPU_CESR_VLD_SHIFT                       (0U)                                                /**< MPU_CESR.VLD Position                   */
#define MPU_CESR_VLD(x)                          (((uint32_t)(((uint32_t)(x))<<MPU_CESR_VLD_SHIFT))&MPU_CESR_VLD_MASK) /**< MPU_CESR.VLD Field                      */
#define MPU_CESR_NRGD_MASK                       (0xF00U)                                            /**< MPU_CESR.NRGD Mask                      */
#define MPU_CESR_NRGD_SHIFT                      (8U)                                                /**< MPU_CESR.NRGD Position                  */
#define MPU_CESR_NRGD(x)                         (((uint32_t)(((uint32_t)(x))<<MPU_CESR_NRGD_SHIFT))&MPU_CESR_NRGD_MASK) /**< MPU_CESR.NRGD Field                     */
#define MPU_CESR_NSP_MASK                        (0xF000U)                                           /**< MPU_CESR.NSP Mask                       */
#define MPU_CESR_NSP_SHIFT                       (12U)                                               /**< MPU_CESR.NSP Position                   */
#define MPU_CESR_NSP(x)                          (((uint32_t)(((uint32_t)(x))<<MPU_CESR_NSP_SHIFT))&MPU_CESR_NSP_MASK) /**< MPU_CESR.NSP Field                      */
#define MPU_CESR_HRL_MASK                        (0xF0000U)                                          /**< MPU_CESR.HRL Mask                       */
#define MPU_CESR_HRL_SHIFT                       (16U)                                               /**< MPU_CESR.HRL Position                   */
#define MPU_CESR_HRL(x)                          (((uint32_t)(((uint32_t)(x))<<MPU_CESR_HRL_SHIFT))&MPU_CESR_HRL_MASK) /**< MPU_CESR.HRL Field                      */
#define MPU_CESR_SPERR3_MASK                     (0x10000000U)                                       /**< MPU_CESR.SPERR3 Mask                    */
#define MPU_CESR_SPERR3_SHIFT                    (28U)                                               /**< MPU_CESR.SPERR3 Position                */
#define MPU_CESR_SPERR3(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_CESR_SPERR3_SHIFT))&MPU_CESR_SPERR3_MASK) /**< MPU_CESR.SPERR3 Field                   */
#define MPU_CESR_SPERR2_MASK                     (0x20000000U)                                       /**< MPU_CESR.SPERR2 Mask                    */
#define MPU_CESR_SPERR2_SHIFT                    (29U)                                               /**< MPU_CESR.SPERR2 Position                */
#define MPU_CESR_SPERR2(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_CESR_SPERR2_SHIFT))&MPU_CESR_SPERR2_MASK) /**< MPU_CESR.SPERR2 Field                   */
#define MPU_CESR_SPERR1_MASK                     (0x40000000U)                                       /**< MPU_CESR.SPERR1 Mask                    */
#define MPU_CESR_SPERR1_SHIFT                    (30U)                                               /**< MPU_CESR.SPERR1 Position                */
#define MPU_CESR_SPERR1(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_CESR_SPERR1_SHIFT))&MPU_CESR_SPERR1_MASK) /**< MPU_CESR.SPERR1 Field                   */
#define MPU_CESR_SPERR0_MASK                     (0x80000000U)                                       /**< MPU_CESR.SPERR0 Mask                    */
#define MPU_CESR_SPERR0_SHIFT                    (31U)                                               /**< MPU_CESR.SPERR0 Position                */
#define MPU_CESR_SPERR0(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_CESR_SPERR0_SHIFT))&MPU_CESR_SPERR0_MASK) /**< MPU_CESR.SPERR0 Field                   */
/** @} */

/** @name EAR - Error Address Register, Slave Port n */ /** @{ */
#define MPU_EAR_EADDR_MASK                       (0xFFFFFFFFU)                                       /**< MPU_EAR.EADDR Mask                      */
#define MPU_EAR_EADDR_SHIFT                      (0U)                                                /**< MPU_EAR.EADDR Position                  */
#define MPU_EAR_EADDR(x)                         (((uint32_t)(((uint32_t)(x))<<MPU_EAR_EADDR_SHIFT))&MPU_EAR_EADDR_MASK) /**< MPU_EAR.EADDR Field                     */
/** @} */

/** @name EDR - Error Detail Register, Slave Port n */ /** @{ */
#define MPU_EDR_ERW_MASK                         (0x1U)                                              /**< MPU_EDR.ERW Mask                        */
#define MPU_EDR_ERW_SHIFT                        (0U)                                                /**< MPU_EDR.ERW Position                    */
#define MPU_EDR_ERW(x)                           (((uint32_t)(((uint32_t)(x))<<MPU_EDR_ERW_SHIFT))&MPU_EDR_ERW_MASK) /**< MPU_EDR.ERW Field                       */
#define MPU_EDR_EATTR_MASK                       (0xEU)                                              /**< MPU_EDR.EATTR Mask                      */
#define MPU_EDR_EATTR_SHIFT                      (1U)                                                /**< MPU_EDR.EATTR Position                  */
#define MPU_EDR_EATTR(x)                         (((uint32_t)(((uint32_t)(x))<<MPU_EDR_EATTR_SHIFT))&MPU_EDR_EATTR_MASK) /**< MPU_EDR.EATTR Field                     */
#define MPU_EDR_EMN_MASK                         (0xF0U)                                             /**< MPU_EDR.EMN Mask                        */
#define MPU_EDR_EMN_SHIFT                        (4U)                                                /**< MPU_EDR.EMN Position                    */
#define MPU_EDR_EMN(x)                           (((uint32_t)(((uint32_t)(x))<<MPU_EDR_EMN_SHIFT))&MPU_EDR_EMN_MASK) /**< MPU_EDR.EMN Field                       */
#define MPU_EDR_EPID_MASK                        (0xFF00U)                                           /**< MPU_EDR.EPID Mask                       */
#define MPU_EDR_EPID_SHIFT                       (8U)                                                /**< MPU_EDR.EPID Position                   */
#define MPU_EDR_EPID(x)                          (((uint32_t)(((uint32_t)(x))<<MPU_EDR_EPID_SHIFT))&MPU_EDR_EPID_MASK) /**< MPU_EDR.EPID Field                      */
#define MPU_EDR_EACD_MASK                        (0xFFFF0000U)                                       /**< MPU_EDR.EACD Mask                       */
#define MPU_EDR_EACD_SHIFT                       (16U)                                               /**< MPU_EDR.EACD Position                   */
#define MPU_EDR_EACD(x)                          (((uint32_t)(((uint32_t)(x))<<MPU_EDR_EACD_SHIFT))&MPU_EDR_EACD_MASK) /**< MPU_EDR.EACD Field                      */
/** @} */

/** @name WORD0 - Region Descriptor n, Word 0 */ /** @{ */
#define MPU_WORD0_SRTADDR_MASK                   (0xFFFFFFE0U)                                       /**< MPU_WORD0.SRTADDR Mask                  */
#define MPU_WORD0_SRTADDR_SHIFT                  (5U)                                                /**< MPU_WORD0.SRTADDR Position              */
#define MPU_WORD0_SRTADDR(x)                     (((uint32_t)(((uint32_t)(x))<<MPU_WORD0_SRTADDR_SHIFT))&MPU_WORD0_SRTADDR_MASK) /**< MPU_WORD0.SRTADDR Field                 */
/** @} */

/** @name WORD1 - Region Descriptor n, Word 1 */ /** @{ */
#define MPU_WORD1_ENDADDR_MASK                   (0xFFFFFFE0U)                                       /**< MPU_WORD1.ENDADDR Mask                  */
#define MPU_WORD1_ENDADDR_SHIFT                  (5U)                                                /**< MPU_WORD1.ENDADDR Position              */
#define MPU_WORD1_ENDADDR(x)                     (((uint32_t)(((uint32_t)(x))<<MPU_WORD1_ENDADDR_SHIFT))&MPU_WORD1_ENDADDR_MASK) /**< MPU_WORD1.ENDADDR Field                 */
/** @} */

/** @name WORD2 - Region Descriptor n, Word 2 */ /** @{ */
#define MPU_WORD2_M0UM_MASK                      (0x7U)                                              /**< MPU_WORD2.M0UM Mask                     */
#define MPU_WORD2_M0UM_SHIFT                     (0U)                                                /**< MPU_WORD2.M0UM Position                 */
#define MPU_WORD2_M0UM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M0UM_SHIFT))&MPU_WORD2_M0UM_MASK) /**< MPU_WORD2.M0UM Field                    */
#define MPU_WORD2_M0SM_MASK                      (0x18U)                                             /**< MPU_WORD2.M0SM Mask                     */
#define MPU_WORD2_M0SM_SHIFT                     (3U)                                                /**< MPU_WORD2.M0SM Position                 */
#define MPU_WORD2_M0SM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M0SM_SHIFT))&MPU_WORD2_M0SM_MASK) /**< MPU_WORD2.M0SM Field                    */
#define MPU_WORD2_M0PE_MASK                      (0x20U)                                             /**< MPU_WORD2.M0PE Mask                     */
#define MPU_WORD2_M0PE_SHIFT                     (5U)                                                /**< MPU_WORD2.M0PE Position                 */
#define MPU_WORD2_M0PE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M0PE_SHIFT))&MPU_WORD2_M0PE_MASK) /**< MPU_WORD2.M0PE Field                    */
#define MPU_WORD2_M1UM_MASK                      (0x1C0U)                                            /**< MPU_WORD2.M1UM Mask                     */
#define MPU_WORD2_M1UM_SHIFT                     (6U)                                                /**< MPU_WORD2.M1UM Position                 */
#define MPU_WORD2_M1UM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M1UM_SHIFT))&MPU_WORD2_M1UM_MASK) /**< MPU_WORD2.M1UM Field                    */
#define MPU_WORD2_M1SM_MASK                      (0x600U)                                            /**< MPU_WORD2.M1SM Mask                     */
#define MPU_WORD2_M1SM_SHIFT                     (9U)                                                /**< MPU_WORD2.M1SM Position                 */
#define MPU_WORD2_M1SM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M1SM_SHIFT))&MPU_WORD2_M1SM_MASK) /**< MPU_WORD2.M1SM Field                    */
#define MPU_WORD2_M1PE_MASK                      (0x800U)                                            /**< MPU_WORD2.M1PE Mask                     */
#define MPU_WORD2_M1PE_SHIFT                     (11U)                                               /**< MPU_WORD2.M1PE Position                 */
#define MPU_WORD2_M1PE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M1PE_SHIFT))&MPU_WORD2_M1PE_MASK) /**< MPU_WORD2.M1PE Field                    */
#define MPU_WORD2_M2UM_MASK                      (0x7000U)                                           /**< MPU_WORD2.M2UM Mask                     */
#define MPU_WORD2_M2UM_SHIFT                     (12U)                                               /**< MPU_WORD2.M2UM Position                 */
#define MPU_WORD2_M2UM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M2UM_SHIFT))&MPU_WORD2_M2UM_MASK) /**< MPU_WORD2.M2UM Field                    */
#define MPU_WORD2_M2SM_MASK                      (0x18000U)                                          /**< MPU_WORD2.M2SM Mask                     */
#define MPU_WORD2_M2SM_SHIFT                     (15U)                                               /**< MPU_WORD2.M2SM Position                 */
#define MPU_WORD2_M2SM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M2SM_SHIFT))&MPU_WORD2_M2SM_MASK) /**< MPU_WORD2.M2SM Field                    */
#define MPU_WORD2_M3UM_MASK                      (0x1C0000U)                                         /**< MPU_WORD2.M3UM Mask                     */
#define MPU_WORD2_M3UM_SHIFT                     (18U)                                               /**< MPU_WORD2.M3UM Position                 */
#define MPU_WORD2_M3UM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M3UM_SHIFT))&MPU_WORD2_M3UM_MASK) /**< MPU_WORD2.M3UM Field                    */
#define MPU_WORD2_M3SM_MASK                      (0x600000U)                                         /**< MPU_WORD2.M3SM Mask                     */
#define MPU_WORD2_M3SM_SHIFT                     (21U)                                               /**< MPU_WORD2.M3SM Position                 */
#define MPU_WORD2_M3SM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M3SM_SHIFT))&MPU_WORD2_M3SM_MASK) /**< MPU_WORD2.M3SM Field                    */
#define MPU_WORD2_M4WE_MASK                      (0x1000000U)                                        /**< MPU_WORD2.M4WE Mask                     */
#define MPU_WORD2_M4WE_SHIFT                     (24U)                                               /**< MPU_WORD2.M4WE Position                 */
#define MPU_WORD2_M4WE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M4WE_SHIFT))&MPU_WORD2_M4WE_MASK) /**< MPU_WORD2.M4WE Field                    */
#define MPU_WORD2_M4RE_MASK                      (0x2000000U)                                        /**< MPU_WORD2.M4RE Mask                     */
#define MPU_WORD2_M4RE_SHIFT                     (25U)                                               /**< MPU_WORD2.M4RE Position                 */
#define MPU_WORD2_M4RE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M4RE_SHIFT))&MPU_WORD2_M4RE_MASK) /**< MPU_WORD2.M4RE Field                    */
#define MPU_WORD2_M5WE_MASK                      (0x4000000U)                                        /**< MPU_WORD2.M5WE Mask                     */
#define MPU_WORD2_M5WE_SHIFT                     (26U)                                               /**< MPU_WORD2.M5WE Position                 */
#define MPU_WORD2_M5WE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M5WE_SHIFT))&MPU_WORD2_M5WE_MASK) /**< MPU_WORD2.M5WE Field                    */
#define MPU_WORD2_M5RE_MASK                      (0x8000000U)                                        /**< MPU_WORD2.M5RE Mask                     */
#define MPU_WORD2_M5RE_SHIFT                     (27U)                                               /**< MPU_WORD2.M5RE Position                 */
#define MPU_WORD2_M5RE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M5RE_SHIFT))&MPU_WORD2_M5RE_MASK) /**< MPU_WORD2.M5RE Field                    */
#define MPU_WORD2_M6WE_MASK                      (0x10000000U)                                       /**< MPU_WORD2.M6WE Mask                     */
#define MPU_WORD2_M6WE_SHIFT                     (28U)                                               /**< MPU_WORD2.M6WE Position                 */
#define MPU_WORD2_M6WE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M6WE_SHIFT))&MPU_WORD2_M6WE_MASK) /**< MPU_WORD2.M6WE Field                    */
#define MPU_WORD2_M6RE_MASK                      (0x20000000U)                                       /**< MPU_WORD2.M6RE Mask                     */
#define MPU_WORD2_M6RE_SHIFT                     (29U)                                               /**< MPU_WORD2.M6RE Position                 */
#define MPU_WORD2_M6RE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M6RE_SHIFT))&MPU_WORD2_M6RE_MASK) /**< MPU_WORD2.M6RE Field                    */
#define MPU_WORD2_M7WE_MASK                      (0x40000000U)                                       /**< MPU_WORD2.M7WE Mask                     */
#define MPU_WORD2_M7WE_SHIFT                     (30U)                                               /**< MPU_WORD2.M7WE Position                 */
#define MPU_WORD2_M7WE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M7WE_SHIFT))&MPU_WORD2_M7WE_MASK) /**< MPU_WORD2.M7WE Field                    */
#define MPU_WORD2_M7RE_MASK                      (0x80000000U)                                       /**< MPU_WORD2.M7RE Mask                     */
#define MPU_WORD2_M7RE_SHIFT                     (31U)                                               /**< MPU_WORD2.M7RE Position                 */
#define MPU_WORD2_M7RE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M7RE_SHIFT))&MPU_WORD2_M7RE_MASK) /**< MPU_WORD2.M7RE Field                    */
/** @} */

/** @name WORD3 - Region Descriptor n, Word 3 */ /** @{ */
#define MPU_WORD3_VLD_MASK                       (0x1U)                                              /**< MPU_WORD3.VLD Mask                      */
#define MPU_WORD3_VLD_SHIFT                      (0U)                                                /**< MPU_WORD3.VLD Position                  */
#define MPU_WORD3_VLD(x)                         (((uint32_t)(((uint32_t)(x))<<MPU_WORD3_VLD_SHIFT))&MPU_WORD3_VLD_MASK) /**< MPU_WORD3.VLD Field                     */
#define MPU_WORD3_PIDMASK_MASK                   (0xFF0000U)                                         /**< MPU_WORD3.PIDMASK Mask                  */
#define MPU_WORD3_PIDMASK_SHIFT                  (16U)                                               /**< MPU_WORD3.PIDMASK Position              */
#define MPU_WORD3_PIDMASK(x)                     (((uint32_t)(((uint32_t)(x))<<MPU_WORD3_PIDMASK_SHIFT))&MPU_WORD3_PIDMASK_MASK) /**< MPU_WORD3.PIDMASK Field                 */
#define MPU_WORD3_PID_MASK                       (0xFF000000U)                                       /**< MPU_WORD3.PID Mask                      */
#define MPU_WORD3_PID_SHIFT                      (24U)                                               /**< MPU_WORD3.PID Position                  */
#define MPU_WORD3_PID(x)                         (((uint32_t)(((uint32_t)(x))<<MPU_WORD3_PID_SHIFT))&MPU_WORD3_PID_MASK) /**< MPU_WORD3.PID Field                     */
/** @} */

/** @name RGDAAC - Region Descriptor Alternate Access Control %s */ /** @{ */
#define MPU_RGDAAC_M0UM_MASK                     (0x7U)                                              /**< MPU_RGDAAC.M0UM Mask                    */
#define MPU_RGDAAC_M0UM_SHIFT                    (0U)                                                /**< MPU_RGDAAC.M0UM Position                */
#define MPU_RGDAAC_M0UM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M0UM_SHIFT))&MPU_RGDAAC_M0UM_MASK) /**< MPU_RGDAAC.M0UM Field                   */
#define MPU_RGDAAC_M0SM_MASK                     (0x18U)                                             /**< MPU_RGDAAC.M0SM Mask                    */
#define MPU_RGDAAC_M0SM_SHIFT                    (3U)                                                /**< MPU_RGDAAC.M0SM Position                */
#define MPU_RGDAAC_M0SM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M0SM_SHIFT))&MPU_RGDAAC_M0SM_MASK) /**< MPU_RGDAAC.M0SM Field                   */
#define MPU_RGDAAC_M0PE_MASK                     (0x20U)                                             /**< MPU_RGDAAC.M0PE Mask                    */
#define MPU_RGDAAC_M0PE_SHIFT                    (5U)                                                /**< MPU_RGDAAC.M0PE Position                */
#define MPU_RGDAAC_M0PE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M0PE_SHIFT))&MPU_RGDAAC_M0PE_MASK) /**< MPU_RGDAAC.M0PE Field                   */
#define MPU_RGDAAC_M1UM_MASK                     (0x1C0U)                                            /**< MPU_RGDAAC.M1UM Mask                    */
#define MPU_RGDAAC_M1UM_SHIFT                    (6U)                                                /**< MPU_RGDAAC.M1UM Position                */
#define MPU_RGDAAC_M1UM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M1UM_SHIFT))&MPU_RGDAAC_M1UM_MASK) /**< MPU_RGDAAC.M1UM Field                   */
#define MPU_RGDAAC_M1SM_MASK                     (0x600U)                                            /**< MPU_RGDAAC.M1SM Mask                    */
#define MPU_RGDAAC_M1SM_SHIFT                    (9U)                                                /**< MPU_RGDAAC.M1SM Position                */
#define MPU_RGDAAC_M1SM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M1SM_SHIFT))&MPU_RGDAAC_M1SM_MASK) /**< MPU_RGDAAC.M1SM Field                   */
#define MPU_RGDAAC_M1PE_MASK                     (0x800U)                                            /**< MPU_RGDAAC.M1PE Mask                    */
#define MPU_RGDAAC_M1PE_SHIFT                    (11U)                                               /**< MPU_RGDAAC.M1PE Position                */
#define MPU_RGDAAC_M1PE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M1PE_SHIFT))&MPU_RGDAAC_M1PE_MASK) /**< MPU_RGDAAC.M1PE Field                   */
#define MPU_RGDAAC_M2UM_MASK                     (0x7000U)                                           /**< MPU_RGDAAC.M2UM Mask                    */
#define MPU_RGDAAC_M2UM_SHIFT                    (12U)                                               /**< MPU_RGDAAC.M2UM Position                */
#define MPU_RGDAAC_M2UM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M2UM_SHIFT))&MPU_RGDAAC_M2UM_MASK) /**< MPU_RGDAAC.M2UM Field                   */
#define MPU_RGDAAC_M2SM_MASK                     (0x18000U)                                          /**< MPU_RGDAAC.M2SM Mask                    */
#define MPU_RGDAAC_M2SM_SHIFT                    (15U)                                               /**< MPU_RGDAAC.M2SM Position                */
#define MPU_RGDAAC_M2SM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M2SM_SHIFT))&MPU_RGDAAC_M2SM_MASK) /**< MPU_RGDAAC.M2SM Field                   */
#define MPU_RGDAAC_M3UM_MASK                     (0x1C0000U)                                         /**< MPU_RGDAAC.M3UM Mask                    */
#define MPU_RGDAAC_M3UM_SHIFT                    (18U)                                               /**< MPU_RGDAAC.M3UM Position                */
#define MPU_RGDAAC_M3UM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M3UM_SHIFT))&MPU_RGDAAC_M3UM_MASK) /**< MPU_RGDAAC.M3UM Field                   */
#define MPU_RGDAAC_M3SM_MASK                     (0x600000U)                                         /**< MPU_RGDAAC.M3SM Mask                    */
#define MPU_RGDAAC_M3SM_SHIFT                    (21U)                                               /**< MPU_RGDAAC.M3SM Position                */
#define MPU_RGDAAC_M3SM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M3SM_SHIFT))&MPU_RGDAAC_M3SM_MASK) /**< MPU_RGDAAC.M3SM Field                   */
#define MPU_RGDAAC_M4WE_MASK                     (0x1000000U)                                        /**< MPU_RGDAAC.M4WE Mask                    */
#define MPU_RGDAAC_M4WE_SHIFT                    (24U)                                               /**< MPU_RGDAAC.M4WE Position                */
#define MPU_RGDAAC_M4WE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M4WE_SHIFT))&MPU_RGDAAC_M4WE_MASK) /**< MPU_RGDAAC.M4WE Field                   */
#define MPU_RGDAAC_M4RE_MASK                     (0x2000000U)                                        /**< MPU_RGDAAC.M4RE Mask                    */
#define MPU_RGDAAC_M4RE_SHIFT                    (25U)                                               /**< MPU_RGDAAC.M4RE Position                */
#define MPU_RGDAAC_M4RE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M4RE_SHIFT))&MPU_RGDAAC_M4RE_MASK) /**< MPU_RGDAAC.M4RE Field                   */
#define MPU_RGDAAC_M5WE_MASK                     (0x4000000U)                                        /**< MPU_RGDAAC.M5WE Mask                    */
#define MPU_RGDAAC_M5WE_SHIFT                    (26U)                                               /**< MPU_RGDAAC.M5WE Position                */
#define MPU_RGDAAC_M5WE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M5WE_SHIFT))&MPU_RGDAAC_M5WE_MASK) /**< MPU_RGDAAC.M5WE Field                   */
#define MPU_RGDAAC_M5RE_MASK                     (0x8000000U)                                        /**< MPU_RGDAAC.M5RE Mask                    */
#define MPU_RGDAAC_M5RE_SHIFT                    (27U)                                               /**< MPU_RGDAAC.M5RE Position                */
#define MPU_RGDAAC_M5RE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M5RE_SHIFT))&MPU_RGDAAC_M5RE_MASK) /**< MPU_RGDAAC.M5RE Field                   */
#define MPU_RGDAAC_M6WE_MASK                     (0x10000000U)                                       /**< MPU_RGDAAC.M6WE Mask                    */
#define MPU_RGDAAC_M6WE_SHIFT                    (28U)                                               /**< MPU_RGDAAC.M6WE Position                */
#define MPU_RGDAAC_M6WE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M6WE_SHIFT))&MPU_RGDAAC_M6WE_MASK) /**< MPU_RGDAAC.M6WE Field                   */
#define MPU_RGDAAC_M6RE_MASK                     (0x20000000U)                                       /**< MPU_RGDAAC.M6RE Mask                    */
#define MPU_RGDAAC_M6RE_SHIFT                    (29U)                                               /**< MPU_RGDAAC.M6RE Position                */
#define MPU_RGDAAC_M6RE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M6RE_SHIFT))&MPU_RGDAAC_M6RE_MASK) /**< MPU_RGDAAC.M6RE Field                   */
#define MPU_RGDAAC_M7WE_MASK                     (0x40000000U)                                       /**< MPU_RGDAAC.M7WE Mask                    */
#define MPU_RGDAAC_M7WE_SHIFT                    (30U)                                               /**< MPU_RGDAAC.M7WE Position                */
#define MPU_RGDAAC_M7WE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M7WE_SHIFT))&MPU_RGDAAC_M7WE_MASK) /**< MPU_RGDAAC.M7WE Field                   */
#define MPU_RGDAAC_M7RE_MASK                     (0x80000000U)                                       /**< MPU_RGDAAC.M7RE Mask                    */
#define MPU_RGDAAC_M7RE_SHIFT                    (31U)                                               /**< MPU_RGDAAC.M7RE Position                */
#define MPU_RGDAAC_M7RE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M7RE_SHIFT))&MPU_RGDAAC_M7RE_MASK) /**< MPU_RGDAAC.M7RE Field                   */
/** @} */

/** @} */ /* End group MPU_Register_Masks_GROUP */


/* MPU - Peripheral instance base addresses */
#define MPU_BasePtr                    0x4000D000UL //!< Peripheral base address
#define MPU                            ((MPU_Type *) MPU_BasePtr) //!< Freescale base pointer
#define MPU_BASE_PTR                   (MPU) //!< Freescale style base pointer

/** @} */ /* End group MPU_Peripheral_access_layer_GROUP */


/** @brief C Struct for MSCM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup MSCM_Peripheral_access_layer_GROUP MSCM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           MSCM (file:MSCM_S32K14x)             ================ */
/* ================================================================================ */

/**
 * @brief Miscellaneous System Control Module
 */
/**
 * @struct MSCM_Type
 * @brief  C Struct allowing access to MSCM registers
 */
typedef struct MSCM_Type {
   __I  uint32_t  CPxTYPE;                      /**< 0000: Processor X Type Register                                    */
   __I  uint32_t  CPxNUM;                       /**< 0004: Processor X Number Register                                  */
   __I  uint32_t  CPxMASTER;                    /**< 0008: Processor X Master Register                                  */
   __I  uint32_t  CPxCOUNT;                     /**< 000C: Processor X Count Register                                   */
   __I  uint32_t  CPxCFG0;                      /**< 0010: Processor X Configuration Register 0                         */
   __I  uint32_t  CPxCFG1;                      /**< 0014: Processor X Configuration Register 1                         */
   __I  uint32_t  CPxCFG2;                      /**< 0018: Processor X Configuration Register 2                         */
   __I  uint32_t  CPxCFG3;                      /**< 001C: Processor X Configuration Register 3                         */
   __I  uint32_t  CP0TYPE;                      /**< 0020: Processor 0 Type Register                                    */
   __I  uint32_t  CP0NUM;                       /**< 0024: Processor 0 Number Register                                  */
   __I  uint32_t  CP0MASTER;                    /**< 0028: Processor 0 Master Register                                  */
   __I  uint32_t  CP0COUNT;                     /**< 002C: Processor 0 Count Register                                   */
   __I  uint32_t  CP0CFG0;                      /**< 0030: Processor 0 Configuration Register 0                         */
   __I  uint32_t  CP0CFG1;                      /**< 0034: Processor 0 Configuration Register 1                         */
   __I  uint32_t  CP0CFG2;                      /**< 0038: Processor 0 Configuration Register 2                         */
   __I  uint32_t  CP0CFG3;                      /**< 003C: Processor 0 Configuration Register 3                         */
        uint8_t   RESERVED_0[960];              /**< 0040: 0x3C0 bytes                                                  */
   __IO uint32_t  OCMDR[4];                     /**< 0400: On-Chip Memory Descriptor Register                           */
} MSCM_Type;


/** @brief Register Masks for MSCM */

/* -------------------------------------------------------------------------------- */
/* -----------     'MSCM' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup MSCM_Register_Masks_GROUP MSCM Register Masks */
/** @{ */

/** @name CPxTYPE - Processor X Type Register */ /** @{ */
#define MSCM_CPxTYPE_RYPZ_MASK                   (0xFFU)                                             /**< MSCM_CPxTYPE.RYPZ Mask                  */
#define MSCM_CPxTYPE_RYPZ_SHIFT                  (0U)                                                /**< MSCM_CPxTYPE.RYPZ Position              */
#define MSCM_CPxTYPE_RYPZ(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CPxTYPE_RYPZ_SHIFT))&MSCM_CPxTYPE_RYPZ_MASK) /**< MSCM_CPxTYPE.RYPZ Field                 */
#define MSCM_CPxTYPE_PERSONALITY_MASK            (0xFFFFFF00U)                                       /**< MSCM_CPxTYPE.PERSONALITY Mask           */
#define MSCM_CPxTYPE_PERSONALITY_SHIFT           (8U)                                                /**< MSCM_CPxTYPE.PERSONALITY Position       */
#define MSCM_CPxTYPE_PERSONALITY(x)              (((uint32_t)(((uint32_t)(x))<<MSCM_CPxTYPE_PERSONALITY_SHIFT))&MSCM_CPxTYPE_PERSONALITY_MASK) /**< MSCM_CPxTYPE.PERSONALITY Field          */
/** @} */

/** @name CPxNUM - Processor X Number Register */ /** @{ */
#define MSCM_CPxNUM_CPN_MASK                     (0x1U)                                              /**< MSCM_CPxNUM.CPN Mask                    */
#define MSCM_CPxNUM_CPN_SHIFT                    (0U)                                                /**< MSCM_CPxNUM.CPN Position                */
#define MSCM_CPxNUM_CPN(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_CPxNUM_CPN_SHIFT))&MSCM_CPxNUM_CPN_MASK) /**< MSCM_CPxNUM.CPN Field                   */
/** @} */

/** @name CPxMASTER - Processor X Master Register */ /** @{ */
#define MSCM_CPxMASTER_PPMN_MASK                 (0x3FU)                                             /**< MSCM_CPxMASTER.PPMN Mask                */
#define MSCM_CPxMASTER_PPMN_SHIFT                (0U)                                                /**< MSCM_CPxMASTER.PPMN Position            */
#define MSCM_CPxMASTER_PPMN(x)                   (((uint32_t)(((uint32_t)(x))<<MSCM_CPxMASTER_PPMN_SHIFT))&MSCM_CPxMASTER_PPMN_MASK) /**< MSCM_CPxMASTER.PPMN Field               */
/** @} */

/** @name CPxCOUNT - Processor X Count Register */ /** @{ */
#define MSCM_CPxCOUNT_PCNT_MASK                  (0x3U)                                              /**< MSCM_CPxCOUNT.PCNT Mask                 */
#define MSCM_CPxCOUNT_PCNT_SHIFT                 (0U)                                                /**< MSCM_CPxCOUNT.PCNT Position             */
#define MSCM_CPxCOUNT_PCNT(x)                    (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCOUNT_PCNT_SHIFT))&MSCM_CPxCOUNT_PCNT_MASK) /**< MSCM_CPxCOUNT.PCNT Field                */
/** @} */

/** @name CPxCFG0 - Processor X Configuration Register 0 */ /** @{ */
#define MSCM_CPxCFG0_DCWY_MASK                   (0xFFU)                                             /**< MSCM_CPxCFG0.DCWY Mask                  */
#define MSCM_CPxCFG0_DCWY_SHIFT                  (0U)                                                /**< MSCM_CPxCFG0.DCWY Position              */
#define MSCM_CPxCFG0_DCWY(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG0_DCWY_SHIFT))&MSCM_CPxCFG0_DCWY_MASK) /**< MSCM_CPxCFG0.DCWY Field                 */
#define MSCM_CPxCFG0_DCSZ_MASK                   (0xFF00U)                                           /**< MSCM_CPxCFG0.DCSZ Mask                  */
#define MSCM_CPxCFG0_DCSZ_SHIFT                  (8U)                                                /**< MSCM_CPxCFG0.DCSZ Position              */
#define MSCM_CPxCFG0_DCSZ(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG0_DCSZ_SHIFT))&MSCM_CPxCFG0_DCSZ_MASK) /**< MSCM_CPxCFG0.DCSZ Field                 */
#define MSCM_CPxCFG0_ICWY_MASK                   (0xFF0000U)                                         /**< MSCM_CPxCFG0.ICWY Mask                  */
#define MSCM_CPxCFG0_ICWY_SHIFT                  (16U)                                               /**< MSCM_CPxCFG0.ICWY Position              */
#define MSCM_CPxCFG0_ICWY(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG0_ICWY_SHIFT))&MSCM_CPxCFG0_ICWY_MASK) /**< MSCM_CPxCFG0.ICWY Field                 */
#define MSCM_CPxCFG0_ICSZ_MASK                   (0xFF000000U)                                       /**< MSCM_CPxCFG0.ICSZ Mask                  */
#define MSCM_CPxCFG0_ICSZ_SHIFT                  (24U)                                               /**< MSCM_CPxCFG0.ICSZ Position              */
#define MSCM_CPxCFG0_ICSZ(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG0_ICSZ_SHIFT))&MSCM_CPxCFG0_ICSZ_MASK) /**< MSCM_CPxCFG0.ICSZ Field                 */
/** @} */

/** @name CPxCFG1 - Processor X Configuration Register 1 */ /** @{ */
#define MSCM_CPxCFG1_L2WY_MASK                   (0xFF0000U)                                         /**< MSCM_CPxCFG1.L2WY Mask                  */
#define MSCM_CPxCFG1_L2WY_SHIFT                  (16U)                                               /**< MSCM_CPxCFG1.L2WY Position              */
#define MSCM_CPxCFG1_L2WY(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG1_L2WY_SHIFT))&MSCM_CPxCFG1_L2WY_MASK) /**< MSCM_CPxCFG1.L2WY Field                 */
#define MSCM_CPxCFG1_L2SZ_MASK                   (0xFF000000U)                                       /**< MSCM_CPxCFG1.L2SZ Mask                  */
#define MSCM_CPxCFG1_L2SZ_SHIFT                  (24U)                                               /**< MSCM_CPxCFG1.L2SZ Position              */
#define MSCM_CPxCFG1_L2SZ(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG1_L2SZ_SHIFT))&MSCM_CPxCFG1_L2SZ_MASK) /**< MSCM_CPxCFG1.L2SZ Field                 */
/** @} */

/** @name CPxCFG2 - Processor X Configuration Register 2 */ /** @{ */
#define MSCM_CPxCFG2_TMUSZ_MASK                  (0xFF00U)                                           /**< MSCM_CPxCFG2.TMUSZ Mask                 */
#define MSCM_CPxCFG2_TMUSZ_SHIFT                 (8U)                                                /**< MSCM_CPxCFG2.TMUSZ Position             */
#define MSCM_CPxCFG2_TMUSZ(x)                    (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG2_TMUSZ_SHIFT))&MSCM_CPxCFG2_TMUSZ_MASK) /**< MSCM_CPxCFG2.TMUSZ Field                */
#define MSCM_CPxCFG2_TMLSZ_MASK                  (0xFF000000U)                                       /**< MSCM_CPxCFG2.TMLSZ Mask                 */
#define MSCM_CPxCFG2_TMLSZ_SHIFT                 (24U)                                               /**< MSCM_CPxCFG2.TMLSZ Position             */
#define MSCM_CPxCFG2_TMLSZ(x)                    (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG2_TMLSZ_SHIFT))&MSCM_CPxCFG2_TMLSZ_MASK) /**< MSCM_CPxCFG2.TMLSZ Field                */
/** @} */

/** @name CPxCFG3 - Processor X Configuration Register 3 */ /** @{ */
#define MSCM_CPxCFG3_FPU_MASK                    (0x1U)                                              /**< MSCM_CPxCFG3.FPU Mask                   */
#define MSCM_CPxCFG3_FPU_SHIFT                   (0U)                                                /**< MSCM_CPxCFG3.FPU Position               */
#define MSCM_CPxCFG3_FPU(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG3_FPU_SHIFT))&MSCM_CPxCFG3_FPU_MASK) /**< MSCM_CPxCFG3.FPU Field                  */
#define MSCM_CPxCFG3_SIMD_MASK                   (0x2U)                                              /**< MSCM_CPxCFG3.SIMD Mask                  */
#define MSCM_CPxCFG3_SIMD_SHIFT                  (1U)                                                /**< MSCM_CPxCFG3.SIMD Position              */
#define MSCM_CPxCFG3_SIMD(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG3_SIMD_SHIFT))&MSCM_CPxCFG3_SIMD_MASK) /**< MSCM_CPxCFG3.SIMD Field                 */
#define MSCM_CPxCFG3_JAZ_MASK                    (0x4U)                                              /**< MSCM_CPxCFG3.JAZ Mask                   */
#define MSCM_CPxCFG3_JAZ_SHIFT                   (2U)                                                /**< MSCM_CPxCFG3.JAZ Position               */
#define MSCM_CPxCFG3_JAZ(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG3_JAZ_SHIFT))&MSCM_CPxCFG3_JAZ_MASK) /**< MSCM_CPxCFG3.JAZ Field                  */
#define MSCM_CPxCFG3_MMU_MASK                    (0x8U)                                              /**< MSCM_CPxCFG3.MMU Mask                   */
#define MSCM_CPxCFG3_MMU_SHIFT                   (3U)                                                /**< MSCM_CPxCFG3.MMU Position               */
#define MSCM_CPxCFG3_MMU(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG3_MMU_SHIFT))&MSCM_CPxCFG3_MMU_MASK) /**< MSCM_CPxCFG3.MMU Field                  */
#define MSCM_CPxCFG3_TZ_MASK                     (0x10U)                                             /**< MSCM_CPxCFG3.TZ Mask                    */
#define MSCM_CPxCFG3_TZ_SHIFT                    (4U)                                                /**< MSCM_CPxCFG3.TZ Position                */
#define MSCM_CPxCFG3_TZ(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG3_TZ_SHIFT))&MSCM_CPxCFG3_TZ_MASK) /**< MSCM_CPxCFG3.TZ Field                   */
#define MSCM_CPxCFG3_CMP_MASK                    (0x20U)                                             /**< MSCM_CPxCFG3.CMP Mask                   */
#define MSCM_CPxCFG3_CMP_SHIFT                   (5U)                                                /**< MSCM_CPxCFG3.CMP Position               */
#define MSCM_CPxCFG3_CMP(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG3_CMP_SHIFT))&MSCM_CPxCFG3_CMP_MASK) /**< MSCM_CPxCFG3.CMP Field                  */
#define MSCM_CPxCFG3_BB_MASK                     (0x40U)                                             /**< MSCM_CPxCFG3.BB Mask                    */
#define MSCM_CPxCFG3_BB_SHIFT                    (6U)                                                /**< MSCM_CPxCFG3.BB Position                */
#define MSCM_CPxCFG3_BB(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG3_BB_SHIFT))&MSCM_CPxCFG3_BB_MASK) /**< MSCM_CPxCFG3.BB Field                   */
#define MSCM_CPxCFG3_SBP_MASK                    (0x300U)                                            /**< MSCM_CPxCFG3.SBP Mask                   */
#define MSCM_CPxCFG3_SBP_SHIFT                   (8U)                                                /**< MSCM_CPxCFG3.SBP Position               */
#define MSCM_CPxCFG3_SBP(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_CPxCFG3_SBP_SHIFT))&MSCM_CPxCFG3_SBP_MASK) /**< MSCM_CPxCFG3.SBP Field                  */
/** @} */

/** @name CP0TYPE - Processor 0 Type Register */ /** @{ */
#define MSCM_CP0TYPE_RYPZ_MASK                   (0xFFU)                                             /**< MSCM_CP0TYPE.RYPZ Mask                  */
#define MSCM_CP0TYPE_RYPZ_SHIFT                  (0U)                                                /**< MSCM_CP0TYPE.RYPZ Position              */
#define MSCM_CP0TYPE_RYPZ(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CP0TYPE_RYPZ_SHIFT))&MSCM_CP0TYPE_RYPZ_MASK) /**< MSCM_CP0TYPE.RYPZ Field                 */
#define MSCM_CP0TYPE_PERSONALITY_MASK            (0xFFFFFF00U)                                       /**< MSCM_CP0TYPE.PERSONALITY Mask           */
#define MSCM_CP0TYPE_PERSONALITY_SHIFT           (8U)                                                /**< MSCM_CP0TYPE.PERSONALITY Position       */
#define MSCM_CP0TYPE_PERSONALITY(x)              (((uint32_t)(((uint32_t)(x))<<MSCM_CP0TYPE_PERSONALITY_SHIFT))&MSCM_CP0TYPE_PERSONALITY_MASK) /**< MSCM_CP0TYPE.PERSONALITY Field          */
/** @} */

/** @name CP0NUM - Processor 0 Number Register */ /** @{ */
#define MSCM_CP0NUM_CPN_MASK                     (0x1U)                                              /**< MSCM_CP0NUM.CPN Mask                    */
#define MSCM_CP0NUM_CPN_SHIFT                    (0U)                                                /**< MSCM_CP0NUM.CPN Position                */
#define MSCM_CP0NUM_CPN(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_CP0NUM_CPN_SHIFT))&MSCM_CP0NUM_CPN_MASK) /**< MSCM_CP0NUM.CPN Field                   */
/** @} */

/** @name CP0MASTER - Processor 0 Master Register */ /** @{ */
#define MSCM_CP0MASTER_PPMN_MASK                 (0x3FU)                                             /**< MSCM_CP0MASTER.PPMN Mask                */
#define MSCM_CP0MASTER_PPMN_SHIFT                (0U)                                                /**< MSCM_CP0MASTER.PPMN Position            */
#define MSCM_CP0MASTER_PPMN(x)                   (((uint32_t)(((uint32_t)(x))<<MSCM_CP0MASTER_PPMN_SHIFT))&MSCM_CP0MASTER_PPMN_MASK) /**< MSCM_CP0MASTER.PPMN Field               */
/** @} */

/** @name CP0COUNT - Processor 0 Count Register */ /** @{ */
#define MSCM_CP0COUNT_PCNT_MASK                  (0x3U)                                              /**< MSCM_CP0COUNT.PCNT Mask                 */
#define MSCM_CP0COUNT_PCNT_SHIFT                 (0U)                                                /**< MSCM_CP0COUNT.PCNT Position             */
#define MSCM_CP0COUNT_PCNT(x)                    (((uint32_t)(((uint32_t)(x))<<MSCM_CP0COUNT_PCNT_SHIFT))&MSCM_CP0COUNT_PCNT_MASK) /**< MSCM_CP0COUNT.PCNT Field                */
/** @} */

/** @name CP0CFG0 - Processor 0 Configuration Register 0 */ /** @{ */
#define MSCM_CP0CFG0_DCWY_MASK                   (0xFFU)                                             /**< MSCM_CP0CFG0.DCWY Mask                  */
#define MSCM_CP0CFG0_DCWY_SHIFT                  (0U)                                                /**< MSCM_CP0CFG0.DCWY Position              */
#define MSCM_CP0CFG0_DCWY(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG0_DCWY_SHIFT))&MSCM_CP0CFG0_DCWY_MASK) /**< MSCM_CP0CFG0.DCWY Field                 */
#define MSCM_CP0CFG0_DCSZ_MASK                   (0xFF00U)                                           /**< MSCM_CP0CFG0.DCSZ Mask                  */
#define MSCM_CP0CFG0_DCSZ_SHIFT                  (8U)                                                /**< MSCM_CP0CFG0.DCSZ Position              */
#define MSCM_CP0CFG0_DCSZ(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG0_DCSZ_SHIFT))&MSCM_CP0CFG0_DCSZ_MASK) /**< MSCM_CP0CFG0.DCSZ Field                 */
#define MSCM_CP0CFG0_ICWY_MASK                   (0xFF0000U)                                         /**< MSCM_CP0CFG0.ICWY Mask                  */
#define MSCM_CP0CFG0_ICWY_SHIFT                  (16U)                                               /**< MSCM_CP0CFG0.ICWY Position              */
#define MSCM_CP0CFG0_ICWY(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG0_ICWY_SHIFT))&MSCM_CP0CFG0_ICWY_MASK) /**< MSCM_CP0CFG0.ICWY Field                 */
#define MSCM_CP0CFG0_ICSZ_MASK                   (0xFF000000U)                                       /**< MSCM_CP0CFG0.ICSZ Mask                  */
#define MSCM_CP0CFG0_ICSZ_SHIFT                  (24U)                                               /**< MSCM_CP0CFG0.ICSZ Position              */
#define MSCM_CP0CFG0_ICSZ(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG0_ICSZ_SHIFT))&MSCM_CP0CFG0_ICSZ_MASK) /**< MSCM_CP0CFG0.ICSZ Field                 */
/** @} */

/** @name CP0CFG1 - Processor 0 Configuration Register 1 */ /** @{ */
#define MSCM_CP0CFG1_L2WY_MASK                   (0xFF0000U)                                         /**< MSCM_CP0CFG1.L2WY Mask                  */
#define MSCM_CP0CFG1_L2WY_SHIFT                  (16U)                                               /**< MSCM_CP0CFG1.L2WY Position              */
#define MSCM_CP0CFG1_L2WY(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG1_L2WY_SHIFT))&MSCM_CP0CFG1_L2WY_MASK) /**< MSCM_CP0CFG1.L2WY Field                 */
#define MSCM_CP0CFG1_L2SZ_MASK                   (0xFF000000U)                                       /**< MSCM_CP0CFG1.L2SZ Mask                  */
#define MSCM_CP0CFG1_L2SZ_SHIFT                  (24U)                                               /**< MSCM_CP0CFG1.L2SZ Position              */
#define MSCM_CP0CFG1_L2SZ(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG1_L2SZ_SHIFT))&MSCM_CP0CFG1_L2SZ_MASK) /**< MSCM_CP0CFG1.L2SZ Field                 */
/** @} */

/** @name CP0CFG2 - Processor 0 Configuration Register 2 */ /** @{ */
#define MSCM_CP0CFG2_TMUSZ_MASK                  (0xFF00U)                                           /**< MSCM_CP0CFG2.TMUSZ Mask                 */
#define MSCM_CP0CFG2_TMUSZ_SHIFT                 (8U)                                                /**< MSCM_CP0CFG2.TMUSZ Position             */
#define MSCM_CP0CFG2_TMUSZ(x)                    (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG2_TMUSZ_SHIFT))&MSCM_CP0CFG2_TMUSZ_MASK) /**< MSCM_CP0CFG2.TMUSZ Field                */
#define MSCM_CP0CFG2_TMLSZ_MASK                  (0xFF000000U)                                       /**< MSCM_CP0CFG2.TMLSZ Mask                 */
#define MSCM_CP0CFG2_TMLSZ_SHIFT                 (24U)                                               /**< MSCM_CP0CFG2.TMLSZ Position             */
#define MSCM_CP0CFG2_TMLSZ(x)                    (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG2_TMLSZ_SHIFT))&MSCM_CP0CFG2_TMLSZ_MASK) /**< MSCM_CP0CFG2.TMLSZ Field                */
/** @} */

/** @name CP0CFG3 - Processor 0 Configuration Register 3 */ /** @{ */
#define MSCM_CP0CFG3_FPU_MASK                    (0x1U)                                              /**< MSCM_CP0CFG3.FPU Mask                   */
#define MSCM_CP0CFG3_FPU_SHIFT                   (0U)                                                /**< MSCM_CP0CFG3.FPU Position               */
#define MSCM_CP0CFG3_FPU(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG3_FPU_SHIFT))&MSCM_CP0CFG3_FPU_MASK) /**< MSCM_CP0CFG3.FPU Field                  */
#define MSCM_CP0CFG3_SIMD_MASK                   (0x2U)                                              /**< MSCM_CP0CFG3.SIMD Mask                  */
#define MSCM_CP0CFG3_SIMD_SHIFT                  (1U)                                                /**< MSCM_CP0CFG3.SIMD Position              */
#define MSCM_CP0CFG3_SIMD(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG3_SIMD_SHIFT))&MSCM_CP0CFG3_SIMD_MASK) /**< MSCM_CP0CFG3.SIMD Field                 */
#define MSCM_CP0CFG3_JAZ_MASK                    (0x4U)                                              /**< MSCM_CP0CFG3.JAZ Mask                   */
#define MSCM_CP0CFG3_JAZ_SHIFT                   (2U)                                                /**< MSCM_CP0CFG3.JAZ Position               */
#define MSCM_CP0CFG3_JAZ(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG3_JAZ_SHIFT))&MSCM_CP0CFG3_JAZ_MASK) /**< MSCM_CP0CFG3.JAZ Field                  */
#define MSCM_CP0CFG3_MMU_MASK                    (0x8U)                                              /**< MSCM_CP0CFG3.MMU Mask                   */
#define MSCM_CP0CFG3_MMU_SHIFT                   (3U)                                                /**< MSCM_CP0CFG3.MMU Position               */
#define MSCM_CP0CFG3_MMU(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG3_MMU_SHIFT))&MSCM_CP0CFG3_MMU_MASK) /**< MSCM_CP0CFG3.MMU Field                  */
#define MSCM_CP0CFG3_TZ_MASK                     (0x10U)                                             /**< MSCM_CP0CFG3.TZ Mask                    */
#define MSCM_CP0CFG3_TZ_SHIFT                    (4U)                                                /**< MSCM_CP0CFG3.TZ Position                */
#define MSCM_CP0CFG3_TZ(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG3_TZ_SHIFT))&MSCM_CP0CFG3_TZ_MASK) /**< MSCM_CP0CFG3.TZ Field                   */
#define MSCM_CP0CFG3_CMP_MASK                    (0x20U)                                             /**< MSCM_CP0CFG3.CMP Mask                   */
#define MSCM_CP0CFG3_CMP_SHIFT                   (5U)                                                /**< MSCM_CP0CFG3.CMP Position               */
#define MSCM_CP0CFG3_CMP(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG3_CMP_SHIFT))&MSCM_CP0CFG3_CMP_MASK) /**< MSCM_CP0CFG3.CMP Field                  */
#define MSCM_CP0CFG3_BB_MASK                     (0x40U)                                             /**< MSCM_CP0CFG3.BB Mask                    */
#define MSCM_CP0CFG3_BB_SHIFT                    (6U)                                                /**< MSCM_CP0CFG3.BB Position                */
#define MSCM_CP0CFG3_BB(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG3_BB_SHIFT))&MSCM_CP0CFG3_BB_MASK) /**< MSCM_CP0CFG3.BB Field                   */
#define MSCM_CP0CFG3_SBP_MASK                    (0x300U)                                            /**< MSCM_CP0CFG3.SBP Mask                   */
#define MSCM_CP0CFG3_SBP_SHIFT                   (8U)                                                /**< MSCM_CP0CFG3.SBP Position               */
#define MSCM_CP0CFG3_SBP(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_CP0CFG3_SBP_SHIFT))&MSCM_CP0CFG3_SBP_MASK) /**< MSCM_CP0CFG3.SBP Field                  */
/** @} */

/** @name OCMDR - On-Chip Memory Descriptor Register */ /** @{ */
#define MSCM_OCMDR_OCM0_MASK                     (0xFU)                                              /**< MSCM_OCMDR.OCM0 Mask                    */
#define MSCM_OCMDR_OCM0_SHIFT                    (0U)                                                /**< MSCM_OCMDR.OCM0 Position                */
#define MSCM_OCMDR_OCM0(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_OCMDR_OCM0_SHIFT))&MSCM_OCMDR_OCM0_MASK) /**< MSCM_OCMDR.OCM0 Field                   */
#define MSCM_OCMDR_OCM1_MASK                     (0xF0U)                                             /**< MSCM_OCMDR.OCM1 Mask                    */
#define MSCM_OCMDR_OCM1_SHIFT                    (4U)                                                /**< MSCM_OCMDR.OCM1 Position                */
#define MSCM_OCMDR_OCM1(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_OCMDR_OCM1_SHIFT))&MSCM_OCMDR_OCM1_MASK) /**< MSCM_OCMDR.OCM1 Field                   */
#define MSCM_OCMDR_OCM2_MASK                     (0xF00U)                                            /**< MSCM_OCMDR.OCM2 Mask                    */
#define MSCM_OCMDR_OCM2_SHIFT                    (8U)                                                /**< MSCM_OCMDR.OCM2 Position                */
#define MSCM_OCMDR_OCM2(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_OCMDR_OCM2_SHIFT))&MSCM_OCMDR_OCM2_MASK) /**< MSCM_OCMDR.OCM2 Field                   */
#define MSCM_OCMDR_OCMPU_MASK                    (0x1000U)                                           /**< MSCM_OCMDR.OCMPU Mask                   */
#define MSCM_OCMDR_OCMPU_SHIFT                   (12U)                                               /**< MSCM_OCMDR.OCMPU Position               */
#define MSCM_OCMDR_OCMPU(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_OCMDR_OCMPU_SHIFT))&MSCM_OCMDR_OCMPU_MASK) /**< MSCM_OCMDR.OCMPU Field                  */
#define MSCM_OCMDR_OCMT_MASK                     (0xE000U)                                           /**< MSCM_OCMDR.OCMT Mask                    */
#define MSCM_OCMDR_OCMT_SHIFT                    (13U)                                               /**< MSCM_OCMDR.OCMT Position                */
#define MSCM_OCMDR_OCMT(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_OCMDR_OCMT_SHIFT))&MSCM_OCMDR_OCMT_MASK) /**< MSCM_OCMDR.OCMT Field                   */
#define MSCM_OCMDR_RO_MASK                       (0x10000U)                                          /**< MSCM_OCMDR.RO Mask                      */
#define MSCM_OCMDR_RO_SHIFT                      (16U)                                               /**< MSCM_OCMDR.RO Position                  */
#define MSCM_OCMDR_RO(x)                         (((uint32_t)(((uint32_t)(x))<<MSCM_OCMDR_RO_SHIFT))&MSCM_OCMDR_RO_MASK) /**< MSCM_OCMDR.RO Field                     */
#define MSCM_OCMDR_OCMW_MASK                     (0xE0000U)                                          /**< MSCM_OCMDR.OCMW Mask                    */
#define MSCM_OCMDR_OCMW_SHIFT                    (17U)                                               /**< MSCM_OCMDR.OCMW Position                */
#define MSCM_OCMDR_OCMW(x)                       (((uint32_t)(((uint32_t)(x))<<MSCM_OCMDR_OCMW_SHIFT))&MSCM_OCMDR_OCMW_MASK) /**< MSCM_OCMDR.OCMW Field                   */
#define MSCM_OCMDR_OCMSZ_MASK                    (0xF000000U)                                        /**< MSCM_OCMDR.OCMSZ Mask                   */
#define MSCM_OCMDR_OCMSZ_SHIFT                   (24U)                                               /**< MSCM_OCMDR.OCMSZ Position               */
#define MSCM_OCMDR_OCMSZ(x)                      (((uint32_t)(((uint32_t)(x))<<MSCM_OCMDR_OCMSZ_SHIFT))&MSCM_OCMDR_OCMSZ_MASK) /**< MSCM_OCMDR.OCMSZ Field                  */
#define MSCM_OCMDR_OCMSZH_MASK                   (0x10000000U)                                       /**< MSCM_OCMDR.OCMSZH Mask                  */
#define MSCM_OCMDR_OCMSZH_SHIFT                  (28U)                                               /**< MSCM_OCMDR.OCMSZH Position              */
#define MSCM_OCMDR_OCMSZH(x)                     (((uint32_t)(((uint32_t)(x))<<MSCM_OCMDR_OCMSZH_SHIFT))&MSCM_OCMDR_OCMSZH_MASK) /**< MSCM_OCMDR.OCMSZH Field                 */
#define MSCM_OCMDR_V_MASK                        (0x80000000U)                                       /**< MSCM_OCMDR.V Mask                       */
#define MSCM_OCMDR_V_SHIFT                       (31U)                                               /**< MSCM_OCMDR.V Position                   */
#define MSCM_OCMDR_V(x)                          (((uint32_t)(((uint32_t)(x))<<MSCM_OCMDR_V_SHIFT))&MSCM_OCMDR_V_MASK) /**< MSCM_OCMDR.V Field                      */
/** @} */

/** @} */ /* End group MSCM_Register_Masks_GROUP */


/* MSCM - Peripheral instance base addresses */
#define MSCM_BasePtr                   0x40001000UL //!< Peripheral base address
#define MSCM                           ((MSCM_Type *) MSCM_BasePtr) //!< Freescale base pointer
#define MSCM_BASE_PTR                  (MSCM) //!< Freescale style base pointer

/** @} */ /* End group MSCM_Peripheral_access_layer_GROUP */


/** @brief C Struct for NV */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup NV_Peripheral_access_layer_GROUP NV Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           NV (file:NV_MKV40)                   ================ */
/* ================================================================================ */

/**
 * @brief Flash configuration field
 */
/**
 * @struct NV_Type
 * @brief  C Struct allowing access to NV registers
 */
typedef struct NV_Type {
   __I  uint8_t   BACKKEY3;                     /**< 0000: Backdoor Comparison Key 3                                    */
   __I  uint8_t   BACKKEY2;                     /**< 0001: Backdoor Comparison Key 2                                    */
   __I  uint8_t   BACKKEY1;                     /**< 0002: Backdoor Comparison Key 1                                    */
   __I  uint8_t   BACKKEY0;                     /**< 0003: Backdoor Comparison Key 0                                    */
   __I  uint8_t   BACKKEY7;                     /**< 0004: Backdoor Comparison Key 7                                    */
   __I  uint8_t   BACKKEY6;                     /**< 0005: Backdoor Comparison Key 6                                    */
   __I  uint8_t   BACKKEY5;                     /**< 0006: Backdoor Comparison Key 5                                    */
   __I  uint8_t   BACKKEY4;                     /**< 0007: Backdoor Comparison Key 4                                    */
   __I  uint8_t   FPROT3;                       /**< 0008: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FPROT2;                       /**< 0009: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FPROT1;                       /**< 000A: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FPROT0;                       /**< 000B: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FSEC;                         /**< 000C: Non-volatile Flash Security Register                         */
   __I  uint8_t   FOPT;                         /**< 000D: Non-volatile Flash Option Register                           */
   __I  uint8_t   FEPROT;                       /**< 000E: Non-volatile EERAM Protection Register                       */
   __I  uint8_t   FDPROT;                       /**< 000F: Non-volatile D-Flash Protection Register                     */
} NV_Type;


/** @brief Register Masks for NV */

/* -------------------------------------------------------------------------------- */
/* -----------     'NV' Position & Mask macros                          ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup NV_Register_Masks_GROUP NV Register Masks */
/** @{ */

/** @name BACKKEY - Backdoor Comparison Key %s */ /** @{ */
#define NV_BACKKEY_KEY_MASK                      (0xFFU)                                             /**< NV_BACKKEY.KEY Mask                     */
#define NV_BACKKEY_KEY_SHIFT                     (0U)                                                /**< NV_BACKKEY.KEY Position                 */
#define NV_BACKKEY_KEY(x)                        (((uint8_t)(((uint8_t)(x))<<NV_BACKKEY_KEY_SHIFT))&NV_BACKKEY_KEY_MASK) /**< NV_BACKKEY.KEY Field                    */
/** @} */

/** @name FPROT - Non-volatile P-Flash Protection Register */ /** @{ */
#define NV_FPROT_PROT_MASK                       (0xFFU)                                             /**< NV_FPROT.PROT Mask                      */
#define NV_FPROT_PROT_SHIFT                      (0U)                                                /**< NV_FPROT.PROT Position                  */
#define NV_FPROT_PROT(x)                         (((uint8_t)(((uint8_t)(x))<<NV_FPROT_PROT_SHIFT))&NV_FPROT_PROT_MASK) /**< NV_FPROT.PROT Field                     */
/** @} */

/** @name FSEC - Non-volatile Flash Security Register */ /** @{ */
#define NV_FSEC_SEC_MASK                         (0x3U)                                              /**< NV_FSEC.SEC Mask                        */
#define NV_FSEC_SEC_SHIFT                        (0U)                                                /**< NV_FSEC.SEC Position                    */
#define NV_FSEC_SEC(x)                           (((uint8_t)(((uint8_t)(x))<<NV_FSEC_SEC_SHIFT))&NV_FSEC_SEC_MASK) /**< NV_FSEC.SEC Field                       */
#define NV_FSEC_FSLACC_MASK                      (0xCU)                                              /**< NV_FSEC.FSLACC Mask                     */
#define NV_FSEC_FSLACC_SHIFT                     (2U)                                                /**< NV_FSEC.FSLACC Position                 */
#define NV_FSEC_FSLACC(x)                        (((uint8_t)(((uint8_t)(x))<<NV_FSEC_FSLACC_SHIFT))&NV_FSEC_FSLACC_MASK) /**< NV_FSEC.FSLACC Field                    */
#define NV_FSEC_MEEN_MASK                        (0x30U)                                             /**< NV_FSEC.MEEN Mask                       */
#define NV_FSEC_MEEN_SHIFT                       (4U)                                                /**< NV_FSEC.MEEN Position                   */
#define NV_FSEC_MEEN(x)                          (((uint8_t)(((uint8_t)(x))<<NV_FSEC_MEEN_SHIFT))&NV_FSEC_MEEN_MASK) /**< NV_FSEC.MEEN Field                      */
#define NV_FSEC_KEYEN_MASK                       (0xC0U)                                             /**< NV_FSEC.KEYEN Mask                      */
#define NV_FSEC_KEYEN_SHIFT                      (6U)                                                /**< NV_FSEC.KEYEN Position                  */
#define NV_FSEC_KEYEN(x)                         (((uint8_t)(((uint8_t)(x))<<NV_FSEC_KEYEN_SHIFT))&NV_FSEC_KEYEN_MASK) /**< NV_FSEC.KEYEN Field                     */
/** @} */

/** @name FOPT - Non-volatile Flash Option Register */ /** @{ */
#define NV_FOPT_LPBOOT_MASK                      (0x1U)                                              /**< NV_FOPT.LPBOOT Mask                     */
#define NV_FOPT_LPBOOT_SHIFT                     (0U)                                                /**< NV_FOPT.LPBOOT Position                 */
#define NV_FOPT_LPBOOT(x)                        (((uint8_t)(((uint8_t)(x))<<NV_FOPT_LPBOOT_SHIFT))&NV_FOPT_LPBOOT_MASK) /**< NV_FOPT.LPBOOT Field                    */
#define NV_FOPT_NMI_DIS_MASK                     (0x4U)                                              /**< NV_FOPT.NMI_DIS Mask                    */
#define NV_FOPT_NMI_DIS_SHIFT                    (2U)                                                /**< NV_FOPT.NMI_DIS Position                */
#define NV_FOPT_NMI_DIS(x)                       (((uint8_t)(((uint8_t)(x))<<NV_FOPT_NMI_DIS_SHIFT))&NV_FOPT_NMI_DIS_MASK) /**< NV_FOPT.NMI_DIS Field                   */
#define NV_FOPT_FAST_INIT_MASK                   (0x20U)                                             /**< NV_FOPT.FAST_INIT Mask                  */
#define NV_FOPT_FAST_INIT_SHIFT                  (5U)                                                /**< NV_FOPT.FAST_INIT Position              */
#define NV_FOPT_FAST_INIT(x)                     (((uint8_t)(((uint8_t)(x))<<NV_FOPT_FAST_INIT_SHIFT))&NV_FOPT_FAST_INIT_MASK) /**< NV_FOPT.FAST_INIT Field                 */
/** @} */

/** @name FEPROT - Non-volatile EERAM Protection Register */ /** @{ */
#define NV_FEPROT_EPROT_MASK                     (0xFFU)                                             /**< NV_FEPROT.EPROT Mask                    */
#define NV_FEPROT_EPROT_SHIFT                    (0U)                                                /**< NV_FEPROT.EPROT Position                */
#define NV_FEPROT_EPROT(x)                       (((uint8_t)(((uint8_t)(x))<<NV_FEPROT_EPROT_SHIFT))&NV_FEPROT_EPROT_MASK) /**< NV_FEPROT.EPROT Field                   */
/** @} */

/** @name FDPROT - Non-volatile D-Flash Protection Register */ /** @{ */
#define NV_FDPROT_DPROT_MASK                     (0xFFU)                                             /**< NV_FDPROT.DPROT Mask                    */
#define NV_FDPROT_DPROT_SHIFT                    (0U)                                                /**< NV_FDPROT.DPROT Position                */
#define NV_FDPROT_DPROT(x)                       (((uint8_t)(((uint8_t)(x))<<NV_FDPROT_DPROT_SHIFT))&NV_FDPROT_DPROT_MASK) /**< NV_FDPROT.DPROT Field                   */
/** @} */

/** @} */ /* End group NV_Register_Masks_GROUP */


/* NV - Peripheral instance base addresses */
#define NV_BasePtr                     0x00000400UL //!< Peripheral base address
#define NV                             ((NV_Type *) NV_BasePtr) //!< Freescale base pointer
#define NV_BASE_PTR                    (NV) //!< Freescale style base pointer

/** @} */ /* End group NV_Peripheral_access_layer_GROUP */


/** @brief C Struct for PCC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PCC_Peripheral_access_layer_GROUP PCC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PCC (file:PCC_S32K144)               ================ */
/* ================================================================================ */

/**
 * @brief Peripheral Clock Controller
 */
/**
 * @struct PCC_Type
 * @brief  C Struct allowing access to PCC registers
 */
typedef struct PCC_Type {
   union {                                      /**< 0000: (size=0200)                                                  */
      __IO uint32_t  PCCn[128];                 /**< 0000: PCC Register                                                 */
      struct {                                  /**< 0000: (size=0200)                                                  */
              uint8_t   RESERVED_0[128];        /**< 0000: 0x80 bytes                                                   */
         __IO uint32_t  PCC_FTFC;               /**< 0080: PCC FTFC Register                                            */
         __IO uint32_t  PCC_DMAMUX0;            /**< 0084: PCC DMAMUX Register                                          */
              uint8_t   RESERVED_1[8];          /**< 0088: 0x8 bytes                                                    */
         union {                                /**< 0090: (size=0004)                                                  */
            __IO uint32_t  PCC_CAN0;            /**< 0090: PCC FLEXCAN0 Register                                        */
            __IO uint32_t  PCC_FLEXCAN0;        /**< 0090: PCC FLEXCAN0 Register                                        */
         };
         union {                                /**< 0094: (size=0004)                                                  */
            __IO uint32_t  PCC_CAN1;            /**< 0094: PCC FLEXCAN1 Register                                        */
            __IO uint32_t  PCC_FLEXCAN1;        /**< 0094: PCC FLEXCAN1 Register                                        */
         };
         __IO uint32_t  PCC_FTM3;               /**< 0098: PCC FTM3 Register                                            */
         __IO uint32_t  PCC_ADC1;               /**< 009C: PCC ADC1 Register                                            */
              uint8_t   RESERVED_2[12];         /**< 00A0: 0xC bytes                                                    */
         union {                                /**< 00AC: (size=0004)                                                  */
            __IO uint32_t  PCC_CAN2;            /**< 00AC: PCC FLEXCAN2 Register                                        */
            __IO uint32_t  PCC_FLEXCAN2;        /**< 00AC: PCC FLEXCAN2 Register                                        */
         };
         __IO uint32_t  PCC_LPSPI0;             /**< 00B0: PCC LPSPI0 Register                                          */
         __IO uint32_t  PCC_LPSPI1;             /**< 00B4: PCC LPSPI1 Register                                          */
         __IO uint32_t  PCC_LPSPI2;             /**< 00B8: PCC LPSPI2 Register                                          */
              uint8_t   RESERVED_3[8];          /**< 00BC: 0x8 bytes                                                    */
         __IO uint32_t  PCC_PDB1;               /**< 00C4: PCC PDB1 Register                                            */
         union {                                /**< 00C8: (size=0004)                                                  */
            __IO uint32_t  PCC_CRC;             /**< 00C8: PCC CRC Register                                             */
            __IO uint32_t  PCC_CRC0;            /**< 00C8: PCC CRC Register                                             */
         };
              uint8_t   RESERVED_4[12];         /**< 00CC: 0xC bytes                                                    */
         __IO uint32_t  PCC_PDB0;               /**< 00D8: PCC PDB0 Register                                            */
         union {                                /**< 00DC: (size=0004)                                                  */
            __IO uint32_t  PCC_LPIT;            /**< 00DC: PCC LPIT Register                                            */
            __IO uint32_t  PCC_LPIT0;           /**< 00DC: PCC LPIT Register                                            */
         };
         __IO uint32_t  PCC_FTM0;               /**< 00E0: PCC FTM0 Register                                            */
         __IO uint32_t  PCC_FTM1;               /**< 00E4: PCC FTM1 Register                                            */
         __IO uint32_t  PCC_FTM2;               /**< 00E8: PCC FTM2 Register                                            */
         __IO uint32_t  PCC_ADC0;               /**< 00EC: PCC ADC0 Register                                            */
              uint8_t   RESERVED_5[4];          /**< 00F0: 0x4 bytes                                                    */
         __IO uint32_t  PCC_RTC;                /**< 00F4: PCC RTC Register                                             */
              uint8_t   RESERVED_6[8];          /**< 00F8: 0x8 bytes                                                    */
         __IO uint32_t  PCC_LPTMR0;             /**< 0100: PCC LPTMR0 Register                                          */
              uint8_t   RESERVED_7[32];         /**< 0104: 0x20 bytes                                                   */
         __IO uint32_t  PCC_PORTA;              /**< 0124: PCC PORTA Register                                           */
         __IO uint32_t  PCC_PORTB;              /**< 0128: PCC PORTB Register                                           */
         __IO uint32_t  PCC_PORTC;              /**< 012C: PCC PORTC Register                                           */
         __IO uint32_t  PCC_PORTD;              /**< 0130: PCC PORTD Register                                           */
         __IO uint32_t  PCC_PORTE;              /**< 0134: PCC PORTE Register                                           */
              uint8_t   RESERVED_8[48];         /**< 0138: 0x30 bytes                                                   */
         __IO uint32_t  PCC_FLEXIO;             /**< 0168: PCC FLEXIO Register                                          */
              uint8_t   RESERVED_9[24];         /**< 016C: 0x18 bytes                                                   */
         __IO uint32_t  PCC_EWM;                /**< 0184: PCC EWM Register                                             */
              uint8_t   RESERVED_10[16];        /**< 0188: 0x10 bytes                                                   */
         __IO uint32_t  PCC_LPI2C0;             /**< 0198: PCC LPI2C0 Register                                          */
              uint8_t   RESERVED_11[12];        /**< 019C: 0xC bytes                                                    */
         __IO uint32_t  PCC_LPUART0;            /**< 01A8: PCC LPUART0 Register                                         */
         __IO uint32_t  PCC_LPUART1;            /**< 01AC: PCC LPUART1 Register                                         */
         __IO uint32_t  PCC_LPUART2;            /**< 01B0: PCC LPUART2 Register                                         */
              uint8_t   RESERVED_12[24];        /**< 01B4: 0x18 bytes                                                   */
         __IO uint32_t  PCC_CMP0;               /**< 01CC: PCC CMP0 Register                                            */
              uint8_t   RESERVED_13[48];        /**< 01D0: 0x30 bytes                                                   */
      };
   };
} PCC_Type;


/** @brief Register Masks for PCC */

/* -------------------------------------------------------------------------------- */
/* -----------     'PCC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup PCC_Register_Masks_GROUP PCC Register Masks */
/** @{ */

/** @name PCCn - PCC Register */ /** @{ */
#define PCC_PCCn_PCD_MASK                        (0x7U)                                              /**< PCC_PCCn.PCD Mask                       */
#define PCC_PCCn_PCD_SHIFT                       (0U)                                                /**< PCC_PCCn.PCD Position                   */
#define PCC_PCCn_PCD(x)                          (((uint32_t)(((uint32_t)(x))<<PCC_PCCn_PCD_SHIFT))&PCC_PCCn_PCD_MASK) /**< PCC_PCCn.PCD Field                      */
#define PCC_PCCn_FRAC_MASK                       (0x8U)                                              /**< PCC_PCCn.FRAC Mask                      */
#define PCC_PCCn_FRAC_SHIFT                      (3U)                                                /**< PCC_PCCn.FRAC Position                  */
#define PCC_PCCn_FRAC(x)                         (((uint32_t)(((uint32_t)(x))<<PCC_PCCn_FRAC_SHIFT))&PCC_PCCn_FRAC_MASK) /**< PCC_PCCn.FRAC Field                     */
#define PCC_PCCn_PCS_MASK                        (0x7000000U)                                        /**< PCC_PCCn.PCS Mask                       */
#define PCC_PCCn_PCS_SHIFT                       (24U)                                               /**< PCC_PCCn.PCS Position                   */
#define PCC_PCCn_PCS(x)                          (((uint32_t)(((uint32_t)(x))<<PCC_PCCn_PCS_SHIFT))&PCC_PCCn_PCS_MASK) /**< PCC_PCCn.PCS Field                      */
#define PCC_PCCn_CGC_MASK                        (0x40000000U)                                       /**< PCC_PCCn.CGC Mask                       */
#define PCC_PCCn_CGC_SHIFT                       (30U)                                               /**< PCC_PCCn.CGC Position                   */
#define PCC_PCCn_CGC(x)                          (((uint32_t)(((uint32_t)(x))<<PCC_PCCn_CGC_SHIFT))&PCC_PCCn_CGC_MASK) /**< PCC_PCCn.CGC Field                      */
#define PCC_PCCn_PR_MASK                         (0x80000000U)                                       /**< PCC_PCCn.PR Mask                        */
#define PCC_PCCn_PR_SHIFT                        (31U)                                               /**< PCC_PCCn.PR Position                    */
#define PCC_PCCn_PR(x)                           (((uint32_t)(((uint32_t)(x))<<PCC_PCCn_PR_SHIFT))&PCC_PCCn_PR_MASK) /**< PCC_PCCn.PR Field                       */
/** @} */

/** @name PCC_FTFC - PCC FTFC Register */ /** @{ */
#define PCC_PCC_FTFC_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_FTFC.CGC Mask                   */
#define PCC_PCC_FTFC_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_FTFC.CGC Position               */
#define PCC_PCC_FTFC_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTFC_CGC_SHIFT))&PCC_PCC_FTFC_CGC_MASK) /**< PCC_PCC_FTFC.CGC Field                  */
#define PCC_PCC_FTFC_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_FTFC.PR Mask                    */
#define PCC_PCC_FTFC_PR_SHIFT                    (31U)                                               /**< PCC_PCC_FTFC.PR Position                */
#define PCC_PCC_FTFC_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTFC_PR_SHIFT))&PCC_PCC_FTFC_PR_MASK) /**< PCC_PCC_FTFC.PR Field                   */
/** @} */

/** @name PCC_DMAMUX0 - PCC DMAMUX Register */ /** @{ */
#define PCC_PCC_DMAMUX0_CGC_MASK                 (0x40000000U)                                       /**< PCC_PCC_DMAMUX0.CGC Mask                */
#define PCC_PCC_DMAMUX0_CGC_SHIFT                (30U)                                               /**< PCC_PCC_DMAMUX0.CGC Position            */
#define PCC_PCC_DMAMUX0_CGC(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_DMAMUX0_CGC_SHIFT))&PCC_PCC_DMAMUX0_CGC_MASK) /**< PCC_PCC_DMAMUX0.CGC Field               */
#define PCC_PCC_DMAMUX0_PR_MASK                  (0x80000000U)                                       /**< PCC_PCC_DMAMUX0.PR Mask                 */
#define PCC_PCC_DMAMUX0_PR_SHIFT                 (31U)                                               /**< PCC_PCC_DMAMUX0.PR Position             */
#define PCC_PCC_DMAMUX0_PR(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_DMAMUX0_PR_SHIFT))&PCC_PCC_DMAMUX0_PR_MASK) /**< PCC_PCC_DMAMUX0.PR Field                */
/** @} */

/** @name PCC_CAN0 - PCC FLEXCAN0 Register */ /** @{ */
#define PCC_PCC_CAN0_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_CAN0.CGC Mask                   */
#define PCC_PCC_CAN0_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_CAN0.CGC Position               */
#define PCC_PCC_CAN0_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CAN0_CGC_SHIFT))&PCC_PCC_CAN0_CGC_MASK) /**< PCC_PCC_CAN0.CGC Field                  */
#define PCC_PCC_CAN0_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_CAN0.PR Mask                    */
#define PCC_PCC_CAN0_PR_SHIFT                    (31U)                                               /**< PCC_PCC_CAN0.PR Position                */
#define PCC_PCC_CAN0_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CAN0_PR_SHIFT))&PCC_PCC_CAN0_PR_MASK) /**< PCC_PCC_CAN0.PR Field                   */
/** @} */

/** @name PCC_FLEXCAN0 - PCC FLEXCAN0 Register */ /** @{ */
#define PCC_PCC_FLEXCAN0_CGC_MASK                (0x40000000U)                                       /**< PCC_PCC_FLEXCAN0.CGC Mask               */
#define PCC_PCC_FLEXCAN0_CGC_SHIFT               (30U)                                               /**< PCC_PCC_FLEXCAN0.CGC Position           */
#define PCC_PCC_FLEXCAN0_CGC(x)                  (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FLEXCAN0_CGC_SHIFT))&PCC_PCC_FLEXCAN0_CGC_MASK) /**< PCC_PCC_FLEXCAN0.CGC Field              */
#define PCC_PCC_FLEXCAN0_PR_MASK                 (0x80000000U)                                       /**< PCC_PCC_FLEXCAN0.PR Mask                */
#define PCC_PCC_FLEXCAN0_PR_SHIFT                (31U)                                               /**< PCC_PCC_FLEXCAN0.PR Position            */
#define PCC_PCC_FLEXCAN0_PR(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FLEXCAN0_PR_SHIFT))&PCC_PCC_FLEXCAN0_PR_MASK) /**< PCC_PCC_FLEXCAN0.PR Field               */
/** @} */

/** @name PCC_CAN1 - PCC FLEXCAN1 Register */ /** @{ */
#define PCC_PCC_CAN1_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_CAN1.CGC Mask                   */
#define PCC_PCC_CAN1_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_CAN1.CGC Position               */
#define PCC_PCC_CAN1_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CAN1_CGC_SHIFT))&PCC_PCC_CAN1_CGC_MASK) /**< PCC_PCC_CAN1.CGC Field                  */
#define PCC_PCC_CAN1_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_CAN1.PR Mask                    */
#define PCC_PCC_CAN1_PR_SHIFT                    (31U)                                               /**< PCC_PCC_CAN1.PR Position                */
#define PCC_PCC_CAN1_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CAN1_PR_SHIFT))&PCC_PCC_CAN1_PR_MASK) /**< PCC_PCC_CAN1.PR Field                   */
/** @} */

/** @name PCC_FLEXCAN1 - PCC FLEXCAN1 Register */ /** @{ */
#define PCC_PCC_FLEXCAN1_CGC_MASK                (0x40000000U)                                       /**< PCC_PCC_FLEXCAN1.CGC Mask               */
#define PCC_PCC_FLEXCAN1_CGC_SHIFT               (30U)                                               /**< PCC_PCC_FLEXCAN1.CGC Position           */
#define PCC_PCC_FLEXCAN1_CGC(x)                  (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FLEXCAN1_CGC_SHIFT))&PCC_PCC_FLEXCAN1_CGC_MASK) /**< PCC_PCC_FLEXCAN1.CGC Field              */
#define PCC_PCC_FLEXCAN1_PR_MASK                 (0x80000000U)                                       /**< PCC_PCC_FLEXCAN1.PR Mask                */
#define PCC_PCC_FLEXCAN1_PR_SHIFT                (31U)                                               /**< PCC_PCC_FLEXCAN1.PR Position            */
#define PCC_PCC_FLEXCAN1_PR(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FLEXCAN1_PR_SHIFT))&PCC_PCC_FLEXCAN1_PR_MASK) /**< PCC_PCC_FLEXCAN1.PR Field               */
/** @} */

/** @name PCC_FTM3 - PCC FTM3 Register */ /** @{ */
#define PCC_PCC_FTM3_PCS_MASK                    (0x7000000U)                                        /**< PCC_PCC_FTM3.PCS Mask                   */
#define PCC_PCC_FTM3_PCS_SHIFT                   (24U)                                               /**< PCC_PCC_FTM3.PCS Position               */
#define PCC_PCC_FTM3_PCS(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM3_PCS_SHIFT))&PCC_PCC_FTM3_PCS_MASK) /**< PCC_PCC_FTM3.PCS Field                  */
#define PCC_PCC_FTM3_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_FTM3.CGC Mask                   */
#define PCC_PCC_FTM3_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_FTM3.CGC Position               */
#define PCC_PCC_FTM3_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM3_CGC_SHIFT))&PCC_PCC_FTM3_CGC_MASK) /**< PCC_PCC_FTM3.CGC Field                  */
#define PCC_PCC_FTM3_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_FTM3.PR Mask                    */
#define PCC_PCC_FTM3_PR_SHIFT                    (31U)                                               /**< PCC_PCC_FTM3.PR Position                */
#define PCC_PCC_FTM3_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM3_PR_SHIFT))&PCC_PCC_FTM3_PR_MASK) /**< PCC_PCC_FTM3.PR Field                   */
/** @} */

/** @name PCC_ADC1 - PCC ADC1 Register */ /** @{ */
#define PCC_PCC_ADC1_PCS_MASK                    (0x7000000U)                                        /**< PCC_PCC_ADC1.PCS Mask                   */
#define PCC_PCC_ADC1_PCS_SHIFT                   (24U)                                               /**< PCC_PCC_ADC1.PCS Position               */
#define PCC_PCC_ADC1_PCS(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_ADC1_PCS_SHIFT))&PCC_PCC_ADC1_PCS_MASK) /**< PCC_PCC_ADC1.PCS Field                  */
#define PCC_PCC_ADC1_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_ADC1.CGC Mask                   */
#define PCC_PCC_ADC1_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_ADC1.CGC Position               */
#define PCC_PCC_ADC1_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_ADC1_CGC_SHIFT))&PCC_PCC_ADC1_CGC_MASK) /**< PCC_PCC_ADC1.CGC Field                  */
#define PCC_PCC_ADC1_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_ADC1.PR Mask                    */
#define PCC_PCC_ADC1_PR_SHIFT                    (31U)                                               /**< PCC_PCC_ADC1.PR Position                */
#define PCC_PCC_ADC1_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_ADC1_PR_SHIFT))&PCC_PCC_ADC1_PR_MASK) /**< PCC_PCC_ADC1.PR Field                   */
/** @} */

/** @name PCC_CAN2 - PCC FLEXCAN2 Register */ /** @{ */
#define PCC_PCC_CAN2_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_CAN2.CGC Mask                   */
#define PCC_PCC_CAN2_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_CAN2.CGC Position               */
#define PCC_PCC_CAN2_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CAN2_CGC_SHIFT))&PCC_PCC_CAN2_CGC_MASK) /**< PCC_PCC_CAN2.CGC Field                  */
#define PCC_PCC_CAN2_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_CAN2.PR Mask                    */
#define PCC_PCC_CAN2_PR_SHIFT                    (31U)                                               /**< PCC_PCC_CAN2.PR Position                */
#define PCC_PCC_CAN2_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CAN2_PR_SHIFT))&PCC_PCC_CAN2_PR_MASK) /**< PCC_PCC_CAN2.PR Field                   */
/** @} */

/** @name PCC_FLEXCAN2 - PCC FLEXCAN2 Register */ /** @{ */
#define PCC_PCC_FLEXCAN2_CGC_MASK                (0x40000000U)                                       /**< PCC_PCC_FLEXCAN2.CGC Mask               */
#define PCC_PCC_FLEXCAN2_CGC_SHIFT               (30U)                                               /**< PCC_PCC_FLEXCAN2.CGC Position           */
#define PCC_PCC_FLEXCAN2_CGC(x)                  (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FLEXCAN2_CGC_SHIFT))&PCC_PCC_FLEXCAN2_CGC_MASK) /**< PCC_PCC_FLEXCAN2.CGC Field              */
#define PCC_PCC_FLEXCAN2_PR_MASK                 (0x80000000U)                                       /**< PCC_PCC_FLEXCAN2.PR Mask                */
#define PCC_PCC_FLEXCAN2_PR_SHIFT                (31U)                                               /**< PCC_PCC_FLEXCAN2.PR Position            */
#define PCC_PCC_FLEXCAN2_PR(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FLEXCAN2_PR_SHIFT))&PCC_PCC_FLEXCAN2_PR_MASK) /**< PCC_PCC_FLEXCAN2.PR Field               */
/** @} */

/** @name PCC_LPSPI0 - PCC LPSPI0 Register */ /** @{ */
#define PCC_PCC_LPSPI0_PCS_MASK                  (0x7000000U)                                        /**< PCC_PCC_LPSPI0.PCS Mask                 */
#define PCC_PCC_LPSPI0_PCS_SHIFT                 (24U)                                               /**< PCC_PCC_LPSPI0.PCS Position             */
#define PCC_PCC_LPSPI0_PCS(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPSPI0_PCS_SHIFT))&PCC_PCC_LPSPI0_PCS_MASK) /**< PCC_PCC_LPSPI0.PCS Field                */
#define PCC_PCC_LPSPI0_CGC_MASK                  (0x40000000U)                                       /**< PCC_PCC_LPSPI0.CGC Mask                 */
#define PCC_PCC_LPSPI0_CGC_SHIFT                 (30U)                                               /**< PCC_PCC_LPSPI0.CGC Position             */
#define PCC_PCC_LPSPI0_CGC(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPSPI0_CGC_SHIFT))&PCC_PCC_LPSPI0_CGC_MASK) /**< PCC_PCC_LPSPI0.CGC Field                */
#define PCC_PCC_LPSPI0_PR_MASK                   (0x80000000U)                                       /**< PCC_PCC_LPSPI0.PR Mask                  */
#define PCC_PCC_LPSPI0_PR_SHIFT                  (31U)                                               /**< PCC_PCC_LPSPI0.PR Position              */
#define PCC_PCC_LPSPI0_PR(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPSPI0_PR_SHIFT))&PCC_PCC_LPSPI0_PR_MASK) /**< PCC_PCC_LPSPI0.PR Field                 */
/** @} */

/** @name PCC_LPSPI1 - PCC LPSPI1 Register */ /** @{ */
#define PCC_PCC_LPSPI1_PCS_MASK                  (0x7000000U)                                        /**< PCC_PCC_LPSPI1.PCS Mask                 */
#define PCC_PCC_LPSPI1_PCS_SHIFT                 (24U)                                               /**< PCC_PCC_LPSPI1.PCS Position             */
#define PCC_PCC_LPSPI1_PCS(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPSPI1_PCS_SHIFT))&PCC_PCC_LPSPI1_PCS_MASK) /**< PCC_PCC_LPSPI1.PCS Field                */
#define PCC_PCC_LPSPI1_CGC_MASK                  (0x40000000U)                                       /**< PCC_PCC_LPSPI1.CGC Mask                 */
#define PCC_PCC_LPSPI1_CGC_SHIFT                 (30U)                                               /**< PCC_PCC_LPSPI1.CGC Position             */
#define PCC_PCC_LPSPI1_CGC(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPSPI1_CGC_SHIFT))&PCC_PCC_LPSPI1_CGC_MASK) /**< PCC_PCC_LPSPI1.CGC Field                */
#define PCC_PCC_LPSPI1_PR_MASK                   (0x80000000U)                                       /**< PCC_PCC_LPSPI1.PR Mask                  */
#define PCC_PCC_LPSPI1_PR_SHIFT                  (31U)                                               /**< PCC_PCC_LPSPI1.PR Position              */
#define PCC_PCC_LPSPI1_PR(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPSPI1_PR_SHIFT))&PCC_PCC_LPSPI1_PR_MASK) /**< PCC_PCC_LPSPI1.PR Field                 */
/** @} */

/** @name PCC_LPSPI2 - PCC LPSPI2 Register */ /** @{ */
#define PCC_PCC_LPSPI2_PCS_MASK                  (0x7000000U)                                        /**< PCC_PCC_LPSPI2.PCS Mask                 */
#define PCC_PCC_LPSPI2_PCS_SHIFT                 (24U)                                               /**< PCC_PCC_LPSPI2.PCS Position             */
#define PCC_PCC_LPSPI2_PCS(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPSPI2_PCS_SHIFT))&PCC_PCC_LPSPI2_PCS_MASK) /**< PCC_PCC_LPSPI2.PCS Field                */
#define PCC_PCC_LPSPI2_CGC_MASK                  (0x40000000U)                                       /**< PCC_PCC_LPSPI2.CGC Mask                 */
#define PCC_PCC_LPSPI2_CGC_SHIFT                 (30U)                                               /**< PCC_PCC_LPSPI2.CGC Position             */
#define PCC_PCC_LPSPI2_CGC(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPSPI2_CGC_SHIFT))&PCC_PCC_LPSPI2_CGC_MASK) /**< PCC_PCC_LPSPI2.CGC Field                */
#define PCC_PCC_LPSPI2_PR_MASK                   (0x80000000U)                                       /**< PCC_PCC_LPSPI2.PR Mask                  */
#define PCC_PCC_LPSPI2_PR_SHIFT                  (31U)                                               /**< PCC_PCC_LPSPI2.PR Position              */
#define PCC_PCC_LPSPI2_PR(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPSPI2_PR_SHIFT))&PCC_PCC_LPSPI2_PR_MASK) /**< PCC_PCC_LPSPI2.PR Field                 */
/** @} */

/** @name PCC_PDB1 - PCC PDB1 Register */ /** @{ */
#define PCC_PCC_PDB1_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_PDB1.CGC Mask                   */
#define PCC_PCC_PDB1_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_PDB1.CGC Position               */
#define PCC_PCC_PDB1_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PDB1_CGC_SHIFT))&PCC_PCC_PDB1_CGC_MASK) /**< PCC_PCC_PDB1.CGC Field                  */
#define PCC_PCC_PDB1_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_PDB1.PR Mask                    */
#define PCC_PCC_PDB1_PR_SHIFT                    (31U)                                               /**< PCC_PCC_PDB1.PR Position                */
#define PCC_PCC_PDB1_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PDB1_PR_SHIFT))&PCC_PCC_PDB1_PR_MASK) /**< PCC_PCC_PDB1.PR Field                   */
/** @} */

/** @name PCC_CRC - PCC CRC Register */ /** @{ */
#define PCC_PCC_CRC_CGC_MASK                     (0x40000000U)                                       /**< PCC_PCC_CRC.CGC Mask                    */
#define PCC_PCC_CRC_CGC_SHIFT                    (30U)                                               /**< PCC_PCC_CRC.CGC Position                */
#define PCC_PCC_CRC_CGC(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CRC_CGC_SHIFT))&PCC_PCC_CRC_CGC_MASK) /**< PCC_PCC_CRC.CGC Field                   */
#define PCC_PCC_CRC_PR_MASK                      (0x80000000U)                                       /**< PCC_PCC_CRC.PR Mask                     */
#define PCC_PCC_CRC_PR_SHIFT                     (31U)                                               /**< PCC_PCC_CRC.PR Position                 */
#define PCC_PCC_CRC_PR(x)                        (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CRC_PR_SHIFT))&PCC_PCC_CRC_PR_MASK) /**< PCC_PCC_CRC.PR Field                    */
/** @} */

/** @name PCC_CRC0 - PCC CRC Register */ /** @{ */
#define PCC_PCC_CRC0_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_CRC0.CGC Mask                   */
#define PCC_PCC_CRC0_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_CRC0.CGC Position               */
#define PCC_PCC_CRC0_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CRC0_CGC_SHIFT))&PCC_PCC_CRC0_CGC_MASK) /**< PCC_PCC_CRC0.CGC Field                  */
#define PCC_PCC_CRC0_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_CRC0.PR Mask                    */
#define PCC_PCC_CRC0_PR_SHIFT                    (31U)                                               /**< PCC_PCC_CRC0.PR Position                */
#define PCC_PCC_CRC0_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CRC0_PR_SHIFT))&PCC_PCC_CRC0_PR_MASK) /**< PCC_PCC_CRC0.PR Field                   */
/** @} */

/** @name PCC_PDB0 - PCC PDB0 Register */ /** @{ */
#define PCC_PCC_PDB0_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_PDB0.CGC Mask                   */
#define PCC_PCC_PDB0_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_PDB0.CGC Position               */
#define PCC_PCC_PDB0_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PDB0_CGC_SHIFT))&PCC_PCC_PDB0_CGC_MASK) /**< PCC_PCC_PDB0.CGC Field                  */
#define PCC_PCC_PDB0_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_PDB0.PR Mask                    */
#define PCC_PCC_PDB0_PR_SHIFT                    (31U)                                               /**< PCC_PCC_PDB0.PR Position                */
#define PCC_PCC_PDB0_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PDB0_PR_SHIFT))&PCC_PCC_PDB0_PR_MASK) /**< PCC_PCC_PDB0.PR Field                   */
/** @} */

/** @name PCC_LPIT - PCC LPIT Register */ /** @{ */
#define PCC_PCC_LPIT_PCS_MASK                    (0x7000000U)                                        /**< PCC_PCC_LPIT.PCS Mask                   */
#define PCC_PCC_LPIT_PCS_SHIFT                   (24U)                                               /**< PCC_PCC_LPIT.PCS Position               */
#define PCC_PCC_LPIT_PCS(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPIT_PCS_SHIFT))&PCC_PCC_LPIT_PCS_MASK) /**< PCC_PCC_LPIT.PCS Field                  */
#define PCC_PCC_LPIT_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_LPIT.CGC Mask                   */
#define PCC_PCC_LPIT_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_LPIT.CGC Position               */
#define PCC_PCC_LPIT_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPIT_CGC_SHIFT))&PCC_PCC_LPIT_CGC_MASK) /**< PCC_PCC_LPIT.CGC Field                  */
#define PCC_PCC_LPIT_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_LPIT.PR Mask                    */
#define PCC_PCC_LPIT_PR_SHIFT                    (31U)                                               /**< PCC_PCC_LPIT.PR Position                */
#define PCC_PCC_LPIT_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPIT_PR_SHIFT))&PCC_PCC_LPIT_PR_MASK) /**< PCC_PCC_LPIT.PR Field                   */
/** @} */

/** @name PCC_LPIT0 - PCC LPIT Register */ /** @{ */
#define PCC_PCC_LPIT0_PCS_MASK                   (0x7000000U)                                        /**< PCC_PCC_LPIT0.PCS Mask                  */
#define PCC_PCC_LPIT0_PCS_SHIFT                  (24U)                                               /**< PCC_PCC_LPIT0.PCS Position              */
#define PCC_PCC_LPIT0_PCS(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPIT0_PCS_SHIFT))&PCC_PCC_LPIT0_PCS_MASK) /**< PCC_PCC_LPIT0.PCS Field                 */
#define PCC_PCC_LPIT0_CGC_MASK                   (0x40000000U)                                       /**< PCC_PCC_LPIT0.CGC Mask                  */
#define PCC_PCC_LPIT0_CGC_SHIFT                  (30U)                                               /**< PCC_PCC_LPIT0.CGC Position              */
#define PCC_PCC_LPIT0_CGC(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPIT0_CGC_SHIFT))&PCC_PCC_LPIT0_CGC_MASK) /**< PCC_PCC_LPIT0.CGC Field                 */
#define PCC_PCC_LPIT0_PR_MASK                    (0x80000000U)                                       /**< PCC_PCC_LPIT0.PR Mask                   */
#define PCC_PCC_LPIT0_PR_SHIFT                   (31U)                                               /**< PCC_PCC_LPIT0.PR Position               */
#define PCC_PCC_LPIT0_PR(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPIT0_PR_SHIFT))&PCC_PCC_LPIT0_PR_MASK) /**< PCC_PCC_LPIT0.PR Field                  */
/** @} */

/** @name PCC_FTM0 - PCC FTM0 Register */ /** @{ */
#define PCC_PCC_FTM0_PCS_MASK                    (0x7000000U)                                        /**< PCC_PCC_FTM0.PCS Mask                   */
#define PCC_PCC_FTM0_PCS_SHIFT                   (24U)                                               /**< PCC_PCC_FTM0.PCS Position               */
#define PCC_PCC_FTM0_PCS(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM0_PCS_SHIFT))&PCC_PCC_FTM0_PCS_MASK) /**< PCC_PCC_FTM0.PCS Field                  */
#define PCC_PCC_FTM0_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_FTM0.CGC Mask                   */
#define PCC_PCC_FTM0_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_FTM0.CGC Position               */
#define PCC_PCC_FTM0_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM0_CGC_SHIFT))&PCC_PCC_FTM0_CGC_MASK) /**< PCC_PCC_FTM0.CGC Field                  */
#define PCC_PCC_FTM0_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_FTM0.PR Mask                    */
#define PCC_PCC_FTM0_PR_SHIFT                    (31U)                                               /**< PCC_PCC_FTM0.PR Position                */
#define PCC_PCC_FTM0_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM0_PR_SHIFT))&PCC_PCC_FTM0_PR_MASK) /**< PCC_PCC_FTM0.PR Field                   */
/** @} */

/** @name PCC_FTM1 - PCC FTM1 Register */ /** @{ */
#define PCC_PCC_FTM1_PCS_MASK                    (0x7000000U)                                        /**< PCC_PCC_FTM1.PCS Mask                   */
#define PCC_PCC_FTM1_PCS_SHIFT                   (24U)                                               /**< PCC_PCC_FTM1.PCS Position               */
#define PCC_PCC_FTM1_PCS(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM1_PCS_SHIFT))&PCC_PCC_FTM1_PCS_MASK) /**< PCC_PCC_FTM1.PCS Field                  */
#define PCC_PCC_FTM1_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_FTM1.CGC Mask                   */
#define PCC_PCC_FTM1_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_FTM1.CGC Position               */
#define PCC_PCC_FTM1_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM1_CGC_SHIFT))&PCC_PCC_FTM1_CGC_MASK) /**< PCC_PCC_FTM1.CGC Field                  */
#define PCC_PCC_FTM1_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_FTM1.PR Mask                    */
#define PCC_PCC_FTM1_PR_SHIFT                    (31U)                                               /**< PCC_PCC_FTM1.PR Position                */
#define PCC_PCC_FTM1_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM1_PR_SHIFT))&PCC_PCC_FTM1_PR_MASK) /**< PCC_PCC_FTM1.PR Field                   */
/** @} */

/** @name PCC_FTM2 - PCC FTM2 Register */ /** @{ */
#define PCC_PCC_FTM2_PCS_MASK                    (0x7000000U)                                        /**< PCC_PCC_FTM2.PCS Mask                   */
#define PCC_PCC_FTM2_PCS_SHIFT                   (24U)                                               /**< PCC_PCC_FTM2.PCS Position               */
#define PCC_PCC_FTM2_PCS(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM2_PCS_SHIFT))&PCC_PCC_FTM2_PCS_MASK) /**< PCC_PCC_FTM2.PCS Field                  */
#define PCC_PCC_FTM2_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_FTM2.CGC Mask                   */
#define PCC_PCC_FTM2_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_FTM2.CGC Position               */
#define PCC_PCC_FTM2_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM2_CGC_SHIFT))&PCC_PCC_FTM2_CGC_MASK) /**< PCC_PCC_FTM2.CGC Field                  */
#define PCC_PCC_FTM2_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_FTM2.PR Mask                    */
#define PCC_PCC_FTM2_PR_SHIFT                    (31U)                                               /**< PCC_PCC_FTM2.PR Position                */
#define PCC_PCC_FTM2_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FTM2_PR_SHIFT))&PCC_PCC_FTM2_PR_MASK) /**< PCC_PCC_FTM2.PR Field                   */
/** @} */

/** @name PCC_ADC0 - PCC ADC0 Register */ /** @{ */
#define PCC_PCC_ADC0_PCS_MASK                    (0x7000000U)                                        /**< PCC_PCC_ADC0.PCS Mask                   */
#define PCC_PCC_ADC0_PCS_SHIFT                   (24U)                                               /**< PCC_PCC_ADC0.PCS Position               */
#define PCC_PCC_ADC0_PCS(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_ADC0_PCS_SHIFT))&PCC_PCC_ADC0_PCS_MASK) /**< PCC_PCC_ADC0.PCS Field                  */
#define PCC_PCC_ADC0_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_ADC0.CGC Mask                   */
#define PCC_PCC_ADC0_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_ADC0.CGC Position               */
#define PCC_PCC_ADC0_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_ADC0_CGC_SHIFT))&PCC_PCC_ADC0_CGC_MASK) /**< PCC_PCC_ADC0.CGC Field                  */
#define PCC_PCC_ADC0_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_ADC0.PR Mask                    */
#define PCC_PCC_ADC0_PR_SHIFT                    (31U)                                               /**< PCC_PCC_ADC0.PR Position                */
#define PCC_PCC_ADC0_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_ADC0_PR_SHIFT))&PCC_PCC_ADC0_PR_MASK) /**< PCC_PCC_ADC0.PR Field                   */
/** @} */

/** @name PCC_RTC - PCC RTC Register */ /** @{ */
#define PCC_PCC_RTC_CGC_MASK                     (0x40000000U)                                       /**< PCC_PCC_RTC.CGC Mask                    */
#define PCC_PCC_RTC_CGC_SHIFT                    (30U)                                               /**< PCC_PCC_RTC.CGC Position                */
#define PCC_PCC_RTC_CGC(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_RTC_CGC_SHIFT))&PCC_PCC_RTC_CGC_MASK) /**< PCC_PCC_RTC.CGC Field                   */
#define PCC_PCC_RTC_PR_MASK                      (0x80000000U)                                       /**< PCC_PCC_RTC.PR Mask                     */
#define PCC_PCC_RTC_PR_SHIFT                     (31U)                                               /**< PCC_PCC_RTC.PR Position                 */
#define PCC_PCC_RTC_PR(x)                        (((uint32_t)(((uint32_t)(x))<<PCC_PCC_RTC_PR_SHIFT))&PCC_PCC_RTC_PR_MASK) /**< PCC_PCC_RTC.PR Field                    */
/** @} */

/** @name PCC_LPTMR0 - PCC LPTMR0 Register */ /** @{ */
#define PCC_PCC_LPTMR0_PCD_MASK                  (0x7U)                                              /**< PCC_PCC_LPTMR0.PCD Mask                 */
#define PCC_PCC_LPTMR0_PCD_SHIFT                 (0U)                                                /**< PCC_PCC_LPTMR0.PCD Position             */
#define PCC_PCC_LPTMR0_PCD(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPTMR0_PCD_SHIFT))&PCC_PCC_LPTMR0_PCD_MASK) /**< PCC_PCC_LPTMR0.PCD Field                */
#define PCC_PCC_LPTMR0_FRAC_MASK                 (0x8U)                                              /**< PCC_PCC_LPTMR0.FRAC Mask                */
#define PCC_PCC_LPTMR0_FRAC_SHIFT                (3U)                                                /**< PCC_PCC_LPTMR0.FRAC Position            */
#define PCC_PCC_LPTMR0_FRAC(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPTMR0_FRAC_SHIFT))&PCC_PCC_LPTMR0_FRAC_MASK) /**< PCC_PCC_LPTMR0.FRAC Field               */
#define PCC_PCC_LPTMR0_PCS_MASK                  (0x7000000U)                                        /**< PCC_PCC_LPTMR0.PCS Mask                 */
#define PCC_PCC_LPTMR0_PCS_SHIFT                 (24U)                                               /**< PCC_PCC_LPTMR0.PCS Position             */
#define PCC_PCC_LPTMR0_PCS(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPTMR0_PCS_SHIFT))&PCC_PCC_LPTMR0_PCS_MASK) /**< PCC_PCC_LPTMR0.PCS Field                */
#define PCC_PCC_LPTMR0_CGC_MASK                  (0x40000000U)                                       /**< PCC_PCC_LPTMR0.CGC Mask                 */
#define PCC_PCC_LPTMR0_CGC_SHIFT                 (30U)                                               /**< PCC_PCC_LPTMR0.CGC Position             */
#define PCC_PCC_LPTMR0_CGC(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPTMR0_CGC_SHIFT))&PCC_PCC_LPTMR0_CGC_MASK) /**< PCC_PCC_LPTMR0.CGC Field                */
#define PCC_PCC_LPTMR0_PR_MASK                   (0x80000000U)                                       /**< PCC_PCC_LPTMR0.PR Mask                  */
#define PCC_PCC_LPTMR0_PR_SHIFT                  (31U)                                               /**< PCC_PCC_LPTMR0.PR Position              */
#define PCC_PCC_LPTMR0_PR(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPTMR0_PR_SHIFT))&PCC_PCC_LPTMR0_PR_MASK) /**< PCC_PCC_LPTMR0.PR Field                 */
/** @} */

/** @name PCC_PORTA - PCC PORTA Register */ /** @{ */
#define PCC_PCC_PORTA_CGC_MASK                   (0x40000000U)                                       /**< PCC_PCC_PORTA.CGC Mask                  */
#define PCC_PCC_PORTA_CGC_SHIFT                  (30U)                                               /**< PCC_PCC_PORTA.CGC Position              */
#define PCC_PCC_PORTA_CGC(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PORTA_CGC_SHIFT))&PCC_PCC_PORTA_CGC_MASK) /**< PCC_PCC_PORTA.CGC Field                 */
#define PCC_PCC_PORTA_PR_MASK                    (0x80000000U)                                       /**< PCC_PCC_PORTA.PR Mask                   */
#define PCC_PCC_PORTA_PR_SHIFT                   (31U)                                               /**< PCC_PCC_PORTA.PR Position               */
#define PCC_PCC_PORTA_PR(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PORTA_PR_SHIFT))&PCC_PCC_PORTA_PR_MASK) /**< PCC_PCC_PORTA.PR Field                  */
/** @} */

/** @name PCC_PORTB - PCC PORTB Register */ /** @{ */
#define PCC_PCC_PORTB_CGC_MASK                   (0x40000000U)                                       /**< PCC_PCC_PORTB.CGC Mask                  */
#define PCC_PCC_PORTB_CGC_SHIFT                  (30U)                                               /**< PCC_PCC_PORTB.CGC Position              */
#define PCC_PCC_PORTB_CGC(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PORTB_CGC_SHIFT))&PCC_PCC_PORTB_CGC_MASK) /**< PCC_PCC_PORTB.CGC Field                 */
#define PCC_PCC_PORTB_PR_MASK                    (0x80000000U)                                       /**< PCC_PCC_PORTB.PR Mask                   */
#define PCC_PCC_PORTB_PR_SHIFT                   (31U)                                               /**< PCC_PCC_PORTB.PR Position               */
#define PCC_PCC_PORTB_PR(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PORTB_PR_SHIFT))&PCC_PCC_PORTB_PR_MASK) /**< PCC_PCC_PORTB.PR Field                  */
/** @} */

/** @name PCC_PORTC - PCC PORTC Register */ /** @{ */
#define PCC_PCC_PORTC_CGC_MASK                   (0x40000000U)                                       /**< PCC_PCC_PORTC.CGC Mask                  */
#define PCC_PCC_PORTC_CGC_SHIFT                  (30U)                                               /**< PCC_PCC_PORTC.CGC Position              */
#define PCC_PCC_PORTC_CGC(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PORTC_CGC_SHIFT))&PCC_PCC_PORTC_CGC_MASK) /**< PCC_PCC_PORTC.CGC Field                 */
#define PCC_PCC_PORTC_PR_MASK                    (0x80000000U)                                       /**< PCC_PCC_PORTC.PR Mask                   */
#define PCC_PCC_PORTC_PR_SHIFT                   (31U)                                               /**< PCC_PCC_PORTC.PR Position               */
#define PCC_PCC_PORTC_PR(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PORTC_PR_SHIFT))&PCC_PCC_PORTC_PR_MASK) /**< PCC_PCC_PORTC.PR Field                  */
/** @} */

/** @name PCC_PORTD - PCC PORTD Register */ /** @{ */
#define PCC_PCC_PORTD_CGC_MASK                   (0x40000000U)                                       /**< PCC_PCC_PORTD.CGC Mask                  */
#define PCC_PCC_PORTD_CGC_SHIFT                  (30U)                                               /**< PCC_PCC_PORTD.CGC Position              */
#define PCC_PCC_PORTD_CGC(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PORTD_CGC_SHIFT))&PCC_PCC_PORTD_CGC_MASK) /**< PCC_PCC_PORTD.CGC Field                 */
#define PCC_PCC_PORTD_PR_MASK                    (0x80000000U)                                       /**< PCC_PCC_PORTD.PR Mask                   */
#define PCC_PCC_PORTD_PR_SHIFT                   (31U)                                               /**< PCC_PCC_PORTD.PR Position               */
#define PCC_PCC_PORTD_PR(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PORTD_PR_SHIFT))&PCC_PCC_PORTD_PR_MASK) /**< PCC_PCC_PORTD.PR Field                  */
/** @} */

/** @name PCC_PORTE - PCC PORTE Register */ /** @{ */
#define PCC_PCC_PORTE_CGC_MASK                   (0x40000000U)                                       /**< PCC_PCC_PORTE.CGC Mask                  */
#define PCC_PCC_PORTE_CGC_SHIFT                  (30U)                                               /**< PCC_PCC_PORTE.CGC Position              */
#define PCC_PCC_PORTE_CGC(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PORTE_CGC_SHIFT))&PCC_PCC_PORTE_CGC_MASK) /**< PCC_PCC_PORTE.CGC Field                 */
#define PCC_PCC_PORTE_PR_MASK                    (0x80000000U)                                       /**< PCC_PCC_PORTE.PR Mask                   */
#define PCC_PCC_PORTE_PR_SHIFT                   (31U)                                               /**< PCC_PCC_PORTE.PR Position               */
#define PCC_PCC_PORTE_PR(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_PORTE_PR_SHIFT))&PCC_PCC_PORTE_PR_MASK) /**< PCC_PCC_PORTE.PR Field                  */
/** @} */

/** @name PCC_FLEXIO - PCC FLEXIO Register */ /** @{ */
#define PCC_PCC_FLEXIO_PCS_MASK                  (0x7000000U)                                        /**< PCC_PCC_FLEXIO.PCS Mask                 */
#define PCC_PCC_FLEXIO_PCS_SHIFT                 (24U)                                               /**< PCC_PCC_FLEXIO.PCS Position             */
#define PCC_PCC_FLEXIO_PCS(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FLEXIO_PCS_SHIFT))&PCC_PCC_FLEXIO_PCS_MASK) /**< PCC_PCC_FLEXIO.PCS Field                */
#define PCC_PCC_FLEXIO_CGC_MASK                  (0x40000000U)                                       /**< PCC_PCC_FLEXIO.CGC Mask                 */
#define PCC_PCC_FLEXIO_CGC_SHIFT                 (30U)                                               /**< PCC_PCC_FLEXIO.CGC Position             */
#define PCC_PCC_FLEXIO_CGC(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FLEXIO_CGC_SHIFT))&PCC_PCC_FLEXIO_CGC_MASK) /**< PCC_PCC_FLEXIO.CGC Field                */
#define PCC_PCC_FLEXIO_PR_MASK                   (0x80000000U)                                       /**< PCC_PCC_FLEXIO.PR Mask                  */
#define PCC_PCC_FLEXIO_PR_SHIFT                  (31U)                                               /**< PCC_PCC_FLEXIO.PR Position              */
#define PCC_PCC_FLEXIO_PR(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_FLEXIO_PR_SHIFT))&PCC_PCC_FLEXIO_PR_MASK) /**< PCC_PCC_FLEXIO.PR Field                 */
/** @} */

/** @name PCC_EWM - PCC EWM Register */ /** @{ */
#define PCC_PCC_EWM_CGC_MASK                     (0x40000000U)                                       /**< PCC_PCC_EWM.CGC Mask                    */
#define PCC_PCC_EWM_CGC_SHIFT                    (30U)                                               /**< PCC_PCC_EWM.CGC Position                */
#define PCC_PCC_EWM_CGC(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_EWM_CGC_SHIFT))&PCC_PCC_EWM_CGC_MASK) /**< PCC_PCC_EWM.CGC Field                   */
#define PCC_PCC_EWM_PR_MASK                      (0x80000000U)                                       /**< PCC_PCC_EWM.PR Mask                     */
#define PCC_PCC_EWM_PR_SHIFT                     (31U)                                               /**< PCC_PCC_EWM.PR Position                 */
#define PCC_PCC_EWM_PR(x)                        (((uint32_t)(((uint32_t)(x))<<PCC_PCC_EWM_PR_SHIFT))&PCC_PCC_EWM_PR_MASK) /**< PCC_PCC_EWM.PR Field                    */
/** @} */

/** @name PCC_LPI2C0 - PCC LPI2C0 Register */ /** @{ */
#define PCC_PCC_LPI2C0_PCS_MASK                  (0x7000000U)                                        /**< PCC_PCC_LPI2C0.PCS Mask                 */
#define PCC_PCC_LPI2C0_PCS_SHIFT                 (24U)                                               /**< PCC_PCC_LPI2C0.PCS Position             */
#define PCC_PCC_LPI2C0_PCS(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPI2C0_PCS_SHIFT))&PCC_PCC_LPI2C0_PCS_MASK) /**< PCC_PCC_LPI2C0.PCS Field                */
#define PCC_PCC_LPI2C0_CGC_MASK                  (0x40000000U)                                       /**< PCC_PCC_LPI2C0.CGC Mask                 */
#define PCC_PCC_LPI2C0_CGC_SHIFT                 (30U)                                               /**< PCC_PCC_LPI2C0.CGC Position             */
#define PCC_PCC_LPI2C0_CGC(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPI2C0_CGC_SHIFT))&PCC_PCC_LPI2C0_CGC_MASK) /**< PCC_PCC_LPI2C0.CGC Field                */
#define PCC_PCC_LPI2C0_PR_MASK                   (0x80000000U)                                       /**< PCC_PCC_LPI2C0.PR Mask                  */
#define PCC_PCC_LPI2C0_PR_SHIFT                  (31U)                                               /**< PCC_PCC_LPI2C0.PR Position              */
#define PCC_PCC_LPI2C0_PR(x)                     (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPI2C0_PR_SHIFT))&PCC_PCC_LPI2C0_PR_MASK) /**< PCC_PCC_LPI2C0.PR Field                 */
/** @} */

/** @name PCC_LPUART0 - PCC LPUART0 Register */ /** @{ */
#define PCC_PCC_LPUART0_PCS_MASK                 (0x7000000U)                                        /**< PCC_PCC_LPUART0.PCS Mask                */
#define PCC_PCC_LPUART0_PCS_SHIFT                (24U)                                               /**< PCC_PCC_LPUART0.PCS Position            */
#define PCC_PCC_LPUART0_PCS(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPUART0_PCS_SHIFT))&PCC_PCC_LPUART0_PCS_MASK) /**< PCC_PCC_LPUART0.PCS Field               */
#define PCC_PCC_LPUART0_CGC_MASK                 (0x40000000U)                                       /**< PCC_PCC_LPUART0.CGC Mask                */
#define PCC_PCC_LPUART0_CGC_SHIFT                (30U)                                               /**< PCC_PCC_LPUART0.CGC Position            */
#define PCC_PCC_LPUART0_CGC(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPUART0_CGC_SHIFT))&PCC_PCC_LPUART0_CGC_MASK) /**< PCC_PCC_LPUART0.CGC Field               */
#define PCC_PCC_LPUART0_PR_MASK                  (0x80000000U)                                       /**< PCC_PCC_LPUART0.PR Mask                 */
#define PCC_PCC_LPUART0_PR_SHIFT                 (31U)                                               /**< PCC_PCC_LPUART0.PR Position             */
#define PCC_PCC_LPUART0_PR(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPUART0_PR_SHIFT))&PCC_PCC_LPUART0_PR_MASK) /**< PCC_PCC_LPUART0.PR Field                */
/** @} */

/** @name PCC_LPUART1 - PCC LPUART1 Register */ /** @{ */
#define PCC_PCC_LPUART1_PCS_MASK                 (0x7000000U)                                        /**< PCC_PCC_LPUART1.PCS Mask                */
#define PCC_PCC_LPUART1_PCS_SHIFT                (24U)                                               /**< PCC_PCC_LPUART1.PCS Position            */
#define PCC_PCC_LPUART1_PCS(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPUART1_PCS_SHIFT))&PCC_PCC_LPUART1_PCS_MASK) /**< PCC_PCC_LPUART1.PCS Field               */
#define PCC_PCC_LPUART1_CGC_MASK                 (0x40000000U)                                       /**< PCC_PCC_LPUART1.CGC Mask                */
#define PCC_PCC_LPUART1_CGC_SHIFT                (30U)                                               /**< PCC_PCC_LPUART1.CGC Position            */
#define PCC_PCC_LPUART1_CGC(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPUART1_CGC_SHIFT))&PCC_PCC_LPUART1_CGC_MASK) /**< PCC_PCC_LPUART1.CGC Field               */
#define PCC_PCC_LPUART1_PR_MASK                  (0x80000000U)                                       /**< PCC_PCC_LPUART1.PR Mask                 */
#define PCC_PCC_LPUART1_PR_SHIFT                 (31U)                                               /**< PCC_PCC_LPUART1.PR Position             */
#define PCC_PCC_LPUART1_PR(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPUART1_PR_SHIFT))&PCC_PCC_LPUART1_PR_MASK) /**< PCC_PCC_LPUART1.PR Field                */
/** @} */

/** @name PCC_LPUART2 - PCC LPUART2 Register */ /** @{ */
#define PCC_PCC_LPUART2_PCS_MASK                 (0x7000000U)                                        /**< PCC_PCC_LPUART2.PCS Mask                */
#define PCC_PCC_LPUART2_PCS_SHIFT                (24U)                                               /**< PCC_PCC_LPUART2.PCS Position            */
#define PCC_PCC_LPUART2_PCS(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPUART2_PCS_SHIFT))&PCC_PCC_LPUART2_PCS_MASK) /**< PCC_PCC_LPUART2.PCS Field               */
#define PCC_PCC_LPUART2_CGC_MASK                 (0x40000000U)                                       /**< PCC_PCC_LPUART2.CGC Mask                */
#define PCC_PCC_LPUART2_CGC_SHIFT                (30U)                                               /**< PCC_PCC_LPUART2.CGC Position            */
#define PCC_PCC_LPUART2_CGC(x)                   (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPUART2_CGC_SHIFT))&PCC_PCC_LPUART2_CGC_MASK) /**< PCC_PCC_LPUART2.CGC Field               */
#define PCC_PCC_LPUART2_PR_MASK                  (0x80000000U)                                       /**< PCC_PCC_LPUART2.PR Mask                 */
#define PCC_PCC_LPUART2_PR_SHIFT                 (31U)                                               /**< PCC_PCC_LPUART2.PR Position             */
#define PCC_PCC_LPUART2_PR(x)                    (((uint32_t)(((uint32_t)(x))<<PCC_PCC_LPUART2_PR_SHIFT))&PCC_PCC_LPUART2_PR_MASK) /**< PCC_PCC_LPUART2.PR Field                */
/** @} */

/** @name PCC_CMP0 - PCC CMP0 Register */ /** @{ */
#define PCC_PCC_CMP0_CGC_MASK                    (0x40000000U)                                       /**< PCC_PCC_CMP0.CGC Mask                   */
#define PCC_PCC_CMP0_CGC_SHIFT                   (30U)                                               /**< PCC_PCC_CMP0.CGC Position               */
#define PCC_PCC_CMP0_CGC(x)                      (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CMP0_CGC_SHIFT))&PCC_PCC_CMP0_CGC_MASK) /**< PCC_PCC_CMP0.CGC Field                  */
#define PCC_PCC_CMP0_PR_MASK                     (0x80000000U)                                       /**< PCC_PCC_CMP0.PR Mask                    */
#define PCC_PCC_CMP0_PR_SHIFT                    (31U)                                               /**< PCC_PCC_CMP0.PR Position                */
#define PCC_PCC_CMP0_PR(x)                       (((uint32_t)(((uint32_t)(x))<<PCC_PCC_CMP0_PR_SHIFT))&PCC_PCC_CMP0_PR_MASK) /**< PCC_PCC_CMP0.PR Field                   */
/** @} */

/** @} */ /* End group PCC_Register_Masks_GROUP */


/* PCC - Peripheral instance base addresses */
#define PCC_BasePtr                    0x40065000UL //!< Peripheral base address
#define PCC                            ((PCC_Type *) PCC_BasePtr) //!< Freescale base pointer
#define PCC_BASE_PTR                   (PCC) //!< Freescale style base pointer

/** @} */ /* End group PCC_Peripheral_access_layer_GROUP */


/** @brief C Struct for PDB */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PDB_Peripheral_access_layer_GROUP PDB Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PDB0 (file:PDB0_2CH_8PT_0DAC_1PO)       ================ */
/* ================================================================================ */

/**
 * @brief Programmable Delay Block (2 channels, 8 pre-triggers, 0 DAC, 1 pulse out)
 */
#define PDB_CH_COUNT         2          /**< Number of PDB channels                             */
#define PDB_DAC_COUNT        0          /**< Number of DAC outputs                              */
#define PDB_DLY_COUNT        8          /**< Number of Pre-triggers                             */
#define PDB_POnDLY_COUNT     1          /**< Number of Pulse outputs                            */
/**
 * @struct PDB_Type
 * @brief  C Struct allowing access to PDB registers
 */
typedef struct PDB_Type {
   __IO uint32_t  SC;                           /**< 0000: Status and Control Register                                  */
   __IO uint32_t  MOD;                          /**< 0004: Modulus Register                                             */
   __I  uint32_t  CNT;                          /**< 0008: Counter Register                                             */
   __IO uint32_t  IDLY;                         /**< 000C: Interrupt Delay Register                                     */
   struct {
      __IO uint32_t  C1;                        /**< 0010: Channel  Control Register 1                                  */
      __IO uint32_t  S;                         /**< 0014: Channel  Status Register                                     */
      __IO uint32_t  DLY[PDB_DLY_COUNT];        /**< 0018: Channel Delay  Register                                      */
   } CH[PDB_CH_COUNT];                          /**< 0010: (cluster: size=0x0050, 80)                                   */
        uint8_t   RESERVED_1[304];              /**< 0060: 0x130 bytes                                                  */
   __IO uint32_t  POEN;                         /**< 0190: Pulse-Out Enable Register                                    */
   struct {
      union {                                   /**< 0194: (size=0004)                                                  */
         struct {                               /**< 0194: (size=0004)                                                  */
         __IO uint16_t  DLY2;                   /**< 0194: Pulse-Out 2 Delay Register                                   */
         __IO uint16_t  DLY1;                   /**< 0196: Pulse-Out 1 Delay Register                                   */
         };
         __IO uint32_t  PODLY;                  /**< 0194: Pulse-Out  Delay Register                                    */
      };
   } POnDLY[PDB_POnDLY_COUNT];                  /**< 0194: (cluster: size=0x0004, 4)                                    */
} PDB_Type;


/** @brief Register Masks for PDB */

/* -------------------------------------------------------------------------------- */
/* -----------     'PDB0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup PDB_Register_Masks_GROUP PDB Register Masks */
/** @{ */

/** @name SC - Status and Control Register */ /** @{ */
#define PDB_SC_LDOK_MASK                         (0x1U)                                              /**< PDB0_SC.LDOK Mask                       */
#define PDB_SC_LDOK_SHIFT                        (0U)                                                /**< PDB0_SC.LDOK Position                   */
#define PDB_SC_LDOK(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_SC_LDOK_SHIFT))&PDB_SC_LDOK_MASK) /**< PDB0_SC.LDOK Field                      */
#define PDB_SC_CONT_MASK                         (0x2U)                                              /**< PDB0_SC.CONT Mask                       */
#define PDB_SC_CONT_SHIFT                        (1U)                                                /**< PDB0_SC.CONT Position                   */
#define PDB_SC_CONT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_SC_CONT_SHIFT))&PDB_SC_CONT_MASK) /**< PDB0_SC.CONT Field                      */
#define PDB_SC_MULT_MASK                         (0xCU)                                              /**< PDB0_SC.MULT Mask                       */
#define PDB_SC_MULT_SHIFT                        (2U)                                                /**< PDB0_SC.MULT Position                   */
#define PDB_SC_MULT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_SC_MULT_SHIFT))&PDB_SC_MULT_MASK) /**< PDB0_SC.MULT Field                      */
#define PDB_SC_PDBIE_MASK                        (0x20U)                                             /**< PDB0_SC.PDBIE Mask                      */
#define PDB_SC_PDBIE_SHIFT                       (5U)                                                /**< PDB0_SC.PDBIE Position                  */
#define PDB_SC_PDBIE(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBIE_SHIFT))&PDB_SC_PDBIE_MASK) /**< PDB0_SC.PDBIE Field                     */
#define PDB_SC_PDBIF_MASK                        (0x40U)                                             /**< PDB0_SC.PDBIF Mask                      */
#define PDB_SC_PDBIF_SHIFT                       (6U)                                                /**< PDB0_SC.PDBIF Position                  */
#define PDB_SC_PDBIF(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBIF_SHIFT))&PDB_SC_PDBIF_MASK) /**< PDB0_SC.PDBIF Field                     */
#define PDB_SC_PDBEN_MASK                        (0x80U)                                             /**< PDB0_SC.PDBEN Mask                      */
#define PDB_SC_PDBEN_SHIFT                       (7U)                                                /**< PDB0_SC.PDBEN Position                  */
#define PDB_SC_PDBEN(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBEN_SHIFT))&PDB_SC_PDBEN_MASK) /**< PDB0_SC.PDBEN Field                     */
#define PDB_SC_TRGSEL_MASK                       (0xF00U)                                            /**< PDB0_SC.TRGSEL Mask                     */
#define PDB_SC_TRGSEL_SHIFT                      (8U)                                                /**< PDB0_SC.TRGSEL Position                 */
#define PDB_SC_TRGSEL(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_SC_TRGSEL_SHIFT))&PDB_SC_TRGSEL_MASK) /**< PDB0_SC.TRGSEL Field                    */
#define PDB_SC_PRESCALER_MASK                    (0x7000U)                                           /**< PDB0_SC.PRESCALER Mask                  */
#define PDB_SC_PRESCALER_SHIFT                   (12U)                                               /**< PDB0_SC.PRESCALER Position              */
#define PDB_SC_PRESCALER(x)                      (((uint32_t)(((uint32_t)(x))<<PDB_SC_PRESCALER_SHIFT))&PDB_SC_PRESCALER_MASK) /**< PDB0_SC.PRESCALER Field                 */
#define PDB_SC_DMAEN_MASK                        (0x8000U)                                           /**< PDB0_SC.DMAEN Mask                      */
#define PDB_SC_DMAEN_SHIFT                       (15U)                                               /**< PDB0_SC.DMAEN Position                  */
#define PDB_SC_DMAEN(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_DMAEN_SHIFT))&PDB_SC_DMAEN_MASK) /**< PDB0_SC.DMAEN Field                     */
#define PDB_SC_SWTRIG_MASK                       (0x10000U)                                          /**< PDB0_SC.SWTRIG Mask                     */
#define PDB_SC_SWTRIG_SHIFT                      (16U)                                               /**< PDB0_SC.SWTRIG Position                 */
#define PDB_SC_SWTRIG(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_SC_SWTRIG_SHIFT))&PDB_SC_SWTRIG_MASK) /**< PDB0_SC.SWTRIG Field                    */
#define PDB_SC_PDBEIE_MASK                       (0x20000U)                                          /**< PDB0_SC.PDBEIE Mask                     */
#define PDB_SC_PDBEIE_SHIFT                      (17U)                                               /**< PDB0_SC.PDBEIE Position                 */
#define PDB_SC_PDBEIE(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBEIE_SHIFT))&PDB_SC_PDBEIE_MASK) /**< PDB0_SC.PDBEIE Field                    */
#define PDB_SC_LDMOD_MASK                        (0xC0000U)                                          /**< PDB0_SC.LDMOD Mask                      */
#define PDB_SC_LDMOD_SHIFT                       (18U)                                               /**< PDB0_SC.LDMOD Position                  */
#define PDB_SC_LDMOD(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_LDMOD_SHIFT))&PDB_SC_LDMOD_MASK) /**< PDB0_SC.LDMOD Field                     */
/** @} */

/** @name MOD - Modulus Register */ /** @{ */
#define PDB_MOD_MOD_MASK                         (0xFFFFU)                                           /**< PDB0_MOD.MOD Mask                       */
#define PDB_MOD_MOD_SHIFT                        (0U)                                                /**< PDB0_MOD.MOD Position                   */
#define PDB_MOD_MOD(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_MOD_MOD_SHIFT))&PDB_MOD_MOD_MASK) /**< PDB0_MOD.MOD Field                      */
/** @} */

/** @name CNT - Counter Register */ /** @{ */
#define PDB_CNT_CNT_MASK                         (0xFFFFU)                                           /**< PDB0_CNT.CNT Mask                       */
#define PDB_CNT_CNT_SHIFT                        (0U)                                                /**< PDB0_CNT.CNT Position                   */
#define PDB_CNT_CNT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_CNT_CNT_SHIFT))&PDB_CNT_CNT_MASK) /**< PDB0_CNT.CNT Field                      */
/** @} */

/** @name IDLY - Interrupt Delay Register */ /** @{ */
#define PDB_IDLY_IDLY_MASK                       (0xFFFFU)                                           /**< PDB0_IDLY.IDLY Mask                     */
#define PDB_IDLY_IDLY_SHIFT                      (0U)                                                /**< PDB0_IDLY.IDLY Position                 */
#define PDB_IDLY_IDLY(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_IDLY_IDLY_SHIFT))&PDB_IDLY_IDLY_MASK) /**< PDB0_IDLY.IDLY Field                    */
/** @} */

/** @name C1 - Channel %s Control Register 1 */ /** @{ */
#define PDB_C1_EN_MASK                           (0xFFU)                                             /**< PDB0_C1.EN Mask                         */
#define PDB_C1_EN_SHIFT                          (0U)                                                /**< PDB0_C1.EN Position                     */
#define PDB_C1_EN(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_C1_EN_SHIFT))&PDB_C1_EN_MASK) /**< PDB0_C1.EN Field                        */
#define PDB_C1_TOS_MASK                          (0xFF00U)                                           /**< PDB0_C1.TOS Mask                        */
#define PDB_C1_TOS_SHIFT                         (8U)                                                /**< PDB0_C1.TOS Position                    */
#define PDB_C1_TOS(x)                            (((uint32_t)(((uint32_t)(x))<<PDB_C1_TOS_SHIFT))&PDB_C1_TOS_MASK) /**< PDB0_C1.TOS Field                       */
#define PDB_C1_BB_MASK                           (0xFF0000U)                                         /**< PDB0_C1.BB Mask                         */
#define PDB_C1_BB_SHIFT                          (16U)                                               /**< PDB0_C1.BB Position                     */
#define PDB_C1_BB(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_C1_BB_SHIFT))&PDB_C1_BB_MASK) /**< PDB0_C1.BB Field                        */
/** @} */

/** @name S - Channel %s Status Register */ /** @{ */
#define PDB_S_ERR_MASK                           (0xFFU)                                             /**< PDB0_S.ERR Mask                         */
#define PDB_S_ERR_SHIFT                          (0U)                                                /**< PDB0_S.ERR Position                     */
#define PDB_S_ERR(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_S_ERR_SHIFT))&PDB_S_ERR_MASK) /**< PDB0_S.ERR Field                        */
#define PDB_S_CF_MASK                            (0xFF0000U)                                         /**< PDB0_S.CF Mask                          */
#define PDB_S_CF_SHIFT                           (16U)                                               /**< PDB0_S.CF Position                      */
#define PDB_S_CF(x)                              (((uint32_t)(((uint32_t)(x))<<PDB_S_CF_SHIFT))&PDB_S_CF_MASK) /**< PDB0_S.CF Field                         */
/** @} */

/** @name DLY - Channel Delay %s Register */ /** @{ */
#define PDB_DLY_DLY_MASK                         (0xFFFFU)                                           /**< PDB0_DLY.DLY Mask                       */
#define PDB_DLY_DLY_SHIFT                        (0U)                                                /**< PDB0_DLY.DLY Position                   */
#define PDB_DLY_DLY(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_DLY_DLY_SHIFT))&PDB_DLY_DLY_MASK) /**< PDB0_DLY.DLY Field                      */
/** @} */

/** @name POEN - Pulse-Out Enable Register */ /** @{ */
#define PDB_POEN_POEN_MASK                       (0xFFU)                                             /**< PDB0_POEN.POEN Mask                     */
#define PDB_POEN_POEN_SHIFT                      (0U)                                                /**< PDB0_POEN.POEN Position                 */
#define PDB_POEN_POEN(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_POEN_POEN_SHIFT))&PDB_POEN_POEN_MASK) /**< PDB0_POEN.POEN Field                    */
/** @} */

/** @name PODLY - Pulse-Out %s Delay Register */ /** @{ */
#define PDB_PODLY_DLY2_MASK                      (0xFFFFU)                                           /**< PDB0_PODLY.DLY2 Mask                    */
#define PDB_PODLY_DLY2_SHIFT                     (0U)                                                /**< PDB0_PODLY.DLY2 Position                */
#define PDB_PODLY_DLY2(x)                        (((uint32_t)(((uint32_t)(x))<<PDB_PODLY_DLY2_SHIFT))&PDB_PODLY_DLY2_MASK) /**< PDB0_PODLY.DLY2 Field                   */
#define PDB_PODLY_DLY1_MASK                      (0xFFFF0000U)                                       /**< PDB0_PODLY.DLY1 Mask                    */
#define PDB_PODLY_DLY1_SHIFT                     (16U)                                               /**< PDB0_PODLY.DLY1 Position                */
#define PDB_PODLY_DLY1(x)                        (((uint32_t)(((uint32_t)(x))<<PDB_PODLY_DLY1_SHIFT))&PDB_PODLY_DLY1_MASK) /**< PDB0_PODLY.DLY1 Field                   */
/** @} */

/** @} */ /* End group PDB_Register_Masks_GROUP */


/* PDB0 - Peripheral instance base addresses */
#define PDB0_BasePtr                   0x40036000UL //!< Peripheral base address
#define PDB0                           ((PDB_Type *) PDB0_BasePtr) //!< Freescale base pointer
#define PDB0_BASE_PTR                  (PDB0) //!< Freescale style base pointer
#define PDB0_IRQS { PDB0_IRQn,  }


/** @} */ /* End group PDB_Peripheral_access_layer_GROUP */


/** @brief C Struct for PDB */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PDB_Peripheral_access_layer_GROUP PDB Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PDB1 (derived from PDB0)             ================ */
/* ================================================================================ */

/**
 * @brief Programmable Delay Block (2 channels, 8 pre-triggers, 0 DAC, 1 pulse out)
 */

/* PDB1 - Peripheral instance base addresses */
#define PDB1_BasePtr                   0x40031000UL //!< Peripheral base address
#define PDB1                           ((PDB_Type *) PDB1_BasePtr) //!< Freescale base pointer
#define PDB1_BASE_PTR                  (PDB1) //!< Freescale style base pointer
#define PDB1_IRQS { PDB1_IRQn,  }


/** @} */ /* End group PDB_Peripheral_access_layer_GROUP */


/** @brief C Struct for PMC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PMC_Peripheral_access_layer_GROUP PMC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PMC (file:PMC_S32K14x)               ================ */
/* ================================================================================ */

/**
 * @brief Power Management Controller
 */
/**
 * @struct PMC_Type
 * @brief  C Struct allowing access to PMC registers
 */
typedef struct PMC_Type {
   __IO uint8_t   LVDSC1;                       /**< 0000: Low Voltage Detect Status and Control 1 Register             */
   __IO uint8_t   LVDSC2;                       /**< 0001: Low Voltage Status and Control 2                             */
   __IO uint8_t   REGSC;                        /**< 0002: Regulator Status and Control                                 */
        uint8_t   RESERVED_0;                   /**< 0003: 0x1 bytes                                                    */
   __IO uint8_t   LPOTRIM;                      /**< 0004: Low Power Oscillator Trim Register                           */
} PMC_Type;


/** @brief Register Masks for PMC */

/* -------------------------------------------------------------------------------- */
/* -----------     'PMC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup PMC_Register_Masks_GROUP PMC Register Masks */
/** @{ */

/** @name LVDSC1 - Low Voltage Detect Status and Control 1 Register */ /** @{ */
#define PMC_LVDSC1_LVDRE_MASK                    (0x10U)                                             /**< PMC_LVDSC1.LVDRE Mask                   */
#define PMC_LVDSC1_LVDRE_SHIFT                   (4U)                                                /**< PMC_LVDSC1.LVDRE Position               */
#define PMC_LVDSC1_LVDRE(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDRE_SHIFT))&PMC_LVDSC1_LVDRE_MASK) /**< PMC_LVDSC1.LVDRE Field                  */
#define PMC_LVDSC1_LVDIE_MASK                    (0x20U)                                             /**< PMC_LVDSC1.LVDIE Mask                   */
#define PMC_LVDSC1_LVDIE_SHIFT                   (5U)                                                /**< PMC_LVDSC1.LVDIE Position               */
#define PMC_LVDSC1_LVDIE(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDIE_SHIFT))&PMC_LVDSC1_LVDIE_MASK) /**< PMC_LVDSC1.LVDIE Field                  */
#define PMC_LVDSC1_LVDACK_MASK                   (0x40U)                                             /**< PMC_LVDSC1.LVDACK Mask                  */
#define PMC_LVDSC1_LVDACK_SHIFT                  (6U)                                                /**< PMC_LVDSC1.LVDACK Position              */
#define PMC_LVDSC1_LVDACK(x)                     (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDACK_SHIFT))&PMC_LVDSC1_LVDACK_MASK) /**< PMC_LVDSC1.LVDACK Field                 */
#define PMC_LVDSC1_LVDF_MASK                     (0x80U)                                             /**< PMC_LVDSC1.LVDF Mask                    */
#define PMC_LVDSC1_LVDF_SHIFT                    (7U)                                                /**< PMC_LVDSC1.LVDF Position                */
#define PMC_LVDSC1_LVDF(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDF_SHIFT))&PMC_LVDSC1_LVDF_MASK) /**< PMC_LVDSC1.LVDF Field                   */
/** @} */

/** @name LVDSC2 - Low Voltage Status and Control 2 */ /** @{ */
#define PMC_LVDSC2_LVWIE_MASK                    (0x20U)                                             /**< PMC_LVDSC2.LVWIE Mask                   */
#define PMC_LVDSC2_LVWIE_SHIFT                   (5U)                                                /**< PMC_LVDSC2.LVWIE Position               */
#define PMC_LVDSC2_LVWIE(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWIE_SHIFT))&PMC_LVDSC2_LVWIE_MASK) /**< PMC_LVDSC2.LVWIE Field                  */
#define PMC_LVDSC2_LVWACK_MASK                   (0x40U)                                             /**< PMC_LVDSC2.LVWACK Mask                  */
#define PMC_LVDSC2_LVWACK_SHIFT                  (6U)                                                /**< PMC_LVDSC2.LVWACK Position              */
#define PMC_LVDSC2_LVWACK(x)                     (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWACK_SHIFT))&PMC_LVDSC2_LVWACK_MASK) /**< PMC_LVDSC2.LVWACK Field                 */
#define PMC_LVDSC2_LVWF_MASK                     (0x80U)                                             /**< PMC_LVDSC2.LVWF Mask                    */
#define PMC_LVDSC2_LVWF_SHIFT                    (7U)                                                /**< PMC_LVDSC2.LVWF Position                */
#define PMC_LVDSC2_LVWF(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWF_SHIFT))&PMC_LVDSC2_LVWF_MASK) /**< PMC_LVDSC2.LVWF Field                   */
/** @} */

/** @name REGSC - Regulator Status and Control */ /** @{ */
#define PMC_REGSC_BIASEN_MASK                    (0x1U)                                              /**< PMC_REGSC.BIASEN Mask                   */
#define PMC_REGSC_BIASEN_SHIFT                   (0U)                                                /**< PMC_REGSC.BIASEN Position               */
#define PMC_REGSC_BIASEN(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_BIASEN_SHIFT))&PMC_REGSC_BIASEN_MASK) /**< PMC_REGSC.BIASEN Field                  */
#define PMC_REGSC_CLKBIASDIS_MASK                (0x2U)                                              /**< PMC_REGSC.CLKBIASDIS Mask               */
#define PMC_REGSC_CLKBIASDIS_SHIFT               (1U)                                                /**< PMC_REGSC.CLKBIASDIS Position           */
#define PMC_REGSC_CLKBIASDIS(x)                  (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_CLKBIASDIS_SHIFT))&PMC_REGSC_CLKBIASDIS_MASK) /**< PMC_REGSC.CLKBIASDIS Field              */
#define PMC_REGSC_REGFPM_MASK                    (0x4U)                                              /**< PMC_REGSC.REGFPM Mask                   */
#define PMC_REGSC_REGFPM_SHIFT                   (2U)                                                /**< PMC_REGSC.REGFPM Position               */
#define PMC_REGSC_REGFPM(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_REGFPM_SHIFT))&PMC_REGSC_REGFPM_MASK) /**< PMC_REGSC.REGFPM Field                  */
#define PMC_REGSC_LPOSTAT_MASK                   (0x40U)                                             /**< PMC_REGSC.LPOSTAT Mask                  */
#define PMC_REGSC_LPOSTAT_SHIFT                  (6U)                                                /**< PMC_REGSC.LPOSTAT Position              */
#define PMC_REGSC_LPOSTAT(x)                     (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_LPOSTAT_SHIFT))&PMC_REGSC_LPOSTAT_MASK) /**< PMC_REGSC.LPOSTAT Field                 */
#define PMC_REGSC_LPODIS_MASK                    (0x80U)                                             /**< PMC_REGSC.LPODIS Mask                   */
#define PMC_REGSC_LPODIS_SHIFT                   (7U)                                                /**< PMC_REGSC.LPODIS Position               */
#define PMC_REGSC_LPODIS(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_LPODIS_SHIFT))&PMC_REGSC_LPODIS_MASK) /**< PMC_REGSC.LPODIS Field                  */
/** @} */

/** @name LPOTRIM - Low Power Oscillator Trim Register */ /** @{ */
#define PMC_LPOTRIM_LPOTRIM_MASK                 (0x1FU)                                             /**< PMC_LPOTRIM.LPOTRIM Mask                */
#define PMC_LPOTRIM_LPOTRIM_SHIFT                (0U)                                                /**< PMC_LPOTRIM.LPOTRIM Position            */
#define PMC_LPOTRIM_LPOTRIM(x)                   (((uint8_t)(((uint8_t)(x))<<PMC_LPOTRIM_LPOTRIM_SHIFT))&PMC_LPOTRIM_LPOTRIM_MASK) /**< PMC_LPOTRIM.LPOTRIM Field               */
/** @} */

/** @} */ /* End group PMC_Register_Masks_GROUP */


/* PMC - Peripheral instance base addresses */
#define PMC_BasePtr                    0x4007D000UL //!< Peripheral base address
#define PMC                            ((PMC_Type *) PMC_BasePtr) //!< Freescale base pointer
#define PMC_BASE_PTR                   (PMC) //!< Freescale style base pointer
#define PMC_IRQS { LVD_LVW_IRQn,  }


/** @} */ /* End group PMC_Peripheral_access_layer_GROUP */


/** @brief C Struct for PORT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PORTA (file:PORTA_DFER_GICLR)        ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */
/**
 * @struct PORT_DFER_Type
 * @brief  C Struct allowing access to PORT registers
 */
typedef struct PORT_DFER_Type {
   __IO uint32_t  PCR[32];                      /**< 0000: Pin Control Register                                         */
   __O  uint32_t  GPCLR;                        /**< 0080: Global Pin Control Low Register                              */
   __O  uint32_t  GPCHR;                        /**< 0084: Global Pin Control High Register                             */
   __O  uint32_t  GICLR;                        /**< 0088: Global Interrupt Control Low Register                        */
   __O  uint32_t  GICHR;                        /**< 008C: Global Interrupt Control High Register                       */
        uint8_t   RESERVED_0[16];               /**< 0090: 0x10 bytes                                                   */
   __IO uint32_t  ISFR;                         /**< 00A0: Interrupt Status Flag Register                               */
        uint8_t   RESERVED_1[28];               /**< 00A4: 0x1C bytes                                                   */
   __IO uint32_t  DFER;                         /**< 00C0: Digital Filter Enable Register                               */
   __IO uint32_t  DFCR;                         /**< 00C4: Digital Filter Clock Register                                */
   __IO uint32_t  DFWR;                         /**< 00C8: Digital Filter Width Register                                */
} PORT_DFER_Type;


/** @brief Register Masks for PORT */

/* -------------------------------------------------------------------------------- */
/* -----------     'PORTA' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup PORT_Register_Masks_GROUP PORT Register Masks */
/** @{ */

/** @name PCR - Pin Control Register %s */ /** @{ */
#define PORT_PCR_PD_MASK                         (0x3U)                                              /**< PORTA_PCR.PD Mask                       */
#define PORT_PCR_PD_SHIFT                        (0U)                                                /**< PORTA_PCR.PD Position                   */
#define PORT_PCR_PD(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PD_SHIFT))&PORT_PCR_PD_MASK) /**< PORTA_PCR.PD Field                      */
#define PORT_PCR_PS_MASK                         (0x1U)                                              /**< PORTA_PCR.PS Mask                       */
#define PORT_PCR_PS_SHIFT                        (0U)                                                /**< PORTA_PCR.PS Position                   */
#define PORT_PCR_PS(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PS_SHIFT))&PORT_PCR_PS_MASK) /**< PORTA_PCR.PS Field                      */
#define PORT_PCR_PE_MASK                         (0x2U)                                              /**< PORTA_PCR.PE Mask                       */
#define PORT_PCR_PE_SHIFT                        (1U)                                                /**< PORTA_PCR.PE Position                   */
#define PORT_PCR_PE(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PE_SHIFT))&PORT_PCR_PE_MASK) /**< PORTA_PCR.PE Field                      */
#define PORT_PCR_PFE_MASK                        (0x10U)                                             /**< PORTA_PCR.PFE Mask                      */
#define PORT_PCR_PFE_SHIFT                       (4U)                                                /**< PORTA_PCR.PFE Position                  */
#define PORT_PCR_PFE(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PFE_SHIFT))&PORT_PCR_PFE_MASK) /**< PORTA_PCR.PFE Field                     */
#define PORT_PCR_DSE_MASK                        (0x40U)                                             /**< PORTA_PCR.DSE Mask                      */
#define PORT_PCR_DSE_SHIFT                       (6U)                                                /**< PORTA_PCR.DSE Position                  */
#define PORT_PCR_DSE(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_DSE_SHIFT))&PORT_PCR_DSE_MASK) /**< PORTA_PCR.DSE Field                     */
#define PORT_PCR_MUX_MASK                        (0x700U)                                            /**< PORTA_PCR.MUX Mask                      */
#define PORT_PCR_MUX_SHIFT                       (8U)                                                /**< PORTA_PCR.MUX Position                  */
#define PORT_PCR_MUX(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_MUX_SHIFT))&PORT_PCR_MUX_MASK) /**< PORTA_PCR.MUX Field                     */
#define PORT_PCR_LK_MASK                         (0x8000U)                                           /**< PORTA_PCR.LK Mask                       */
#define PORT_PCR_LK_SHIFT                        (15U)                                               /**< PORTA_PCR.LK Position                   */
#define PORT_PCR_LK(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_LK_SHIFT))&PORT_PCR_LK_MASK) /**< PORTA_PCR.LK Field                      */
#define PORT_PCR_IRQC_MASK                       (0xF0000U)                                          /**< PORTA_PCR.IRQC Mask                     */
#define PORT_PCR_IRQC_SHIFT                      (16U)                                               /**< PORTA_PCR.IRQC Position                 */
#define PORT_PCR_IRQC(x)                         (((uint32_t)(((uint32_t)(x))<<PORT_PCR_IRQC_SHIFT))&PORT_PCR_IRQC_MASK) /**< PORTA_PCR.IRQC Field                    */
#define PORT_PCR_ISF_MASK                        (0x1000000U)                                        /**< PORTA_PCR.ISF Mask                      */
#define PORT_PCR_ISF_SHIFT                       (24U)                                               /**< PORTA_PCR.ISF Position                  */
#define PORT_PCR_ISF(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_ISF_SHIFT))&PORT_PCR_ISF_MASK) /**< PORTA_PCR.ISF Field                     */
/** @} */

/** @name GPCLR - Global Pin Control Low Register */ /** @{ */
#define PORT_GPCLR_GPWD_MASK                     (0xFFFFU)                                           /**< PORTA_GPCLR.GPWD Mask                   */
#define PORT_GPCLR_GPWD_SHIFT                    (0U)                                                /**< PORTA_GPCLR.GPWD Position               */
#define PORT_GPCLR_GPWD(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCLR_GPWD_SHIFT))&PORT_GPCLR_GPWD_MASK) /**< PORTA_GPCLR.GPWD Field                  */
#define PORT_GPCLR_GPWE_MASK                     (0xFFFF0000U)                                       /**< PORTA_GPCLR.GPWE Mask                   */
#define PORT_GPCLR_GPWE_SHIFT                    (16U)                                               /**< PORTA_GPCLR.GPWE Position               */
#define PORT_GPCLR_GPWE(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCLR_GPWE_SHIFT))&PORT_GPCLR_GPWE_MASK) /**< PORTA_GPCLR.GPWE Field                  */
/** @} */

/** @name GPCHR - Global Pin Control High Register */ /** @{ */
#define PORT_GPCHR_GPWD_MASK                     (0xFFFFU)                                           /**< PORTA_GPCHR.GPWD Mask                   */
#define PORT_GPCHR_GPWD_SHIFT                    (0U)                                                /**< PORTA_GPCHR.GPWD Position               */
#define PORT_GPCHR_GPWD(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCHR_GPWD_SHIFT))&PORT_GPCHR_GPWD_MASK) /**< PORTA_GPCHR.GPWD Field                  */
#define PORT_GPCHR_GPWE_MASK                     (0xFFFF0000U)                                       /**< PORTA_GPCHR.GPWE Mask                   */
#define PORT_GPCHR_GPWE_SHIFT                    (16U)                                               /**< PORTA_GPCHR.GPWE Position               */
#define PORT_GPCHR_GPWE(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCHR_GPWE_SHIFT))&PORT_GPCHR_GPWE_MASK) /**< PORTA_GPCHR.GPWE Field                  */
/** @} */

/** @name GICLR - Global Interrupt Control Low Register */ /** @{ */
#define PORT_GICLR_GIWE_MASK                     (0xFFFFU)                                           /**< PORTA_GICLR.GIWE Mask                   */
#define PORT_GICLR_GIWE_SHIFT                    (0U)                                                /**< PORTA_GICLR.GIWE Position               */
#define PORT_GICLR_GIWE(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GICLR_GIWE_SHIFT))&PORT_GICLR_GIWE_MASK) /**< PORTA_GICLR.GIWE Field                  */
#define PORT_GICLR_GIWD_MASK                     (0xFFFF0000U)                                       /**< PORTA_GICLR.GIWD Mask                   */
#define PORT_GICLR_GIWD_SHIFT                    (16U)                                               /**< PORTA_GICLR.GIWD Position               */
#define PORT_GICLR_GIWD(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GICLR_GIWD_SHIFT))&PORT_GICLR_GIWD_MASK) /**< PORTA_GICLR.GIWD Field                  */
/** @} */

/** @name GICHR - Global Interrupt Control High Register */ /** @{ */
#define PORT_GICHR_GIWE_MASK                     (0xFFFFU)                                           /**< PORTA_GICHR.GIWE Mask                   */
#define PORT_GICHR_GIWE_SHIFT                    (0U)                                                /**< PORTA_GICHR.GIWE Position               */
#define PORT_GICHR_GIWE(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GICHR_GIWE_SHIFT))&PORT_GICHR_GIWE_MASK) /**< PORTA_GICHR.GIWE Field                  */
#define PORT_GICHR_GIWD_MASK                     (0xFFFF0000U)                                       /**< PORTA_GICHR.GIWD Mask                   */
#define PORT_GICHR_GIWD_SHIFT                    (16U)                                               /**< PORTA_GICHR.GIWD Position               */
#define PORT_GICHR_GIWD(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GICHR_GIWD_SHIFT))&PORT_GICHR_GIWD_MASK) /**< PORTA_GICHR.GIWD Field                  */
/** @} */

/** @name DFCR - Digital Filter Clock Register */ /** @{ */
#define PORT_DFCR_CS_MASK                        (0x1U)                                              /**< PORTA_DFCR.CS Mask                      */
#define PORT_DFCR_CS_SHIFT                       (0U)                                                /**< PORTA_DFCR.CS Position                  */
#define PORT_DFCR_CS(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_DFCR_CS_SHIFT))&PORT_DFCR_CS_MASK) /**< PORTA_DFCR.CS Field                     */
/** @} */

/** @name DFWR - Digital Filter Width Register */ /** @{ */
#define PORT_DFWR_FILT_MASK                      (0x1FU)                                             /**< PORTA_DFWR.FILT Mask                    */
#define PORT_DFWR_FILT_SHIFT                     (0U)                                                /**< PORTA_DFWR.FILT Position                */
#define PORT_DFWR_FILT(x)                        (((uint32_t)(((uint32_t)(x))<<PORT_DFWR_FILT_SHIFT))&PORT_DFWR_FILT_MASK) /**< PORTA_DFWR.FILT Field                   */
/** @} */

/** @} */ /* End group PORT_Register_Masks_GROUP */


/* PORTA - Peripheral instance base addresses */
#define PORTA_BasePtr                  0x40049000UL //!< Peripheral base address
#define PORTA                          ((PORT_DFER_Type *) PORTA_BasePtr) //!< Freescale base pointer
#define PORTA_BASE_PTR                 (PORTA) //!< Freescale style base pointer
#define PORTA_IRQS { PORTA_IRQn,  }


/** @} */ /* End group PORT_Peripheral_access_layer_GROUP */


/** @brief C Struct for PORT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PORTB (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTB - Peripheral instance base addresses */
#define PORTB_BasePtr                  0x4004A000UL //!< Peripheral base address
#define PORTB                          ((PORT_DFER_Type *) PORTB_BasePtr) //!< Freescale base pointer
#define PORTB_BASE_PTR                 (PORTB) //!< Freescale style base pointer
#define PORTB_IRQS { PORTB_IRQn,  }


/** @} */ /* End group PORT_Peripheral_access_layer_GROUP */


/** @brief C Struct for PORT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PORTC (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTC - Peripheral instance base addresses */
#define PORTC_BasePtr                  0x4004B000UL //!< Peripheral base address
#define PORTC                          ((PORT_DFER_Type *) PORTC_BasePtr) //!< Freescale base pointer
#define PORTC_BASE_PTR                 (PORTC) //!< Freescale style base pointer
#define PORTC_IRQS { PORTC_IRQn,  }


/** @} */ /* End group PORT_Peripheral_access_layer_GROUP */


/** @brief C Struct for PORT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PORTD (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTD - Peripheral instance base addresses */
#define PORTD_BasePtr                  0x4004C000UL //!< Peripheral base address
#define PORTD                          ((PORT_DFER_Type *) PORTD_BasePtr) //!< Freescale base pointer
#define PORTD_BASE_PTR                 (PORTD) //!< Freescale style base pointer
#define PORTD_IRQS { PORTD_IRQn,  }


/** @} */ /* End group PORT_Peripheral_access_layer_GROUP */


/** @brief C Struct for PORT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PORTE (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTE - Peripheral instance base addresses */
#define PORTE_BasePtr                  0x4004D000UL //!< Peripheral base address
#define PORTE                          ((PORT_DFER_Type *) PORTE_BasePtr) //!< Freescale base pointer
#define PORTE_BASE_PTR                 (PORTE) //!< Freescale style base pointer
#define PORTE_IRQS { PORTE_IRQn,  }


/** @} */ /* End group PORT_Peripheral_access_layer_GROUP */


/** @brief C Struct for RCM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup RCM_Peripheral_access_layer_GROUP RCM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           RCM (file:RCM_S32K14x)               ================ */
/* ================================================================================ */

/**
 * @brief Reset Control Module
 */
/**
 * @struct RCM_Type
 * @brief  C Struct allowing access to RCM registers
 */
typedef struct RCM_Type {
   __I  uint32_t  VERID;                        /**< 0000: Version ID Register                                          */
   __I  uint32_t  PARAM;                        /**< 0004: Parameter Register                                           */
   __I  uint32_t  SRS;                          /**< 0008: System Reset Status Register                                 */
   __IO uint32_t  RPC;                          /**< 000C: Reset Pin Control register                                   */
        uint8_t   RESERVED_0[8];                /**< 0010: 0x8 bytes                                                    */
   __IO uint32_t  SSRS;                         /**< 0018: Sticky System Reset Status Register                          */
   __IO uint32_t  SRIE;                         /**< 001C: System Reset Interrupt Enable Register                       */
} RCM_Type;


/** @brief Register Masks for RCM */

/* -------------------------------------------------------------------------------- */
/* -----------     'RCM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup RCM_Register_Masks_GROUP RCM Register Masks */
/** @{ */

/** @name VERID - Version ID Register */ /** @{ */
#define RCM_VERID_FEATURE_MASK                   (0xFFFFU)                                           /**< RCM_VERID.FEATURE Mask                  */
#define RCM_VERID_FEATURE_SHIFT                  (0U)                                                /**< RCM_VERID.FEATURE Position              */
#define RCM_VERID_FEATURE(x)                     (((uint32_t)(((uint32_t)(x))<<RCM_VERID_FEATURE_SHIFT))&RCM_VERID_FEATURE_MASK) /**< RCM_VERID.FEATURE Field                 */
#define RCM_VERID_MINOR_MASK                     (0xFF0000U)                                         /**< RCM_VERID.MINOR Mask                    */
#define RCM_VERID_MINOR_SHIFT                    (16U)                                               /**< RCM_VERID.MINOR Position                */
#define RCM_VERID_MINOR(x)                       (((uint32_t)(((uint32_t)(x))<<RCM_VERID_MINOR_SHIFT))&RCM_VERID_MINOR_MASK) /**< RCM_VERID.MINOR Field                   */
#define RCM_VERID_MAJOR_MASK                     (0xFF000000U)                                       /**< RCM_VERID.MAJOR Mask                    */
#define RCM_VERID_MAJOR_SHIFT                    (24U)                                               /**< RCM_VERID.MAJOR Position                */
#define RCM_VERID_MAJOR(x)                       (((uint32_t)(((uint32_t)(x))<<RCM_VERID_MAJOR_SHIFT))&RCM_VERID_MAJOR_MASK) /**< RCM_VERID.MAJOR Field                   */
/** @} */

/** @name PARAM - Parameter Register */ /** @{ */
#define RCM_PARAM_EWAKEUP_MASK                   (0x1U)                                              /**< RCM_PARAM.EWAKEUP Mask                  */
#define RCM_PARAM_EWAKEUP_SHIFT                  (0U)                                                /**< RCM_PARAM.EWAKEUP Position              */
#define RCM_PARAM_EWAKEUP(x)                     (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_EWAKEUP_SHIFT))&RCM_PARAM_EWAKEUP_MASK) /**< RCM_PARAM.EWAKEUP Field                 */
#define RCM_PARAM_ELVD_MASK                      (0x2U)                                              /**< RCM_PARAM.ELVD Mask                     */
#define RCM_PARAM_ELVD_SHIFT                     (1U)                                                /**< RCM_PARAM.ELVD Position                 */
#define RCM_PARAM_ELVD(x)                        (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_ELVD_SHIFT))&RCM_PARAM_ELVD_MASK) /**< RCM_PARAM.ELVD Field                    */
#define RCM_PARAM_ELOC_MASK                      (0x4U)                                              /**< RCM_PARAM.ELOC Mask                     */
#define RCM_PARAM_ELOC_SHIFT                     (2U)                                                /**< RCM_PARAM.ELOC Position                 */
#define RCM_PARAM_ELOC(x)                        (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_ELOC_SHIFT))&RCM_PARAM_ELOC_MASK) /**< RCM_PARAM.ELOC Field                    */
#define RCM_PARAM_ELOL_MASK                      (0x8U)                                              /**< RCM_PARAM.ELOL Mask                     */
#define RCM_PARAM_ELOL_SHIFT                     (3U)                                                /**< RCM_PARAM.ELOL Position                 */
#define RCM_PARAM_ELOL(x)                        (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_ELOL_SHIFT))&RCM_PARAM_ELOL_MASK) /**< RCM_PARAM.ELOL Field                    */
#define RCM_PARAM_EWDOG_MASK                     (0x20U)                                             /**< RCM_PARAM.EWDOG Mask                    */
#define RCM_PARAM_EWDOG_SHIFT                    (5U)                                                /**< RCM_PARAM.EWDOG Position                */
#define RCM_PARAM_EWDOG(x)                       (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_EWDOG_SHIFT))&RCM_PARAM_EWDOG_MASK) /**< RCM_PARAM.EWDOG Field                   */
#define RCM_PARAM_EPIN_MASK                      (0x40U)                                             /**< RCM_PARAM.EPIN Mask                     */
#define RCM_PARAM_EPIN_SHIFT                     (6U)                                                /**< RCM_PARAM.EPIN Position                 */
#define RCM_PARAM_EPIN(x)                        (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_EPIN_SHIFT))&RCM_PARAM_EPIN_MASK) /**< RCM_PARAM.EPIN Field                    */
#define RCM_PARAM_EPOR_MASK                      (0x80U)                                             /**< RCM_PARAM.EPOR Mask                     */
#define RCM_PARAM_EPOR_SHIFT                     (7U)                                                /**< RCM_PARAM.EPOR Position                 */
#define RCM_PARAM_EPOR(x)                        (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_EPOR_SHIFT))&RCM_PARAM_EPOR_MASK) /**< RCM_PARAM.EPOR Field                    */
#define RCM_PARAM_EJTAG_MASK                     (0x100U)                                            /**< RCM_PARAM.EJTAG Mask                    */
#define RCM_PARAM_EJTAG_SHIFT                    (8U)                                                /**< RCM_PARAM.EJTAG Position                */
#define RCM_PARAM_EJTAG(x)                       (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_EJTAG_SHIFT))&RCM_PARAM_EJTAG_MASK) /**< RCM_PARAM.EJTAG Field                   */
#define RCM_PARAM_ELOCKUP_MASK                   (0x200U)                                            /**< RCM_PARAM.ELOCKUP Mask                  */
#define RCM_PARAM_ELOCKUP_SHIFT                  (9U)                                                /**< RCM_PARAM.ELOCKUP Position              */
#define RCM_PARAM_ELOCKUP(x)                     (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_ELOCKUP_SHIFT))&RCM_PARAM_ELOCKUP_MASK) /**< RCM_PARAM.ELOCKUP Field                 */
#define RCM_PARAM_ESW_MASK                       (0x400U)                                            /**< RCM_PARAM.ESW Mask                      */
#define RCM_PARAM_ESW_SHIFT                      (10U)                                               /**< RCM_PARAM.ESW Position                  */
#define RCM_PARAM_ESW(x)                         (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_ESW_SHIFT))&RCM_PARAM_ESW_MASK) /**< RCM_PARAM.ESW Field                     */
#define RCM_PARAM_EMDM_AP_MASK                   (0x800U)                                            /**< RCM_PARAM.EMDM_AP Mask                  */
#define RCM_PARAM_EMDM_AP_SHIFT                  (11U)                                               /**< RCM_PARAM.EMDM_AP Position              */
#define RCM_PARAM_EMDM_AP(x)                     (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_EMDM_AP_SHIFT))&RCM_PARAM_EMDM_AP_MASK) /**< RCM_PARAM.EMDM_AP Field                 */
#define RCM_PARAM_ESACKERR_MASK                  (0x2000U)                                           /**< RCM_PARAM.ESACKERR Mask                 */
#define RCM_PARAM_ESACKERR_SHIFT                 (13U)                                               /**< RCM_PARAM.ESACKERR Position             */
#define RCM_PARAM_ESACKERR(x)                    (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_ESACKERR_SHIFT))&RCM_PARAM_ESACKERR_MASK) /**< RCM_PARAM.ESACKERR Field                */
#define RCM_PARAM_ETAMPER_MASK                   (0x8000U)                                           /**< RCM_PARAM.ETAMPER Mask                  */
#define RCM_PARAM_ETAMPER_SHIFT                  (15U)                                               /**< RCM_PARAM.ETAMPER Position              */
#define RCM_PARAM_ETAMPER(x)                     (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_ETAMPER_SHIFT))&RCM_PARAM_ETAMPER_MASK) /**< RCM_PARAM.ETAMPER Field                 */
#define RCM_PARAM_ECORE1_MASK                    (0x10000U)                                          /**< RCM_PARAM.ECORE1 Mask                   */
#define RCM_PARAM_ECORE1_SHIFT                   (16U)                                               /**< RCM_PARAM.ECORE1 Position               */
#define RCM_PARAM_ECORE1(x)                      (((uint32_t)(((uint32_t)(x))<<RCM_PARAM_ECORE1_SHIFT))&RCM_PARAM_ECORE1_MASK) /**< RCM_PARAM.ECORE1 Field                  */
/** @} */

/** @name SRS - System Reset Status Register */ /** @{ */
#define RCM_SRS_LVD_MASK                         (0x2U)                                              /**< RCM_SRS.LVD Mask                        */
#define RCM_SRS_LVD_SHIFT                        (1U)                                                /**< RCM_SRS.LVD Position                    */
#define RCM_SRS_LVD(x)                           (((uint32_t)(((uint32_t)(x))<<RCM_SRS_LVD_SHIFT))&RCM_SRS_LVD_MASK) /**< RCM_SRS.LVD Field                       */
#define RCM_SRS_LOC_MASK                         (0x4U)                                              /**< RCM_SRS.LOC Mask                        */
#define RCM_SRS_LOC_SHIFT                        (2U)                                                /**< RCM_SRS.LOC Position                    */
#define RCM_SRS_LOC(x)                           (((uint32_t)(((uint32_t)(x))<<RCM_SRS_LOC_SHIFT))&RCM_SRS_LOC_MASK) /**< RCM_SRS.LOC Field                       */
#define RCM_SRS_LOL_MASK                         (0x8U)                                              /**< RCM_SRS.LOL Mask                        */
#define RCM_SRS_LOL_SHIFT                        (3U)                                                /**< RCM_SRS.LOL Position                    */
#define RCM_SRS_LOL(x)                           (((uint32_t)(((uint32_t)(x))<<RCM_SRS_LOL_SHIFT))&RCM_SRS_LOL_MASK) /**< RCM_SRS.LOL Field                       */
#define RCM_SRS_WDOG_MASK                        (0x20U)                                             /**< RCM_SRS.WDOG Mask                       */
#define RCM_SRS_WDOG_SHIFT                       (5U)                                                /**< RCM_SRS.WDOG Position                   */
#define RCM_SRS_WDOG(x)                          (((uint32_t)(((uint32_t)(x))<<RCM_SRS_WDOG_SHIFT))&RCM_SRS_WDOG_MASK) /**< RCM_SRS.WDOG Field                      */
#define RCM_SRS_PIN_MASK                         (0x40U)                                             /**< RCM_SRS.PIN Mask                        */
#define RCM_SRS_PIN_SHIFT                        (6U)                                                /**< RCM_SRS.PIN Position                    */
#define RCM_SRS_PIN(x)                           (((uint32_t)(((uint32_t)(x))<<RCM_SRS_PIN_SHIFT))&RCM_SRS_PIN_MASK) /**< RCM_SRS.PIN Field                       */
#define RCM_SRS_POR_MASK                         (0x80U)                                             /**< RCM_SRS.POR Mask                        */
#define RCM_SRS_POR_SHIFT                        (7U)                                                /**< RCM_SRS.POR Position                    */
#define RCM_SRS_POR(x)                           (((uint32_t)(((uint32_t)(x))<<RCM_SRS_POR_SHIFT))&RCM_SRS_POR_MASK) /**< RCM_SRS.POR Field                       */
#define RCM_SRS_JTAG_MASK                        (0x100U)                                            /**< RCM_SRS.JTAG Mask                       */
#define RCM_SRS_JTAG_SHIFT                       (8U)                                                /**< RCM_SRS.JTAG Position                   */
#define RCM_SRS_JTAG(x)                          (((uint32_t)(((uint32_t)(x))<<RCM_SRS_JTAG_SHIFT))&RCM_SRS_JTAG_MASK) /**< RCM_SRS.JTAG Field                      */
#define RCM_SRS_LOCKUP_MASK                      (0x200U)                                            /**< RCM_SRS.LOCKUP Mask                     */
#define RCM_SRS_LOCKUP_SHIFT                     (9U)                                                /**< RCM_SRS.LOCKUP Position                 */
#define RCM_SRS_LOCKUP(x)                        (((uint32_t)(((uint32_t)(x))<<RCM_SRS_LOCKUP_SHIFT))&RCM_SRS_LOCKUP_MASK) /**< RCM_SRS.LOCKUP Field                    */
#define RCM_SRS_SW_MASK                          (0x400U)                                            /**< RCM_SRS.SW Mask                         */
#define RCM_SRS_SW_SHIFT                         (10U)                                               /**< RCM_SRS.SW Position                     */
#define RCM_SRS_SW(x)                            (((uint32_t)(((uint32_t)(x))<<RCM_SRS_SW_SHIFT))&RCM_SRS_SW_MASK) /**< RCM_SRS.SW Field                        */
#define RCM_SRS_MDM_AP_MASK                      (0x800U)                                            /**< RCM_SRS.MDM_AP Mask                     */
#define RCM_SRS_MDM_AP_SHIFT                     (11U)                                               /**< RCM_SRS.MDM_AP Position                 */
#define RCM_SRS_MDM_AP(x)                        (((uint32_t)(((uint32_t)(x))<<RCM_SRS_MDM_AP_SHIFT))&RCM_SRS_MDM_AP_MASK) /**< RCM_SRS.MDM_AP Field                    */
#define RCM_SRS_SACKERR_MASK                     (0x2000U)                                           /**< RCM_SRS.SACKERR Mask                    */
#define RCM_SRS_SACKERR_SHIFT                    (13U)                                               /**< RCM_SRS.SACKERR Position                */
#define RCM_SRS_SACKERR(x)                       (((uint32_t)(((uint32_t)(x))<<RCM_SRS_SACKERR_SHIFT))&RCM_SRS_SACKERR_MASK) /**< RCM_SRS.SACKERR Field                   */
/** @} */

/** @name RPC - Reset Pin Control register */ /** @{ */
#define RCM_RPC_RSTFLTSRW_MASK                   (0x3U)                                              /**< RCM_RPC.RSTFLTSRW Mask                  */
#define RCM_RPC_RSTFLTSRW_SHIFT                  (0U)                                                /**< RCM_RPC.RSTFLTSRW Position              */
#define RCM_RPC_RSTFLTSRW(x)                     (((uint32_t)(((uint32_t)(x))<<RCM_RPC_RSTFLTSRW_SHIFT))&RCM_RPC_RSTFLTSRW_MASK) /**< RCM_RPC.RSTFLTSRW Field                 */
#define RCM_RPC_RSTFLTSS_MASK                    (0x4U)                                              /**< RCM_RPC.RSTFLTSS Mask                   */
#define RCM_RPC_RSTFLTSS_SHIFT                   (2U)                                                /**< RCM_RPC.RSTFLTSS Position               */
#define RCM_RPC_RSTFLTSS(x)                      (((uint32_t)(((uint32_t)(x))<<RCM_RPC_RSTFLTSS_SHIFT))&RCM_RPC_RSTFLTSS_MASK) /**< RCM_RPC.RSTFLTSS Field                  */
#define RCM_RPC_RSTFLTSEL_MASK                   (0x1F00U)                                           /**< RCM_RPC.RSTFLTSEL Mask                  */
#define RCM_RPC_RSTFLTSEL_SHIFT                  (8U)                                                /**< RCM_RPC.RSTFLTSEL Position              */
#define RCM_RPC_RSTFLTSEL(x)                     (((uint32_t)(((uint32_t)(x))<<RCM_RPC_RSTFLTSEL_SHIFT))&RCM_RPC_RSTFLTSEL_MASK) /**< RCM_RPC.RSTFLTSEL Field                 */
/** @} */

/** @name SSRS - Sticky System Reset Status Register */ /** @{ */
#define RCM_SSRS_SLVD_MASK                       (0x2U)                                              /**< RCM_SSRS.SLVD Mask                      */
#define RCM_SSRS_SLVD_SHIFT                      (1U)                                                /**< RCM_SSRS.SLVD Position                  */
#define RCM_SSRS_SLVD(x)                         (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SLVD_SHIFT))&RCM_SSRS_SLVD_MASK) /**< RCM_SSRS.SLVD Field                     */
#define RCM_SSRS_SLOC_MASK                       (0x4U)                                              /**< RCM_SSRS.SLOC Mask                      */
#define RCM_SSRS_SLOC_SHIFT                      (2U)                                                /**< RCM_SSRS.SLOC Position                  */
#define RCM_SSRS_SLOC(x)                         (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SLOC_SHIFT))&RCM_SSRS_SLOC_MASK) /**< RCM_SSRS.SLOC Field                     */
#define RCM_SSRS_SLOL_MASK                       (0x8U)                                              /**< RCM_SSRS.SLOL Mask                      */
#define RCM_SSRS_SLOL_SHIFT                      (3U)                                                /**< RCM_SSRS.SLOL Position                  */
#define RCM_SSRS_SLOL(x)                         (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SLOL_SHIFT))&RCM_SSRS_SLOL_MASK) /**< RCM_SSRS.SLOL Field                     */
#define RCM_SSRS_SWDOG_MASK                      (0x20U)                                             /**< RCM_SSRS.SWDOG Mask                     */
#define RCM_SSRS_SWDOG_SHIFT                     (5U)                                                /**< RCM_SSRS.SWDOG Position                 */
#define RCM_SSRS_SWDOG(x)                        (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SWDOG_SHIFT))&RCM_SSRS_SWDOG_MASK) /**< RCM_SSRS.SWDOG Field                    */
#define RCM_SSRS_SPIN_MASK                       (0x40U)                                             /**< RCM_SSRS.SPIN Mask                      */
#define RCM_SSRS_SPIN_SHIFT                      (6U)                                                /**< RCM_SSRS.SPIN Position                  */
#define RCM_SSRS_SPIN(x)                         (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SPIN_SHIFT))&RCM_SSRS_SPIN_MASK) /**< RCM_SSRS.SPIN Field                     */
#define RCM_SSRS_SPOR_MASK                       (0x80U)                                             /**< RCM_SSRS.SPOR Mask                      */
#define RCM_SSRS_SPOR_SHIFT                      (7U)                                                /**< RCM_SSRS.SPOR Position                  */
#define RCM_SSRS_SPOR(x)                         (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SPOR_SHIFT))&RCM_SSRS_SPOR_MASK) /**< RCM_SSRS.SPOR Field                     */
#define RCM_SSRS_SJTAG_MASK                      (0x100U)                                            /**< RCM_SSRS.SJTAG Mask                     */
#define RCM_SSRS_SJTAG_SHIFT                     (8U)                                                /**< RCM_SSRS.SJTAG Position                 */
#define RCM_SSRS_SJTAG(x)                        (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SJTAG_SHIFT))&RCM_SSRS_SJTAG_MASK) /**< RCM_SSRS.SJTAG Field                    */
#define RCM_SSRS_SLOCKUP_MASK                    (0x200U)                                            /**< RCM_SSRS.SLOCKUP Mask                   */
#define RCM_SSRS_SLOCKUP_SHIFT                   (9U)                                                /**< RCM_SSRS.SLOCKUP Position               */
#define RCM_SSRS_SLOCKUP(x)                      (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SLOCKUP_SHIFT))&RCM_SSRS_SLOCKUP_MASK) /**< RCM_SSRS.SLOCKUP Field                  */
#define RCM_SSRS_SSW_MASK                        (0x400U)                                            /**< RCM_SSRS.SSW Mask                       */
#define RCM_SSRS_SSW_SHIFT                       (10U)                                               /**< RCM_SSRS.SSW Position                   */
#define RCM_SSRS_SSW(x)                          (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SSW_SHIFT))&RCM_SSRS_SSW_MASK) /**< RCM_SSRS.SSW Field                      */
#define RCM_SSRS_SMDM_AP_MASK                    (0x800U)                                            /**< RCM_SSRS.SMDM_AP Mask                   */
#define RCM_SSRS_SMDM_AP_SHIFT                   (11U)                                               /**< RCM_SSRS.SMDM_AP Position               */
#define RCM_SSRS_SMDM_AP(x)                      (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SMDM_AP_SHIFT))&RCM_SSRS_SMDM_AP_MASK) /**< RCM_SSRS.SMDM_AP Field                  */
#define RCM_SSRS_SSACKERR_MASK                   (0x2000U)                                           /**< RCM_SSRS.SSACKERR Mask                  */
#define RCM_SSRS_SSACKERR_SHIFT                  (13U)                                               /**< RCM_SSRS.SSACKERR Position              */
#define RCM_SSRS_SSACKERR(x)                     (((uint32_t)(((uint32_t)(x))<<RCM_SSRS_SSACKERR_SHIFT))&RCM_SSRS_SSACKERR_MASK) /**< RCM_SSRS.SSACKERR Field                 */
/** @} */

/** @name SRIE - System Reset Interrupt Enable Register */ /** @{ */
#define RCM_SRIE_DELAY_MASK                      (0x3U)                                              /**< RCM_SRIE.DELAY Mask                     */
#define RCM_SRIE_DELAY_SHIFT                     (0U)                                                /**< RCM_SRIE.DELAY Position                 */
#define RCM_SRIE_DELAY(x)                        (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_DELAY_SHIFT))&RCM_SRIE_DELAY_MASK) /**< RCM_SRIE.DELAY Field                    */
#define RCM_SRIE_LOC_MASK                        (0x4U)                                              /**< RCM_SRIE.LOC Mask                       */
#define RCM_SRIE_LOC_SHIFT                       (2U)                                                /**< RCM_SRIE.LOC Position                   */
#define RCM_SRIE_LOC(x)                          (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_LOC_SHIFT))&RCM_SRIE_LOC_MASK) /**< RCM_SRIE.LOC Field                      */
#define RCM_SRIE_LOL_MASK                        (0x8U)                                              /**< RCM_SRIE.LOL Mask                       */
#define RCM_SRIE_LOL_SHIFT                       (3U)                                                /**< RCM_SRIE.LOL Position                   */
#define RCM_SRIE_LOL(x)                          (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_LOL_SHIFT))&RCM_SRIE_LOL_MASK) /**< RCM_SRIE.LOL Field                      */
#define RCM_SRIE_WDOG_MASK                       (0x20U)                                             /**< RCM_SRIE.WDOG Mask                      */
#define RCM_SRIE_WDOG_SHIFT                      (5U)                                                /**< RCM_SRIE.WDOG Position                  */
#define RCM_SRIE_WDOG(x)                         (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_WDOG_SHIFT))&RCM_SRIE_WDOG_MASK) /**< RCM_SRIE.WDOG Field                     */
#define RCM_SRIE_PIN_MASK                        (0x40U)                                             /**< RCM_SRIE.PIN Mask                       */
#define RCM_SRIE_PIN_SHIFT                       (6U)                                                /**< RCM_SRIE.PIN Position                   */
#define RCM_SRIE_PIN(x)                          (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_PIN_SHIFT))&RCM_SRIE_PIN_MASK) /**< RCM_SRIE.PIN Field                      */
#define RCM_SRIE_GIE_MASK                        (0x80U)                                             /**< RCM_SRIE.GIE Mask                       */
#define RCM_SRIE_GIE_SHIFT                       (7U)                                                /**< RCM_SRIE.GIE Position                   */
#define RCM_SRIE_GIE(x)                          (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_GIE_SHIFT))&RCM_SRIE_GIE_MASK) /**< RCM_SRIE.GIE Field                      */
#define RCM_SRIE_JTAG_MASK                       (0x100U)                                            /**< RCM_SRIE.JTAG Mask                      */
#define RCM_SRIE_JTAG_SHIFT                      (8U)                                                /**< RCM_SRIE.JTAG Position                  */
#define RCM_SRIE_JTAG(x)                         (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_JTAG_SHIFT))&RCM_SRIE_JTAG_MASK) /**< RCM_SRIE.JTAG Field                     */
#define RCM_SRIE_LOCKUP_MASK                     (0x200U)                                            /**< RCM_SRIE.LOCKUP Mask                    */
#define RCM_SRIE_LOCKUP_SHIFT                    (9U)                                                /**< RCM_SRIE.LOCKUP Position                */
#define RCM_SRIE_LOCKUP(x)                       (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_LOCKUP_SHIFT))&RCM_SRIE_LOCKUP_MASK) /**< RCM_SRIE.LOCKUP Field                   */
#define RCM_SRIE_SW_MASK                         (0x400U)                                            /**< RCM_SRIE.SW Mask                        */
#define RCM_SRIE_SW_SHIFT                        (10U)                                               /**< RCM_SRIE.SW Position                    */
#define RCM_SRIE_SW(x)                           (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_SW_SHIFT))&RCM_SRIE_SW_MASK) /**< RCM_SRIE.SW Field                       */
#define RCM_SRIE_MDM_AP_MASK                     (0x800U)                                            /**< RCM_SRIE.MDM_AP Mask                    */
#define RCM_SRIE_MDM_AP_SHIFT                    (11U)                                               /**< RCM_SRIE.MDM_AP Position                */
#define RCM_SRIE_MDM_AP(x)                       (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_MDM_AP_SHIFT))&RCM_SRIE_MDM_AP_MASK) /**< RCM_SRIE.MDM_AP Field                   */
#define RCM_SRIE_SACKERR_MASK                    (0x2000U)                                           /**< RCM_SRIE.SACKERR Mask                   */
#define RCM_SRIE_SACKERR_SHIFT                   (13U)                                               /**< RCM_SRIE.SACKERR Position               */
#define RCM_SRIE_SACKERR(x)                      (((uint32_t)(((uint32_t)(x))<<RCM_SRIE_SACKERR_SHIFT))&RCM_SRIE_SACKERR_MASK) /**< RCM_SRIE.SACKERR Field                  */
/** @} */

/** @} */ /* End group RCM_Register_Masks_GROUP */


/* RCM - Peripheral instance base addresses */
#define RCM_BasePtr                    0x4007F000UL //!< Peripheral base address
#define RCM                            ((RCM_Type *) RCM_BasePtr) //!< Freescale base pointer
#define RCM_BASE_PTR                   (RCM) //!< Freescale style base pointer
#define RCM_IRQS { RCM_IRQn,  }


/** @} */ /* End group RCM_Peripheral_access_layer_GROUP */


/** @brief C Struct for RTC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup RTC_Peripheral_access_layer_GROUP RTC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           RTC (file:RTC_S32K14x)               ================ */
/* ================================================================================ */

/**
 * @brief Secure Real Time Clock
 */
/**
 * @struct RTC_Type
 * @brief  C Struct allowing access to RTC registers
 */
typedef struct RTC_Type {
   __IO uint32_t  TSR;                          /**< 0000: Time Seconds Register                                        */
   __IO uint32_t  TPR;                          /**< 0004: Time Prescaler Register                                      */
   __IO uint32_t  TAR;                          /**< 0008: Time Alarm Register                                          */
   __IO uint32_t  TCR;                          /**< 000C: Time Compensation Register                                   */
   __IO uint32_t  CR;                           /**< 0010: Control Register                                             */
   __IO uint32_t  SR;                           /**< 0014: Status Register                                              */
   __IO uint32_t  LR;                           /**< 0018: Lock Register                                                */
   __IO uint32_t  IER;                          /**< 001C: Interrupt Enable Register                                    */
} RTC_Type;


/** @brief Register Masks for RTC */

/* -------------------------------------------------------------------------------- */
/* -----------     'RTC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup RTC_Register_Masks_GROUP RTC Register Masks */
/** @{ */

/** @name TSR - Time Seconds Register */ /** @{ */
#define RTC_TSR_TSR_MASK                         (0xFFFFFFFFU)                                       /**< RTC_TSR.TSR Mask                        */
#define RTC_TSR_TSR_SHIFT                        (0U)                                                /**< RTC_TSR.TSR Position                    */
#define RTC_TSR_TSR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TSR_TSR_SHIFT))&RTC_TSR_TSR_MASK) /**< RTC_TSR.TSR Field                       */
/** @} */

/** @name TPR - Time Prescaler Register */ /** @{ */
#define RTC_TPR_TPR_MASK                         (0xFFFFU)                                           /**< RTC_TPR.TPR Mask                        */
#define RTC_TPR_TPR_SHIFT                        (0U)                                                /**< RTC_TPR.TPR Position                    */
#define RTC_TPR_TPR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TPR_TPR_SHIFT))&RTC_TPR_TPR_MASK) /**< RTC_TPR.TPR Field                       */
/** @} */

/** @name TAR - Time Alarm Register */ /** @{ */
#define RTC_TAR_TAR_MASK                         (0xFFFFFFFFU)                                       /**< RTC_TAR.TAR Mask                        */
#define RTC_TAR_TAR_SHIFT                        (0U)                                                /**< RTC_TAR.TAR Position                    */
#define RTC_TAR_TAR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TAR_TAR_SHIFT))&RTC_TAR_TAR_MASK) /**< RTC_TAR.TAR Field                       */
/** @} */

/** @name TCR - Time Compensation Register */ /** @{ */
#define RTC_TCR_TCR_MASK                         (0xFFU)                                             /**< RTC_TCR.TCR Mask                        */
#define RTC_TCR_TCR_SHIFT                        (0U)                                                /**< RTC_TCR.TCR Position                    */
#define RTC_TCR_TCR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TCR_TCR_SHIFT))&RTC_TCR_TCR_MASK) /**< RTC_TCR.TCR Field                       */
#define RTC_TCR_CIR_MASK                         (0xFF00U)                                           /**< RTC_TCR.CIR Mask                        */
#define RTC_TCR_CIR_SHIFT                        (8U)                                                /**< RTC_TCR.CIR Position                    */
#define RTC_TCR_CIR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TCR_CIR_SHIFT))&RTC_TCR_CIR_MASK) /**< RTC_TCR.CIR Field                       */
#define RTC_TCR_TCV_MASK                         (0xFF0000U)                                         /**< RTC_TCR.TCV Mask                        */
#define RTC_TCR_TCV_SHIFT                        (16U)                                               /**< RTC_TCR.TCV Position                    */
#define RTC_TCR_TCV(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TCR_TCV_SHIFT))&RTC_TCR_TCV_MASK) /**< RTC_TCR.TCV Field                       */
#define RTC_TCR_CIC_MASK                         (0xFF000000U)                                       /**< RTC_TCR.CIC Mask                        */
#define RTC_TCR_CIC_SHIFT                        (24U)                                               /**< RTC_TCR.CIC Position                    */
#define RTC_TCR_CIC(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TCR_CIC_SHIFT))&RTC_TCR_CIC_MASK) /**< RTC_TCR.CIC Field                       */
/** @} */

/** @name CR - Control Register */ /** @{ */
#define RTC_CR_SWR_MASK                          (0x1U)                                              /**< RTC_CR.SWR Mask                         */
#define RTC_CR_SWR_SHIFT                         (0U)                                                /**< RTC_CR.SWR Position                     */
#define RTC_CR_SWR(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_CR_SWR_SHIFT))&RTC_CR_SWR_MASK) /**< RTC_CR.SWR Field                        */
#define RTC_CR_SUP_MASK                          (0x4U)                                              /**< RTC_CR.SUP Mask                         */
#define RTC_CR_SUP_SHIFT                         (2U)                                                /**< RTC_CR.SUP Position                     */
#define RTC_CR_SUP(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_CR_SUP_SHIFT))&RTC_CR_SUP_MASK) /**< RTC_CR.SUP Field                        */
#define RTC_CR_UM_MASK                           (0x8U)                                              /**< RTC_CR.UM Mask                          */
#define RTC_CR_UM_SHIFT                          (3U)                                                /**< RTC_CR.UM Position                      */
#define RTC_CR_UM(x)                             (((uint32_t)(((uint32_t)(x))<<RTC_CR_UM_SHIFT))&RTC_CR_UM_MASK) /**< RTC_CR.UM Field                         */
#define RTC_CR_CPS_MASK                          (0x20U)                                             /**< RTC_CR.CPS Mask                         */
#define RTC_CR_CPS_SHIFT                         (5U)                                                /**< RTC_CR.CPS Position                     */
#define RTC_CR_CPS(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_CR_CPS_SHIFT))&RTC_CR_CPS_MASK) /**< RTC_CR.CPS Field                        */
#define RTC_CR_LPOS_MASK                         (0x80U)                                             /**< RTC_CR.LPOS Mask                        */
#define RTC_CR_LPOS_SHIFT                        (7U)                                                /**< RTC_CR.LPOS Position                    */
#define RTC_CR_LPOS(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_CR_LPOS_SHIFT))&RTC_CR_LPOS_MASK) /**< RTC_CR.LPOS Field                       */
#define RTC_CR_CPE_MASK                          (0x1000000U)                                        /**< RTC_CR.CPE Mask                         */
#define RTC_CR_CPE_SHIFT                         (24U)                                               /**< RTC_CR.CPE Position                     */
#define RTC_CR_CPE(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_CR_CPE_SHIFT))&RTC_CR_CPE_MASK) /**< RTC_CR.CPE Field                        */
/** @} */

/** @name SR - Status Register */ /** @{ */
#define RTC_SR_TIF_MASK                          (0x1U)                                              /**< RTC_SR.TIF Mask                         */
#define RTC_SR_TIF_SHIFT                         (0U)                                                /**< RTC_SR.TIF Position                     */
#define RTC_SR_TIF(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_SR_TIF_SHIFT))&RTC_SR_TIF_MASK) /**< RTC_SR.TIF Field                        */
#define RTC_SR_TOF_MASK                          (0x2U)                                              /**< RTC_SR.TOF Mask                         */
#define RTC_SR_TOF_SHIFT                         (1U)                                                /**< RTC_SR.TOF Position                     */
#define RTC_SR_TOF(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_SR_TOF_SHIFT))&RTC_SR_TOF_MASK) /**< RTC_SR.TOF Field                        */
#define RTC_SR_TAF_MASK                          (0x4U)                                              /**< RTC_SR.TAF Mask                         */
#define RTC_SR_TAF_SHIFT                         (2U)                                                /**< RTC_SR.TAF Position                     */
#define RTC_SR_TAF(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_SR_TAF_SHIFT))&RTC_SR_TAF_MASK) /**< RTC_SR.TAF Field                        */
#define RTC_SR_TCE_MASK                          (0x10U)                                             /**< RTC_SR.TCE Mask                         */
#define RTC_SR_TCE_SHIFT                         (4U)                                                /**< RTC_SR.TCE Position                     */
#define RTC_SR_TCE(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_SR_TCE_SHIFT))&RTC_SR_TCE_MASK) /**< RTC_SR.TCE Field                        */
/** @} */

/** @name LR - Lock Register */ /** @{ */
#define RTC_LR_TCL_MASK                          (0x8U)                                              /**< RTC_LR.TCL Mask                         */
#define RTC_LR_TCL_SHIFT                         (3U)                                                /**< RTC_LR.TCL Position                     */
#define RTC_LR_TCL(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_LR_TCL_SHIFT))&RTC_LR_TCL_MASK) /**< RTC_LR.TCL Field                        */
#define RTC_LR_CRL_MASK                          (0x10U)                                             /**< RTC_LR.CRL Mask                         */
#define RTC_LR_CRL_SHIFT                         (4U)                                                /**< RTC_LR.CRL Position                     */
#define RTC_LR_CRL(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_LR_CRL_SHIFT))&RTC_LR_CRL_MASK) /**< RTC_LR.CRL Field                        */
#define RTC_LR_SRL_MASK                          (0x20U)                                             /**< RTC_LR.SRL Mask                         */
#define RTC_LR_SRL_SHIFT                         (5U)                                                /**< RTC_LR.SRL Position                     */
#define RTC_LR_SRL(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_LR_SRL_SHIFT))&RTC_LR_SRL_MASK) /**< RTC_LR.SRL Field                        */
#define RTC_LR_LRL_MASK                          (0x40U)                                             /**< RTC_LR.LRL Mask                         */
#define RTC_LR_LRL_SHIFT                         (6U)                                                /**< RTC_LR.LRL Position                     */
#define RTC_LR_LRL(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_LR_LRL_SHIFT))&RTC_LR_LRL_MASK) /**< RTC_LR.LRL Field                        */
/** @} */

/** @name IER - Interrupt Enable Register */ /** @{ */
#define RTC_IER_TIIE_MASK                        (0x1U)                                              /**< RTC_IER.TIIE Mask                       */
#define RTC_IER_TIIE_SHIFT                       (0U)                                                /**< RTC_IER.TIIE Position                   */
#define RTC_IER_TIIE(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_IER_TIIE_SHIFT))&RTC_IER_TIIE_MASK) /**< RTC_IER.TIIE Field                      */
#define RTC_IER_TOIE_MASK                        (0x2U)                                              /**< RTC_IER.TOIE Mask                       */
#define RTC_IER_TOIE_SHIFT                       (1U)                                                /**< RTC_IER.TOIE Position                   */
#define RTC_IER_TOIE(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_IER_TOIE_SHIFT))&RTC_IER_TOIE_MASK) /**< RTC_IER.TOIE Field                      */
#define RTC_IER_TAIE_MASK                        (0x4U)                                              /**< RTC_IER.TAIE Mask                       */
#define RTC_IER_TAIE_SHIFT                       (2U)                                                /**< RTC_IER.TAIE Position                   */
#define RTC_IER_TAIE(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_IER_TAIE_SHIFT))&RTC_IER_TAIE_MASK) /**< RTC_IER.TAIE Field                      */
#define RTC_IER_TSIE_MASK                        (0x10U)                                             /**< RTC_IER.TSIE Mask                       */
#define RTC_IER_TSIE_SHIFT                       (4U)                                                /**< RTC_IER.TSIE Position                   */
#define RTC_IER_TSIE(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_IER_TSIE_SHIFT))&RTC_IER_TSIE_MASK) /**< RTC_IER.TSIE Field                      */
#define RTC_IER_TSIC_MASK                        (0x70000U)                                          /**< RTC_IER.TSIC Mask                       */
#define RTC_IER_TSIC_SHIFT                       (16U)                                               /**< RTC_IER.TSIC Position                   */
#define RTC_IER_TSIC(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_IER_TSIC_SHIFT))&RTC_IER_TSIC_MASK) /**< RTC_IER.TSIC Field                      */
/** @} */

/** @} */ /* End group RTC_Register_Masks_GROUP */


/* RTC - Peripheral instance base addresses */
#define RTC_BasePtr                    0x4003D000UL //!< Peripheral base address
#define RTC                            ((RTC_Type *) RTC_BasePtr) //!< Freescale base pointer
#define RTC_BASE_PTR                   (RTC) //!< Freescale style base pointer
#define RTC_IRQS { RTC_IRQn, RTC_Seconds_IRQn,  }


/** @} */ /* End group RTC_Peripheral_access_layer_GROUP */


/** @brief C Struct for SCG */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SCG_Peripheral_access_layer_GROUP SCG Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SCG (file:SCG_S32K14x)               ================ */
/* ================================================================================ */

/**
 * @brief System Clock Generator
 */
/**
 * @struct SCG_Type
 * @brief  C Struct allowing access to SCG registers
 */
typedef struct SCG_Type {
   __I  uint32_t  VERID;                        /**< 0000: Version ID Register                                          */
   __I  uint32_t  PARAM;                        /**< 0004: Parameter Register                                           */
        uint8_t   RESERVED_0[8];                /**< 0008: 0x8 bytes                                                    */
   __I  uint32_t  CSR;                          /**< 0010: Clock Status Register                                        */
   __IO uint32_t  RCCR;                         /**< 0014: Run Clock Control Register                                   */
   __IO uint32_t  VCCR;                         /**< 0018: VLPR Clock Control Register                                  */
   __IO uint32_t  HCCR;                         /**< 001C: HSRUN Clock Control Register                                 */
   __IO uint32_t  CLKOUTCNFG;                   /**< 0020: SCG CLKOUT Configuration Register                            */
        uint8_t   RESERVED_1[220];              /**< 0024: 0xDC bytes                                                   */
   __IO uint32_t  SOSCCSR;                      /**< 0100: System OSC Control Status Register                           */
   __IO uint32_t  SOSCDIV;                      /**< 0104: System OSC Divide Register                                   */
   __IO uint32_t  SOSCCFG;                      /**< 0108: System Oscillator Configuration Register                     */
        uint8_t   RESERVED_2[244];              /**< 010C: 0xF4 bytes                                                   */
   __IO uint32_t  SIRCCSR;                      /**< 0200: Slow IRC Control Status Register                             */
   __IO uint32_t  SIRCDIV;                      /**< 0204: Slow IRC Divide Register                                     */
   __IO uint32_t  SIRCCFG;                      /**< 0208: Slow IRC Configuration Register                              */
        uint8_t   RESERVED_3[244];              /**< 020C: 0xF4 bytes                                                   */
   __IO uint32_t  FIRCCSR;                      /**< 0300: Fast IRC Control Status Register                             */
   __IO uint32_t  FIRCDIV;                      /**< 0304: Fast IRC Divide Register                                     */
   __IO uint32_t  FIRCCFG;                      /**< 0308: Fast IRC Configuration Register                              */
        uint8_t   RESERVED_4[756];              /**< 030C: 0x2F4 bytes                                                  */
   __IO uint32_t  SPLLCSR;                      /**< 0600: System PLL Control Status Register                           */
   __IO uint32_t  SPLLDIV;                      /**< 0604: System PLL Divide Register                                   */
   __IO uint32_t  SPLLCFG;                      /**< 0608: System PLL Configuration Register                            */
} SCG_Type;


/** @brief Register Masks for SCG */

/* -------------------------------------------------------------------------------- */
/* -----------     'SCG' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup SCG_Register_Masks_GROUP SCG Register Masks */
/** @{ */

/** @name VERID - Version ID Register */ /** @{ */
#define SCG_VERID_VERSION_MASK                   (0xFFFFFFFFU)                                       /**< SCG_VERID.VERSION Mask                  */
#define SCG_VERID_VERSION_SHIFT                  (0U)                                                /**< SCG_VERID.VERSION Position              */
#define SCG_VERID_VERSION(x)                     (((uint32_t)(((uint32_t)(x))<<SCG_VERID_VERSION_SHIFT))&SCG_VERID_VERSION_MASK) /**< SCG_VERID.VERSION Field                 */
/** @} */

/** @name PARAM - Parameter Register */ /** @{ */
#define SCG_PARAM_CLKPRES_MASK                   (0xFFU)                                             /**< SCG_PARAM.CLKPRES Mask                  */
#define SCG_PARAM_CLKPRES_SHIFT                  (0U)                                                /**< SCG_PARAM.CLKPRES Position              */
#define SCG_PARAM_CLKPRES(x)                     (((uint32_t)(((uint32_t)(x))<<SCG_PARAM_CLKPRES_SHIFT))&SCG_PARAM_CLKPRES_MASK) /**< SCG_PARAM.CLKPRES Field                 */
#define SCG_PARAM_DIVPRES_MASK                   (0xF8000000U)                                       /**< SCG_PARAM.DIVPRES Mask                  */
#define SCG_PARAM_DIVPRES_SHIFT                  (27U)                                               /**< SCG_PARAM.DIVPRES Position              */
#define SCG_PARAM_DIVPRES(x)                     (((uint32_t)(((uint32_t)(x))<<SCG_PARAM_DIVPRES_SHIFT))&SCG_PARAM_DIVPRES_MASK) /**< SCG_PARAM.DIVPRES Field                 */
/** @} */

/** @name CSR - Clock Status Register */ /** @{ */
#define SCG_CSR_DIVSLOW_MASK                     (0xFU)                                              /**< SCG_CSR.DIVSLOW Mask                    */
#define SCG_CSR_DIVSLOW_SHIFT                    (0U)                                                /**< SCG_CSR.DIVSLOW Position                */
#define SCG_CSR_DIVSLOW(x)                       (((uint32_t)(((uint32_t)(x))<<SCG_CSR_DIVSLOW_SHIFT))&SCG_CSR_DIVSLOW_MASK) /**< SCG_CSR.DIVSLOW Field                   */
#define SCG_CSR_DIVBUS_MASK                      (0xF0U)                                             /**< SCG_CSR.DIVBUS Mask                     */
#define SCG_CSR_DIVBUS_SHIFT                     (4U)                                                /**< SCG_CSR.DIVBUS Position                 */
#define SCG_CSR_DIVBUS(x)                        (((uint32_t)(((uint32_t)(x))<<SCG_CSR_DIVBUS_SHIFT))&SCG_CSR_DIVBUS_MASK) /**< SCG_CSR.DIVBUS Field                    */
#define SCG_CSR_DIVCORE_MASK                     (0xF0000U)                                          /**< SCG_CSR.DIVCORE Mask                    */
#define SCG_CSR_DIVCORE_SHIFT                    (16U)                                               /**< SCG_CSR.DIVCORE Position                */
#define SCG_CSR_DIVCORE(x)                       (((uint32_t)(((uint32_t)(x))<<SCG_CSR_DIVCORE_SHIFT))&SCG_CSR_DIVCORE_MASK) /**< SCG_CSR.DIVCORE Field                   */
#define SCG_CSR_SCS_MASK                         (0xF000000U)                                        /**< SCG_CSR.SCS Mask                        */
#define SCG_CSR_SCS_SHIFT                        (24U)                                               /**< SCG_CSR.SCS Position                    */
#define SCG_CSR_SCS(x)                           (((uint32_t)(((uint32_t)(x))<<SCG_CSR_SCS_SHIFT))&SCG_CSR_SCS_MASK) /**< SCG_CSR.SCS Field                       */
/** @} */

/** @name RCCR - Run Clock Control Register */ /** @{ */
#define SCG_RCCR_DIVSLOW_MASK                    (0xFU)                                              /**< SCG_RCCR.DIVSLOW Mask                   */
#define SCG_RCCR_DIVSLOW_SHIFT                   (0U)                                                /**< SCG_RCCR.DIVSLOW Position               */
#define SCG_RCCR_DIVSLOW(x)                      (((uint32_t)(((uint32_t)(x))<<SCG_RCCR_DIVSLOW_SHIFT))&SCG_RCCR_DIVSLOW_MASK) /**< SCG_RCCR.DIVSLOW Field                  */
#define SCG_RCCR_DIVBUS_MASK                     (0xF0U)                                             /**< SCG_RCCR.DIVBUS Mask                    */
#define SCG_RCCR_DIVBUS_SHIFT                    (4U)                                                /**< SCG_RCCR.DIVBUS Position                */
#define SCG_RCCR_DIVBUS(x)                       (((uint32_t)(((uint32_t)(x))<<SCG_RCCR_DIVBUS_SHIFT))&SCG_RCCR_DIVBUS_MASK) /**< SCG_RCCR.DIVBUS Field                   */
#define SCG_RCCR_DIVCORE_MASK                    (0xF0000U)                                          /**< SCG_RCCR.DIVCORE Mask                   */
#define SCG_RCCR_DIVCORE_SHIFT                   (16U)                                               /**< SCG_RCCR.DIVCORE Position               */
#define SCG_RCCR_DIVCORE(x)                      (((uint32_t)(((uint32_t)(x))<<SCG_RCCR_DIVCORE_SHIFT))&SCG_RCCR_DIVCORE_MASK) /**< SCG_RCCR.DIVCORE Field                  */
#define SCG_RCCR_SCS_MASK                        (0xF000000U)                                        /**< SCG_RCCR.SCS Mask                       */
#define SCG_RCCR_SCS_SHIFT                       (24U)                                               /**< SCG_RCCR.SCS Position                   */
#define SCG_RCCR_SCS(x)                          (((uint32_t)(((uint32_t)(x))<<SCG_RCCR_SCS_SHIFT))&SCG_RCCR_SCS_MASK) /**< SCG_RCCR.SCS Field                      */
/** @} */

/** @name VCCR - VLPR Clock Control Register */ /** @{ */
#define SCG_VCCR_DIVSLOW_MASK                    (0xFU)                                              /**< SCG_VCCR.DIVSLOW Mask                   */
#define SCG_VCCR_DIVSLOW_SHIFT                   (0U)                                                /**< SCG_VCCR.DIVSLOW Position               */
#define SCG_VCCR_DIVSLOW(x)                      (((uint32_t)(((uint32_t)(x))<<SCG_VCCR_DIVSLOW_SHIFT))&SCG_VCCR_DIVSLOW_MASK) /**< SCG_VCCR.DIVSLOW Field                  */
#define SCG_VCCR_DIVBUS_MASK                     (0xF0U)                                             /**< SCG_VCCR.DIVBUS Mask                    */
#define SCG_VCCR_DIVBUS_SHIFT                    (4U)                                                /**< SCG_VCCR.DIVBUS Position                */
#define SCG_VCCR_DIVBUS(x)                       (((uint32_t)(((uint32_t)(x))<<SCG_VCCR_DIVBUS_SHIFT))&SCG_VCCR_DIVBUS_MASK) /**< SCG_VCCR.DIVBUS Field                   */
#define SCG_VCCR_DIVCORE_MASK                    (0xF0000U)                                          /**< SCG_VCCR.DIVCORE Mask                   */
#define SCG_VCCR_DIVCORE_SHIFT                   (16U)                                               /**< SCG_VCCR.DIVCORE Position               */
#define SCG_VCCR_DIVCORE(x)                      (((uint32_t)(((uint32_t)(x))<<SCG_VCCR_DIVCORE_SHIFT))&SCG_VCCR_DIVCORE_MASK) /**< SCG_VCCR.DIVCORE Field                  */
#define SCG_VCCR_SCS_MASK                        (0xF000000U)                                        /**< SCG_VCCR.SCS Mask                       */
#define SCG_VCCR_SCS_SHIFT                       (24U)                                               /**< SCG_VCCR.SCS Position                   */
#define SCG_VCCR_SCS(x)                          (((uint32_t)(((uint32_t)(x))<<SCG_VCCR_SCS_SHIFT))&SCG_VCCR_SCS_MASK) /**< SCG_VCCR.SCS Field                      */
/** @} */

/** @name HCCR - HSRUN Clock Control Register */ /** @{ */
#define SCG_HCCR_DIVSLOW_MASK                    (0xFU)                                              /**< SCG_HCCR.DIVSLOW Mask                   */
#define SCG_HCCR_DIVSLOW_SHIFT                   (0U)                                                /**< SCG_HCCR.DIVSLOW Position               */
#define SCG_HCCR_DIVSLOW(x)                      (((uint32_t)(((uint32_t)(x))<<SCG_HCCR_DIVSLOW_SHIFT))&SCG_HCCR_DIVSLOW_MASK) /**< SCG_HCCR.DIVSLOW Field                  */
#define SCG_HCCR_DIVBUS_MASK                     (0xF0U)                                             /**< SCG_HCCR.DIVBUS Mask                    */
#define SCG_HCCR_DIVBUS_SHIFT                    (4U)                                                /**< SCG_HCCR.DIVBUS Position                */
#define SCG_HCCR_DIVBUS(x)                       (((uint32_t)(((uint32_t)(x))<<SCG_HCCR_DIVBUS_SHIFT))&SCG_HCCR_DIVBUS_MASK) /**< SCG_HCCR.DIVBUS Field                   */
#define SCG_HCCR_DIVCORE_MASK                    (0xF0000U)                                          /**< SCG_HCCR.DIVCORE Mask                   */
#define SCG_HCCR_DIVCORE_SHIFT                   (16U)                                               /**< SCG_HCCR.DIVCORE Position               */
#define SCG_HCCR_DIVCORE(x)                      (((uint32_t)(((uint32_t)(x))<<SCG_HCCR_DIVCORE_SHIFT))&SCG_HCCR_DIVCORE_MASK) /**< SCG_HCCR.DIVCORE Field                  */
#define SCG_HCCR_SCS_MASK                        (0xF000000U)                                        /**< SCG_HCCR.SCS Mask                       */
#define SCG_HCCR_SCS_SHIFT                       (24U)                                               /**< SCG_HCCR.SCS Position                   */
#define SCG_HCCR_SCS(x)                          (((uint32_t)(((uint32_t)(x))<<SCG_HCCR_SCS_SHIFT))&SCG_HCCR_SCS_MASK) /**< SCG_HCCR.SCS Field                      */
/** @} */

/** @name CLKOUTCNFG - SCG CLKOUT Configuration Register */ /** @{ */
#define SCG_CLKOUTCNFG_CLKOUTSEL_MASK            (0xF000000U)                                        /**< SCG_CLKOUTCNFG.CLKOUTSEL Mask           */
#define SCG_CLKOUTCNFG_CLKOUTSEL_SHIFT           (24U)                                               /**< SCG_CLKOUTCNFG.CLKOUTSEL Position       */
#define SCG_CLKOUTCNFG_CLKOUTSEL(x)              (((uint32_t)(((uint32_t)(x))<<SCG_CLKOUTCNFG_CLKOUTSEL_SHIFT))&SCG_CLKOUTCNFG_CLKOUTSEL_MASK) /**< SCG_CLKOUTCNFG.CLKOUTSEL Field          */
/** @} */

/** @name SOSCCSR - System OSC Control Status Register */ /** @{ */
#define SCG_SOSCCSR_SOSCEN_MASK                  (0x1U)                                              /**< SCG_SOSCCSR.SOSCEN Mask                 */
#define SCG_SOSCCSR_SOSCEN_SHIFT                 (0U)                                                /**< SCG_SOSCCSR.SOSCEN Position             */
#define SCG_SOSCCSR_SOSCEN(x)                    (((uint32_t)(((uint32_t)(x))<<SCG_SOSCCSR_SOSCEN_SHIFT))&SCG_SOSCCSR_SOSCEN_MASK) /**< SCG_SOSCCSR.SOSCEN Field                */
#define SCG_SOSCCSR_SOSCCM_MASK                  (0x10000U)                                          /**< SCG_SOSCCSR.SOSCCM Mask                 */
#define SCG_SOSCCSR_SOSCCM_SHIFT                 (16U)                                               /**< SCG_SOSCCSR.SOSCCM Position             */
#define SCG_SOSCCSR_SOSCCM(x)                    (((uint32_t)(((uint32_t)(x))<<SCG_SOSCCSR_SOSCCM_SHIFT))&SCG_SOSCCSR_SOSCCM_MASK) /**< SCG_SOSCCSR.SOSCCM Field                */
#define SCG_SOSCCSR_SOSCCMRE_MASK                (0x20000U)                                          /**< SCG_SOSCCSR.SOSCCMRE Mask               */
#define SCG_SOSCCSR_SOSCCMRE_SHIFT               (17U)                                               /**< SCG_SOSCCSR.SOSCCMRE Position           */
#define SCG_SOSCCSR_SOSCCMRE(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_SOSCCSR_SOSCCMRE_SHIFT))&SCG_SOSCCSR_SOSCCMRE_MASK) /**< SCG_SOSCCSR.SOSCCMRE Field              */
#define SCG_SOSCCSR_LK_MASK                      (0x800000U)                                         /**< SCG_SOSCCSR.LK Mask                     */
#define SCG_SOSCCSR_LK_SHIFT                     (23U)                                               /**< SCG_SOSCCSR.LK Position                 */
#define SCG_SOSCCSR_LK(x)                        (((uint32_t)(((uint32_t)(x))<<SCG_SOSCCSR_LK_SHIFT))&SCG_SOSCCSR_LK_MASK) /**< SCG_SOSCCSR.LK Field                    */
#define SCG_SOSCCSR_SOSCVLD_MASK                 (0x1000000U)                                        /**< SCG_SOSCCSR.SOSCVLD Mask                */
#define SCG_SOSCCSR_SOSCVLD_SHIFT                (24U)                                               /**< SCG_SOSCCSR.SOSCVLD Position            */
#define SCG_SOSCCSR_SOSCVLD(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_SOSCCSR_SOSCVLD_SHIFT))&SCG_SOSCCSR_SOSCVLD_MASK) /**< SCG_SOSCCSR.SOSCVLD Field               */
#define SCG_SOSCCSR_SOSCSEL_MASK                 (0x2000000U)                                        /**< SCG_SOSCCSR.SOSCSEL Mask                */
#define SCG_SOSCCSR_SOSCSEL_SHIFT                (25U)                                               /**< SCG_SOSCCSR.SOSCSEL Position            */
#define SCG_SOSCCSR_SOSCSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_SOSCCSR_SOSCSEL_SHIFT))&SCG_SOSCCSR_SOSCSEL_MASK) /**< SCG_SOSCCSR.SOSCSEL Field               */
#define SCG_SOSCCSR_SOSCERR_MASK                 (0x4000000U)                                        /**< SCG_SOSCCSR.SOSCERR Mask                */
#define SCG_SOSCCSR_SOSCERR_SHIFT                (26U)                                               /**< SCG_SOSCCSR.SOSCERR Position            */
#define SCG_SOSCCSR_SOSCERR(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_SOSCCSR_SOSCERR_SHIFT))&SCG_SOSCCSR_SOSCERR_MASK) /**< SCG_SOSCCSR.SOSCERR Field               */
/** @} */

/** @name SOSCDIV - System OSC Divide Register */ /** @{ */
#define SCG_SOSCDIV_SOSCDIV1_MASK                (0x7U)                                              /**< SCG_SOSCDIV.SOSCDIV1 Mask               */
#define SCG_SOSCDIV_SOSCDIV1_SHIFT               (0U)                                                /**< SCG_SOSCDIV.SOSCDIV1 Position           */
#define SCG_SOSCDIV_SOSCDIV1(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_SOSCDIV_SOSCDIV1_SHIFT))&SCG_SOSCDIV_SOSCDIV1_MASK) /**< SCG_SOSCDIV.SOSCDIV1 Field              */
#define SCG_SOSCDIV_SOSCDIV2_MASK                (0x700U)                                            /**< SCG_SOSCDIV.SOSCDIV2 Mask               */
#define SCG_SOSCDIV_SOSCDIV2_SHIFT               (8U)                                                /**< SCG_SOSCDIV.SOSCDIV2 Position           */
#define SCG_SOSCDIV_SOSCDIV2(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_SOSCDIV_SOSCDIV2_SHIFT))&SCG_SOSCDIV_SOSCDIV2_MASK) /**< SCG_SOSCDIV.SOSCDIV2 Field              */
/** @} */

/** @name SOSCCFG - System Oscillator Configuration Register */ /** @{ */
#define SCG_SOSCCFG_EREFS_MASK                   (0x4U)                                              /**< SCG_SOSCCFG.EREFS Mask                  */
#define SCG_SOSCCFG_EREFS_SHIFT                  (2U)                                                /**< SCG_SOSCCFG.EREFS Position              */
#define SCG_SOSCCFG_EREFS(x)                     (((uint32_t)(((uint32_t)(x))<<SCG_SOSCCFG_EREFS_SHIFT))&SCG_SOSCCFG_EREFS_MASK) /**< SCG_SOSCCFG.EREFS Field                 */
#define SCG_SOSCCFG_HGO_MASK                     (0x8U)                                              /**< SCG_SOSCCFG.HGO Mask                    */
#define SCG_SOSCCFG_HGO_SHIFT                    (3U)                                                /**< SCG_SOSCCFG.HGO Position                */
#define SCG_SOSCCFG_HGO(x)                       (((uint32_t)(((uint32_t)(x))<<SCG_SOSCCFG_HGO_SHIFT))&SCG_SOSCCFG_HGO_MASK) /**< SCG_SOSCCFG.HGO Field                   */
#define SCG_SOSCCFG_RANGE_MASK                   (0x30U)                                             /**< SCG_SOSCCFG.RANGE Mask                  */
#define SCG_SOSCCFG_RANGE_SHIFT                  (4U)                                                /**< SCG_SOSCCFG.RANGE Position              */
#define SCG_SOSCCFG_RANGE(x)                     (((uint32_t)(((uint32_t)(x))<<SCG_SOSCCFG_RANGE_SHIFT))&SCG_SOSCCFG_RANGE_MASK) /**< SCG_SOSCCFG.RANGE Field                 */
/** @} */

/** @name SIRCCSR - Slow IRC Control Status Register */ /** @{ */
#define SCG_SIRCCSR_SIRCEN_MASK                  (0x1U)                                              /**< SCG_SIRCCSR.SIRCEN Mask                 */
#define SCG_SIRCCSR_SIRCEN_SHIFT                 (0U)                                                /**< SCG_SIRCCSR.SIRCEN Position             */
#define SCG_SIRCCSR_SIRCEN(x)                    (((uint32_t)(((uint32_t)(x))<<SCG_SIRCCSR_SIRCEN_SHIFT))&SCG_SIRCCSR_SIRCEN_MASK) /**< SCG_SIRCCSR.SIRCEN Field                */
#define SCG_SIRCCSR_SIRCSTEN_MASK                (0x2U)                                              /**< SCG_SIRCCSR.SIRCSTEN Mask               */
#define SCG_SIRCCSR_SIRCSTEN_SHIFT               (1U)                                                /**< SCG_SIRCCSR.SIRCSTEN Position           */
#define SCG_SIRCCSR_SIRCSTEN(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_SIRCCSR_SIRCSTEN_SHIFT))&SCG_SIRCCSR_SIRCSTEN_MASK) /**< SCG_SIRCCSR.SIRCSTEN Field              */
#define SCG_SIRCCSR_SIRCLPEN_MASK                (0x4U)                                              /**< SCG_SIRCCSR.SIRCLPEN Mask               */
#define SCG_SIRCCSR_SIRCLPEN_SHIFT               (2U)                                                /**< SCG_SIRCCSR.SIRCLPEN Position           */
#define SCG_SIRCCSR_SIRCLPEN(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_SIRCCSR_SIRCLPEN_SHIFT))&SCG_SIRCCSR_SIRCLPEN_MASK) /**< SCG_SIRCCSR.SIRCLPEN Field              */
#define SCG_SIRCCSR_LK_MASK                      (0x800000U)                                         /**< SCG_SIRCCSR.LK Mask                     */
#define SCG_SIRCCSR_LK_SHIFT                     (23U)                                               /**< SCG_SIRCCSR.LK Position                 */
#define SCG_SIRCCSR_LK(x)                        (((uint32_t)(((uint32_t)(x))<<SCG_SIRCCSR_LK_SHIFT))&SCG_SIRCCSR_LK_MASK) /**< SCG_SIRCCSR.LK Field                    */
#define SCG_SIRCCSR_SIRCVLD_MASK                 (0x1000000U)                                        /**< SCG_SIRCCSR.SIRCVLD Mask                */
#define SCG_SIRCCSR_SIRCVLD_SHIFT                (24U)                                               /**< SCG_SIRCCSR.SIRCVLD Position            */
#define SCG_SIRCCSR_SIRCVLD(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_SIRCCSR_SIRCVLD_SHIFT))&SCG_SIRCCSR_SIRCVLD_MASK) /**< SCG_SIRCCSR.SIRCVLD Field               */
#define SCG_SIRCCSR_SIRCSEL_MASK                 (0x2000000U)                                        /**< SCG_SIRCCSR.SIRCSEL Mask                */
#define SCG_SIRCCSR_SIRCSEL_SHIFT                (25U)                                               /**< SCG_SIRCCSR.SIRCSEL Position            */
#define SCG_SIRCCSR_SIRCSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_SIRCCSR_SIRCSEL_SHIFT))&SCG_SIRCCSR_SIRCSEL_MASK) /**< SCG_SIRCCSR.SIRCSEL Field               */
/** @} */

/** @name SIRCDIV - Slow IRC Divide Register */ /** @{ */
#define SCG_SIRCDIV_SIRCDIV1_MASK                (0x7U)                                              /**< SCG_SIRCDIV.SIRCDIV1 Mask               */
#define SCG_SIRCDIV_SIRCDIV1_SHIFT               (0U)                                                /**< SCG_SIRCDIV.SIRCDIV1 Position           */
#define SCG_SIRCDIV_SIRCDIV1(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_SIRCDIV_SIRCDIV1_SHIFT))&SCG_SIRCDIV_SIRCDIV1_MASK) /**< SCG_SIRCDIV.SIRCDIV1 Field              */
#define SCG_SIRCDIV_SIRCDIV2_MASK                (0x700U)                                            /**< SCG_SIRCDIV.SIRCDIV2 Mask               */
#define SCG_SIRCDIV_SIRCDIV2_SHIFT               (8U)                                                /**< SCG_SIRCDIV.SIRCDIV2 Position           */
#define SCG_SIRCDIV_SIRCDIV2(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_SIRCDIV_SIRCDIV2_SHIFT))&SCG_SIRCDIV_SIRCDIV2_MASK) /**< SCG_SIRCDIV.SIRCDIV2 Field              */
/** @} */

/** @name SIRCCFG - Slow IRC Configuration Register */ /** @{ */
#define SCG_SIRCCFG_RANGE_MASK                   (0x1U)                                              /**< SCG_SIRCCFG.RANGE Mask                  */
#define SCG_SIRCCFG_RANGE_SHIFT                  (0U)                                                /**< SCG_SIRCCFG.RANGE Position              */
#define SCG_SIRCCFG_RANGE(x)                     (((uint32_t)(((uint32_t)(x))<<SCG_SIRCCFG_RANGE_SHIFT))&SCG_SIRCCFG_RANGE_MASK) /**< SCG_SIRCCFG.RANGE Field                 */
/** @} */

/** @name FIRCCSR - Fast IRC Control Status Register */ /** @{ */
#define SCG_FIRCCSR_FIRCEN_MASK                  (0x1U)                                              /**< SCG_FIRCCSR.FIRCEN Mask                 */
#define SCG_FIRCCSR_FIRCEN_SHIFT                 (0U)                                                /**< SCG_FIRCCSR.FIRCEN Position             */
#define SCG_FIRCCSR_FIRCEN(x)                    (((uint32_t)(((uint32_t)(x))<<SCG_FIRCCSR_FIRCEN_SHIFT))&SCG_FIRCCSR_FIRCEN_MASK) /**< SCG_FIRCCSR.FIRCEN Field                */
#define SCG_FIRCCSR_FIRCREGOFF_MASK              (0x8U)                                              /**< SCG_FIRCCSR.FIRCREGOFF Mask             */
#define SCG_FIRCCSR_FIRCREGOFF_SHIFT             (3U)                                                /**< SCG_FIRCCSR.FIRCREGOFF Position         */
#define SCG_FIRCCSR_FIRCREGOFF(x)                (((uint32_t)(((uint32_t)(x))<<SCG_FIRCCSR_FIRCREGOFF_SHIFT))&SCG_FIRCCSR_FIRCREGOFF_MASK) /**< SCG_FIRCCSR.FIRCREGOFF Field            */
#define SCG_FIRCCSR_LK_MASK                      (0x800000U)                                         /**< SCG_FIRCCSR.LK Mask                     */
#define SCG_FIRCCSR_LK_SHIFT                     (23U)                                               /**< SCG_FIRCCSR.LK Position                 */
#define SCG_FIRCCSR_LK(x)                        (((uint32_t)(((uint32_t)(x))<<SCG_FIRCCSR_LK_SHIFT))&SCG_FIRCCSR_LK_MASK) /**< SCG_FIRCCSR.LK Field                    */
#define SCG_FIRCCSR_FIRCVLD_MASK                 (0x1000000U)                                        /**< SCG_FIRCCSR.FIRCVLD Mask                */
#define SCG_FIRCCSR_FIRCVLD_SHIFT                (24U)                                               /**< SCG_FIRCCSR.FIRCVLD Position            */
#define SCG_FIRCCSR_FIRCVLD(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_FIRCCSR_FIRCVLD_SHIFT))&SCG_FIRCCSR_FIRCVLD_MASK) /**< SCG_FIRCCSR.FIRCVLD Field               */
#define SCG_FIRCCSR_FIRCSEL_MASK                 (0x2000000U)                                        /**< SCG_FIRCCSR.FIRCSEL Mask                */
#define SCG_FIRCCSR_FIRCSEL_SHIFT                (25U)                                               /**< SCG_FIRCCSR.FIRCSEL Position            */
#define SCG_FIRCCSR_FIRCSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_FIRCCSR_FIRCSEL_SHIFT))&SCG_FIRCCSR_FIRCSEL_MASK) /**< SCG_FIRCCSR.FIRCSEL Field               */
#define SCG_FIRCCSR_FIRCERR_MASK                 (0x4000000U)                                        /**< SCG_FIRCCSR.FIRCERR Mask                */
#define SCG_FIRCCSR_FIRCERR_SHIFT                (26U)                                               /**< SCG_FIRCCSR.FIRCERR Position            */
#define SCG_FIRCCSR_FIRCERR(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_FIRCCSR_FIRCERR_SHIFT))&SCG_FIRCCSR_FIRCERR_MASK) /**< SCG_FIRCCSR.FIRCERR Field               */
/** @} */

/** @name FIRCDIV - Fast IRC Divide Register */ /** @{ */
#define SCG_FIRCDIV_FIRCDIV1_MASK                (0x7U)                                              /**< SCG_FIRCDIV.FIRCDIV1 Mask               */
#define SCG_FIRCDIV_FIRCDIV1_SHIFT               (0U)                                                /**< SCG_FIRCDIV.FIRCDIV1 Position           */
#define SCG_FIRCDIV_FIRCDIV1(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_FIRCDIV_FIRCDIV1_SHIFT))&SCG_FIRCDIV_FIRCDIV1_MASK) /**< SCG_FIRCDIV.FIRCDIV1 Field              */
#define SCG_FIRCDIV_FIRCDIV2_MASK                (0x700U)                                            /**< SCG_FIRCDIV.FIRCDIV2 Mask               */
#define SCG_FIRCDIV_FIRCDIV2_SHIFT               (8U)                                                /**< SCG_FIRCDIV.FIRCDIV2 Position           */
#define SCG_FIRCDIV_FIRCDIV2(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_FIRCDIV_FIRCDIV2_SHIFT))&SCG_FIRCDIV_FIRCDIV2_MASK) /**< SCG_FIRCDIV.FIRCDIV2 Field              */
/** @} */

/** @name FIRCCFG - Fast IRC Configuration Register */ /** @{ */
#define SCG_FIRCCFG_RANGE_MASK                   (0x3U)                                              /**< SCG_FIRCCFG.RANGE Mask                  */
#define SCG_FIRCCFG_RANGE_SHIFT                  (0U)                                                /**< SCG_FIRCCFG.RANGE Position              */
#define SCG_FIRCCFG_RANGE(x)                     (((uint32_t)(((uint32_t)(x))<<SCG_FIRCCFG_RANGE_SHIFT))&SCG_FIRCCFG_RANGE_MASK) /**< SCG_FIRCCFG.RANGE Field                 */
/** @} */

/** @name SPLLCSR - System PLL Control Status Register */ /** @{ */
#define SCG_SPLLCSR_SPLLEN_MASK                  (0x1U)                                              /**< SCG_SPLLCSR.SPLLEN Mask                 */
#define SCG_SPLLCSR_SPLLEN_SHIFT                 (0U)                                                /**< SCG_SPLLCSR.SPLLEN Position             */
#define SCG_SPLLCSR_SPLLEN(x)                    (((uint32_t)(((uint32_t)(x))<<SCG_SPLLCSR_SPLLEN_SHIFT))&SCG_SPLLCSR_SPLLEN_MASK) /**< SCG_SPLLCSR.SPLLEN Field                */
#define SCG_SPLLCSR_SPLLCM_MASK                  (0x10000U)                                          /**< SCG_SPLLCSR.SPLLCM Mask                 */
#define SCG_SPLLCSR_SPLLCM_SHIFT                 (16U)                                               /**< SCG_SPLLCSR.SPLLCM Position             */
#define SCG_SPLLCSR_SPLLCM(x)                    (((uint32_t)(((uint32_t)(x))<<SCG_SPLLCSR_SPLLCM_SHIFT))&SCG_SPLLCSR_SPLLCM_MASK) /**< SCG_SPLLCSR.SPLLCM Field                */
#define SCG_SPLLCSR_SPLLCMRE_MASK                (0x20000U)                                          /**< SCG_SPLLCSR.SPLLCMRE Mask               */
#define SCG_SPLLCSR_SPLLCMRE_SHIFT               (17U)                                               /**< SCG_SPLLCSR.SPLLCMRE Position           */
#define SCG_SPLLCSR_SPLLCMRE(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_SPLLCSR_SPLLCMRE_SHIFT))&SCG_SPLLCSR_SPLLCMRE_MASK) /**< SCG_SPLLCSR.SPLLCMRE Field              */
#define SCG_SPLLCSR_LK_MASK                      (0x800000U)                                         /**< SCG_SPLLCSR.LK Mask                     */
#define SCG_SPLLCSR_LK_SHIFT                     (23U)                                               /**< SCG_SPLLCSR.LK Position                 */
#define SCG_SPLLCSR_LK(x)                        (((uint32_t)(((uint32_t)(x))<<SCG_SPLLCSR_LK_SHIFT))&SCG_SPLLCSR_LK_MASK) /**< SCG_SPLLCSR.LK Field                    */
#define SCG_SPLLCSR_SPLLVLD_MASK                 (0x1000000U)                                        /**< SCG_SPLLCSR.SPLLVLD Mask                */
#define SCG_SPLLCSR_SPLLVLD_SHIFT                (24U)                                               /**< SCG_SPLLCSR.SPLLVLD Position            */
#define SCG_SPLLCSR_SPLLVLD(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_SPLLCSR_SPLLVLD_SHIFT))&SCG_SPLLCSR_SPLLVLD_MASK) /**< SCG_SPLLCSR.SPLLVLD Field               */
#define SCG_SPLLCSR_SPLLSEL_MASK                 (0x2000000U)                                        /**< SCG_SPLLCSR.SPLLSEL Mask                */
#define SCG_SPLLCSR_SPLLSEL_SHIFT                (25U)                                               /**< SCG_SPLLCSR.SPLLSEL Position            */
#define SCG_SPLLCSR_SPLLSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_SPLLCSR_SPLLSEL_SHIFT))&SCG_SPLLCSR_SPLLSEL_MASK) /**< SCG_SPLLCSR.SPLLSEL Field               */
#define SCG_SPLLCSR_SPLLERR_MASK                 (0x4000000U)                                        /**< SCG_SPLLCSR.SPLLERR Mask                */
#define SCG_SPLLCSR_SPLLERR_SHIFT                (26U)                                               /**< SCG_SPLLCSR.SPLLERR Position            */
#define SCG_SPLLCSR_SPLLERR(x)                   (((uint32_t)(((uint32_t)(x))<<SCG_SPLLCSR_SPLLERR_SHIFT))&SCG_SPLLCSR_SPLLERR_MASK) /**< SCG_SPLLCSR.SPLLERR Field               */
/** @} */

/** @name SPLLDIV - System PLL Divide Register */ /** @{ */
#define SCG_SPLLDIV_SPLLDIV1_MASK                (0x7U)                                              /**< SCG_SPLLDIV.SPLLDIV1 Mask               */
#define SCG_SPLLDIV_SPLLDIV1_SHIFT               (0U)                                                /**< SCG_SPLLDIV.SPLLDIV1 Position           */
#define SCG_SPLLDIV_SPLLDIV1(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_SPLLDIV_SPLLDIV1_SHIFT))&SCG_SPLLDIV_SPLLDIV1_MASK) /**< SCG_SPLLDIV.SPLLDIV1 Field              */
#define SCG_SPLLDIV_SPLLDIV2_MASK                (0x700U)                                            /**< SCG_SPLLDIV.SPLLDIV2 Mask               */
#define SCG_SPLLDIV_SPLLDIV2_SHIFT               (8U)                                                /**< SCG_SPLLDIV.SPLLDIV2 Position           */
#define SCG_SPLLDIV_SPLLDIV2(x)                  (((uint32_t)(((uint32_t)(x))<<SCG_SPLLDIV_SPLLDIV2_SHIFT))&SCG_SPLLDIV_SPLLDIV2_MASK) /**< SCG_SPLLDIV.SPLLDIV2 Field              */
/** @} */

/** @name SPLLCFG - System PLL Configuration Register */ /** @{ */
#define SCG_SPLLCFG_PREDIV_MASK                  (0x700U)                                            /**< SCG_SPLLCFG.PREDIV Mask                 */
#define SCG_SPLLCFG_PREDIV_SHIFT                 (8U)                                                /**< SCG_SPLLCFG.PREDIV Position             */
#define SCG_SPLLCFG_PREDIV(x)                    (((uint32_t)(((uint32_t)(x))<<SCG_SPLLCFG_PREDIV_SHIFT))&SCG_SPLLCFG_PREDIV_MASK) /**< SCG_SPLLCFG.PREDIV Field                */
#define SCG_SPLLCFG_MULT_MASK                    (0x1F0000U)                                         /**< SCG_SPLLCFG.MULT Mask                   */
#define SCG_SPLLCFG_MULT_SHIFT                   (16U)                                               /**< SCG_SPLLCFG.MULT Position               */
#define SCG_SPLLCFG_MULT(x)                      (((uint32_t)(((uint32_t)(x))<<SCG_SPLLCFG_MULT_SHIFT))&SCG_SPLLCFG_MULT_MASK) /**< SCG_SPLLCFG.MULT Field                  */
/** @} */

/** @} */ /* End group SCG_Register_Masks_GROUP */


/* SCG - Peripheral instance base addresses */
#define SCG_BasePtr                    0x40064000UL //!< Peripheral base address
#define SCG                            ((SCG_Type *) SCG_BasePtr) //!< Freescale base pointer
#define SCG_BASE_PTR                   (SCG) //!< Freescale style base pointer
#define SCG_IRQS { SCG_IRQn,  }


/** @} */ /* End group SCG_Peripheral_access_layer_GROUP */


/** @brief C Struct for SIM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SIM_Peripheral_access_layer_GROUP SIM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SIM (file:SIM_S32K142)               ================ */
/* ================================================================================ */

/**
 * @brief System Integration Module
 */
/**
 * @struct SIM_Type
 * @brief  C Struct allowing access to SIM registers
 */
typedef struct SIM_Type {
        uint8_t   RESERVED_0[4];                /**< 0000: 0x4 bytes                                                    */
   __IO uint32_t  CHIPCTL;                      /**< 0004: Chip Control register                                        */
        uint8_t   RESERVED_1[4];                /**< 0008: 0x4 bytes                                                    */
   __IO uint32_t  FTMOPT0;                      /**< 000C: FTM Option Register 0                                        */
   __IO uint32_t  LPOCLKS;                      /**< 0010: LPO Clock Select Register                                    */
        uint8_t   RESERVED_2[4];                /**< 0014: 0x4 bytes                                                    */
   __IO uint32_t  ADCOPT;                       /**< 0018: ADC Options Register                                         */
   __IO uint32_t  FTMOPT1;                      /**< 001C: FTM Option Register 1                                        */
   __IO uint32_t  MISCTRL0;                     /**< 0020: Miscellaneous control register 0                             */
   __I  uint32_t  SDID;                         /**< 0024: System Device Identification Register                        */
        uint8_t   RESERVED_3[24];               /**< 0028: 0x18 bytes                                                   */
   __IO uint32_t  PLATCGC;                      /**< 0040: Platform Clock Gating Control Register                       */
        uint8_t   RESERVED_4[8];                /**< 0044: 0x8 bytes                                                    */
   __I  uint32_t  FCFG1;                        /**< 004C: Flash Configuration Register 1                               */
        uint8_t   RESERVED_5[4];                /**< 0050: 0x4 bytes                                                    */
   __I  uint32_t  UIDH;                         /**< 0054: Unique Identification Register High                          */
   __I  uint32_t  UIDMH;                        /**< 0058: Unique Identification Register Mid-High                      */
   __I  uint32_t  UIDML;                        /**< 005C: Unique Identification Register Mid Low                       */
   __I  uint32_t  UIDL;                         /**< 0060: Unique Identification Register Low                           */
        uint8_t   RESERVED_6[4];                /**< 0064: 0x4 bytes                                                    */
   __IO uint32_t  CLKDIV4;                      /**< 0068: System Clock Divider Register 4                              */
   __IO uint32_t  MISCTRL1;                     /**< 006C: Miscellaneous Control register 1                             */
} SIM_Type;


/** @brief Register Masks for SIM */

/* -------------------------------------------------------------------------------- */
/* -----------     'SIM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup SIM_Register_Masks_GROUP SIM Register Masks */
/** @{ */

/** @name CHIPCTL - Chip Control register */ /** @{ */
#define SIM_CHIPCTL_ADC_INTERLEAVE_EN_MASK       (0xFU)                                              /**< SIM_CHIPCTL.ADC_INTERLEAVE_EN Mask      */
#define SIM_CHIPCTL_ADC_INTERLEAVE_EN_SHIFT      (0U)                                                /**< SIM_CHIPCTL.ADC_INTERLEAVE_EN Position  */
#define SIM_CHIPCTL_ADC_INTERLEAVE_EN(x)         (((uint32_t)(((uint32_t)(x))<<SIM_CHIPCTL_ADC_INTERLEAVE_EN_SHIFT))&SIM_CHIPCTL_ADC_INTERLEAVE_EN_MASK) /**< SIM_CHIPCTL.ADC_INTERLEAVE_EN Field     */
#define SIM_CHIPCTL_CLKOUTSEL_MASK               (0xF0U)                                             /**< SIM_CHIPCTL.CLKOUTSEL Mask              */
#define SIM_CHIPCTL_CLKOUTSEL_SHIFT              (4U)                                                /**< SIM_CHIPCTL.CLKOUTSEL Position          */
#define SIM_CHIPCTL_CLKOUTSEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_CHIPCTL_CLKOUTSEL_SHIFT))&SIM_CHIPCTL_CLKOUTSEL_MASK) /**< SIM_CHIPCTL.CLKOUTSEL Field             */
#define SIM_CHIPCTL_CLKOUTDIV_MASK               (0x700U)                                            /**< SIM_CHIPCTL.CLKOUTDIV Mask              */
#define SIM_CHIPCTL_CLKOUTDIV_SHIFT              (8U)                                                /**< SIM_CHIPCTL.CLKOUTDIV Position          */
#define SIM_CHIPCTL_CLKOUTDIV(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_CHIPCTL_CLKOUTDIV_SHIFT))&SIM_CHIPCTL_CLKOUTDIV_MASK) /**< SIM_CHIPCTL.CLKOUTDIV Field             */
#define SIM_CHIPCTL_CLKOUTEN_MASK                (0x800U)                                            /**< SIM_CHIPCTL.CLKOUTEN Mask               */
#define SIM_CHIPCTL_CLKOUTEN_SHIFT               (11U)                                               /**< SIM_CHIPCTL.CLKOUTEN Position           */
#define SIM_CHIPCTL_CLKOUTEN(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_CHIPCTL_CLKOUTEN_SHIFT))&SIM_CHIPCTL_CLKOUTEN_MASK) /**< SIM_CHIPCTL.CLKOUTEN Field              */
#define SIM_CHIPCTL_TRACECLK_SEL_MASK            (0x1000U)                                           /**< SIM_CHIPCTL.TRACECLK_SEL Mask           */
#define SIM_CHIPCTL_TRACECLK_SEL_SHIFT           (12U)                                               /**< SIM_CHIPCTL.TRACECLK_SEL Position       */
#define SIM_CHIPCTL_TRACECLK_SEL(x)              (((uint32_t)(((uint32_t)(x))<<SIM_CHIPCTL_TRACECLK_SEL_SHIFT))&SIM_CHIPCTL_TRACECLK_SEL_MASK) /**< SIM_CHIPCTL.TRACECLK_SEL Field          */
#define SIM_CHIPCTL_PDB_BB_SEL_MASK              (0x2000U)                                           /**< SIM_CHIPCTL.PDB_BB_SEL Mask             */
#define SIM_CHIPCTL_PDB_BB_SEL_SHIFT             (13U)                                               /**< SIM_CHIPCTL.PDB_BB_SEL Position         */
#define SIM_CHIPCTL_PDB_BB_SEL(x)                (((uint32_t)(((uint32_t)(x))<<SIM_CHIPCTL_PDB_BB_SEL_SHIFT))&SIM_CHIPCTL_PDB_BB_SEL_MASK) /**< SIM_CHIPCTL.PDB_BB_SEL Field            */
#define SIM_CHIPCTL_ADC_SUPPLY_MASK              (0x70000U)                                          /**< SIM_CHIPCTL.ADC_SUPPLY Mask             */
#define SIM_CHIPCTL_ADC_SUPPLY_SHIFT             (16U)                                               /**< SIM_CHIPCTL.ADC_SUPPLY Position         */
#define SIM_CHIPCTL_ADC_SUPPLY(x)                (((uint32_t)(((uint32_t)(x))<<SIM_CHIPCTL_ADC_SUPPLY_SHIFT))&SIM_CHIPCTL_ADC_SUPPLY_MASK) /**< SIM_CHIPCTL.ADC_SUPPLY Field            */
#define SIM_CHIPCTL_ADC_SUPPLYEN_MASK            (0x80000U)                                          /**< SIM_CHIPCTL.ADC_SUPPLYEN Mask           */
#define SIM_CHIPCTL_ADC_SUPPLYEN_SHIFT           (19U)                                               /**< SIM_CHIPCTL.ADC_SUPPLYEN Position       */
#define SIM_CHIPCTL_ADC_SUPPLYEN(x)              (((uint32_t)(((uint32_t)(x))<<SIM_CHIPCTL_ADC_SUPPLYEN_SHIFT))&SIM_CHIPCTL_ADC_SUPPLYEN_MASK) /**< SIM_CHIPCTL.ADC_SUPPLYEN Field          */
#define SIM_CHIPCTL_SRAMU_RETEN_MASK             (0x100000U)                                         /**< SIM_CHIPCTL.SRAMU_RETEN Mask            */
#define SIM_CHIPCTL_SRAMU_RETEN_SHIFT            (20U)                                               /**< SIM_CHIPCTL.SRAMU_RETEN Position        */
#define SIM_CHIPCTL_SRAMU_RETEN(x)               (((uint32_t)(((uint32_t)(x))<<SIM_CHIPCTL_SRAMU_RETEN_SHIFT))&SIM_CHIPCTL_SRAMU_RETEN_MASK) /**< SIM_CHIPCTL.SRAMU_RETEN Field           */
#define SIM_CHIPCTL_SRAML_RETEN_MASK             (0x200000U)                                         /**< SIM_CHIPCTL.SRAML_RETEN Mask            */
#define SIM_CHIPCTL_SRAML_RETEN_SHIFT            (21U)                                               /**< SIM_CHIPCTL.SRAML_RETEN Position        */
#define SIM_CHIPCTL_SRAML_RETEN(x)               (((uint32_t)(((uint32_t)(x))<<SIM_CHIPCTL_SRAML_RETEN_SHIFT))&SIM_CHIPCTL_SRAML_RETEN_MASK) /**< SIM_CHIPCTL.SRAML_RETEN Field           */
/** @} */

/** @name FTMOPT0 - FTM Option Register 0 */ /** @{ */
#define SIM_FTMOPT0_FTM0FLTxSEL_MASK             (0x7U)                                              /**< SIM_FTMOPT0.FTM0FLTxSEL Mask            */
#define SIM_FTMOPT0_FTM0FLTxSEL_SHIFT            (0U)                                                /**< SIM_FTMOPT0.FTM0FLTxSEL Position        */
#define SIM_FTMOPT0_FTM0FLTxSEL(x)               (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT0_FTM0FLTxSEL_SHIFT))&SIM_FTMOPT0_FTM0FLTxSEL_MASK) /**< SIM_FTMOPT0.FTM0FLTxSEL Field           */
#define SIM_FTMOPT0_FTM1FLTxSEL_MASK             (0x70U)                                             /**< SIM_FTMOPT0.FTM1FLTxSEL Mask            */
#define SIM_FTMOPT0_FTM1FLTxSEL_SHIFT            (4U)                                                /**< SIM_FTMOPT0.FTM1FLTxSEL Position        */
#define SIM_FTMOPT0_FTM1FLTxSEL(x)               (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT0_FTM1FLTxSEL_SHIFT))&SIM_FTMOPT0_FTM1FLTxSEL_MASK) /**< SIM_FTMOPT0.FTM1FLTxSEL Field           */
#define SIM_FTMOPT0_FTM2FLTxSEL_MASK             (0x700U)                                            /**< SIM_FTMOPT0.FTM2FLTxSEL Mask            */
#define SIM_FTMOPT0_FTM2FLTxSEL_SHIFT            (8U)                                                /**< SIM_FTMOPT0.FTM2FLTxSEL Position        */
#define SIM_FTMOPT0_FTM2FLTxSEL(x)               (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT0_FTM2FLTxSEL_SHIFT))&SIM_FTMOPT0_FTM2FLTxSEL_MASK) /**< SIM_FTMOPT0.FTM2FLTxSEL Field           */
#define SIM_FTMOPT0_FTM3FLTxSEL_MASK             (0x7000U)                                           /**< SIM_FTMOPT0.FTM3FLTxSEL Mask            */
#define SIM_FTMOPT0_FTM3FLTxSEL_SHIFT            (12U)                                               /**< SIM_FTMOPT0.FTM3FLTxSEL Position        */
#define SIM_FTMOPT0_FTM3FLTxSEL(x)               (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT0_FTM3FLTxSEL_SHIFT))&SIM_FTMOPT0_FTM3FLTxSEL_MASK) /**< SIM_FTMOPT0.FTM3FLTxSEL Field           */
#define SIM_FTMOPT0_FTM0CLKSEL_MASK              (0x3000000U)                                        /**< SIM_FTMOPT0.FTM0CLKSEL Mask             */
#define SIM_FTMOPT0_FTM0CLKSEL_SHIFT             (24U)                                               /**< SIM_FTMOPT0.FTM0CLKSEL Position         */
#define SIM_FTMOPT0_FTM0CLKSEL(x)                (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT0_FTM0CLKSEL_SHIFT))&SIM_FTMOPT0_FTM0CLKSEL_MASK) /**< SIM_FTMOPT0.FTM0CLKSEL Field            */
#define SIM_FTMOPT0_FTM1CLKSEL_MASK              (0xC000000U)                                        /**< SIM_FTMOPT0.FTM1CLKSEL Mask             */
#define SIM_FTMOPT0_FTM1CLKSEL_SHIFT             (26U)                                               /**< SIM_FTMOPT0.FTM1CLKSEL Position         */
#define SIM_FTMOPT0_FTM1CLKSEL(x)                (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT0_FTM1CLKSEL_SHIFT))&SIM_FTMOPT0_FTM1CLKSEL_MASK) /**< SIM_FTMOPT0.FTM1CLKSEL Field            */
#define SIM_FTMOPT0_FTM2CLKSEL_MASK              (0x30000000U)                                       /**< SIM_FTMOPT0.FTM2CLKSEL Mask             */
#define SIM_FTMOPT0_FTM2CLKSEL_SHIFT             (28U)                                               /**< SIM_FTMOPT0.FTM2CLKSEL Position         */
#define SIM_FTMOPT0_FTM2CLKSEL(x)                (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT0_FTM2CLKSEL_SHIFT))&SIM_FTMOPT0_FTM2CLKSEL_MASK) /**< SIM_FTMOPT0.FTM2CLKSEL Field            */
#define SIM_FTMOPT0_FTM3CLKSEL_MASK              (0xC0000000U)                                       /**< SIM_FTMOPT0.FTM3CLKSEL Mask             */
#define SIM_FTMOPT0_FTM3CLKSEL_SHIFT             (30U)                                               /**< SIM_FTMOPT0.FTM3CLKSEL Position         */
#define SIM_FTMOPT0_FTM3CLKSEL(x)                (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT0_FTM3CLKSEL_SHIFT))&SIM_FTMOPT0_FTM3CLKSEL_MASK) /**< SIM_FTMOPT0.FTM3CLKSEL Field            */
/** @} */

/** @name LPOCLKS - LPO Clock Select Register */ /** @{ */
#define SIM_LPOCLKS_LPO1KCLKEN_MASK              (0x1U)                                              /**< SIM_LPOCLKS.LPO1KCLKEN Mask             */
#define SIM_LPOCLKS_LPO1KCLKEN_SHIFT             (0U)                                                /**< SIM_LPOCLKS.LPO1KCLKEN Position         */
#define SIM_LPOCLKS_LPO1KCLKEN(x)                (((uint32_t)(((uint32_t)(x))<<SIM_LPOCLKS_LPO1KCLKEN_SHIFT))&SIM_LPOCLKS_LPO1KCLKEN_MASK) /**< SIM_LPOCLKS.LPO1KCLKEN Field            */
#define SIM_LPOCLKS_LPO32KCLKEN_MASK             (0x2U)                                              /**< SIM_LPOCLKS.LPO32KCLKEN Mask            */
#define SIM_LPOCLKS_LPO32KCLKEN_SHIFT            (1U)                                                /**< SIM_LPOCLKS.LPO32KCLKEN Position        */
#define SIM_LPOCLKS_LPO32KCLKEN(x)               (((uint32_t)(((uint32_t)(x))<<SIM_LPOCLKS_LPO32KCLKEN_SHIFT))&SIM_LPOCLKS_LPO32KCLKEN_MASK) /**< SIM_LPOCLKS.LPO32KCLKEN Field           */
#define SIM_LPOCLKS_LPOCLKSEL_MASK               (0xCU)                                              /**< SIM_LPOCLKS.LPOCLKSEL Mask              */
#define SIM_LPOCLKS_LPOCLKSEL_SHIFT              (2U)                                                /**< SIM_LPOCLKS.LPOCLKSEL Position          */
#define SIM_LPOCLKS_LPOCLKSEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_LPOCLKS_LPOCLKSEL_SHIFT))&SIM_LPOCLKS_LPOCLKSEL_MASK) /**< SIM_LPOCLKS.LPOCLKSEL Field             */
#define SIM_LPOCLKS_RTCCLKSEL_MASK               (0x30U)                                             /**< SIM_LPOCLKS.RTCCLKSEL Mask              */
#define SIM_LPOCLKS_RTCCLKSEL_SHIFT              (4U)                                                /**< SIM_LPOCLKS.RTCCLKSEL Position          */
#define SIM_LPOCLKS_RTCCLKSEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_LPOCLKS_RTCCLKSEL_SHIFT))&SIM_LPOCLKS_RTCCLKSEL_MASK) /**< SIM_LPOCLKS.RTCCLKSEL Field             */
/** @} */

/** @name ADCOPT - ADC Options Register */ /** @{ */
#define SIM_ADCOPT_ADC0TRGSEL_MASK               (0x1U)                                              /**< SIM_ADCOPT.ADC0TRGSEL Mask              */
#define SIM_ADCOPT_ADC0TRGSEL_SHIFT              (0U)                                                /**< SIM_ADCOPT.ADC0TRGSEL Position          */
#define SIM_ADCOPT_ADC0TRGSEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADC0TRGSEL_SHIFT))&SIM_ADCOPT_ADC0TRGSEL_MASK) /**< SIM_ADCOPT.ADC0TRGSEL Field             */
#define SIM_ADCOPT_ADC0SWPRETRG_MASK             (0xEU)                                              /**< SIM_ADCOPT.ADC0SWPRETRG Mask            */
#define SIM_ADCOPT_ADC0SWPRETRG_SHIFT            (1U)                                                /**< SIM_ADCOPT.ADC0SWPRETRG Position        */
#define SIM_ADCOPT_ADC0SWPRETRG(x)               (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADC0SWPRETRG_SHIFT))&SIM_ADCOPT_ADC0SWPRETRG_MASK) /**< SIM_ADCOPT.ADC0SWPRETRG Field           */
#define SIM_ADCOPT_ADC0PRETRGSEL_MASK            (0x30U)                                             /**< SIM_ADCOPT.ADC0PRETRGSEL Mask           */
#define SIM_ADCOPT_ADC0PRETRGSEL_SHIFT           (4U)                                                /**< SIM_ADCOPT.ADC0PRETRGSEL Position       */
#define SIM_ADCOPT_ADC0PRETRGSEL(x)              (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADC0PRETRGSEL_SHIFT))&SIM_ADCOPT_ADC0PRETRGSEL_MASK) /**< SIM_ADCOPT.ADC0PRETRGSEL Field          */
#define SIM_ADCOPT_ADC1TRGSEL_MASK               (0x100U)                                            /**< SIM_ADCOPT.ADC1TRGSEL Mask              */
#define SIM_ADCOPT_ADC1TRGSEL_SHIFT              (8U)                                                /**< SIM_ADCOPT.ADC1TRGSEL Position          */
#define SIM_ADCOPT_ADC1TRGSEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADC1TRGSEL_SHIFT))&SIM_ADCOPT_ADC1TRGSEL_MASK) /**< SIM_ADCOPT.ADC1TRGSEL Field             */
#define SIM_ADCOPT_ADC1SWPRETRG_MASK             (0xE00U)                                            /**< SIM_ADCOPT.ADC1SWPRETRG Mask            */
#define SIM_ADCOPT_ADC1SWPRETRG_SHIFT            (9U)                                                /**< SIM_ADCOPT.ADC1SWPRETRG Position        */
#define SIM_ADCOPT_ADC1SWPRETRG(x)               (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADC1SWPRETRG_SHIFT))&SIM_ADCOPT_ADC1SWPRETRG_MASK) /**< SIM_ADCOPT.ADC1SWPRETRG Field           */
#define SIM_ADCOPT_ADC1PRETRGSEL_MASK            (0x3000U)                                           /**< SIM_ADCOPT.ADC1PRETRGSEL Mask           */
#define SIM_ADCOPT_ADC1PRETRGSEL_SHIFT           (12U)                                               /**< SIM_ADCOPT.ADC1PRETRGSEL Position       */
#define SIM_ADCOPT_ADC1PRETRGSEL(x)              (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADC1PRETRGSEL_SHIFT))&SIM_ADCOPT_ADC1PRETRGSEL_MASK) /**< SIM_ADCOPT.ADC1PRETRGSEL Field          */
/** @} */

/** @name FTMOPT1 - FTM Option Register 1 */ /** @{ */
#define SIM_FTMOPT1_FTM0SYNCBIT_MASK             (0x1U)                                              /**< SIM_FTMOPT1.FTM0SYNCBIT Mask            */
#define SIM_FTMOPT1_FTM0SYNCBIT_SHIFT            (0U)                                                /**< SIM_FTMOPT1.FTM0SYNCBIT Position        */
#define SIM_FTMOPT1_FTM0SYNCBIT(x)               (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT1_FTM0SYNCBIT_SHIFT))&SIM_FTMOPT1_FTM0SYNCBIT_MASK) /**< SIM_FTMOPT1.FTM0SYNCBIT Field           */
#define SIM_FTMOPT1_FTM1SYNCBIT_MASK             (0x2U)                                              /**< SIM_FTMOPT1.FTM1SYNCBIT Mask            */
#define SIM_FTMOPT1_FTM1SYNCBIT_SHIFT            (1U)                                                /**< SIM_FTMOPT1.FTM1SYNCBIT Position        */
#define SIM_FTMOPT1_FTM1SYNCBIT(x)               (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT1_FTM1SYNCBIT_SHIFT))&SIM_FTMOPT1_FTM1SYNCBIT_MASK) /**< SIM_FTMOPT1.FTM1SYNCBIT Field           */
#define SIM_FTMOPT1_FTM2SYNCBIT_MASK             (0x4U)                                              /**< SIM_FTMOPT1.FTM2SYNCBIT Mask            */
#define SIM_FTMOPT1_FTM2SYNCBIT_SHIFT            (2U)                                                /**< SIM_FTMOPT1.FTM2SYNCBIT Position        */
#define SIM_FTMOPT1_FTM2SYNCBIT(x)               (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT1_FTM2SYNCBIT_SHIFT))&SIM_FTMOPT1_FTM2SYNCBIT_MASK) /**< SIM_FTMOPT1.FTM2SYNCBIT Field           */
#define SIM_FTMOPT1_FTM3SYNCBIT_MASK             (0x8U)                                              /**< SIM_FTMOPT1.FTM3SYNCBIT Mask            */
#define SIM_FTMOPT1_FTM3SYNCBIT_SHIFT            (3U)                                                /**< SIM_FTMOPT1.FTM3SYNCBIT Position        */
#define SIM_FTMOPT1_FTM3SYNCBIT(x)               (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT1_FTM3SYNCBIT_SHIFT))&SIM_FTMOPT1_FTM3SYNCBIT_MASK) /**< SIM_FTMOPT1.FTM3SYNCBIT Field           */
#define SIM_FTMOPT1_FTM1CH0SEL_MASK              (0x30U)                                             /**< SIM_FTMOPT1.FTM1CH0SEL Mask             */
#define SIM_FTMOPT1_FTM1CH0SEL_SHIFT             (4U)                                                /**< SIM_FTMOPT1.FTM1CH0SEL Position         */
#define SIM_FTMOPT1_FTM1CH0SEL(x)                (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT1_FTM1CH0SEL_SHIFT))&SIM_FTMOPT1_FTM1CH0SEL_MASK) /**< SIM_FTMOPT1.FTM1CH0SEL Field            */
#define SIM_FTMOPT1_FTM2CH0SEL_MASK              (0xC0U)                                             /**< SIM_FTMOPT1.FTM2CH0SEL Mask             */
#define SIM_FTMOPT1_FTM2CH0SEL_SHIFT             (6U)                                                /**< SIM_FTMOPT1.FTM2CH0SEL Position         */
#define SIM_FTMOPT1_FTM2CH0SEL(x)                (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT1_FTM2CH0SEL_SHIFT))&SIM_FTMOPT1_FTM2CH0SEL_MASK) /**< SIM_FTMOPT1.FTM2CH0SEL Field            */
#define SIM_FTMOPT1_FTM2CH1SEL_MASK              (0x100U)                                            /**< SIM_FTMOPT1.FTM2CH1SEL Mask             */
#define SIM_FTMOPT1_FTM2CH1SEL_SHIFT             (8U)                                                /**< SIM_FTMOPT1.FTM2CH1SEL Position         */
#define SIM_FTMOPT1_FTM2CH1SEL(x)                (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT1_FTM2CH1SEL_SHIFT))&SIM_FTMOPT1_FTM2CH1SEL_MASK) /**< SIM_FTMOPT1.FTM2CH1SEL Field            */
#define SIM_FTMOPT1_FTMGLDOK_MASK                (0x8000U)                                           /**< SIM_FTMOPT1.FTMGLDOK Mask               */
#define SIM_FTMOPT1_FTMGLDOK_SHIFT               (15U)                                               /**< SIM_FTMOPT1.FTMGLDOK Position           */
#define SIM_FTMOPT1_FTMGLDOK(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT1_FTMGLDOK_SHIFT))&SIM_FTMOPT1_FTMGLDOK_MASK) /**< SIM_FTMOPT1.FTMGLDOK Field              */
#define SIM_FTMOPT1_FTM0_OUTSEL_MASK             (0xFF0000U)                                         /**< SIM_FTMOPT1.FTM0_OUTSEL Mask            */
#define SIM_FTMOPT1_FTM0_OUTSEL_SHIFT            (16U)                                               /**< SIM_FTMOPT1.FTM0_OUTSEL Position        */
#define SIM_FTMOPT1_FTM0_OUTSEL(x)               (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT1_FTM0_OUTSEL_SHIFT))&SIM_FTMOPT1_FTM0_OUTSEL_MASK) /**< SIM_FTMOPT1.FTM0_OUTSEL Field           */
#define SIM_FTMOPT1_FTM3_OUTSEL_MASK             (0xFF000000U)                                       /**< SIM_FTMOPT1.FTM3_OUTSEL Mask            */
#define SIM_FTMOPT1_FTM3_OUTSEL_SHIFT            (24U)                                               /**< SIM_FTMOPT1.FTM3_OUTSEL Position        */
#define SIM_FTMOPT1_FTM3_OUTSEL(x)               (((uint32_t)(((uint32_t)(x))<<SIM_FTMOPT1_FTM3_OUTSEL_SHIFT))&SIM_FTMOPT1_FTM3_OUTSEL_MASK) /**< SIM_FTMOPT1.FTM3_OUTSEL Field           */
/** @} */

/** @name MISCTRL0 - Miscellaneous control register 0 */ /** @{ */
#define SIM_MISCTRL0_FTM0_OBE_CTRL_MASK          (0x10000U)                                          /**< SIM_MISCTRL0.FTM0_OBE_CTRL Mask         */
#define SIM_MISCTRL0_FTM0_OBE_CTRL_SHIFT         (16U)                                               /**< SIM_MISCTRL0.FTM0_OBE_CTRL Position     */
#define SIM_MISCTRL0_FTM0_OBE_CTRL(x)            (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL0_FTM0_OBE_CTRL_SHIFT))&SIM_MISCTRL0_FTM0_OBE_CTRL_MASK) /**< SIM_MISCTRL0.FTM0_OBE_CTRL Field        */
#define SIM_MISCTRL0_FTM1_OBE_CTRL_MASK          (0x20000U)                                          /**< SIM_MISCTRL0.FTM1_OBE_CTRL Mask         */
#define SIM_MISCTRL0_FTM1_OBE_CTRL_SHIFT         (17U)                                               /**< SIM_MISCTRL0.FTM1_OBE_CTRL Position     */
#define SIM_MISCTRL0_FTM1_OBE_CTRL(x)            (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL0_FTM1_OBE_CTRL_SHIFT))&SIM_MISCTRL0_FTM1_OBE_CTRL_MASK) /**< SIM_MISCTRL0.FTM1_OBE_CTRL Field        */
#define SIM_MISCTRL0_FTM2_OBE_CTRL_MASK          (0x40000U)                                          /**< SIM_MISCTRL0.FTM2_OBE_CTRL Mask         */
#define SIM_MISCTRL0_FTM2_OBE_CTRL_SHIFT         (18U)                                               /**< SIM_MISCTRL0.FTM2_OBE_CTRL Position     */
#define SIM_MISCTRL0_FTM2_OBE_CTRL(x)            (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL0_FTM2_OBE_CTRL_SHIFT))&SIM_MISCTRL0_FTM2_OBE_CTRL_MASK) /**< SIM_MISCTRL0.FTM2_OBE_CTRL Field        */
#define SIM_MISCTRL0_FTM3_OBE_CTRL_MASK          (0x80000U)                                          /**< SIM_MISCTRL0.FTM3_OBE_CTRL Mask         */
#define SIM_MISCTRL0_FTM3_OBE_CTRL_SHIFT         (19U)                                               /**< SIM_MISCTRL0.FTM3_OBE_CTRL Position     */
#define SIM_MISCTRL0_FTM3_OBE_CTRL(x)            (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL0_FTM3_OBE_CTRL_SHIFT))&SIM_MISCTRL0_FTM3_OBE_CTRL_MASK) /**< SIM_MISCTRL0.FTM3_OBE_CTRL Field        */
/** @} */

/** @name SDID - System Device Identification Register */ /** @{ */
#define SIM_SDID_FEATURES_MASK                   (0xFFU)                                             /**< SIM_SDID.FEATURES Mask                  */
#define SIM_SDID_FEATURES_SHIFT                  (0U)                                                /**< SIM_SDID.FEATURES Position              */
#define SIM_SDID_FEATURES(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SDID_FEATURES_SHIFT))&SIM_SDID_FEATURES_MASK) /**< SIM_SDID.FEATURES Field                 */
#define SIM_SDID_PACKAGE_MASK                    (0xF00U)                                            /**< SIM_SDID.PACKAGE Mask                   */
#define SIM_SDID_PACKAGE_SHIFT                   (8U)                                                /**< SIM_SDID.PACKAGE Position               */
#define SIM_SDID_PACKAGE(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_SDID_PACKAGE_SHIFT))&SIM_SDID_PACKAGE_MASK) /**< SIM_SDID.PACKAGE Field                  */
#define SIM_SDID_REVID_MASK                      (0xF000U)                                           /**< SIM_SDID.REVID Mask                     */
#define SIM_SDID_REVID_SHIFT                     (12U)                                               /**< SIM_SDID.REVID Position                 */
#define SIM_SDID_REVID(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SDID_REVID_SHIFT))&SIM_SDID_REVID_MASK) /**< SIM_SDID.REVID Field                    */
#define SIM_SDID_RAMSIZE_MASK                    (0xF0000U)                                          /**< SIM_SDID.RAMSIZE Mask                   */
#define SIM_SDID_RAMSIZE_SHIFT                   (16U)                                               /**< SIM_SDID.RAMSIZE Position               */
#define SIM_SDID_RAMSIZE(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_SDID_RAMSIZE_SHIFT))&SIM_SDID_RAMSIZE_MASK) /**< SIM_SDID.RAMSIZE Field                  */
#define SIM_SDID_DERIVATE_MASK                   (0xF00000U)                                         /**< SIM_SDID.DERIVATE Mask                  */
#define SIM_SDID_DERIVATE_SHIFT                  (20U)                                               /**< SIM_SDID.DERIVATE Position              */
#define SIM_SDID_DERIVATE(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SDID_DERIVATE_SHIFT))&SIM_SDID_DERIVATE_MASK) /**< SIM_SDID.DERIVATE Field                 */
#define SIM_SDID_SUBSERIES_MASK                  (0xF000000U)                                        /**< SIM_SDID.SUBSERIES Mask                 */
#define SIM_SDID_SUBSERIES_SHIFT                 (24U)                                               /**< SIM_SDID.SUBSERIES Position             */
#define SIM_SDID_SUBSERIES(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SDID_SUBSERIES_SHIFT))&SIM_SDID_SUBSERIES_MASK) /**< SIM_SDID.SUBSERIES Field                */
#define SIM_SDID_GENERATION_MASK                 (0xF0000000U)                                       /**< SIM_SDID.GENERATION Mask                */
#define SIM_SDID_GENERATION_SHIFT                (28U)                                               /**< SIM_SDID.GENERATION Position            */
#define SIM_SDID_GENERATION(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SDID_GENERATION_SHIFT))&SIM_SDID_GENERATION_MASK) /**< SIM_SDID.GENERATION Field               */
/** @} */

/** @name PLATCGC - Platform Clock Gating Control Register */ /** @{ */
#define SIM_PLATCGC_CGCMSCM_MASK                 (0x1U)                                              /**< SIM_PLATCGC.CGCMSCM Mask                */
#define SIM_PLATCGC_CGCMSCM_SHIFT                (0U)                                                /**< SIM_PLATCGC.CGCMSCM Position            */
#define SIM_PLATCGC_CGCMSCM(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_PLATCGC_CGCMSCM_SHIFT))&SIM_PLATCGC_CGCMSCM_MASK) /**< SIM_PLATCGC.CGCMSCM Field               */
#define SIM_PLATCGC_CGCMPU_MASK                  (0x2U)                                              /**< SIM_PLATCGC.CGCMPU Mask                 */
#define SIM_PLATCGC_CGCMPU_SHIFT                 (1U)                                                /**< SIM_PLATCGC.CGCMPU Position             */
#define SIM_PLATCGC_CGCMPU(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_PLATCGC_CGCMPU_SHIFT))&SIM_PLATCGC_CGCMPU_MASK) /**< SIM_PLATCGC.CGCMPU Field                */
#define SIM_PLATCGC_CGCDMA_MASK                  (0x4U)                                              /**< SIM_PLATCGC.CGCDMA Mask                 */
#define SIM_PLATCGC_CGCDMA_SHIFT                 (2U)                                                /**< SIM_PLATCGC.CGCDMA Position             */
#define SIM_PLATCGC_CGCDMA(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_PLATCGC_CGCDMA_SHIFT))&SIM_PLATCGC_CGCDMA_MASK) /**< SIM_PLATCGC.CGCDMA Field                */
#define SIM_PLATCGC_CGCERM_MASK                  (0x8U)                                              /**< SIM_PLATCGC.CGCERM Mask                 */
#define SIM_PLATCGC_CGCERM_SHIFT                 (3U)                                                /**< SIM_PLATCGC.CGCERM Position             */
#define SIM_PLATCGC_CGCERM(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_PLATCGC_CGCERM_SHIFT))&SIM_PLATCGC_CGCERM_MASK) /**< SIM_PLATCGC.CGCERM Field                */
#define SIM_PLATCGC_CGCEIM_MASK                  (0x10U)                                             /**< SIM_PLATCGC.CGCEIM Mask                 */
#define SIM_PLATCGC_CGCEIM_SHIFT                 (4U)                                                /**< SIM_PLATCGC.CGCEIM Position             */
#define SIM_PLATCGC_CGCEIM(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_PLATCGC_CGCEIM_SHIFT))&SIM_PLATCGC_CGCEIM_MASK) /**< SIM_PLATCGC.CGCEIM Field                */
/** @} */

/** @name FCFG1 - Flash Configuration Register 1 */ /** @{ */
#define SIM_FCFG1_DEPART_MASK                    (0xF000U)                                           /**< SIM_FCFG1.DEPART Mask                   */
#define SIM_FCFG1_DEPART_SHIFT                   (12U)                                               /**< SIM_FCFG1.DEPART Position               */
#define SIM_FCFG1_DEPART(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_DEPART_SHIFT))&SIM_FCFG1_DEPART_MASK) /**< SIM_FCFG1.DEPART Field                  */
#define SIM_FCFG1_EEERAMSIZE_MASK                (0xF0000U)                                          /**< SIM_FCFG1.EEERAMSIZE Mask               */
#define SIM_FCFG1_EEERAMSIZE_SHIFT               (16U)                                               /**< SIM_FCFG1.EEERAMSIZE Position           */
#define SIM_FCFG1_EEERAMSIZE(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_EEERAMSIZE_SHIFT))&SIM_FCFG1_EEERAMSIZE_MASK) /**< SIM_FCFG1.EEERAMSIZE Field              */
/** @} */

/** @name UIDH - Unique Identification Register High */ /** @{ */
#define SIM_UIDH_UID127_96_MASK                  (0xFFFFFFFFU)                                       /**< SIM_UIDH.UID127_96 Mask                 */
#define SIM_UIDH_UID127_96_SHIFT                 (0U)                                                /**< SIM_UIDH.UID127_96 Position             */
#define SIM_UIDH_UID127_96(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_UIDH_UID127_96_SHIFT))&SIM_UIDH_UID127_96_MASK) /**< SIM_UIDH.UID127_96 Field                */
/** @} */

/** @name UIDMH - Unique Identification Register Mid-High */ /** @{ */
#define SIM_UIDMH_UID95_64_MASK                  (0xFFFFFFFFU)                                       /**< SIM_UIDMH.UID95_64 Mask                 */
#define SIM_UIDMH_UID95_64_SHIFT                 (0U)                                                /**< SIM_UIDMH.UID95_64 Position             */
#define SIM_UIDMH_UID95_64(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_UIDMH_UID95_64_SHIFT))&SIM_UIDMH_UID95_64_MASK) /**< SIM_UIDMH.UID95_64 Field                */
/** @} */

/** @name UIDML - Unique Identification Register Mid Low */ /** @{ */
#define SIM_UIDML_UID63_32_MASK                  (0xFFFFFFFFU)                                       /**< SIM_UIDML.UID63_32 Mask                 */
#define SIM_UIDML_UID63_32_SHIFT                 (0U)                                                /**< SIM_UIDML.UID63_32 Position             */
#define SIM_UIDML_UID63_32(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_UIDML_UID63_32_SHIFT))&SIM_UIDML_UID63_32_MASK) /**< SIM_UIDML.UID63_32 Field                */
/** @} */

/** @name UIDL - Unique Identification Register Low */ /** @{ */
#define SIM_UIDL_UID31_0_MASK                    (0xFFFFFFFFU)                                       /**< SIM_UIDL.UID31_0 Mask                   */
#define SIM_UIDL_UID31_0_SHIFT                   (0U)                                                /**< SIM_UIDL.UID31_0 Position               */
#define SIM_UIDL_UID31_0(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_UIDL_UID31_0_SHIFT))&SIM_UIDL_UID31_0_MASK) /**< SIM_UIDL.UID31_0 Field                  */
/** @} */

/** @name CLKDIV4 - System Clock Divider Register 4 */ /** @{ */
#define SIM_CLKDIV4_TRACEFRAC_MASK               (0x1U)                                              /**< SIM_CLKDIV4.TRACEFRAC Mask              */
#define SIM_CLKDIV4_TRACEFRAC_SHIFT              (0U)                                                /**< SIM_CLKDIV4.TRACEFRAC Position          */
#define SIM_CLKDIV4_TRACEFRAC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV4_TRACEFRAC_SHIFT))&SIM_CLKDIV4_TRACEFRAC_MASK) /**< SIM_CLKDIV4.TRACEFRAC Field             */
#define SIM_CLKDIV4_TRACEDIV_MASK                (0xEU)                                              /**< SIM_CLKDIV4.TRACEDIV Mask               */
#define SIM_CLKDIV4_TRACEDIV_SHIFT               (1U)                                                /**< SIM_CLKDIV4.TRACEDIV Position           */
#define SIM_CLKDIV4_TRACEDIV(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV4_TRACEDIV_SHIFT))&SIM_CLKDIV4_TRACEDIV_MASK) /**< SIM_CLKDIV4.TRACEDIV Field              */
#define SIM_CLKDIV4_TRACEDIVEN_MASK              (0x10000000U)                                       /**< SIM_CLKDIV4.TRACEDIVEN Mask             */
#define SIM_CLKDIV4_TRACEDIVEN_SHIFT             (28U)                                               /**< SIM_CLKDIV4.TRACEDIVEN Position         */
#define SIM_CLKDIV4_TRACEDIVEN(x)                (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV4_TRACEDIVEN_SHIFT))&SIM_CLKDIV4_TRACEDIVEN_MASK) /**< SIM_CLKDIV4.TRACEDIVEN Field            */
/** @} */

/** @name MISCTRL1 - Miscellaneous Control register 1 */ /** @{ */
#define SIM_MISCTRL1_SW_TRG_MASK                 (0x1U)                                              /**< SIM_MISCTRL1.SW_TRG Mask                */
#define SIM_MISCTRL1_SW_TRG_SHIFT                (0U)                                                /**< SIM_MISCTRL1.SW_TRG Position            */
#define SIM_MISCTRL1_SW_TRG(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL1_SW_TRG_SHIFT))&SIM_MISCTRL1_SW_TRG_MASK) /**< SIM_MISCTRL1.SW_TRG Field               */
/** @} */

/** @} */ /* End group SIM_Register_Masks_GROUP */


/* SIM - Peripheral instance base addresses */
#define SIM_BasePtr                    0x40048000UL //!< Peripheral base address
#define SIM                            ((SIM_Type *) SIM_BasePtr) //!< Freescale base pointer
#define SIM_BASE_PTR                   (SIM) //!< Freescale style base pointer

/** @} */ /* End group SIM_Peripheral_access_layer_GROUP */


/** @brief C Struct for SMC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SMC_Peripheral_access_layer_GROUP SMC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SMC (file:SMC_S32K14x)               ================ */
/* ================================================================================ */

/**
 * @brief System Mode Controller
 */
/**
 * @struct SMC_Type
 * @brief  C Struct allowing access to SMC registers
 */
typedef struct SMC_Type {
   __I  uint32_t  VERID;                        /**< 0000: SMC Version ID Register                                      */
   __I  uint32_t  PARAM;                        /**< 0004: SMC Parameter Register                                       */
   __IO uint32_t  PMPROT;                       /**< 0008: Power Mode Protection Register                               */
   __IO uint32_t  PMCTRL;                       /**< 000C: Power Mode Control Register                                  */
   __IO uint32_t  STOPCTRL;                     /**< 0010: Stop Control Register                                        */
   __I  uint32_t  PMSTAT;                       /**< 0014: Power Mode Status Register                                   */
} SMC_Type;


/** @brief Register Masks for SMC */

/* -------------------------------------------------------------------------------- */
/* -----------     'SMC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup SMC_Register_Masks_GROUP SMC Register Masks */
/** @{ */

/** @name VERID - SMC Version ID Register */ /** @{ */
#define SMC_VERID_FEATURE_MASK                   (0xFFFFU)                                           /**< SMC_VERID.FEATURE Mask                  */
#define SMC_VERID_FEATURE_SHIFT                  (0U)                                                /**< SMC_VERID.FEATURE Position              */
#define SMC_VERID_FEATURE(x)                     (((uint32_t)(((uint32_t)(x))<<SMC_VERID_FEATURE_SHIFT))&SMC_VERID_FEATURE_MASK) /**< SMC_VERID.FEATURE Field                 */
#define SMC_VERID_MINOR_MASK                     (0xFF0000U)                                         /**< SMC_VERID.MINOR Mask                    */
#define SMC_VERID_MINOR_SHIFT                    (16U)                                               /**< SMC_VERID.MINOR Position                */
#define SMC_VERID_MINOR(x)                       (((uint32_t)(((uint32_t)(x))<<SMC_VERID_MINOR_SHIFT))&SMC_VERID_MINOR_MASK) /**< SMC_VERID.MINOR Field                   */
#define SMC_VERID_MAJOR_MASK                     (0xFF000000U)                                       /**< SMC_VERID.MAJOR Mask                    */
#define SMC_VERID_MAJOR_SHIFT                    (24U)                                               /**< SMC_VERID.MAJOR Position                */
#define SMC_VERID_MAJOR(x)                       (((uint32_t)(((uint32_t)(x))<<SMC_VERID_MAJOR_SHIFT))&SMC_VERID_MAJOR_MASK) /**< SMC_VERID.MAJOR Field                   */
/** @} */

/** @name PARAM - SMC Parameter Register */ /** @{ */
#define SMC_PARAM_EHSRUN_MASK                    (0x1U)                                              /**< SMC_PARAM.EHSRUN Mask                   */
#define SMC_PARAM_EHSRUN_SHIFT                   (0U)                                                /**< SMC_PARAM.EHSRUN Position               */
#define SMC_PARAM_EHSRUN(x)                      (((uint32_t)(((uint32_t)(x))<<SMC_PARAM_EHSRUN_SHIFT))&SMC_PARAM_EHSRUN_MASK) /**< SMC_PARAM.EHSRUN Field                  */
#define SMC_PARAM_ELLS_MASK                      (0x8U)                                              /**< SMC_PARAM.ELLS Mask                     */
#define SMC_PARAM_ELLS_SHIFT                     (3U)                                                /**< SMC_PARAM.ELLS Position                 */
#define SMC_PARAM_ELLS(x)                        (((uint32_t)(((uint32_t)(x))<<SMC_PARAM_ELLS_SHIFT))&SMC_PARAM_ELLS_MASK) /**< SMC_PARAM.ELLS Field                    */
#define SMC_PARAM_ELLS2_MASK                     (0x20U)                                             /**< SMC_PARAM.ELLS2 Mask                    */
#define SMC_PARAM_ELLS2_SHIFT                    (5U)                                                /**< SMC_PARAM.ELLS2 Position                */
#define SMC_PARAM_ELLS2(x)                       (((uint32_t)(((uint32_t)(x))<<SMC_PARAM_ELLS2_SHIFT))&SMC_PARAM_ELLS2_MASK) /**< SMC_PARAM.ELLS2 Field                   */
#define SMC_PARAM_EVLLS0_MASK                    (0x40U)                                             /**< SMC_PARAM.EVLLS0 Mask                   */
#define SMC_PARAM_EVLLS0_SHIFT                   (6U)                                                /**< SMC_PARAM.EVLLS0 Position               */
#define SMC_PARAM_EVLLS0(x)                      (((uint32_t)(((uint32_t)(x))<<SMC_PARAM_EVLLS0_SHIFT))&SMC_PARAM_EVLLS0_MASK) /**< SMC_PARAM.EVLLS0 Field                  */
/** @} */

/** @name PMPROT - Power Mode Protection Register */ /** @{ */
#define SMC_PMPROT_AVLP_MASK                     (0x20U)                                             /**< SMC_PMPROT.AVLP Mask                    */
#define SMC_PMPROT_AVLP_SHIFT                    (5U)                                                /**< SMC_PMPROT.AVLP Position                */
#define SMC_PMPROT_AVLP(x)                       (((uint32_t)(((uint32_t)(x))<<SMC_PMPROT_AVLP_SHIFT))&SMC_PMPROT_AVLP_MASK) /**< SMC_PMPROT.AVLP Field                   */
#define SMC_PMPROT_AHSRUN_MASK                   (0x80U)                                             /**< SMC_PMPROT.AHSRUN Mask                  */
#define SMC_PMPROT_AHSRUN_SHIFT                  (7U)                                                /**< SMC_PMPROT.AHSRUN Position              */
#define SMC_PMPROT_AHSRUN(x)                     (((uint32_t)(((uint32_t)(x))<<SMC_PMPROT_AHSRUN_SHIFT))&SMC_PMPROT_AHSRUN_MASK) /**< SMC_PMPROT.AHSRUN Field                 */
/** @} */

/** @name PMCTRL - Power Mode Control Register */ /** @{ */
#define SMC_PMCTRL_STOPM_MASK                    (0x7U)                                              /**< SMC_PMCTRL.STOPM Mask                   */
#define SMC_PMCTRL_STOPM_SHIFT                   (0U)                                                /**< SMC_PMCTRL.STOPM Position               */
#define SMC_PMCTRL_STOPM(x)                      (((uint32_t)(((uint32_t)(x))<<SMC_PMCTRL_STOPM_SHIFT))&SMC_PMCTRL_STOPM_MASK) /**< SMC_PMCTRL.STOPM Field                  */
#define SMC_PMCTRL_VLPSA_MASK                    (0x8U)                                              /**< SMC_PMCTRL.VLPSA Mask                   */
#define SMC_PMCTRL_VLPSA_SHIFT                   (3U)                                                /**< SMC_PMCTRL.VLPSA Position               */
#define SMC_PMCTRL_VLPSA(x)                      (((uint32_t)(((uint32_t)(x))<<SMC_PMCTRL_VLPSA_SHIFT))&SMC_PMCTRL_VLPSA_MASK) /**< SMC_PMCTRL.VLPSA Field                  */
#define SMC_PMCTRL_RUNM_MASK                     (0x60U)                                             /**< SMC_PMCTRL.RUNM Mask                    */
#define SMC_PMCTRL_RUNM_SHIFT                    (5U)                                                /**< SMC_PMCTRL.RUNM Position                */
#define SMC_PMCTRL_RUNM(x)                       (((uint32_t)(((uint32_t)(x))<<SMC_PMCTRL_RUNM_SHIFT))&SMC_PMCTRL_RUNM_MASK) /**< SMC_PMCTRL.RUNM Field                   */
/** @} */

/** @name STOPCTRL - Stop Control Register */ /** @{ */
#define SMC_STOPCTRL_PSTOPO_MASK                 (0xC0U)                                             /**< SMC_STOPCTRL.PSTOPO Mask                */
#define SMC_STOPCTRL_PSTOPO_SHIFT                (6U)                                                /**< SMC_STOPCTRL.PSTOPO Position            */
#define SMC_STOPCTRL_PSTOPO(x)                   (((uint32_t)(((uint32_t)(x))<<SMC_STOPCTRL_PSTOPO_SHIFT))&SMC_STOPCTRL_PSTOPO_MASK) /**< SMC_STOPCTRL.PSTOPO Field               */
#define SMC_STOPCTRL_STOPO_MASK                  (0xC0U)                                             /**< SMC_STOPCTRL.STOPO Mask                 */
#define SMC_STOPCTRL_STOPO_SHIFT                 (6U)                                                /**< SMC_STOPCTRL.STOPO Position             */
#define SMC_STOPCTRL_STOPO(x)                    (((uint32_t)(((uint32_t)(x))<<SMC_STOPCTRL_STOPO_SHIFT))&SMC_STOPCTRL_STOPO_MASK) /**< SMC_STOPCTRL.STOPO Field                */
/** @} */

/** @name PMSTAT - Power Mode Status Register */ /** @{ */
#define SMC_PMSTAT_PMSTAT_MASK                   (0xFFU)                                             /**< SMC_PMSTAT.PMSTAT Mask                  */
#define SMC_PMSTAT_PMSTAT_SHIFT                  (0U)                                                /**< SMC_PMSTAT.PMSTAT Position              */
#define SMC_PMSTAT_PMSTAT(x)                     (((uint32_t)(((uint32_t)(x))<<SMC_PMSTAT_PMSTAT_SHIFT))&SMC_PMSTAT_PMSTAT_MASK) /**< SMC_PMSTAT.PMSTAT Field                 */
/** @} */

/** @} */ /* End group SMC_Register_Masks_GROUP */


/* SMC - Peripheral instance base addresses */
#define SMC_BasePtr                    0x4007E000UL //!< Peripheral base address
#define SMC                            ((SMC_Type *) SMC_BasePtr) //!< Freescale base pointer
#define SMC_BASE_PTR                   (SMC) //!< Freescale style base pointer

/** @} */ /* End group SMC_Peripheral_access_layer_GROUP */


/** @brief C Struct for SYST */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SYST_Peripheral_access_layer_GROUP SYST Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SYST (file:SYST)                     ================ */
/* ================================================================================ */

/**
 * @brief System timer
 */
/**
 * @struct SYST_Type
 * @brief  C Struct allowing access to SYST registers
 */
typedef struct SYST_Type {
   __IO uint32_t  CSR;                          /**< 0000: Control and Status Register                                  */
   __IO uint32_t  RVR;                          /**< 0004: Reload Value Register                                        */
   __IO uint32_t  CVR;                          /**< 0008: Current Value Register                                       */
   __I  uint32_t  CALIB;                        /**< 000C: Calibration Value Register                                   */
} SYST_Type;


/** @brief Register Masks for SYST */

/* -------------------------------------------------------------------------------- */
/* -----------     'SYST' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup SYST_Register_Masks_GROUP SYST Register Masks */
/** @{ */

/** @name CSR - Control and Status Register */ /** @{ */
#define SYST_CSR_ENABLE_MASK                     (0x1U)                                              /**< SYST_CSR.ENABLE Mask                    */
#define SYST_CSR_ENABLE_SHIFT                    (0U)                                                /**< SYST_CSR.ENABLE Position                */
#define SYST_CSR_ENABLE(x)                       (((uint32_t)(((uint32_t)(x))<<SYST_CSR_ENABLE_SHIFT))&SYST_CSR_ENABLE_MASK) /**< SYST_CSR.ENABLE Field                   */
#define SYST_CSR_TICKINT_MASK                    (0x2U)                                              /**< SYST_CSR.TICKINT Mask                   */
#define SYST_CSR_TICKINT_SHIFT                   (1U)                                                /**< SYST_CSR.TICKINT Position               */
#define SYST_CSR_TICKINT(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CSR_TICKINT_SHIFT))&SYST_CSR_TICKINT_MASK) /**< SYST_CSR.TICKINT Field                  */
#define SYST_CSR_CLKSOURCE_MASK                  (0x4U)                                              /**< SYST_CSR.CLKSOURCE Mask                 */
#define SYST_CSR_CLKSOURCE_SHIFT                 (2U)                                                /**< SYST_CSR.CLKSOURCE Position             */
#define SYST_CSR_CLKSOURCE(x)                    (((uint32_t)(((uint32_t)(x))<<SYST_CSR_CLKSOURCE_SHIFT))&SYST_CSR_CLKSOURCE_MASK) /**< SYST_CSR.CLKSOURCE Field                */
#define SYST_CSR_COUNTFLAG_MASK                  (0x10000U)                                          /**< SYST_CSR.COUNTFLAG Mask                 */
#define SYST_CSR_COUNTFLAG_SHIFT                 (16U)                                               /**< SYST_CSR.COUNTFLAG Position             */
#define SYST_CSR_COUNTFLAG(x)                    (((uint32_t)(((uint32_t)(x))<<SYST_CSR_COUNTFLAG_SHIFT))&SYST_CSR_COUNTFLAG_MASK) /**< SYST_CSR.COUNTFLAG Field                */
/** @} */

/** @name RVR - Reload Value Register */ /** @{ */
#define SYST_RVR_RELOAD_MASK                     (0xFFFFFFU)                                         /**< SYST_RVR.RELOAD Mask                    */
#define SYST_RVR_RELOAD_SHIFT                    (0U)                                                /**< SYST_RVR.RELOAD Position                */
#define SYST_RVR_RELOAD(x)                       (((uint32_t)(((uint32_t)(x))<<SYST_RVR_RELOAD_SHIFT))&SYST_RVR_RELOAD_MASK) /**< SYST_RVR.RELOAD Field                   */
/** @} */

/** @name CVR - Current Value Register */ /** @{ */
#define SYST_CVR_CURRENT_MASK                    (0xFFFFFFU)                                         /**< SYST_CVR.CURRENT Mask                   */
#define SYST_CVR_CURRENT_SHIFT                   (0U)                                                /**< SYST_CVR.CURRENT Position               */
#define SYST_CVR_CURRENT(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CVR_CURRENT_SHIFT))&SYST_CVR_CURRENT_MASK) /**< SYST_CVR.CURRENT Field                  */
/** @} */

/** @name CALIB - Calibration Value Register */ /** @{ */
#define SYST_CALIB_TENMS_MASK                    (0xFFFFFFU)                                         /**< SYST_CALIB.TENMS Mask                   */
#define SYST_CALIB_TENMS_SHIFT                   (0U)                                                /**< SYST_CALIB.TENMS Position               */
#define SYST_CALIB_TENMS(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CALIB_TENMS_SHIFT))&SYST_CALIB_TENMS_MASK) /**< SYST_CALIB.TENMS Field                  */
#define SYST_CALIB_SKEW_MASK                     (0x40000000U)                                       /**< SYST_CALIB.SKEW Mask                    */
#define SYST_CALIB_SKEW_SHIFT                    (30U)                                               /**< SYST_CALIB.SKEW Position                */
#define SYST_CALIB_SKEW(x)                       (((uint32_t)(((uint32_t)(x))<<SYST_CALIB_SKEW_SHIFT))&SYST_CALIB_SKEW_MASK) /**< SYST_CALIB.SKEW Field                   */
#define SYST_CALIB_NOREF_MASK                    (0x80000000U)                                       /**< SYST_CALIB.NOREF Mask                   */
#define SYST_CALIB_NOREF_SHIFT                   (31U)                                               /**< SYST_CALIB.NOREF Position               */
#define SYST_CALIB_NOREF(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CALIB_NOREF_SHIFT))&SYST_CALIB_NOREF_MASK) /**< SYST_CALIB.NOREF Field                  */
/** @} */

/** @} */ /* End group SYST_Register_Masks_GROUP */


/* SYST - Peripheral instance base addresses */
#define SYST_BasePtr                   0xE000E010UL //!< Peripheral base address
#define SYST                           ((SYST_Type *) SYST_BasePtr) //!< Freescale base pointer
#define SYST_BASE_PTR                  (SYST) //!< Freescale style base pointer

/** @} */ /* End group SYST_Peripheral_access_layer_GROUP */


/** @brief C Struct for TRGMUX */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup TRGMUX_Peripheral_access_layer_GROUP TRGMUX Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           TRGMUX (file:TRGMUX_S32K142)         ================ */
/* ================================================================================ */

/**
 * @brief Trigger MUX Control
 */
/**
 * @struct TRGMUX_Type
 * @brief  C Struct allowing access to TRGMUX registers
 */
typedef struct TRGMUX_Type {
   union {                                      /**< 0000: (size=0068)                                                  */
      __IO uint32_t  TRGMUXn[26];               /**< 0000: TRGMUX DMAMUX Register                                       */
      struct {                                  /**< 0000: (size=0068)                                                  */
         __IO uint32_t  TRGMUX_DMAMUX0;         /**< 0000: TRGMUX DMAMUX0 Register                                      */
         __IO uint32_t  TRGMUX_EXTOUT0;         /**< 0004: TRGMUX EXTOUT0 Register                                      */
         __IO uint32_t  TRGMUX_EXTOUT1;         /**< 0008: TRGMUX EXTOUT1 Register                                      */
         __IO uint32_t  TRGMUX_ADC0;            /**< 000C: TRGMUX ADC0 Register                                         */
         __IO uint32_t  TRGMUX_ADC1;            /**< 0010: TRGMUX ADC1 Register                                         */
              uint8_t   RESERVED_0[8];          /**< 0014: 0x8 bytes                                                    */
         __IO uint32_t  TRGMUX_CMP0;            /**< 001C: TRGMUX CMP0 Register                                         */
              uint8_t   RESERVED_1[8];          /**< 0020: 0x8 bytes                                                    */
         __IO uint32_t  TRGMUX_FTM0;            /**< 0028: TRGMUX FTM0 Register                                         */
         __IO uint32_t  TRGMUX_FTM1;            /**< 002C: TRGMUX FTM1 Register                                         */
         __IO uint32_t  TRGMUX_FTM2;            /**< 0030: TRGMUX FTM2 Register                                         */
         __IO uint32_t  TRGMUX_FTM3;            /**< 0034: TRGMUX FTM3 Register                                         */
         __IO uint32_t  TRGMUX_PDB0;            /**< 0038: TRGMUX PDB0 Register                                         */
         __IO uint32_t  TRGMUX_PDB1;            /**< 003C: TRGMUX PDB1 Register                                         */
              uint8_t   RESERVED_2[4];          /**< 0040: 0x4 bytes                                                    */
         __IO uint32_t  TRGMUX_FLEXIO;          /**< 0044: TRGMUX FLEXIO Register                                       */
         __IO uint32_t  TRGMUX_LPIT0;           /**< 0048: TRGMUX LPIT0 Register                                        */
         __IO uint32_t  TRGMUX_LPUART0;         /**< 004C: TRGMUX LPUART0 Register                                      */
         __IO uint32_t  TRGMUX_LPUART1;         /**< 0050: TRGMUX LPUART1 Register                                      */
         __IO uint32_t  TRGMUX_LPI2C0;          /**< 0054: TRGMUX LPI2C0 Register                                       */
              uint8_t   RESERVED_3[4];          /**< 0058: 0x4 bytes                                                    */
         __IO uint32_t  TRGMUX_LPSPI0;          /**< 005C: TRGMUX LPSPI0 Register                                       */
         __IO uint32_t  TRGMUX_LPSPI1;          /**< 0060: TRGMUX LPSPI1 Register                                       */
         __IO uint32_t  TRGMUX_LPTMR0;          /**< 0064: TRGMUX LPTMR0 Register                                       */
      };
   };
} TRGMUX_Type;


/** @brief Register Masks for TRGMUX */

/* -------------------------------------------------------------------------------- */
/* -----------     'TRGMUX' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup TRGMUX_Register_Masks_GROUP TRGMUX Register Masks */
/** @{ */

/** @name TRGMUXn - TRGMUX DMAMUX Register */ /** @{ */
#define TRGMUX_TRGMUXn_SEL0_MASK                 (0x3FU)                                             /**< TRGMUX_TRGMUXn.SEL0 Mask                */
#define TRGMUX_TRGMUXn_SEL0_SHIFT                (0U)                                                /**< TRGMUX_TRGMUXn.SEL0 Position            */
#define TRGMUX_TRGMUXn_SEL0(x)                   (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUXn_SEL0_SHIFT))&TRGMUX_TRGMUXn_SEL0_MASK) /**< TRGMUX_TRGMUXn.SEL0 Field               */
#define TRGMUX_TRGMUXn_SEL1_MASK                 (0x3F00U)                                           /**< TRGMUX_TRGMUXn.SEL1 Mask                */
#define TRGMUX_TRGMUXn_SEL1_SHIFT                (8U)                                                /**< TRGMUX_TRGMUXn.SEL1 Position            */
#define TRGMUX_TRGMUXn_SEL1(x)                   (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUXn_SEL1_SHIFT))&TRGMUX_TRGMUXn_SEL1_MASK) /**< TRGMUX_TRGMUXn.SEL1 Field               */
#define TRGMUX_TRGMUXn_SEL2_MASK                 (0x3F0000U)                                         /**< TRGMUX_TRGMUXn.SEL2 Mask                */
#define TRGMUX_TRGMUXn_SEL2_SHIFT                (16U)                                               /**< TRGMUX_TRGMUXn.SEL2 Position            */
#define TRGMUX_TRGMUXn_SEL2(x)                   (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUXn_SEL2_SHIFT))&TRGMUX_TRGMUXn_SEL2_MASK) /**< TRGMUX_TRGMUXn.SEL2 Field               */
#define TRGMUX_TRGMUXn_SEL3_MASK                 (0x3F000000U)                                       /**< TRGMUX_TRGMUXn.SEL3 Mask                */
#define TRGMUX_TRGMUXn_SEL3_SHIFT                (24U)                                               /**< TRGMUX_TRGMUXn.SEL3 Position            */
#define TRGMUX_TRGMUXn_SEL3(x)                   (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUXn_SEL3_SHIFT))&TRGMUX_TRGMUXn_SEL3_MASK) /**< TRGMUX_TRGMUXn.SEL3 Field               */
#define TRGMUX_TRGMUXn_LK_MASK                   (0x80000000U)                                       /**< TRGMUX_TRGMUXn.LK Mask                  */
#define TRGMUX_TRGMUXn_LK_SHIFT                  (31U)                                               /**< TRGMUX_TRGMUXn.LK Position              */
#define TRGMUX_TRGMUXn_LK(x)                     (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUXn_LK_SHIFT))&TRGMUX_TRGMUXn_LK_MASK) /**< TRGMUX_TRGMUXn.LK Field                 */
/** @} */

/** @name TRGMUX_DMAMUX0 - TRGMUX DMAMUX0 Register */ /** @{ */
#define TRGMUX_TRGMUX_DMAMUX0_SEL0_MASK          (0x3FU)                                             /**< TRGMUX_TRGMUX_DMAMUX0.SEL0 Mask         */
#define TRGMUX_TRGMUX_DMAMUX0_SEL0_SHIFT         (0U)                                                /**< TRGMUX_TRGMUX_DMAMUX0.SEL0 Position     */
#define TRGMUX_TRGMUX_DMAMUX0_SEL0(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_DMAMUX0_SEL0_SHIFT))&TRGMUX_TRGMUX_DMAMUX0_SEL0_MASK) /**< TRGMUX_TRGMUX_DMAMUX0.SEL0 Field        */
#define TRGMUX_TRGMUX_DMAMUX0_SEL1_MASK          (0x3F00U)                                           /**< TRGMUX_TRGMUX_DMAMUX0.SEL1 Mask         */
#define TRGMUX_TRGMUX_DMAMUX0_SEL1_SHIFT         (8U)                                                /**< TRGMUX_TRGMUX_DMAMUX0.SEL1 Position     */
#define TRGMUX_TRGMUX_DMAMUX0_SEL1(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_DMAMUX0_SEL1_SHIFT))&TRGMUX_TRGMUX_DMAMUX0_SEL1_MASK) /**< TRGMUX_TRGMUX_DMAMUX0.SEL1 Field        */
#define TRGMUX_TRGMUX_DMAMUX0_SEL2_MASK          (0x3F0000U)                                         /**< TRGMUX_TRGMUX_DMAMUX0.SEL2 Mask         */
#define TRGMUX_TRGMUX_DMAMUX0_SEL2_SHIFT         (16U)                                               /**< TRGMUX_TRGMUX_DMAMUX0.SEL2 Position     */
#define TRGMUX_TRGMUX_DMAMUX0_SEL2(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_DMAMUX0_SEL2_SHIFT))&TRGMUX_TRGMUX_DMAMUX0_SEL2_MASK) /**< TRGMUX_TRGMUX_DMAMUX0.SEL2 Field        */
#define TRGMUX_TRGMUX_DMAMUX0_SEL3_MASK          (0x3F000000U)                                       /**< TRGMUX_TRGMUX_DMAMUX0.SEL3 Mask         */
#define TRGMUX_TRGMUX_DMAMUX0_SEL3_SHIFT         (24U)                                               /**< TRGMUX_TRGMUX_DMAMUX0.SEL3 Position     */
#define TRGMUX_TRGMUX_DMAMUX0_SEL3(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_DMAMUX0_SEL3_SHIFT))&TRGMUX_TRGMUX_DMAMUX0_SEL3_MASK) /**< TRGMUX_TRGMUX_DMAMUX0.SEL3 Field        */
#define TRGMUX_TRGMUX_DMAMUX0_LK_MASK            (0x80000000U)                                       /**< TRGMUX_TRGMUX_DMAMUX0.LK Mask           */
#define TRGMUX_TRGMUX_DMAMUX0_LK_SHIFT           (31U)                                               /**< TRGMUX_TRGMUX_DMAMUX0.LK Position       */
#define TRGMUX_TRGMUX_DMAMUX0_LK(x)              (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_DMAMUX0_LK_SHIFT))&TRGMUX_TRGMUX_DMAMUX0_LK_MASK) /**< TRGMUX_TRGMUX_DMAMUX0.LK Field          */
/** @} */

/** @name TRGMUX_EXTOUT0 - TRGMUX EXTOUT0 Register */ /** @{ */
#define TRGMUX_TRGMUX_EXTOUT0_SEL0_MASK          (0x3FU)                                             /**< TRGMUX_TRGMUX_EXTOUT0.SEL0 Mask         */
#define TRGMUX_TRGMUX_EXTOUT0_SEL0_SHIFT         (0U)                                                /**< TRGMUX_TRGMUX_EXTOUT0.SEL0 Position     */
#define TRGMUX_TRGMUX_EXTOUT0_SEL0(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_EXTOUT0_SEL0_SHIFT))&TRGMUX_TRGMUX_EXTOUT0_SEL0_MASK) /**< TRGMUX_TRGMUX_EXTOUT0.SEL0 Field        */
#define TRGMUX_TRGMUX_EXTOUT0_SEL1_MASK          (0x3F00U)                                           /**< TRGMUX_TRGMUX_EXTOUT0.SEL1 Mask         */
#define TRGMUX_TRGMUX_EXTOUT0_SEL1_SHIFT         (8U)                                                /**< TRGMUX_TRGMUX_EXTOUT0.SEL1 Position     */
#define TRGMUX_TRGMUX_EXTOUT0_SEL1(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_EXTOUT0_SEL1_SHIFT))&TRGMUX_TRGMUX_EXTOUT0_SEL1_MASK) /**< TRGMUX_TRGMUX_EXTOUT0.SEL1 Field        */
#define TRGMUX_TRGMUX_EXTOUT0_SEL2_MASK          (0x3F0000U)                                         /**< TRGMUX_TRGMUX_EXTOUT0.SEL2 Mask         */
#define TRGMUX_TRGMUX_EXTOUT0_SEL2_SHIFT         (16U)                                               /**< TRGMUX_TRGMUX_EXTOUT0.SEL2 Position     */
#define TRGMUX_TRGMUX_EXTOUT0_SEL2(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_EXTOUT0_SEL2_SHIFT))&TRGMUX_TRGMUX_EXTOUT0_SEL2_MASK) /**< TRGMUX_TRGMUX_EXTOUT0.SEL2 Field        */
#define TRGMUX_TRGMUX_EXTOUT0_SEL3_MASK          (0x3F000000U)                                       /**< TRGMUX_TRGMUX_EXTOUT0.SEL3 Mask         */
#define TRGMUX_TRGMUX_EXTOUT0_SEL3_SHIFT         (24U)                                               /**< TRGMUX_TRGMUX_EXTOUT0.SEL3 Position     */
#define TRGMUX_TRGMUX_EXTOUT0_SEL3(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_EXTOUT0_SEL3_SHIFT))&TRGMUX_TRGMUX_EXTOUT0_SEL3_MASK) /**< TRGMUX_TRGMUX_EXTOUT0.SEL3 Field        */
#define TRGMUX_TRGMUX_EXTOUT0_LK_MASK            (0x80000000U)                                       /**< TRGMUX_TRGMUX_EXTOUT0.LK Mask           */
#define TRGMUX_TRGMUX_EXTOUT0_LK_SHIFT           (31U)                                               /**< TRGMUX_TRGMUX_EXTOUT0.LK Position       */
#define TRGMUX_TRGMUX_EXTOUT0_LK(x)              (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_EXTOUT0_LK_SHIFT))&TRGMUX_TRGMUX_EXTOUT0_LK_MASK) /**< TRGMUX_TRGMUX_EXTOUT0.LK Field          */
/** @} */

/** @name TRGMUX_EXTOUT1 - TRGMUX EXTOUT1 Register */ /** @{ */
#define TRGMUX_TRGMUX_EXTOUT1_SEL0_MASK          (0x3FU)                                             /**< TRGMUX_TRGMUX_EXTOUT1.SEL0 Mask         */
#define TRGMUX_TRGMUX_EXTOUT1_SEL0_SHIFT         (0U)                                                /**< TRGMUX_TRGMUX_EXTOUT1.SEL0 Position     */
#define TRGMUX_TRGMUX_EXTOUT1_SEL0(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_EXTOUT1_SEL0_SHIFT))&TRGMUX_TRGMUX_EXTOUT1_SEL0_MASK) /**< TRGMUX_TRGMUX_EXTOUT1.SEL0 Field        */
#define TRGMUX_TRGMUX_EXTOUT1_SEL1_MASK          (0x3F00U)                                           /**< TRGMUX_TRGMUX_EXTOUT1.SEL1 Mask         */
#define TRGMUX_TRGMUX_EXTOUT1_SEL1_SHIFT         (8U)                                                /**< TRGMUX_TRGMUX_EXTOUT1.SEL1 Position     */
#define TRGMUX_TRGMUX_EXTOUT1_SEL1(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_EXTOUT1_SEL1_SHIFT))&TRGMUX_TRGMUX_EXTOUT1_SEL1_MASK) /**< TRGMUX_TRGMUX_EXTOUT1.SEL1 Field        */
#define TRGMUX_TRGMUX_EXTOUT1_SEL2_MASK          (0x3F0000U)                                         /**< TRGMUX_TRGMUX_EXTOUT1.SEL2 Mask         */
#define TRGMUX_TRGMUX_EXTOUT1_SEL2_SHIFT         (16U)                                               /**< TRGMUX_TRGMUX_EXTOUT1.SEL2 Position     */
#define TRGMUX_TRGMUX_EXTOUT1_SEL2(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_EXTOUT1_SEL2_SHIFT))&TRGMUX_TRGMUX_EXTOUT1_SEL2_MASK) /**< TRGMUX_TRGMUX_EXTOUT1.SEL2 Field        */
#define TRGMUX_TRGMUX_EXTOUT1_SEL3_MASK          (0x3F000000U)                                       /**< TRGMUX_TRGMUX_EXTOUT1.SEL3 Mask         */
#define TRGMUX_TRGMUX_EXTOUT1_SEL3_SHIFT         (24U)                                               /**< TRGMUX_TRGMUX_EXTOUT1.SEL3 Position     */
#define TRGMUX_TRGMUX_EXTOUT1_SEL3(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_EXTOUT1_SEL3_SHIFT))&TRGMUX_TRGMUX_EXTOUT1_SEL3_MASK) /**< TRGMUX_TRGMUX_EXTOUT1.SEL3 Field        */
#define TRGMUX_TRGMUX_EXTOUT1_LK_MASK            (0x80000000U)                                       /**< TRGMUX_TRGMUX_EXTOUT1.LK Mask           */
#define TRGMUX_TRGMUX_EXTOUT1_LK_SHIFT           (31U)                                               /**< TRGMUX_TRGMUX_EXTOUT1.LK Position       */
#define TRGMUX_TRGMUX_EXTOUT1_LK(x)              (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_EXTOUT1_LK_SHIFT))&TRGMUX_TRGMUX_EXTOUT1_LK_MASK) /**< TRGMUX_TRGMUX_EXTOUT1.LK Field          */
/** @} */

/** @name TRGMUX_ADC0 - TRGMUX ADC0 Register */ /** @{ */
#define TRGMUX_TRGMUX_ADC0_SEL0_MASK             (0x3FU)                                             /**< TRGMUX_TRGMUX_ADC0.SEL0 Mask            */
#define TRGMUX_TRGMUX_ADC0_SEL0_SHIFT            (0U)                                                /**< TRGMUX_TRGMUX_ADC0.SEL0 Position        */
#define TRGMUX_TRGMUX_ADC0_SEL0(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_ADC0_SEL0_SHIFT))&TRGMUX_TRGMUX_ADC0_SEL0_MASK) /**< TRGMUX_TRGMUX_ADC0.SEL0 Field           */
#define TRGMUX_TRGMUX_ADC0_SEL1_MASK             (0x3F00U)                                           /**< TRGMUX_TRGMUX_ADC0.SEL1 Mask            */
#define TRGMUX_TRGMUX_ADC0_SEL1_SHIFT            (8U)                                                /**< TRGMUX_TRGMUX_ADC0.SEL1 Position        */
#define TRGMUX_TRGMUX_ADC0_SEL1(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_ADC0_SEL1_SHIFT))&TRGMUX_TRGMUX_ADC0_SEL1_MASK) /**< TRGMUX_TRGMUX_ADC0.SEL1 Field           */
#define TRGMUX_TRGMUX_ADC0_SEL2_MASK             (0x3F0000U)                                         /**< TRGMUX_TRGMUX_ADC0.SEL2 Mask            */
#define TRGMUX_TRGMUX_ADC0_SEL2_SHIFT            (16U)                                               /**< TRGMUX_TRGMUX_ADC0.SEL2 Position        */
#define TRGMUX_TRGMUX_ADC0_SEL2(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_ADC0_SEL2_SHIFT))&TRGMUX_TRGMUX_ADC0_SEL2_MASK) /**< TRGMUX_TRGMUX_ADC0.SEL2 Field           */
#define TRGMUX_TRGMUX_ADC0_SEL3_MASK             (0x3F000000U)                                       /**< TRGMUX_TRGMUX_ADC0.SEL3 Mask            */
#define TRGMUX_TRGMUX_ADC0_SEL3_SHIFT            (24U)                                               /**< TRGMUX_TRGMUX_ADC0.SEL3 Position        */
#define TRGMUX_TRGMUX_ADC0_SEL3(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_ADC0_SEL3_SHIFT))&TRGMUX_TRGMUX_ADC0_SEL3_MASK) /**< TRGMUX_TRGMUX_ADC0.SEL3 Field           */
#define TRGMUX_TRGMUX_ADC0_LK_MASK               (0x80000000U)                                       /**< TRGMUX_TRGMUX_ADC0.LK Mask              */
#define TRGMUX_TRGMUX_ADC0_LK_SHIFT              (31U)                                               /**< TRGMUX_TRGMUX_ADC0.LK Position          */
#define TRGMUX_TRGMUX_ADC0_LK(x)                 (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_ADC0_LK_SHIFT))&TRGMUX_TRGMUX_ADC0_LK_MASK) /**< TRGMUX_TRGMUX_ADC0.LK Field             */
/** @} */

/** @name TRGMUX_ADC1 - TRGMUX ADC1 Register */ /** @{ */
#define TRGMUX_TRGMUX_ADC1_SEL0_MASK             (0x3FU)                                             /**< TRGMUX_TRGMUX_ADC1.SEL0 Mask            */
#define TRGMUX_TRGMUX_ADC1_SEL0_SHIFT            (0U)                                                /**< TRGMUX_TRGMUX_ADC1.SEL0 Position        */
#define TRGMUX_TRGMUX_ADC1_SEL0(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_ADC1_SEL0_SHIFT))&TRGMUX_TRGMUX_ADC1_SEL0_MASK) /**< TRGMUX_TRGMUX_ADC1.SEL0 Field           */
#define TRGMUX_TRGMUX_ADC1_SEL1_MASK             (0x3F00U)                                           /**< TRGMUX_TRGMUX_ADC1.SEL1 Mask            */
#define TRGMUX_TRGMUX_ADC1_SEL1_SHIFT            (8U)                                                /**< TRGMUX_TRGMUX_ADC1.SEL1 Position        */
#define TRGMUX_TRGMUX_ADC1_SEL1(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_ADC1_SEL1_SHIFT))&TRGMUX_TRGMUX_ADC1_SEL1_MASK) /**< TRGMUX_TRGMUX_ADC1.SEL1 Field           */
#define TRGMUX_TRGMUX_ADC1_SEL2_MASK             (0x3F0000U)                                         /**< TRGMUX_TRGMUX_ADC1.SEL2 Mask            */
#define TRGMUX_TRGMUX_ADC1_SEL2_SHIFT            (16U)                                               /**< TRGMUX_TRGMUX_ADC1.SEL2 Position        */
#define TRGMUX_TRGMUX_ADC1_SEL2(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_ADC1_SEL2_SHIFT))&TRGMUX_TRGMUX_ADC1_SEL2_MASK) /**< TRGMUX_TRGMUX_ADC1.SEL2 Field           */
#define TRGMUX_TRGMUX_ADC1_SEL3_MASK             (0x3F000000U)                                       /**< TRGMUX_TRGMUX_ADC1.SEL3 Mask            */
#define TRGMUX_TRGMUX_ADC1_SEL3_SHIFT            (24U)                                               /**< TRGMUX_TRGMUX_ADC1.SEL3 Position        */
#define TRGMUX_TRGMUX_ADC1_SEL3(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_ADC1_SEL3_SHIFT))&TRGMUX_TRGMUX_ADC1_SEL3_MASK) /**< TRGMUX_TRGMUX_ADC1.SEL3 Field           */
#define TRGMUX_TRGMUX_ADC1_LK_MASK               (0x80000000U)                                       /**< TRGMUX_TRGMUX_ADC1.LK Mask              */
#define TRGMUX_TRGMUX_ADC1_LK_SHIFT              (31U)                                               /**< TRGMUX_TRGMUX_ADC1.LK Position          */
#define TRGMUX_TRGMUX_ADC1_LK(x)                 (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_ADC1_LK_SHIFT))&TRGMUX_TRGMUX_ADC1_LK_MASK) /**< TRGMUX_TRGMUX_ADC1.LK Field             */
/** @} */

/** @name TRGMUX_CMP0 - TRGMUX CMP0 Register */ /** @{ */
#define TRGMUX_TRGMUX_CMP0_SEL0_MASK             (0x3FU)                                             /**< TRGMUX_TRGMUX_CMP0.SEL0 Mask            */
#define TRGMUX_TRGMUX_CMP0_SEL0_SHIFT            (0U)                                                /**< TRGMUX_TRGMUX_CMP0.SEL0 Position        */
#define TRGMUX_TRGMUX_CMP0_SEL0(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_CMP0_SEL0_SHIFT))&TRGMUX_TRGMUX_CMP0_SEL0_MASK) /**< TRGMUX_TRGMUX_CMP0.SEL0 Field           */
#define TRGMUX_TRGMUX_CMP0_SEL1_MASK             (0x3F00U)                                           /**< TRGMUX_TRGMUX_CMP0.SEL1 Mask            */
#define TRGMUX_TRGMUX_CMP0_SEL1_SHIFT            (8U)                                                /**< TRGMUX_TRGMUX_CMP0.SEL1 Position        */
#define TRGMUX_TRGMUX_CMP0_SEL1(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_CMP0_SEL1_SHIFT))&TRGMUX_TRGMUX_CMP0_SEL1_MASK) /**< TRGMUX_TRGMUX_CMP0.SEL1 Field           */
#define TRGMUX_TRGMUX_CMP0_SEL2_MASK             (0x3F0000U)                                         /**< TRGMUX_TRGMUX_CMP0.SEL2 Mask            */
#define TRGMUX_TRGMUX_CMP0_SEL2_SHIFT            (16U)                                               /**< TRGMUX_TRGMUX_CMP0.SEL2 Position        */
#define TRGMUX_TRGMUX_CMP0_SEL2(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_CMP0_SEL2_SHIFT))&TRGMUX_TRGMUX_CMP0_SEL2_MASK) /**< TRGMUX_TRGMUX_CMP0.SEL2 Field           */
#define TRGMUX_TRGMUX_CMP0_SEL3_MASK             (0x3F000000U)                                       /**< TRGMUX_TRGMUX_CMP0.SEL3 Mask            */
#define TRGMUX_TRGMUX_CMP0_SEL3_SHIFT            (24U)                                               /**< TRGMUX_TRGMUX_CMP0.SEL3 Position        */
#define TRGMUX_TRGMUX_CMP0_SEL3(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_CMP0_SEL3_SHIFT))&TRGMUX_TRGMUX_CMP0_SEL3_MASK) /**< TRGMUX_TRGMUX_CMP0.SEL3 Field           */
#define TRGMUX_TRGMUX_CMP0_LK_MASK               (0x80000000U)                                       /**< TRGMUX_TRGMUX_CMP0.LK Mask              */
#define TRGMUX_TRGMUX_CMP0_LK_SHIFT              (31U)                                               /**< TRGMUX_TRGMUX_CMP0.LK Position          */
#define TRGMUX_TRGMUX_CMP0_LK(x)                 (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_CMP0_LK_SHIFT))&TRGMUX_TRGMUX_CMP0_LK_MASK) /**< TRGMUX_TRGMUX_CMP0.LK Field             */
/** @} */

/** @name TRGMUX_FTM0 - TRGMUX FTM0 Register */ /** @{ */
#define TRGMUX_TRGMUX_FTM0_SEL0_MASK             (0x3FU)                                             /**< TRGMUX_TRGMUX_FTM0.SEL0 Mask            */
#define TRGMUX_TRGMUX_FTM0_SEL0_SHIFT            (0U)                                                /**< TRGMUX_TRGMUX_FTM0.SEL0 Position        */
#define TRGMUX_TRGMUX_FTM0_SEL0(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM0_SEL0_SHIFT))&TRGMUX_TRGMUX_FTM0_SEL0_MASK) /**< TRGMUX_TRGMUX_FTM0.SEL0 Field           */
#define TRGMUX_TRGMUX_FTM0_SEL1_MASK             (0x3F00U)                                           /**< TRGMUX_TRGMUX_FTM0.SEL1 Mask            */
#define TRGMUX_TRGMUX_FTM0_SEL1_SHIFT            (8U)                                                /**< TRGMUX_TRGMUX_FTM0.SEL1 Position        */
#define TRGMUX_TRGMUX_FTM0_SEL1(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM0_SEL1_SHIFT))&TRGMUX_TRGMUX_FTM0_SEL1_MASK) /**< TRGMUX_TRGMUX_FTM0.SEL1 Field           */
#define TRGMUX_TRGMUX_FTM0_SEL2_MASK             (0x3F0000U)                                         /**< TRGMUX_TRGMUX_FTM0.SEL2 Mask            */
#define TRGMUX_TRGMUX_FTM0_SEL2_SHIFT            (16U)                                               /**< TRGMUX_TRGMUX_FTM0.SEL2 Position        */
#define TRGMUX_TRGMUX_FTM0_SEL2(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM0_SEL2_SHIFT))&TRGMUX_TRGMUX_FTM0_SEL2_MASK) /**< TRGMUX_TRGMUX_FTM0.SEL2 Field           */
#define TRGMUX_TRGMUX_FTM0_SEL3_MASK             (0x3F000000U)                                       /**< TRGMUX_TRGMUX_FTM0.SEL3 Mask            */
#define TRGMUX_TRGMUX_FTM0_SEL3_SHIFT            (24U)                                               /**< TRGMUX_TRGMUX_FTM0.SEL3 Position        */
#define TRGMUX_TRGMUX_FTM0_SEL3(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM0_SEL3_SHIFT))&TRGMUX_TRGMUX_FTM0_SEL3_MASK) /**< TRGMUX_TRGMUX_FTM0.SEL3 Field           */
#define TRGMUX_TRGMUX_FTM0_LK_MASK               (0x80000000U)                                       /**< TRGMUX_TRGMUX_FTM0.LK Mask              */
#define TRGMUX_TRGMUX_FTM0_LK_SHIFT              (31U)                                               /**< TRGMUX_TRGMUX_FTM0.LK Position          */
#define TRGMUX_TRGMUX_FTM0_LK(x)                 (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM0_LK_SHIFT))&TRGMUX_TRGMUX_FTM0_LK_MASK) /**< TRGMUX_TRGMUX_FTM0.LK Field             */
/** @} */

/** @name TRGMUX_FTM1 - TRGMUX FTM1 Register */ /** @{ */
#define TRGMUX_TRGMUX_FTM1_SEL0_MASK             (0x3FU)                                             /**< TRGMUX_TRGMUX_FTM1.SEL0 Mask            */
#define TRGMUX_TRGMUX_FTM1_SEL0_SHIFT            (0U)                                                /**< TRGMUX_TRGMUX_FTM1.SEL0 Position        */
#define TRGMUX_TRGMUX_FTM1_SEL0(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM1_SEL0_SHIFT))&TRGMUX_TRGMUX_FTM1_SEL0_MASK) /**< TRGMUX_TRGMUX_FTM1.SEL0 Field           */
#define TRGMUX_TRGMUX_FTM1_SEL1_MASK             (0x3F00U)                                           /**< TRGMUX_TRGMUX_FTM1.SEL1 Mask            */
#define TRGMUX_TRGMUX_FTM1_SEL1_SHIFT            (8U)                                                /**< TRGMUX_TRGMUX_FTM1.SEL1 Position        */
#define TRGMUX_TRGMUX_FTM1_SEL1(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM1_SEL1_SHIFT))&TRGMUX_TRGMUX_FTM1_SEL1_MASK) /**< TRGMUX_TRGMUX_FTM1.SEL1 Field           */
#define TRGMUX_TRGMUX_FTM1_SEL2_MASK             (0x3F0000U)                                         /**< TRGMUX_TRGMUX_FTM1.SEL2 Mask            */
#define TRGMUX_TRGMUX_FTM1_SEL2_SHIFT            (16U)                                               /**< TRGMUX_TRGMUX_FTM1.SEL2 Position        */
#define TRGMUX_TRGMUX_FTM1_SEL2(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM1_SEL2_SHIFT))&TRGMUX_TRGMUX_FTM1_SEL2_MASK) /**< TRGMUX_TRGMUX_FTM1.SEL2 Field           */
#define TRGMUX_TRGMUX_FTM1_SEL3_MASK             (0x3F000000U)                                       /**< TRGMUX_TRGMUX_FTM1.SEL3 Mask            */
#define TRGMUX_TRGMUX_FTM1_SEL3_SHIFT            (24U)                                               /**< TRGMUX_TRGMUX_FTM1.SEL3 Position        */
#define TRGMUX_TRGMUX_FTM1_SEL3(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM1_SEL3_SHIFT))&TRGMUX_TRGMUX_FTM1_SEL3_MASK) /**< TRGMUX_TRGMUX_FTM1.SEL3 Field           */
#define TRGMUX_TRGMUX_FTM1_LK_MASK               (0x80000000U)                                       /**< TRGMUX_TRGMUX_FTM1.LK Mask              */
#define TRGMUX_TRGMUX_FTM1_LK_SHIFT              (31U)                                               /**< TRGMUX_TRGMUX_FTM1.LK Position          */
#define TRGMUX_TRGMUX_FTM1_LK(x)                 (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM1_LK_SHIFT))&TRGMUX_TRGMUX_FTM1_LK_MASK) /**< TRGMUX_TRGMUX_FTM1.LK Field             */
/** @} */

/** @name TRGMUX_FTM2 - TRGMUX FTM2 Register */ /** @{ */
#define TRGMUX_TRGMUX_FTM2_SEL0_MASK             (0x3FU)                                             /**< TRGMUX_TRGMUX_FTM2.SEL0 Mask            */
#define TRGMUX_TRGMUX_FTM2_SEL0_SHIFT            (0U)                                                /**< TRGMUX_TRGMUX_FTM2.SEL0 Position        */
#define TRGMUX_TRGMUX_FTM2_SEL0(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM2_SEL0_SHIFT))&TRGMUX_TRGMUX_FTM2_SEL0_MASK) /**< TRGMUX_TRGMUX_FTM2.SEL0 Field           */
#define TRGMUX_TRGMUX_FTM2_SEL1_MASK             (0x3F00U)                                           /**< TRGMUX_TRGMUX_FTM2.SEL1 Mask            */
#define TRGMUX_TRGMUX_FTM2_SEL1_SHIFT            (8U)                                                /**< TRGMUX_TRGMUX_FTM2.SEL1 Position        */
#define TRGMUX_TRGMUX_FTM2_SEL1(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM2_SEL1_SHIFT))&TRGMUX_TRGMUX_FTM2_SEL1_MASK) /**< TRGMUX_TRGMUX_FTM2.SEL1 Field           */
#define TRGMUX_TRGMUX_FTM2_SEL2_MASK             (0x3F0000U)                                         /**< TRGMUX_TRGMUX_FTM2.SEL2 Mask            */
#define TRGMUX_TRGMUX_FTM2_SEL2_SHIFT            (16U)                                               /**< TRGMUX_TRGMUX_FTM2.SEL2 Position        */
#define TRGMUX_TRGMUX_FTM2_SEL2(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM2_SEL2_SHIFT))&TRGMUX_TRGMUX_FTM2_SEL2_MASK) /**< TRGMUX_TRGMUX_FTM2.SEL2 Field           */
#define TRGMUX_TRGMUX_FTM2_SEL3_MASK             (0x3F000000U)                                       /**< TRGMUX_TRGMUX_FTM2.SEL3 Mask            */
#define TRGMUX_TRGMUX_FTM2_SEL3_SHIFT            (24U)                                               /**< TRGMUX_TRGMUX_FTM2.SEL3 Position        */
#define TRGMUX_TRGMUX_FTM2_SEL3(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM2_SEL3_SHIFT))&TRGMUX_TRGMUX_FTM2_SEL3_MASK) /**< TRGMUX_TRGMUX_FTM2.SEL3 Field           */
#define TRGMUX_TRGMUX_FTM2_LK_MASK               (0x80000000U)                                       /**< TRGMUX_TRGMUX_FTM2.LK Mask              */
#define TRGMUX_TRGMUX_FTM2_LK_SHIFT              (31U)                                               /**< TRGMUX_TRGMUX_FTM2.LK Position          */
#define TRGMUX_TRGMUX_FTM2_LK(x)                 (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM2_LK_SHIFT))&TRGMUX_TRGMUX_FTM2_LK_MASK) /**< TRGMUX_TRGMUX_FTM2.LK Field             */
/** @} */

/** @name TRGMUX_FTM3 - TRGMUX FTM3 Register */ /** @{ */
#define TRGMUX_TRGMUX_FTM3_SEL0_MASK             (0x3FU)                                             /**< TRGMUX_TRGMUX_FTM3.SEL0 Mask            */
#define TRGMUX_TRGMUX_FTM3_SEL0_SHIFT            (0U)                                                /**< TRGMUX_TRGMUX_FTM3.SEL0 Position        */
#define TRGMUX_TRGMUX_FTM3_SEL0(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM3_SEL0_SHIFT))&TRGMUX_TRGMUX_FTM3_SEL0_MASK) /**< TRGMUX_TRGMUX_FTM3.SEL0 Field           */
#define TRGMUX_TRGMUX_FTM3_SEL1_MASK             (0x3F00U)                                           /**< TRGMUX_TRGMUX_FTM3.SEL1 Mask            */
#define TRGMUX_TRGMUX_FTM3_SEL1_SHIFT            (8U)                                                /**< TRGMUX_TRGMUX_FTM3.SEL1 Position        */
#define TRGMUX_TRGMUX_FTM3_SEL1(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM3_SEL1_SHIFT))&TRGMUX_TRGMUX_FTM3_SEL1_MASK) /**< TRGMUX_TRGMUX_FTM3.SEL1 Field           */
#define TRGMUX_TRGMUX_FTM3_SEL2_MASK             (0x3F0000U)                                         /**< TRGMUX_TRGMUX_FTM3.SEL2 Mask            */
#define TRGMUX_TRGMUX_FTM3_SEL2_SHIFT            (16U)                                               /**< TRGMUX_TRGMUX_FTM3.SEL2 Position        */
#define TRGMUX_TRGMUX_FTM3_SEL2(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM3_SEL2_SHIFT))&TRGMUX_TRGMUX_FTM3_SEL2_MASK) /**< TRGMUX_TRGMUX_FTM3.SEL2 Field           */
#define TRGMUX_TRGMUX_FTM3_SEL3_MASK             (0x3F000000U)                                       /**< TRGMUX_TRGMUX_FTM3.SEL3 Mask            */
#define TRGMUX_TRGMUX_FTM3_SEL3_SHIFT            (24U)                                               /**< TRGMUX_TRGMUX_FTM3.SEL3 Position        */
#define TRGMUX_TRGMUX_FTM3_SEL3(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM3_SEL3_SHIFT))&TRGMUX_TRGMUX_FTM3_SEL3_MASK) /**< TRGMUX_TRGMUX_FTM3.SEL3 Field           */
#define TRGMUX_TRGMUX_FTM3_LK_MASK               (0x80000000U)                                       /**< TRGMUX_TRGMUX_FTM3.LK Mask              */
#define TRGMUX_TRGMUX_FTM3_LK_SHIFT              (31U)                                               /**< TRGMUX_TRGMUX_FTM3.LK Position          */
#define TRGMUX_TRGMUX_FTM3_LK(x)                 (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FTM3_LK_SHIFT))&TRGMUX_TRGMUX_FTM3_LK_MASK) /**< TRGMUX_TRGMUX_FTM3.LK Field             */
/** @} */

/** @name TRGMUX_PDB0 - TRGMUX PDB0 Register */ /** @{ */
#define TRGMUX_TRGMUX_PDB0_SEL0_MASK             (0x3FU)                                             /**< TRGMUX_TRGMUX_PDB0.SEL0 Mask            */
#define TRGMUX_TRGMUX_PDB0_SEL0_SHIFT            (0U)                                                /**< TRGMUX_TRGMUX_PDB0.SEL0 Position        */
#define TRGMUX_TRGMUX_PDB0_SEL0(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_PDB0_SEL0_SHIFT))&TRGMUX_TRGMUX_PDB0_SEL0_MASK) /**< TRGMUX_TRGMUX_PDB0.SEL0 Field           */
#define TRGMUX_TRGMUX_PDB0_SEL1_MASK             (0x3F00U)                                           /**< TRGMUX_TRGMUX_PDB0.SEL1 Mask            */
#define TRGMUX_TRGMUX_PDB0_SEL1_SHIFT            (8U)                                                /**< TRGMUX_TRGMUX_PDB0.SEL1 Position        */
#define TRGMUX_TRGMUX_PDB0_SEL1(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_PDB0_SEL1_SHIFT))&TRGMUX_TRGMUX_PDB0_SEL1_MASK) /**< TRGMUX_TRGMUX_PDB0.SEL1 Field           */
#define TRGMUX_TRGMUX_PDB0_SEL2_MASK             (0x3F0000U)                                         /**< TRGMUX_TRGMUX_PDB0.SEL2 Mask            */
#define TRGMUX_TRGMUX_PDB0_SEL2_SHIFT            (16U)                                               /**< TRGMUX_TRGMUX_PDB0.SEL2 Position        */
#define TRGMUX_TRGMUX_PDB0_SEL2(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_PDB0_SEL2_SHIFT))&TRGMUX_TRGMUX_PDB0_SEL2_MASK) /**< TRGMUX_TRGMUX_PDB0.SEL2 Field           */
#define TRGMUX_TRGMUX_PDB0_SEL3_MASK             (0x3F000000U)                                       /**< TRGMUX_TRGMUX_PDB0.SEL3 Mask            */
#define TRGMUX_TRGMUX_PDB0_SEL3_SHIFT            (24U)                                               /**< TRGMUX_TRGMUX_PDB0.SEL3 Position        */
#define TRGMUX_TRGMUX_PDB0_SEL3(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_PDB0_SEL3_SHIFT))&TRGMUX_TRGMUX_PDB0_SEL3_MASK) /**< TRGMUX_TRGMUX_PDB0.SEL3 Field           */
#define TRGMUX_TRGMUX_PDB0_LK_MASK               (0x80000000U)                                       /**< TRGMUX_TRGMUX_PDB0.LK Mask              */
#define TRGMUX_TRGMUX_PDB0_LK_SHIFT              (31U)                                               /**< TRGMUX_TRGMUX_PDB0.LK Position          */
#define TRGMUX_TRGMUX_PDB0_LK(x)                 (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_PDB0_LK_SHIFT))&TRGMUX_TRGMUX_PDB0_LK_MASK) /**< TRGMUX_TRGMUX_PDB0.LK Field             */
/** @} */

/** @name TRGMUX_PDB1 - TRGMUX PDB1 Register */ /** @{ */
#define TRGMUX_TRGMUX_PDB1_SEL0_MASK             (0x3FU)                                             /**< TRGMUX_TRGMUX_PDB1.SEL0 Mask            */
#define TRGMUX_TRGMUX_PDB1_SEL0_SHIFT            (0U)                                                /**< TRGMUX_TRGMUX_PDB1.SEL0 Position        */
#define TRGMUX_TRGMUX_PDB1_SEL0(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_PDB1_SEL0_SHIFT))&TRGMUX_TRGMUX_PDB1_SEL0_MASK) /**< TRGMUX_TRGMUX_PDB1.SEL0 Field           */
#define TRGMUX_TRGMUX_PDB1_SEL1_MASK             (0x3F00U)                                           /**< TRGMUX_TRGMUX_PDB1.SEL1 Mask            */
#define TRGMUX_TRGMUX_PDB1_SEL1_SHIFT            (8U)                                                /**< TRGMUX_TRGMUX_PDB1.SEL1 Position        */
#define TRGMUX_TRGMUX_PDB1_SEL1(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_PDB1_SEL1_SHIFT))&TRGMUX_TRGMUX_PDB1_SEL1_MASK) /**< TRGMUX_TRGMUX_PDB1.SEL1 Field           */
#define TRGMUX_TRGMUX_PDB1_SEL2_MASK             (0x3F0000U)                                         /**< TRGMUX_TRGMUX_PDB1.SEL2 Mask            */
#define TRGMUX_TRGMUX_PDB1_SEL2_SHIFT            (16U)                                               /**< TRGMUX_TRGMUX_PDB1.SEL2 Position        */
#define TRGMUX_TRGMUX_PDB1_SEL2(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_PDB1_SEL2_SHIFT))&TRGMUX_TRGMUX_PDB1_SEL2_MASK) /**< TRGMUX_TRGMUX_PDB1.SEL2 Field           */
#define TRGMUX_TRGMUX_PDB1_SEL3_MASK             (0x3F000000U)                                       /**< TRGMUX_TRGMUX_PDB1.SEL3 Mask            */
#define TRGMUX_TRGMUX_PDB1_SEL3_SHIFT            (24U)                                               /**< TRGMUX_TRGMUX_PDB1.SEL3 Position        */
#define TRGMUX_TRGMUX_PDB1_SEL3(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_PDB1_SEL3_SHIFT))&TRGMUX_TRGMUX_PDB1_SEL3_MASK) /**< TRGMUX_TRGMUX_PDB1.SEL3 Field           */
#define TRGMUX_TRGMUX_PDB1_LK_MASK               (0x80000000U)                                       /**< TRGMUX_TRGMUX_PDB1.LK Mask              */
#define TRGMUX_TRGMUX_PDB1_LK_SHIFT              (31U)                                               /**< TRGMUX_TRGMUX_PDB1.LK Position          */
#define TRGMUX_TRGMUX_PDB1_LK(x)                 (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_PDB1_LK_SHIFT))&TRGMUX_TRGMUX_PDB1_LK_MASK) /**< TRGMUX_TRGMUX_PDB1.LK Field             */
/** @} */

/** @name TRGMUX_FLEXIO - TRGMUX FLEXIO Register */ /** @{ */
#define TRGMUX_TRGMUX_FLEXIO_SEL0_MASK           (0x3FU)                                             /**< TRGMUX_TRGMUX_FLEXIO.SEL0 Mask          */
#define TRGMUX_TRGMUX_FLEXIO_SEL0_SHIFT          (0U)                                                /**< TRGMUX_TRGMUX_FLEXIO.SEL0 Position      */
#define TRGMUX_TRGMUX_FLEXIO_SEL0(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FLEXIO_SEL0_SHIFT))&TRGMUX_TRGMUX_FLEXIO_SEL0_MASK) /**< TRGMUX_TRGMUX_FLEXIO.SEL0 Field         */
#define TRGMUX_TRGMUX_FLEXIO_SEL1_MASK           (0x3F00U)                                           /**< TRGMUX_TRGMUX_FLEXIO.SEL1 Mask          */
#define TRGMUX_TRGMUX_FLEXIO_SEL1_SHIFT          (8U)                                                /**< TRGMUX_TRGMUX_FLEXIO.SEL1 Position      */
#define TRGMUX_TRGMUX_FLEXIO_SEL1(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FLEXIO_SEL1_SHIFT))&TRGMUX_TRGMUX_FLEXIO_SEL1_MASK) /**< TRGMUX_TRGMUX_FLEXIO.SEL1 Field         */
#define TRGMUX_TRGMUX_FLEXIO_SEL2_MASK           (0x3F0000U)                                         /**< TRGMUX_TRGMUX_FLEXIO.SEL2 Mask          */
#define TRGMUX_TRGMUX_FLEXIO_SEL2_SHIFT          (16U)                                               /**< TRGMUX_TRGMUX_FLEXIO.SEL2 Position      */
#define TRGMUX_TRGMUX_FLEXIO_SEL2(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FLEXIO_SEL2_SHIFT))&TRGMUX_TRGMUX_FLEXIO_SEL2_MASK) /**< TRGMUX_TRGMUX_FLEXIO.SEL2 Field         */
#define TRGMUX_TRGMUX_FLEXIO_SEL3_MASK           (0x3F000000U)                                       /**< TRGMUX_TRGMUX_FLEXIO.SEL3 Mask          */
#define TRGMUX_TRGMUX_FLEXIO_SEL3_SHIFT          (24U)                                               /**< TRGMUX_TRGMUX_FLEXIO.SEL3 Position      */
#define TRGMUX_TRGMUX_FLEXIO_SEL3(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FLEXIO_SEL3_SHIFT))&TRGMUX_TRGMUX_FLEXIO_SEL3_MASK) /**< TRGMUX_TRGMUX_FLEXIO.SEL3 Field         */
#define TRGMUX_TRGMUX_FLEXIO_LK_MASK             (0x80000000U)                                       /**< TRGMUX_TRGMUX_FLEXIO.LK Mask            */
#define TRGMUX_TRGMUX_FLEXIO_LK_SHIFT            (31U)                                               /**< TRGMUX_TRGMUX_FLEXIO.LK Position        */
#define TRGMUX_TRGMUX_FLEXIO_LK(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_FLEXIO_LK_SHIFT))&TRGMUX_TRGMUX_FLEXIO_LK_MASK) /**< TRGMUX_TRGMUX_FLEXIO.LK Field           */
/** @} */

/** @name TRGMUX_LPIT0 - TRGMUX LPIT0 Register */ /** @{ */
#define TRGMUX_TRGMUX_LPIT0_SEL0_MASK            (0x3FU)                                             /**< TRGMUX_TRGMUX_LPIT0.SEL0 Mask           */
#define TRGMUX_TRGMUX_LPIT0_SEL0_SHIFT           (0U)                                                /**< TRGMUX_TRGMUX_LPIT0.SEL0 Position       */
#define TRGMUX_TRGMUX_LPIT0_SEL0(x)              (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPIT0_SEL0_SHIFT))&TRGMUX_TRGMUX_LPIT0_SEL0_MASK) /**< TRGMUX_TRGMUX_LPIT0.SEL0 Field          */
#define TRGMUX_TRGMUX_LPIT0_SEL1_MASK            (0x3F00U)                                           /**< TRGMUX_TRGMUX_LPIT0.SEL1 Mask           */
#define TRGMUX_TRGMUX_LPIT0_SEL1_SHIFT           (8U)                                                /**< TRGMUX_TRGMUX_LPIT0.SEL1 Position       */
#define TRGMUX_TRGMUX_LPIT0_SEL1(x)              (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPIT0_SEL1_SHIFT))&TRGMUX_TRGMUX_LPIT0_SEL1_MASK) /**< TRGMUX_TRGMUX_LPIT0.SEL1 Field          */
#define TRGMUX_TRGMUX_LPIT0_SEL2_MASK            (0x3F0000U)                                         /**< TRGMUX_TRGMUX_LPIT0.SEL2 Mask           */
#define TRGMUX_TRGMUX_LPIT0_SEL2_SHIFT           (16U)                                               /**< TRGMUX_TRGMUX_LPIT0.SEL2 Position       */
#define TRGMUX_TRGMUX_LPIT0_SEL2(x)              (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPIT0_SEL2_SHIFT))&TRGMUX_TRGMUX_LPIT0_SEL2_MASK) /**< TRGMUX_TRGMUX_LPIT0.SEL2 Field          */
#define TRGMUX_TRGMUX_LPIT0_SEL3_MASK            (0x3F000000U)                                       /**< TRGMUX_TRGMUX_LPIT0.SEL3 Mask           */
#define TRGMUX_TRGMUX_LPIT0_SEL3_SHIFT           (24U)                                               /**< TRGMUX_TRGMUX_LPIT0.SEL3 Position       */
#define TRGMUX_TRGMUX_LPIT0_SEL3(x)              (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPIT0_SEL3_SHIFT))&TRGMUX_TRGMUX_LPIT0_SEL3_MASK) /**< TRGMUX_TRGMUX_LPIT0.SEL3 Field          */
#define TRGMUX_TRGMUX_LPIT0_LK_MASK              (0x80000000U)                                       /**< TRGMUX_TRGMUX_LPIT0.LK Mask             */
#define TRGMUX_TRGMUX_LPIT0_LK_SHIFT             (31U)                                               /**< TRGMUX_TRGMUX_LPIT0.LK Position         */
#define TRGMUX_TRGMUX_LPIT0_LK(x)                (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPIT0_LK_SHIFT))&TRGMUX_TRGMUX_LPIT0_LK_MASK) /**< TRGMUX_TRGMUX_LPIT0.LK Field            */
/** @} */

/** @name TRGMUX_LPUART0 - TRGMUX LPUART0 Register */ /** @{ */
#define TRGMUX_TRGMUX_LPUART0_SEL0_MASK          (0x3FU)                                             /**< TRGMUX_TRGMUX_LPUART0.SEL0 Mask         */
#define TRGMUX_TRGMUX_LPUART0_SEL0_SHIFT         (0U)                                                /**< TRGMUX_TRGMUX_LPUART0.SEL0 Position     */
#define TRGMUX_TRGMUX_LPUART0_SEL0(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPUART0_SEL0_SHIFT))&TRGMUX_TRGMUX_LPUART0_SEL0_MASK) /**< TRGMUX_TRGMUX_LPUART0.SEL0 Field        */
#define TRGMUX_TRGMUX_LPUART0_SEL1_MASK          (0x3F00U)                                           /**< TRGMUX_TRGMUX_LPUART0.SEL1 Mask         */
#define TRGMUX_TRGMUX_LPUART0_SEL1_SHIFT         (8U)                                                /**< TRGMUX_TRGMUX_LPUART0.SEL1 Position     */
#define TRGMUX_TRGMUX_LPUART0_SEL1(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPUART0_SEL1_SHIFT))&TRGMUX_TRGMUX_LPUART0_SEL1_MASK) /**< TRGMUX_TRGMUX_LPUART0.SEL1 Field        */
#define TRGMUX_TRGMUX_LPUART0_SEL2_MASK          (0x3F0000U)                                         /**< TRGMUX_TRGMUX_LPUART0.SEL2 Mask         */
#define TRGMUX_TRGMUX_LPUART0_SEL2_SHIFT         (16U)                                               /**< TRGMUX_TRGMUX_LPUART0.SEL2 Position     */
#define TRGMUX_TRGMUX_LPUART0_SEL2(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPUART0_SEL2_SHIFT))&TRGMUX_TRGMUX_LPUART0_SEL2_MASK) /**< TRGMUX_TRGMUX_LPUART0.SEL2 Field        */
#define TRGMUX_TRGMUX_LPUART0_SEL3_MASK          (0x3F000000U)                                       /**< TRGMUX_TRGMUX_LPUART0.SEL3 Mask         */
#define TRGMUX_TRGMUX_LPUART0_SEL3_SHIFT         (24U)                                               /**< TRGMUX_TRGMUX_LPUART0.SEL3 Position     */
#define TRGMUX_TRGMUX_LPUART0_SEL3(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPUART0_SEL3_SHIFT))&TRGMUX_TRGMUX_LPUART0_SEL3_MASK) /**< TRGMUX_TRGMUX_LPUART0.SEL3 Field        */
#define TRGMUX_TRGMUX_LPUART0_LK_MASK            (0x80000000U)                                       /**< TRGMUX_TRGMUX_LPUART0.LK Mask           */
#define TRGMUX_TRGMUX_LPUART0_LK_SHIFT           (31U)                                               /**< TRGMUX_TRGMUX_LPUART0.LK Position       */
#define TRGMUX_TRGMUX_LPUART0_LK(x)              (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPUART0_LK_SHIFT))&TRGMUX_TRGMUX_LPUART0_LK_MASK) /**< TRGMUX_TRGMUX_LPUART0.LK Field          */
/** @} */

/** @name TRGMUX_LPUART1 - TRGMUX LPUART1 Register */ /** @{ */
#define TRGMUX_TRGMUX_LPUART1_SEL0_MASK          (0x3FU)                                             /**< TRGMUX_TRGMUX_LPUART1.SEL0 Mask         */
#define TRGMUX_TRGMUX_LPUART1_SEL0_SHIFT         (0U)                                                /**< TRGMUX_TRGMUX_LPUART1.SEL0 Position     */
#define TRGMUX_TRGMUX_LPUART1_SEL0(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPUART1_SEL0_SHIFT))&TRGMUX_TRGMUX_LPUART1_SEL0_MASK) /**< TRGMUX_TRGMUX_LPUART1.SEL0 Field        */
#define TRGMUX_TRGMUX_LPUART1_SEL1_MASK          (0x3F00U)                                           /**< TRGMUX_TRGMUX_LPUART1.SEL1 Mask         */
#define TRGMUX_TRGMUX_LPUART1_SEL1_SHIFT         (8U)                                                /**< TRGMUX_TRGMUX_LPUART1.SEL1 Position     */
#define TRGMUX_TRGMUX_LPUART1_SEL1(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPUART1_SEL1_SHIFT))&TRGMUX_TRGMUX_LPUART1_SEL1_MASK) /**< TRGMUX_TRGMUX_LPUART1.SEL1 Field        */
#define TRGMUX_TRGMUX_LPUART1_SEL2_MASK          (0x3F0000U)                                         /**< TRGMUX_TRGMUX_LPUART1.SEL2 Mask         */
#define TRGMUX_TRGMUX_LPUART1_SEL2_SHIFT         (16U)                                               /**< TRGMUX_TRGMUX_LPUART1.SEL2 Position     */
#define TRGMUX_TRGMUX_LPUART1_SEL2(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPUART1_SEL2_SHIFT))&TRGMUX_TRGMUX_LPUART1_SEL2_MASK) /**< TRGMUX_TRGMUX_LPUART1.SEL2 Field        */
#define TRGMUX_TRGMUX_LPUART1_SEL3_MASK          (0x3F000000U)                                       /**< TRGMUX_TRGMUX_LPUART1.SEL3 Mask         */
#define TRGMUX_TRGMUX_LPUART1_SEL3_SHIFT         (24U)                                               /**< TRGMUX_TRGMUX_LPUART1.SEL3 Position     */
#define TRGMUX_TRGMUX_LPUART1_SEL3(x)            (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPUART1_SEL3_SHIFT))&TRGMUX_TRGMUX_LPUART1_SEL3_MASK) /**< TRGMUX_TRGMUX_LPUART1.SEL3 Field        */
#define TRGMUX_TRGMUX_LPUART1_LK_MASK            (0x80000000U)                                       /**< TRGMUX_TRGMUX_LPUART1.LK Mask           */
#define TRGMUX_TRGMUX_LPUART1_LK_SHIFT           (31U)                                               /**< TRGMUX_TRGMUX_LPUART1.LK Position       */
#define TRGMUX_TRGMUX_LPUART1_LK(x)              (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPUART1_LK_SHIFT))&TRGMUX_TRGMUX_LPUART1_LK_MASK) /**< TRGMUX_TRGMUX_LPUART1.LK Field          */
/** @} */

/** @name TRGMUX_LPI2C0 - TRGMUX LPI2C0 Register */ /** @{ */
#define TRGMUX_TRGMUX_LPI2C0_SEL0_MASK           (0x3FU)                                             /**< TRGMUX_TRGMUX_LPI2C0.SEL0 Mask          */
#define TRGMUX_TRGMUX_LPI2C0_SEL0_SHIFT          (0U)                                                /**< TRGMUX_TRGMUX_LPI2C0.SEL0 Position      */
#define TRGMUX_TRGMUX_LPI2C0_SEL0(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPI2C0_SEL0_SHIFT))&TRGMUX_TRGMUX_LPI2C0_SEL0_MASK) /**< TRGMUX_TRGMUX_LPI2C0.SEL0 Field         */
#define TRGMUX_TRGMUX_LPI2C0_SEL1_MASK           (0x3F00U)                                           /**< TRGMUX_TRGMUX_LPI2C0.SEL1 Mask          */
#define TRGMUX_TRGMUX_LPI2C0_SEL1_SHIFT          (8U)                                                /**< TRGMUX_TRGMUX_LPI2C0.SEL1 Position      */
#define TRGMUX_TRGMUX_LPI2C0_SEL1(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPI2C0_SEL1_SHIFT))&TRGMUX_TRGMUX_LPI2C0_SEL1_MASK) /**< TRGMUX_TRGMUX_LPI2C0.SEL1 Field         */
#define TRGMUX_TRGMUX_LPI2C0_SEL2_MASK           (0x3F0000U)                                         /**< TRGMUX_TRGMUX_LPI2C0.SEL2 Mask          */
#define TRGMUX_TRGMUX_LPI2C0_SEL2_SHIFT          (16U)                                               /**< TRGMUX_TRGMUX_LPI2C0.SEL2 Position      */
#define TRGMUX_TRGMUX_LPI2C0_SEL2(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPI2C0_SEL2_SHIFT))&TRGMUX_TRGMUX_LPI2C0_SEL2_MASK) /**< TRGMUX_TRGMUX_LPI2C0.SEL2 Field         */
#define TRGMUX_TRGMUX_LPI2C0_SEL3_MASK           (0x3F000000U)                                       /**< TRGMUX_TRGMUX_LPI2C0.SEL3 Mask          */
#define TRGMUX_TRGMUX_LPI2C0_SEL3_SHIFT          (24U)                                               /**< TRGMUX_TRGMUX_LPI2C0.SEL3 Position      */
#define TRGMUX_TRGMUX_LPI2C0_SEL3(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPI2C0_SEL3_SHIFT))&TRGMUX_TRGMUX_LPI2C0_SEL3_MASK) /**< TRGMUX_TRGMUX_LPI2C0.SEL3 Field         */
#define TRGMUX_TRGMUX_LPI2C0_LK_MASK             (0x80000000U)                                       /**< TRGMUX_TRGMUX_LPI2C0.LK Mask            */
#define TRGMUX_TRGMUX_LPI2C0_LK_SHIFT            (31U)                                               /**< TRGMUX_TRGMUX_LPI2C0.LK Position        */
#define TRGMUX_TRGMUX_LPI2C0_LK(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPI2C0_LK_SHIFT))&TRGMUX_TRGMUX_LPI2C0_LK_MASK) /**< TRGMUX_TRGMUX_LPI2C0.LK Field           */
/** @} */

/** @name TRGMUX_LPSPI0 - TRGMUX LPSPI0 Register */ /** @{ */
#define TRGMUX_TRGMUX_LPSPI0_SEL0_MASK           (0x3FU)                                             /**< TRGMUX_TRGMUX_LPSPI0.SEL0 Mask          */
#define TRGMUX_TRGMUX_LPSPI0_SEL0_SHIFT          (0U)                                                /**< TRGMUX_TRGMUX_LPSPI0.SEL0 Position      */
#define TRGMUX_TRGMUX_LPSPI0_SEL0(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPSPI0_SEL0_SHIFT))&TRGMUX_TRGMUX_LPSPI0_SEL0_MASK) /**< TRGMUX_TRGMUX_LPSPI0.SEL0 Field         */
#define TRGMUX_TRGMUX_LPSPI0_SEL1_MASK           (0x3F00U)                                           /**< TRGMUX_TRGMUX_LPSPI0.SEL1 Mask          */
#define TRGMUX_TRGMUX_LPSPI0_SEL1_SHIFT          (8U)                                                /**< TRGMUX_TRGMUX_LPSPI0.SEL1 Position      */
#define TRGMUX_TRGMUX_LPSPI0_SEL1(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPSPI0_SEL1_SHIFT))&TRGMUX_TRGMUX_LPSPI0_SEL1_MASK) /**< TRGMUX_TRGMUX_LPSPI0.SEL1 Field         */
#define TRGMUX_TRGMUX_LPSPI0_SEL2_MASK           (0x3F0000U)                                         /**< TRGMUX_TRGMUX_LPSPI0.SEL2 Mask          */
#define TRGMUX_TRGMUX_LPSPI0_SEL2_SHIFT          (16U)                                               /**< TRGMUX_TRGMUX_LPSPI0.SEL2 Position      */
#define TRGMUX_TRGMUX_LPSPI0_SEL2(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPSPI0_SEL2_SHIFT))&TRGMUX_TRGMUX_LPSPI0_SEL2_MASK) /**< TRGMUX_TRGMUX_LPSPI0.SEL2 Field         */
#define TRGMUX_TRGMUX_LPSPI0_SEL3_MASK           (0x3F000000U)                                       /**< TRGMUX_TRGMUX_LPSPI0.SEL3 Mask          */
#define TRGMUX_TRGMUX_LPSPI0_SEL3_SHIFT          (24U)                                               /**< TRGMUX_TRGMUX_LPSPI0.SEL3 Position      */
#define TRGMUX_TRGMUX_LPSPI0_SEL3(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPSPI0_SEL3_SHIFT))&TRGMUX_TRGMUX_LPSPI0_SEL3_MASK) /**< TRGMUX_TRGMUX_LPSPI0.SEL3 Field         */
#define TRGMUX_TRGMUX_LPSPI0_LK_MASK             (0x80000000U)                                       /**< TRGMUX_TRGMUX_LPSPI0.LK Mask            */
#define TRGMUX_TRGMUX_LPSPI0_LK_SHIFT            (31U)                                               /**< TRGMUX_TRGMUX_LPSPI0.LK Position        */
#define TRGMUX_TRGMUX_LPSPI0_LK(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPSPI0_LK_SHIFT))&TRGMUX_TRGMUX_LPSPI0_LK_MASK) /**< TRGMUX_TRGMUX_LPSPI0.LK Field           */
/** @} */

/** @name TRGMUX_LPSPI1 - TRGMUX LPSPI1 Register */ /** @{ */
#define TRGMUX_TRGMUX_LPSPI1_SEL0_MASK           (0x3FU)                                             /**< TRGMUX_TRGMUX_LPSPI1.SEL0 Mask          */
#define TRGMUX_TRGMUX_LPSPI1_SEL0_SHIFT          (0U)                                                /**< TRGMUX_TRGMUX_LPSPI1.SEL0 Position      */
#define TRGMUX_TRGMUX_LPSPI1_SEL0(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPSPI1_SEL0_SHIFT))&TRGMUX_TRGMUX_LPSPI1_SEL0_MASK) /**< TRGMUX_TRGMUX_LPSPI1.SEL0 Field         */
#define TRGMUX_TRGMUX_LPSPI1_SEL1_MASK           (0x3F00U)                                           /**< TRGMUX_TRGMUX_LPSPI1.SEL1 Mask          */
#define TRGMUX_TRGMUX_LPSPI1_SEL1_SHIFT          (8U)                                                /**< TRGMUX_TRGMUX_LPSPI1.SEL1 Position      */
#define TRGMUX_TRGMUX_LPSPI1_SEL1(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPSPI1_SEL1_SHIFT))&TRGMUX_TRGMUX_LPSPI1_SEL1_MASK) /**< TRGMUX_TRGMUX_LPSPI1.SEL1 Field         */
#define TRGMUX_TRGMUX_LPSPI1_SEL2_MASK           (0x3F0000U)                                         /**< TRGMUX_TRGMUX_LPSPI1.SEL2 Mask          */
#define TRGMUX_TRGMUX_LPSPI1_SEL2_SHIFT          (16U)                                               /**< TRGMUX_TRGMUX_LPSPI1.SEL2 Position      */
#define TRGMUX_TRGMUX_LPSPI1_SEL2(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPSPI1_SEL2_SHIFT))&TRGMUX_TRGMUX_LPSPI1_SEL2_MASK) /**< TRGMUX_TRGMUX_LPSPI1.SEL2 Field         */
#define TRGMUX_TRGMUX_LPSPI1_SEL3_MASK           (0x3F000000U)                                       /**< TRGMUX_TRGMUX_LPSPI1.SEL3 Mask          */
#define TRGMUX_TRGMUX_LPSPI1_SEL3_SHIFT          (24U)                                               /**< TRGMUX_TRGMUX_LPSPI1.SEL3 Position      */
#define TRGMUX_TRGMUX_LPSPI1_SEL3(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPSPI1_SEL3_SHIFT))&TRGMUX_TRGMUX_LPSPI1_SEL3_MASK) /**< TRGMUX_TRGMUX_LPSPI1.SEL3 Field         */
#define TRGMUX_TRGMUX_LPSPI1_LK_MASK             (0x80000000U)                                       /**< TRGMUX_TRGMUX_LPSPI1.LK Mask            */
#define TRGMUX_TRGMUX_LPSPI1_LK_SHIFT            (31U)                                               /**< TRGMUX_TRGMUX_LPSPI1.LK Position        */
#define TRGMUX_TRGMUX_LPSPI1_LK(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPSPI1_LK_SHIFT))&TRGMUX_TRGMUX_LPSPI1_LK_MASK) /**< TRGMUX_TRGMUX_LPSPI1.LK Field           */
/** @} */

/** @name TRGMUX_LPTMR0 - TRGMUX LPTMR0 Register */ /** @{ */
#define TRGMUX_TRGMUX_LPTMR0_SEL0_MASK           (0x3FU)                                             /**< TRGMUX_TRGMUX_LPTMR0.SEL0 Mask          */
#define TRGMUX_TRGMUX_LPTMR0_SEL0_SHIFT          (0U)                                                /**< TRGMUX_TRGMUX_LPTMR0.SEL0 Position      */
#define TRGMUX_TRGMUX_LPTMR0_SEL0(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPTMR0_SEL0_SHIFT))&TRGMUX_TRGMUX_LPTMR0_SEL0_MASK) /**< TRGMUX_TRGMUX_LPTMR0.SEL0 Field         */
#define TRGMUX_TRGMUX_LPTMR0_SEL1_MASK           (0x3F00U)                                           /**< TRGMUX_TRGMUX_LPTMR0.SEL1 Mask          */
#define TRGMUX_TRGMUX_LPTMR0_SEL1_SHIFT          (8U)                                                /**< TRGMUX_TRGMUX_LPTMR0.SEL1 Position      */
#define TRGMUX_TRGMUX_LPTMR0_SEL1(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPTMR0_SEL1_SHIFT))&TRGMUX_TRGMUX_LPTMR0_SEL1_MASK) /**< TRGMUX_TRGMUX_LPTMR0.SEL1 Field         */
#define TRGMUX_TRGMUX_LPTMR0_SEL2_MASK           (0x3F0000U)                                         /**< TRGMUX_TRGMUX_LPTMR0.SEL2 Mask          */
#define TRGMUX_TRGMUX_LPTMR0_SEL2_SHIFT          (16U)                                               /**< TRGMUX_TRGMUX_LPTMR0.SEL2 Position      */
#define TRGMUX_TRGMUX_LPTMR0_SEL2(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPTMR0_SEL2_SHIFT))&TRGMUX_TRGMUX_LPTMR0_SEL2_MASK) /**< TRGMUX_TRGMUX_LPTMR0.SEL2 Field         */
#define TRGMUX_TRGMUX_LPTMR0_SEL3_MASK           (0x3F000000U)                                       /**< TRGMUX_TRGMUX_LPTMR0.SEL3 Mask          */
#define TRGMUX_TRGMUX_LPTMR0_SEL3_SHIFT          (24U)                                               /**< TRGMUX_TRGMUX_LPTMR0.SEL3 Position      */
#define TRGMUX_TRGMUX_LPTMR0_SEL3(x)             (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPTMR0_SEL3_SHIFT))&TRGMUX_TRGMUX_LPTMR0_SEL3_MASK) /**< TRGMUX_TRGMUX_LPTMR0.SEL3 Field         */
#define TRGMUX_TRGMUX_LPTMR0_LK_MASK             (0x80000000U)                                       /**< TRGMUX_TRGMUX_LPTMR0.LK Mask            */
#define TRGMUX_TRGMUX_LPTMR0_LK_SHIFT            (31U)                                               /**< TRGMUX_TRGMUX_LPTMR0.LK Position        */
#define TRGMUX_TRGMUX_LPTMR0_LK(x)               (((uint32_t)(((uint32_t)(x))<<TRGMUX_TRGMUX_LPTMR0_LK_SHIFT))&TRGMUX_TRGMUX_LPTMR0_LK_MASK) /**< TRGMUX_TRGMUX_LPTMR0.LK Field           */
/** @} */

/** @} */ /* End group TRGMUX_Register_Masks_GROUP */


/* TRGMUX - Peripheral instance base addresses */
#define TRGMUX_BasePtr                 0x40063000UL //!< Peripheral base address
#define TRGMUX                         ((TRGMUX_Type *) TRGMUX_BasePtr) //!< Freescale base pointer
#define TRGMUX_BASE_PTR                (TRGMUX) //!< Freescale style base pointer

/** @} */ /* End group TRGMUX_Peripheral_access_layer_GROUP */


/** @brief C Struct for WDOG */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup WDOG_Peripheral_access_layer_GROUP WDOG Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           WDOG (file:WDOG_MKE16F16)            ================ */
/* ================================================================================ */

/**
 * @brief Watchdog Timer
 */
/**
 * @struct WDOG_Type
 * @brief  C Struct allowing access to WDOG registers
 */
typedef struct WDOG_Type {
   __IO uint32_t  CS;                           /**< 0000: Control and Status Register                                  */
   union {                                      /**< 0004: (size=0004)                                                  */
      __IO uint32_t  CNT;                       /**< 0004: Counter Register:                                            */
      struct {                                  /**< 0004: (size=0004)                                                  */
         __I  uint8_t   CNTLOW;                 /**< 0004: Counter Register: Low (see CNT for description)              */
         __I  uint8_t   CNTHIGH;                /**< 0005: Counter Register: High (see CNT for description)             */
              uint8_t   RESERVED_0[2];          /**< 0006: 0x2 bytes                                                    */
      };
   };
   union {                                      /**< 0008: (size=0004)                                                  */
      __IO uint32_t  TOVAL;                     /**< 0008: Timeout Value Register:                                      */
      struct {                                  /**< 0008: (size=0004)                                                  */
         __IO uint8_t   TOVALLOW;               /**< 0008: Timeout Value Register: Low (see TOVAL for description)      */
         __IO uint8_t   TOVALHIGH;              /**< 0009: Timeout Value Register: High (see TOVAL for description)     */
              uint8_t   RESERVED_1[2];          /**< 000A: 0x2 bytes                                                    */
      };
   };
   union {                                      /**< 000C: (size=0004)                                                  */
      __IO uint32_t  WIN;                       /**< 000C: Window Register:                                             */
      struct {                                  /**< 000C: (size=0004)                                                  */
         __IO uint8_t   WINLOW;                 /**< 000C: Window Register: Low (see WIN for description)               */
         __IO uint8_t   WINHIGH;                /**< 000D: Window Register: High (see WIN for description)              */
              uint8_t   RESERVED_2[2];          /**< 000E: 0x2 bytes                                                    */
      };
   };
} WDOG_Type;


/** @brief Register Masks for WDOG */

/* -------------------------------------------------------------------------------- */
/* -----------     'WDOG' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup WDOG_Register_Masks_GROUP WDOG Register Masks */
/** @{ */

/** @name CS - Control and Status Register */ /** @{ */
#define WDOG_CS_STOP_MASK                        (0x1U)                                              /**< WDOG_CS.STOP Mask                       */
#define WDOG_CS_STOP_SHIFT                       (0U)                                                /**< WDOG_CS.STOP Position                   */
#define WDOG_CS_STOP(x)                          (((uint32_t)(((uint32_t)(x))<<WDOG_CS_STOP_SHIFT))&WDOG_CS_STOP_MASK) /**< WDOG_CS.STOP Field                      */
#define WDOG_CS_WAIT_MASK                        (0x2U)                                              /**< WDOG_CS.WAIT Mask                       */
#define WDOG_CS_WAIT_SHIFT                       (1U)                                                /**< WDOG_CS.WAIT Position                   */
#define WDOG_CS_WAIT(x)                          (((uint32_t)(((uint32_t)(x))<<WDOG_CS_WAIT_SHIFT))&WDOG_CS_WAIT_MASK) /**< WDOG_CS.WAIT Field                      */
#define WDOG_CS_DBG_MASK                         (0x4U)                                              /**< WDOG_CS.DBG Mask                        */
#define WDOG_CS_DBG_SHIFT                        (2U)                                                /**< WDOG_CS.DBG Position                    */
#define WDOG_CS_DBG(x)                           (((uint32_t)(((uint32_t)(x))<<WDOG_CS_DBG_SHIFT))&WDOG_CS_DBG_MASK) /**< WDOG_CS.DBG Field                       */
#define WDOG_CS_TST_MASK                         (0x18U)                                             /**< WDOG_CS.TST Mask                        */
#define WDOG_CS_TST_SHIFT                        (3U)                                                /**< WDOG_CS.TST Position                    */
#define WDOG_CS_TST(x)                           (((uint32_t)(((uint32_t)(x))<<WDOG_CS_TST_SHIFT))&WDOG_CS_TST_MASK) /**< WDOG_CS.TST Field                       */
#define WDOG_CS_UPDATE_MASK                      (0x20U)                                             /**< WDOG_CS.UPDATE Mask                     */
#define WDOG_CS_UPDATE_SHIFT                     (5U)                                                /**< WDOG_CS.UPDATE Position                 */
#define WDOG_CS_UPDATE(x)                        (((uint32_t)(((uint32_t)(x))<<WDOG_CS_UPDATE_SHIFT))&WDOG_CS_UPDATE_MASK) /**< WDOG_CS.UPDATE Field                    */
#define WDOG_CS_INT_MASK                         (0x40U)                                             /**< WDOG_CS.INT Mask                        */
#define WDOG_CS_INT_SHIFT                        (6U)                                                /**< WDOG_CS.INT Position                    */
#define WDOG_CS_INT(x)                           (((uint32_t)(((uint32_t)(x))<<WDOG_CS_INT_SHIFT))&WDOG_CS_INT_MASK) /**< WDOG_CS.INT Field                       */
#define WDOG_CS_EN_MASK                          (0x80U)                                             /**< WDOG_CS.EN Mask                         */
#define WDOG_CS_EN_SHIFT                         (7U)                                                /**< WDOG_CS.EN Position                     */
#define WDOG_CS_EN(x)                            (((uint32_t)(((uint32_t)(x))<<WDOG_CS_EN_SHIFT))&WDOG_CS_EN_MASK) /**< WDOG_CS.EN Field                        */
#define WDOG_CS_CLK_MASK                         (0x300U)                                            /**< WDOG_CS.CLK Mask                        */
#define WDOG_CS_CLK_SHIFT                        (8U)                                                /**< WDOG_CS.CLK Position                    */
#define WDOG_CS_CLK(x)                           (((uint32_t)(((uint32_t)(x))<<WDOG_CS_CLK_SHIFT))&WDOG_CS_CLK_MASK) /**< WDOG_CS.CLK Field                       */
#define WDOG_CS_RCS_MASK                         (0x400U)                                            /**< WDOG_CS.RCS Mask                        */
#define WDOG_CS_RCS_SHIFT                        (10U)                                               /**< WDOG_CS.RCS Position                    */
#define WDOG_CS_RCS(x)                           (((uint32_t)(((uint32_t)(x))<<WDOG_CS_RCS_SHIFT))&WDOG_CS_RCS_MASK) /**< WDOG_CS.RCS Field                       */
#define WDOG_CS_ULK_MASK                         (0x800U)                                            /**< WDOG_CS.ULK Mask                        */
#define WDOG_CS_ULK_SHIFT                        (11U)                                               /**< WDOG_CS.ULK Position                    */
#define WDOG_CS_ULK(x)                           (((uint32_t)(((uint32_t)(x))<<WDOG_CS_ULK_SHIFT))&WDOG_CS_ULK_MASK) /**< WDOG_CS.ULK Field                       */
#define WDOG_CS_PRES_MASK                        (0x1000U)                                           /**< WDOG_CS.PRES Mask                       */
#define WDOG_CS_PRES_SHIFT                       (12U)                                               /**< WDOG_CS.PRES Position                   */
#define WDOG_CS_PRES(x)                          (((uint32_t)(((uint32_t)(x))<<WDOG_CS_PRES_SHIFT))&WDOG_CS_PRES_MASK) /**< WDOG_CS.PRES Field                      */
#define WDOG_CS_CMD32EN_MASK                     (0x2000U)                                           /**< WDOG_CS.CMD32EN Mask                    */
#define WDOG_CS_CMD32EN_SHIFT                    (13U)                                               /**< WDOG_CS.CMD32EN Position                */
#define WDOG_CS_CMD32EN(x)                       (((uint32_t)(((uint32_t)(x))<<WDOG_CS_CMD32EN_SHIFT))&WDOG_CS_CMD32EN_MASK) /**< WDOG_CS.CMD32EN Field                   */
#define WDOG_CS_FLG_MASK                         (0x4000U)                                           /**< WDOG_CS.FLG Mask                        */
#define WDOG_CS_FLG_SHIFT                        (14U)                                               /**< WDOG_CS.FLG Position                    */
#define WDOG_CS_FLG(x)                           (((uint32_t)(((uint32_t)(x))<<WDOG_CS_FLG_SHIFT))&WDOG_CS_FLG_MASK) /**< WDOG_CS.FLG Field                       */
#define WDOG_CS_WIN_MASK                         (0x8000U)                                           /**< WDOG_CS.WIN Mask                        */
#define WDOG_CS_WIN_SHIFT                        (15U)                                               /**< WDOG_CS.WIN Position                    */
#define WDOG_CS_WIN(x)                           (((uint32_t)(((uint32_t)(x))<<WDOG_CS_WIN_SHIFT))&WDOG_CS_WIN_MASK) /**< WDOG_CS.WIN Field                       */
/** @} */

/** @name CNT - Counter Register:  */ /** @{ */
#define WDOG_CNT_CNTLOW_MASK                     (0xFFU)                                             /**< WDOG_CNT.CNTLOW Mask                    */
#define WDOG_CNT_CNTLOW_SHIFT                    (0U)                                                /**< WDOG_CNT.CNTLOW Position                */
#define WDOG_CNT_CNTLOW(x)                       (((uint32_t)(((uint32_t)(x))<<WDOG_CNT_CNTLOW_SHIFT))&WDOG_CNT_CNTLOW_MASK) /**< WDOG_CNT.CNTLOW Field                   */
#define WDOG_CNT_CNTHIGH_MASK                    (0xFF00U)                                           /**< WDOG_CNT.CNTHIGH Mask                   */
#define WDOG_CNT_CNTHIGH_SHIFT                   (8U)                                                /**< WDOG_CNT.CNTHIGH Position               */
#define WDOG_CNT_CNTHIGH(x)                      (((uint32_t)(((uint32_t)(x))<<WDOG_CNT_CNTHIGH_SHIFT))&WDOG_CNT_CNTHIGH_MASK) /**< WDOG_CNT.CNTHIGH Field                  */
/** @} */

/** @name TOVAL - Timeout Value Register:  */ /** @{ */
#define WDOG_TOVAL_TOVALLOW_MASK                 (0xFFU)                                             /**< WDOG_TOVAL.TOVALLOW Mask                */
#define WDOG_TOVAL_TOVALLOW_SHIFT                (0U)                                                /**< WDOG_TOVAL.TOVALLOW Position            */
#define WDOG_TOVAL_TOVALLOW(x)                   (((uint32_t)(((uint32_t)(x))<<WDOG_TOVAL_TOVALLOW_SHIFT))&WDOG_TOVAL_TOVALLOW_MASK) /**< WDOG_TOVAL.TOVALLOW Field               */
#define WDOG_TOVAL_TOVALHIGH_MASK                (0xFF00U)                                           /**< WDOG_TOVAL.TOVALHIGH Mask               */
#define WDOG_TOVAL_TOVALHIGH_SHIFT               (8U)                                                /**< WDOG_TOVAL.TOVALHIGH Position           */
#define WDOG_TOVAL_TOVALHIGH(x)                  (((uint32_t)(((uint32_t)(x))<<WDOG_TOVAL_TOVALHIGH_SHIFT))&WDOG_TOVAL_TOVALHIGH_MASK) /**< WDOG_TOVAL.TOVALHIGH Field              */
/** @} */

/** @name WIN - Window Register: */ /** @{ */
#define WDOG_WIN_WINLOW_MASK                     (0xFFU)                                             /**< WDOG_WIN.WINLOW Mask                    */
#define WDOG_WIN_WINLOW_SHIFT                    (0U)                                                /**< WDOG_WIN.WINLOW Position                */
#define WDOG_WIN_WINLOW(x)                       (((uint32_t)(((uint32_t)(x))<<WDOG_WIN_WINLOW_SHIFT))&WDOG_WIN_WINLOW_MASK) /**< WDOG_WIN.WINLOW Field                   */
#define WDOG_WIN_WINHIGH_MASK                    (0xFF00U)                                           /**< WDOG_WIN.WINHIGH Mask                   */
#define WDOG_WIN_WINHIGH_SHIFT                   (8U)                                                /**< WDOG_WIN.WINHIGH Position               */
#define WDOG_WIN_WINHIGH(x)                      (((uint32_t)(((uint32_t)(x))<<WDOG_WIN_WINHIGH_SHIFT))&WDOG_WIN_WINHIGH_MASK) /**< WDOG_WIN.WINHIGH Field                  */
/** @} */

/** @} */ /* End group WDOG_Register_Masks_GROUP */


/* WDOG - Peripheral instance base addresses */
#define WDOG_BasePtr                   0x40052000UL //!< Peripheral base address
#define WDOG                           ((WDOG_Type *) WDOG_BasePtr) //!< Freescale base pointer
#define WDOG_BASE_PTR                  (WDOG) //!< Freescale style base pointer
#define WDOG_IRQS { WDOG_EWM_IRQn,  }


/** @} */ /* End group WDOG_Peripheral_access_layer_GROUP */

/* --------------------  End of section using anonymous unions  ------------------- */
#if defined(__CC_ARM)
  #pragma pop
#elif defined(__ICCARM__)
  /* leave anonymous unions enabled */
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined(__TASKING__)
  #pragma warning restore
#else
  #warning Not supported compiler type
#endif

#ifdef __cplusplus
}
#endif


#endif  /* MCU_S32K144 */

