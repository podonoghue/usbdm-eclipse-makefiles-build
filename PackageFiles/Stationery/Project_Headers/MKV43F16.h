/*!
 * @file     MKV43F16.h
 *
 * @brief    CMSIS Cortex-M Peripheral Access Layer Header File for MKV43F16.
 *           Equivalent: 
 *
 * @version  V1.6
 * @date     2022/07
 *
 */

#ifndef _MKV43F16_H_
#define _MKV43F16_H_

#define MCU_MKV43F16

#include <stdint.h>
#ifdef __cplusplus
extern "C" {
#endif

/**
* @addtogroup Interrupt_vector_numbers_GROUP Interrupt vector numbers
* @brief Vector numbers required for NVIC functions
* @{
*/
#define NUMBER_OF_INT_VECTORS 116 //<! Number of vector table entries
/* -------------------------  Interrupt Number Definitions  ------------------------ */

/**
 * Interrupt vector numbers
 */
typedef enum {
/* ------------------------  Processor Exceptions Numbers  ------------------------- */
  Reset_IRQn                    = -15,   /**<   1 Reset Vector, invoked on Power up and warm reset                                 */
  NonMaskableInt_IRQn           = -14,   /**<   2 Non maskable Interrupt, cannot be stopped or preempted                           */
  HardFault_IRQn                = -13,   /**<   3 Hard Fault, all classes of Fault                                                 */
  MemoryManagement_IRQn         = -12,   /**<   4 Memory Management, MPU mismatch, including Access Violation and No Match         */
  BusFault_IRQn                 = -11,   /**<   5 Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault   */
  UsageFault_IRQn               = -10,   /**<   6 Usage Fault, i.e. Undef Instruction, Illegal State Transition                    */
  SVCall_IRQn                   =  -5,   /**<  11 System Service Call via SVC instruction                                          */
  DebugMonitor_IRQn             =  -4,   /**<  12 Debug Monitor                                                                    */
  PendSV_IRQn                   =  -2,   /**<  14 Pendable request for system service                                              */
  SysTick_IRQn                  =  -1,   /**<  15 System Tick Timer                                                                */
/* ----------------------   MKV43F16 VectorTable                     ---------------------- */
  DMA0_IRQn                     =   0,   /**<  16 Direct memory access controller                                                  */
  DMA1_IRQn                     =   1,   /**<  17 Direct memory access controller                                                  */
  DMA2_IRQn                     =   2,   /**<  18 Direct memory access controller                                                  */
  DMA3_IRQn                     =   3,   /**<  19 Direct memory access controller                                                  */
  DMA4_IRQn                     =   4,   /**<  20 Direct memory access controller                                                  */
  DMA5_IRQn                     =   5,   /**<  21 Direct memory access controller                                                  */
  DMA6_IRQn                     =   6,   /**<  22 Direct memory access controller                                                  */
  DMA7_IRQn                     =   7,   /**<  23 Direct memory access controller                                                  */
  DMA8_IRQn                     =   8,   /**<  24 Direct memory access controller                                                  */
  DMA9_IRQn                     =   9,   /**<  25 Direct memory access controller                                                  */
  DMA10_IRQn                    =  10,   /**<  26 Direct memory access controller                                                  */
  DMA11_IRQn                    =  11,   /**<  27 Direct memory access controller                                                  */
  DMA12_IRQn                    =  12,   /**<  28 Direct memory access controller                                                  */
  DMA13_IRQn                    =  13,   /**<  29 Direct memory access controller                                                  */
  DMA14_IRQn                    =  14,   /**<  30 Direct memory access controller                                                  */
  DMA15_IRQn                    =  15,   /**<  31 Direct memory access controller                                                  */
  DMA_Error_IRQn                =  16,   /**<  32 Direct memory access controller                                                  */
  MCM_IRQn                      =  17,   /**<  33 Miscellaneous Control Module                                                     */
  FTF_Command_IRQn              =  18,   /**<  34 Flash Memory Interface                                                           */
  FTF_ReadCollision_IRQn        =  19,   /**<  35 Flash Memory Interface                                                           */
  PMC_IRQn                      =  20,   /**<  36 Power Management Controller                                                      */
  LLWU_IRQn                     =  21,   /**<  37 Low Leakage Wakeup                                                               */
  WDOG_IRQn                     =  22,   /**<  38 External Watchdog Monitor                                                        */
  I2C0_IRQn                     =  24,   /**<  40 Inter-Integrated Circuit                                                         */
  SPI_IRQn                      =  26,   /**<  42 Serial Peripheral Interface                                                      */
  UART0_RxTx_IRQn               =  31,   /**<  47 Serial Communication Interface                                                   */
  UART0_Error_IRQn              =  32,   /**<  48 Serial Communication Interface                                                   */
  UART1_RxTx_IRQn               =  33,   /**<  49 Serial Communication Interface                                                   */
  UART1_Error_IRQn              =  34,   /**<  50 Serial Communication Interface                                                   */
  ADC_Error_IRQn                =  38,   /**<  54 Analogue to digital converter                                                    */
  ADCA_IRQn                     =  39,   /**<  55 Analogue to digital converter                                                    */
  CMP0_IRQn                     =  40,   /**<  56 High-Speed Comparator                                                            */
  CMP1_IRQn                     =  41,   /**<  57 High-Speed Comparator                                                            */
  PIT0_IRQn                     =  48,   /**<  64 Periodic Interrupt Timer                                                         */
  PIT1_IRQn                     =  49,   /**<  65 Periodic Interrupt Timer                                                         */
  PIT2_IRQn                     =  50,   /**<  66 Periodic Interrupt Timer                                                         */
  PIT3_IRQn                     =  51,   /**<  67 Periodic Interrupt Timer                                                         */
  PDB0_IRQn                     =  52,   /**<  68 Programmable Delay Block                                                         */
  XBARA_IRQn                    =  54,   /**<  70 Crossbar Switch                                                                  */
  PDB1_IRQn                     =  55,   /**<  71 Programmable Delay Block                                                         */
  MCG_IRQn                      =  57,   /**<  73 Multipurpose Clock Generator                                                     */
  LPTMR0_IRQn                   =  58,   /**<  74 Low Power Timer                                                                  */
  PORTA_IRQn                    =  59,   /**<  75 General Purpose Input/Output                                                     */
  PORTB_IRQn                    =  60,   /**<  76 General Purpose Input/Output                                                     */
  PORTC_IRQn                    =  61,   /**<  77 General Purpose Input/Output                                                     */
  PORTD_IRQn                    =  62,   /**<  78 General Purpose Input/Output                                                     */
  PORTE_IRQn                    =  63,   /**<  79 General Purpose Input/Output                                                     */
  ENC_COMPARE_IRQn              =  66,   /**<  82 Quadrature Decoder                                                               */
  ENC_HOME_IRQn                 =  67,   /**<  83 Quadrature Decoder                                                               */
  ENC_WDOG_SAB_IRQn             =  68,   /**<  84 Quadrature Decoder                                                               */
  ENC_INDEX_IRQn                =  69,   /**<  85 Quadrature Decoder                                                               */
  CMP2_IRQn                     =  70,   /**<  86 High-Speed Comparator                                                            */
  ADCB_IRQn                     =  73,   /**<  89 Analogue to digital converter                                                    */
  CAN0_MessageBuffer_IRQn       =  75,   /**<  91 Flex Controller Area Network module                                              */
  CAN0_BusOff_IRQn              =  76,   /**<  92 Flex Controller Area Network module                                              */
  CAN0_Error_IRQn               =  77,   /**<  93 Flex Controller Area Network module                                              */
  CAN0_TxWarning_IRQn           =  78,   /**<  94 Flex Controller Area Network module                                              */
  CAN0_RxWarning_IRQn           =  79,   /**<  95 Flex Controller Area Network module                                              */
  CAN0_WakeUp_IRQn              =  80,   /**<  96 Flex Controller Area Network module                                              */
  PWMA_CMP0_IRQn                =  81,   /**<  97 Pulse Width Modulator with nano edge placement                                   */
  PWMA_RELOAD0_IRQn             =  82,   /**<  98 Pulse Width Modulator with nano edge placement                                   */
  PWMA_CMP1_IRQn                =  83,   /**<  99 Pulse Width Modulator with nano edge placement                                   */
  PWMA_RELOAD1_IRQn             =  84,   /**< 100 Pulse Width Modulator with nano edge placement                                   */
  PWMA_CMP2_IRQn                =  85,   /**< 101 Pulse Width Modulator with nano edge placement                                   */
  PWMA_RELOAD2_IRQn             =  86,   /**< 102 Pulse Width Modulator with nano edge placement                                   */
  PWMA_CMP3_IRQn                =  87,   /**< 103 Pulse Width Modulator with nano edge placement                                   */
  PWMA_RELOAD3_IRQn             =  88,   /**< 104 Pulse Width Modulator with nano edge placement                                   */
  PWMA_CAP_IRQn                 =  89,   /**< 105 Pulse Width Modulator with nano edge placement                                   */
  PWMA_RERR_IRQn                =  90,   /**< 106 Pulse Width Modulator with nano edge placement                                   */
  PWMA_FAULT_IRQn               =  91,   /**< 107 Pulse Width Modulator with nano edge placement                                   */
  CMP3_IRQn                     =  92,   /**< 108 High-Speed Comparator                                                            */
  CAN1_MessageBuffer_IRQn       =  94,   /**< 110 Flex Controller Area Network module                                              */
  CAN1_BusOff_IRQn              =  95,   /**< 111 Flex Controller Area Network module                                              */
  CAN1_Error_IRQn               =  96,   /**< 112 Flex Controller Area Network module                                              */
  CAN1_TxWarning_IRQn           =  97,   /**< 113 Flex Controller Area Network module                                              */
  CAN1_RxWarning_IRQn           =  98,   /**< 114 Flex Controller Area Network module                                              */
  CAN1_WakeUp_IRQn              =  99,   /**< 115 Flex Controller Area Network module                                              */
} IRQn_Type;

/**
 * @} */ /* End group Interrupt_vector_numbers_GROUP 
 */
/**
* @addtogroup Interrupt_handler_prototypes_GROUP Interrupt handler prototypes
* @brief Prototypes for interrupt handlers
* @{
*/
/* -------------------------  Exception Handlers  ------------------------ */
extern void NMI_Handler(void);                       /**< Non maskable Interrupt, cannot be stopped or preempted                           */
extern void HardFault_Handler(void);                 /**< Hard Fault, all classes of Fault                                                 */
extern void MemManage_Handler(void);                 /**< Memory Management, MPU mismatch, including Access Violation and No Match         */
extern void BusFault_Handler(void);                  /**< Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault   */
extern void UsageFault_Handler(void);                /**< Usage Fault, i.e. Undef Instruction, Illegal State Transition                    */
extern void SVC_Handler(void);                       /**< System Service Call via SVC instruction                                          */
extern void DebugMon_Handler(void);                  /**< Debug Monitor                                                                    */
extern void PendSV_Handler(void);                    /**< Pendable request for system service                                              */
extern void SysTick_Handler(void);                   /**< System Tick Timer                                                                */
extern void DMA0_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA1_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA2_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA3_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA4_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA5_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA6_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA7_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA8_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA9_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA10_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA11_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA12_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA13_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA14_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA15_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA_Error_IRQHandler(void);              /**< Direct memory access controller                                                  */
extern void MCM_IRQHandler(void);                    /**< Miscellaneous Control Module                                                     */
extern void FTF_Command_IRQHandler(void);            /**< Flash Memory Interface                                                           */
extern void FTF_ReadCollision_IRQHandler(void);      /**< Flash Memory Interface                                                           */
extern void PMC_IRQHandler(void);                    /**< Power Management Controller                                                      */
extern void LLWU_IRQHandler(void);                   /**< Low Leakage Wakeup                                                               */
extern void WDOG_IRQHandler(void);                   /**< External Watchdog Monitor                                                        */
extern void I2C0_IRQHandler(void);                   /**< Inter-Integrated Circuit                                                         */
extern void SPI_IRQHandler(void);                    /**< Serial Peripheral Interface                                                      */
extern void UART0_RxTx_IRQHandler(void);             /**< Serial Communication Interface                                                   */
extern void UART0_Error_IRQHandler(void);            /**< Serial Communication Interface                                                   */
extern void UART1_RxTx_IRQHandler(void);             /**< Serial Communication Interface                                                   */
extern void UART1_Error_IRQHandler(void);            /**< Serial Communication Interface                                                   */
extern void ADC_Error_IRQHandler(void);              /**< Analogue to digital converter                                                    */
extern void ADCA_IRQHandler(void);                   /**< Analogue to digital converter                                                    */
extern void CMP0_IRQHandler(void);                   /**< High-Speed Comparator                                                            */
extern void CMP1_IRQHandler(void);                   /**< High-Speed Comparator                                                            */
extern void PIT0_IRQHandler(void);                   /**< Periodic Interrupt Timer                                                         */
extern void PIT1_IRQHandler(void);                   /**< Periodic Interrupt Timer                                                         */
extern void PIT2_IRQHandler(void);                   /**< Periodic Interrupt Timer                                                         */
extern void PIT3_IRQHandler(void);                   /**< Periodic Interrupt Timer                                                         */
extern void PDB0_IRQHandler(void);                   /**< Programmable Delay Block                                                         */
extern void XBARA_IRQHandler(void);                  /**< Crossbar Switch                                                                  */
extern void PDB1_IRQHandler(void);                   /**< Programmable Delay Block                                                         */
extern void MCG_IRQHandler(void);                    /**< Multipurpose Clock Generator                                                     */
extern void LPTMR0_IRQHandler(void);                 /**< Low Power Timer                                                                  */
extern void PORTA_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void PORTB_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void PORTC_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void PORTD_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void PORTE_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void ENC_COMPARE_IRQHandler(void);            /**< Quadrature Decoder                                                               */
extern void ENC_HOME_IRQHandler(void);               /**< Quadrature Decoder                                                               */
extern void ENC_WDOG_SAB_IRQHandler(void);           /**< Quadrature Decoder                                                               */
extern void ENC_INDEX_IRQHandler(void);              /**< Quadrature Decoder                                                               */
extern void CMP2_IRQHandler(void);                   /**< High-Speed Comparator                                                            */
extern void ADCB_IRQHandler(void);                   /**< Analogue to digital converter                                                    */
extern void CAN0_MessageBuffer_IRQHandler(void);     /**< Flex Controller Area Network module                                              */
extern void CAN0_BusOff_IRQHandler(void);            /**< Flex Controller Area Network module                                              */
extern void CAN0_Error_IRQHandler(void);             /**< Flex Controller Area Network module                                              */
extern void CAN0_TxWarning_IRQHandler(void);         /**< Flex Controller Area Network module                                              */
extern void CAN0_RxWarning_IRQHandler(void);         /**< Flex Controller Area Network module                                              */
extern void CAN0_WakeUp_IRQHandler(void);            /**< Flex Controller Area Network module                                              */
extern void PWMA_CMP0_IRQHandler(void);              /**< Pulse Width Modulator with nano edge placement                                   */
extern void PWMA_RELOAD0_IRQHandler(void);           /**< Pulse Width Modulator with nano edge placement                                   */
extern void PWMA_CMP1_IRQHandler(void);              /**< Pulse Width Modulator with nano edge placement                                   */
extern void PWMA_RELOAD1_IRQHandler(void);           /**< Pulse Width Modulator with nano edge placement                                   */
extern void PWMA_CMP2_IRQHandler(void);              /**< Pulse Width Modulator with nano edge placement                                   */
extern void PWMA_RELOAD2_IRQHandler(void);           /**< Pulse Width Modulator with nano edge placement                                   */
extern void PWMA_CMP3_IRQHandler(void);              /**< Pulse Width Modulator with nano edge placement                                   */
extern void PWMA_RELOAD3_IRQHandler(void);           /**< Pulse Width Modulator with nano edge placement                                   */
extern void PWMA_CAP_IRQHandler(void);               /**< Pulse Width Modulator with nano edge placement                                   */
extern void PWMA_RERR_IRQHandler(void);              /**< Pulse Width Modulator with nano edge placement                                   */
extern void PWMA_FAULT_IRQHandler(void);             /**< Pulse Width Modulator with nano edge placement                                   */
extern void CMP3_IRQHandler(void);                   /**< High-Speed Comparator                                                            */
extern void CAN1_MessageBuffer_IRQHandler(void);     /**< Flex Controller Area Network module                                              */
extern void CAN1_BusOff_IRQHandler(void);            /**< Flex Controller Area Network module                                              */
extern void CAN1_Error_IRQHandler(void);             /**< Flex Controller Area Network module                                              */
extern void CAN1_TxWarning_IRQHandler(void);         /**< Flex Controller Area Network module                                              */
extern void CAN1_RxWarning_IRQHandler(void);         /**< Flex Controller Area Network module                                              */
extern void CAN1_WakeUp_IRQHandler(void);            /**< Flex Controller Area Network module                                              */

/**
 * @} */ /* End group Interrupt_handler_prototypes_GROUP 
 */
/* ================================================================================ */
/* ================      Processor and Core Peripheral Section     ================ */
/* ================================================================================ */

/**
* @addtogroup Cortex_Core_Configuration_GROUP Cortex Core Configuration
* @brief Configuration of the cm4 Processor and Core Peripherals
* @{
*/
#define __CM4_REV                 0x0001     /**< CPU Revision                                        */
#define __MPU_PRESENT             0          /**< Whether MPU is present                              */
#define __NVIC_PRIO_BITS          4          /**< Number of implemented bits in NVIC PRIO register    */
#define __Vendor_SysTickConfig    0          /**< Whether Vendor implemented SYSTICK timer is present */
#define __FPU_PRESENT             1          /**< Whether FPU is present                              */
#define __VTOR_PRESENT            1          /**< Whether VTOR register is present                    */

/**
 * @} */ /* End group Cortex_Core_Configuration_GROUP 
 */
#include "core_cm4.h"           /* Processor and core peripherals     */
#include "system.h"             /* Device specific configuration file */

#ifndef __IO
#define __IO volatile 
#endif

#ifndef __I
#define __I volatile const
#endif

#ifndef __O
#define __O volatile
#endif


/* ================================================================================ */
/* ================       Device Specific Peripheral Section       ================ */
/* ================================================================================ */



/* -------------------  Start of section using anonymous unions  ------------------ */
#if defined(__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined(__ICCARM__)
  #pragma language=extended
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__TMS470__)
/* anonymous unions are enabled by default */
#elif defined(__TASKING__)
  #pragma warning 586
#else
  #warning Not supported compiler type
#endif
/**
* @addtogroup Peripheral_access_layer_GROUP Device Peripheral Access Layer
* @brief C structs allowing access to peripheral registers
* @{
*/
/**
* @addtogroup ADC_Peripheral_access_layer_GROUP ADC Peripheral Access Layer
* @brief C Struct for ADC
* @{
*/

/* ================================================================================ */
/* ================           ADC0 (file:ADC0_MKV)                 ================ */
/* ================================================================================ */

/**
 * @brief Analog to digital converter
 */
/**
* @addtogroup ADC_structs_GROUP ADC struct
* @brief Struct for ADC
* @{
*/
typedef struct ADC_Type {
   __IO uint16_t  CTRL1;                        /**< 0000: ADC Control Register 1                                       */
   __IO uint16_t  CTRL2;                        /**< 0002: ADC Control Register 2                                       */
   __IO uint16_t  ZXCTRL1;                      /**< 0004: ADC Zero Crossing Control 1 Register                         */
   __IO uint16_t  ZXCTRL2;                      /**< 0006: ADC Zero Crossing Control 2 Register                         */
   __IO uint16_t  CLIST1;                       /**< 0008: ADC Channel List Register 1                                  */
   __IO uint16_t  CLIST2;                       /**< 000A: ADC Channel List Register 2                                  */
   __IO uint16_t  CLIST3;                       /**< 000C: ADC Channel List Register 3                                  */
   __IO uint16_t  CLIST4;                       /**< 000E: ADC Channel List Register 4                                  */
   __IO uint16_t  SDIS;                         /**< 0010: ADC Sample Disable Register                                  */
   __IO uint16_t  STAT;                         /**< 0012: ADC Status Register                                          */
   __I  uint16_t  RDY;                          /**< 0014: ADC Ready Register                                           */
   __IO uint16_t  LOLIMSTAT;                    /**< 0016: ADC Low Limit Status Register                                */
   __IO uint16_t  HILIMSTAT;                    /**< 0018: ADC High Limit Status Register                               */
   __IO uint16_t  ZXSTAT;                       /**< 001A: ADC Zero Crossing Status Register                            */
   __IO uint16_t  RSLT[16];                     /**< 001C: ADC Result Registers with sign extension                     */
   __IO uint16_t  LOLIM[16];                    /**< 003C: ADC Low Limit                                                */
   __IO uint16_t  HILIM[16];                    /**< 005C: ADC High Limit                                               */
   __IO uint16_t  OFFST[16];                    /**< 007C: ADC Offset                                                   */
   __IO uint16_t  PWR;                          /**< 009C: ADC Power Control Register                                   */
   __IO uint16_t  CAL;                          /**< 009E: ADC Calibration Register                                     */
   __IO uint16_t  GC1;                          /**< 00A0: Gain Control 1 Register                                      */
   __IO uint16_t  GC2;                          /**< 00A2: Gain Control 2 Register                                      */
   __IO uint16_t  SCTRL;                        /**< 00A4: ADC Scan Control Register                                    */
   __IO uint16_t  PWR2;                         /**< 00A6: ADC Power Control Register                                   */
   __IO uint16_t  CTRL3;                        /**< 00A8: ADC Control Register 3                                       */
   __IO uint16_t  SCHLTEN;                      /**< 00AA: ADC Scan Interrupt Enable Register                           */
} ADC_Type;

/**
 * @} */ /* End group ADC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'ADC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup ADC_Register_Masks_GROUP ADC Register Masks
* @brief Register Masks for ADC
* @{
*/

/*! @name CTRL1 - ADC Control Register 1 */
#define ADC_CTRL1_SMODE_MASK                     (0x7U)                                              /*!< ADC0_CTRL1.SMODE Mask                   */
#define ADC_CTRL1_SMODE_SHIFT                    (0U)                                                /*!< ADC0_CTRL1.SMODE Position               */
#define ADC_CTRL1_SMODE(x)                       (((uint16_t)(((uint16_t)(x))<<ADC_CTRL1_SMODE_SHIFT))&ADC_CTRL1_SMODE_MASK) /*!< ADC0_CTRL1.SMODE Field                  */
#define ADC_CTRL1_CHNCFG_L_MASK                  (0xF0U)                                             /*!< ADC0_CTRL1.CHNCFG_L Mask                */
#define ADC_CTRL1_CHNCFG_L_SHIFT                 (4U)                                                /*!< ADC0_CTRL1.CHNCFG_L Position            */
#define ADC_CTRL1_CHNCFG_L(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CTRL1_CHNCFG_L_SHIFT))&ADC_CTRL1_CHNCFG_L_MASK) /*!< ADC0_CTRL1.CHNCFG_L Field               */
#define ADC_CTRL1_HLMTIE_MASK                    (0x100U)                                            /*!< ADC0_CTRL1.HLMTIE Mask                  */
#define ADC_CTRL1_HLMTIE_SHIFT                   (8U)                                                /*!< ADC0_CTRL1.HLMTIE Position              */
#define ADC_CTRL1_HLMTIE(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_CTRL1_HLMTIE_SHIFT))&ADC_CTRL1_HLMTIE_MASK) /*!< ADC0_CTRL1.HLMTIE Field                 */
#define ADC_CTRL1_LLMTIE_MASK                    (0x200U)                                            /*!< ADC0_CTRL1.LLMTIE Mask                  */
#define ADC_CTRL1_LLMTIE_SHIFT                   (9U)                                                /*!< ADC0_CTRL1.LLMTIE Position              */
#define ADC_CTRL1_LLMTIE(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_CTRL1_LLMTIE_SHIFT))&ADC_CTRL1_LLMTIE_MASK) /*!< ADC0_CTRL1.LLMTIE Field                 */
#define ADC_CTRL1_ZCIE_MASK                      (0x400U)                                            /*!< ADC0_CTRL1.ZCIE Mask                    */
#define ADC_CTRL1_ZCIE_SHIFT                     (10U)                                               /*!< ADC0_CTRL1.ZCIE Position                */
#define ADC_CTRL1_ZCIE(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_CTRL1_ZCIE_SHIFT))&ADC_CTRL1_ZCIE_MASK) /*!< ADC0_CTRL1.ZCIE Field                   */
#define ADC_CTRL1_EOSIE0_MASK                    (0x800U)                                            /*!< ADC0_CTRL1.EOSIE0 Mask                  */
#define ADC_CTRL1_EOSIE0_SHIFT                   (11U)                                               /*!< ADC0_CTRL1.EOSIE0 Position              */
#define ADC_CTRL1_EOSIE0(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_CTRL1_EOSIE0_SHIFT))&ADC_CTRL1_EOSIE0_MASK) /*!< ADC0_CTRL1.EOSIE0 Field                 */
#define ADC_CTRL1_SYNC0_MASK                     (0x1000U)                                           /*!< ADC0_CTRL1.SYNC0 Mask                   */
#define ADC_CTRL1_SYNC0_SHIFT                    (12U)                                               /*!< ADC0_CTRL1.SYNC0 Position               */
#define ADC_CTRL1_SYNC0(x)                       (((uint16_t)(((uint16_t)(x))<<ADC_CTRL1_SYNC0_SHIFT))&ADC_CTRL1_SYNC0_MASK) /*!< ADC0_CTRL1.SYNC0 Field                  */
#define ADC_CTRL1_START0_MASK                    (0x2000U)                                           /*!< ADC0_CTRL1.START0 Mask                  */
#define ADC_CTRL1_START0_SHIFT                   (13U)                                               /*!< ADC0_CTRL1.START0 Position              */
#define ADC_CTRL1_START0(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_CTRL1_START0_SHIFT))&ADC_CTRL1_START0_MASK) /*!< ADC0_CTRL1.START0 Field                 */
#define ADC_CTRL1_STOP0_MASK                     (0x4000U)                                           /*!< ADC0_CTRL1.STOP0 Mask                   */
#define ADC_CTRL1_STOP0_SHIFT                    (14U)                                               /*!< ADC0_CTRL1.STOP0 Position               */
#define ADC_CTRL1_STOP0(x)                       (((uint16_t)(((uint16_t)(x))<<ADC_CTRL1_STOP0_SHIFT))&ADC_CTRL1_STOP0_MASK) /*!< ADC0_CTRL1.STOP0 Field                  */
#define ADC_CTRL1_DMAEN0_MASK                    (0x8000U)                                           /*!< ADC0_CTRL1.DMAEN0 Mask                  */
#define ADC_CTRL1_DMAEN0_SHIFT                   (15U)                                               /*!< ADC0_CTRL1.DMAEN0 Position              */
#define ADC_CTRL1_DMAEN0(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_CTRL1_DMAEN0_SHIFT))&ADC_CTRL1_DMAEN0_MASK) /*!< ADC0_CTRL1.DMAEN0 Field                 */

/*! @name CTRL2 - ADC Control Register 2 */
#define ADC_CTRL2_DIV0_MASK                      (0x3FU)                                             /*!< ADC0_CTRL2.DIV0 Mask                    */
#define ADC_CTRL2_DIV0_SHIFT                     (0U)                                                /*!< ADC0_CTRL2.DIV0 Position                */
#define ADC_CTRL2_DIV0(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_CTRL2_DIV0_SHIFT))&ADC_CTRL2_DIV0_MASK) /*!< ADC0_CTRL2.DIV0 Field                   */
#define ADC_CTRL2_SIMULT_MASK                    (0x40U)                                             /*!< ADC0_CTRL2.SIMULT Mask                  */
#define ADC_CTRL2_SIMULT_SHIFT                   (6U)                                                /*!< ADC0_CTRL2.SIMULT Position              */
#define ADC_CTRL2_SIMULT(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_CTRL2_SIMULT_SHIFT))&ADC_CTRL2_SIMULT_MASK) /*!< ADC0_CTRL2.SIMULT Field                 */
#define ADC_CTRL2_CHNCFG_H_MASK                  (0x780U)                                            /*!< ADC0_CTRL2.CHNCFG_H Mask                */
#define ADC_CTRL2_CHNCFG_H_SHIFT                 (7U)                                                /*!< ADC0_CTRL2.CHNCFG_H Position            */
#define ADC_CTRL2_CHNCFG_H(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CTRL2_CHNCFG_H_SHIFT))&ADC_CTRL2_CHNCFG_H_MASK) /*!< ADC0_CTRL2.CHNCFG_H Field               */
#define ADC_CTRL2_EOSIE1_MASK                    (0x800U)                                            /*!< ADC0_CTRL2.EOSIE1 Mask                  */
#define ADC_CTRL2_EOSIE1_SHIFT                   (11U)                                               /*!< ADC0_CTRL2.EOSIE1 Position              */
#define ADC_CTRL2_EOSIE1(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_CTRL2_EOSIE1_SHIFT))&ADC_CTRL2_EOSIE1_MASK) /*!< ADC0_CTRL2.EOSIE1 Field                 */
#define ADC_CTRL2_SYNC1_MASK                     (0x1000U)                                           /*!< ADC0_CTRL2.SYNC1 Mask                   */
#define ADC_CTRL2_SYNC1_SHIFT                    (12U)                                               /*!< ADC0_CTRL2.SYNC1 Position               */
#define ADC_CTRL2_SYNC1(x)                       (((uint16_t)(((uint16_t)(x))<<ADC_CTRL2_SYNC1_SHIFT))&ADC_CTRL2_SYNC1_MASK) /*!< ADC0_CTRL2.SYNC1 Field                  */
#define ADC_CTRL2_START1_MASK                    (0x2000U)                                           /*!< ADC0_CTRL2.START1 Mask                  */
#define ADC_CTRL2_START1_SHIFT                   (13U)                                               /*!< ADC0_CTRL2.START1 Position              */
#define ADC_CTRL2_START1(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_CTRL2_START1_SHIFT))&ADC_CTRL2_START1_MASK) /*!< ADC0_CTRL2.START1 Field                 */
#define ADC_CTRL2_STOP1_MASK                     (0x4000U)                                           /*!< ADC0_CTRL2.STOP1 Mask                   */
#define ADC_CTRL2_STOP1_SHIFT                    (14U)                                               /*!< ADC0_CTRL2.STOP1 Position               */
#define ADC_CTRL2_STOP1(x)                       (((uint16_t)(((uint16_t)(x))<<ADC_CTRL2_STOP1_SHIFT))&ADC_CTRL2_STOP1_MASK) /*!< ADC0_CTRL2.STOP1 Field                  */
#define ADC_CTRL2_DMAEN1_MASK                    (0x8000U)                                           /*!< ADC0_CTRL2.DMAEN1 Mask                  */
#define ADC_CTRL2_DMAEN1_SHIFT                   (15U)                                               /*!< ADC0_CTRL2.DMAEN1 Position              */
#define ADC_CTRL2_DMAEN1(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_CTRL2_DMAEN1_SHIFT))&ADC_CTRL2_DMAEN1_MASK) /*!< ADC0_CTRL2.DMAEN1 Field                 */

/*! @name ZXCTRL1 - ADC Zero Crossing Control 1 Register */
#define ADC_ZXCTRL1_ZCE0_MASK                    (0x3U)                                              /*!< ADC0_ZXCTRL1.ZCE0 Mask                  */
#define ADC_ZXCTRL1_ZCE0_SHIFT                   (0U)                                                /*!< ADC0_ZXCTRL1.ZCE0 Position              */
#define ADC_ZXCTRL1_ZCE0(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL1_ZCE0_SHIFT))&ADC_ZXCTRL1_ZCE0_MASK) /*!< ADC0_ZXCTRL1.ZCE0 Field                 */
#define ADC_ZXCTRL1_ZCE1_MASK                    (0xCU)                                              /*!< ADC0_ZXCTRL1.ZCE1 Mask                  */
#define ADC_ZXCTRL1_ZCE1_SHIFT                   (2U)                                                /*!< ADC0_ZXCTRL1.ZCE1 Position              */
#define ADC_ZXCTRL1_ZCE1(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL1_ZCE1_SHIFT))&ADC_ZXCTRL1_ZCE1_MASK) /*!< ADC0_ZXCTRL1.ZCE1 Field                 */
#define ADC_ZXCTRL1_ZCE2_MASK                    (0x30U)                                             /*!< ADC0_ZXCTRL1.ZCE2 Mask                  */
#define ADC_ZXCTRL1_ZCE2_SHIFT                   (4U)                                                /*!< ADC0_ZXCTRL1.ZCE2 Position              */
#define ADC_ZXCTRL1_ZCE2(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL1_ZCE2_SHIFT))&ADC_ZXCTRL1_ZCE2_MASK) /*!< ADC0_ZXCTRL1.ZCE2 Field                 */
#define ADC_ZXCTRL1_ZCE3_MASK                    (0xC0U)                                             /*!< ADC0_ZXCTRL1.ZCE3 Mask                  */
#define ADC_ZXCTRL1_ZCE3_SHIFT                   (6U)                                                /*!< ADC0_ZXCTRL1.ZCE3 Position              */
#define ADC_ZXCTRL1_ZCE3(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL1_ZCE3_SHIFT))&ADC_ZXCTRL1_ZCE3_MASK) /*!< ADC0_ZXCTRL1.ZCE3 Field                 */
#define ADC_ZXCTRL1_ZCE4_MASK                    (0x300U)                                            /*!< ADC0_ZXCTRL1.ZCE4 Mask                  */
#define ADC_ZXCTRL1_ZCE4_SHIFT                   (8U)                                                /*!< ADC0_ZXCTRL1.ZCE4 Position              */
#define ADC_ZXCTRL1_ZCE4(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL1_ZCE4_SHIFT))&ADC_ZXCTRL1_ZCE4_MASK) /*!< ADC0_ZXCTRL1.ZCE4 Field                 */
#define ADC_ZXCTRL1_ZCE5_MASK                    (0xC00U)                                            /*!< ADC0_ZXCTRL1.ZCE5 Mask                  */
#define ADC_ZXCTRL1_ZCE5_SHIFT                   (10U)                                               /*!< ADC0_ZXCTRL1.ZCE5 Position              */
#define ADC_ZXCTRL1_ZCE5(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL1_ZCE5_SHIFT))&ADC_ZXCTRL1_ZCE5_MASK) /*!< ADC0_ZXCTRL1.ZCE5 Field                 */
#define ADC_ZXCTRL1_ZCE6_MASK                    (0x3000U)                                           /*!< ADC0_ZXCTRL1.ZCE6 Mask                  */
#define ADC_ZXCTRL1_ZCE6_SHIFT                   (12U)                                               /*!< ADC0_ZXCTRL1.ZCE6 Position              */
#define ADC_ZXCTRL1_ZCE6(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL1_ZCE6_SHIFT))&ADC_ZXCTRL1_ZCE6_MASK) /*!< ADC0_ZXCTRL1.ZCE6 Field                 */
#define ADC_ZXCTRL1_ZCE7_MASK                    (0xC000U)                                           /*!< ADC0_ZXCTRL1.ZCE7 Mask                  */
#define ADC_ZXCTRL1_ZCE7_SHIFT                   (14U)                                               /*!< ADC0_ZXCTRL1.ZCE7 Position              */
#define ADC_ZXCTRL1_ZCE7(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL1_ZCE7_SHIFT))&ADC_ZXCTRL1_ZCE7_MASK) /*!< ADC0_ZXCTRL1.ZCE7 Field                 */

/*! @name ZXCTRL2 - ADC Zero Crossing Control 2 Register */
#define ADC_ZXCTRL2_ZCE8_MASK                    (0x3U)                                              /*!< ADC0_ZXCTRL2.ZCE8 Mask                  */
#define ADC_ZXCTRL2_ZCE8_SHIFT                   (0U)                                                /*!< ADC0_ZXCTRL2.ZCE8 Position              */
#define ADC_ZXCTRL2_ZCE8(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL2_ZCE8_SHIFT))&ADC_ZXCTRL2_ZCE8_MASK) /*!< ADC0_ZXCTRL2.ZCE8 Field                 */
#define ADC_ZXCTRL2_ZCE9_MASK                    (0xCU)                                              /*!< ADC0_ZXCTRL2.ZCE9 Mask                  */
#define ADC_ZXCTRL2_ZCE9_SHIFT                   (2U)                                                /*!< ADC0_ZXCTRL2.ZCE9 Position              */
#define ADC_ZXCTRL2_ZCE9(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL2_ZCE9_SHIFT))&ADC_ZXCTRL2_ZCE9_MASK) /*!< ADC0_ZXCTRL2.ZCE9 Field                 */
#define ADC_ZXCTRL2_ZCE10_MASK                   (0x30U)                                             /*!< ADC0_ZXCTRL2.ZCE10 Mask                 */
#define ADC_ZXCTRL2_ZCE10_SHIFT                  (4U)                                                /*!< ADC0_ZXCTRL2.ZCE10 Position             */
#define ADC_ZXCTRL2_ZCE10(x)                     (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL2_ZCE10_SHIFT))&ADC_ZXCTRL2_ZCE10_MASK) /*!< ADC0_ZXCTRL2.ZCE10 Field                */
#define ADC_ZXCTRL2_ZCE11_MASK                   (0xC0U)                                             /*!< ADC0_ZXCTRL2.ZCE11 Mask                 */
#define ADC_ZXCTRL2_ZCE11_SHIFT                  (6U)                                                /*!< ADC0_ZXCTRL2.ZCE11 Position             */
#define ADC_ZXCTRL2_ZCE11(x)                     (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL2_ZCE11_SHIFT))&ADC_ZXCTRL2_ZCE11_MASK) /*!< ADC0_ZXCTRL2.ZCE11 Field                */
#define ADC_ZXCTRL2_ZCE12_MASK                   (0x300U)                                            /*!< ADC0_ZXCTRL2.ZCE12 Mask                 */
#define ADC_ZXCTRL2_ZCE12_SHIFT                  (8U)                                                /*!< ADC0_ZXCTRL2.ZCE12 Position             */
#define ADC_ZXCTRL2_ZCE12(x)                     (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL2_ZCE12_SHIFT))&ADC_ZXCTRL2_ZCE12_MASK) /*!< ADC0_ZXCTRL2.ZCE12 Field                */
#define ADC_ZXCTRL2_ZCE13_MASK                   (0xC00U)                                            /*!< ADC0_ZXCTRL2.ZCE13 Mask                 */
#define ADC_ZXCTRL2_ZCE13_SHIFT                  (10U)                                               /*!< ADC0_ZXCTRL2.ZCE13 Position             */
#define ADC_ZXCTRL2_ZCE13(x)                     (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL2_ZCE13_SHIFT))&ADC_ZXCTRL2_ZCE13_MASK) /*!< ADC0_ZXCTRL2.ZCE13 Field                */
#define ADC_ZXCTRL2_ZCE14_MASK                   (0x3000U)                                           /*!< ADC0_ZXCTRL2.ZCE14 Mask                 */
#define ADC_ZXCTRL2_ZCE14_SHIFT                  (12U)                                               /*!< ADC0_ZXCTRL2.ZCE14 Position             */
#define ADC_ZXCTRL2_ZCE14(x)                     (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL2_ZCE14_SHIFT))&ADC_ZXCTRL2_ZCE14_MASK) /*!< ADC0_ZXCTRL2.ZCE14 Field                */
#define ADC_ZXCTRL2_ZCE15_MASK                   (0xC000U)                                           /*!< ADC0_ZXCTRL2.ZCE15 Mask                 */
#define ADC_ZXCTRL2_ZCE15_SHIFT                  (14U)                                               /*!< ADC0_ZXCTRL2.ZCE15 Position             */
#define ADC_ZXCTRL2_ZCE15(x)                     (((uint16_t)(((uint16_t)(x))<<ADC_ZXCTRL2_ZCE15_SHIFT))&ADC_ZXCTRL2_ZCE15_MASK) /*!< ADC0_ZXCTRL2.ZCE15 Field                */

/*! @name CLIST1 - ADC Channel List Register 1 */
#define ADC_CLIST1_SAMPLE0_MASK                  (0xFU)                                              /*!< ADC0_CLIST1.SAMPLE0 Mask                */
#define ADC_CLIST1_SAMPLE0_SHIFT                 (0U)                                                /*!< ADC0_CLIST1.SAMPLE0 Position            */
#define ADC_CLIST1_SAMPLE0(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CLIST1_SAMPLE0_SHIFT))&ADC_CLIST1_SAMPLE0_MASK) /*!< ADC0_CLIST1.SAMPLE0 Field               */
#define ADC_CLIST1_SAMPLE1_MASK                  (0xF0U)                                             /*!< ADC0_CLIST1.SAMPLE1 Mask                */
#define ADC_CLIST1_SAMPLE1_SHIFT                 (4U)                                                /*!< ADC0_CLIST1.SAMPLE1 Position            */
#define ADC_CLIST1_SAMPLE1(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CLIST1_SAMPLE1_SHIFT))&ADC_CLIST1_SAMPLE1_MASK) /*!< ADC0_CLIST1.SAMPLE1 Field               */
#define ADC_CLIST1_SAMPLE2_MASK                  (0xF00U)                                            /*!< ADC0_CLIST1.SAMPLE2 Mask                */
#define ADC_CLIST1_SAMPLE2_SHIFT                 (8U)                                                /*!< ADC0_CLIST1.SAMPLE2 Position            */
#define ADC_CLIST1_SAMPLE2(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CLIST1_SAMPLE2_SHIFT))&ADC_CLIST1_SAMPLE2_MASK) /*!< ADC0_CLIST1.SAMPLE2 Field               */
#define ADC_CLIST1_SAMPLE3_MASK                  (0xF000U)                                           /*!< ADC0_CLIST1.SAMPLE3 Mask                */
#define ADC_CLIST1_SAMPLE3_SHIFT                 (12U)                                               /*!< ADC0_CLIST1.SAMPLE3 Position            */
#define ADC_CLIST1_SAMPLE3(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CLIST1_SAMPLE3_SHIFT))&ADC_CLIST1_SAMPLE3_MASK) /*!< ADC0_CLIST1.SAMPLE3 Field               */

/*! @name CLIST2 - ADC Channel List Register 2 */
#define ADC_CLIST2_SAMPLE4_MASK                  (0xFU)                                              /*!< ADC0_CLIST2.SAMPLE4 Mask                */
#define ADC_CLIST2_SAMPLE4_SHIFT                 (0U)                                                /*!< ADC0_CLIST2.SAMPLE4 Position            */
#define ADC_CLIST2_SAMPLE4(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CLIST2_SAMPLE4_SHIFT))&ADC_CLIST2_SAMPLE4_MASK) /*!< ADC0_CLIST2.SAMPLE4 Field               */
#define ADC_CLIST2_SAMPLE5_MASK                  (0xF0U)                                             /*!< ADC0_CLIST2.SAMPLE5 Mask                */
#define ADC_CLIST2_SAMPLE5_SHIFT                 (4U)                                                /*!< ADC0_CLIST2.SAMPLE5 Position            */
#define ADC_CLIST2_SAMPLE5(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CLIST2_SAMPLE5_SHIFT))&ADC_CLIST2_SAMPLE5_MASK) /*!< ADC0_CLIST2.SAMPLE5 Field               */
#define ADC_CLIST2_SAMPLE6_MASK                  (0xF00U)                                            /*!< ADC0_CLIST2.SAMPLE6 Mask                */
#define ADC_CLIST2_SAMPLE6_SHIFT                 (8U)                                                /*!< ADC0_CLIST2.SAMPLE6 Position            */
#define ADC_CLIST2_SAMPLE6(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CLIST2_SAMPLE6_SHIFT))&ADC_CLIST2_SAMPLE6_MASK) /*!< ADC0_CLIST2.SAMPLE6 Field               */
#define ADC_CLIST2_SAMPLE7_MASK                  (0xF000U)                                           /*!< ADC0_CLIST2.SAMPLE7 Mask                */
#define ADC_CLIST2_SAMPLE7_SHIFT                 (12U)                                               /*!< ADC0_CLIST2.SAMPLE7 Position            */
#define ADC_CLIST2_SAMPLE7(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CLIST2_SAMPLE7_SHIFT))&ADC_CLIST2_SAMPLE7_MASK) /*!< ADC0_CLIST2.SAMPLE7 Field               */

/*! @name CLIST3 - ADC Channel List Register 3 */
#define ADC_CLIST3_SAMPLE8_MASK                  (0xFU)                                              /*!< ADC0_CLIST3.SAMPLE8 Mask                */
#define ADC_CLIST3_SAMPLE8_SHIFT                 (0U)                                                /*!< ADC0_CLIST3.SAMPLE8 Position            */
#define ADC_CLIST3_SAMPLE8(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CLIST3_SAMPLE8_SHIFT))&ADC_CLIST3_SAMPLE8_MASK) /*!< ADC0_CLIST3.SAMPLE8 Field               */
#define ADC_CLIST3_SAMPLE9_MASK                  (0xF0U)                                             /*!< ADC0_CLIST3.SAMPLE9 Mask                */
#define ADC_CLIST3_SAMPLE9_SHIFT                 (4U)                                                /*!< ADC0_CLIST3.SAMPLE9 Position            */
#define ADC_CLIST3_SAMPLE9(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_CLIST3_SAMPLE9_SHIFT))&ADC_CLIST3_SAMPLE9_MASK) /*!< ADC0_CLIST3.SAMPLE9 Field               */
#define ADC_CLIST3_SAMPLE10_MASK                 (0xF00U)                                            /*!< ADC0_CLIST3.SAMPLE10 Mask               */
#define ADC_CLIST3_SAMPLE10_SHIFT                (8U)                                                /*!< ADC0_CLIST3.SAMPLE10 Position           */
#define ADC_CLIST3_SAMPLE10(x)                   (((uint16_t)(((uint16_t)(x))<<ADC_CLIST3_SAMPLE10_SHIFT))&ADC_CLIST3_SAMPLE10_MASK) /*!< ADC0_CLIST3.SAMPLE10 Field              */
#define ADC_CLIST3_SAMPLE11_MASK                 (0xF000U)                                           /*!< ADC0_CLIST3.SAMPLE11 Mask               */
#define ADC_CLIST3_SAMPLE11_SHIFT                (12U)                                               /*!< ADC0_CLIST3.SAMPLE11 Position           */
#define ADC_CLIST3_SAMPLE11(x)                   (((uint16_t)(((uint16_t)(x))<<ADC_CLIST3_SAMPLE11_SHIFT))&ADC_CLIST3_SAMPLE11_MASK) /*!< ADC0_CLIST3.SAMPLE11 Field              */

/*! @name CLIST4 - ADC Channel List Register 4 */
#define ADC_CLIST4_SAMPLE12_MASK                 (0xFU)                                              /*!< ADC0_CLIST4.SAMPLE12 Mask               */
#define ADC_CLIST4_SAMPLE12_SHIFT                (0U)                                                /*!< ADC0_CLIST4.SAMPLE12 Position           */
#define ADC_CLIST4_SAMPLE12(x)                   (((uint16_t)(((uint16_t)(x))<<ADC_CLIST4_SAMPLE12_SHIFT))&ADC_CLIST4_SAMPLE12_MASK) /*!< ADC0_CLIST4.SAMPLE12 Field              */
#define ADC_CLIST4_SAMPLE13_MASK                 (0xF0U)                                             /*!< ADC0_CLIST4.SAMPLE13 Mask               */
#define ADC_CLIST4_SAMPLE13_SHIFT                (4U)                                                /*!< ADC0_CLIST4.SAMPLE13 Position           */
#define ADC_CLIST4_SAMPLE13(x)                   (((uint16_t)(((uint16_t)(x))<<ADC_CLIST4_SAMPLE13_SHIFT))&ADC_CLIST4_SAMPLE13_MASK) /*!< ADC0_CLIST4.SAMPLE13 Field              */
#define ADC_CLIST4_SAMPLE14_MASK                 (0xF00U)                                            /*!< ADC0_CLIST4.SAMPLE14 Mask               */
#define ADC_CLIST4_SAMPLE14_SHIFT                (8U)                                                /*!< ADC0_CLIST4.SAMPLE14 Position           */
#define ADC_CLIST4_SAMPLE14(x)                   (((uint16_t)(((uint16_t)(x))<<ADC_CLIST4_SAMPLE14_SHIFT))&ADC_CLIST4_SAMPLE14_MASK) /*!< ADC0_CLIST4.SAMPLE14 Field              */
#define ADC_CLIST4_SAMPLE15_MASK                 (0xF000U)                                           /*!< ADC0_CLIST4.SAMPLE15 Mask               */
#define ADC_CLIST4_SAMPLE15_SHIFT                (12U)                                               /*!< ADC0_CLIST4.SAMPLE15 Position           */
#define ADC_CLIST4_SAMPLE15(x)                   (((uint16_t)(((uint16_t)(x))<<ADC_CLIST4_SAMPLE15_SHIFT))&ADC_CLIST4_SAMPLE15_MASK) /*!< ADC0_CLIST4.SAMPLE15 Field              */

/*! @name SDIS - ADC Sample Disable Register */
#define ADC_SDIS_DS_MASK                         (0xFFFFU)                                           /*!< ADC0_SDIS.DS Mask                       */
#define ADC_SDIS_DS_SHIFT                        (0U)                                                /*!< ADC0_SDIS.DS Position                   */
#define ADC_SDIS_DS(x)                           (((uint16_t)(((uint16_t)(x))<<ADC_SDIS_DS_SHIFT))&ADC_SDIS_DS_MASK) /*!< ADC0_SDIS.DS Field                      */

/*! @name STAT - ADC Status Register */
#define ADC_STAT_UNDEFINED_MASK                  (0xFFU)                                             /*!< ADC0_STAT.UNDEFINED Mask                */
#define ADC_STAT_UNDEFINED_SHIFT                 (0U)                                                /*!< ADC0_STAT.UNDEFINED Position            */
#define ADC_STAT_UNDEFINED(x)                    (((uint16_t)(((uint16_t)(x))<<ADC_STAT_UNDEFINED_SHIFT))&ADC_STAT_UNDEFINED_MASK) /*!< ADC0_STAT.UNDEFINED Field               */
#define ADC_STAT_HLMTI_MASK                      (0x100U)                                            /*!< ADC0_STAT.HLMTI Mask                    */
#define ADC_STAT_HLMTI_SHIFT                     (8U)                                                /*!< ADC0_STAT.HLMTI Position                */
#define ADC_STAT_HLMTI(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_STAT_HLMTI_SHIFT))&ADC_STAT_HLMTI_MASK) /*!< ADC0_STAT.HLMTI Field                   */
#define ADC_STAT_LLMTI_MASK                      (0x200U)                                            /*!< ADC0_STAT.LLMTI Mask                    */
#define ADC_STAT_LLMTI_SHIFT                     (9U)                                                /*!< ADC0_STAT.LLMTI Position                */
#define ADC_STAT_LLMTI(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_STAT_LLMTI_SHIFT))&ADC_STAT_LLMTI_MASK) /*!< ADC0_STAT.LLMTI Field                   */
#define ADC_STAT_ZCI_MASK                        (0x400U)                                            /*!< ADC0_STAT.ZCI Mask                      */
#define ADC_STAT_ZCI_SHIFT                       (10U)                                               /*!< ADC0_STAT.ZCI Position                  */
#define ADC_STAT_ZCI(x)                          (((uint16_t)(((uint16_t)(x))<<ADC_STAT_ZCI_SHIFT))&ADC_STAT_ZCI_MASK) /*!< ADC0_STAT.ZCI Field                     */
#define ADC_STAT_EOSI0_MASK                      (0x800U)                                            /*!< ADC0_STAT.EOSI0 Mask                    */
#define ADC_STAT_EOSI0_SHIFT                     (11U)                                               /*!< ADC0_STAT.EOSI0 Position                */
#define ADC_STAT_EOSI0(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_STAT_EOSI0_SHIFT))&ADC_STAT_EOSI0_MASK) /*!< ADC0_STAT.EOSI0 Field                   */
#define ADC_STAT_EOSI1_MASK                      (0x1000U)                                           /*!< ADC0_STAT.EOSI1 Mask                    */
#define ADC_STAT_EOSI1_SHIFT                     (12U)                                               /*!< ADC0_STAT.EOSI1 Position                */
#define ADC_STAT_EOSI1(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_STAT_EOSI1_SHIFT))&ADC_STAT_EOSI1_MASK) /*!< ADC0_STAT.EOSI1 Field                   */
#define ADC_STAT_CIP1_MASK                       (0x4000U)                                           /*!< ADC0_STAT.CIP1 Mask                     */
#define ADC_STAT_CIP1_SHIFT                      (14U)                                               /*!< ADC0_STAT.CIP1 Position                 */
#define ADC_STAT_CIP1(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_STAT_CIP1_SHIFT))&ADC_STAT_CIP1_MASK) /*!< ADC0_STAT.CIP1 Field                    */
#define ADC_STAT_CIP0_MASK                       (0x8000U)                                           /*!< ADC0_STAT.CIP0 Mask                     */
#define ADC_STAT_CIP0_SHIFT                      (15U)                                               /*!< ADC0_STAT.CIP0 Position                 */
#define ADC_STAT_CIP0(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_STAT_CIP0_SHIFT))&ADC_STAT_CIP0_MASK) /*!< ADC0_STAT.CIP0 Field                    */

/*! @name RDY - ADC Ready Register */
#define ADC_RDY_RDY_MASK                         (0xFFFFU)                                           /*!< ADC0_RDY.RDY Mask                       */
#define ADC_RDY_RDY_SHIFT                        (0U)                                                /*!< ADC0_RDY.RDY Position                   */
#define ADC_RDY_RDY(x)                           (((uint16_t)(((uint16_t)(x))<<ADC_RDY_RDY_SHIFT))&ADC_RDY_RDY_MASK) /*!< ADC0_RDY.RDY Field                      */

/*! @name LOLIMSTAT - ADC Low Limit Status Register */
#define ADC_LOLIMSTAT_LLS_MASK                   (0xFFFFU)                                           /*!< ADC0_LOLIMSTAT.LLS Mask                 */
#define ADC_LOLIMSTAT_LLS_SHIFT                  (0U)                                                /*!< ADC0_LOLIMSTAT.LLS Position             */
#define ADC_LOLIMSTAT_LLS(x)                     (((uint16_t)(((uint16_t)(x))<<ADC_LOLIMSTAT_LLS_SHIFT))&ADC_LOLIMSTAT_LLS_MASK) /*!< ADC0_LOLIMSTAT.LLS Field                */

/*! @name HILIMSTAT - ADC High Limit Status Register */
#define ADC_HILIMSTAT_HLS_MASK                   (0xFFFFU)                                           /*!< ADC0_HILIMSTAT.HLS Mask                 */
#define ADC_HILIMSTAT_HLS_SHIFT                  (0U)                                                /*!< ADC0_HILIMSTAT.HLS Position             */
#define ADC_HILIMSTAT_HLS(x)                     (((uint16_t)(((uint16_t)(x))<<ADC_HILIMSTAT_HLS_SHIFT))&ADC_HILIMSTAT_HLS_MASK) /*!< ADC0_HILIMSTAT.HLS Field                */

/*! @name ZXSTAT - ADC Zero Crossing Status Register */
#define ADC_ZXSTAT_ZCS_MASK                      (0xFFFFU)                                           /*!< ADC0_ZXSTAT.ZCS Mask                    */
#define ADC_ZXSTAT_ZCS_SHIFT                     (0U)                                                /*!< ADC0_ZXSTAT.ZCS Position                */
#define ADC_ZXSTAT_ZCS(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_ZXSTAT_ZCS_SHIFT))&ADC_ZXSTAT_ZCS_MASK) /*!< ADC0_ZXSTAT.ZCS Field                   */

/*! @name RSLT - ADC Result Registers with sign extension */
#define ADC_RSLT_RSLT_MASK                       (0x7FF8U)                                           /*!< ADC0_RSLT.RSLT Mask                     */
#define ADC_RSLT_RSLT_SHIFT                      (3U)                                                /*!< ADC0_RSLT.RSLT Position                 */
#define ADC_RSLT_RSLT(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_RSLT_RSLT_SHIFT))&ADC_RSLT_RSLT_MASK) /*!< ADC0_RSLT.RSLT Field                    */
#define ADC_RSLT_SEXT_MASK                       (0x8000U)                                           /*!< ADC0_RSLT.SEXT Mask                     */
#define ADC_RSLT_SEXT_SHIFT                      (15U)                                               /*!< ADC0_RSLT.SEXT Position                 */
#define ADC_RSLT_SEXT(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_RSLT_SEXT_SHIFT))&ADC_RSLT_SEXT_MASK) /*!< ADC0_RSLT.SEXT Field                    */

/*! @name LOLIM - ADC Low Limit */
#define ADC_LOLIM_LLMT_MASK                      (0x7FF8U)                                           /*!< ADC0_LOLIM.LLMT Mask                    */
#define ADC_LOLIM_LLMT_SHIFT                     (3U)                                                /*!< ADC0_LOLIM.LLMT Position                */
#define ADC_LOLIM_LLMT(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_LOLIM_LLMT_SHIFT))&ADC_LOLIM_LLMT_MASK) /*!< ADC0_LOLIM.LLMT Field                   */

/*! @name HILIM - ADC High Limit */
#define ADC_HILIM_HLMT_MASK                      (0x7FF8U)                                           /*!< ADC0_HILIM.HLMT Mask                    */
#define ADC_HILIM_HLMT_SHIFT                     (3U)                                                /*!< ADC0_HILIM.HLMT Position                */
#define ADC_HILIM_HLMT(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_HILIM_HLMT_SHIFT))&ADC_HILIM_HLMT_MASK) /*!< ADC0_HILIM.HLMT Field                   */

/*! @name OFFST - ADC Offset */
#define ADC_OFFST_OFFSET_MASK                    (0x7FF8U)                                           /*!< ADC0_OFFST.OFFSET Mask                  */
#define ADC_OFFST_OFFSET_SHIFT                   (3U)                                                /*!< ADC0_OFFST.OFFSET Position              */
#define ADC_OFFST_OFFSET(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_OFFST_OFFSET_SHIFT))&ADC_OFFST_OFFSET_MASK) /*!< ADC0_OFFST.OFFSET Field                 */

/*! @name PWR - ADC Power Control Register */
#define ADC_PWR_PD0_MASK                         (0x1U)                                              /*!< ADC0_PWR.PD0 Mask                       */
#define ADC_PWR_PD0_SHIFT                        (0U)                                                /*!< ADC0_PWR.PD0 Position                   */
#define ADC_PWR_PD0(x)                           (((uint16_t)(((uint16_t)(x))<<ADC_PWR_PD0_SHIFT))&ADC_PWR_PD0_MASK) /*!< ADC0_PWR.PD0 Field                      */
#define ADC_PWR_PD1_MASK                         (0x2U)                                              /*!< ADC0_PWR.PD1 Mask                       */
#define ADC_PWR_PD1_SHIFT                        (1U)                                                /*!< ADC0_PWR.PD1 Position                   */
#define ADC_PWR_PD1(x)                           (((uint16_t)(((uint16_t)(x))<<ADC_PWR_PD1_SHIFT))&ADC_PWR_PD1_MASK) /*!< ADC0_PWR.PD1 Field                      */
#define ADC_PWR_APD_MASK                         (0x8U)                                              /*!< ADC0_PWR.APD Mask                       */
#define ADC_PWR_APD_SHIFT                        (3U)                                                /*!< ADC0_PWR.APD Position                   */
#define ADC_PWR_APD(x)                           (((uint16_t)(((uint16_t)(x))<<ADC_PWR_APD_SHIFT))&ADC_PWR_APD_MASK) /*!< ADC0_PWR.APD Field                      */
#define ADC_PWR_PUDELAY_MASK                     (0x3F0U)                                            /*!< ADC0_PWR.PUDELAY Mask                   */
#define ADC_PWR_PUDELAY_SHIFT                    (4U)                                                /*!< ADC0_PWR.PUDELAY Position               */
#define ADC_PWR_PUDELAY(x)                       (((uint16_t)(((uint16_t)(x))<<ADC_PWR_PUDELAY_SHIFT))&ADC_PWR_PUDELAY_MASK) /*!< ADC0_PWR.PUDELAY Field                  */
#define ADC_PWR_PSTS0_MASK                       (0x400U)                                            /*!< ADC0_PWR.PSTS0 Mask                     */
#define ADC_PWR_PSTS0_SHIFT                      (10U)                                               /*!< ADC0_PWR.PSTS0 Position                 */
#define ADC_PWR_PSTS0(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_PWR_PSTS0_SHIFT))&ADC_PWR_PSTS0_MASK) /*!< ADC0_PWR.PSTS0 Field                    */
#define ADC_PWR_PSTS1_MASK                       (0x800U)                                            /*!< ADC0_PWR.PSTS1 Mask                     */
#define ADC_PWR_PSTS1_SHIFT                      (11U)                                               /*!< ADC0_PWR.PSTS1 Position                 */
#define ADC_PWR_PSTS1(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_PWR_PSTS1_SHIFT))&ADC_PWR_PSTS1_MASK) /*!< ADC0_PWR.PSTS1 Field                    */
#define ADC_PWR_ASB_MASK                         (0x8000U)                                           /*!< ADC0_PWR.ASB Mask                       */
#define ADC_PWR_ASB_SHIFT                        (15U)                                               /*!< ADC0_PWR.ASB Position                   */
#define ADC_PWR_ASB(x)                           (((uint16_t)(((uint16_t)(x))<<ADC_PWR_ASB_SHIFT))&ADC_PWR_ASB_MASK) /*!< ADC0_PWR.ASB Field                      */

/*! @name CAL - ADC Calibration Register */
#define ADC_CAL_SEL_VREFLO_A_MASK                (0x1000U)                                           /*!< ADC0_CAL.SEL_VREFLO_A Mask              */
#define ADC_CAL_SEL_VREFLO_A_SHIFT               (12U)                                               /*!< ADC0_CAL.SEL_VREFLO_A Position          */
#define ADC_CAL_SEL_VREFLO_A(x)                  (((uint16_t)(((uint16_t)(x))<<ADC_CAL_SEL_VREFLO_A_SHIFT))&ADC_CAL_SEL_VREFLO_A_MASK) /*!< ADC0_CAL.SEL_VREFLO_A Field             */
#define ADC_CAL_SEL_VREFH_A_MASK                 (0x2000U)                                           /*!< ADC0_CAL.SEL_VREFH_A Mask               */
#define ADC_CAL_SEL_VREFH_A_SHIFT                (13U)                                               /*!< ADC0_CAL.SEL_VREFH_A Position           */
#define ADC_CAL_SEL_VREFH_A(x)                   (((uint16_t)(((uint16_t)(x))<<ADC_CAL_SEL_VREFH_A_SHIFT))&ADC_CAL_SEL_VREFH_A_MASK) /*!< ADC0_CAL.SEL_VREFH_A Field              */
#define ADC_CAL_SEL_VREFLO_B_MASK                (0x4000U)                                           /*!< ADC0_CAL.SEL_VREFLO_B Mask              */
#define ADC_CAL_SEL_VREFLO_B_SHIFT               (14U)                                               /*!< ADC0_CAL.SEL_VREFLO_B Position          */
#define ADC_CAL_SEL_VREFLO_B(x)                  (((uint16_t)(((uint16_t)(x))<<ADC_CAL_SEL_VREFLO_B_SHIFT))&ADC_CAL_SEL_VREFLO_B_MASK) /*!< ADC0_CAL.SEL_VREFLO_B Field             */
#define ADC_CAL_SEL_VREFH_B_MASK                 (0x8000U)                                           /*!< ADC0_CAL.SEL_VREFH_B Mask               */
#define ADC_CAL_SEL_VREFH_B_SHIFT                (15U)                                               /*!< ADC0_CAL.SEL_VREFH_B Position           */
#define ADC_CAL_SEL_VREFH_B(x)                   (((uint16_t)(((uint16_t)(x))<<ADC_CAL_SEL_VREFH_B_SHIFT))&ADC_CAL_SEL_VREFH_B_MASK) /*!< ADC0_CAL.SEL_VREFH_B Field              */

/*! @name GC1 - Gain Control 1 Register */
#define ADC_GC1_GAIN0_MASK                       (0x3U)                                              /*!< ADC0_GC1.GAIN0 Mask                     */
#define ADC_GC1_GAIN0_SHIFT                      (0U)                                                /*!< ADC0_GC1.GAIN0 Position                 */
#define ADC_GC1_GAIN0(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_GC1_GAIN0_SHIFT))&ADC_GC1_GAIN0_MASK) /*!< ADC0_GC1.GAIN0 Field                    */
#define ADC_GC1_GAIN1_MASK                       (0xCU)                                              /*!< ADC0_GC1.GAIN1 Mask                     */
#define ADC_GC1_GAIN1_SHIFT                      (2U)                                                /*!< ADC0_GC1.GAIN1 Position                 */
#define ADC_GC1_GAIN1(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_GC1_GAIN1_SHIFT))&ADC_GC1_GAIN1_MASK) /*!< ADC0_GC1.GAIN1 Field                    */
#define ADC_GC1_GAIN2_MASK                       (0x30U)                                             /*!< ADC0_GC1.GAIN2 Mask                     */
#define ADC_GC1_GAIN2_SHIFT                      (4U)                                                /*!< ADC0_GC1.GAIN2 Position                 */
#define ADC_GC1_GAIN2(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_GC1_GAIN2_SHIFT))&ADC_GC1_GAIN2_MASK) /*!< ADC0_GC1.GAIN2 Field                    */
#define ADC_GC1_GAIN3_MASK                       (0xC0U)                                             /*!< ADC0_GC1.GAIN3 Mask                     */
#define ADC_GC1_GAIN3_SHIFT                      (6U)                                                /*!< ADC0_GC1.GAIN3 Position                 */
#define ADC_GC1_GAIN3(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_GC1_GAIN3_SHIFT))&ADC_GC1_GAIN3_MASK) /*!< ADC0_GC1.GAIN3 Field                    */
#define ADC_GC1_GAIN4_MASK                       (0x300U)                                            /*!< ADC0_GC1.GAIN4 Mask                     */
#define ADC_GC1_GAIN4_SHIFT                      (8U)                                                /*!< ADC0_GC1.GAIN4 Position                 */
#define ADC_GC1_GAIN4(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_GC1_GAIN4_SHIFT))&ADC_GC1_GAIN4_MASK) /*!< ADC0_GC1.GAIN4 Field                    */
#define ADC_GC1_GAIN5_MASK                       (0xC00U)                                            /*!< ADC0_GC1.GAIN5 Mask                     */
#define ADC_GC1_GAIN5_SHIFT                      (10U)                                               /*!< ADC0_GC1.GAIN5 Position                 */
#define ADC_GC1_GAIN5(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_GC1_GAIN5_SHIFT))&ADC_GC1_GAIN5_MASK) /*!< ADC0_GC1.GAIN5 Field                    */
#define ADC_GC1_GAIN6_MASK                       (0x3000U)                                           /*!< ADC0_GC1.GAIN6 Mask                     */
#define ADC_GC1_GAIN6_SHIFT                      (12U)                                               /*!< ADC0_GC1.GAIN6 Position                 */
#define ADC_GC1_GAIN6(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_GC1_GAIN6_SHIFT))&ADC_GC1_GAIN6_MASK) /*!< ADC0_GC1.GAIN6 Field                    */
#define ADC_GC1_GAIN7_MASK                       (0xC000U)                                           /*!< ADC0_GC1.GAIN7 Mask                     */
#define ADC_GC1_GAIN7_SHIFT                      (14U)                                               /*!< ADC0_GC1.GAIN7 Position                 */
#define ADC_GC1_GAIN7(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_GC1_GAIN7_SHIFT))&ADC_GC1_GAIN7_MASK) /*!< ADC0_GC1.GAIN7 Field                    */

/*! @name GC2 - Gain Control 2 Register */
#define ADC_GC2_GAIN8_MASK                       (0x3U)                                              /*!< ADC0_GC2.GAIN8 Mask                     */
#define ADC_GC2_GAIN8_SHIFT                      (0U)                                                /*!< ADC0_GC2.GAIN8 Position                 */
#define ADC_GC2_GAIN8(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_GC2_GAIN8_SHIFT))&ADC_GC2_GAIN8_MASK) /*!< ADC0_GC2.GAIN8 Field                    */
#define ADC_GC2_GAIN9_MASK                       (0xCU)                                              /*!< ADC0_GC2.GAIN9 Mask                     */
#define ADC_GC2_GAIN9_SHIFT                      (2U)                                                /*!< ADC0_GC2.GAIN9 Position                 */
#define ADC_GC2_GAIN9(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_GC2_GAIN9_SHIFT))&ADC_GC2_GAIN9_MASK) /*!< ADC0_GC2.GAIN9 Field                    */
#define ADC_GC2_GAIN10_MASK                      (0x30U)                                             /*!< ADC0_GC2.GAIN10 Mask                    */
#define ADC_GC2_GAIN10_SHIFT                     (4U)                                                /*!< ADC0_GC2.GAIN10 Position                */
#define ADC_GC2_GAIN10(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_GC2_GAIN10_SHIFT))&ADC_GC2_GAIN10_MASK) /*!< ADC0_GC2.GAIN10 Field                   */
#define ADC_GC2_GAIN11_MASK                      (0xC0U)                                             /*!< ADC0_GC2.GAIN11 Mask                    */
#define ADC_GC2_GAIN11_SHIFT                     (6U)                                                /*!< ADC0_GC2.GAIN11 Position                */
#define ADC_GC2_GAIN11(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_GC2_GAIN11_SHIFT))&ADC_GC2_GAIN11_MASK) /*!< ADC0_GC2.GAIN11 Field                   */
#define ADC_GC2_GAIN12_MASK                      (0x300U)                                            /*!< ADC0_GC2.GAIN12 Mask                    */
#define ADC_GC2_GAIN12_SHIFT                     (8U)                                                /*!< ADC0_GC2.GAIN12 Position                */
#define ADC_GC2_GAIN12(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_GC2_GAIN12_SHIFT))&ADC_GC2_GAIN12_MASK) /*!< ADC0_GC2.GAIN12 Field                   */
#define ADC_GC2_GAIN13_MASK                      (0xC00U)                                            /*!< ADC0_GC2.GAIN13 Mask                    */
#define ADC_GC2_GAIN13_SHIFT                     (10U)                                               /*!< ADC0_GC2.GAIN13 Position                */
#define ADC_GC2_GAIN13(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_GC2_GAIN13_SHIFT))&ADC_GC2_GAIN13_MASK) /*!< ADC0_GC2.GAIN13 Field                   */
#define ADC_GC2_GAIN14_MASK                      (0x3000U)                                           /*!< ADC0_GC2.GAIN14 Mask                    */
#define ADC_GC2_GAIN14_SHIFT                     (12U)                                               /*!< ADC0_GC2.GAIN14 Position                */
#define ADC_GC2_GAIN14(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_GC2_GAIN14_SHIFT))&ADC_GC2_GAIN14_MASK) /*!< ADC0_GC2.GAIN14 Field                   */
#define ADC_GC2_GAIN15_MASK                      (0xC000U)                                           /*!< ADC0_GC2.GAIN15 Mask                    */
#define ADC_GC2_GAIN15_SHIFT                     (14U)                                               /*!< ADC0_GC2.GAIN15 Position                */
#define ADC_GC2_GAIN15(x)                        (((uint16_t)(((uint16_t)(x))<<ADC_GC2_GAIN15_SHIFT))&ADC_GC2_GAIN15_MASK) /*!< ADC0_GC2.GAIN15 Field                   */

/*! @name SCTRL - ADC Scan Control Register */
#define ADC_SCTRL_SC_MASK                        (0xFFFFU)                                           /*!< ADC0_SCTRL.SC Mask                      */
#define ADC_SCTRL_SC_SHIFT                       (0U)                                                /*!< ADC0_SCTRL.SC Position                  */
#define ADC_SCTRL_SC(x)                          (((uint16_t)(((uint16_t)(x))<<ADC_SCTRL_SC_SHIFT))&ADC_SCTRL_SC_MASK) /*!< ADC0_SCTRL.SC Field                     */

/*! @name PWR2 - ADC Power Control Register */
#define ADC_PWR2_SPEEDA_MASK                     (0x3U)                                              /*!< ADC0_PWR2.SPEEDA Mask                   */
#define ADC_PWR2_SPEEDA_SHIFT                    (0U)                                                /*!< ADC0_PWR2.SPEEDA Position               */
#define ADC_PWR2_SPEEDA(x)                       (((uint16_t)(((uint16_t)(x))<<ADC_PWR2_SPEEDA_SHIFT))&ADC_PWR2_SPEEDA_MASK) /*!< ADC0_PWR2.SPEEDA Field                  */
#define ADC_PWR2_SPEEDB_MASK                     (0xCU)                                              /*!< ADC0_PWR2.SPEEDB Mask                   */
#define ADC_PWR2_SPEEDB_SHIFT                    (2U)                                                /*!< ADC0_PWR2.SPEEDB Position               */
#define ADC_PWR2_SPEEDB(x)                       (((uint16_t)(((uint16_t)(x))<<ADC_PWR2_SPEEDB_SHIFT))&ADC_PWR2_SPEEDB_MASK) /*!< ADC0_PWR2.SPEEDB Field                  */
#define ADC_PWR2_DIV1_MASK                       (0x3F00U)                                           /*!< ADC0_PWR2.DIV1 Mask                     */
#define ADC_PWR2_DIV1_SHIFT                      (8U)                                                /*!< ADC0_PWR2.DIV1 Position                 */
#define ADC_PWR2_DIV1(x)                         (((uint16_t)(((uint16_t)(x))<<ADC_PWR2_DIV1_SHIFT))&ADC_PWR2_DIV1_MASK) /*!< ADC0_PWR2.DIV1 Field                    */

/*! @name CTRL3 - ADC Control Register 3 */
#define ADC_CTRL3_SCNT0_MASK                     (0x7U)                                              /*!< ADC0_CTRL3.SCNT0 Mask                   */
#define ADC_CTRL3_SCNT0_SHIFT                    (0U)                                                /*!< ADC0_CTRL3.SCNT0 Position               */
#define ADC_CTRL3_SCNT0(x)                       (((uint16_t)(((uint16_t)(x))<<ADC_CTRL3_SCNT0_SHIFT))&ADC_CTRL3_SCNT0_MASK) /*!< ADC0_CTRL3.SCNT0 Field                  */
#define ADC_CTRL3_SCNT1_MASK                     (0x38U)                                             /*!< ADC0_CTRL3.SCNT1 Mask                   */
#define ADC_CTRL3_SCNT1_SHIFT                    (3U)                                                /*!< ADC0_CTRL3.SCNT1 Position               */
#define ADC_CTRL3_SCNT1(x)                       (((uint16_t)(((uint16_t)(x))<<ADC_CTRL3_SCNT1_SHIFT))&ADC_CTRL3_SCNT1_MASK) /*!< ADC0_CTRL3.SCNT1 Field                  */
#define ADC_CTRL3_DMASRC_MASK                    (0x40U)                                             /*!< ADC0_CTRL3.DMASRC Mask                  */
#define ADC_CTRL3_DMASRC_SHIFT                   (6U)                                                /*!< ADC0_CTRL3.DMASRC Position              */
#define ADC_CTRL3_DMASRC(x)                      (((uint16_t)(((uint16_t)(x))<<ADC_CTRL3_DMASRC_SHIFT))&ADC_CTRL3_DMASRC_MASK) /*!< ADC0_CTRL3.DMASRC Field                 */

/*! @name SCHLTEN - ADC Scan Interrupt Enable Register */
#define ADC_SCHLTEN_SCHLTEN_MASK                 (0xFFFFU)                                           /*!< ADC0_SCHLTEN.SCHLTEN Mask               */
#define ADC_SCHLTEN_SCHLTEN_SHIFT                (0U)                                                /*!< ADC0_SCHLTEN.SCHLTEN Position           */
#define ADC_SCHLTEN_SCHLTEN(x)                   (((uint16_t)(((uint16_t)(x))<<ADC_SCHLTEN_SCHLTEN_SHIFT))&ADC_SCHLTEN_SCHLTEN_MASK) /*!< ADC0_SCHLTEN.SCHLTEN Field              */
/**
 * @} */ /* End group ADC_Register_Masks_GROUP 
 */

/* ADC0 - Peripheral instance base addresses */
#define ADC0_BasePtr                   0x4005C000UL //!< Peripheral base address
#define ADC0                           ((ADC_Type *) ADC0_BasePtr) //!< Freescale base pointer
#define ADC0_BASE_PTR                  (ADC0) //!< Freescale style base pointer
/**
 * @} */ /* End group ADC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup AIPS_Peripheral_access_layer_GROUP AIPS Peripheral Access Layer
* @brief C Struct for AIPS
* @{
*/

/* ================================================================================ */
/* ================           AIPS0 (file:AIPS0_Lite_8Mx16P)       ================ */
/* ================================================================================ */

/**
 * @brief AIPS-Lite Bridge
 */
/**
* @addtogroup AIPS_structs_GROUP AIPS struct
* @brief Struct for AIPS
* @{
*/
typedef struct AIPS_Type {
   __IO uint32_t  MPRA;                         /**< 0000: Master Privilege Register A                                  */
        uint8_t   RESERVED_0[28];               /**< 0004: 0x1C bytes                                                   */
   __IO uint32_t  PACR[16];                     /**< 0020: Peripheral Access Control Register                           */
} AIPS_Type;

/**
 * @} */ /* End group AIPS_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'AIPS0' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup AIPS_Register_Masks_GROUP AIPS Register Masks
* @brief Register Masks for AIPS
* @{
*/

/*! @name MPRA - Master Privilege Register A */
#define AIPS_MPRA_MPL7_MASK                      (0x1U)                                              /*!< AIPS0_MPRA.MPL7 Mask                    */
#define AIPS_MPRA_MPL7_SHIFT                     (0U)                                                /*!< AIPS0_MPRA.MPL7 Position                */
#define AIPS_MPRA_MPL7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL7_SHIFT))&AIPS_MPRA_MPL7_MASK) /*!< AIPS0_MPRA.MPL7 Field                   */
#define AIPS_MPRA_MTW7_MASK                      (0x2U)                                              /*!< AIPS0_MPRA.MTW7 Mask                    */
#define AIPS_MPRA_MTW7_SHIFT                     (1U)                                                /*!< AIPS0_MPRA.MTW7 Position                */
#define AIPS_MPRA_MTW7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW7_SHIFT))&AIPS_MPRA_MTW7_MASK) /*!< AIPS0_MPRA.MTW7 Field                   */
#define AIPS_MPRA_MTR7_MASK                      (0x4U)                                              /*!< AIPS0_MPRA.MTR7 Mask                    */
#define AIPS_MPRA_MTR7_SHIFT                     (2U)                                                /*!< AIPS0_MPRA.MTR7 Position                */
#define AIPS_MPRA_MTR7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR7_SHIFT))&AIPS_MPRA_MTR7_MASK) /*!< AIPS0_MPRA.MTR7 Field                   */
#define AIPS_MPRA_MPL6_MASK                      (0x10U)                                             /*!< AIPS0_MPRA.MPL6 Mask                    */
#define AIPS_MPRA_MPL6_SHIFT                     (4U)                                                /*!< AIPS0_MPRA.MPL6 Position                */
#define AIPS_MPRA_MPL6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL6_SHIFT))&AIPS_MPRA_MPL6_MASK) /*!< AIPS0_MPRA.MPL6 Field                   */
#define AIPS_MPRA_MTW6_MASK                      (0x20U)                                             /*!< AIPS0_MPRA.MTW6 Mask                    */
#define AIPS_MPRA_MTW6_SHIFT                     (5U)                                                /*!< AIPS0_MPRA.MTW6 Position                */
#define AIPS_MPRA_MTW6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW6_SHIFT))&AIPS_MPRA_MTW6_MASK) /*!< AIPS0_MPRA.MTW6 Field                   */
#define AIPS_MPRA_MTR6_MASK                      (0x40U)                                             /*!< AIPS0_MPRA.MTR6 Mask                    */
#define AIPS_MPRA_MTR6_SHIFT                     (6U)                                                /*!< AIPS0_MPRA.MTR6 Position                */
#define AIPS_MPRA_MTR6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR6_SHIFT))&AIPS_MPRA_MTR6_MASK) /*!< AIPS0_MPRA.MTR6 Field                   */
#define AIPS_MPRA_MPL5_MASK                      (0x100U)                                            /*!< AIPS0_MPRA.MPL5 Mask                    */
#define AIPS_MPRA_MPL5_SHIFT                     (8U)                                                /*!< AIPS0_MPRA.MPL5 Position                */
#define AIPS_MPRA_MPL5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL5_SHIFT))&AIPS_MPRA_MPL5_MASK) /*!< AIPS0_MPRA.MPL5 Field                   */
#define AIPS_MPRA_MTW5_MASK                      (0x200U)                                            /*!< AIPS0_MPRA.MTW5 Mask                    */
#define AIPS_MPRA_MTW5_SHIFT                     (9U)                                                /*!< AIPS0_MPRA.MTW5 Position                */
#define AIPS_MPRA_MTW5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW5_SHIFT))&AIPS_MPRA_MTW5_MASK) /*!< AIPS0_MPRA.MTW5 Field                   */
#define AIPS_MPRA_MTR5_MASK                      (0x400U)                                            /*!< AIPS0_MPRA.MTR5 Mask                    */
#define AIPS_MPRA_MTR5_SHIFT                     (10U)                                               /*!< AIPS0_MPRA.MTR5 Position                */
#define AIPS_MPRA_MTR5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR5_SHIFT))&AIPS_MPRA_MTR5_MASK) /*!< AIPS0_MPRA.MTR5 Field                   */
#define AIPS_MPRA_MPL4_MASK                      (0x1000U)                                           /*!< AIPS0_MPRA.MPL4 Mask                    */
#define AIPS_MPRA_MPL4_SHIFT                     (12U)                                               /*!< AIPS0_MPRA.MPL4 Position                */
#define AIPS_MPRA_MPL4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL4_SHIFT))&AIPS_MPRA_MPL4_MASK) /*!< AIPS0_MPRA.MPL4 Field                   */
#define AIPS_MPRA_MTW4_MASK                      (0x2000U)                                           /*!< AIPS0_MPRA.MTW4 Mask                    */
#define AIPS_MPRA_MTW4_SHIFT                     (13U)                                               /*!< AIPS0_MPRA.MTW4 Position                */
#define AIPS_MPRA_MTW4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW4_SHIFT))&AIPS_MPRA_MTW4_MASK) /*!< AIPS0_MPRA.MTW4 Field                   */
#define AIPS_MPRA_MTR4_MASK                      (0x4000U)                                           /*!< AIPS0_MPRA.MTR4 Mask                    */
#define AIPS_MPRA_MTR4_SHIFT                     (14U)                                               /*!< AIPS0_MPRA.MTR4 Position                */
#define AIPS_MPRA_MTR4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR4_SHIFT))&AIPS_MPRA_MTR4_MASK) /*!< AIPS0_MPRA.MTR4 Field                   */
#define AIPS_MPRA_MPL3_MASK                      (0x10000U)                                          /*!< AIPS0_MPRA.MPL3 Mask                    */
#define AIPS_MPRA_MPL3_SHIFT                     (16U)                                               /*!< AIPS0_MPRA.MPL3 Position                */
#define AIPS_MPRA_MPL3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL3_SHIFT))&AIPS_MPRA_MPL3_MASK) /*!< AIPS0_MPRA.MPL3 Field                   */
#define AIPS_MPRA_MTW3_MASK                      (0x20000U)                                          /*!< AIPS0_MPRA.MTW3 Mask                    */
#define AIPS_MPRA_MTW3_SHIFT                     (17U)                                               /*!< AIPS0_MPRA.MTW3 Position                */
#define AIPS_MPRA_MTW3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW3_SHIFT))&AIPS_MPRA_MTW3_MASK) /*!< AIPS0_MPRA.MTW3 Field                   */
#define AIPS_MPRA_MTR3_MASK                      (0x40000U)                                          /*!< AIPS0_MPRA.MTR3 Mask                    */
#define AIPS_MPRA_MTR3_SHIFT                     (18U)                                               /*!< AIPS0_MPRA.MTR3 Position                */
#define AIPS_MPRA_MTR3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR3_SHIFT))&AIPS_MPRA_MTR3_MASK) /*!< AIPS0_MPRA.MTR3 Field                   */
#define AIPS_MPRA_MPL2_MASK                      (0x100000U)                                         /*!< AIPS0_MPRA.MPL2 Mask                    */
#define AIPS_MPRA_MPL2_SHIFT                     (20U)                                               /*!< AIPS0_MPRA.MPL2 Position                */
#define AIPS_MPRA_MPL2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL2_SHIFT))&AIPS_MPRA_MPL2_MASK) /*!< AIPS0_MPRA.MPL2 Field                   */
#define AIPS_MPRA_MTW2_MASK                      (0x200000U)                                         /*!< AIPS0_MPRA.MTW2 Mask                    */
#define AIPS_MPRA_MTW2_SHIFT                     (21U)                                               /*!< AIPS0_MPRA.MTW2 Position                */
#define AIPS_MPRA_MTW2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW2_SHIFT))&AIPS_MPRA_MTW2_MASK) /*!< AIPS0_MPRA.MTW2 Field                   */
#define AIPS_MPRA_MTR2_MASK                      (0x400000U)                                         /*!< AIPS0_MPRA.MTR2 Mask                    */
#define AIPS_MPRA_MTR2_SHIFT                     (22U)                                               /*!< AIPS0_MPRA.MTR2 Position                */
#define AIPS_MPRA_MTR2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR2_SHIFT))&AIPS_MPRA_MTR2_MASK) /*!< AIPS0_MPRA.MTR2 Field                   */
#define AIPS_MPRA_MPL1_MASK                      (0x1000000U)                                        /*!< AIPS0_MPRA.MPL1 Mask                    */
#define AIPS_MPRA_MPL1_SHIFT                     (24U)                                               /*!< AIPS0_MPRA.MPL1 Position                */
#define AIPS_MPRA_MPL1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL1_SHIFT))&AIPS_MPRA_MPL1_MASK) /*!< AIPS0_MPRA.MPL1 Field                   */
#define AIPS_MPRA_MTW1_MASK                      (0x2000000U)                                        /*!< AIPS0_MPRA.MTW1 Mask                    */
#define AIPS_MPRA_MTW1_SHIFT                     (25U)                                               /*!< AIPS0_MPRA.MTW1 Position                */
#define AIPS_MPRA_MTW1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW1_SHIFT))&AIPS_MPRA_MTW1_MASK) /*!< AIPS0_MPRA.MTW1 Field                   */
#define AIPS_MPRA_MTR1_MASK                      (0x4000000U)                                        /*!< AIPS0_MPRA.MTR1 Mask                    */
#define AIPS_MPRA_MTR1_SHIFT                     (26U)                                               /*!< AIPS0_MPRA.MTR1 Position                */
#define AIPS_MPRA_MTR1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR1_SHIFT))&AIPS_MPRA_MTR1_MASK) /*!< AIPS0_MPRA.MTR1 Field                   */
#define AIPS_MPRA_MPL0_MASK                      (0x10000000U)                                       /*!< AIPS0_MPRA.MPL0 Mask                    */
#define AIPS_MPRA_MPL0_SHIFT                     (28U)                                               /*!< AIPS0_MPRA.MPL0 Position                */
#define AIPS_MPRA_MPL0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL0_SHIFT))&AIPS_MPRA_MPL0_MASK) /*!< AIPS0_MPRA.MPL0 Field                   */
#define AIPS_MPRA_MTW0_MASK                      (0x20000000U)                                       /*!< AIPS0_MPRA.MTW0 Mask                    */
#define AIPS_MPRA_MTW0_SHIFT                     (29U)                                               /*!< AIPS0_MPRA.MTW0 Position                */
#define AIPS_MPRA_MTW0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW0_SHIFT))&AIPS_MPRA_MTW0_MASK) /*!< AIPS0_MPRA.MTW0 Field                   */
#define AIPS_MPRA_MTR0_MASK                      (0x40000000U)                                       /*!< AIPS0_MPRA.MTR0 Mask                    */
#define AIPS_MPRA_MTR0_SHIFT                     (30U)                                               /*!< AIPS0_MPRA.MTR0 Position                */
#define AIPS_MPRA_MTR0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR0_SHIFT))&AIPS_MPRA_MTR0_MASK) /*!< AIPS0_MPRA.MTR0 Field                   */

/*! @name PACR - Peripheral Access Control Register %s */
#define AIPS_PACR_TP7_MASK                       (0x1U)                                              /*!< AIPS0_PACR.TP7 Mask                     */
#define AIPS_PACR_TP7_SHIFT                      (0U)                                                /*!< AIPS0_PACR.TP7 Position                 */
#define AIPS_PACR_TP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP7_SHIFT))&AIPS_PACR_TP7_MASK) /*!< AIPS0_PACR.TP7 Field                    */
#define AIPS_PACR_WP7_MASK                       (0x2U)                                              /*!< AIPS0_PACR.WP7 Mask                     */
#define AIPS_PACR_WP7_SHIFT                      (1U)                                                /*!< AIPS0_PACR.WP7 Position                 */
#define AIPS_PACR_WP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP7_SHIFT))&AIPS_PACR_WP7_MASK) /*!< AIPS0_PACR.WP7 Field                    */
#define AIPS_PACR_SP7_MASK                       (0x4U)                                              /*!< AIPS0_PACR.SP7 Mask                     */
#define AIPS_PACR_SP7_SHIFT                      (2U)                                                /*!< AIPS0_PACR.SP7 Position                 */
#define AIPS_PACR_SP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP7_SHIFT))&AIPS_PACR_SP7_MASK) /*!< AIPS0_PACR.SP7 Field                    */
#define AIPS_PACR_TP6_MASK                       (0x10U)                                             /*!< AIPS0_PACR.TP6 Mask                     */
#define AIPS_PACR_TP6_SHIFT                      (4U)                                                /*!< AIPS0_PACR.TP6 Position                 */
#define AIPS_PACR_TP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP6_SHIFT))&AIPS_PACR_TP6_MASK) /*!< AIPS0_PACR.TP6 Field                    */
#define AIPS_PACR_WP6_MASK                       (0x20U)                                             /*!< AIPS0_PACR.WP6 Mask                     */
#define AIPS_PACR_WP6_SHIFT                      (5U)                                                /*!< AIPS0_PACR.WP6 Position                 */
#define AIPS_PACR_WP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP6_SHIFT))&AIPS_PACR_WP6_MASK) /*!< AIPS0_PACR.WP6 Field                    */
#define AIPS_PACR_SP6_MASK                       (0x40U)                                             /*!< AIPS0_PACR.SP6 Mask                     */
#define AIPS_PACR_SP6_SHIFT                      (6U)                                                /*!< AIPS0_PACR.SP6 Position                 */
#define AIPS_PACR_SP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP6_SHIFT))&AIPS_PACR_SP6_MASK) /*!< AIPS0_PACR.SP6 Field                    */
#define AIPS_PACR_TP5_MASK                       (0x100U)                                            /*!< AIPS0_PACR.TP5 Mask                     */
#define AIPS_PACR_TP5_SHIFT                      (8U)                                                /*!< AIPS0_PACR.TP5 Position                 */
#define AIPS_PACR_TP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP5_SHIFT))&AIPS_PACR_TP5_MASK) /*!< AIPS0_PACR.TP5 Field                    */
#define AIPS_PACR_WP5_MASK                       (0x200U)                                            /*!< AIPS0_PACR.WP5 Mask                     */
#define AIPS_PACR_WP5_SHIFT                      (9U)                                                /*!< AIPS0_PACR.WP5 Position                 */
#define AIPS_PACR_WP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP5_SHIFT))&AIPS_PACR_WP5_MASK) /*!< AIPS0_PACR.WP5 Field                    */
#define AIPS_PACR_SP5_MASK                       (0x400U)                                            /*!< AIPS0_PACR.SP5 Mask                     */
#define AIPS_PACR_SP5_SHIFT                      (10U)                                               /*!< AIPS0_PACR.SP5 Position                 */
#define AIPS_PACR_SP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP5_SHIFT))&AIPS_PACR_SP5_MASK) /*!< AIPS0_PACR.SP5 Field                    */
#define AIPS_PACR_TP4_MASK                       (0x1000U)                                           /*!< AIPS0_PACR.TP4 Mask                     */
#define AIPS_PACR_TP4_SHIFT                      (12U)                                               /*!< AIPS0_PACR.TP4 Position                 */
#define AIPS_PACR_TP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP4_SHIFT))&AIPS_PACR_TP4_MASK) /*!< AIPS0_PACR.TP4 Field                    */
#define AIPS_PACR_WP4_MASK                       (0x2000U)                                           /*!< AIPS0_PACR.WP4 Mask                     */
#define AIPS_PACR_WP4_SHIFT                      (13U)                                               /*!< AIPS0_PACR.WP4 Position                 */
#define AIPS_PACR_WP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP4_SHIFT))&AIPS_PACR_WP4_MASK) /*!< AIPS0_PACR.WP4 Field                    */
#define AIPS_PACR_SP4_MASK                       (0x4000U)                                           /*!< AIPS0_PACR.SP4 Mask                     */
#define AIPS_PACR_SP4_SHIFT                      (14U)                                               /*!< AIPS0_PACR.SP4 Position                 */
#define AIPS_PACR_SP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP4_SHIFT))&AIPS_PACR_SP4_MASK) /*!< AIPS0_PACR.SP4 Field                    */
#define AIPS_PACR_TP3_MASK                       (0x10000U)                                          /*!< AIPS0_PACR.TP3 Mask                     */
#define AIPS_PACR_TP3_SHIFT                      (16U)                                               /*!< AIPS0_PACR.TP3 Position                 */
#define AIPS_PACR_TP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP3_SHIFT))&AIPS_PACR_TP3_MASK) /*!< AIPS0_PACR.TP3 Field                    */
#define AIPS_PACR_WP3_MASK                       (0x20000U)                                          /*!< AIPS0_PACR.WP3 Mask                     */
#define AIPS_PACR_WP3_SHIFT                      (17U)                                               /*!< AIPS0_PACR.WP3 Position                 */
#define AIPS_PACR_WP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP3_SHIFT))&AIPS_PACR_WP3_MASK) /*!< AIPS0_PACR.WP3 Field                    */
#define AIPS_PACR_SP3_MASK                       (0x40000U)                                          /*!< AIPS0_PACR.SP3 Mask                     */
#define AIPS_PACR_SP3_SHIFT                      (18U)                                               /*!< AIPS0_PACR.SP3 Position                 */
#define AIPS_PACR_SP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP3_SHIFT))&AIPS_PACR_SP3_MASK) /*!< AIPS0_PACR.SP3 Field                    */
#define AIPS_PACR_TP2_MASK                       (0x100000U)                                         /*!< AIPS0_PACR.TP2 Mask                     */
#define AIPS_PACR_TP2_SHIFT                      (20U)                                               /*!< AIPS0_PACR.TP2 Position                 */
#define AIPS_PACR_TP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP2_SHIFT))&AIPS_PACR_TP2_MASK) /*!< AIPS0_PACR.TP2 Field                    */
#define AIPS_PACR_WP2_MASK                       (0x200000U)                                         /*!< AIPS0_PACR.WP2 Mask                     */
#define AIPS_PACR_WP2_SHIFT                      (21U)                                               /*!< AIPS0_PACR.WP2 Position                 */
#define AIPS_PACR_WP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP2_SHIFT))&AIPS_PACR_WP2_MASK) /*!< AIPS0_PACR.WP2 Field                    */
#define AIPS_PACR_SP2_MASK                       (0x400000U)                                         /*!< AIPS0_PACR.SP2 Mask                     */
#define AIPS_PACR_SP2_SHIFT                      (22U)                                               /*!< AIPS0_PACR.SP2 Position                 */
#define AIPS_PACR_SP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP2_SHIFT))&AIPS_PACR_SP2_MASK) /*!< AIPS0_PACR.SP2 Field                    */
#define AIPS_PACR_TP1_MASK                       (0x1000000U)                                        /*!< AIPS0_PACR.TP1 Mask                     */
#define AIPS_PACR_TP1_SHIFT                      (24U)                                               /*!< AIPS0_PACR.TP1 Position                 */
#define AIPS_PACR_TP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP1_SHIFT))&AIPS_PACR_TP1_MASK) /*!< AIPS0_PACR.TP1 Field                    */
#define AIPS_PACR_WP1_MASK                       (0x2000000U)                                        /*!< AIPS0_PACR.WP1 Mask                     */
#define AIPS_PACR_WP1_SHIFT                      (25U)                                               /*!< AIPS0_PACR.WP1 Position                 */
#define AIPS_PACR_WP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP1_SHIFT))&AIPS_PACR_WP1_MASK) /*!< AIPS0_PACR.WP1 Field                    */
#define AIPS_PACR_SP1_MASK                       (0x4000000U)                                        /*!< AIPS0_PACR.SP1 Mask                     */
#define AIPS_PACR_SP1_SHIFT                      (26U)                                               /*!< AIPS0_PACR.SP1 Position                 */
#define AIPS_PACR_SP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP1_SHIFT))&AIPS_PACR_SP1_MASK) /*!< AIPS0_PACR.SP1 Field                    */
#define AIPS_PACR_TP0_MASK                       (0x10000000U)                                       /*!< AIPS0_PACR.TP0 Mask                     */
#define AIPS_PACR_TP0_SHIFT                      (28U)                                               /*!< AIPS0_PACR.TP0 Position                 */
#define AIPS_PACR_TP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP0_SHIFT))&AIPS_PACR_TP0_MASK) /*!< AIPS0_PACR.TP0 Field                    */
#define AIPS_PACR_WP0_MASK                       (0x20000000U)                                       /*!< AIPS0_PACR.WP0 Mask                     */
#define AIPS_PACR_WP0_SHIFT                      (29U)                                               /*!< AIPS0_PACR.WP0 Position                 */
#define AIPS_PACR_WP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP0_SHIFT))&AIPS_PACR_WP0_MASK) /*!< AIPS0_PACR.WP0 Field                    */
#define AIPS_PACR_SP0_MASK                       (0x40000000U)                                       /*!< AIPS0_PACR.SP0 Mask                     */
#define AIPS_PACR_SP0_SHIFT                      (30U)                                               /*!< AIPS0_PACR.SP0 Position                 */
#define AIPS_PACR_SP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP0_SHIFT))&AIPS_PACR_SP0_MASK) /*!< AIPS0_PACR.SP0 Field                    */
/**
 * @} */ /* End group AIPS_Register_Masks_GROUP 
 */

/* AIPS0 - Peripheral instance base addresses */
#define AIPS0_BasePtr                  0x40000000UL //!< Peripheral base address
#define AIPS0                          ((AIPS_Type *) AIPS0_BasePtr) //!< Freescale base pointer
#define AIPS0_BASE_PTR                 (AIPS0) //!< Freescale style base pointer
/**
 * @} */ /* End group AIPS_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup AOI_Peripheral_access_layer_GROUP AOI Peripheral Access Layer
* @brief C Struct for AOI
* @{
*/

/* ================================================================================ */
/* ================           AOI (file:AOI_0)                     ================ */
/* ================================================================================ */

/**
 * @brief AND/OR/INVERT module
 */
/**
* @addtogroup AOI_structs_GROUP AOI struct
* @brief Struct for AOI
* @{
*/
typedef struct AOI_Type {
   __IO uint16_t  BFCRT010;                     /**< 0000: Boolean Function Term 0 and 1 Configuration Register for EVENTn */
   __IO uint16_t  BFCRT230;                     /**< 0002: Boolean Function Term 2 and 3 Configuration Register for EVENTn */
   __IO uint16_t  BFCRT011;                     /**< 0004: Boolean Function Term 0 and 1 Configuration Register for EVENTn */
   __IO uint16_t  BFCRT231;                     /**< 0006: Boolean Function Term 2 and 3 Configuration Register for EVENTn */
   __IO uint16_t  BFCRT012;                     /**< 0008: Boolean Function Term 0 and 1 Configuration Register for EVENTn */
   __IO uint16_t  BFCRT232;                     /**< 000A: Boolean Function Term 2 and 3 Configuration Register for EVENTn */
   __IO uint16_t  BFCRT013;                     /**< 000C: Boolean Function Term 0 and 1 Configuration Register for EVENTn */
   __IO uint16_t  BFCRT233;                     /**< 000E: Boolean Function Term 2 and 3 Configuration Register for EVENTn */
} AOI_Type;

/**
 * @} */ /* End group AOI_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'AOI' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup AOI_Register_Masks_GROUP AOI Register Masks
* @brief Register Masks for AOI
* @{
*/

/*! @name BFCRT010 - Boolean Function Term 0 and 1 Configuration Register for EVENTn */
#define AOI_BFCRT010_PT1_DC_MASK                 (0x3U)                                              /*!< AOI_BFCRT010.PT1_DC Mask                */
#define AOI_BFCRT010_PT1_DC_SHIFT                (0U)                                                /*!< AOI_BFCRT010.PT1_DC Position            */
#define AOI_BFCRT010_PT1_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT010_PT1_DC_SHIFT))&AOI_BFCRT010_PT1_DC_MASK) /*!< AOI_BFCRT010.PT1_DC Field               */
#define AOI_BFCRT010_PT1_CC_MASK                 (0xCU)                                              /*!< AOI_BFCRT010.PT1_CC Mask                */
#define AOI_BFCRT010_PT1_CC_SHIFT                (2U)                                                /*!< AOI_BFCRT010.PT1_CC Position            */
#define AOI_BFCRT010_PT1_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT010_PT1_CC_SHIFT))&AOI_BFCRT010_PT1_CC_MASK) /*!< AOI_BFCRT010.PT1_CC Field               */
#define AOI_BFCRT010_PT1_BC_MASK                 (0x30U)                                             /*!< AOI_BFCRT010.PT1_BC Mask                */
#define AOI_BFCRT010_PT1_BC_SHIFT                (4U)                                                /*!< AOI_BFCRT010.PT1_BC Position            */
#define AOI_BFCRT010_PT1_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT010_PT1_BC_SHIFT))&AOI_BFCRT010_PT1_BC_MASK) /*!< AOI_BFCRT010.PT1_BC Field               */
#define AOI_BFCRT010_PT1_AC_MASK                 (0xC0U)                                             /*!< AOI_BFCRT010.PT1_AC Mask                */
#define AOI_BFCRT010_PT1_AC_SHIFT                (6U)                                                /*!< AOI_BFCRT010.PT1_AC Position            */
#define AOI_BFCRT010_PT1_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT010_PT1_AC_SHIFT))&AOI_BFCRT010_PT1_AC_MASK) /*!< AOI_BFCRT010.PT1_AC Field               */
#define AOI_BFCRT010_PT0_DC_MASK                 (0x300U)                                            /*!< AOI_BFCRT010.PT0_DC Mask                */
#define AOI_BFCRT010_PT0_DC_SHIFT                (8U)                                                /*!< AOI_BFCRT010.PT0_DC Position            */
#define AOI_BFCRT010_PT0_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT010_PT0_DC_SHIFT))&AOI_BFCRT010_PT0_DC_MASK) /*!< AOI_BFCRT010.PT0_DC Field               */
#define AOI_BFCRT010_PT0_CC_MASK                 (0xC00U)                                            /*!< AOI_BFCRT010.PT0_CC Mask                */
#define AOI_BFCRT010_PT0_CC_SHIFT                (10U)                                               /*!< AOI_BFCRT010.PT0_CC Position            */
#define AOI_BFCRT010_PT0_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT010_PT0_CC_SHIFT))&AOI_BFCRT010_PT0_CC_MASK) /*!< AOI_BFCRT010.PT0_CC Field               */
#define AOI_BFCRT010_PT0_BC_MASK                 (0x3000U)                                           /*!< AOI_BFCRT010.PT0_BC Mask                */
#define AOI_BFCRT010_PT0_BC_SHIFT                (12U)                                               /*!< AOI_BFCRT010.PT0_BC Position            */
#define AOI_BFCRT010_PT0_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT010_PT0_BC_SHIFT))&AOI_BFCRT010_PT0_BC_MASK) /*!< AOI_BFCRT010.PT0_BC Field               */
#define AOI_BFCRT010_PT0_AC_MASK                 (0xC000U)                                           /*!< AOI_BFCRT010.PT0_AC Mask                */
#define AOI_BFCRT010_PT0_AC_SHIFT                (14U)                                               /*!< AOI_BFCRT010.PT0_AC Position            */
#define AOI_BFCRT010_PT0_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT010_PT0_AC_SHIFT))&AOI_BFCRT010_PT0_AC_MASK) /*!< AOI_BFCRT010.PT0_AC Field               */

/*! @name BFCRT230 - Boolean Function Term 2 and 3 Configuration Register for EVENTn */
#define AOI_BFCRT230_PT3_DC_MASK                 (0x3U)                                              /*!< AOI_BFCRT230.PT3_DC Mask                */
#define AOI_BFCRT230_PT3_DC_SHIFT                (0U)                                                /*!< AOI_BFCRT230.PT3_DC Position            */
#define AOI_BFCRT230_PT3_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT230_PT3_DC_SHIFT))&AOI_BFCRT230_PT3_DC_MASK) /*!< AOI_BFCRT230.PT3_DC Field               */
#define AOI_BFCRT230_PT3_CC_MASK                 (0xCU)                                              /*!< AOI_BFCRT230.PT3_CC Mask                */
#define AOI_BFCRT230_PT3_CC_SHIFT                (2U)                                                /*!< AOI_BFCRT230.PT3_CC Position            */
#define AOI_BFCRT230_PT3_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT230_PT3_CC_SHIFT))&AOI_BFCRT230_PT3_CC_MASK) /*!< AOI_BFCRT230.PT3_CC Field               */
#define AOI_BFCRT230_PT3_BC_MASK                 (0x30U)                                             /*!< AOI_BFCRT230.PT3_BC Mask                */
#define AOI_BFCRT230_PT3_BC_SHIFT                (4U)                                                /*!< AOI_BFCRT230.PT3_BC Position            */
#define AOI_BFCRT230_PT3_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT230_PT3_BC_SHIFT))&AOI_BFCRT230_PT3_BC_MASK) /*!< AOI_BFCRT230.PT3_BC Field               */
#define AOI_BFCRT230_PT3_AC_MASK                 (0xC0U)                                             /*!< AOI_BFCRT230.PT3_AC Mask                */
#define AOI_BFCRT230_PT3_AC_SHIFT                (6U)                                                /*!< AOI_BFCRT230.PT3_AC Position            */
#define AOI_BFCRT230_PT3_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT230_PT3_AC_SHIFT))&AOI_BFCRT230_PT3_AC_MASK) /*!< AOI_BFCRT230.PT3_AC Field               */
#define AOI_BFCRT230_PT2_DC_MASK                 (0x300U)                                            /*!< AOI_BFCRT230.PT2_DC Mask                */
#define AOI_BFCRT230_PT2_DC_SHIFT                (8U)                                                /*!< AOI_BFCRT230.PT2_DC Position            */
#define AOI_BFCRT230_PT2_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT230_PT2_DC_SHIFT))&AOI_BFCRT230_PT2_DC_MASK) /*!< AOI_BFCRT230.PT2_DC Field               */
#define AOI_BFCRT230_PT2_CC_MASK                 (0xC00U)                                            /*!< AOI_BFCRT230.PT2_CC Mask                */
#define AOI_BFCRT230_PT2_CC_SHIFT                (10U)                                               /*!< AOI_BFCRT230.PT2_CC Position            */
#define AOI_BFCRT230_PT2_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT230_PT2_CC_SHIFT))&AOI_BFCRT230_PT2_CC_MASK) /*!< AOI_BFCRT230.PT2_CC Field               */
#define AOI_BFCRT230_PT2_BC_MASK                 (0x3000U)                                           /*!< AOI_BFCRT230.PT2_BC Mask                */
#define AOI_BFCRT230_PT2_BC_SHIFT                (12U)                                               /*!< AOI_BFCRT230.PT2_BC Position            */
#define AOI_BFCRT230_PT2_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT230_PT2_BC_SHIFT))&AOI_BFCRT230_PT2_BC_MASK) /*!< AOI_BFCRT230.PT2_BC Field               */
#define AOI_BFCRT230_PT2_AC_MASK                 (0xC000U)                                           /*!< AOI_BFCRT230.PT2_AC Mask                */
#define AOI_BFCRT230_PT2_AC_SHIFT                (14U)                                               /*!< AOI_BFCRT230.PT2_AC Position            */
#define AOI_BFCRT230_PT2_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT230_PT2_AC_SHIFT))&AOI_BFCRT230_PT2_AC_MASK) /*!< AOI_BFCRT230.PT2_AC Field               */

/*! @name BFCRT011 - Boolean Function Term 0 and 1 Configuration Register for EVENTn */
#define AOI_BFCRT011_PT1_DC_MASK                 (0x3U)                                              /*!< AOI_BFCRT011.PT1_DC Mask                */
#define AOI_BFCRT011_PT1_DC_SHIFT                (0U)                                                /*!< AOI_BFCRT011.PT1_DC Position            */
#define AOI_BFCRT011_PT1_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT011_PT1_DC_SHIFT))&AOI_BFCRT011_PT1_DC_MASK) /*!< AOI_BFCRT011.PT1_DC Field               */
#define AOI_BFCRT011_PT1_CC_MASK                 (0xCU)                                              /*!< AOI_BFCRT011.PT1_CC Mask                */
#define AOI_BFCRT011_PT1_CC_SHIFT                (2U)                                                /*!< AOI_BFCRT011.PT1_CC Position            */
#define AOI_BFCRT011_PT1_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT011_PT1_CC_SHIFT))&AOI_BFCRT011_PT1_CC_MASK) /*!< AOI_BFCRT011.PT1_CC Field               */
#define AOI_BFCRT011_PT1_BC_MASK                 (0x30U)                                             /*!< AOI_BFCRT011.PT1_BC Mask                */
#define AOI_BFCRT011_PT1_BC_SHIFT                (4U)                                                /*!< AOI_BFCRT011.PT1_BC Position            */
#define AOI_BFCRT011_PT1_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT011_PT1_BC_SHIFT))&AOI_BFCRT011_PT1_BC_MASK) /*!< AOI_BFCRT011.PT1_BC Field               */
#define AOI_BFCRT011_PT1_AC_MASK                 (0xC0U)                                             /*!< AOI_BFCRT011.PT1_AC Mask                */
#define AOI_BFCRT011_PT1_AC_SHIFT                (6U)                                                /*!< AOI_BFCRT011.PT1_AC Position            */
#define AOI_BFCRT011_PT1_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT011_PT1_AC_SHIFT))&AOI_BFCRT011_PT1_AC_MASK) /*!< AOI_BFCRT011.PT1_AC Field               */
#define AOI_BFCRT011_PT0_DC_MASK                 (0x300U)                                            /*!< AOI_BFCRT011.PT0_DC Mask                */
#define AOI_BFCRT011_PT0_DC_SHIFT                (8U)                                                /*!< AOI_BFCRT011.PT0_DC Position            */
#define AOI_BFCRT011_PT0_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT011_PT0_DC_SHIFT))&AOI_BFCRT011_PT0_DC_MASK) /*!< AOI_BFCRT011.PT0_DC Field               */
#define AOI_BFCRT011_PT0_CC_MASK                 (0xC00U)                                            /*!< AOI_BFCRT011.PT0_CC Mask                */
#define AOI_BFCRT011_PT0_CC_SHIFT                (10U)                                               /*!< AOI_BFCRT011.PT0_CC Position            */
#define AOI_BFCRT011_PT0_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT011_PT0_CC_SHIFT))&AOI_BFCRT011_PT0_CC_MASK) /*!< AOI_BFCRT011.PT0_CC Field               */
#define AOI_BFCRT011_PT0_BC_MASK                 (0x3000U)                                           /*!< AOI_BFCRT011.PT0_BC Mask                */
#define AOI_BFCRT011_PT0_BC_SHIFT                (12U)                                               /*!< AOI_BFCRT011.PT0_BC Position            */
#define AOI_BFCRT011_PT0_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT011_PT0_BC_SHIFT))&AOI_BFCRT011_PT0_BC_MASK) /*!< AOI_BFCRT011.PT0_BC Field               */
#define AOI_BFCRT011_PT0_AC_MASK                 (0xC000U)                                           /*!< AOI_BFCRT011.PT0_AC Mask                */
#define AOI_BFCRT011_PT0_AC_SHIFT                (14U)                                               /*!< AOI_BFCRT011.PT0_AC Position            */
#define AOI_BFCRT011_PT0_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT011_PT0_AC_SHIFT))&AOI_BFCRT011_PT0_AC_MASK) /*!< AOI_BFCRT011.PT0_AC Field               */

/*! @name BFCRT231 - Boolean Function Term 2 and 3 Configuration Register for EVENTn */
#define AOI_BFCRT231_PT3_DC_MASK                 (0x3U)                                              /*!< AOI_BFCRT231.PT3_DC Mask                */
#define AOI_BFCRT231_PT3_DC_SHIFT                (0U)                                                /*!< AOI_BFCRT231.PT3_DC Position            */
#define AOI_BFCRT231_PT3_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT231_PT3_DC_SHIFT))&AOI_BFCRT231_PT3_DC_MASK) /*!< AOI_BFCRT231.PT3_DC Field               */
#define AOI_BFCRT231_PT3_CC_MASK                 (0xCU)                                              /*!< AOI_BFCRT231.PT3_CC Mask                */
#define AOI_BFCRT231_PT3_CC_SHIFT                (2U)                                                /*!< AOI_BFCRT231.PT3_CC Position            */
#define AOI_BFCRT231_PT3_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT231_PT3_CC_SHIFT))&AOI_BFCRT231_PT3_CC_MASK) /*!< AOI_BFCRT231.PT3_CC Field               */
#define AOI_BFCRT231_PT3_BC_MASK                 (0x30U)                                             /*!< AOI_BFCRT231.PT3_BC Mask                */
#define AOI_BFCRT231_PT3_BC_SHIFT                (4U)                                                /*!< AOI_BFCRT231.PT3_BC Position            */
#define AOI_BFCRT231_PT3_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT231_PT3_BC_SHIFT))&AOI_BFCRT231_PT3_BC_MASK) /*!< AOI_BFCRT231.PT3_BC Field               */
#define AOI_BFCRT231_PT3_AC_MASK                 (0xC0U)                                             /*!< AOI_BFCRT231.PT3_AC Mask                */
#define AOI_BFCRT231_PT3_AC_SHIFT                (6U)                                                /*!< AOI_BFCRT231.PT3_AC Position            */
#define AOI_BFCRT231_PT3_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT231_PT3_AC_SHIFT))&AOI_BFCRT231_PT3_AC_MASK) /*!< AOI_BFCRT231.PT3_AC Field               */
#define AOI_BFCRT231_PT2_DC_MASK                 (0x300U)                                            /*!< AOI_BFCRT231.PT2_DC Mask                */
#define AOI_BFCRT231_PT2_DC_SHIFT                (8U)                                                /*!< AOI_BFCRT231.PT2_DC Position            */
#define AOI_BFCRT231_PT2_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT231_PT2_DC_SHIFT))&AOI_BFCRT231_PT2_DC_MASK) /*!< AOI_BFCRT231.PT2_DC Field               */
#define AOI_BFCRT231_PT2_CC_MASK                 (0xC00U)                                            /*!< AOI_BFCRT231.PT2_CC Mask                */
#define AOI_BFCRT231_PT2_CC_SHIFT                (10U)                                               /*!< AOI_BFCRT231.PT2_CC Position            */
#define AOI_BFCRT231_PT2_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT231_PT2_CC_SHIFT))&AOI_BFCRT231_PT2_CC_MASK) /*!< AOI_BFCRT231.PT2_CC Field               */
#define AOI_BFCRT231_PT2_BC_MASK                 (0x3000U)                                           /*!< AOI_BFCRT231.PT2_BC Mask                */
#define AOI_BFCRT231_PT2_BC_SHIFT                (12U)                                               /*!< AOI_BFCRT231.PT2_BC Position            */
#define AOI_BFCRT231_PT2_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT231_PT2_BC_SHIFT))&AOI_BFCRT231_PT2_BC_MASK) /*!< AOI_BFCRT231.PT2_BC Field               */
#define AOI_BFCRT231_PT2_AC_MASK                 (0xC000U)                                           /*!< AOI_BFCRT231.PT2_AC Mask                */
#define AOI_BFCRT231_PT2_AC_SHIFT                (14U)                                               /*!< AOI_BFCRT231.PT2_AC Position            */
#define AOI_BFCRT231_PT2_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT231_PT2_AC_SHIFT))&AOI_BFCRT231_PT2_AC_MASK) /*!< AOI_BFCRT231.PT2_AC Field               */

/*! @name BFCRT012 - Boolean Function Term 0 and 1 Configuration Register for EVENTn */
#define AOI_BFCRT012_PT1_DC_MASK                 (0x3U)                                              /*!< AOI_BFCRT012.PT1_DC Mask                */
#define AOI_BFCRT012_PT1_DC_SHIFT                (0U)                                                /*!< AOI_BFCRT012.PT1_DC Position            */
#define AOI_BFCRT012_PT1_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT012_PT1_DC_SHIFT))&AOI_BFCRT012_PT1_DC_MASK) /*!< AOI_BFCRT012.PT1_DC Field               */
#define AOI_BFCRT012_PT1_CC_MASK                 (0xCU)                                              /*!< AOI_BFCRT012.PT1_CC Mask                */
#define AOI_BFCRT012_PT1_CC_SHIFT                (2U)                                                /*!< AOI_BFCRT012.PT1_CC Position            */
#define AOI_BFCRT012_PT1_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT012_PT1_CC_SHIFT))&AOI_BFCRT012_PT1_CC_MASK) /*!< AOI_BFCRT012.PT1_CC Field               */
#define AOI_BFCRT012_PT1_BC_MASK                 (0x30U)                                             /*!< AOI_BFCRT012.PT1_BC Mask                */
#define AOI_BFCRT012_PT1_BC_SHIFT                (4U)                                                /*!< AOI_BFCRT012.PT1_BC Position            */
#define AOI_BFCRT012_PT1_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT012_PT1_BC_SHIFT))&AOI_BFCRT012_PT1_BC_MASK) /*!< AOI_BFCRT012.PT1_BC Field               */
#define AOI_BFCRT012_PT1_AC_MASK                 (0xC0U)                                             /*!< AOI_BFCRT012.PT1_AC Mask                */
#define AOI_BFCRT012_PT1_AC_SHIFT                (6U)                                                /*!< AOI_BFCRT012.PT1_AC Position            */
#define AOI_BFCRT012_PT1_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT012_PT1_AC_SHIFT))&AOI_BFCRT012_PT1_AC_MASK) /*!< AOI_BFCRT012.PT1_AC Field               */
#define AOI_BFCRT012_PT0_DC_MASK                 (0x300U)                                            /*!< AOI_BFCRT012.PT0_DC Mask                */
#define AOI_BFCRT012_PT0_DC_SHIFT                (8U)                                                /*!< AOI_BFCRT012.PT0_DC Position            */
#define AOI_BFCRT012_PT0_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT012_PT0_DC_SHIFT))&AOI_BFCRT012_PT0_DC_MASK) /*!< AOI_BFCRT012.PT0_DC Field               */
#define AOI_BFCRT012_PT0_CC_MASK                 (0xC00U)                                            /*!< AOI_BFCRT012.PT0_CC Mask                */
#define AOI_BFCRT012_PT0_CC_SHIFT                (10U)                                               /*!< AOI_BFCRT012.PT0_CC Position            */
#define AOI_BFCRT012_PT0_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT012_PT0_CC_SHIFT))&AOI_BFCRT012_PT0_CC_MASK) /*!< AOI_BFCRT012.PT0_CC Field               */
#define AOI_BFCRT012_PT0_BC_MASK                 (0x3000U)                                           /*!< AOI_BFCRT012.PT0_BC Mask                */
#define AOI_BFCRT012_PT0_BC_SHIFT                (12U)                                               /*!< AOI_BFCRT012.PT0_BC Position            */
#define AOI_BFCRT012_PT0_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT012_PT0_BC_SHIFT))&AOI_BFCRT012_PT0_BC_MASK) /*!< AOI_BFCRT012.PT0_BC Field               */
#define AOI_BFCRT012_PT0_AC_MASK                 (0xC000U)                                           /*!< AOI_BFCRT012.PT0_AC Mask                */
#define AOI_BFCRT012_PT0_AC_SHIFT                (14U)                                               /*!< AOI_BFCRT012.PT0_AC Position            */
#define AOI_BFCRT012_PT0_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT012_PT0_AC_SHIFT))&AOI_BFCRT012_PT0_AC_MASK) /*!< AOI_BFCRT012.PT0_AC Field               */

/*! @name BFCRT232 - Boolean Function Term 2 and 3 Configuration Register for EVENTn */
#define AOI_BFCRT232_PT3_DC_MASK                 (0x3U)                                              /*!< AOI_BFCRT232.PT3_DC Mask                */
#define AOI_BFCRT232_PT3_DC_SHIFT                (0U)                                                /*!< AOI_BFCRT232.PT3_DC Position            */
#define AOI_BFCRT232_PT3_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT232_PT3_DC_SHIFT))&AOI_BFCRT232_PT3_DC_MASK) /*!< AOI_BFCRT232.PT3_DC Field               */
#define AOI_BFCRT232_PT3_CC_MASK                 (0xCU)                                              /*!< AOI_BFCRT232.PT3_CC Mask                */
#define AOI_BFCRT232_PT3_CC_SHIFT                (2U)                                                /*!< AOI_BFCRT232.PT3_CC Position            */
#define AOI_BFCRT232_PT3_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT232_PT3_CC_SHIFT))&AOI_BFCRT232_PT3_CC_MASK) /*!< AOI_BFCRT232.PT3_CC Field               */
#define AOI_BFCRT232_PT3_BC_MASK                 (0x30U)                                             /*!< AOI_BFCRT232.PT3_BC Mask                */
#define AOI_BFCRT232_PT3_BC_SHIFT                (4U)                                                /*!< AOI_BFCRT232.PT3_BC Position            */
#define AOI_BFCRT232_PT3_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT232_PT3_BC_SHIFT))&AOI_BFCRT232_PT3_BC_MASK) /*!< AOI_BFCRT232.PT3_BC Field               */
#define AOI_BFCRT232_PT3_AC_MASK                 (0xC0U)                                             /*!< AOI_BFCRT232.PT3_AC Mask                */
#define AOI_BFCRT232_PT3_AC_SHIFT                (6U)                                                /*!< AOI_BFCRT232.PT3_AC Position            */
#define AOI_BFCRT232_PT3_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT232_PT3_AC_SHIFT))&AOI_BFCRT232_PT3_AC_MASK) /*!< AOI_BFCRT232.PT3_AC Field               */
#define AOI_BFCRT232_PT2_DC_MASK                 (0x300U)                                            /*!< AOI_BFCRT232.PT2_DC Mask                */
#define AOI_BFCRT232_PT2_DC_SHIFT                (8U)                                                /*!< AOI_BFCRT232.PT2_DC Position            */
#define AOI_BFCRT232_PT2_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT232_PT2_DC_SHIFT))&AOI_BFCRT232_PT2_DC_MASK) /*!< AOI_BFCRT232.PT2_DC Field               */
#define AOI_BFCRT232_PT2_CC_MASK                 (0xC00U)                                            /*!< AOI_BFCRT232.PT2_CC Mask                */
#define AOI_BFCRT232_PT2_CC_SHIFT                (10U)                                               /*!< AOI_BFCRT232.PT2_CC Position            */
#define AOI_BFCRT232_PT2_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT232_PT2_CC_SHIFT))&AOI_BFCRT232_PT2_CC_MASK) /*!< AOI_BFCRT232.PT2_CC Field               */
#define AOI_BFCRT232_PT2_BC_MASK                 (0x3000U)                                           /*!< AOI_BFCRT232.PT2_BC Mask                */
#define AOI_BFCRT232_PT2_BC_SHIFT                (12U)                                               /*!< AOI_BFCRT232.PT2_BC Position            */
#define AOI_BFCRT232_PT2_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT232_PT2_BC_SHIFT))&AOI_BFCRT232_PT2_BC_MASK) /*!< AOI_BFCRT232.PT2_BC Field               */
#define AOI_BFCRT232_PT2_AC_MASK                 (0xC000U)                                           /*!< AOI_BFCRT232.PT2_AC Mask                */
#define AOI_BFCRT232_PT2_AC_SHIFT                (14U)                                               /*!< AOI_BFCRT232.PT2_AC Position            */
#define AOI_BFCRT232_PT2_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT232_PT2_AC_SHIFT))&AOI_BFCRT232_PT2_AC_MASK) /*!< AOI_BFCRT232.PT2_AC Field               */

/*! @name BFCRT013 - Boolean Function Term 0 and 1 Configuration Register for EVENTn */
#define AOI_BFCRT013_PT1_DC_MASK                 (0x3U)                                              /*!< AOI_BFCRT013.PT1_DC Mask                */
#define AOI_BFCRT013_PT1_DC_SHIFT                (0U)                                                /*!< AOI_BFCRT013.PT1_DC Position            */
#define AOI_BFCRT013_PT1_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT013_PT1_DC_SHIFT))&AOI_BFCRT013_PT1_DC_MASK) /*!< AOI_BFCRT013.PT1_DC Field               */
#define AOI_BFCRT013_PT1_CC_MASK                 (0xCU)                                              /*!< AOI_BFCRT013.PT1_CC Mask                */
#define AOI_BFCRT013_PT1_CC_SHIFT                (2U)                                                /*!< AOI_BFCRT013.PT1_CC Position            */
#define AOI_BFCRT013_PT1_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT013_PT1_CC_SHIFT))&AOI_BFCRT013_PT1_CC_MASK) /*!< AOI_BFCRT013.PT1_CC Field               */
#define AOI_BFCRT013_PT1_BC_MASK                 (0x30U)                                             /*!< AOI_BFCRT013.PT1_BC Mask                */
#define AOI_BFCRT013_PT1_BC_SHIFT                (4U)                                                /*!< AOI_BFCRT013.PT1_BC Position            */
#define AOI_BFCRT013_PT1_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT013_PT1_BC_SHIFT))&AOI_BFCRT013_PT1_BC_MASK) /*!< AOI_BFCRT013.PT1_BC Field               */
#define AOI_BFCRT013_PT1_AC_MASK                 (0xC0U)                                             /*!< AOI_BFCRT013.PT1_AC Mask                */
#define AOI_BFCRT013_PT1_AC_SHIFT                (6U)                                                /*!< AOI_BFCRT013.PT1_AC Position            */
#define AOI_BFCRT013_PT1_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT013_PT1_AC_SHIFT))&AOI_BFCRT013_PT1_AC_MASK) /*!< AOI_BFCRT013.PT1_AC Field               */
#define AOI_BFCRT013_PT0_DC_MASK                 (0x300U)                                            /*!< AOI_BFCRT013.PT0_DC Mask                */
#define AOI_BFCRT013_PT0_DC_SHIFT                (8U)                                                /*!< AOI_BFCRT013.PT0_DC Position            */
#define AOI_BFCRT013_PT0_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT013_PT0_DC_SHIFT))&AOI_BFCRT013_PT0_DC_MASK) /*!< AOI_BFCRT013.PT0_DC Field               */
#define AOI_BFCRT013_PT0_CC_MASK                 (0xC00U)                                            /*!< AOI_BFCRT013.PT0_CC Mask                */
#define AOI_BFCRT013_PT0_CC_SHIFT                (10U)                                               /*!< AOI_BFCRT013.PT0_CC Position            */
#define AOI_BFCRT013_PT0_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT013_PT0_CC_SHIFT))&AOI_BFCRT013_PT0_CC_MASK) /*!< AOI_BFCRT013.PT0_CC Field               */
#define AOI_BFCRT013_PT0_BC_MASK                 (0x3000U)                                           /*!< AOI_BFCRT013.PT0_BC Mask                */
#define AOI_BFCRT013_PT0_BC_SHIFT                (12U)                                               /*!< AOI_BFCRT013.PT0_BC Position            */
#define AOI_BFCRT013_PT0_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT013_PT0_BC_SHIFT))&AOI_BFCRT013_PT0_BC_MASK) /*!< AOI_BFCRT013.PT0_BC Field               */
#define AOI_BFCRT013_PT0_AC_MASK                 (0xC000U)                                           /*!< AOI_BFCRT013.PT0_AC Mask                */
#define AOI_BFCRT013_PT0_AC_SHIFT                (14U)                                               /*!< AOI_BFCRT013.PT0_AC Position            */
#define AOI_BFCRT013_PT0_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT013_PT0_AC_SHIFT))&AOI_BFCRT013_PT0_AC_MASK) /*!< AOI_BFCRT013.PT0_AC Field               */

/*! @name BFCRT233 - Boolean Function Term 2 and 3 Configuration Register for EVENTn */
#define AOI_BFCRT233_PT3_DC_MASK                 (0x3U)                                              /*!< AOI_BFCRT233.PT3_DC Mask                */
#define AOI_BFCRT233_PT3_DC_SHIFT                (0U)                                                /*!< AOI_BFCRT233.PT3_DC Position            */
#define AOI_BFCRT233_PT3_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT233_PT3_DC_SHIFT))&AOI_BFCRT233_PT3_DC_MASK) /*!< AOI_BFCRT233.PT3_DC Field               */
#define AOI_BFCRT233_PT3_CC_MASK                 (0xCU)                                              /*!< AOI_BFCRT233.PT3_CC Mask                */
#define AOI_BFCRT233_PT3_CC_SHIFT                (2U)                                                /*!< AOI_BFCRT233.PT3_CC Position            */
#define AOI_BFCRT233_PT3_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT233_PT3_CC_SHIFT))&AOI_BFCRT233_PT3_CC_MASK) /*!< AOI_BFCRT233.PT3_CC Field               */
#define AOI_BFCRT233_PT3_BC_MASK                 (0x30U)                                             /*!< AOI_BFCRT233.PT3_BC Mask                */
#define AOI_BFCRT233_PT3_BC_SHIFT                (4U)                                                /*!< AOI_BFCRT233.PT3_BC Position            */
#define AOI_BFCRT233_PT3_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT233_PT3_BC_SHIFT))&AOI_BFCRT233_PT3_BC_MASK) /*!< AOI_BFCRT233.PT3_BC Field               */
#define AOI_BFCRT233_PT3_AC_MASK                 (0xC0U)                                             /*!< AOI_BFCRT233.PT3_AC Mask                */
#define AOI_BFCRT233_PT3_AC_SHIFT                (6U)                                                /*!< AOI_BFCRT233.PT3_AC Position            */
#define AOI_BFCRT233_PT3_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT233_PT3_AC_SHIFT))&AOI_BFCRT233_PT3_AC_MASK) /*!< AOI_BFCRT233.PT3_AC Field               */
#define AOI_BFCRT233_PT2_DC_MASK                 (0x300U)                                            /*!< AOI_BFCRT233.PT2_DC Mask                */
#define AOI_BFCRT233_PT2_DC_SHIFT                (8U)                                                /*!< AOI_BFCRT233.PT2_DC Position            */
#define AOI_BFCRT233_PT2_DC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT233_PT2_DC_SHIFT))&AOI_BFCRT233_PT2_DC_MASK) /*!< AOI_BFCRT233.PT2_DC Field               */
#define AOI_BFCRT233_PT2_CC_MASK                 (0xC00U)                                            /*!< AOI_BFCRT233.PT2_CC Mask                */
#define AOI_BFCRT233_PT2_CC_SHIFT                (10U)                                               /*!< AOI_BFCRT233.PT2_CC Position            */
#define AOI_BFCRT233_PT2_CC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT233_PT2_CC_SHIFT))&AOI_BFCRT233_PT2_CC_MASK) /*!< AOI_BFCRT233.PT2_CC Field               */
#define AOI_BFCRT233_PT2_BC_MASK                 (0x3000U)                                           /*!< AOI_BFCRT233.PT2_BC Mask                */
#define AOI_BFCRT233_PT2_BC_SHIFT                (12U)                                               /*!< AOI_BFCRT233.PT2_BC Position            */
#define AOI_BFCRT233_PT2_BC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT233_PT2_BC_SHIFT))&AOI_BFCRT233_PT2_BC_MASK) /*!< AOI_BFCRT233.PT2_BC Field               */
#define AOI_BFCRT233_PT2_AC_MASK                 (0xC000U)                                           /*!< AOI_BFCRT233.PT2_AC Mask                */
#define AOI_BFCRT233_PT2_AC_SHIFT                (14U)                                               /*!< AOI_BFCRT233.PT2_AC Position            */
#define AOI_BFCRT233_PT2_AC(x)                   (((uint16_t)(((uint16_t)(x))<<AOI_BFCRT233_PT2_AC_SHIFT))&AOI_BFCRT233_PT2_AC_MASK) /*!< AOI_BFCRT233.PT2_AC Field               */
/**
 * @} */ /* End group AOI_Register_Masks_GROUP 
 */

/* AOI - Peripheral instance base addresses */
#define AOI_BasePtr                    0x4005B000UL //!< Peripheral base address
#define AOI                            ((AOI_Type *) AOI_BasePtr) //!< Freescale base pointer
#define AOI_BASE_PTR                   (AOI) //!< Freescale style base pointer
/**
 * @} */ /* End group AOI_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup CAN_Peripheral_access_layer_GROUP CAN Peripheral Access Layer
* @brief C Struct for CAN
* @{
*/

/* ================================================================================ */
/* ================           CAN0 (file:CAN0_FLEX_MKV)            ================ */
/* ================================================================================ */

/**
 * @brief Flex Controller Area Network module
 */
#define CAN_FIFO_FILTER_COUNT 128       /**< Number of Filter IDs                               */
#define CAN_MESSAGE_BUFFER_COUNT 64     /**< Number of message buffers                          */
/**
* @addtogroup CAN_structs_GROUP CAN struct
* @brief Struct for CAN
* @{
*/
typedef struct CAN_Type {
   __IO uint32_t  MCR;                          /**< 0000: Module Configuration Register                                */
   __IO uint32_t  CTRL1;                        /**< 0004: Control 1 Register                                           */
   __IO uint32_t  TIMER;                        /**< 0008: Free Running Timer                                           */
        uint8_t   RESERVED_0[4];                /**< 000C: 0x4 bytes                                                    */
   __IO uint32_t  RXMGMASK;                     /**< 0010: Rx Mailboxes Global Mask Register                            */
   __IO uint32_t  RX14MASK;                     /**< 0014: Rx 14 Mask register                                          */
   __IO uint32_t  RX15MASK;                     /**< 0018: Rx 15 Mask register                                          */
   __IO uint32_t  ECR;                          /**< 001C: Error Counter                                                */
   __IO uint32_t  ESR1;                         /**< 0020: Error and Status 1 register                                  */
   __IO uint32_t  IMASK2;                       /**< 0024: Interrupt Masks 2 Register                                   */
   __IO uint32_t  IMASK1;                       /**< 0028: Interrupt Masks 1 register                                   */
   __IO uint32_t  IFLAG2;                       /**< 002C: Interrupt Flags 2 Register                                   */
   __IO uint32_t  IFLAG1;                       /**< 0030: Interrupt Flags 1 register                                   */
   __IO uint32_t  CTRL2;                        /**< 0034: Control 2 Register                                           */
   __I  uint32_t  ESR2;                         /**< 0038: Error and Status 2 register                                  */
        uint8_t   RESERVED_1[8];                /**< 003C: 0x8 bytes                                                    */
   __I  uint32_t  CRCR;                         /**< 0044: CRC Register                                                 */
   union {                                      /**< 0048: (size=0004)                                                  */
      __IO uint32_t  RXFGMASK;                  /**< 0048: Rx FIFO Global Mask register                                 */
      __IO uint32_t  RXFGMASK_A;                /**< 0048: Rx FIFO Global Mask register (format A)                      */
      __IO uint32_t  RXFGMASK_B;                /**< 0048: Rx FIFO Global Mask register (format B)                      */
      __IO uint32_t  RXFGMASK_C;                /**< 0048: Rx FIFO Global Mask register (format C)                      */
   };
   __I  uint32_t  RXFIR;                        /**< 004C: Rx FIFO Information Register                                 */
   __IO uint32_t  CBT;                          /**< 0050: CAN Bit Timing Register                                      */
        uint8_t   RESERVED_2[44];               /**< 0054: 0x2C bytes                                                   */
   union {                                      /**< 0080: (size=0400)                                                  */
      struct {
         __IO uint32_t  CS;                     /**< 0080: Message Buffer 0 CS Register                                 */
         __IO uint32_t  ID;                     /**< 0084: Message Buffer 0 ID Register                                 */
         __IO uint32_t  WORD0;                  /**< 0088: Message Buffer 0 WORD0 Register                              */
         __IO uint32_t  WORD1;                  /**< 008C: Message Buffer 0 WORD1 Register                              */
      } MB[CAN_MESSAGE_BUFFER_COUNT];           /**< 0080: (cluster: size=0x0400, 1024)                                 */
      struct {
         __IO uint32_t  CS;                     /**< 0080: FIFO Message Buffer CS Register                              */
         __IO uint32_t  ID;                     /**< 0084: FIFO Message Buffer ID Register                              */
         __IO uint32_t  WORD0;                  /**< 0088: FIFO Message Buffer WORD0 Register                           */
         __IO uint32_t  WORD1;                  /**< 008C: FIFO Message Buffer WORD1 Register                           */
              uint8_t   RESERVED_4[80];         /**< 0090: 0x50 bytes                                                   */
         union {                                /**< 00E0: (size=0200)                                                  */
            __IO uint32_t  FILTER_ID[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID                                       */
            __IO uint32_t  FILTER_ID_A[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format A)                            */
            __IO uint32_t  FILTER_ID_B[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format B)                            */
            __IO uint32_t  FILTER_ID_C[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format C)                            */
         };
      } FIFO;                                   /**< 0080: (cluster: size=0x0260, 608)                                  */
   };
        uint8_t   RESERVED_5[1024];             /**< 0480: 0x400 bytes                                                  */
   __IO uint32_t  RXIMR[CAN_MESSAGE_BUFFER_COUNT]; /**< 0880: Rx Individual Mask                                           */
} CAN_Type;

/**
 * @} */ /* End group CAN_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'CAN0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup CAN_Register_Masks_GROUP CAN Register Masks
* @brief Register Masks for CAN
* @{
*/

/*! @name MCR - Module Configuration Register */
#define CAN_MCR_MAXMB_MASK                       (0x7FU)                                             /*!< CAN0_MCR.MAXMB Mask                     */
#define CAN_MCR_MAXMB_SHIFT                      (0U)                                                /*!< CAN0_MCR.MAXMB Position                 */
#define CAN_MCR_MAXMB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MAXMB_SHIFT))&CAN_MCR_MAXMB_MASK) /*!< CAN0_MCR.MAXMB Field                    */
#define CAN_MCR_IDAM_MASK                        (0x300U)                                            /*!< CAN0_MCR.IDAM Mask                      */
#define CAN_MCR_IDAM_SHIFT                       (8U)                                                /*!< CAN0_MCR.IDAM Position                  */
#define CAN_MCR_IDAM(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IDAM_SHIFT))&CAN_MCR_IDAM_MASK) /*!< CAN0_MCR.IDAM Field                     */
#define CAN_MCR_AEN_MASK                         (0x1000U)                                           /*!< CAN0_MCR.AEN Mask                       */
#define CAN_MCR_AEN_SHIFT                        (12U)                                               /*!< CAN0_MCR.AEN Position                   */
#define CAN_MCR_AEN(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_AEN_SHIFT))&CAN_MCR_AEN_MASK) /*!< CAN0_MCR.AEN Field                      */
#define CAN_MCR_LPRIOEN_MASK                     (0x2000U)                                           /*!< CAN0_MCR.LPRIOEN Mask                   */
#define CAN_MCR_LPRIOEN_SHIFT                    (13U)                                               /*!< CAN0_MCR.LPRIOEN Position               */
#define CAN_MCR_LPRIOEN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_LPRIOEN_SHIFT))&CAN_MCR_LPRIOEN_MASK) /*!< CAN0_MCR.LPRIOEN Field                  */
#define CAN_MCR_DMA_MASK                         (0x8000U)                                           /*!< CAN0_MCR.DMA Mask                       */
#define CAN_MCR_DMA_SHIFT                        (15U)                                               /*!< CAN0_MCR.DMA Position                   */
#define CAN_MCR_DMA(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_DMA_SHIFT))&CAN_MCR_DMA_MASK) /*!< CAN0_MCR.DMA Field                      */
#define CAN_MCR_IRMQ_MASK                        (0x10000U)                                          /*!< CAN0_MCR.IRMQ Mask                      */
#define CAN_MCR_IRMQ_SHIFT                       (16U)                                               /*!< CAN0_MCR.IRMQ Position                  */
#define CAN_MCR_IRMQ(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IRMQ_SHIFT))&CAN_MCR_IRMQ_MASK) /*!< CAN0_MCR.IRMQ Field                     */
#define CAN_MCR_SRXDIS_MASK                      (0x20000U)                                          /*!< CAN0_MCR.SRXDIS Mask                    */
#define CAN_MCR_SRXDIS_SHIFT                     (17U)                                               /*!< CAN0_MCR.SRXDIS Position                */
#define CAN_MCR_SRXDIS(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SRXDIS_SHIFT))&CAN_MCR_SRXDIS_MASK) /*!< CAN0_MCR.SRXDIS Field                   */
#define CAN_MCR_DOZE_MASK                        (0x40000U)                                          /*!< CAN0_MCR.DOZE Mask                      */
#define CAN_MCR_DOZE_SHIFT                       (18U)                                               /*!< CAN0_MCR.DOZE Position                  */
#define CAN_MCR_DOZE(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_DOZE_SHIFT))&CAN_MCR_DOZE_MASK) /*!< CAN0_MCR.DOZE Field                     */
#define CAN_MCR_WAKSRC_MASK                      (0x80000U)                                          /*!< CAN0_MCR.WAKSRC Mask                    */
#define CAN_MCR_WAKSRC_SHIFT                     (19U)                                               /*!< CAN0_MCR.WAKSRC Position                */
#define CAN_MCR_WAKSRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WAKSRC_SHIFT))&CAN_MCR_WAKSRC_MASK) /*!< CAN0_MCR.WAKSRC Field                   */
#define CAN_MCR_LPMACK_MASK                      (0x100000U)                                         /*!< CAN0_MCR.LPMACK Mask                    */
#define CAN_MCR_LPMACK_SHIFT                     (20U)                                               /*!< CAN0_MCR.LPMACK Position                */
#define CAN_MCR_LPMACK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_LPMACK_SHIFT))&CAN_MCR_LPMACK_MASK) /*!< CAN0_MCR.LPMACK Field                   */
#define CAN_MCR_WRNEN_MASK                       (0x200000U)                                         /*!< CAN0_MCR.WRNEN Mask                     */
#define CAN_MCR_WRNEN_SHIFT                      (21U)                                               /*!< CAN0_MCR.WRNEN Position                 */
#define CAN_MCR_WRNEN(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WRNEN_SHIFT))&CAN_MCR_WRNEN_MASK) /*!< CAN0_MCR.WRNEN Field                    */
#define CAN_MCR_SLFWAK_MASK                      (0x400000U)                                         /*!< CAN0_MCR.SLFWAK Mask                    */
#define CAN_MCR_SLFWAK_SHIFT                     (22U)                                               /*!< CAN0_MCR.SLFWAK Position                */
#define CAN_MCR_SLFWAK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SLFWAK_SHIFT))&CAN_MCR_SLFWAK_MASK) /*!< CAN0_MCR.SLFWAK Field                   */
#define CAN_MCR_SUPV_MASK                        (0x800000U)                                         /*!< CAN0_MCR.SUPV Mask                      */
#define CAN_MCR_SUPV_SHIFT                       (23U)                                               /*!< CAN0_MCR.SUPV Position                  */
#define CAN_MCR_SUPV(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SUPV_SHIFT))&CAN_MCR_SUPV_MASK) /*!< CAN0_MCR.SUPV Field                     */
#define CAN_MCR_FRZACK_MASK                      (0x1000000U)                                        /*!< CAN0_MCR.FRZACK Mask                    */
#define CAN_MCR_FRZACK_SHIFT                     (24U)                                               /*!< CAN0_MCR.FRZACK Position                */
#define CAN_MCR_FRZACK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FRZACK_SHIFT))&CAN_MCR_FRZACK_MASK) /*!< CAN0_MCR.FRZACK Field                   */
#define CAN_MCR_SOFTRST_MASK                     (0x2000000U)                                        /*!< CAN0_MCR.SOFTRST Mask                   */
#define CAN_MCR_SOFTRST_SHIFT                    (25U)                                               /*!< CAN0_MCR.SOFTRST Position               */
#define CAN_MCR_SOFTRST(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SOFTRST_SHIFT))&CAN_MCR_SOFTRST_MASK) /*!< CAN0_MCR.SOFTRST Field                  */
#define CAN_MCR_WAKMSK_MASK                      (0x4000000U)                                        /*!< CAN0_MCR.WAKMSK Mask                    */
#define CAN_MCR_WAKMSK_SHIFT                     (26U)                                               /*!< CAN0_MCR.WAKMSK Position                */
#define CAN_MCR_WAKMSK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WAKMSK_SHIFT))&CAN_MCR_WAKMSK_MASK) /*!< CAN0_MCR.WAKMSK Field                   */
#define CAN_MCR_NOTRDY_MASK                      (0x8000000U)                                        /*!< CAN0_MCR.NOTRDY Mask                    */
#define CAN_MCR_NOTRDY_SHIFT                     (27U)                                               /*!< CAN0_MCR.NOTRDY Position                */
#define CAN_MCR_NOTRDY(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_NOTRDY_SHIFT))&CAN_MCR_NOTRDY_MASK) /*!< CAN0_MCR.NOTRDY Field                   */
#define CAN_MCR_HALT_MASK                        (0x10000000U)                                       /*!< CAN0_MCR.HALT Mask                      */
#define CAN_MCR_HALT_SHIFT                       (28U)                                               /*!< CAN0_MCR.HALT Position                  */
#define CAN_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_HALT_SHIFT))&CAN_MCR_HALT_MASK) /*!< CAN0_MCR.HALT Field                     */
#define CAN_MCR_RFEN_MASK                        (0x20000000U)                                       /*!< CAN0_MCR.RFEN Mask                      */
#define CAN_MCR_RFEN_SHIFT                       (29U)                                               /*!< CAN0_MCR.RFEN Position                  */
#define CAN_MCR_RFEN(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_RFEN_SHIFT))&CAN_MCR_RFEN_MASK) /*!< CAN0_MCR.RFEN Field                     */
#define CAN_MCR_FRZ_MASK                         (0x40000000U)                                       /*!< CAN0_MCR.FRZ Mask                       */
#define CAN_MCR_FRZ_SHIFT                        (30U)                                               /*!< CAN0_MCR.FRZ Position                   */
#define CAN_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FRZ_SHIFT))&CAN_MCR_FRZ_MASK) /*!< CAN0_MCR.FRZ Field                      */
#define CAN_MCR_MDIS_MASK                        (0x80000000U)                                       /*!< CAN0_MCR.MDIS Mask                      */
#define CAN_MCR_MDIS_SHIFT                       (31U)                                               /*!< CAN0_MCR.MDIS Position                  */
#define CAN_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MDIS_SHIFT))&CAN_MCR_MDIS_MASK) /*!< CAN0_MCR.MDIS Field                     */

/*! @name CTRL1 - Control 1 Register */
#define CAN_CTRL1_PROPSEG_MASK                   (0x7U)                                              /*!< CAN0_CTRL1.PROPSEG Mask                 */
#define CAN_CTRL1_PROPSEG_SHIFT                  (0U)                                                /*!< CAN0_CTRL1.PROPSEG Position             */
#define CAN_CTRL1_PROPSEG(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PROPSEG_SHIFT))&CAN_CTRL1_PROPSEG_MASK) /*!< CAN0_CTRL1.PROPSEG Field                */
#define CAN_CTRL1_LOM_MASK                       (0x8U)                                              /*!< CAN0_CTRL1.LOM Mask                     */
#define CAN_CTRL1_LOM_SHIFT                      (3U)                                                /*!< CAN0_CTRL1.LOM Position                 */
#define CAN_CTRL1_LOM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LOM_SHIFT))&CAN_CTRL1_LOM_MASK) /*!< CAN0_CTRL1.LOM Field                    */
#define CAN_CTRL1_LBUF_MASK                      (0x10U)                                             /*!< CAN0_CTRL1.LBUF Mask                    */
#define CAN_CTRL1_LBUF_SHIFT                     (4U)                                                /*!< CAN0_CTRL1.LBUF Position                */
#define CAN_CTRL1_LBUF(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LBUF_SHIFT))&CAN_CTRL1_LBUF_MASK) /*!< CAN0_CTRL1.LBUF Field                   */
#define CAN_CTRL1_TSYN_MASK                      (0x20U)                                             /*!< CAN0_CTRL1.TSYN Mask                    */
#define CAN_CTRL1_TSYN_SHIFT                     (5U)                                                /*!< CAN0_CTRL1.TSYN Position                */
#define CAN_CTRL1_TSYN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_TSYN_SHIFT))&CAN_CTRL1_TSYN_MASK) /*!< CAN0_CTRL1.TSYN Field                   */
#define CAN_CTRL1_BOFFREC_MASK                   (0x40U)                                             /*!< CAN0_CTRL1.BOFFREC Mask                 */
#define CAN_CTRL1_BOFFREC_SHIFT                  (6U)                                                /*!< CAN0_CTRL1.BOFFREC Position             */
#define CAN_CTRL1_BOFFREC(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_BOFFREC_SHIFT))&CAN_CTRL1_BOFFREC_MASK) /*!< CAN0_CTRL1.BOFFREC Field                */
#define CAN_CTRL1_SMP_MASK                       (0x80U)                                             /*!< CAN0_CTRL1.SMP Mask                     */
#define CAN_CTRL1_SMP_SHIFT                      (7U)                                                /*!< CAN0_CTRL1.SMP Position                 */
#define CAN_CTRL1_SMP(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_SMP_SHIFT))&CAN_CTRL1_SMP_MASK) /*!< CAN0_CTRL1.SMP Field                    */
#define CAN_CTRL1_RWRNMSK_MASK                   (0x400U)                                            /*!< CAN0_CTRL1.RWRNMSK Mask                 */
#define CAN_CTRL1_RWRNMSK_SHIFT                  (10U)                                               /*!< CAN0_CTRL1.RWRNMSK Position             */
#define CAN_CTRL1_RWRNMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RWRNMSK_SHIFT))&CAN_CTRL1_RWRNMSK_MASK) /*!< CAN0_CTRL1.RWRNMSK Field                */
#define CAN_CTRL1_TWRNMSK_MASK                   (0x800U)                                            /*!< CAN0_CTRL1.TWRNMSK Mask                 */
#define CAN_CTRL1_TWRNMSK_SHIFT                  (11U)                                               /*!< CAN0_CTRL1.TWRNMSK Position             */
#define CAN_CTRL1_TWRNMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_TWRNMSK_SHIFT))&CAN_CTRL1_TWRNMSK_MASK) /*!< CAN0_CTRL1.TWRNMSK Field                */
#define CAN_CTRL1_LPB_MASK                       (0x1000U)                                           /*!< CAN0_CTRL1.LPB Mask                     */
#define CAN_CTRL1_LPB_SHIFT                      (12U)                                               /*!< CAN0_CTRL1.LPB Position                 */
#define CAN_CTRL1_LPB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LPB_SHIFT))&CAN_CTRL1_LPB_MASK) /*!< CAN0_CTRL1.LPB Field                    */
#define CAN_CTRL1_CLKSRC_MASK                    (0x2000U)                                           /*!< CAN0_CTRL1.CLKSRC Mask                  */
#define CAN_CTRL1_CLKSRC_SHIFT                   (13U)                                               /*!< CAN0_CTRL1.CLKSRC Position              */
#define CAN_CTRL1_CLKSRC(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_CLKSRC_SHIFT))&CAN_CTRL1_CLKSRC_MASK) /*!< CAN0_CTRL1.CLKSRC Field                 */
#define CAN_CTRL1_ERRMSK_MASK                    (0x4000U)                                           /*!< CAN0_CTRL1.ERRMSK Mask                  */
#define CAN_CTRL1_ERRMSK_SHIFT                   (14U)                                               /*!< CAN0_CTRL1.ERRMSK Position              */
#define CAN_CTRL1_ERRMSK(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_ERRMSK_SHIFT))&CAN_CTRL1_ERRMSK_MASK) /*!< CAN0_CTRL1.ERRMSK Field                 */
#define CAN_CTRL1_BOFFMSK_MASK                   (0x8000U)                                           /*!< CAN0_CTRL1.BOFFMSK Mask                 */
#define CAN_CTRL1_BOFFMSK_SHIFT                  (15U)                                               /*!< CAN0_CTRL1.BOFFMSK Position             */
#define CAN_CTRL1_BOFFMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_BOFFMSK_SHIFT))&CAN_CTRL1_BOFFMSK_MASK) /*!< CAN0_CTRL1.BOFFMSK Field                */
#define CAN_CTRL1_PSEG2_MASK                     (0x70000U)                                          /*!< CAN0_CTRL1.PSEG2 Mask                   */
#define CAN_CTRL1_PSEG2_SHIFT                    (16U)                                               /*!< CAN0_CTRL1.PSEG2 Position               */
#define CAN_CTRL1_PSEG2(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG2_SHIFT))&CAN_CTRL1_PSEG2_MASK) /*!< CAN0_CTRL1.PSEG2 Field                  */
#define CAN_CTRL1_PSEG1_MASK                     (0x380000U)                                         /*!< CAN0_CTRL1.PSEG1 Mask                   */
#define CAN_CTRL1_PSEG1_SHIFT                    (19U)                                               /*!< CAN0_CTRL1.PSEG1 Position               */
#define CAN_CTRL1_PSEG1(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG1_SHIFT))&CAN_CTRL1_PSEG1_MASK) /*!< CAN0_CTRL1.PSEG1 Field                  */
#define CAN_CTRL1_RJW_MASK                       (0xC00000U)                                         /*!< CAN0_CTRL1.RJW Mask                     */
#define CAN_CTRL1_RJW_SHIFT                      (22U)                                               /*!< CAN0_CTRL1.RJW Position                 */
#define CAN_CTRL1_RJW(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RJW_SHIFT))&CAN_CTRL1_RJW_MASK) /*!< CAN0_CTRL1.RJW Field                    */
#define CAN_CTRL1_PRESDIV_MASK                   (0xFF000000U)                                       /*!< CAN0_CTRL1.PRESDIV Mask                 */
#define CAN_CTRL1_PRESDIV_SHIFT                  (24U)                                               /*!< CAN0_CTRL1.PRESDIV Position             */
#define CAN_CTRL1_PRESDIV(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PRESDIV_SHIFT))&CAN_CTRL1_PRESDIV_MASK) /*!< CAN0_CTRL1.PRESDIV Field                */

/*! @name TIMER - Free Running Timer */
#define CAN_TIMER_TIMER_MASK                     (0xFFFFU)                                           /*!< CAN0_TIMER.TIMER Mask                   */
#define CAN_TIMER_TIMER_SHIFT                    (0U)                                                /*!< CAN0_TIMER.TIMER Position               */
#define CAN_TIMER_TIMER(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_TIMER_TIMER_SHIFT))&CAN_TIMER_TIMER_MASK) /*!< CAN0_TIMER.TIMER Field                  */

/*! @name RXMGMASK - Rx Mailboxes Global Mask Register */
#define CAN_RXMGMASK_MG_MASK                     (0xFFFFFFFFU)                                       /*!< CAN0_RXMGMASK.MG Mask                   */
#define CAN_RXMGMASK_MG_SHIFT                    (0U)                                                /*!< CAN0_RXMGMASK.MG Position               */
#define CAN_RXMGMASK_MG(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXMGMASK_MG_SHIFT))&CAN_RXMGMASK_MG_MASK) /*!< CAN0_RXMGMASK.MG Field                  */

/*! @name RX14MASK - Rx 14 Mask register */
#define CAN_RX14MASK_RX14M_MASK                  (0xFFFFFFFFU)                                       /*!< CAN0_RX14MASK.RX14M Mask                */
#define CAN_RX14MASK_RX14M_SHIFT                 (0U)                                                /*!< CAN0_RX14MASK.RX14M Position            */
#define CAN_RX14MASK_RX14M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX14MASK_RX14M_SHIFT))&CAN_RX14MASK_RX14M_MASK) /*!< CAN0_RX14MASK.RX14M Field               */

/*! @name RX15MASK - Rx 15 Mask register */
#define CAN_RX15MASK_RX15M_MASK                  (0xFFFFFFFFU)                                       /*!< CAN0_RX15MASK.RX15M Mask                */
#define CAN_RX15MASK_RX15M_SHIFT                 (0U)                                                /*!< CAN0_RX15MASK.RX15M Position            */
#define CAN_RX15MASK_RX15M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX15MASK_RX15M_SHIFT))&CAN_RX15MASK_RX15M_MASK) /*!< CAN0_RX15MASK.RX15M Field               */

/*! @name ECR - Error Counter */
#define CAN_ECR_TXERRCNT_MASK                    (0xFFU)                                             /*!< CAN0_ECR.TXERRCNT Mask                  */
#define CAN_ECR_TXERRCNT_SHIFT                   (0U)                                                /*!< CAN0_ECR.TXERRCNT Position              */
#define CAN_ECR_TXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_TXERRCNT_SHIFT))&CAN_ECR_TXERRCNT_MASK) /*!< CAN0_ECR.TXERRCNT Field                 */
#define CAN_ECR_RXERRCNT_MASK                    (0xFF00U)                                           /*!< CAN0_ECR.RXERRCNT Mask                  */
#define CAN_ECR_RXERRCNT_SHIFT                   (8U)                                                /*!< CAN0_ECR.RXERRCNT Position              */
#define CAN_ECR_RXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_RXERRCNT_SHIFT))&CAN_ECR_RXERRCNT_MASK) /*!< CAN0_ECR.RXERRCNT Field                 */

/*! @name ESR1 - Error and Status 1 register */
#define CAN_ESR1_WAKINT_MASK                     (0x1U)                                              /*!< CAN0_ESR1.WAKINT Mask                   */
#define CAN_ESR1_WAKINT_SHIFT                    (0U)                                                /*!< CAN0_ESR1.WAKINT Position               */
#define CAN_ESR1_WAKINT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_WAKINT_SHIFT))&CAN_ESR1_WAKINT_MASK) /*!< CAN0_ESR1.WAKINT Field                  */
#define CAN_ESR1_ERRINT_MASK                     (0x2U)                                              /*!< CAN0_ESR1.ERRINT Mask                   */
#define CAN_ESR1_ERRINT_SHIFT                    (1U)                                                /*!< CAN0_ESR1.ERRINT Position               */
#define CAN_ESR1_ERRINT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ERRINT_SHIFT))&CAN_ESR1_ERRINT_MASK) /*!< CAN0_ESR1.ERRINT Field                  */
#define CAN_ESR1_BOFFINT_MASK                    (0x4U)                                              /*!< CAN0_ESR1.BOFFINT Mask                  */
#define CAN_ESR1_BOFFINT_SHIFT                   (2U)                                                /*!< CAN0_ESR1.BOFFINT Position              */
#define CAN_ESR1_BOFFINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BOFFINT_SHIFT))&CAN_ESR1_BOFFINT_MASK) /*!< CAN0_ESR1.BOFFINT Field                 */
#define CAN_ESR1_RX_MASK                         (0x8U)                                              /*!< CAN0_ESR1.RX Mask                       */
#define CAN_ESR1_RX_SHIFT                        (3U)                                                /*!< CAN0_ESR1.RX Position                   */
#define CAN_ESR1_RX(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RX_SHIFT))&CAN_ESR1_RX_MASK) /*!< CAN0_ESR1.RX Field                      */
#define CAN_ESR1_FLTCONF_MASK                    (0x30U)                                             /*!< CAN0_ESR1.FLTCONF Mask                  */
#define CAN_ESR1_FLTCONF_SHIFT                   (4U)                                                /*!< CAN0_ESR1.FLTCONF Position              */
#define CAN_ESR1_FLTCONF(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FLTCONF_SHIFT))&CAN_ESR1_FLTCONF_MASK) /*!< CAN0_ESR1.FLTCONF Field                 */
#define CAN_ESR1_TX_MASK                         (0x40U)                                             /*!< CAN0_ESR1.TX Mask                       */
#define CAN_ESR1_TX_SHIFT                        (6U)                                                /*!< CAN0_ESR1.TX Position                   */
#define CAN_ESR1_TX(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TX_SHIFT))&CAN_ESR1_TX_MASK) /*!< CAN0_ESR1.TX Field                      */
#define CAN_ESR1_IDLE_MASK                       (0x80U)                                             /*!< CAN0_ESR1.IDLE Mask                     */
#define CAN_ESR1_IDLE_SHIFT                      (7U)                                                /*!< CAN0_ESR1.IDLE Position                 */
#define CAN_ESR1_IDLE(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_IDLE_SHIFT))&CAN_ESR1_IDLE_MASK) /*!< CAN0_ESR1.IDLE Field                    */
#define CAN_ESR1_RXWRN_MASK                      (0x100U)                                            /*!< CAN0_ESR1.RXWRN Mask                    */
#define CAN_ESR1_RXWRN_SHIFT                     (8U)                                                /*!< CAN0_ESR1.RXWRN Position                */
#define CAN_ESR1_RXWRN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RXWRN_SHIFT))&CAN_ESR1_RXWRN_MASK) /*!< CAN0_ESR1.RXWRN Field                   */
#define CAN_ESR1_TXWRN_MASK                      (0x200U)                                            /*!< CAN0_ESR1.TXWRN Mask                    */
#define CAN_ESR1_TXWRN_SHIFT                     (9U)                                                /*!< CAN0_ESR1.TXWRN Position                */
#define CAN_ESR1_TXWRN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TXWRN_SHIFT))&CAN_ESR1_TXWRN_MASK) /*!< CAN0_ESR1.TXWRN Field                   */
#define CAN_ESR1_STFERR_MASK                     (0x400U)                                            /*!< CAN0_ESR1.STFERR Mask                   */
#define CAN_ESR1_STFERR_SHIFT                    (10U)                                               /*!< CAN0_ESR1.STFERR Position               */
#define CAN_ESR1_STFERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_STFERR_SHIFT))&CAN_ESR1_STFERR_MASK) /*!< CAN0_ESR1.STFERR Field                  */
#define CAN_ESR1_FRMERR_MASK                     (0x800U)                                            /*!< CAN0_ESR1.FRMERR Mask                   */
#define CAN_ESR1_FRMERR_SHIFT                    (11U)                                               /*!< CAN0_ESR1.FRMERR Position               */
#define CAN_ESR1_FRMERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FRMERR_SHIFT))&CAN_ESR1_FRMERR_MASK) /*!< CAN0_ESR1.FRMERR Field                  */
#define CAN_ESR1_CRCERR_MASK                     (0x1000U)                                           /*!< CAN0_ESR1.CRCERR Mask                   */
#define CAN_ESR1_CRCERR_SHIFT                    (12U)                                               /*!< CAN0_ESR1.CRCERR Position               */
#define CAN_ESR1_CRCERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_CRCERR_SHIFT))&CAN_ESR1_CRCERR_MASK) /*!< CAN0_ESR1.CRCERR Field                  */
#define CAN_ESR1_ACKERR_MASK                     (0x2000U)                                           /*!< CAN0_ESR1.ACKERR Mask                   */
#define CAN_ESR1_ACKERR_SHIFT                    (13U)                                               /*!< CAN0_ESR1.ACKERR Position               */
#define CAN_ESR1_ACKERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ACKERR_SHIFT))&CAN_ESR1_ACKERR_MASK) /*!< CAN0_ESR1.ACKERR Field                  */
#define CAN_ESR1_BIT0ERR_MASK                    (0x4000U)                                           /*!< CAN0_ESR1.BIT0ERR Mask                  */
#define CAN_ESR1_BIT0ERR_SHIFT                   (14U)                                               /*!< CAN0_ESR1.BIT0ERR Position              */
#define CAN_ESR1_BIT0ERR(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT0ERR_SHIFT))&CAN_ESR1_BIT0ERR_MASK) /*!< CAN0_ESR1.BIT0ERR Field                 */
#define CAN_ESR1_BIT1ERR_MASK                    (0x8000U)                                           /*!< CAN0_ESR1.BIT1ERR Mask                  */
#define CAN_ESR1_BIT1ERR_SHIFT                   (15U)                                               /*!< CAN0_ESR1.BIT1ERR Position              */
#define CAN_ESR1_BIT1ERR(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT1ERR_SHIFT))&CAN_ESR1_BIT1ERR_MASK) /*!< CAN0_ESR1.BIT1ERR Field                 */
#define CAN_ESR1_RWRNINT_MASK                    (0x10000U)                                          /*!< CAN0_ESR1.RWRNINT Mask                  */
#define CAN_ESR1_RWRNINT_SHIFT                   (16U)                                               /*!< CAN0_ESR1.RWRNINT Position              */
#define CAN_ESR1_RWRNINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RWRNINT_SHIFT))&CAN_ESR1_RWRNINT_MASK) /*!< CAN0_ESR1.RWRNINT Field                 */
#define CAN_ESR1_TWRNINT_MASK                    (0x20000U)                                          /*!< CAN0_ESR1.TWRNINT Mask                  */
#define CAN_ESR1_TWRNINT_SHIFT                   (17U)                                               /*!< CAN0_ESR1.TWRNINT Position              */
#define CAN_ESR1_TWRNINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TWRNINT_SHIFT))&CAN_ESR1_TWRNINT_MASK) /*!< CAN0_ESR1.TWRNINT Field                 */
#define CAN_ESR1_SYNCH_MASK                      (0x40000U)                                          /*!< CAN0_ESR1.SYNCH Mask                    */
#define CAN_ESR1_SYNCH_SHIFT                     (18U)                                               /*!< CAN0_ESR1.SYNCH Position                */
#define CAN_ESR1_SYNCH(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_SYNCH_SHIFT))&CAN_ESR1_SYNCH_MASK) /*!< CAN0_ESR1.SYNCH Field                   */
#define CAN_ESR1_BOFFDONEINT_MASK                (0x80000U)                                          /*!< CAN0_ESR1.BOFFDONEINT Mask              */
#define CAN_ESR1_BOFFDONEINT_SHIFT               (19U)                                               /*!< CAN0_ESR1.BOFFDONEINT Position          */
#define CAN_ESR1_BOFFDONEINT(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BOFFDONEINT_SHIFT))&CAN_ESR1_BOFFDONEINT_MASK) /*!< CAN0_ESR1.BOFFDONEINT Field             */
#define CAN_ESR1_ERROVR_MASK                     (0x200000U)                                         /*!< CAN0_ESR1.ERROVR Mask                   */
#define CAN_ESR1_ERROVR_SHIFT                    (21U)                                               /*!< CAN0_ESR1.ERROVR Position               */
#define CAN_ESR1_ERROVR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ERROVR_SHIFT))&CAN_ESR1_ERROVR_MASK) /*!< CAN0_ESR1.ERROVR Field                  */

/*! @name IMASK2 - Interrupt Masks 2 Register */
#define CAN_IMASK2_BUFHM_MASK                    (0xFFFFFFFFU)                                       /*!< CAN0_IMASK2.BUFHM Mask                  */
#define CAN_IMASK2_BUFHM_SHIFT                   (0U)                                                /*!< CAN0_IMASK2.BUFHM Position              */
#define CAN_IMASK2_BUFHM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IMASK2_BUFHM_SHIFT))&CAN_IMASK2_BUFHM_MASK) /*!< CAN0_IMASK2.BUFHM Field                 */

/*! @name IMASK1 - Interrupt Masks 1 register */
#define CAN_IMASK1_BUFLM_MASK                    (0xFFFFFFFFU)                                       /*!< CAN0_IMASK1.BUFLM Mask                  */
#define CAN_IMASK1_BUFLM_SHIFT                   (0U)                                                /*!< CAN0_IMASK1.BUFLM Position              */
#define CAN_IMASK1_BUFLM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IMASK1_BUFLM_SHIFT))&CAN_IMASK1_BUFLM_MASK) /*!< CAN0_IMASK1.BUFLM Field                 */

/*! @name IFLAG2 - Interrupt Flags 2 Register */
#define CAN_IFLAG2_BUFHI_MASK                    (0xFFFFFFFFU)                                       /*!< CAN0_IFLAG2.BUFHI Mask                  */
#define CAN_IFLAG2_BUFHI_SHIFT                   (0U)                                                /*!< CAN0_IFLAG2.BUFHI Position              */
#define CAN_IFLAG2_BUFHI(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG2_BUFHI_SHIFT))&CAN_IFLAG2_BUFHI_MASK) /*!< CAN0_IFLAG2.BUFHI Field                 */

/*! @name IFLAG1 - Interrupt Flags 1 register */
#define CAN_IFLAG1_BUF4TO0I_MASK                 (0x1FU)                                             /*!< CAN0_IFLAG1.BUF4TO0I Mask               */
#define CAN_IFLAG1_BUF4TO0I_SHIFT                (0U)                                                /*!< CAN0_IFLAG1.BUF4TO0I Position           */
#define CAN_IFLAG1_BUF4TO0I(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF4TO0I_SHIFT))&CAN_IFLAG1_BUF4TO0I_MASK) /*!< CAN0_IFLAG1.BUF4TO0I Field              */
#define CAN_IFLAG1_BUF5I_MASK                    (0x20U)                                             /*!< CAN0_IFLAG1.BUF5I Mask                  */
#define CAN_IFLAG1_BUF5I_SHIFT                   (5U)                                                /*!< CAN0_IFLAG1.BUF5I Position              */
#define CAN_IFLAG1_BUF5I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF5I_SHIFT))&CAN_IFLAG1_BUF5I_MASK) /*!< CAN0_IFLAG1.BUF5I Field                 */
#define CAN_IFLAG1_BUF6I_MASK                    (0x40U)                                             /*!< CAN0_IFLAG1.BUF6I Mask                  */
#define CAN_IFLAG1_BUF6I_SHIFT                   (6U)                                                /*!< CAN0_IFLAG1.BUF6I Position              */
#define CAN_IFLAG1_BUF6I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF6I_SHIFT))&CAN_IFLAG1_BUF6I_MASK) /*!< CAN0_IFLAG1.BUF6I Field                 */
#define CAN_IFLAG1_BUF7I_MASK                    (0x80U)                                             /*!< CAN0_IFLAG1.BUF7I Mask                  */
#define CAN_IFLAG1_BUF7I_SHIFT                   (7U)                                                /*!< CAN0_IFLAG1.BUF7I Position              */
#define CAN_IFLAG1_BUF7I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF7I_SHIFT))&CAN_IFLAG1_BUF7I_MASK) /*!< CAN0_IFLAG1.BUF7I Field                 */
#define CAN_IFLAG1_BUF31TO8I_MASK                (0xFFFFFF00U)                                       /*!< CAN0_IFLAG1.BUF31TO8I Mask              */
#define CAN_IFLAG1_BUF31TO8I_SHIFT               (8U)                                                /*!< CAN0_IFLAG1.BUF31TO8I Position          */
#define CAN_IFLAG1_BUF31TO8I(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF31TO8I_SHIFT))&CAN_IFLAG1_BUF31TO8I_MASK) /*!< CAN0_IFLAG1.BUF31TO8I Field             */

/*! @name CTRL2 - Control 2 Register */
#define CAN_CTRL2_EACEN_MASK                     (0x10000U)                                          /*!< CAN0_CTRL2.EACEN Mask                   */
#define CAN_CTRL2_EACEN_SHIFT                    (16U)                                               /*!< CAN0_CTRL2.EACEN Position               */
#define CAN_CTRL2_EACEN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_EACEN_SHIFT))&CAN_CTRL2_EACEN_MASK) /*!< CAN0_CTRL2.EACEN Field                  */
#define CAN_CTRL2_RRS_MASK                       (0x20000U)                                          /*!< CAN0_CTRL2.RRS Mask                     */
#define CAN_CTRL2_RRS_SHIFT                      (17U)                                               /*!< CAN0_CTRL2.RRS Position                 */
#define CAN_CTRL2_RRS(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RRS_SHIFT))&CAN_CTRL2_RRS_MASK) /*!< CAN0_CTRL2.RRS Field                    */
#define CAN_CTRL2_MRP_MASK                       (0x40000U)                                          /*!< CAN0_CTRL2.MRP Mask                     */
#define CAN_CTRL2_MRP_SHIFT                      (18U)                                               /*!< CAN0_CTRL2.MRP Position                 */
#define CAN_CTRL2_MRP(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_MRP_SHIFT))&CAN_CTRL2_MRP_MASK) /*!< CAN0_CTRL2.MRP Field                    */
#define CAN_CTRL2_TASD_MASK                      (0xF80000U)                                         /*!< CAN0_CTRL2.TASD Mask                    */
#define CAN_CTRL2_TASD_SHIFT                     (19U)                                               /*!< CAN0_CTRL2.TASD Position                */
#define CAN_CTRL2_TASD(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_TASD_SHIFT))&CAN_CTRL2_TASD_MASK) /*!< CAN0_CTRL2.TASD Field                   */
#define CAN_CTRL2_RFFN_MASK                      (0xF000000U)                                        /*!< CAN0_CTRL2.RFFN Mask                    */
#define CAN_CTRL2_RFFN_SHIFT                     (24U)                                               /*!< CAN0_CTRL2.RFFN Position                */
#define CAN_CTRL2_RFFN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RFFN_SHIFT))&CAN_CTRL2_RFFN_MASK) /*!< CAN0_CTRL2.RFFN Field                   */
#define CAN_CTRL2_BOFFDONEMSK_MASK               (0x40000000U)                                       /*!< CAN0_CTRL2.BOFFDONEMSK Mask             */
#define CAN_CTRL2_BOFFDONEMSK_SHIFT              (30U)                                               /*!< CAN0_CTRL2.BOFFDONEMSK Position         */
#define CAN_CTRL2_BOFFDONEMSK(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_BOFFDONEMSK_SHIFT))&CAN_CTRL2_BOFFDONEMSK_MASK) /*!< CAN0_CTRL2.BOFFDONEMSK Field            */

/*! @name ESR2 - Error and Status 2 register */
#define CAN_ESR2_IMB_MASK                        (0x2000U)                                           /*!< CAN0_ESR2.IMB Mask                      */
#define CAN_ESR2_IMB_SHIFT                       (13U)                                               /*!< CAN0_ESR2.IMB Position                  */
#define CAN_ESR2_IMB(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_IMB_SHIFT))&CAN_ESR2_IMB_MASK) /*!< CAN0_ESR2.IMB Field                     */
#define CAN_ESR2_VPS_MASK                        (0x4000U)                                           /*!< CAN0_ESR2.VPS Mask                      */
#define CAN_ESR2_VPS_SHIFT                       (14U)                                               /*!< CAN0_ESR2.VPS Position                  */
#define CAN_ESR2_VPS(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_VPS_SHIFT))&CAN_ESR2_VPS_MASK) /*!< CAN0_ESR2.VPS Field                     */
#define CAN_ESR2_LPTM_MASK                       (0x7F0000U)                                         /*!< CAN0_ESR2.LPTM Mask                     */
#define CAN_ESR2_LPTM_SHIFT                      (16U)                                               /*!< CAN0_ESR2.LPTM Position                 */
#define CAN_ESR2_LPTM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_LPTM_SHIFT))&CAN_ESR2_LPTM_MASK) /*!< CAN0_ESR2.LPTM Field                    */

/*! @name CRCR - CRC Register */
#define CAN_CRCR_TXCRC_MASK                      (0x7FFFU)                                           /*!< CAN0_CRCR.TXCRC Mask                    */
#define CAN_CRCR_TXCRC_SHIFT                     (0U)                                                /*!< CAN0_CRCR.TXCRC Position                */
#define CAN_CRCR_TXCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_TXCRC_SHIFT))&CAN_CRCR_TXCRC_MASK) /*!< CAN0_CRCR.TXCRC Field                   */
#define CAN_CRCR_MBCRC_MASK                      (0x7F0000U)                                         /*!< CAN0_CRCR.MBCRC Mask                    */
#define CAN_CRCR_MBCRC_SHIFT                     (16U)                                               /*!< CAN0_CRCR.MBCRC Position                */
#define CAN_CRCR_MBCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_MBCRC_SHIFT))&CAN_CRCR_MBCRC_MASK) /*!< CAN0_CRCR.MBCRC Field                   */

/*! @name RXFGMASK - Rx FIFO Global Mask register */
#define CAN_RXFGMASK_FGM_MASK                    (0xFFFFFFFFU)                                       /*!< CAN0_RXFGMASK.FGM Mask                  */
#define CAN_RXFGMASK_FGM_SHIFT                   (0U)                                                /*!< CAN0_RXFGMASK.FGM Position              */
#define CAN_RXFGMASK_FGM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_FGM_SHIFT))&CAN_RXFGMASK_FGM_MASK) /*!< CAN0_RXFGMASK.FGM Field                 */

/*! @name RXFGMASK_A - Rx FIFO Global Mask register (format A) */
#define CAN_RXFGMASK_A_RXIDA_EXT_MASK            (0x3FFFFFFEU)                                       /*!< CAN0_RXFGMASK_A.RXIDA_EXT Mask          */
#define CAN_RXFGMASK_A_RXIDA_EXT_SHIFT           (1U)                                                /*!< CAN0_RXFGMASK_A.RXIDA_EXT Position      */
#define CAN_RXFGMASK_A_RXIDA_EXT(x)              (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_RXIDA_EXT_SHIFT))&CAN_RXFGMASK_A_RXIDA_EXT_MASK) /*!< CAN0_RXFGMASK_A.RXIDA_EXT Field         */
#define CAN_RXFGMASK_A_RXIDA_STD_MASK            (0x3FF80000U)                                       /*!< CAN0_RXFGMASK_A.RXIDA_STD Mask          */
#define CAN_RXFGMASK_A_RXIDA_STD_SHIFT           (19U)                                               /*!< CAN0_RXFGMASK_A.RXIDA_STD Position      */
#define CAN_RXFGMASK_A_RXIDA_STD(x)              (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_RXIDA_STD_SHIFT))&CAN_RXFGMASK_A_RXIDA_STD_MASK) /*!< CAN0_RXFGMASK_A.RXIDA_STD Field         */
#define CAN_RXFGMASK_A_IDEA_MASK                 (0x40000000U)                                       /*!< CAN0_RXFGMASK_A.IDEA Mask               */
#define CAN_RXFGMASK_A_IDEA_SHIFT                (30U)                                               /*!< CAN0_RXFGMASK_A.IDEA Position           */
#define CAN_RXFGMASK_A_IDEA(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_IDEA_SHIFT))&CAN_RXFGMASK_A_IDEA_MASK) /*!< CAN0_RXFGMASK_A.IDEA Field              */
#define CAN_RXFGMASK_A_RTRA_MASK                 (0x80000000U)                                       /*!< CAN0_RXFGMASK_A.RTRA Mask               */
#define CAN_RXFGMASK_A_RTRA_SHIFT                (31U)                                               /*!< CAN0_RXFGMASK_A.RTRA Position           */
#define CAN_RXFGMASK_A_RTRA(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_RTRA_SHIFT))&CAN_RXFGMASK_A_RTRA_MASK) /*!< CAN0_RXFGMASK_A.RTRA Field              */

/*! @name RXFGMASK_B - Rx FIFO Global Mask register (format B) */
#define CAN_RXFGMASK_B_RXIDB_EXT_1_MASK          (0x3FFFU)                                           /*!< CAN0_RXFGMASK_B.RXIDB_EXT_1 Mask        */
#define CAN_RXFGMASK_B_RXIDB_EXT_1_SHIFT         (0U)                                                /*!< CAN0_RXFGMASK_B.RXIDB_EXT_1 Position    */
#define CAN_RXFGMASK_B_RXIDB_EXT_1(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_EXT_1_SHIFT))&CAN_RXFGMASK_B_RXIDB_EXT_1_MASK) /*!< CAN0_RXFGMASK_B.RXIDB_EXT_1 Field       */
#define CAN_RXFGMASK_B_RXIDB_STD_1_MASK          (0x3FF8U)                                           /*!< CAN0_RXFGMASK_B.RXIDB_STD_1 Mask        */
#define CAN_RXFGMASK_B_RXIDB_STD_1_SHIFT         (3U)                                                /*!< CAN0_RXFGMASK_B.RXIDB_STD_1 Position    */
#define CAN_RXFGMASK_B_RXIDB_STD_1(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_STD_1_SHIFT))&CAN_RXFGMASK_B_RXIDB_STD_1_MASK) /*!< CAN0_RXFGMASK_B.RXIDB_STD_1 Field       */
#define CAN_RXFGMASK_B_IDEB_1_MASK               (0x4000U)                                           /*!< CAN0_RXFGMASK_B.IDEB_1 Mask             */
#define CAN_RXFGMASK_B_IDEB_1_SHIFT              (14U)                                               /*!< CAN0_RXFGMASK_B.IDEB_1 Position         */
#define CAN_RXFGMASK_B_IDEB_1(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_IDEB_1_SHIFT))&CAN_RXFGMASK_B_IDEB_1_MASK) /*!< CAN0_RXFGMASK_B.IDEB_1 Field            */
#define CAN_RXFGMASK_B_RTRB_1_MASK               (0x8000U)                                           /*!< CAN0_RXFGMASK_B.RTRB_1 Mask             */
#define CAN_RXFGMASK_B_RTRB_1_SHIFT              (15U)                                               /*!< CAN0_RXFGMASK_B.RTRB_1 Position         */
#define CAN_RXFGMASK_B_RTRB_1(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RTRB_1_SHIFT))&CAN_RXFGMASK_B_RTRB_1_MASK) /*!< CAN0_RXFGMASK_B.RTRB_1 Field            */
#define CAN_RXFGMASK_B_RXIDB_EXT_0_MASK          (0x3FFF0000U)                                       /*!< CAN0_RXFGMASK_B.RXIDB_EXT_0 Mask        */
#define CAN_RXFGMASK_B_RXIDB_EXT_0_SHIFT         (16U)                                               /*!< CAN0_RXFGMASK_B.RXIDB_EXT_0 Position    */
#define CAN_RXFGMASK_B_RXIDB_EXT_0(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_EXT_0_SHIFT))&CAN_RXFGMASK_B_RXIDB_EXT_0_MASK) /*!< CAN0_RXFGMASK_B.RXIDB_EXT_0 Field       */
#define CAN_RXFGMASK_B_RXIDB_STD_0_MASK          (0x3FF80000U)                                       /*!< CAN0_RXFGMASK_B.RXIDB_STD_0 Mask        */
#define CAN_RXFGMASK_B_RXIDB_STD_0_SHIFT         (19U)                                               /*!< CAN0_RXFGMASK_B.RXIDB_STD_0 Position    */
#define CAN_RXFGMASK_B_RXIDB_STD_0(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_STD_0_SHIFT))&CAN_RXFGMASK_B_RXIDB_STD_0_MASK) /*!< CAN0_RXFGMASK_B.RXIDB_STD_0 Field       */
#define CAN_RXFGMASK_B_IDEB_0_MASK               (0x40000000U)                                       /*!< CAN0_RXFGMASK_B.IDEB_0 Mask             */
#define CAN_RXFGMASK_B_IDEB_0_SHIFT              (30U)                                               /*!< CAN0_RXFGMASK_B.IDEB_0 Position         */
#define CAN_RXFGMASK_B_IDEB_0(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_IDEB_0_SHIFT))&CAN_RXFGMASK_B_IDEB_0_MASK) /*!< CAN0_RXFGMASK_B.IDEB_0 Field            */
#define CAN_RXFGMASK_B_RTRB_0_MASK               (0x80000000U)                                       /*!< CAN0_RXFGMASK_B.RTRB_0 Mask             */
#define CAN_RXFGMASK_B_RTRB_0_SHIFT              (31U)                                               /*!< CAN0_RXFGMASK_B.RTRB_0 Position         */
#define CAN_RXFGMASK_B_RTRB_0(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RTRB_0_SHIFT))&CAN_RXFGMASK_B_RTRB_0_MASK) /*!< CAN0_RXFGMASK_B.RTRB_0 Field            */

/*! @name RXFGMASK_C - Rx FIFO Global Mask register (format C) */
#define CAN_RXFGMASK_C_RXIDC_3_MASK              (0xFFU)                                             /*!< CAN0_RXFGMASK_C.RXIDC_3 Mask            */
#define CAN_RXFGMASK_C_RXIDC_3_SHIFT             (0U)                                                /*!< CAN0_RXFGMASK_C.RXIDC_3 Position        */
#define CAN_RXFGMASK_C_RXIDC_3(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_3_SHIFT))&CAN_RXFGMASK_C_RXIDC_3_MASK) /*!< CAN0_RXFGMASK_C.RXIDC_3 Field           */
#define CAN_RXFGMASK_C_RXIDC_2_MASK              (0xFF00U)                                           /*!< CAN0_RXFGMASK_C.RXIDC_2 Mask            */
#define CAN_RXFGMASK_C_RXIDC_2_SHIFT             (8U)                                                /*!< CAN0_RXFGMASK_C.RXIDC_2 Position        */
#define CAN_RXFGMASK_C_RXIDC_2(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_2_SHIFT))&CAN_RXFGMASK_C_RXIDC_2_MASK) /*!< CAN0_RXFGMASK_C.RXIDC_2 Field           */
#define CAN_RXFGMASK_C_RXIDC_1_MASK              (0xFF0000U)                                         /*!< CAN0_RXFGMASK_C.RXIDC_1 Mask            */
#define CAN_RXFGMASK_C_RXIDC_1_SHIFT             (16U)                                               /*!< CAN0_RXFGMASK_C.RXIDC_1 Position        */
#define CAN_RXFGMASK_C_RXIDC_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_1_SHIFT))&CAN_RXFGMASK_C_RXIDC_1_MASK) /*!< CAN0_RXFGMASK_C.RXIDC_1 Field           */
#define CAN_RXFGMASK_C_RXIDC_0_MASK              (0xFF000000U)                                       /*!< CAN0_RXFGMASK_C.RXIDC_0 Mask            */
#define CAN_RXFGMASK_C_RXIDC_0_SHIFT             (24U)                                               /*!< CAN0_RXFGMASK_C.RXIDC_0 Position        */
#define CAN_RXFGMASK_C_RXIDC_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_0_SHIFT))&CAN_RXFGMASK_C_RXIDC_0_MASK) /*!< CAN0_RXFGMASK_C.RXIDC_0 Field           */

/*! @name RXFIR - Rx FIFO Information Register */
#define CAN_RXFIR_IDHIT_MASK                     (0x1FFU)                                            /*!< CAN0_RXFIR.IDHIT Mask                   */
#define CAN_RXFIR_IDHIT_SHIFT                    (0U)                                                /*!< CAN0_RXFIR.IDHIT Position               */
#define CAN_RXFIR_IDHIT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXFIR_IDHIT_SHIFT))&CAN_RXFIR_IDHIT_MASK) /*!< CAN0_RXFIR.IDHIT Field                  */

/*! @name CBT - CAN Bit Timing Register */
#define CAN_CBT_EPSEG2_MASK                      (0x1FU)                                             /*!< CAN0_CBT.EPSEG2 Mask                    */
#define CAN_CBT_EPSEG2_SHIFT                     (0U)                                                /*!< CAN0_CBT.EPSEG2 Position                */
#define CAN_CBT_EPSEG2(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPSEG2_SHIFT))&CAN_CBT_EPSEG2_MASK) /*!< CAN0_CBT.EPSEG2 Field                   */
#define CAN_CBT_EPSEG1_MASK                      (0x3E0U)                                            /*!< CAN0_CBT.EPSEG1 Mask                    */
#define CAN_CBT_EPSEG1_SHIFT                     (5U)                                                /*!< CAN0_CBT.EPSEG1 Position                */
#define CAN_CBT_EPSEG1(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPSEG1_SHIFT))&CAN_CBT_EPSEG1_MASK) /*!< CAN0_CBT.EPSEG1 Field                   */
#define CAN_CBT_EPROPSEG_MASK                    (0xFC00U)                                           /*!< CAN0_CBT.EPROPSEG Mask                  */
#define CAN_CBT_EPROPSEG_SHIFT                   (10U)                                               /*!< CAN0_CBT.EPROPSEG Position              */
#define CAN_CBT_EPROPSEG(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPROPSEG_SHIFT))&CAN_CBT_EPROPSEG_MASK) /*!< CAN0_CBT.EPROPSEG Field                 */
#define CAN_CBT_ERJW_MASK                        (0xF0000U)                                          /*!< CAN0_CBT.ERJW Mask                      */
#define CAN_CBT_ERJW_SHIFT                       (16U)                                               /*!< CAN0_CBT.ERJW Position                  */
#define CAN_CBT_ERJW(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_CBT_ERJW_SHIFT))&CAN_CBT_ERJW_MASK) /*!< CAN0_CBT.ERJW Field                     */
#define CAN_CBT_EPRESDIV_MASK                    (0x7FE00000U)                                       /*!< CAN0_CBT.EPRESDIV Mask                  */
#define CAN_CBT_EPRESDIV_SHIFT                   (21U)                                               /*!< CAN0_CBT.EPRESDIV Position              */
#define CAN_CBT_EPRESDIV(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CBT_EPRESDIV_SHIFT))&CAN_CBT_EPRESDIV_MASK) /*!< CAN0_CBT.EPRESDIV Field                 */
#define CAN_CBT_BTF_MASK                         (0x80000000U)                                       /*!< CAN0_CBT.BTF Mask                       */
#define CAN_CBT_BTF_SHIFT                        (31U)                                               /*!< CAN0_CBT.BTF Position                   */
#define CAN_CBT_BTF(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_CBT_BTF_SHIFT))&CAN_CBT_BTF_MASK) /*!< CAN0_CBT.BTF Field                      */

/*! @name CS - Message Buffer 0 CS Register */
#define CAN_CS_TIME_STAMP_MASK                   (0xFFFFU)                                           /*!< CAN0_CS.TIME_STAMP Mask                 */
#define CAN_CS_TIME_STAMP_SHIFT                  (0U)                                                /*!< CAN0_CS.TIME_STAMP Position             */
#define CAN_CS_TIME_STAMP(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CS_TIME_STAMP_SHIFT))&CAN_CS_TIME_STAMP_MASK) /*!< CAN0_CS.TIME_STAMP Field                */
#define CAN_CS_DLC_MASK                          (0xF0000U)                                          /*!< CAN0_CS.DLC Mask                        */
#define CAN_CS_DLC_SHIFT                         (16U)                                               /*!< CAN0_CS.DLC Position                    */
#define CAN_CS_DLC(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_DLC_SHIFT))&CAN_CS_DLC_MASK) /*!< CAN0_CS.DLC Field                       */
#define CAN_CS_RTR_MASK                          (0x100000U)                                         /*!< CAN0_CS.RTR Mask                        */
#define CAN_CS_RTR_SHIFT                         (20U)                                               /*!< CAN0_CS.RTR Position                    */
#define CAN_CS_RTR(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_RTR_SHIFT))&CAN_CS_RTR_MASK) /*!< CAN0_CS.RTR Field                       */
#define CAN_CS_IDE_MASK                          (0x200000U)                                         /*!< CAN0_CS.IDE Mask                        */
#define CAN_CS_IDE_SHIFT                         (21U)                                               /*!< CAN0_CS.IDE Position                    */
#define CAN_CS_IDE(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_IDE_SHIFT))&CAN_CS_IDE_MASK) /*!< CAN0_CS.IDE Field                       */
#define CAN_CS_SRR_MASK                          (0x400000U)                                         /*!< CAN0_CS.SRR Mask                        */
#define CAN_CS_SRR_SHIFT                         (22U)                                               /*!< CAN0_CS.SRR Position                    */
#define CAN_CS_SRR(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_SRR_SHIFT))&CAN_CS_SRR_MASK) /*!< CAN0_CS.SRR Field                       */
#define CAN_CS_CODE_MASK                         (0xF000000U)                                        /*!< CAN0_CS.CODE Mask                       */
#define CAN_CS_CODE_SHIFT                        (24U)                                               /*!< CAN0_CS.CODE Position                   */
#define CAN_CS_CODE(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_CS_CODE_SHIFT))&CAN_CS_CODE_MASK) /*!< CAN0_CS.CODE Field                      */
#define CAN_CS_ESI_MASK                          (0x20000000U)                                       /*!< CAN0_CS.ESI Mask                        */
#define CAN_CS_ESI_SHIFT                         (29U)                                               /*!< CAN0_CS.ESI Position                    */
#define CAN_CS_ESI(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_ESI_SHIFT))&CAN_CS_ESI_MASK) /*!< CAN0_CS.ESI Field                       */
#define CAN_CS_BRS_MASK                          (0x40000000U)                                       /*!< CAN0_CS.BRS Mask                        */
#define CAN_CS_BRS_SHIFT                         (30U)                                               /*!< CAN0_CS.BRS Position                    */
#define CAN_CS_BRS(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_BRS_SHIFT))&CAN_CS_BRS_MASK) /*!< CAN0_CS.BRS Field                       */
#define CAN_CS_EDL_MASK                          (0x80000000U)                                       /*!< CAN0_CS.EDL Mask                        */
#define CAN_CS_EDL_SHIFT                         (31U)                                               /*!< CAN0_CS.EDL Position                    */
#define CAN_CS_EDL(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_EDL_SHIFT))&CAN_CS_EDL_MASK) /*!< CAN0_CS.EDL Field                       */

/*! @name ID - Message Buffer 0 ID Register */
#define CAN_ID_EXT_MASK                          (0x1FFFFFFFU)                                       /*!< CAN0_ID.EXT Mask                        */
#define CAN_ID_EXT_SHIFT                         (0U)                                                /*!< CAN0_ID.EXT Position                    */
#define CAN_ID_EXT(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_ID_EXT_SHIFT))&CAN_ID_EXT_MASK) /*!< CAN0_ID.EXT Field                       */
#define CAN_ID_STD_MASK                          (0x1FFC0000U)                                       /*!< CAN0_ID.STD Mask                        */
#define CAN_ID_STD_SHIFT                         (18U)                                               /*!< CAN0_ID.STD Position                    */
#define CAN_ID_STD(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_ID_STD_SHIFT))&CAN_ID_STD_MASK) /*!< CAN0_ID.STD Field                       */
#define CAN_ID_PRIO_MASK                         (0xE0000000U)                                       /*!< CAN0_ID.PRIO Mask                       */
#define CAN_ID_PRIO_SHIFT                        (29U)                                               /*!< CAN0_ID.PRIO Position                   */
#define CAN_ID_PRIO(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ID_PRIO_SHIFT))&CAN_ID_PRIO_MASK) /*!< CAN0_ID.PRIO Field                      */

/*! @name WORD0 - Message Buffer 0 WORD0 Register */
#define CAN_WORD0_DATA_BYTE_3_MASK               (0xFFU)                                             /*!< CAN0_WORD0.DATA_BYTE_3 Mask             */
#define CAN_WORD0_DATA_BYTE_3_SHIFT              (0U)                                                /*!< CAN0_WORD0.DATA_BYTE_3 Position         */
#define CAN_WORD0_DATA_BYTE_3(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_3_SHIFT))&CAN_WORD0_DATA_BYTE_3_MASK) /*!< CAN0_WORD0.DATA_BYTE_3 Field            */
#define CAN_WORD0_DATA_BYTE_2_MASK               (0xFF00U)                                           /*!< CAN0_WORD0.DATA_BYTE_2 Mask             */
#define CAN_WORD0_DATA_BYTE_2_SHIFT              (8U)                                                /*!< CAN0_WORD0.DATA_BYTE_2 Position         */
#define CAN_WORD0_DATA_BYTE_2(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_2_SHIFT))&CAN_WORD0_DATA_BYTE_2_MASK) /*!< CAN0_WORD0.DATA_BYTE_2 Field            */
#define CAN_WORD0_DATA_BYTE_1_MASK               (0xFF0000U)                                         /*!< CAN0_WORD0.DATA_BYTE_1 Mask             */
#define CAN_WORD0_DATA_BYTE_1_SHIFT              (16U)                                               /*!< CAN0_WORD0.DATA_BYTE_1 Position         */
#define CAN_WORD0_DATA_BYTE_1(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_1_SHIFT))&CAN_WORD0_DATA_BYTE_1_MASK) /*!< CAN0_WORD0.DATA_BYTE_1 Field            */
#define CAN_WORD0_DATA_BYTE_0_MASK               (0xFF000000U)                                       /*!< CAN0_WORD0.DATA_BYTE_0 Mask             */
#define CAN_WORD0_DATA_BYTE_0_SHIFT              (24U)                                               /*!< CAN0_WORD0.DATA_BYTE_0 Position         */
#define CAN_WORD0_DATA_BYTE_0(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_0_SHIFT))&CAN_WORD0_DATA_BYTE_0_MASK) /*!< CAN0_WORD0.DATA_BYTE_0 Field            */

/*! @name WORD1 - Message Buffer 0 WORD1 Register */
#define CAN_WORD1_DATA_BYTE_7_MASK               (0xFFU)                                             /*!< CAN0_WORD1.DATA_BYTE_7 Mask             */
#define CAN_WORD1_DATA_BYTE_7_SHIFT              (0U)                                                /*!< CAN0_WORD1.DATA_BYTE_7 Position         */
#define CAN_WORD1_DATA_BYTE_7(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_7_SHIFT))&CAN_WORD1_DATA_BYTE_7_MASK) /*!< CAN0_WORD1.DATA_BYTE_7 Field            */
#define CAN_WORD1_DATA_BYTE_6_MASK               (0xFF00U)                                           /*!< CAN0_WORD1.DATA_BYTE_6 Mask             */
#define CAN_WORD1_DATA_BYTE_6_SHIFT              (8U)                                                /*!< CAN0_WORD1.DATA_BYTE_6 Position         */
#define CAN_WORD1_DATA_BYTE_6(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_6_SHIFT))&CAN_WORD1_DATA_BYTE_6_MASK) /*!< CAN0_WORD1.DATA_BYTE_6 Field            */
#define CAN_WORD1_DATA_BYTE_5_MASK               (0xFF0000U)                                         /*!< CAN0_WORD1.DATA_BYTE_5 Mask             */
#define CAN_WORD1_DATA_BYTE_5_SHIFT              (16U)                                               /*!< CAN0_WORD1.DATA_BYTE_5 Position         */
#define CAN_WORD1_DATA_BYTE_5(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_5_SHIFT))&CAN_WORD1_DATA_BYTE_5_MASK) /*!< CAN0_WORD1.DATA_BYTE_5 Field            */
#define CAN_WORD1_DATA_BYTE_4_MASK               (0xFF000000U)                                       /*!< CAN0_WORD1.DATA_BYTE_4 Mask             */
#define CAN_WORD1_DATA_BYTE_4_SHIFT              (24U)                                               /*!< CAN0_WORD1.DATA_BYTE_4 Position         */
#define CAN_WORD1_DATA_BYTE_4(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_4_SHIFT))&CAN_WORD1_DATA_BYTE_4_MASK) /*!< CAN0_WORD1.DATA_BYTE_4 Field            */

/*! @name CS - FIFO Message Buffer CS Register */
#define CAN_CS_IDHIT_MASK                        (0xFF000000U)                                       /*!< CAN0_CS.IDHIT Mask                      */
#define CAN_CS_IDHIT_SHIFT                       (24U)                                               /*!< CAN0_CS.IDHIT Position                  */
#define CAN_CS_IDHIT(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_CS_IDHIT_SHIFT))&CAN_CS_IDHIT_MASK) /*!< CAN0_CS.IDHIT Field                     */

/*! @name ID - FIFO Message Buffer ID Register */

/*! @name WORD0 - FIFO Message Buffer WORD0 Register */

/*! @name WORD1 - FIFO Message Buffer WORD1 Register */

/*! @name FILTER_ID - FIFO Message Filter ID */

/*! @name FILTER_ID_A - FIFO Message Filter ID (format A) */
#define CAN_FILTER_ID_A_RXIDA_EXT_MASK           (0x3FFFFFFEU)                                       /*!< CAN0_FILTER_ID_A.RXIDA_EXT Mask         */
#define CAN_FILTER_ID_A_RXIDA_EXT_SHIFT          (1U)                                                /*!< CAN0_FILTER_ID_A.RXIDA_EXT Position     */
#define CAN_FILTER_ID_A_RXIDA_EXT(x)             (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_RXIDA_EXT_SHIFT))&CAN_FILTER_ID_A_RXIDA_EXT_MASK) /*!< CAN0_FILTER_ID_A.RXIDA_EXT Field        */
#define CAN_FILTER_ID_A_RXIDA_STD_MASK           (0x3FF80000U)                                       /*!< CAN0_FILTER_ID_A.RXIDA_STD Mask         */
#define CAN_FILTER_ID_A_RXIDA_STD_SHIFT          (19U)                                               /*!< CAN0_FILTER_ID_A.RXIDA_STD Position     */
#define CAN_FILTER_ID_A_RXIDA_STD(x)             (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_RXIDA_STD_SHIFT))&CAN_FILTER_ID_A_RXIDA_STD_MASK) /*!< CAN0_FILTER_ID_A.RXIDA_STD Field        */
#define CAN_FILTER_ID_A_IDEA_MASK                (0x40000000U)                                       /*!< CAN0_FILTER_ID_A.IDEA Mask              */
#define CAN_FILTER_ID_A_IDEA_SHIFT               (30U)                                               /*!< CAN0_FILTER_ID_A.IDEA Position          */
#define CAN_FILTER_ID_A_IDEA(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_IDEA_SHIFT))&CAN_FILTER_ID_A_IDEA_MASK) /*!< CAN0_FILTER_ID_A.IDEA Field             */
#define CAN_FILTER_ID_A_RTRA_MASK                (0x80000000U)                                       /*!< CAN0_FILTER_ID_A.RTRA Mask              */
#define CAN_FILTER_ID_A_RTRA_SHIFT               (31U)                                               /*!< CAN0_FILTER_ID_A.RTRA Position          */
#define CAN_FILTER_ID_A_RTRA(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_RTRA_SHIFT))&CAN_FILTER_ID_A_RTRA_MASK) /*!< CAN0_FILTER_ID_A.RTRA Field             */

/*! @name FILTER_ID_B - FIFO Message Filter ID (format B) */
#define CAN_FILTER_ID_B_RXIDB_EXT_1_MASK         (0x3FFFU)                                           /*!< CAN0_FILTER_ID_B.RXIDB_EXT_1 Mask       */
#define CAN_FILTER_ID_B_RXIDB_EXT_1_SHIFT        (0U)                                                /*!< CAN0_FILTER_ID_B.RXIDB_EXT_1 Position   */
#define CAN_FILTER_ID_B_RXIDB_EXT_1(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_EXT_1_SHIFT))&CAN_FILTER_ID_B_RXIDB_EXT_1_MASK) /*!< CAN0_FILTER_ID_B.RXIDB_EXT_1 Field      */
#define CAN_FILTER_ID_B_RXIDB_STD_1_MASK         (0x3FF8U)                                           /*!< CAN0_FILTER_ID_B.RXIDB_STD_1 Mask       */
#define CAN_FILTER_ID_B_RXIDB_STD_1_SHIFT        (3U)                                                /*!< CAN0_FILTER_ID_B.RXIDB_STD_1 Position   */
#define CAN_FILTER_ID_B_RXIDB_STD_1(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_STD_1_SHIFT))&CAN_FILTER_ID_B_RXIDB_STD_1_MASK) /*!< CAN0_FILTER_ID_B.RXIDB_STD_1 Field      */
#define CAN_FILTER_ID_B_IDEB_1_MASK              (0x4000U)                                           /*!< CAN0_FILTER_ID_B.IDEB_1 Mask            */
#define CAN_FILTER_ID_B_IDEB_1_SHIFT             (14U)                                               /*!< CAN0_FILTER_ID_B.IDEB_1 Position        */
#define CAN_FILTER_ID_B_IDEB_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_IDEB_1_SHIFT))&CAN_FILTER_ID_B_IDEB_1_MASK) /*!< CAN0_FILTER_ID_B.IDEB_1 Field           */
#define CAN_FILTER_ID_B_RTRB_1_MASK              (0x8000U)                                           /*!< CAN0_FILTER_ID_B.RTRB_1 Mask            */
#define CAN_FILTER_ID_B_RTRB_1_SHIFT             (15U)                                               /*!< CAN0_FILTER_ID_B.RTRB_1 Position        */
#define CAN_FILTER_ID_B_RTRB_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RTRB_1_SHIFT))&CAN_FILTER_ID_B_RTRB_1_MASK) /*!< CAN0_FILTER_ID_B.RTRB_1 Field           */
#define CAN_FILTER_ID_B_RXIDB_EXT_0_MASK         (0x3FFF0000U)                                       /*!< CAN0_FILTER_ID_B.RXIDB_EXT_0 Mask       */
#define CAN_FILTER_ID_B_RXIDB_EXT_0_SHIFT        (16U)                                               /*!< CAN0_FILTER_ID_B.RXIDB_EXT_0 Position   */
#define CAN_FILTER_ID_B_RXIDB_EXT_0(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_EXT_0_SHIFT))&CAN_FILTER_ID_B_RXIDB_EXT_0_MASK) /*!< CAN0_FILTER_ID_B.RXIDB_EXT_0 Field      */
#define CAN_FILTER_ID_B_RXIDB_STD_0_MASK         (0x3FF80000U)                                       /*!< CAN0_FILTER_ID_B.RXIDB_STD_0 Mask       */
#define CAN_FILTER_ID_B_RXIDB_STD_0_SHIFT        (19U)                                               /*!< CAN0_FILTER_ID_B.RXIDB_STD_0 Position   */
#define CAN_FILTER_ID_B_RXIDB_STD_0(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_STD_0_SHIFT))&CAN_FILTER_ID_B_RXIDB_STD_0_MASK) /*!< CAN0_FILTER_ID_B.RXIDB_STD_0 Field      */
#define CAN_FILTER_ID_B_IDEB_0_MASK              (0x40000000U)                                       /*!< CAN0_FILTER_ID_B.IDEB_0 Mask            */
#define CAN_FILTER_ID_B_IDEB_0_SHIFT             (30U)                                               /*!< CAN0_FILTER_ID_B.IDEB_0 Position        */
#define CAN_FILTER_ID_B_IDEB_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_IDEB_0_SHIFT))&CAN_FILTER_ID_B_IDEB_0_MASK) /*!< CAN0_FILTER_ID_B.IDEB_0 Field           */
#define CAN_FILTER_ID_B_RTRB_0_MASK              (0x80000000U)                                       /*!< CAN0_FILTER_ID_B.RTRB_0 Mask            */
#define CAN_FILTER_ID_B_RTRB_0_SHIFT             (31U)                                               /*!< CAN0_FILTER_ID_B.RTRB_0 Position        */
#define CAN_FILTER_ID_B_RTRB_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RTRB_0_SHIFT))&CAN_FILTER_ID_B_RTRB_0_MASK) /*!< CAN0_FILTER_ID_B.RTRB_0 Field           */

/*! @name FILTER_ID_C - FIFO Message Filter ID (format C) */
#define CAN_FILTER_ID_C_RXIDC_3_MASK             (0xFFU)                                             /*!< CAN0_FILTER_ID_C.RXIDC_3 Mask           */
#define CAN_FILTER_ID_C_RXIDC_3_SHIFT            (0U)                                                /*!< CAN0_FILTER_ID_C.RXIDC_3 Position       */
#define CAN_FILTER_ID_C_RXIDC_3(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_3_SHIFT))&CAN_FILTER_ID_C_RXIDC_3_MASK) /*!< CAN0_FILTER_ID_C.RXIDC_3 Field          */
#define CAN_FILTER_ID_C_RXIDC_2_MASK             (0xFF00U)                                           /*!< CAN0_FILTER_ID_C.RXIDC_2 Mask           */
#define CAN_FILTER_ID_C_RXIDC_2_SHIFT            (8U)                                                /*!< CAN0_FILTER_ID_C.RXIDC_2 Position       */
#define CAN_FILTER_ID_C_RXIDC_2(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_2_SHIFT))&CAN_FILTER_ID_C_RXIDC_2_MASK) /*!< CAN0_FILTER_ID_C.RXIDC_2 Field          */
#define CAN_FILTER_ID_C_RXIDC_1_MASK             (0xFF0000U)                                         /*!< CAN0_FILTER_ID_C.RXIDC_1 Mask           */
#define CAN_FILTER_ID_C_RXIDC_1_SHIFT            (16U)                                               /*!< CAN0_FILTER_ID_C.RXIDC_1 Position       */
#define CAN_FILTER_ID_C_RXIDC_1(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_1_SHIFT))&CAN_FILTER_ID_C_RXIDC_1_MASK) /*!< CAN0_FILTER_ID_C.RXIDC_1 Field          */
#define CAN_FILTER_ID_C_RXIDC_0_MASK             (0xFF000000U)                                       /*!< CAN0_FILTER_ID_C.RXIDC_0 Mask           */
#define CAN_FILTER_ID_C_RXIDC_0_SHIFT            (24U)                                               /*!< CAN0_FILTER_ID_C.RXIDC_0 Position       */
#define CAN_FILTER_ID_C_RXIDC_0(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_0_SHIFT))&CAN_FILTER_ID_C_RXIDC_0_MASK) /*!< CAN0_FILTER_ID_C.RXIDC_0 Field          */

/*! @name RXIMR - Rx Individual Mask */
#define CAN_RXIMR_MI_MASK                        (0xFFFFFFFFU)                                       /*!< CAN0_RXIMR.MI Mask                      */
#define CAN_RXIMR_MI_SHIFT                       (0U)                                                /*!< CAN0_RXIMR.MI Position                  */
#define CAN_RXIMR_MI(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_RXIMR_MI_SHIFT))&CAN_RXIMR_MI_MASK) /*!< CAN0_RXIMR.MI Field                     */
/**
 * @} */ /* End group CAN_Register_Masks_GROUP 
 */

/* CAN0 - Peripheral instance base addresses */
#define CAN0_BasePtr                   0x40024000UL //!< Peripheral base address
#define CAN0                           ((CAN_Type *) CAN0_BasePtr) //!< Freescale base pointer
#define CAN0_BASE_PTR                  (CAN0) //!< Freescale style base pointer
/**
 * @} */ /* End group CAN_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup CAN_Peripheral_access_layer_GROUP CAN Peripheral Access Layer
* @brief C Struct for CAN
* @{
*/

/* ================================================================================ */
/* ================           CAN1 (derived from CAN0)             ================ */
/* ================================================================================ */

/**
 * @brief Flex Controller Area Network module
 */

/* CAN1 - Peripheral instance base addresses */
#define CAN1_BasePtr                   0x40025000UL //!< Peripheral base address
#define CAN1                           ((CAN_Type *) CAN1_BasePtr) //!< Freescale base pointer
#define CAN1_BASE_PTR                  (CAN1) //!< Freescale style base pointer
/**
 * @} */ /* End group CAN_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup CMP_Peripheral_access_layer_GROUP CMP Peripheral Access Layer
* @brief C Struct for CMP
* @{
*/

/* ================================================================================ */
/* ================           CMP0 (file:CMP0_MKV)                 ================ */
/* ================================================================================ */

/**
 * @brief Comparator, Voltage Ref, D-to-A Converter and Analog Mux
 */
/**
* @addtogroup CMP_structs_GROUP CMP struct
* @brief Struct for CMP
* @{
*/
typedef struct CMP_Type {
   __IO uint8_t   CR0;                          /**< 0000: CMP Control Register 0                                       */
   __IO uint8_t   CR1;                          /**< 0001: CMP Control Register 1                                       */
   __IO uint8_t   FPR;                          /**< 0002: CMP Filter Period Register                                   */
   __IO uint8_t   SCR;                          /**< 0003: CMP Status and Control Register                              */
   __IO uint8_t   DACCR;                        /**< 0004: DAC Control Register                                         */
   __IO uint8_t   MUXCR;                        /**< 0005: MUX Control Register                                         */
} CMP_Type;

/**
 * @} */ /* End group CMP_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'CMP0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup CMP_Register_Masks_GROUP CMP Register Masks
* @brief Register Masks for CMP
* @{
*/

/*! @name CR0 - CMP Control Register 0 */
#define CMP_CR0_HYSTCTR_MASK                     (0x3U)                                              /*!< CMP0_CR0.HYSTCTR Mask                   */
#define CMP_CR0_HYSTCTR_SHIFT                    (0U)                                                /*!< CMP0_CR0.HYSTCTR Position               */
#define CMP_CR0_HYSTCTR(x)                       (((uint8_t)(((uint8_t)(x))<<CMP_CR0_HYSTCTR_SHIFT))&CMP_CR0_HYSTCTR_MASK) /*!< CMP0_CR0.HYSTCTR Field                  */
#define CMP_CR0_FILTER_CNT_MASK                  (0x70U)                                             /*!< CMP0_CR0.FILTER_CNT Mask                */
#define CMP_CR0_FILTER_CNT_SHIFT                 (4U)                                                /*!< CMP0_CR0.FILTER_CNT Position            */
#define CMP_CR0_FILTER_CNT(x)                    (((uint8_t)(((uint8_t)(x))<<CMP_CR0_FILTER_CNT_SHIFT))&CMP_CR0_FILTER_CNT_MASK) /*!< CMP0_CR0.FILTER_CNT Field               */

/*! @name CR1 - CMP Control Register 1 */
#define CMP_CR1_EN_MASK                          (0x1U)                                              /*!< CMP0_CR1.EN Mask                        */
#define CMP_CR1_EN_SHIFT                         (0U)                                                /*!< CMP0_CR1.EN Position                    */
#define CMP_CR1_EN(x)                            (((uint8_t)(((uint8_t)(x))<<CMP_CR1_EN_SHIFT))&CMP_CR1_EN_MASK) /*!< CMP0_CR1.EN Field                       */
#define CMP_CR1_OPE_MASK                         (0x2U)                                              /*!< CMP0_CR1.OPE Mask                       */
#define CMP_CR1_OPE_SHIFT                        (1U)                                                /*!< CMP0_CR1.OPE Position                   */
#define CMP_CR1_OPE(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_CR1_OPE_SHIFT))&CMP_CR1_OPE_MASK) /*!< CMP0_CR1.OPE Field                      */
#define CMP_CR1_COS_MASK                         (0x4U)                                              /*!< CMP0_CR1.COS Mask                       */
#define CMP_CR1_COS_SHIFT                        (2U)                                                /*!< CMP0_CR1.COS Position                   */
#define CMP_CR1_COS(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_CR1_COS_SHIFT))&CMP_CR1_COS_MASK) /*!< CMP0_CR1.COS Field                      */
#define CMP_CR1_INV_MASK                         (0x8U)                                              /*!< CMP0_CR1.INV Mask                       */
#define CMP_CR1_INV_SHIFT                        (3U)                                                /*!< CMP0_CR1.INV Position                   */
#define CMP_CR1_INV(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_CR1_INV_SHIFT))&CMP_CR1_INV_MASK) /*!< CMP0_CR1.INV Field                      */
#define CMP_CR1_PMODE_MASK                       (0x10U)                                             /*!< CMP0_CR1.PMODE Mask                     */
#define CMP_CR1_PMODE_SHIFT                      (4U)                                                /*!< CMP0_CR1.PMODE Position                 */
#define CMP_CR1_PMODE(x)                         (((uint8_t)(((uint8_t)(x))<<CMP_CR1_PMODE_SHIFT))&CMP_CR1_PMODE_MASK) /*!< CMP0_CR1.PMODE Field                    */
#define CMP_CR1_TRIGM_MASK                       (0x20U)                                             /*!< CMP0_CR1.TRIGM Mask                     */
#define CMP_CR1_TRIGM_SHIFT                      (5U)                                                /*!< CMP0_CR1.TRIGM Position                 */
#define CMP_CR1_TRIGM(x)                         (((uint8_t)(((uint8_t)(x))<<CMP_CR1_TRIGM_SHIFT))&CMP_CR1_TRIGM_MASK) /*!< CMP0_CR1.TRIGM Field                    */
#define CMP_CR1_WE_MASK                          (0x40U)                                             /*!< CMP0_CR1.WE Mask                        */
#define CMP_CR1_WE_SHIFT                         (6U)                                                /*!< CMP0_CR1.WE Position                    */
#define CMP_CR1_WE(x)                            (((uint8_t)(((uint8_t)(x))<<CMP_CR1_WE_SHIFT))&CMP_CR1_WE_MASK) /*!< CMP0_CR1.WE Field                       */
#define CMP_CR1_SE_MASK                          (0x80U)                                             /*!< CMP0_CR1.SE Mask                        */
#define CMP_CR1_SE_SHIFT                         (7U)                                                /*!< CMP0_CR1.SE Position                    */
#define CMP_CR1_SE(x)                            (((uint8_t)(((uint8_t)(x))<<CMP_CR1_SE_SHIFT))&CMP_CR1_SE_MASK) /*!< CMP0_CR1.SE Field                       */

/*! @name FPR - CMP Filter Period Register */
#define CMP_FPR_FILT_PER_MASK                    (0xFFU)                                             /*!< CMP0_FPR.FILT_PER Mask                  */
#define CMP_FPR_FILT_PER_SHIFT                   (0U)                                                /*!< CMP0_FPR.FILT_PER Position              */
#define CMP_FPR_FILT_PER(x)                      (((uint8_t)(((uint8_t)(x))<<CMP_FPR_FILT_PER_SHIFT))&CMP_FPR_FILT_PER_MASK) /*!< CMP0_FPR.FILT_PER Field                 */

/*! @name SCR - CMP Status and Control Register */
#define CMP_SCR_COUT_MASK                        (0x1U)                                              /*!< CMP0_SCR.COUT Mask                      */
#define CMP_SCR_COUT_SHIFT                       (0U)                                                /*!< CMP0_SCR.COUT Position                  */
#define CMP_SCR_COUT(x)                          (((uint8_t)(((uint8_t)(x))<<CMP_SCR_COUT_SHIFT))&CMP_SCR_COUT_MASK) /*!< CMP0_SCR.COUT Field                     */
#define CMP_SCR_CFF_MASK                         (0x2U)                                              /*!< CMP0_SCR.CFF Mask                       */
#define CMP_SCR_CFF_SHIFT                        (1U)                                                /*!< CMP0_SCR.CFF Position                   */
#define CMP_SCR_CFF(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_SCR_CFF_SHIFT))&CMP_SCR_CFF_MASK) /*!< CMP0_SCR.CFF Field                      */
#define CMP_SCR_CFR_MASK                         (0x4U)                                              /*!< CMP0_SCR.CFR Mask                       */
#define CMP_SCR_CFR_SHIFT                        (2U)                                                /*!< CMP0_SCR.CFR Position                   */
#define CMP_SCR_CFR(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_SCR_CFR_SHIFT))&CMP_SCR_CFR_MASK) /*!< CMP0_SCR.CFR Field                      */
#define CMP_SCR_IEF_MASK                         (0x8U)                                              /*!< CMP0_SCR.IEF Mask                       */
#define CMP_SCR_IEF_SHIFT                        (3U)                                                /*!< CMP0_SCR.IEF Position                   */
#define CMP_SCR_IEF(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_SCR_IEF_SHIFT))&CMP_SCR_IEF_MASK) /*!< CMP0_SCR.IEF Field                      */
#define CMP_SCR_IER_MASK                         (0x10U)                                             /*!< CMP0_SCR.IER Mask                       */
#define CMP_SCR_IER_SHIFT                        (4U)                                                /*!< CMP0_SCR.IER Position                   */
#define CMP_SCR_IER(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_SCR_IER_SHIFT))&CMP_SCR_IER_MASK) /*!< CMP0_SCR.IER Field                      */
#define CMP_SCR_DMAEN_MASK                       (0x40U)                                             /*!< CMP0_SCR.DMAEN Mask                     */
#define CMP_SCR_DMAEN_SHIFT                      (6U)                                                /*!< CMP0_SCR.DMAEN Position                 */
#define CMP_SCR_DMAEN(x)                         (((uint8_t)(((uint8_t)(x))<<CMP_SCR_DMAEN_SHIFT))&CMP_SCR_DMAEN_MASK) /*!< CMP0_SCR.DMAEN Field                    */

/*! @name DACCR - DAC Control Register */
#define CMP_DACCR_VOSEL_MASK                     (0x3FU)                                             /*!< CMP0_DACCR.VOSEL Mask                   */
#define CMP_DACCR_VOSEL_SHIFT                    (0U)                                                /*!< CMP0_DACCR.VOSEL Position               */
#define CMP_DACCR_VOSEL(x)                       (((uint8_t)(((uint8_t)(x))<<CMP_DACCR_VOSEL_SHIFT))&CMP_DACCR_VOSEL_MASK) /*!< CMP0_DACCR.VOSEL Field                  */
#define CMP_DACCR_VRSEL_MASK                     (0x40U)                                             /*!< CMP0_DACCR.VRSEL Mask                   */
#define CMP_DACCR_VRSEL_SHIFT                    (6U)                                                /*!< CMP0_DACCR.VRSEL Position               */
#define CMP_DACCR_VRSEL(x)                       (((uint8_t)(((uint8_t)(x))<<CMP_DACCR_VRSEL_SHIFT))&CMP_DACCR_VRSEL_MASK) /*!< CMP0_DACCR.VRSEL Field                  */
#define CMP_DACCR_DACEN_MASK                     (0x80U)                                             /*!< CMP0_DACCR.DACEN Mask                   */
#define CMP_DACCR_DACEN_SHIFT                    (7U)                                                /*!< CMP0_DACCR.DACEN Position               */
#define CMP_DACCR_DACEN(x)                       (((uint8_t)(((uint8_t)(x))<<CMP_DACCR_DACEN_SHIFT))&CMP_DACCR_DACEN_MASK) /*!< CMP0_DACCR.DACEN Field                  */

/*! @name MUXCR - MUX Control Register */
#define CMP_MUXCR_MSEL_MASK                      (0x7U)                                              /*!< CMP0_MUXCR.MSEL Mask                    */
#define CMP_MUXCR_MSEL_SHIFT                     (0U)                                                /*!< CMP0_MUXCR.MSEL Position                */
#define CMP_MUXCR_MSEL(x)                        (((uint8_t)(((uint8_t)(x))<<CMP_MUXCR_MSEL_SHIFT))&CMP_MUXCR_MSEL_MASK) /*!< CMP0_MUXCR.MSEL Field                   */
#define CMP_MUXCR_PSEL_MASK                      (0x38U)                                             /*!< CMP0_MUXCR.PSEL Mask                    */
#define CMP_MUXCR_PSEL_SHIFT                     (3U)                                                /*!< CMP0_MUXCR.PSEL Position                */
#define CMP_MUXCR_PSEL(x)                        (((uint8_t)(((uint8_t)(x))<<CMP_MUXCR_PSEL_SHIFT))&CMP_MUXCR_PSEL_MASK) /*!< CMP0_MUXCR.PSEL Field                   */
/**
 * @} */ /* End group CMP_Register_Masks_GROUP 
 */

/* CMP0 - Peripheral instance base addresses */
#define CMP0_BasePtr                   0x40073000UL //!< Peripheral base address
#define CMP0                           ((CMP_Type *) CMP0_BasePtr) //!< Freescale base pointer
#define CMP0_BASE_PTR                  (CMP0) //!< Freescale style base pointer
/**
 * @} */ /* End group CMP_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup CMP_Peripheral_access_layer_GROUP CMP Peripheral Access Layer
* @brief C Struct for CMP
* @{
*/

/* ================================================================================ */
/* ================           CMP1 (derived from CMP0)             ================ */
/* ================================================================================ */

/**
 * @brief Comparator, Voltage Ref, D-to-A Converter and Analog Mux
 */

/* CMP1 - Peripheral instance base addresses */
#define CMP1_BasePtr                   0x40073008UL //!< Peripheral base address
#define CMP1                           ((CMP_Type *) CMP1_BasePtr) //!< Freescale base pointer
#define CMP1_BASE_PTR                  (CMP1) //!< Freescale style base pointer
/**
 * @} */ /* End group CMP_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup CMP_Peripheral_access_layer_GROUP CMP Peripheral Access Layer
* @brief C Struct for CMP
* @{
*/

/* ================================================================================ */
/* ================           CMP2 (derived from CMP0)             ================ */
/* ================================================================================ */

/**
 * @brief Comparator, Voltage Ref, D-to-A Converter and Analog Mux
 */

/* CMP2 - Peripheral instance base addresses */
#define CMP2_BasePtr                   0x40073010UL //!< Peripheral base address
#define CMP2                           ((CMP_Type *) CMP2_BasePtr) //!< Freescale base pointer
#define CMP2_BASE_PTR                  (CMP2) //!< Freescale style base pointer
/**
 * @} */ /* End group CMP_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup CMP_Peripheral_access_layer_GROUP CMP Peripheral Access Layer
* @brief C Struct for CMP
* @{
*/

/* ================================================================================ */
/* ================           CMP3 (derived from CMP0)             ================ */
/* ================================================================================ */

/**
 * @brief Comparator, Voltage Ref, D-to-A Converter and Analog Mux
 */

/* CMP3 - Peripheral instance base addresses */
#define CMP3_BasePtr                   0x40073018UL //!< Peripheral base address
#define CMP3                           ((CMP_Type *) CMP3_BasePtr) //!< Freescale base pointer
#define CMP3_BASE_PTR                  (CMP3) //!< Freescale style base pointer
/**
 * @} */ /* End group CMP_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup CRC_Peripheral_access_layer_GROUP CRC Peripheral Access Layer
* @brief C Struct for CRC
* @{
*/

/* ================================================================================ */
/* ================           CRC0 (file:CRC0_0x40032000)          ================ */
/* ================================================================================ */

/**
 * @brief Cyclic Redundancy Check
 */
/**
* @addtogroup CRC_structs_GROUP CRC struct
* @brief Struct for CRC
* @{
*/
typedef struct CRC_Type {
   union {                                      /**< 0000: (size=0004)                                                  */
      __IO uint32_t  DATA;                      /**< 0000: Data register                                                */
      struct {                                  /**< 0000: (size=0004)                                                  */
         union {                                /**< 0000: (size=0002)                                                  */
            __IO uint16_t  DATAL;               /**< 0000: DATAL register                                               */
            struct {                            /**< 0000: (size=0002)                                                  */
               __IO uint8_t   DATALL;           /**< 0000: DATALL register                                              */
               __IO uint8_t   DATALU;           /**< 0001: DATALU register                                              */
            };
         };
         union {                                /**< 0002: (size=0002)                                                  */
            __IO uint16_t  DATAH;               /**< 0002: DATAH register                                               */
            struct {                            /**< 0002: (size=0002)                                                  */
               __IO uint8_t   DATAHL;           /**< 0002: DATAHL register                                              */
               __IO uint8_t   DATAHU;           /**< 0003: DATAHU register                                              */
            };
         };
      };
   };
   union {                                      /**< 0004: (size=0004)                                                  */
      __IO uint32_t  GPOLY;                     /**< 0004: Polynomial register                                          */
      struct {                                  /**< 0004: (size=0004)                                                  */
         __IO uint16_t  GPOLYL;                 /**< 0004: GPOLYL register                                              */
         __IO uint16_t  GPOLYH;                 /**< 0006: GPOLYH register                                              */
      };
   };
   union {                                      /**< 0008: (size=0004)                                                  */
      __IO uint32_t  CTRL;                      /**< 0008: Control register                                             */
      struct {                                  /**< 0008: (size=0004)                                                  */
              uint8_t   RESERVED_4[3];          /**< 0008: 0x3 bytes                                                    */
         __IO uint8_t   CTRLHU;                 /**< 000B: Control register (byte access)                               */
      };
   };
} CRC_Type;

/**
 * @} */ /* End group CRC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'CRC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup CRC_Register_Masks_GROUP CRC Register Masks
* @brief Register Masks for CRC
* @{
*/

/*! @name DATA - Data register */
#define CRC_DATA_LL_MASK                         (0xFFU)                                             /*!< CRC0_DATA.LL Mask                       */
#define CRC_DATA_LL_SHIFT                        (0U)                                                /*!< CRC0_DATA.LL Position                   */
#define CRC_DATA_LL(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_LL_SHIFT))&CRC_DATA_LL_MASK) /*!< CRC0_DATA.LL Field                      */
#define CRC_DATA_LU_MASK                         (0xFF00U)                                           /*!< CRC0_DATA.LU Mask                       */
#define CRC_DATA_LU_SHIFT                        (8U)                                                /*!< CRC0_DATA.LU Position                   */
#define CRC_DATA_LU(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_LU_SHIFT))&CRC_DATA_LU_MASK) /*!< CRC0_DATA.LU Field                      */
#define CRC_DATA_HL_MASK                         (0xFF0000U)                                         /*!< CRC0_DATA.HL Mask                       */
#define CRC_DATA_HL_SHIFT                        (16U)                                               /*!< CRC0_DATA.HL Position                   */
#define CRC_DATA_HL(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_HL_SHIFT))&CRC_DATA_HL_MASK) /*!< CRC0_DATA.HL Field                      */
#define CRC_DATA_HU_MASK                         (0xFF000000U)                                       /*!< CRC0_DATA.HU Mask                       */
#define CRC_DATA_HU_SHIFT                        (24U)                                               /*!< CRC0_DATA.HU Position                   */
#define CRC_DATA_HU(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_HU_SHIFT))&CRC_DATA_HU_MASK) /*!< CRC0_DATA.HU Field                      */

/*! @name DATAL - DATAL register */
#define CRC_DATAL_DATAL_MASK                     (0xFFFFU)                                           /*!< CRC0_DATAL.DATAL Mask                   */
#define CRC_DATAL_DATAL_SHIFT                    (0U)                                                /*!< CRC0_DATAL.DATAL Position               */
#define CRC_DATAL_DATAL(x)                       (((uint16_t)(((uint16_t)(x))<<CRC_DATAL_DATAL_SHIFT))&CRC_DATAL_DATAL_MASK) /*!< CRC0_DATAL.DATAL Field                  */

/*! @name DATALL - DATALL register */
#define CRC_DATALL_DATALL_MASK                   (0xFFU)                                             /*!< CRC0_DATALL.DATALL Mask                 */
#define CRC_DATALL_DATALL_SHIFT                  (0U)                                                /*!< CRC0_DATALL.DATALL Position             */
#define CRC_DATALL_DATALL(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATALL_DATALL_SHIFT))&CRC_DATALL_DATALL_MASK) /*!< CRC0_DATALL.DATALL Field                */

/*! @name DATALU - DATALU register */
#define CRC_DATALU_DATALU_MASK                   (0xFFU)                                             /*!< CRC0_DATALU.DATALU Mask                 */
#define CRC_DATALU_DATALU_SHIFT                  (0U)                                                /*!< CRC0_DATALU.DATALU Position             */
#define CRC_DATALU_DATALU(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATALU_DATALU_SHIFT))&CRC_DATALU_DATALU_MASK) /*!< CRC0_DATALU.DATALU Field                */

/*! @name DATAH - DATAH register */
#define CRC_DATAH_DATAH_MASK                     (0xFFFFU)                                           /*!< CRC0_DATAH.DATAH Mask                   */
#define CRC_DATAH_DATAH_SHIFT                    (0U)                                                /*!< CRC0_DATAH.DATAH Position               */
#define CRC_DATAH_DATAH(x)                       (((uint16_t)(((uint16_t)(x))<<CRC_DATAH_DATAH_SHIFT))&CRC_DATAH_DATAH_MASK) /*!< CRC0_DATAH.DATAH Field                  */

/*! @name DATAHL - DATAHL register */
#define CRC_DATAHL_DATAHL_MASK                   (0xFFU)                                             /*!< CRC0_DATAHL.DATAHL Mask                 */
#define CRC_DATAHL_DATAHL_SHIFT                  (0U)                                                /*!< CRC0_DATAHL.DATAHL Position             */
#define CRC_DATAHL_DATAHL(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATAHL_DATAHL_SHIFT))&CRC_DATAHL_DATAHL_MASK) /*!< CRC0_DATAHL.DATAHL Field                */

/*! @name DATAHU - DATAHU register */
#define CRC_DATAHU_DATAHU_MASK                   (0xFFU)                                             /*!< CRC0_DATAHU.DATAHU Mask                 */
#define CRC_DATAHU_DATAHU_SHIFT                  (0U)                                                /*!< CRC0_DATAHU.DATAHU Position             */
#define CRC_DATAHU_DATAHU(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATAHU_DATAHU_SHIFT))&CRC_DATAHU_DATAHU_MASK) /*!< CRC0_DATAHU.DATAHU Field                */

/*! @name GPOLY - Polynomial register */
#define CRC_GPOLY_LOW_MASK                       (0xFFFFU)                                           /*!< CRC0_GPOLY.LOW Mask                     */
#define CRC_GPOLY_LOW_SHIFT                      (0U)                                                /*!< CRC0_GPOLY.LOW Position                 */
#define CRC_GPOLY_LOW(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_GPOLY_LOW_SHIFT))&CRC_GPOLY_LOW_MASK) /*!< CRC0_GPOLY.LOW Field                    */
#define CRC_GPOLY_HIGH_MASK                      (0xFFFF0000U)                                       /*!< CRC0_GPOLY.HIGH Mask                    */
#define CRC_GPOLY_HIGH_SHIFT                     (16U)                                               /*!< CRC0_GPOLY.HIGH Position                */
#define CRC_GPOLY_HIGH(x)                        (((uint32_t)(((uint32_t)(x))<<CRC_GPOLY_HIGH_SHIFT))&CRC_GPOLY_HIGH_MASK) /*!< CRC0_GPOLY.HIGH Field                   */

/*! @name GPOLYL - GPOLYL register */
#define CRC_GPOLYL_GPOLYL_MASK                   (0xFFFFU)                                           /*!< CRC0_GPOLYL.GPOLYL Mask                 */
#define CRC_GPOLYL_GPOLYL_SHIFT                  (0U)                                                /*!< CRC0_GPOLYL.GPOLYL Position             */
#define CRC_GPOLYL_GPOLYL(x)                     (((uint16_t)(((uint16_t)(x))<<CRC_GPOLYL_GPOLYL_SHIFT))&CRC_GPOLYL_GPOLYL_MASK) /*!< CRC0_GPOLYL.GPOLYL Field                */

/*! @name GPOLYH - GPOLYH register */
#define CRC_GPOLYH_GPOLYH_MASK                   (0xFFFFU)                                           /*!< CRC0_GPOLYH.GPOLYH Mask                 */
#define CRC_GPOLYH_GPOLYH_SHIFT                  (0U)                                                /*!< CRC0_GPOLYH.GPOLYH Position             */
#define CRC_GPOLYH_GPOLYH(x)                     (((uint16_t)(((uint16_t)(x))<<CRC_GPOLYH_GPOLYH_SHIFT))&CRC_GPOLYH_GPOLYH_MASK) /*!< CRC0_GPOLYH.GPOLYH Field                */

/*! @name CTRL - Control register */
#define CRC_CTRL_TCRC_MASK                       (0x1000000U)                                        /*!< CRC0_CTRL.TCRC Mask                     */
#define CRC_CTRL_TCRC_SHIFT                      (24U)                                               /*!< CRC0_CTRL.TCRC Position                 */
#define CRC_CTRL_TCRC(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TCRC_SHIFT))&CRC_CTRL_TCRC_MASK) /*!< CRC0_CTRL.TCRC Field                    */
#define CRC_CTRL_WAS_MASK                        (0x2000000U)                                        /*!< CRC0_CTRL.WAS Mask                      */
#define CRC_CTRL_WAS_SHIFT                       (25U)                                               /*!< CRC0_CTRL.WAS Position                  */
#define CRC_CTRL_WAS(x)                          (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_WAS_SHIFT))&CRC_CTRL_WAS_MASK) /*!< CRC0_CTRL.WAS Field                     */
#define CRC_CTRL_FXOR_MASK                       (0x4000000U)                                        /*!< CRC0_CTRL.FXOR Mask                     */
#define CRC_CTRL_FXOR_SHIFT                      (26U)                                               /*!< CRC0_CTRL.FXOR Position                 */
#define CRC_CTRL_FXOR(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_FXOR_SHIFT))&CRC_CTRL_FXOR_MASK) /*!< CRC0_CTRL.FXOR Field                    */
#define CRC_CTRL_TOTR_MASK                       (0x30000000U)                                       /*!< CRC0_CTRL.TOTR Mask                     */
#define CRC_CTRL_TOTR_SHIFT                      (28U)                                               /*!< CRC0_CTRL.TOTR Position                 */
#define CRC_CTRL_TOTR(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TOTR_SHIFT))&CRC_CTRL_TOTR_MASK) /*!< CRC0_CTRL.TOTR Field                    */
#define CRC_CTRL_TOT_MASK                        (0xC0000000U)                                       /*!< CRC0_CTRL.TOT Mask                      */
#define CRC_CTRL_TOT_SHIFT                       (30U)                                               /*!< CRC0_CTRL.TOT Position                  */
#define CRC_CTRL_TOT(x)                          (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TOT_SHIFT))&CRC_CTRL_TOT_MASK) /*!< CRC0_CTRL.TOT Field                     */

/*! @name CTRLHU - Control register (byte access) */
#define CRC_CTRLHU_TCRC_MASK                     (0x1U)                                              /*!< CRC0_CTRLHU.TCRC Mask                   */
#define CRC_CTRLHU_TCRC_SHIFT                    (0U)                                                /*!< CRC0_CTRLHU.TCRC Position               */
#define CRC_CTRLHU_TCRC(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TCRC_SHIFT))&CRC_CTRLHU_TCRC_MASK) /*!< CRC0_CTRLHU.TCRC Field                  */
#define CRC_CTRLHU_WAS_MASK                      (0x2U)                                              /*!< CRC0_CTRLHU.WAS Mask                    */
#define CRC_CTRLHU_WAS_SHIFT                     (1U)                                                /*!< CRC0_CTRLHU.WAS Position                */
#define CRC_CTRLHU_WAS(x)                        (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_WAS_SHIFT))&CRC_CTRLHU_WAS_MASK) /*!< CRC0_CTRLHU.WAS Field                   */
#define CRC_CTRLHU_FXOR_MASK                     (0x4U)                                              /*!< CRC0_CTRLHU.FXOR Mask                   */
#define CRC_CTRLHU_FXOR_SHIFT                    (2U)                                                /*!< CRC0_CTRLHU.FXOR Position               */
#define CRC_CTRLHU_FXOR(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_FXOR_SHIFT))&CRC_CTRLHU_FXOR_MASK) /*!< CRC0_CTRLHU.FXOR Field                  */
#define CRC_CTRLHU_TOTR_MASK                     (0x30U)                                             /*!< CRC0_CTRLHU.TOTR Mask                   */
#define CRC_CTRLHU_TOTR_SHIFT                    (4U)                                                /*!< CRC0_CTRLHU.TOTR Position               */
#define CRC_CTRLHU_TOTR(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TOTR_SHIFT))&CRC_CTRLHU_TOTR_MASK) /*!< CRC0_CTRLHU.TOTR Field                  */
#define CRC_CTRLHU_TOT_MASK                      (0xC0U)                                             /*!< CRC0_CTRLHU.TOT Mask                    */
#define CRC_CTRLHU_TOT_SHIFT                     (6U)                                                /*!< CRC0_CTRLHU.TOT Position                */
#define CRC_CTRLHU_TOT(x)                        (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TOT_SHIFT))&CRC_CTRLHU_TOT_MASK) /*!< CRC0_CTRLHU.TOT Field                   */
/**
 * @} */ /* End group CRC_Register_Masks_GROUP 
 */

/* CRC0 - Peripheral instance base addresses */
#define CRC0_BasePtr                   0x40032000UL //!< Peripheral base address
#define CRC0                           ((CRC_Type *) CRC0_BasePtr) //!< Freescale base pointer
#define CRC0_BASE_PTR                  (CRC0) //!< Freescale style base pointer
/**
 * @} */ /* End group CRC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup DMA0_Peripheral_access_layer_GROUP DMA0 Peripheral Access Layer
* @brief C Struct for DMA0
* @{
*/

/* ================================================================================ */
/* ================           DMA0 (file:DMA0_16CH_EARS16)         ================ */
/* ================================================================================ */

/**
 * @brief Enhanced direct memory access controller
 */
/**
* @addtogroup DMA0_structs_GROUP DMA0 struct
* @brief Struct for DMA0
* @{
*/
typedef struct DMA_Type {
   __IO uint32_t  CR;                           /**< 0000: Control Register                                             */
   __I  uint32_t  ES;                           /**< 0004: Error Status Register                                        */
        uint8_t   RESERVED_0[4];                /**< 0008: 0x4 bytes                                                    */
   __IO uint32_t  ERQ;                          /**< 000C: Enable Request Register                                      */
        uint8_t   RESERVED_1[4];                /**< 0010: 0x4 bytes                                                    */
   __IO uint32_t  EEI;                          /**< 0014: Enable Error Interrupt Register                              */
   __O  uint8_t   CEEI;                         /**< 0018: Clear Enable Error Interrupt Register                        */
   __O  uint8_t   SEEI;                         /**< 0019: Set Enable Error Interrupt Register                          */
   __O  uint8_t   CERQ;                         /**< 001A: Clear Enable Request Register                                */
   __O  uint8_t   SERQ;                         /**< 001B: Set Enable Request Register                                  */
   __O  uint8_t   CDNE;                         /**< 001C: Clear DONE Status Bit Register                               */
   __O  uint8_t   SSRT;                         /**< 001D: Set START Bit Register                                       */
   __O  uint8_t   CERR;                         /**< 001E: Clear Error Register                                         */
   __O  uint8_t   CINT;                         /**< 001F: Clear Interrupt Request Register                             */
        uint8_t   RESERVED_2[4];                /**< 0020: 0x4 bytes                                                    */
   __IO uint32_t  INT;                          /**< 0024: Interrupt Request Register                                   */
        uint8_t   RESERVED_3[4];                /**< 0028: 0x4 bytes                                                    */
   __IO uint32_t  ERR;                          /**< 002C: Error Register                                               */
        uint8_t   RESERVED_4[4];                /**< 0030: 0x4 bytes                                                    */
   __I  uint32_t  HRS;                          /**< 0034: Hardware Request Status Register                             */
        uint8_t   RESERVED_5[12];               /**< 0038: 0xC bytes                                                    */
   __IO uint32_t  EARS;                         /**< 0044: Enable Asynchronous Request in Stop Register                 */
        uint8_t   RESERVED_6[184];              /**< 0048: 0xB8 bytes                                                   */
   union {                                      /**< 0100: (size=0010)                                                  */
      struct {                                  /**< 0100: (size=0010)                                                  */
      __IO uint8_t   DCHPRI3;                   /**< 0100: Channel 3 Priority Register                                  */
      __IO uint8_t   DCHPRI2;                   /**< 0101: Channel 2 Priority Register                                  */
      __IO uint8_t   DCHPRI1;                   /**< 0102: Channel 1 Priority Register                                  */
      __IO uint8_t   DCHPRI0;                   /**< 0103: Channel 0 Priority Register                                  */
      __IO uint8_t   DCHPRI7;                   /**< 0104: Channel 7 Priority Register                                  */
      __IO uint8_t   DCHPRI6;                   /**< 0105: Channel 6 Priority Register                                  */
      __IO uint8_t   DCHPRI5;                   /**< 0106: Channel 5 Priority Register                                  */
      __IO uint8_t   DCHPRI4;                   /**< 0107: Channel 4 Priority Register                                  */
      __IO uint8_t   DCHPRI11;                  /**< 0108: Channel 11 Priority Register                                 */
      __IO uint8_t   DCHPRI10;                  /**< 0109: Channel 10 Priority Register                                 */
      __IO uint8_t   DCHPRI9;                   /**< 010A: Channel 9 Priority Register                                  */
      __IO uint8_t   DCHPRI8;                   /**< 010B: Channel 8 Priority Register                                  */
      __IO uint8_t   DCHPRI15;                  /**< 010C: Channel 15 Priority Register                                 */
      __IO uint8_t   DCHPRI14;                  /**< 010D: Channel 14 Priority Register                                 */
      __IO uint8_t   DCHPRI13;                  /**< 010E: Channel 13 Priority Register                                 */
      __IO uint8_t   DCHPRI12;                  /**< 010F: Channel 12 Priority Register                                 */
      };
      __IO uint8_t   DCHPRI[16];                /**< 0100: Channel  Priority Register                                   */
   };
        uint8_t   RESERVED_7[3824];             /**< 0110: 0xEF0 bytes                                                  */
   struct {
      __IO uint32_t  SADDR;                     /**< 1000: Source Address                                               */
      __IO uint16_t  SOFF;                      /**< 1004: Signed Source Address Offset                                 */
      __IO uint16_t  ATTR;                      /**< 1006: Transfer Attributes                                          */
      union {                                   /**< 1008: (size=0004)                                                  */
         __IO uint32_t  NBYTES_MLNO;            /**< 1008: Minor Byte Count (Minor Loop Disabled)                       */
         __IO uint32_t  NBYTES_MLOFFNO;         /**< 1008: Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled) */
         __IO uint32_t  NBYTES_MLOFFYES;        /**< 1008: Signed Minor Loop Offset (Minor Loop and Offset Enabled)     */
      };
      __IO uint32_t  SLAST;                     /**< 100C: Last Source Address Adjustment                               */
      __IO uint32_t  DADDR;                     /**< 1010: Destination Address                                          */
      __IO uint16_t  DOFF;                      /**< 1014: Signed Destination Address Offset                            */
      union {                                   /**< 1016: (size=0002)                                                  */
         __IO uint16_t  CITER_ELINKNO;          /**< 1016: Current Minor Loop Link, Major Loop Count (Channel Linking Disabled) */
         __IO uint16_t  CITER_ELINKYES;         /**< 1016: Current Minor Loop Link, Major Loop Count (Channel Linking Enabled) */
      };
      __IO uint32_t  DLASTSGA;                  /**< 1018: Last Destination Address Adjustment/Scatter Gather Address   */
      __IO uint16_t  CSR;                       /**< 101C: Control and Status                                           */
      union {                                   /**< 101E: (size=0002)                                                  */
         __IO uint16_t  BITER_ELINKNO;          /**< 101E: Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled) */
         __IO uint16_t  BITER_ELINKYES;         /**< 101E: Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled) */
      };
   } TCD[16];                                   /**< 1000: (cluster: size=0x0200, 512)                                  */
} DMA_Type;

/**
 * @} */ /* End group DMA0_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'DMA0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup DMA0_Register_Masks_GROUP DMA0 Register Masks
* @brief Register Masks for DMA0
* @{
*/

/*! @name CR - Control Register */
#define DMA_CR_EDBG_MASK                         (0x2U)                                              /*!< DMA0_CR.EDBG Mask                       */
#define DMA_CR_EDBG_SHIFT                        (1U)                                                /*!< DMA0_CR.EDBG Position                   */
#define DMA_CR_EDBG(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_EDBG_SHIFT))&DMA_CR_EDBG_MASK) /*!< DMA0_CR.EDBG Field                      */
#define DMA_CR_ERCA_MASK                         (0x4U)                                              /*!< DMA0_CR.ERCA Mask                       */
#define DMA_CR_ERCA_SHIFT                        (2U)                                                /*!< DMA0_CR.ERCA Position                   */
#define DMA_CR_ERCA(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_ERCA_SHIFT))&DMA_CR_ERCA_MASK) /*!< DMA0_CR.ERCA Field                      */
#define DMA_CR_HOE_MASK                          (0x10U)                                             /*!< DMA0_CR.HOE Mask                        */
#define DMA_CR_HOE_SHIFT                         (4U)                                                /*!< DMA0_CR.HOE Position                    */
#define DMA_CR_HOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_HOE_SHIFT))&DMA_CR_HOE_MASK) /*!< DMA0_CR.HOE Field                       */
#define DMA_CR_HALT_MASK                         (0x20U)                                             /*!< DMA0_CR.HALT Mask                       */
#define DMA_CR_HALT_SHIFT                        (5U)                                                /*!< DMA0_CR.HALT Position                   */
#define DMA_CR_HALT(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_HALT_SHIFT))&DMA_CR_HALT_MASK) /*!< DMA0_CR.HALT Field                      */
#define DMA_CR_CLM_MASK                          (0x40U)                                             /*!< DMA0_CR.CLM Mask                        */
#define DMA_CR_CLM_SHIFT                         (6U)                                                /*!< DMA0_CR.CLM Position                    */
#define DMA_CR_CLM(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_CLM_SHIFT))&DMA_CR_CLM_MASK) /*!< DMA0_CR.CLM Field                       */
#define DMA_CR_EMLM_MASK                         (0x80U)                                             /*!< DMA0_CR.EMLM Mask                       */
#define DMA_CR_EMLM_SHIFT                        (7U)                                                /*!< DMA0_CR.EMLM Position                   */
#define DMA_CR_EMLM(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_EMLM_SHIFT))&DMA_CR_EMLM_MASK) /*!< DMA0_CR.EMLM Field                      */
#define DMA_CR_ECX_MASK                          (0x10000U)                                          /*!< DMA0_CR.ECX Mask                        */
#define DMA_CR_ECX_SHIFT                         (16U)                                               /*!< DMA0_CR.ECX Position                    */
#define DMA_CR_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_ECX_SHIFT))&DMA_CR_ECX_MASK) /*!< DMA0_CR.ECX Field                       */
#define DMA_CR_CX_MASK                           (0x20000U)                                          /*!< DMA0_CR.CX Mask                         */
#define DMA_CR_CX_SHIFT                          (17U)                                               /*!< DMA0_CR.CX Position                     */
#define DMA_CR_CX(x)                             (((uint32_t)(((uint32_t)(x))<<DMA_CR_CX_SHIFT))&DMA_CR_CX_MASK) /*!< DMA0_CR.CX Field                        */

/*! @name ES - Error Status Register */
#define DMA_ES_DBE_MASK                          (0x1U)                                              /*!< DMA0_ES.DBE Mask                        */
#define DMA_ES_DBE_SHIFT                         (0U)                                                /*!< DMA0_ES.DBE Position                    */
#define DMA_ES_DBE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DBE_SHIFT))&DMA_ES_DBE_MASK) /*!< DMA0_ES.DBE Field                       */
#define DMA_ES_SBE_MASK                          (0x2U)                                              /*!< DMA0_ES.SBE Mask                        */
#define DMA_ES_SBE_SHIFT                         (1U)                                                /*!< DMA0_ES.SBE Position                    */
#define DMA_ES_SBE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SBE_SHIFT))&DMA_ES_SBE_MASK) /*!< DMA0_ES.SBE Field                       */
#define DMA_ES_SGE_MASK                          (0x4U)                                              /*!< DMA0_ES.SGE Mask                        */
#define DMA_ES_SGE_SHIFT                         (2U)                                                /*!< DMA0_ES.SGE Position                    */
#define DMA_ES_SGE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SGE_SHIFT))&DMA_ES_SGE_MASK) /*!< DMA0_ES.SGE Field                       */
#define DMA_ES_NCE_MASK                          (0x8U)                                              /*!< DMA0_ES.NCE Mask                        */
#define DMA_ES_NCE_SHIFT                         (3U)                                                /*!< DMA0_ES.NCE Position                    */
#define DMA_ES_NCE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_NCE_SHIFT))&DMA_ES_NCE_MASK) /*!< DMA0_ES.NCE Field                       */
#define DMA_ES_DOE_MASK                          (0x10U)                                             /*!< DMA0_ES.DOE Mask                        */
#define DMA_ES_DOE_SHIFT                         (4U)                                                /*!< DMA0_ES.DOE Position                    */
#define DMA_ES_DOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DOE_SHIFT))&DMA_ES_DOE_MASK) /*!< DMA0_ES.DOE Field                       */
#define DMA_ES_DAE_MASK                          (0x20U)                                             /*!< DMA0_ES.DAE Mask                        */
#define DMA_ES_DAE_SHIFT                         (5U)                                                /*!< DMA0_ES.DAE Position                    */
#define DMA_ES_DAE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DAE_SHIFT))&DMA_ES_DAE_MASK) /*!< DMA0_ES.DAE Field                       */
#define DMA_ES_SOE_MASK                          (0x40U)                                             /*!< DMA0_ES.SOE Mask                        */
#define DMA_ES_SOE_SHIFT                         (6U)                                                /*!< DMA0_ES.SOE Position                    */
#define DMA_ES_SOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SOE_SHIFT))&DMA_ES_SOE_MASK) /*!< DMA0_ES.SOE Field                       */
#define DMA_ES_SAE_MASK                          (0x80U)                                             /*!< DMA0_ES.SAE Mask                        */
#define DMA_ES_SAE_SHIFT                         (7U)                                                /*!< DMA0_ES.SAE Position                    */
#define DMA_ES_SAE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SAE_SHIFT))&DMA_ES_SAE_MASK) /*!< DMA0_ES.SAE Field                       */
#define DMA_ES_ERRCHN_MASK                       (0xF00U)                                            /*!< DMA0_ES.ERRCHN Mask                     */
#define DMA_ES_ERRCHN_SHIFT                      (8U)                                                /*!< DMA0_ES.ERRCHN Position                 */
#define DMA_ES_ERRCHN(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ES_ERRCHN_SHIFT))&DMA_ES_ERRCHN_MASK) /*!< DMA0_ES.ERRCHN Field                    */
#define DMA_ES_CPE_MASK                          (0x4000U)                                           /*!< DMA0_ES.CPE Mask                        */
#define DMA_ES_CPE_SHIFT                         (14U)                                               /*!< DMA0_ES.CPE Position                    */
#define DMA_ES_CPE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_CPE_SHIFT))&DMA_ES_CPE_MASK) /*!< DMA0_ES.CPE Field                       */
#define DMA_ES_ECX_MASK                          (0x10000U)                                          /*!< DMA0_ES.ECX Mask                        */
#define DMA_ES_ECX_SHIFT                         (16U)                                               /*!< DMA0_ES.ECX Position                    */
#define DMA_ES_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_ECX_SHIFT))&DMA_ES_ECX_MASK) /*!< DMA0_ES.ECX Field                       */
#define DMA_ES_VLD_MASK                          (0x80000000U)                                       /*!< DMA0_ES.VLD Mask                        */
#define DMA_ES_VLD_SHIFT                         (31U)                                               /*!< DMA0_ES.VLD Position                    */
#define DMA_ES_VLD(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_VLD_SHIFT))&DMA_ES_VLD_MASK) /*!< DMA0_ES.VLD Field                       */

/*! @name ERQ - Enable Request Register */
#define DMA_ERQ_ERQ0_MASK                        (0x1U)                                              /*!< DMA0_ERQ.ERQ0 Mask                      */
#define DMA_ERQ_ERQ0_SHIFT                       (0U)                                                /*!< DMA0_ERQ.ERQ0 Position                  */
#define DMA_ERQ_ERQ0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ0_SHIFT))&DMA_ERQ_ERQ0_MASK) /*!< DMA0_ERQ.ERQ0 Field                     */
#define DMA_ERQ_ERQ1_MASK                        (0x2U)                                              /*!< DMA0_ERQ.ERQ1 Mask                      */
#define DMA_ERQ_ERQ1_SHIFT                       (1U)                                                /*!< DMA0_ERQ.ERQ1 Position                  */
#define DMA_ERQ_ERQ1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ1_SHIFT))&DMA_ERQ_ERQ1_MASK) /*!< DMA0_ERQ.ERQ1 Field                     */
#define DMA_ERQ_ERQ2_MASK                        (0x4U)                                              /*!< DMA0_ERQ.ERQ2 Mask                      */
#define DMA_ERQ_ERQ2_SHIFT                       (2U)                                                /*!< DMA0_ERQ.ERQ2 Position                  */
#define DMA_ERQ_ERQ2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ2_SHIFT))&DMA_ERQ_ERQ2_MASK) /*!< DMA0_ERQ.ERQ2 Field                     */
#define DMA_ERQ_ERQ3_MASK                        (0x8U)                                              /*!< DMA0_ERQ.ERQ3 Mask                      */
#define DMA_ERQ_ERQ3_SHIFT                       (3U)                                                /*!< DMA0_ERQ.ERQ3 Position                  */
#define DMA_ERQ_ERQ3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ3_SHIFT))&DMA_ERQ_ERQ3_MASK) /*!< DMA0_ERQ.ERQ3 Field                     */
#define DMA_ERQ_ERQ4_MASK                        (0x10U)                                             /*!< DMA0_ERQ.ERQ4 Mask                      */
#define DMA_ERQ_ERQ4_SHIFT                       (4U)                                                /*!< DMA0_ERQ.ERQ4 Position                  */
#define DMA_ERQ_ERQ4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ4_SHIFT))&DMA_ERQ_ERQ4_MASK) /*!< DMA0_ERQ.ERQ4 Field                     */
#define DMA_ERQ_ERQ5_MASK                        (0x20U)                                             /*!< DMA0_ERQ.ERQ5 Mask                      */
#define DMA_ERQ_ERQ5_SHIFT                       (5U)                                                /*!< DMA0_ERQ.ERQ5 Position                  */
#define DMA_ERQ_ERQ5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ5_SHIFT))&DMA_ERQ_ERQ5_MASK) /*!< DMA0_ERQ.ERQ5 Field                     */
#define DMA_ERQ_ERQ6_MASK                        (0x40U)                                             /*!< DMA0_ERQ.ERQ6 Mask                      */
#define DMA_ERQ_ERQ6_SHIFT                       (6U)                                                /*!< DMA0_ERQ.ERQ6 Position                  */
#define DMA_ERQ_ERQ6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ6_SHIFT))&DMA_ERQ_ERQ6_MASK) /*!< DMA0_ERQ.ERQ6 Field                     */
#define DMA_ERQ_ERQ7_MASK                        (0x80U)                                             /*!< DMA0_ERQ.ERQ7 Mask                      */
#define DMA_ERQ_ERQ7_SHIFT                       (7U)                                                /*!< DMA0_ERQ.ERQ7 Position                  */
#define DMA_ERQ_ERQ7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ7_SHIFT))&DMA_ERQ_ERQ7_MASK) /*!< DMA0_ERQ.ERQ7 Field                     */
#define DMA_ERQ_ERQ8_MASK                        (0x100U)                                            /*!< DMA0_ERQ.ERQ8 Mask                      */
#define DMA_ERQ_ERQ8_SHIFT                       (8U)                                                /*!< DMA0_ERQ.ERQ8 Position                  */
#define DMA_ERQ_ERQ8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ8_SHIFT))&DMA_ERQ_ERQ8_MASK) /*!< DMA0_ERQ.ERQ8 Field                     */
#define DMA_ERQ_ERQ9_MASK                        (0x200U)                                            /*!< DMA0_ERQ.ERQ9 Mask                      */
#define DMA_ERQ_ERQ9_SHIFT                       (9U)                                                /*!< DMA0_ERQ.ERQ9 Position                  */
#define DMA_ERQ_ERQ9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ9_SHIFT))&DMA_ERQ_ERQ9_MASK) /*!< DMA0_ERQ.ERQ9 Field                     */
#define DMA_ERQ_ERQ10_MASK                       (0x400U)                                            /*!< DMA0_ERQ.ERQ10 Mask                     */
#define DMA_ERQ_ERQ10_SHIFT                      (10U)                                               /*!< DMA0_ERQ.ERQ10 Position                 */
#define DMA_ERQ_ERQ10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ10_SHIFT))&DMA_ERQ_ERQ10_MASK) /*!< DMA0_ERQ.ERQ10 Field                    */
#define DMA_ERQ_ERQ11_MASK                       (0x800U)                                            /*!< DMA0_ERQ.ERQ11 Mask                     */
#define DMA_ERQ_ERQ11_SHIFT                      (11U)                                               /*!< DMA0_ERQ.ERQ11 Position                 */
#define DMA_ERQ_ERQ11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ11_SHIFT))&DMA_ERQ_ERQ11_MASK) /*!< DMA0_ERQ.ERQ11 Field                    */
#define DMA_ERQ_ERQ12_MASK                       (0x1000U)                                           /*!< DMA0_ERQ.ERQ12 Mask                     */
#define DMA_ERQ_ERQ12_SHIFT                      (12U)                                               /*!< DMA0_ERQ.ERQ12 Position                 */
#define DMA_ERQ_ERQ12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ12_SHIFT))&DMA_ERQ_ERQ12_MASK) /*!< DMA0_ERQ.ERQ12 Field                    */
#define DMA_ERQ_ERQ13_MASK                       (0x2000U)                                           /*!< DMA0_ERQ.ERQ13 Mask                     */
#define DMA_ERQ_ERQ13_SHIFT                      (13U)                                               /*!< DMA0_ERQ.ERQ13 Position                 */
#define DMA_ERQ_ERQ13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ13_SHIFT))&DMA_ERQ_ERQ13_MASK) /*!< DMA0_ERQ.ERQ13 Field                    */
#define DMA_ERQ_ERQ14_MASK                       (0x4000U)                                           /*!< DMA0_ERQ.ERQ14 Mask                     */
#define DMA_ERQ_ERQ14_SHIFT                      (14U)                                               /*!< DMA0_ERQ.ERQ14 Position                 */
#define DMA_ERQ_ERQ14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ14_SHIFT))&DMA_ERQ_ERQ14_MASK) /*!< DMA0_ERQ.ERQ14 Field                    */
#define DMA_ERQ_ERQ15_MASK                       (0x8000U)                                           /*!< DMA0_ERQ.ERQ15 Mask                     */
#define DMA_ERQ_ERQ15_SHIFT                      (15U)                                               /*!< DMA0_ERQ.ERQ15 Position                 */
#define DMA_ERQ_ERQ15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ15_SHIFT))&DMA_ERQ_ERQ15_MASK) /*!< DMA0_ERQ.ERQ15 Field                    */

/*! @name EEI - Enable Error Interrupt Register */
#define DMA_EEI_EEI0_MASK                        (0x1U)                                              /*!< DMA0_EEI.EEI0 Mask                      */
#define DMA_EEI_EEI0_SHIFT                       (0U)                                                /*!< DMA0_EEI.EEI0 Position                  */
#define DMA_EEI_EEI0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI0_SHIFT))&DMA_EEI_EEI0_MASK) /*!< DMA0_EEI.EEI0 Field                     */
#define DMA_EEI_EEI1_MASK                        (0x2U)                                              /*!< DMA0_EEI.EEI1 Mask                      */
#define DMA_EEI_EEI1_SHIFT                       (1U)                                                /*!< DMA0_EEI.EEI1 Position                  */
#define DMA_EEI_EEI1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI1_SHIFT))&DMA_EEI_EEI1_MASK) /*!< DMA0_EEI.EEI1 Field                     */
#define DMA_EEI_EEI2_MASK                        (0x4U)                                              /*!< DMA0_EEI.EEI2 Mask                      */
#define DMA_EEI_EEI2_SHIFT                       (2U)                                                /*!< DMA0_EEI.EEI2 Position                  */
#define DMA_EEI_EEI2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI2_SHIFT))&DMA_EEI_EEI2_MASK) /*!< DMA0_EEI.EEI2 Field                     */
#define DMA_EEI_EEI3_MASK                        (0x8U)                                              /*!< DMA0_EEI.EEI3 Mask                      */
#define DMA_EEI_EEI3_SHIFT                       (3U)                                                /*!< DMA0_EEI.EEI3 Position                  */
#define DMA_EEI_EEI3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI3_SHIFT))&DMA_EEI_EEI3_MASK) /*!< DMA0_EEI.EEI3 Field                     */
#define DMA_EEI_EEI4_MASK                        (0x10U)                                             /*!< DMA0_EEI.EEI4 Mask                      */
#define DMA_EEI_EEI4_SHIFT                       (4U)                                                /*!< DMA0_EEI.EEI4 Position                  */
#define DMA_EEI_EEI4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI4_SHIFT))&DMA_EEI_EEI4_MASK) /*!< DMA0_EEI.EEI4 Field                     */
#define DMA_EEI_EEI5_MASK                        (0x20U)                                             /*!< DMA0_EEI.EEI5 Mask                      */
#define DMA_EEI_EEI5_SHIFT                       (5U)                                                /*!< DMA0_EEI.EEI5 Position                  */
#define DMA_EEI_EEI5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI5_SHIFT))&DMA_EEI_EEI5_MASK) /*!< DMA0_EEI.EEI5 Field                     */
#define DMA_EEI_EEI6_MASK                        (0x40U)                                             /*!< DMA0_EEI.EEI6 Mask                      */
#define DMA_EEI_EEI6_SHIFT                       (6U)                                                /*!< DMA0_EEI.EEI6 Position                  */
#define DMA_EEI_EEI6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI6_SHIFT))&DMA_EEI_EEI6_MASK) /*!< DMA0_EEI.EEI6 Field                     */
#define DMA_EEI_EEI7_MASK                        (0x80U)                                             /*!< DMA0_EEI.EEI7 Mask                      */
#define DMA_EEI_EEI7_SHIFT                       (7U)                                                /*!< DMA0_EEI.EEI7 Position                  */
#define DMA_EEI_EEI7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI7_SHIFT))&DMA_EEI_EEI7_MASK) /*!< DMA0_EEI.EEI7 Field                     */
#define DMA_EEI_EEI8_MASK                        (0x100U)                                            /*!< DMA0_EEI.EEI8 Mask                      */
#define DMA_EEI_EEI8_SHIFT                       (8U)                                                /*!< DMA0_EEI.EEI8 Position                  */
#define DMA_EEI_EEI8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI8_SHIFT))&DMA_EEI_EEI8_MASK) /*!< DMA0_EEI.EEI8 Field                     */
#define DMA_EEI_EEI9_MASK                        (0x200U)                                            /*!< DMA0_EEI.EEI9 Mask                      */
#define DMA_EEI_EEI9_SHIFT                       (9U)                                                /*!< DMA0_EEI.EEI9 Position                  */
#define DMA_EEI_EEI9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI9_SHIFT))&DMA_EEI_EEI9_MASK) /*!< DMA0_EEI.EEI9 Field                     */
#define DMA_EEI_EEI10_MASK                       (0x400U)                                            /*!< DMA0_EEI.EEI10 Mask                     */
#define DMA_EEI_EEI10_SHIFT                      (10U)                                               /*!< DMA0_EEI.EEI10 Position                 */
#define DMA_EEI_EEI10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI10_SHIFT))&DMA_EEI_EEI10_MASK) /*!< DMA0_EEI.EEI10 Field                    */
#define DMA_EEI_EEI11_MASK                       (0x800U)                                            /*!< DMA0_EEI.EEI11 Mask                     */
#define DMA_EEI_EEI11_SHIFT                      (11U)                                               /*!< DMA0_EEI.EEI11 Position                 */
#define DMA_EEI_EEI11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI11_SHIFT))&DMA_EEI_EEI11_MASK) /*!< DMA0_EEI.EEI11 Field                    */
#define DMA_EEI_EEI12_MASK                       (0x1000U)                                           /*!< DMA0_EEI.EEI12 Mask                     */
#define DMA_EEI_EEI12_SHIFT                      (12U)                                               /*!< DMA0_EEI.EEI12 Position                 */
#define DMA_EEI_EEI12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI12_SHIFT))&DMA_EEI_EEI12_MASK) /*!< DMA0_EEI.EEI12 Field                    */
#define DMA_EEI_EEI13_MASK                       (0x2000U)                                           /*!< DMA0_EEI.EEI13 Mask                     */
#define DMA_EEI_EEI13_SHIFT                      (13U)                                               /*!< DMA0_EEI.EEI13 Position                 */
#define DMA_EEI_EEI13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI13_SHIFT))&DMA_EEI_EEI13_MASK) /*!< DMA0_EEI.EEI13 Field                    */
#define DMA_EEI_EEI14_MASK                       (0x4000U)                                           /*!< DMA0_EEI.EEI14 Mask                     */
#define DMA_EEI_EEI14_SHIFT                      (14U)                                               /*!< DMA0_EEI.EEI14 Position                 */
#define DMA_EEI_EEI14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI14_SHIFT))&DMA_EEI_EEI14_MASK) /*!< DMA0_EEI.EEI14 Field                    */
#define DMA_EEI_EEI15_MASK                       (0x8000U)                                           /*!< DMA0_EEI.EEI15 Mask                     */
#define DMA_EEI_EEI15_SHIFT                      (15U)                                               /*!< DMA0_EEI.EEI15 Position                 */
#define DMA_EEI_EEI15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI15_SHIFT))&DMA_EEI_EEI15_MASK) /*!< DMA0_EEI.EEI15 Field                    */

/*! @name CEEI - Clear Enable Error Interrupt Register */
#define DMA_CEEI_CEEI_MASK                       (0xFU)                                              /*!< DMA0_CEEI.CEEI Mask                     */
#define DMA_CEEI_CEEI_SHIFT                      (0U)                                                /*!< DMA0_CEEI.CEEI Position                 */
#define DMA_CEEI_CEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CEEI_SHIFT))&DMA_CEEI_CEEI_MASK) /*!< DMA0_CEEI.CEEI Field                    */
#define DMA_CEEI_CAEE_MASK                       (0x40U)                                             /*!< DMA0_CEEI.CAEE Mask                     */
#define DMA_CEEI_CAEE_SHIFT                      (6U)                                                /*!< DMA0_CEEI.CAEE Position                 */
#define DMA_CEEI_CAEE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CAEE_SHIFT))&DMA_CEEI_CAEE_MASK) /*!< DMA0_CEEI.CAEE Field                    */
#define DMA_CEEI_NOP_MASK                        (0x80U)                                             /*!< DMA0_CEEI.NOP Mask                      */
#define DMA_CEEI_NOP_SHIFT                       (7U)                                                /*!< DMA0_CEEI.NOP Position                  */
#define DMA_CEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_NOP_SHIFT))&DMA_CEEI_NOP_MASK) /*!< DMA0_CEEI.NOP Field                     */

/*! @name SEEI - Set Enable Error Interrupt Register */
#define DMA_SEEI_SEEI_MASK                       (0xFU)                                              /*!< DMA0_SEEI.SEEI Mask                     */
#define DMA_SEEI_SEEI_SHIFT                      (0U)                                                /*!< DMA0_SEEI.SEEI Position                 */
#define DMA_SEEI_SEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SEEI_SHIFT))&DMA_SEEI_SEEI_MASK) /*!< DMA0_SEEI.SEEI Field                    */
#define DMA_SEEI_SAEE_MASK                       (0x40U)                                             /*!< DMA0_SEEI.SAEE Mask                     */
#define DMA_SEEI_SAEE_SHIFT                      (6U)                                                /*!< DMA0_SEEI.SAEE Position                 */
#define DMA_SEEI_SAEE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SAEE_SHIFT))&DMA_SEEI_SAEE_MASK) /*!< DMA0_SEEI.SAEE Field                    */
#define DMA_SEEI_NOP_MASK                        (0x80U)                                             /*!< DMA0_SEEI.NOP Mask                      */
#define DMA_SEEI_NOP_SHIFT                       (7U)                                                /*!< DMA0_SEEI.NOP Position                  */
#define DMA_SEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_NOP_SHIFT))&DMA_SEEI_NOP_MASK) /*!< DMA0_SEEI.NOP Field                     */

/*! @name CERQ - Clear Enable Request Register */
#define DMA_CERQ_CERQ_MASK                       (0xFU)                                              /*!< DMA0_CERQ.CERQ Mask                     */
#define DMA_CERQ_CERQ_SHIFT                      (0U)                                                /*!< DMA0_CERQ.CERQ Position                 */
#define DMA_CERQ_CERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CERQ_SHIFT))&DMA_CERQ_CERQ_MASK) /*!< DMA0_CERQ.CERQ Field                    */
#define DMA_CERQ_CAER_MASK                       (0x40U)                                             /*!< DMA0_CERQ.CAER Mask                     */
#define DMA_CERQ_CAER_SHIFT                      (6U)                                                /*!< DMA0_CERQ.CAER Position                 */
#define DMA_CERQ_CAER(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CAER_SHIFT))&DMA_CERQ_CAER_MASK) /*!< DMA0_CERQ.CAER Field                    */
#define DMA_CERQ_NOP_MASK                        (0x80U)                                             /*!< DMA0_CERQ.NOP Mask                      */
#define DMA_CERQ_NOP_SHIFT                       (7U)                                                /*!< DMA0_CERQ.NOP Position                  */
#define DMA_CERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_NOP_SHIFT))&DMA_CERQ_NOP_MASK) /*!< DMA0_CERQ.NOP Field                     */

/*! @name SERQ - Set Enable Request Register */
#define DMA_SERQ_SERQ_MASK                       (0xFU)                                              /*!< DMA0_SERQ.SERQ Mask                     */
#define DMA_SERQ_SERQ_SHIFT                      (0U)                                                /*!< DMA0_SERQ.SERQ Position                 */
#define DMA_SERQ_SERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SERQ_SHIFT))&DMA_SERQ_SERQ_MASK) /*!< DMA0_SERQ.SERQ Field                    */
#define DMA_SERQ_SAER_MASK                       (0x40U)                                             /*!< DMA0_SERQ.SAER Mask                     */
#define DMA_SERQ_SAER_SHIFT                      (6U)                                                /*!< DMA0_SERQ.SAER Position                 */
#define DMA_SERQ_SAER(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SAER_SHIFT))&DMA_SERQ_SAER_MASK) /*!< DMA0_SERQ.SAER Field                    */
#define DMA_SERQ_NOP_MASK                        (0x80U)                                             /*!< DMA0_SERQ.NOP Mask                      */
#define DMA_SERQ_NOP_SHIFT                       (7U)                                                /*!< DMA0_SERQ.NOP Position                  */
#define DMA_SERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_NOP_SHIFT))&DMA_SERQ_NOP_MASK) /*!< DMA0_SERQ.NOP Field                     */

/*! @name CDNE - Clear DONE Status Bit Register */
#define DMA_CDNE_CDNE_MASK                       (0xFU)                                              /*!< DMA0_CDNE.CDNE Mask                     */
#define DMA_CDNE_CDNE_SHIFT                      (0U)                                                /*!< DMA0_CDNE.CDNE Position                 */
#define DMA_CDNE_CDNE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CDNE_SHIFT))&DMA_CDNE_CDNE_MASK) /*!< DMA0_CDNE.CDNE Field                    */
#define DMA_CDNE_CADN_MASK                       (0x40U)                                             /*!< DMA0_CDNE.CADN Mask                     */
#define DMA_CDNE_CADN_SHIFT                      (6U)                                                /*!< DMA0_CDNE.CADN Position                 */
#define DMA_CDNE_CADN(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CADN_SHIFT))&DMA_CDNE_CADN_MASK) /*!< DMA0_CDNE.CADN Field                    */
#define DMA_CDNE_NOP_MASK                        (0x80U)                                             /*!< DMA0_CDNE.NOP Mask                      */
#define DMA_CDNE_NOP_SHIFT                       (7U)                                                /*!< DMA0_CDNE.NOP Position                  */
#define DMA_CDNE_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_NOP_SHIFT))&DMA_CDNE_NOP_MASK) /*!< DMA0_CDNE.NOP Field                     */

/*! @name SSRT - Set START Bit Register */
#define DMA_SSRT_SSRT_MASK                       (0xFU)                                              /*!< DMA0_SSRT.SSRT Mask                     */
#define DMA_SSRT_SSRT_SHIFT                      (0U)                                                /*!< DMA0_SSRT.SSRT Position                 */
#define DMA_SSRT_SSRT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SSRT_SHIFT))&DMA_SSRT_SSRT_MASK) /*!< DMA0_SSRT.SSRT Field                    */
#define DMA_SSRT_SAST_MASK                       (0x40U)                                             /*!< DMA0_SSRT.SAST Mask                     */
#define DMA_SSRT_SAST_SHIFT                      (6U)                                                /*!< DMA0_SSRT.SAST Position                 */
#define DMA_SSRT_SAST(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SAST_SHIFT))&DMA_SSRT_SAST_MASK) /*!< DMA0_SSRT.SAST Field                    */
#define DMA_SSRT_NOP_MASK                        (0x80U)                                             /*!< DMA0_SSRT.NOP Mask                      */
#define DMA_SSRT_NOP_SHIFT                       (7U)                                                /*!< DMA0_SSRT.NOP Position                  */
#define DMA_SSRT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_NOP_SHIFT))&DMA_SSRT_NOP_MASK) /*!< DMA0_SSRT.NOP Field                     */

/*! @name CERR - Clear Error Register */
#define DMA_CERR_CERR_MASK                       (0xFU)                                              /*!< DMA0_CERR.CERR Mask                     */
#define DMA_CERR_CERR_SHIFT                      (0U)                                                /*!< DMA0_CERR.CERR Position                 */
#define DMA_CERR_CERR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CERR_SHIFT))&DMA_CERR_CERR_MASK) /*!< DMA0_CERR.CERR Field                    */
#define DMA_CERR_CAEI_MASK                       (0x40U)                                             /*!< DMA0_CERR.CAEI Mask                     */
#define DMA_CERR_CAEI_SHIFT                      (6U)                                                /*!< DMA0_CERR.CAEI Position                 */
#define DMA_CERR_CAEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CAEI_SHIFT))&DMA_CERR_CAEI_MASK) /*!< DMA0_CERR.CAEI Field                    */
#define DMA_CERR_NOP_MASK                        (0x80U)                                             /*!< DMA0_CERR.NOP Mask                      */
#define DMA_CERR_NOP_SHIFT                       (7U)                                                /*!< DMA0_CERR.NOP Position                  */
#define DMA_CERR_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CERR_NOP_SHIFT))&DMA_CERR_NOP_MASK) /*!< DMA0_CERR.NOP Field                     */

/*! @name CINT - Clear Interrupt Request Register */
#define DMA_CINT_CINT_MASK                       (0xFU)                                              /*!< DMA0_CINT.CINT Mask                     */
#define DMA_CINT_CINT_SHIFT                      (0U)                                                /*!< DMA0_CINT.CINT Position                 */
#define DMA_CINT_CINT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CINT_SHIFT))&DMA_CINT_CINT_MASK) /*!< DMA0_CINT.CINT Field                    */
#define DMA_CINT_CAIR_MASK                       (0x40U)                                             /*!< DMA0_CINT.CAIR Mask                     */
#define DMA_CINT_CAIR_SHIFT                      (6U)                                                /*!< DMA0_CINT.CAIR Position                 */
#define DMA_CINT_CAIR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CAIR_SHIFT))&DMA_CINT_CAIR_MASK) /*!< DMA0_CINT.CAIR Field                    */
#define DMA_CINT_NOP_MASK                        (0x80U)                                             /*!< DMA0_CINT.NOP Mask                      */
#define DMA_CINT_NOP_SHIFT                       (7U)                                                /*!< DMA0_CINT.NOP Position                  */
#define DMA_CINT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CINT_NOP_SHIFT))&DMA_CINT_NOP_MASK) /*!< DMA0_CINT.NOP Field                     */

/*! @name INT - Interrupt Request Register */
#define DMA_INT_INT0_MASK                        (0x1U)                                              /*!< DMA0_INT.INT0 Mask                      */
#define DMA_INT_INT0_SHIFT                       (0U)                                                /*!< DMA0_INT.INT0 Position                  */
#define DMA_INT_INT0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT0_SHIFT))&DMA_INT_INT0_MASK) /*!< DMA0_INT.INT0 Field                     */
#define DMA_INT_INT1_MASK                        (0x2U)                                              /*!< DMA0_INT.INT1 Mask                      */
#define DMA_INT_INT1_SHIFT                       (1U)                                                /*!< DMA0_INT.INT1 Position                  */
#define DMA_INT_INT1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT1_SHIFT))&DMA_INT_INT1_MASK) /*!< DMA0_INT.INT1 Field                     */
#define DMA_INT_INT2_MASK                        (0x4U)                                              /*!< DMA0_INT.INT2 Mask                      */
#define DMA_INT_INT2_SHIFT                       (2U)                                                /*!< DMA0_INT.INT2 Position                  */
#define DMA_INT_INT2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT2_SHIFT))&DMA_INT_INT2_MASK) /*!< DMA0_INT.INT2 Field                     */
#define DMA_INT_INT3_MASK                        (0x8U)                                              /*!< DMA0_INT.INT3 Mask                      */
#define DMA_INT_INT3_SHIFT                       (3U)                                                /*!< DMA0_INT.INT3 Position                  */
#define DMA_INT_INT3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT3_SHIFT))&DMA_INT_INT3_MASK) /*!< DMA0_INT.INT3 Field                     */
#define DMA_INT_INT4_MASK                        (0x10U)                                             /*!< DMA0_INT.INT4 Mask                      */
#define DMA_INT_INT4_SHIFT                       (4U)                                                /*!< DMA0_INT.INT4 Position                  */
#define DMA_INT_INT4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT4_SHIFT))&DMA_INT_INT4_MASK) /*!< DMA0_INT.INT4 Field                     */
#define DMA_INT_INT5_MASK                        (0x20U)                                             /*!< DMA0_INT.INT5 Mask                      */
#define DMA_INT_INT5_SHIFT                       (5U)                                                /*!< DMA0_INT.INT5 Position                  */
#define DMA_INT_INT5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT5_SHIFT))&DMA_INT_INT5_MASK) /*!< DMA0_INT.INT5 Field                     */
#define DMA_INT_INT6_MASK                        (0x40U)                                             /*!< DMA0_INT.INT6 Mask                      */
#define DMA_INT_INT6_SHIFT                       (6U)                                                /*!< DMA0_INT.INT6 Position                  */
#define DMA_INT_INT6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT6_SHIFT))&DMA_INT_INT6_MASK) /*!< DMA0_INT.INT6 Field                     */
#define DMA_INT_INT7_MASK                        (0x80U)                                             /*!< DMA0_INT.INT7 Mask                      */
#define DMA_INT_INT7_SHIFT                       (7U)                                                /*!< DMA0_INT.INT7 Position                  */
#define DMA_INT_INT7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT7_SHIFT))&DMA_INT_INT7_MASK) /*!< DMA0_INT.INT7 Field                     */
#define DMA_INT_INT8_MASK                        (0x100U)                                            /*!< DMA0_INT.INT8 Mask                      */
#define DMA_INT_INT8_SHIFT                       (8U)                                                /*!< DMA0_INT.INT8 Position                  */
#define DMA_INT_INT8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT8_SHIFT))&DMA_INT_INT8_MASK) /*!< DMA0_INT.INT8 Field                     */
#define DMA_INT_INT9_MASK                        (0x200U)                                            /*!< DMA0_INT.INT9 Mask                      */
#define DMA_INT_INT9_SHIFT                       (9U)                                                /*!< DMA0_INT.INT9 Position                  */
#define DMA_INT_INT9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT9_SHIFT))&DMA_INT_INT9_MASK) /*!< DMA0_INT.INT9 Field                     */
#define DMA_INT_INT10_MASK                       (0x400U)                                            /*!< DMA0_INT.INT10 Mask                     */
#define DMA_INT_INT10_SHIFT                      (10U)                                               /*!< DMA0_INT.INT10 Position                 */
#define DMA_INT_INT10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT10_SHIFT))&DMA_INT_INT10_MASK) /*!< DMA0_INT.INT10 Field                    */
#define DMA_INT_INT11_MASK                       (0x800U)                                            /*!< DMA0_INT.INT11 Mask                     */
#define DMA_INT_INT11_SHIFT                      (11U)                                               /*!< DMA0_INT.INT11 Position                 */
#define DMA_INT_INT11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT11_SHIFT))&DMA_INT_INT11_MASK) /*!< DMA0_INT.INT11 Field                    */
#define DMA_INT_INT12_MASK                       (0x1000U)                                           /*!< DMA0_INT.INT12 Mask                     */
#define DMA_INT_INT12_SHIFT                      (12U)                                               /*!< DMA0_INT.INT12 Position                 */
#define DMA_INT_INT12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT12_SHIFT))&DMA_INT_INT12_MASK) /*!< DMA0_INT.INT12 Field                    */
#define DMA_INT_INT13_MASK                       (0x2000U)                                           /*!< DMA0_INT.INT13 Mask                     */
#define DMA_INT_INT13_SHIFT                      (13U)                                               /*!< DMA0_INT.INT13 Position                 */
#define DMA_INT_INT13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT13_SHIFT))&DMA_INT_INT13_MASK) /*!< DMA0_INT.INT13 Field                    */
#define DMA_INT_INT14_MASK                       (0x4000U)                                           /*!< DMA0_INT.INT14 Mask                     */
#define DMA_INT_INT14_SHIFT                      (14U)                                               /*!< DMA0_INT.INT14 Position                 */
#define DMA_INT_INT14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT14_SHIFT))&DMA_INT_INT14_MASK) /*!< DMA0_INT.INT14 Field                    */
#define DMA_INT_INT15_MASK                       (0x8000U)                                           /*!< DMA0_INT.INT15 Mask                     */
#define DMA_INT_INT15_SHIFT                      (15U)                                               /*!< DMA0_INT.INT15 Position                 */
#define DMA_INT_INT15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT15_SHIFT))&DMA_INT_INT15_MASK) /*!< DMA0_INT.INT15 Field                    */

/*! @name ERR - Error Register */
#define DMA_ERR_ERR0_MASK                        (0x1U)                                              /*!< DMA0_ERR.ERR0 Mask                      */
#define DMA_ERR_ERR0_SHIFT                       (0U)                                                /*!< DMA0_ERR.ERR0 Position                  */
#define DMA_ERR_ERR0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR0_SHIFT))&DMA_ERR_ERR0_MASK) /*!< DMA0_ERR.ERR0 Field                     */
#define DMA_ERR_ERR1_MASK                        (0x2U)                                              /*!< DMA0_ERR.ERR1 Mask                      */
#define DMA_ERR_ERR1_SHIFT                       (1U)                                                /*!< DMA0_ERR.ERR1 Position                  */
#define DMA_ERR_ERR1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR1_SHIFT))&DMA_ERR_ERR1_MASK) /*!< DMA0_ERR.ERR1 Field                     */
#define DMA_ERR_ERR2_MASK                        (0x4U)                                              /*!< DMA0_ERR.ERR2 Mask                      */
#define DMA_ERR_ERR2_SHIFT                       (2U)                                                /*!< DMA0_ERR.ERR2 Position                  */
#define DMA_ERR_ERR2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR2_SHIFT))&DMA_ERR_ERR2_MASK) /*!< DMA0_ERR.ERR2 Field                     */
#define DMA_ERR_ERR3_MASK                        (0x8U)                                              /*!< DMA0_ERR.ERR3 Mask                      */
#define DMA_ERR_ERR3_SHIFT                       (3U)                                                /*!< DMA0_ERR.ERR3 Position                  */
#define DMA_ERR_ERR3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR3_SHIFT))&DMA_ERR_ERR3_MASK) /*!< DMA0_ERR.ERR3 Field                     */
#define DMA_ERR_ERR4_MASK                        (0x10U)                                             /*!< DMA0_ERR.ERR4 Mask                      */
#define DMA_ERR_ERR4_SHIFT                       (4U)                                                /*!< DMA0_ERR.ERR4 Position                  */
#define DMA_ERR_ERR4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR4_SHIFT))&DMA_ERR_ERR4_MASK) /*!< DMA0_ERR.ERR4 Field                     */
#define DMA_ERR_ERR5_MASK                        (0x20U)                                             /*!< DMA0_ERR.ERR5 Mask                      */
#define DMA_ERR_ERR5_SHIFT                       (5U)                                                /*!< DMA0_ERR.ERR5 Position                  */
#define DMA_ERR_ERR5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR5_SHIFT))&DMA_ERR_ERR5_MASK) /*!< DMA0_ERR.ERR5 Field                     */
#define DMA_ERR_ERR6_MASK                        (0x40U)                                             /*!< DMA0_ERR.ERR6 Mask                      */
#define DMA_ERR_ERR6_SHIFT                       (6U)                                                /*!< DMA0_ERR.ERR6 Position                  */
#define DMA_ERR_ERR6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR6_SHIFT))&DMA_ERR_ERR6_MASK) /*!< DMA0_ERR.ERR6 Field                     */
#define DMA_ERR_ERR7_MASK                        (0x80U)                                             /*!< DMA0_ERR.ERR7 Mask                      */
#define DMA_ERR_ERR7_SHIFT                       (7U)                                                /*!< DMA0_ERR.ERR7 Position                  */
#define DMA_ERR_ERR7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR7_SHIFT))&DMA_ERR_ERR7_MASK) /*!< DMA0_ERR.ERR7 Field                     */
#define DMA_ERR_ERR8_MASK                        (0x100U)                                            /*!< DMA0_ERR.ERR8 Mask                      */
#define DMA_ERR_ERR8_SHIFT                       (8U)                                                /*!< DMA0_ERR.ERR8 Position                  */
#define DMA_ERR_ERR8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR8_SHIFT))&DMA_ERR_ERR8_MASK) /*!< DMA0_ERR.ERR8 Field                     */
#define DMA_ERR_ERR9_MASK                        (0x200U)                                            /*!< DMA0_ERR.ERR9 Mask                      */
#define DMA_ERR_ERR9_SHIFT                       (9U)                                                /*!< DMA0_ERR.ERR9 Position                  */
#define DMA_ERR_ERR9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR9_SHIFT))&DMA_ERR_ERR9_MASK) /*!< DMA0_ERR.ERR9 Field                     */
#define DMA_ERR_ERR10_MASK                       (0x400U)                                            /*!< DMA0_ERR.ERR10 Mask                     */
#define DMA_ERR_ERR10_SHIFT                      (10U)                                               /*!< DMA0_ERR.ERR10 Position                 */
#define DMA_ERR_ERR10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR10_SHIFT))&DMA_ERR_ERR10_MASK) /*!< DMA0_ERR.ERR10 Field                    */
#define DMA_ERR_ERR11_MASK                       (0x800U)                                            /*!< DMA0_ERR.ERR11 Mask                     */
#define DMA_ERR_ERR11_SHIFT                      (11U)                                               /*!< DMA0_ERR.ERR11 Position                 */
#define DMA_ERR_ERR11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR11_SHIFT))&DMA_ERR_ERR11_MASK) /*!< DMA0_ERR.ERR11 Field                    */
#define DMA_ERR_ERR12_MASK                       (0x1000U)                                           /*!< DMA0_ERR.ERR12 Mask                     */
#define DMA_ERR_ERR12_SHIFT                      (12U)                                               /*!< DMA0_ERR.ERR12 Position                 */
#define DMA_ERR_ERR12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR12_SHIFT))&DMA_ERR_ERR12_MASK) /*!< DMA0_ERR.ERR12 Field                    */
#define DMA_ERR_ERR13_MASK                       (0x2000U)                                           /*!< DMA0_ERR.ERR13 Mask                     */
#define DMA_ERR_ERR13_SHIFT                      (13U)                                               /*!< DMA0_ERR.ERR13 Position                 */
#define DMA_ERR_ERR13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR13_SHIFT))&DMA_ERR_ERR13_MASK) /*!< DMA0_ERR.ERR13 Field                    */
#define DMA_ERR_ERR14_MASK                       (0x4000U)                                           /*!< DMA0_ERR.ERR14 Mask                     */
#define DMA_ERR_ERR14_SHIFT                      (14U)                                               /*!< DMA0_ERR.ERR14 Position                 */
#define DMA_ERR_ERR14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR14_SHIFT))&DMA_ERR_ERR14_MASK) /*!< DMA0_ERR.ERR14 Field                    */
#define DMA_ERR_ERR15_MASK                       (0x8000U)                                           /*!< DMA0_ERR.ERR15 Mask                     */
#define DMA_ERR_ERR15_SHIFT                      (15U)                                               /*!< DMA0_ERR.ERR15 Position                 */
#define DMA_ERR_ERR15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR15_SHIFT))&DMA_ERR_ERR15_MASK) /*!< DMA0_ERR.ERR15 Field                    */

/*! @name HRS - Hardware Request Status Register */
#define DMA_HRS_HRS0_MASK                        (0x1U)                                              /*!< DMA0_HRS.HRS0 Mask                      */
#define DMA_HRS_HRS0_SHIFT                       (0U)                                                /*!< DMA0_HRS.HRS0 Position                  */
#define DMA_HRS_HRS0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS0_SHIFT))&DMA_HRS_HRS0_MASK) /*!< DMA0_HRS.HRS0 Field                     */
#define DMA_HRS_HRS1_MASK                        (0x2U)                                              /*!< DMA0_HRS.HRS1 Mask                      */
#define DMA_HRS_HRS1_SHIFT                       (1U)                                                /*!< DMA0_HRS.HRS1 Position                  */
#define DMA_HRS_HRS1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS1_SHIFT))&DMA_HRS_HRS1_MASK) /*!< DMA0_HRS.HRS1 Field                     */
#define DMA_HRS_HRS2_MASK                        (0x4U)                                              /*!< DMA0_HRS.HRS2 Mask                      */
#define DMA_HRS_HRS2_SHIFT                       (2U)                                                /*!< DMA0_HRS.HRS2 Position                  */
#define DMA_HRS_HRS2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS2_SHIFT))&DMA_HRS_HRS2_MASK) /*!< DMA0_HRS.HRS2 Field                     */
#define DMA_HRS_HRS3_MASK                        (0x8U)                                              /*!< DMA0_HRS.HRS3 Mask                      */
#define DMA_HRS_HRS3_SHIFT                       (3U)                                                /*!< DMA0_HRS.HRS3 Position                  */
#define DMA_HRS_HRS3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS3_SHIFT))&DMA_HRS_HRS3_MASK) /*!< DMA0_HRS.HRS3 Field                     */
#define DMA_HRS_HRS4_MASK                        (0x10U)                                             /*!< DMA0_HRS.HRS4 Mask                      */
#define DMA_HRS_HRS4_SHIFT                       (4U)                                                /*!< DMA0_HRS.HRS4 Position                  */
#define DMA_HRS_HRS4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS4_SHIFT))&DMA_HRS_HRS4_MASK) /*!< DMA0_HRS.HRS4 Field                     */
#define DMA_HRS_HRS5_MASK                        (0x20U)                                             /*!< DMA0_HRS.HRS5 Mask                      */
#define DMA_HRS_HRS5_SHIFT                       (5U)                                                /*!< DMA0_HRS.HRS5 Position                  */
#define DMA_HRS_HRS5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS5_SHIFT))&DMA_HRS_HRS5_MASK) /*!< DMA0_HRS.HRS5 Field                     */
#define DMA_HRS_HRS6_MASK                        (0x40U)                                             /*!< DMA0_HRS.HRS6 Mask                      */
#define DMA_HRS_HRS6_SHIFT                       (6U)                                                /*!< DMA0_HRS.HRS6 Position                  */
#define DMA_HRS_HRS6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS6_SHIFT))&DMA_HRS_HRS6_MASK) /*!< DMA0_HRS.HRS6 Field                     */
#define DMA_HRS_HRS7_MASK                        (0x80U)                                             /*!< DMA0_HRS.HRS7 Mask                      */
#define DMA_HRS_HRS7_SHIFT                       (7U)                                                /*!< DMA0_HRS.HRS7 Position                  */
#define DMA_HRS_HRS7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS7_SHIFT))&DMA_HRS_HRS7_MASK) /*!< DMA0_HRS.HRS7 Field                     */
#define DMA_HRS_HRS8_MASK                        (0x100U)                                            /*!< DMA0_HRS.HRS8 Mask                      */
#define DMA_HRS_HRS8_SHIFT                       (8U)                                                /*!< DMA0_HRS.HRS8 Position                  */
#define DMA_HRS_HRS8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS8_SHIFT))&DMA_HRS_HRS8_MASK) /*!< DMA0_HRS.HRS8 Field                     */
#define DMA_HRS_HRS9_MASK                        (0x200U)                                            /*!< DMA0_HRS.HRS9 Mask                      */
#define DMA_HRS_HRS9_SHIFT                       (9U)                                                /*!< DMA0_HRS.HRS9 Position                  */
#define DMA_HRS_HRS9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS9_SHIFT))&DMA_HRS_HRS9_MASK) /*!< DMA0_HRS.HRS9 Field                     */
#define DMA_HRS_HRS10_MASK                       (0x400U)                                            /*!< DMA0_HRS.HRS10 Mask                     */
#define DMA_HRS_HRS10_SHIFT                      (10U)                                               /*!< DMA0_HRS.HRS10 Position                 */
#define DMA_HRS_HRS10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS10_SHIFT))&DMA_HRS_HRS10_MASK) /*!< DMA0_HRS.HRS10 Field                    */
#define DMA_HRS_HRS11_MASK                       (0x800U)                                            /*!< DMA0_HRS.HRS11 Mask                     */
#define DMA_HRS_HRS11_SHIFT                      (11U)                                               /*!< DMA0_HRS.HRS11 Position                 */
#define DMA_HRS_HRS11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS11_SHIFT))&DMA_HRS_HRS11_MASK) /*!< DMA0_HRS.HRS11 Field                    */
#define DMA_HRS_HRS12_MASK                       (0x1000U)                                           /*!< DMA0_HRS.HRS12 Mask                     */
#define DMA_HRS_HRS12_SHIFT                      (12U)                                               /*!< DMA0_HRS.HRS12 Position                 */
#define DMA_HRS_HRS12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS12_SHIFT))&DMA_HRS_HRS12_MASK) /*!< DMA0_HRS.HRS12 Field                    */
#define DMA_HRS_HRS13_MASK                       (0x2000U)                                           /*!< DMA0_HRS.HRS13 Mask                     */
#define DMA_HRS_HRS13_SHIFT                      (13U)                                               /*!< DMA0_HRS.HRS13 Position                 */
#define DMA_HRS_HRS13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS13_SHIFT))&DMA_HRS_HRS13_MASK) /*!< DMA0_HRS.HRS13 Field                    */
#define DMA_HRS_HRS14_MASK                       (0x4000U)                                           /*!< DMA0_HRS.HRS14 Mask                     */
#define DMA_HRS_HRS14_SHIFT                      (14U)                                               /*!< DMA0_HRS.HRS14 Position                 */
#define DMA_HRS_HRS14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS14_SHIFT))&DMA_HRS_HRS14_MASK) /*!< DMA0_HRS.HRS14 Field                    */
#define DMA_HRS_HRS15_MASK                       (0x8000U)                                           /*!< DMA0_HRS.HRS15 Mask                     */
#define DMA_HRS_HRS15_SHIFT                      (15U)                                               /*!< DMA0_HRS.HRS15 Position                 */
#define DMA_HRS_HRS15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS15_SHIFT))&DMA_HRS_HRS15_MASK) /*!< DMA0_HRS.HRS15 Field                    */

/*! @name EARS - Enable Asynchronous Request in Stop Register */
#define DMA_EARS_EDREQ_0_MASK                    (0x1U)                                              /*!< DMA0_EARS.EDREQ_0 Mask                  */
#define DMA_EARS_EDREQ_0_SHIFT                   (0U)                                                /*!< DMA0_EARS.EDREQ_0 Position              */
#define DMA_EARS_EDREQ_0(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_0_SHIFT))&DMA_EARS_EDREQ_0_MASK) /*!< DMA0_EARS.EDREQ_0 Field                 */
#define DMA_EARS_EDREQ_1_MASK                    (0x2U)                                              /*!< DMA0_EARS.EDREQ_1 Mask                  */
#define DMA_EARS_EDREQ_1_SHIFT                   (1U)                                                /*!< DMA0_EARS.EDREQ_1 Position              */
#define DMA_EARS_EDREQ_1(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_1_SHIFT))&DMA_EARS_EDREQ_1_MASK) /*!< DMA0_EARS.EDREQ_1 Field                 */
#define DMA_EARS_EDREQ_2_MASK                    (0x4U)                                              /*!< DMA0_EARS.EDREQ_2 Mask                  */
#define DMA_EARS_EDREQ_2_SHIFT                   (2U)                                                /*!< DMA0_EARS.EDREQ_2 Position              */
#define DMA_EARS_EDREQ_2(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_2_SHIFT))&DMA_EARS_EDREQ_2_MASK) /*!< DMA0_EARS.EDREQ_2 Field                 */
#define DMA_EARS_EDREQ_3_MASK                    (0x8U)                                              /*!< DMA0_EARS.EDREQ_3 Mask                  */
#define DMA_EARS_EDREQ_3_SHIFT                   (3U)                                                /*!< DMA0_EARS.EDREQ_3 Position              */
#define DMA_EARS_EDREQ_3(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_3_SHIFT))&DMA_EARS_EDREQ_3_MASK) /*!< DMA0_EARS.EDREQ_3 Field                 */
#define DMA_EARS_EDREQ_4_MASK                    (0x10U)                                             /*!< DMA0_EARS.EDREQ_4 Mask                  */
#define DMA_EARS_EDREQ_4_SHIFT                   (4U)                                                /*!< DMA0_EARS.EDREQ_4 Position              */
#define DMA_EARS_EDREQ_4(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_4_SHIFT))&DMA_EARS_EDREQ_4_MASK) /*!< DMA0_EARS.EDREQ_4 Field                 */
#define DMA_EARS_EDREQ_5_MASK                    (0x20U)                                             /*!< DMA0_EARS.EDREQ_5 Mask                  */
#define DMA_EARS_EDREQ_5_SHIFT                   (5U)                                                /*!< DMA0_EARS.EDREQ_5 Position              */
#define DMA_EARS_EDREQ_5(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_5_SHIFT))&DMA_EARS_EDREQ_5_MASK) /*!< DMA0_EARS.EDREQ_5 Field                 */
#define DMA_EARS_EDREQ_6_MASK                    (0x40U)                                             /*!< DMA0_EARS.EDREQ_6 Mask                  */
#define DMA_EARS_EDREQ_6_SHIFT                   (6U)                                                /*!< DMA0_EARS.EDREQ_6 Position              */
#define DMA_EARS_EDREQ_6(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_6_SHIFT))&DMA_EARS_EDREQ_6_MASK) /*!< DMA0_EARS.EDREQ_6 Field                 */
#define DMA_EARS_EDREQ_7_MASK                    (0x80U)                                             /*!< DMA0_EARS.EDREQ_7 Mask                  */
#define DMA_EARS_EDREQ_7_SHIFT                   (7U)                                                /*!< DMA0_EARS.EDREQ_7 Position              */
#define DMA_EARS_EDREQ_7(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_7_SHIFT))&DMA_EARS_EDREQ_7_MASK) /*!< DMA0_EARS.EDREQ_7 Field                 */
#define DMA_EARS_EDREQ_8_MASK                    (0x100U)                                            /*!< DMA0_EARS.EDREQ_8 Mask                  */
#define DMA_EARS_EDREQ_8_SHIFT                   (8U)                                                /*!< DMA0_EARS.EDREQ_8 Position              */
#define DMA_EARS_EDREQ_8(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_8_SHIFT))&DMA_EARS_EDREQ_8_MASK) /*!< DMA0_EARS.EDREQ_8 Field                 */
#define DMA_EARS_EDREQ_9_MASK                    (0x200U)                                            /*!< DMA0_EARS.EDREQ_9 Mask                  */
#define DMA_EARS_EDREQ_9_SHIFT                   (9U)                                                /*!< DMA0_EARS.EDREQ_9 Position              */
#define DMA_EARS_EDREQ_9(x)                      (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_9_SHIFT))&DMA_EARS_EDREQ_9_MASK) /*!< DMA0_EARS.EDREQ_9 Field                 */
#define DMA_EARS_EDREQ_10_MASK                   (0x400U)                                            /*!< DMA0_EARS.EDREQ_10 Mask                 */
#define DMA_EARS_EDREQ_10_SHIFT                  (10U)                                               /*!< DMA0_EARS.EDREQ_10 Position             */
#define DMA_EARS_EDREQ_10(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_10_SHIFT))&DMA_EARS_EDREQ_10_MASK) /*!< DMA0_EARS.EDREQ_10 Field                */
#define DMA_EARS_EDREQ_11_MASK                   (0x800U)                                            /*!< DMA0_EARS.EDREQ_11 Mask                 */
#define DMA_EARS_EDREQ_11_SHIFT                  (11U)                                               /*!< DMA0_EARS.EDREQ_11 Position             */
#define DMA_EARS_EDREQ_11(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_11_SHIFT))&DMA_EARS_EDREQ_11_MASK) /*!< DMA0_EARS.EDREQ_11 Field                */
#define DMA_EARS_EDREQ_12_MASK                   (0x1000U)                                           /*!< DMA0_EARS.EDREQ_12 Mask                 */
#define DMA_EARS_EDREQ_12_SHIFT                  (12U)                                               /*!< DMA0_EARS.EDREQ_12 Position             */
#define DMA_EARS_EDREQ_12(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_12_SHIFT))&DMA_EARS_EDREQ_12_MASK) /*!< DMA0_EARS.EDREQ_12 Field                */
#define DMA_EARS_EDREQ_13_MASK                   (0x2000U)                                           /*!< DMA0_EARS.EDREQ_13 Mask                 */
#define DMA_EARS_EDREQ_13_SHIFT                  (13U)                                               /*!< DMA0_EARS.EDREQ_13 Position             */
#define DMA_EARS_EDREQ_13(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_13_SHIFT))&DMA_EARS_EDREQ_13_MASK) /*!< DMA0_EARS.EDREQ_13 Field                */
#define DMA_EARS_EDREQ_14_MASK                   (0x4000U)                                           /*!< DMA0_EARS.EDREQ_14 Mask                 */
#define DMA_EARS_EDREQ_14_SHIFT                  (14U)                                               /*!< DMA0_EARS.EDREQ_14 Position             */
#define DMA_EARS_EDREQ_14(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_14_SHIFT))&DMA_EARS_EDREQ_14_MASK) /*!< DMA0_EARS.EDREQ_14 Field                */
#define DMA_EARS_EDREQ_15_MASK                   (0x8000U)                                           /*!< DMA0_EARS.EDREQ_15 Mask                 */
#define DMA_EARS_EDREQ_15_SHIFT                  (15U)                                               /*!< DMA0_EARS.EDREQ_15 Position             */
#define DMA_EARS_EDREQ_15(x)                     (((uint32_t)(((uint32_t)(x))<<DMA_EARS_EDREQ_15_SHIFT))&DMA_EARS_EDREQ_15_MASK) /*!< DMA0_EARS.EDREQ_15 Field                */

/*! @name DCHPRI - Channel %s Priority Register */
#define DMA_DCHPRI_CHPRI_MASK                    (0xFU)                                              /*!< DMA0_DCHPRI.CHPRI Mask                  */
#define DMA_DCHPRI_CHPRI_SHIFT                   (0U)                                                /*!< DMA0_DCHPRI.CHPRI Position              */
#define DMA_DCHPRI_CHPRI(x)                      (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_CHPRI_SHIFT))&DMA_DCHPRI_CHPRI_MASK) /*!< DMA0_DCHPRI.CHPRI Field                 */
#define DMA_DCHPRI_DPA_MASK                      (0x40U)                                             /*!< DMA0_DCHPRI.DPA Mask                    */
#define DMA_DCHPRI_DPA_SHIFT                     (6U)                                                /*!< DMA0_DCHPRI.DPA Position                */
#define DMA_DCHPRI_DPA(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_DPA_SHIFT))&DMA_DCHPRI_DPA_MASK) /*!< DMA0_DCHPRI.DPA Field                   */
#define DMA_DCHPRI_ECP_MASK                      (0x80U)                                             /*!< DMA0_DCHPRI.ECP Mask                    */
#define DMA_DCHPRI_ECP_SHIFT                     (7U)                                                /*!< DMA0_DCHPRI.ECP Position                */
#define DMA_DCHPRI_ECP(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_ECP_SHIFT))&DMA_DCHPRI_ECP_MASK) /*!< DMA0_DCHPRI.ECP Field                   */

/*! @name DCHPRI - Channel %s Priority Register */

/*! @name SADDR - Source Address */
#define DMA_SADDR_SADDR_MASK                     (0xFFFFFFFFU)                                       /*!< DMA0_SADDR.SADDR Mask                   */
#define DMA_SADDR_SADDR_SHIFT                    (0U)                                                /*!< DMA0_SADDR.SADDR Position               */
#define DMA_SADDR_SADDR(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_SADDR_SADDR_SHIFT))&DMA_SADDR_SADDR_MASK) /*!< DMA0_SADDR.SADDR Field                  */

/*! @name SOFF - Signed Source Address Offset */
#define DMA_SOFF_SOFF_MASK                       (0xFFFFU)                                           /*!< DMA0_SOFF.SOFF Mask                     */
#define DMA_SOFF_SOFF_SHIFT                      (0U)                                                /*!< DMA0_SOFF.SOFF Position                 */
#define DMA_SOFF_SOFF(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_SOFF_SOFF_SHIFT))&DMA_SOFF_SOFF_MASK) /*!< DMA0_SOFF.SOFF Field                    */

/*! @name ATTR - Transfer Attributes */
#define DMA_ATTR_DSIZE_MASK                      (0x7U)                                              /*!< DMA0_ATTR.DSIZE Mask                    */
#define DMA_ATTR_DSIZE_SHIFT                     (0U)                                                /*!< DMA0_ATTR.DSIZE Position                */
#define DMA_ATTR_DSIZE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_DSIZE_SHIFT))&DMA_ATTR_DSIZE_MASK) /*!< DMA0_ATTR.DSIZE Field                   */
#define DMA_ATTR_DMOD_MASK                       (0xF8U)                                             /*!< DMA0_ATTR.DMOD Mask                     */
#define DMA_ATTR_DMOD_SHIFT                      (3U)                                                /*!< DMA0_ATTR.DMOD Position                 */
#define DMA_ATTR_DMOD(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_DMOD_SHIFT))&DMA_ATTR_DMOD_MASK) /*!< DMA0_ATTR.DMOD Field                    */
#define DMA_ATTR_SSIZE_MASK                      (0x700U)                                            /*!< DMA0_ATTR.SSIZE Mask                    */
#define DMA_ATTR_SSIZE_SHIFT                     (8U)                                                /*!< DMA0_ATTR.SSIZE Position                */
#define DMA_ATTR_SSIZE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_SSIZE_SHIFT))&DMA_ATTR_SSIZE_MASK) /*!< DMA0_ATTR.SSIZE Field                   */
#define DMA_ATTR_SMOD_MASK                       (0xF800U)                                           /*!< DMA0_ATTR.SMOD Mask                     */
#define DMA_ATTR_SMOD_SHIFT                      (11U)                                               /*!< DMA0_ATTR.SMOD Position                 */
#define DMA_ATTR_SMOD(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_SMOD_SHIFT))&DMA_ATTR_SMOD_MASK) /*!< DMA0_ATTR.SMOD Field                    */

/*! @name NBYTES_MLNO - Minor Byte Count (Minor Loop Disabled) */
#define DMA_NBYTES_MLNO_NBYTES_MASK              (0xFFFFFFFFU)                                       /*!< DMA0_NBYTES_MLNO.NBYTES Mask            */
#define DMA_NBYTES_MLNO_NBYTES_SHIFT             (0U)                                                /*!< DMA0_NBYTES_MLNO.NBYTES Position        */
#define DMA_NBYTES_MLNO_NBYTES(x)                (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLNO_NBYTES_SHIFT))&DMA_NBYTES_MLNO_NBYTES_MASK) /*!< DMA0_NBYTES_MLNO.NBYTES Field           */

/*! @name NBYTES_MLOFFNO - Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled) */
#define DMA_NBYTES_MLOFFNO_NBYTES_MASK           (0x3FFFFFFFU)                                       /*!< DMA0_NBYTES_MLOFFNO.NBYTES Mask         */
#define DMA_NBYTES_MLOFFNO_NBYTES_SHIFT          (0U)                                                /*!< DMA0_NBYTES_MLOFFNO.NBYTES Position     */
#define DMA_NBYTES_MLOFFNO_NBYTES(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_NBYTES_MLOFFNO_NBYTES_MASK) /*!< DMA0_NBYTES_MLOFFNO.NBYTES Field        */
#define DMA_NBYTES_MLOFFNO_DMLOE_MASK            (0x40000000U)                                       /*!< DMA0_NBYTES_MLOFFNO.DMLOE Mask          */
#define DMA_NBYTES_MLOFFNO_DMLOE_SHIFT           (30U)                                               /*!< DMA0_NBYTES_MLOFFNO.DMLOE Position      */
#define DMA_NBYTES_MLOFFNO_DMLOE(x)              (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_NBYTES_MLOFFNO_DMLOE_MASK) /*!< DMA0_NBYTES_MLOFFNO.DMLOE Field         */
#define DMA_NBYTES_MLOFFNO_SMLOE_MASK            (0x80000000U)                                       /*!< DMA0_NBYTES_MLOFFNO.SMLOE Mask          */
#define DMA_NBYTES_MLOFFNO_SMLOE_SHIFT           (31U)                                               /*!< DMA0_NBYTES_MLOFFNO.SMLOE Position      */
#define DMA_NBYTES_MLOFFNO_SMLOE(x)              (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_NBYTES_MLOFFNO_SMLOE_MASK) /*!< DMA0_NBYTES_MLOFFNO.SMLOE Field         */

/*! @name NBYTES_MLOFFYES - Signed Minor Loop Offset (Minor Loop and Offset Enabled) */
#define DMA_NBYTES_MLOFFYES_NBYTES_MASK          (0x3FFU)                                            /*!< DMA0_NBYTES_MLOFFYES.NBYTES Mask        */
#define DMA_NBYTES_MLOFFYES_NBYTES_SHIFT         (0U)                                                /*!< DMA0_NBYTES_MLOFFYES.NBYTES Position    */
#define DMA_NBYTES_MLOFFYES_NBYTES(x)            (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_NBYTES_MLOFFYES_NBYTES_MASK) /*!< DMA0_NBYTES_MLOFFYES.NBYTES Field       */
#define DMA_NBYTES_MLOFFYES_MLOFF_MASK           (0x3FFFFC00U)                                       /*!< DMA0_NBYTES_MLOFFYES.MLOFF Mask         */
#define DMA_NBYTES_MLOFFYES_MLOFF_SHIFT          (10U)                                               /*!< DMA0_NBYTES_MLOFFYES.MLOFF Position     */
#define DMA_NBYTES_MLOFFYES_MLOFF(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_NBYTES_MLOFFYES_MLOFF_MASK) /*!< DMA0_NBYTES_MLOFFYES.MLOFF Field        */
#define DMA_NBYTES_MLOFFYES_DMLOE_MASK           (0x40000000U)                                       /*!< DMA0_NBYTES_MLOFFYES.DMLOE Mask         */
#define DMA_NBYTES_MLOFFYES_DMLOE_SHIFT          (30U)                                               /*!< DMA0_NBYTES_MLOFFYES.DMLOE Position     */
#define DMA_NBYTES_MLOFFYES_DMLOE(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_NBYTES_MLOFFYES_DMLOE_MASK) /*!< DMA0_NBYTES_MLOFFYES.DMLOE Field        */
#define DMA_NBYTES_MLOFFYES_SMLOE_MASK           (0x80000000U)                                       /*!< DMA0_NBYTES_MLOFFYES.SMLOE Mask         */
#define DMA_NBYTES_MLOFFYES_SMLOE_SHIFT          (31U)                                               /*!< DMA0_NBYTES_MLOFFYES.SMLOE Position     */
#define DMA_NBYTES_MLOFFYES_SMLOE(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_NBYTES_MLOFFYES_SMLOE_MASK) /*!< DMA0_NBYTES_MLOFFYES.SMLOE Field        */

/*! @name SLAST - Last Source Address Adjustment */
#define DMA_SLAST_SLAST_MASK                     (0xFFFFFFFFU)                                       /*!< DMA0_SLAST.SLAST Mask                   */
#define DMA_SLAST_SLAST_SHIFT                    (0U)                                                /*!< DMA0_SLAST.SLAST Position               */
#define DMA_SLAST_SLAST(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_SLAST_SLAST_SHIFT))&DMA_SLAST_SLAST_MASK) /*!< DMA0_SLAST.SLAST Field                  */

/*! @name DADDR - Destination Address */
#define DMA_DADDR_DADDR_MASK                     (0xFFFFFFFFU)                                       /*!< DMA0_DADDR.DADDR Mask                   */
#define DMA_DADDR_DADDR_SHIFT                    (0U)                                                /*!< DMA0_DADDR.DADDR Position               */
#define DMA_DADDR_DADDR(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_DADDR_DADDR_SHIFT))&DMA_DADDR_DADDR_MASK) /*!< DMA0_DADDR.DADDR Field                  */

/*! @name DOFF - Signed Destination Address Offset */
#define DMA_DOFF_DOFF_MASK                       (0xFFFFU)                                           /*!< DMA0_DOFF.DOFF Mask                     */
#define DMA_DOFF_DOFF_SHIFT                      (0U)                                                /*!< DMA0_DOFF.DOFF Position                 */
#define DMA_DOFF_DOFF(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_DOFF_DOFF_SHIFT))&DMA_DOFF_DOFF_MASK) /*!< DMA0_DOFF.DOFF Field                    */

/*! @name CITER_ELINKNO - Current Minor Loop Link, Major Loop Count (Channel Linking Disabled) */
#define DMA_CITER_ELINKNO_CITER_MASK             (0x7FFFU)                                           /*!< DMA0_CITER_ELINKNO.CITER Mask           */
#define DMA_CITER_ELINKNO_CITER_SHIFT            (0U)                                                /*!< DMA0_CITER_ELINKNO.CITER Position       */
#define DMA_CITER_ELINKNO_CITER(x)               (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKNO_CITER_SHIFT))&DMA_CITER_ELINKNO_CITER_MASK) /*!< DMA0_CITER_ELINKNO.CITER Field          */
#define DMA_CITER_ELINKNO_ELINK_MASK             (0x8000U)                                           /*!< DMA0_CITER_ELINKNO.ELINK Mask           */
#define DMA_CITER_ELINKNO_ELINK_SHIFT            (15U)                                               /*!< DMA0_CITER_ELINKNO.ELINK Position       */
#define DMA_CITER_ELINKNO_ELINK(x)               (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKNO_ELINK_SHIFT))&DMA_CITER_ELINKNO_ELINK_MASK) /*!< DMA0_CITER_ELINKNO.ELINK Field          */

/*! @name CITER_ELINKYES - Current Minor Loop Link, Major Loop Count (Channel Linking Enabled) */
#define DMA_CITER_ELINKYES_CITER_MASK            (0x1FFU)                                            /*!< DMA0_CITER_ELINKYES.CITER Mask          */
#define DMA_CITER_ELINKYES_CITER_SHIFT           (0U)                                                /*!< DMA0_CITER_ELINKYES.CITER Position      */
#define DMA_CITER_ELINKYES_CITER(x)              (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_CITER_SHIFT))&DMA_CITER_ELINKYES_CITER_MASK) /*!< DMA0_CITER_ELINKYES.CITER Field         */
#define DMA_CITER_ELINKYES_LINKCH_MASK           (0x1E00U)                                           /*!< DMA0_CITER_ELINKYES.LINKCH Mask         */
#define DMA_CITER_ELINKYES_LINKCH_SHIFT          (9U)                                                /*!< DMA0_CITER_ELINKYES.LINKCH Position     */
#define DMA_CITER_ELINKYES_LINKCH(x)             (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_LINKCH_SHIFT))&DMA_CITER_ELINKYES_LINKCH_MASK) /*!< DMA0_CITER_ELINKYES.LINKCH Field        */
#define DMA_CITER_ELINKYES_ELINK_MASK            (0x8000U)                                           /*!< DMA0_CITER_ELINKYES.ELINK Mask          */
#define DMA_CITER_ELINKYES_ELINK_SHIFT           (15U)                                               /*!< DMA0_CITER_ELINKYES.ELINK Position      */
#define DMA_CITER_ELINKYES_ELINK(x)              (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_ELINK_SHIFT))&DMA_CITER_ELINKYES_ELINK_MASK) /*!< DMA0_CITER_ELINKYES.ELINK Field         */

/*! @name DLASTSGA - Last Destination Address Adjustment/Scatter Gather Address */
#define DMA_DLASTSGA_DLASTSGA_MASK               (0xFFFFFFFFU)                                       /*!< DMA0_DLASTSGA.DLASTSGA Mask             */
#define DMA_DLASTSGA_DLASTSGA_SHIFT              (0U)                                                /*!< DMA0_DLASTSGA.DLASTSGA Position         */
#define DMA_DLASTSGA_DLASTSGA(x)                 (((uint32_t)(((uint32_t)(x))<<DMA_DLASTSGA_DLASTSGA_SHIFT))&DMA_DLASTSGA_DLASTSGA_MASK) /*!< DMA0_DLASTSGA.DLASTSGA Field            */

/*! @name CSR - Control and Status */
#define DMA_CSR_START_MASK                       (0x1U)                                              /*!< DMA0_CSR.START Mask                     */
#define DMA_CSR_START_SHIFT                      (0U)                                                /*!< DMA0_CSR.START Position                 */
#define DMA_CSR_START(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_CSR_START_SHIFT))&DMA_CSR_START_MASK) /*!< DMA0_CSR.START Field                    */
#define DMA_CSR_INTMAJOR_MASK                    (0x2U)                                              /*!< DMA0_CSR.INTMAJOR Mask                  */
#define DMA_CSR_INTMAJOR_SHIFT                   (1U)                                                /*!< DMA0_CSR.INTMAJOR Position              */
#define DMA_CSR_INTMAJOR(x)                      (((uint16_t)(((uint16_t)(x))<<DMA_CSR_INTMAJOR_SHIFT))&DMA_CSR_INTMAJOR_MASK) /*!< DMA0_CSR.INTMAJOR Field                 */
#define DMA_CSR_INTHALF_MASK                     (0x4U)                                              /*!< DMA0_CSR.INTHALF Mask                   */
#define DMA_CSR_INTHALF_SHIFT                    (2U)                                                /*!< DMA0_CSR.INTHALF Position               */
#define DMA_CSR_INTHALF(x)                       (((uint16_t)(((uint16_t)(x))<<DMA_CSR_INTHALF_SHIFT))&DMA_CSR_INTHALF_MASK) /*!< DMA0_CSR.INTHALF Field                  */
#define DMA_CSR_DREQ_MASK                        (0x8U)                                              /*!< DMA0_CSR.DREQ Mask                      */
#define DMA_CSR_DREQ_SHIFT                       (3U)                                                /*!< DMA0_CSR.DREQ Position                  */
#define DMA_CSR_DREQ(x)                          (((uint16_t)(((uint16_t)(x))<<DMA_CSR_DREQ_SHIFT))&DMA_CSR_DREQ_MASK) /*!< DMA0_CSR.DREQ Field                     */
#define DMA_CSR_ESG_MASK                         (0x10U)                                             /*!< DMA0_CSR.ESG Mask                       */
#define DMA_CSR_ESG_SHIFT                        (4U)                                                /*!< DMA0_CSR.ESG Position                   */
#define DMA_CSR_ESG(x)                           (((uint16_t)(((uint16_t)(x))<<DMA_CSR_ESG_SHIFT))&DMA_CSR_ESG_MASK) /*!< DMA0_CSR.ESG Field                      */
#define DMA_CSR_MAJORELINK_MASK                  (0x20U)                                             /*!< DMA0_CSR.MAJORELINK Mask                */
#define DMA_CSR_MAJORELINK_SHIFT                 (5U)                                                /*!< DMA0_CSR.MAJORELINK Position            */
#define DMA_CSR_MAJORELINK(x)                    (((uint16_t)(((uint16_t)(x))<<DMA_CSR_MAJORELINK_SHIFT))&DMA_CSR_MAJORELINK_MASK) /*!< DMA0_CSR.MAJORELINK Field               */
#define DMA_CSR_ACTIVE_MASK                      (0x40U)                                             /*!< DMA0_CSR.ACTIVE Mask                    */
#define DMA_CSR_ACTIVE_SHIFT                     (6U)                                                /*!< DMA0_CSR.ACTIVE Position                */
#define DMA_CSR_ACTIVE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_CSR_ACTIVE_SHIFT))&DMA_CSR_ACTIVE_MASK) /*!< DMA0_CSR.ACTIVE Field                   */
#define DMA_CSR_DONE_MASK                        (0x80U)                                             /*!< DMA0_CSR.DONE Mask                      */
#define DMA_CSR_DONE_SHIFT                       (7U)                                                /*!< DMA0_CSR.DONE Position                  */
#define DMA_CSR_DONE(x)                          (((uint16_t)(((uint16_t)(x))<<DMA_CSR_DONE_SHIFT))&DMA_CSR_DONE_MASK) /*!< DMA0_CSR.DONE Field                     */
#define DMA_CSR_MAJORLINKCH_MASK                 (0xF00U)                                            /*!< DMA0_CSR.MAJORLINKCH Mask               */
#define DMA_CSR_MAJORLINKCH_SHIFT                (8U)                                                /*!< DMA0_CSR.MAJORLINKCH Position           */
#define DMA_CSR_MAJORLINKCH(x)                   (((uint16_t)(((uint16_t)(x))<<DMA_CSR_MAJORLINKCH_SHIFT))&DMA_CSR_MAJORLINKCH_MASK) /*!< DMA0_CSR.MAJORLINKCH Field              */
#define DMA_CSR_BWC_MASK                         (0xC000U)                                           /*!< DMA0_CSR.BWC Mask                       */
#define DMA_CSR_BWC_SHIFT                        (14U)                                               /*!< DMA0_CSR.BWC Position                   */
#define DMA_CSR_BWC(x)                           (((uint16_t)(((uint16_t)(x))<<DMA_CSR_BWC_SHIFT))&DMA_CSR_BWC_MASK) /*!< DMA0_CSR.BWC Field                      */

/*! @name BITER_ELINKNO - Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled) */
#define DMA_BITER_ELINKNO_BITER_MASK             (0x7FFFU)                                           /*!< DMA0_BITER_ELINKNO.BITER Mask           */
#define DMA_BITER_ELINKNO_BITER_SHIFT            (0U)                                                /*!< DMA0_BITER_ELINKNO.BITER Position       */
#define DMA_BITER_ELINKNO_BITER(x)               (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKNO_BITER_SHIFT))&DMA_BITER_ELINKNO_BITER_MASK) /*!< DMA0_BITER_ELINKNO.BITER Field          */
#define DMA_BITER_ELINKNO_ELINK_MASK             (0x8000U)                                           /*!< DMA0_BITER_ELINKNO.ELINK Mask           */
#define DMA_BITER_ELINKNO_ELINK_SHIFT            (15U)                                               /*!< DMA0_BITER_ELINKNO.ELINK Position       */
#define DMA_BITER_ELINKNO_ELINK(x)               (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKNO_ELINK_SHIFT))&DMA_BITER_ELINKNO_ELINK_MASK) /*!< DMA0_BITER_ELINKNO.ELINK Field          */

/*! @name BITER_ELINKYES - Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled) */
#define DMA_BITER_ELINKYES_BITER_MASK            (0x1FFU)                                            /*!< DMA0_BITER_ELINKYES.BITER Mask          */
#define DMA_BITER_ELINKYES_BITER_SHIFT           (0U)                                                /*!< DMA0_BITER_ELINKYES.BITER Position      */
#define DMA_BITER_ELINKYES_BITER(x)              (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_BITER_SHIFT))&DMA_BITER_ELINKYES_BITER_MASK) /*!< DMA0_BITER_ELINKYES.BITER Field         */
#define DMA_BITER_ELINKYES_LINKCH_MASK           (0x1E00U)                                           /*!< DMA0_BITER_ELINKYES.LINKCH Mask         */
#define DMA_BITER_ELINKYES_LINKCH_SHIFT          (9U)                                                /*!< DMA0_BITER_ELINKYES.LINKCH Position     */
#define DMA_BITER_ELINKYES_LINKCH(x)             (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_LINKCH_SHIFT))&DMA_BITER_ELINKYES_LINKCH_MASK) /*!< DMA0_BITER_ELINKYES.LINKCH Field        */
#define DMA_BITER_ELINKYES_ELINK_MASK            (0x8000U)                                           /*!< DMA0_BITER_ELINKYES.ELINK Mask          */
#define DMA_BITER_ELINKYES_ELINK_SHIFT           (15U)                                               /*!< DMA0_BITER_ELINKYES.ELINK Position      */
#define DMA_BITER_ELINKYES_ELINK(x)              (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_ELINK_SHIFT))&DMA_BITER_ELINKYES_ELINK_MASK) /*!< DMA0_BITER_ELINKYES.ELINK Field         */
/**
 * @} */ /* End group DMA0_Register_Masks_GROUP 
 */

/* DMA0 - Peripheral instance base addresses */
#define DMA0_BasePtr                   0x40008000UL //!< Peripheral base address
#define DMA0                           ((DMA_Type *) DMA0_BasePtr) //!< Freescale base pointer
#define DMA0_BASE_PTR                  (DMA0) //!< Freescale style base pointer
/**
 * @} */ /* End group DMA0_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup DMAMUX_Peripheral_access_layer_GROUP DMAMUX Peripheral Access Layer
* @brief C Struct for DMAMUX
* @{
*/

/* ================================================================================ */
/* ================           DMAMUX0 (file:DMAMUX0_16CH_TRIG)       ================ */
/* ================================================================================ */

/**
 * @brief DMA channel multiplexor
 */
/**
* @addtogroup DMAMUX_structs_GROUP DMAMUX struct
* @brief Struct for DMAMUX
* @{
*/
typedef struct DMAMUX_Type {
   __IO uint8_t   CHCFG[16];                    /**< 0000: Channel Configuration Register                               */
} DMAMUX_Type;

/**
 * @} */ /* End group DMAMUX_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'DMAMUX0' Position & Mask macros                     ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup DMAMUX_Register_Masks_GROUP DMAMUX Register Masks
* @brief Register Masks for DMAMUX
* @{
*/

/*! @name CHCFG - Channel Configuration Register */
#define DMAMUX_CHCFG_SOURCE_MASK                 (0x3FU)                                             /*!< DMAMUX0_CHCFG.SOURCE Mask               */
#define DMAMUX_CHCFG_SOURCE_SHIFT                (0U)                                                /*!< DMAMUX0_CHCFG.SOURCE Position           */
#define DMAMUX_CHCFG_SOURCE(x)                   (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_SOURCE_SHIFT))&DMAMUX_CHCFG_SOURCE_MASK) /*!< DMAMUX0_CHCFG.SOURCE Field              */
#define DMAMUX_CHCFG_TRIG_MASK                   (0x40U)                                             /*!< DMAMUX0_CHCFG.TRIG Mask                 */
#define DMAMUX_CHCFG_TRIG_SHIFT                  (6U)                                                /*!< DMAMUX0_CHCFG.TRIG Position             */
#define DMAMUX_CHCFG_TRIG(x)                     (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_TRIG_SHIFT))&DMAMUX_CHCFG_TRIG_MASK) /*!< DMAMUX0_CHCFG.TRIG Field                */
#define DMAMUX_CHCFG_ENBL_MASK                   (0x80U)                                             /*!< DMAMUX0_CHCFG.ENBL Mask                 */
#define DMAMUX_CHCFG_ENBL_SHIFT                  (7U)                                                /*!< DMAMUX0_CHCFG.ENBL Position             */
#define DMAMUX_CHCFG_ENBL(x)                     (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_ENBL_SHIFT))&DMAMUX_CHCFG_ENBL_MASK) /*!< DMAMUX0_CHCFG.ENBL Field                */
/**
 * @} */ /* End group DMAMUX_Register_Masks_GROUP 
 */

/* DMAMUX0 - Peripheral instance base addresses */
#define DMAMUX0_BasePtr                0x40021000UL //!< Peripheral base address
#define DMAMUX0                        ((DMAMUX_Type *) DMAMUX0_BasePtr) //!< Freescale base pointer
#define DMAMUX0_BASE_PTR               (DMAMUX0) //!< Freescale style base pointer

/**
 * DMA multiplexor slot (source) numbers
 */
typedef enum DmaSlot {
   Dma0Slot_Disabled                   =        0, //!<  Disabled
   Dma0Slot_Slot1                      =        1, //!<  Slot1
   Dma0Slot_Slot2                      =        2, //!<  Slot2
   Dma0Slot_Slot3                      =        3, //!<  Slot3
   Dma0Slot_Slot4                      =        4, //!<  Slot4
   Dma0Slot_Slot5                      =        5, //!<  Slot5
   Dma0Slot_Slot6                      =        6, //!<  Slot6
   Dma0Slot_Slot7                      =        7, //!<  Slot7
   Dma0Slot_Slot8                      =        8, //!<  Slot8
   Dma0Slot_Slot9                      =        9, //!<  Slot9
   Dma0Slot_Slot10                     =       10, //!<  Slot10
   Dma0Slot_Slot11                     =       11, //!<  Slot11
   Dma0Slot_Slot12                     =       12, //!<  Slot12
   Dma0Slot_Slot13                     =       13, //!<  Slot13
   Dma0Slot_Slot14                     =       14, //!<  Slot14
   Dma0Slot_Slot15                     =       15, //!<  Slot15
   Dma0Slot_Slot16                     =       16, //!<  Slot16
   Dma0Slot_Slot17                     =       17, //!<  Slot17
   Dma0Slot_Slot18                     =       18, //!<  Slot18
   Dma0Slot_Slot19                     =       19, //!<  Slot19
   Dma0Slot_Slot20                     =       20, //!<  Slot20
   Dma0Slot_Slot21                     =       21, //!<  Slot21
   Dma0Slot_Slot22                     =       22, //!<  Slot22
   Dma0Slot_Slot23                     =       23, //!<  Slot23
   Dma0Slot_Slot24                     =       24, //!<  Slot24
   Dma0Slot_Slot25                     =       25, //!<  Slot25
   Dma0Slot_Slot26                     =       26, //!<  Slot26
   Dma0Slot_Slot27                     =       27, //!<  Slot27
   Dma0Slot_Slot28                     =       28, //!<  Slot28
   Dma0Slot_Slot29                     =       29, //!<  Slot29
   Dma0Slot_Slot30                     =       30, //!<  Slot30
   Dma0Slot_Slot31                     =       31, //!<  Slot31
   Dma0Slot_Slot32                     =       32, //!<  Slot32
   Dma0Slot_Slot33                     =       33, //!<  Slot33
   Dma0Slot_Slot34                     =       34, //!<  Slot34
   Dma0Slot_Slot35                     =       35, //!<  Slot35
   Dma0Slot_Slot36                     =       36, //!<  Slot36
   Dma0Slot_Slot37                     =       37, //!<  Slot37
   Dma0Slot_Slot38                     =       38, //!<  Slot38
   Dma0Slot_Slot39                     =       39, //!<  Slot39
   Dma0Slot_Slot40                     =       40, //!<  Slot40
   Dma0Slot_Slot41                     =       41, //!<  Slot41
   Dma0Slot_Slot42                     =       42, //!<  Slot42
   Dma0Slot_Slot43                     =       43, //!<  Slot43
   Dma0Slot_Slot44                     =       44, //!<  Slot44
   Dma0Slot_Slot45                     =       45, //!<  Slot45
   Dma0Slot_Slot46                     =       46, //!<  Slot46
   Dma0Slot_Slot47                     =       47, //!<  Slot47
   Dma0Slot_Slot48                     =       48, //!<  Slot48
   Dma0Slot_Slot49                     =       49, //!<  Slot49
   Dma0Slot_Slot50                     =       50, //!<  Slot50
   Dma0Slot_Slot51                     =       51, //!<  Slot51
   Dma0Slot_Slot52                     =       52, //!<  Slot52
   Dma0Slot_Slot53                     =       53, //!<  Slot53
   Dma0Slot_Slot54                     =       54, //!<  Slot54
   Dma0Slot_Slot55                     =       55, //!<  Slot55
   Dma0Slot_Slot56                     =       56, //!<  Slot56
   Dma0Slot_Slot57                     =       57, //!<  Slot57
   Dma0Slot_Slot58                     =       58, //!<  Slot58
   Dma0Slot_Slot59                     =       59, //!<  Slot59
   Dma0Slot_AlwaysEnabled60            =       60, //!<  AlwaysEnabled60
   Dma0Slot_AlwaysEnabled61            =       61, //!<  AlwaysEnabled61
   Dma0Slot_AlwaysEnabled62            =       62, //!<  AlwaysEnabled62
   Dma0Slot_AlwaysEnabled63            =       63, //!<  AlwaysEnabled63
} DmaSlot;

/**
 * @} */ /* End group DMAMUX_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup ENC_Peripheral_access_layer_GROUP ENC Peripheral Access Layer
* @brief C Struct for ENC
* @{
*/

/* ================================================================================ */
/* ================           ENC (file:ENC_0)                     ================ */
/* ================================================================================ */

/**
 * @brief Quadrature Decoder
 */
/**
* @addtogroup ENC_structs_GROUP ENC struct
* @brief Struct for ENC
* @{
*/
typedef struct ENC_Type {
   __IO uint16_t  CTRL;                         /**< 0000: Control Register                                             */
   __IO uint16_t  FILT;                         /**< 0002: Input Filter Register                                        */
   __IO uint16_t  WTR;                          /**< 0004: Watchdog Timeout Register                                    */
   __IO uint16_t  POSD;                         /**< 0006: Position Difference Counter Register                         */
   __I  uint16_t  POSDH;                        /**< 0008: Position Difference Hold Register                            */
   __IO uint16_t  REV;                          /**< 000A: Revolution Counter Register                                  */
   __I  uint16_t  REVH;                         /**< 000C: Revolution Hold Register                                     */
   __IO uint16_t  UPOS;                         /**< 000E: Upper Position Counter Register                              */
   __IO uint16_t  LPOS;                         /**< 0010: Lower Position Counter Register                              */
   __I  uint16_t  UPOSH;                        /**< 0012: Upper Position Hold Register                                 */
   __I  uint16_t  LPOSH;                        /**< 0014: Lower Position Hold Register                                 */
   __IO uint16_t  UINIT;                        /**< 0016: Upper Initialization Register                                */
   __IO uint16_t  LINIT;                        /**< 0018: Lower Initialization Register                                */
   __I  uint16_t  IMR;                          /**< 001A: Input Monitor Register                                       */
   __IO uint16_t  TST;                          /**< 001C: Test Register                                                */
   __IO uint16_t  CTRL2;                        /**< 001E: Control 2 Register                                           */
   __IO uint16_t  UMOD;                         /**< 0020: Upper Modulus Register                                       */
   __IO uint16_t  LMOD;                         /**< 0022: Lower Modulus Register                                       */
   __IO uint16_t  UCOMP;                        /**< 0024: Upper Position Compare Register                              */
   __IO uint16_t  LCOMP;                        /**< 0026: Lower Position Compare Register                              */
} ENC_Type;

/**
 * @} */ /* End group ENC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'ENC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup ENC_Register_Masks_GROUP ENC Register Masks
* @brief Register Masks for ENC
* @{
*/

/*! @name CTRL - Control Register */
#define ENC_CTRL_CMPIE_MASK                      (0x1U)                                              /*!< ENC_CTRL.CMPIE Mask                     */
#define ENC_CTRL_CMPIE_SHIFT                     (0U)                                                /*!< ENC_CTRL.CMPIE Position                 */
#define ENC_CTRL_CMPIE(x)                        (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_CMPIE_SHIFT))&ENC_CTRL_CMPIE_MASK) /*!< ENC_CTRL.CMPIE Field                    */
#define ENC_CTRL_CMPIRQ_MASK                     (0x2U)                                              /*!< ENC_CTRL.CMPIRQ Mask                    */
#define ENC_CTRL_CMPIRQ_SHIFT                    (1U)                                                /*!< ENC_CTRL.CMPIRQ Position                */
#define ENC_CTRL_CMPIRQ(x)                       (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_CMPIRQ_SHIFT))&ENC_CTRL_CMPIRQ_MASK) /*!< ENC_CTRL.CMPIRQ Field                   */
#define ENC_CTRL_WDE_MASK                        (0x4U)                                              /*!< ENC_CTRL.WDE Mask                       */
#define ENC_CTRL_WDE_SHIFT                       (2U)                                                /*!< ENC_CTRL.WDE Position                   */
#define ENC_CTRL_WDE(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_WDE_SHIFT))&ENC_CTRL_WDE_MASK) /*!< ENC_CTRL.WDE Field                      */
#define ENC_CTRL_DIE_MASK                        (0x8U)                                              /*!< ENC_CTRL.DIE Mask                       */
#define ENC_CTRL_DIE_SHIFT                       (3U)                                                /*!< ENC_CTRL.DIE Position                   */
#define ENC_CTRL_DIE(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_DIE_SHIFT))&ENC_CTRL_DIE_MASK) /*!< ENC_CTRL.DIE Field                      */
#define ENC_CTRL_DIRQ_MASK                       (0x10U)                                             /*!< ENC_CTRL.DIRQ Mask                      */
#define ENC_CTRL_DIRQ_SHIFT                      (4U)                                                /*!< ENC_CTRL.DIRQ Position                  */
#define ENC_CTRL_DIRQ(x)                         (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_DIRQ_SHIFT))&ENC_CTRL_DIRQ_MASK) /*!< ENC_CTRL.DIRQ Field                     */
#define ENC_CTRL_XNE_MASK                        (0x20U)                                             /*!< ENC_CTRL.XNE Mask                       */
#define ENC_CTRL_XNE_SHIFT                       (5U)                                                /*!< ENC_CTRL.XNE Position                   */
#define ENC_CTRL_XNE(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_XNE_SHIFT))&ENC_CTRL_XNE_MASK) /*!< ENC_CTRL.XNE Field                      */
#define ENC_CTRL_XIP_MASK                        (0x40U)                                             /*!< ENC_CTRL.XIP Mask                       */
#define ENC_CTRL_XIP_SHIFT                       (6U)                                                /*!< ENC_CTRL.XIP Position                   */
#define ENC_CTRL_XIP(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_XIP_SHIFT))&ENC_CTRL_XIP_MASK) /*!< ENC_CTRL.XIP Field                      */
#define ENC_CTRL_XIE_MASK                        (0x80U)                                             /*!< ENC_CTRL.XIE Mask                       */
#define ENC_CTRL_XIE_SHIFT                       (7U)                                                /*!< ENC_CTRL.XIE Position                   */
#define ENC_CTRL_XIE(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_XIE_SHIFT))&ENC_CTRL_XIE_MASK) /*!< ENC_CTRL.XIE Field                      */
#define ENC_CTRL_XIRQ_MASK                       (0x100U)                                            /*!< ENC_CTRL.XIRQ Mask                      */
#define ENC_CTRL_XIRQ_SHIFT                      (8U)                                                /*!< ENC_CTRL.XIRQ Position                  */
#define ENC_CTRL_XIRQ(x)                         (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_XIRQ_SHIFT))&ENC_CTRL_XIRQ_MASK) /*!< ENC_CTRL.XIRQ Field                     */
#define ENC_CTRL_PH1_MASK                        (0x200U)                                            /*!< ENC_CTRL.PH1 Mask                       */
#define ENC_CTRL_PH1_SHIFT                       (9U)                                                /*!< ENC_CTRL.PH1 Position                   */
#define ENC_CTRL_PH1(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_PH1_SHIFT))&ENC_CTRL_PH1_MASK) /*!< ENC_CTRL.PH1 Field                      */
#define ENC_CTRL_REV_MASK                        (0x400U)                                            /*!< ENC_CTRL.REV Mask                       */
#define ENC_CTRL_REV_SHIFT                       (10U)                                               /*!< ENC_CTRL.REV Position                   */
#define ENC_CTRL_REV(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_REV_SHIFT))&ENC_CTRL_REV_MASK) /*!< ENC_CTRL.REV Field                      */
#define ENC_CTRL_SWIP_MASK                       (0x800U)                                            /*!< ENC_CTRL.SWIP Mask                      */
#define ENC_CTRL_SWIP_SHIFT                      (11U)                                               /*!< ENC_CTRL.SWIP Position                  */
#define ENC_CTRL_SWIP(x)                         (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_SWIP_SHIFT))&ENC_CTRL_SWIP_MASK) /*!< ENC_CTRL.SWIP Field                     */
#define ENC_CTRL_HNE_MASK                        (0x1000U)                                           /*!< ENC_CTRL.HNE Mask                       */
#define ENC_CTRL_HNE_SHIFT                       (12U)                                               /*!< ENC_CTRL.HNE Position                   */
#define ENC_CTRL_HNE(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_HNE_SHIFT))&ENC_CTRL_HNE_MASK) /*!< ENC_CTRL.HNE Field                      */
#define ENC_CTRL_HIP_MASK                        (0x2000U)                                           /*!< ENC_CTRL.HIP Mask                       */
#define ENC_CTRL_HIP_SHIFT                       (13U)                                               /*!< ENC_CTRL.HIP Position                   */
#define ENC_CTRL_HIP(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_HIP_SHIFT))&ENC_CTRL_HIP_MASK) /*!< ENC_CTRL.HIP Field                      */
#define ENC_CTRL_HIE_MASK                        (0x4000U)                                           /*!< ENC_CTRL.HIE Mask                       */
#define ENC_CTRL_HIE_SHIFT                       (14U)                                               /*!< ENC_CTRL.HIE Position                   */
#define ENC_CTRL_HIE(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_HIE_SHIFT))&ENC_CTRL_HIE_MASK) /*!< ENC_CTRL.HIE Field                      */
#define ENC_CTRL_HIRQ_MASK                       (0x8000U)                                           /*!< ENC_CTRL.HIRQ Mask                      */
#define ENC_CTRL_HIRQ_SHIFT                      (15U)                                               /*!< ENC_CTRL.HIRQ Position                  */
#define ENC_CTRL_HIRQ(x)                         (((uint16_t)(((uint16_t)(x))<<ENC_CTRL_HIRQ_SHIFT))&ENC_CTRL_HIRQ_MASK) /*!< ENC_CTRL.HIRQ Field                     */

/*! @name FILT - Input Filter Register */
#define ENC_FILT_FILT_PER_MASK                   (0xFFU)                                             /*!< ENC_FILT.FILT_PER Mask                  */
#define ENC_FILT_FILT_PER_SHIFT                  (0U)                                                /*!< ENC_FILT.FILT_PER Position              */
#define ENC_FILT_FILT_PER(x)                     (((uint16_t)(((uint16_t)(x))<<ENC_FILT_FILT_PER_SHIFT))&ENC_FILT_FILT_PER_MASK) /*!< ENC_FILT.FILT_PER Field                 */
#define ENC_FILT_FILT_CNT_MASK                   (0x700U)                                            /*!< ENC_FILT.FILT_CNT Mask                  */
#define ENC_FILT_FILT_CNT_SHIFT                  (8U)                                                /*!< ENC_FILT.FILT_CNT Position              */
#define ENC_FILT_FILT_CNT(x)                     (((uint16_t)(((uint16_t)(x))<<ENC_FILT_FILT_CNT_SHIFT))&ENC_FILT_FILT_CNT_MASK) /*!< ENC_FILT.FILT_CNT Field                 */

/*! @name WTR - Watchdog Timeout Register */
#define ENC_WTR_WDOG_MASK                        (0xFFFFU)                                           /*!< ENC_WTR.WDOG Mask                       */
#define ENC_WTR_WDOG_SHIFT                       (0U)                                                /*!< ENC_WTR.WDOG Position                   */
#define ENC_WTR_WDOG(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_WTR_WDOG_SHIFT))&ENC_WTR_WDOG_MASK) /*!< ENC_WTR.WDOG Field                      */

/*! @name POSD - Position Difference Counter Register */
#define ENC_POSD_POSD_MASK                       (0xFFFFU)                                           /*!< ENC_POSD.POSD Mask                      */
#define ENC_POSD_POSD_SHIFT                      (0U)                                                /*!< ENC_POSD.POSD Position                  */
#define ENC_POSD_POSD(x)                         (((uint16_t)(((uint16_t)(x))<<ENC_POSD_POSD_SHIFT))&ENC_POSD_POSD_MASK) /*!< ENC_POSD.POSD Field                     */

/*! @name POSDH - Position Difference Hold Register */
#define ENC_POSDH_POSDH_MASK                     (0xFFFFU)                                           /*!< ENC_POSDH.POSDH Mask                    */
#define ENC_POSDH_POSDH_SHIFT                    (0U)                                                /*!< ENC_POSDH.POSDH Position                */
#define ENC_POSDH_POSDH(x)                       (((uint16_t)(((uint16_t)(x))<<ENC_POSDH_POSDH_SHIFT))&ENC_POSDH_POSDH_MASK) /*!< ENC_POSDH.POSDH Field                   */

/*! @name REV - Revolution Counter Register */
#define ENC_REV_REV_MASK                         (0xFFFFU)                                           /*!< ENC_REV.REV Mask                        */
#define ENC_REV_REV_SHIFT                        (0U)                                                /*!< ENC_REV.REV Position                    */
#define ENC_REV_REV(x)                           (((uint16_t)(((uint16_t)(x))<<ENC_REV_REV_SHIFT))&ENC_REV_REV_MASK) /*!< ENC_REV.REV Field                       */

/*! @name REVH - Revolution Hold Register */
#define ENC_REVH_REVH_MASK                       (0xFFFFU)                                           /*!< ENC_REVH.REVH Mask                      */
#define ENC_REVH_REVH_SHIFT                      (0U)                                                /*!< ENC_REVH.REVH Position                  */
#define ENC_REVH_REVH(x)                         (((uint16_t)(((uint16_t)(x))<<ENC_REVH_REVH_SHIFT))&ENC_REVH_REVH_MASK) /*!< ENC_REVH.REVH Field                     */

/*! @name UPOS - Upper Position Counter Register */
#define ENC_UPOS_POS_MASK                        (0xFFFFU)                                           /*!< ENC_UPOS.POS Mask                       */
#define ENC_UPOS_POS_SHIFT                       (0U)                                                /*!< ENC_UPOS.POS Position                   */
#define ENC_UPOS_POS(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_UPOS_POS_SHIFT))&ENC_UPOS_POS_MASK) /*!< ENC_UPOS.POS Field                      */

/*! @name LPOS - Lower Position Counter Register */
#define ENC_LPOS_POS_MASK                        (0xFFFFU)                                           /*!< ENC_LPOS.POS Mask                       */
#define ENC_LPOS_POS_SHIFT                       (0U)                                                /*!< ENC_LPOS.POS Position                   */
#define ENC_LPOS_POS(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_LPOS_POS_SHIFT))&ENC_LPOS_POS_MASK) /*!< ENC_LPOS.POS Field                      */

/*! @name UPOSH - Upper Position Hold Register */
#define ENC_UPOSH_POSH_MASK                      (0xFFFFU)                                           /*!< ENC_UPOSH.POSH Mask                     */
#define ENC_UPOSH_POSH_SHIFT                     (0U)                                                /*!< ENC_UPOSH.POSH Position                 */
#define ENC_UPOSH_POSH(x)                        (((uint16_t)(((uint16_t)(x))<<ENC_UPOSH_POSH_SHIFT))&ENC_UPOSH_POSH_MASK) /*!< ENC_UPOSH.POSH Field                    */

/*! @name LPOSH - Lower Position Hold Register */
#define ENC_LPOSH_POSH_MASK                      (0xFFFFU)                                           /*!< ENC_LPOSH.POSH Mask                     */
#define ENC_LPOSH_POSH_SHIFT                     (0U)                                                /*!< ENC_LPOSH.POSH Position                 */
#define ENC_LPOSH_POSH(x)                        (((uint16_t)(((uint16_t)(x))<<ENC_LPOSH_POSH_SHIFT))&ENC_LPOSH_POSH_MASK) /*!< ENC_LPOSH.POSH Field                    */

/*! @name UINIT - Upper Initialization Register */
#define ENC_UINIT_INIT_MASK                      (0xFFFFU)                                           /*!< ENC_UINIT.INIT Mask                     */
#define ENC_UINIT_INIT_SHIFT                     (0U)                                                /*!< ENC_UINIT.INIT Position                 */
#define ENC_UINIT_INIT(x)                        (((uint16_t)(((uint16_t)(x))<<ENC_UINIT_INIT_SHIFT))&ENC_UINIT_INIT_MASK) /*!< ENC_UINIT.INIT Field                    */

/*! @name LINIT - Lower Initialization Register */
#define ENC_LINIT_INIT_MASK                      (0xFFFFU)                                           /*!< ENC_LINIT.INIT Mask                     */
#define ENC_LINIT_INIT_SHIFT                     (0U)                                                /*!< ENC_LINIT.INIT Position                 */
#define ENC_LINIT_INIT(x)                        (((uint16_t)(((uint16_t)(x))<<ENC_LINIT_INIT_SHIFT))&ENC_LINIT_INIT_MASK) /*!< ENC_LINIT.INIT Field                    */

/*! @name IMR - Input Monitor Register */
#define ENC_IMR_HOME_MASK                        (0x1U)                                              /*!< ENC_IMR.HOME Mask                       */
#define ENC_IMR_HOME_SHIFT                       (0U)                                                /*!< ENC_IMR.HOME Position                   */
#define ENC_IMR_HOME(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_IMR_HOME_SHIFT))&ENC_IMR_HOME_MASK) /*!< ENC_IMR.HOME Field                      */
#define ENC_IMR_INDEX_MASK                       (0x2U)                                              /*!< ENC_IMR.INDEX Mask                      */
#define ENC_IMR_INDEX_SHIFT                      (1U)                                                /*!< ENC_IMR.INDEX Position                  */
#define ENC_IMR_INDEX(x)                         (((uint16_t)(((uint16_t)(x))<<ENC_IMR_INDEX_SHIFT))&ENC_IMR_INDEX_MASK) /*!< ENC_IMR.INDEX Field                     */
#define ENC_IMR_PHB_MASK                         (0x4U)                                              /*!< ENC_IMR.PHB Mask                        */
#define ENC_IMR_PHB_SHIFT                        (2U)                                                /*!< ENC_IMR.PHB Position                    */
#define ENC_IMR_PHB(x)                           (((uint16_t)(((uint16_t)(x))<<ENC_IMR_PHB_SHIFT))&ENC_IMR_PHB_MASK) /*!< ENC_IMR.PHB Field                       */
#define ENC_IMR_PHA_MASK                         (0x8U)                                              /*!< ENC_IMR.PHA Mask                        */
#define ENC_IMR_PHA_SHIFT                        (3U)                                                /*!< ENC_IMR.PHA Position                    */
#define ENC_IMR_PHA(x)                           (((uint16_t)(((uint16_t)(x))<<ENC_IMR_PHA_SHIFT))&ENC_IMR_PHA_MASK) /*!< ENC_IMR.PHA Field                       */
#define ENC_IMR_FHOM_MASK                        (0x10U)                                             /*!< ENC_IMR.FHOM Mask                       */
#define ENC_IMR_FHOM_SHIFT                       (4U)                                                /*!< ENC_IMR.FHOM Position                   */
#define ENC_IMR_FHOM(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_IMR_FHOM_SHIFT))&ENC_IMR_FHOM_MASK) /*!< ENC_IMR.FHOM Field                      */
#define ENC_IMR_FIND_MASK                        (0x20U)                                             /*!< ENC_IMR.FIND Mask                       */
#define ENC_IMR_FIND_SHIFT                       (5U)                                                /*!< ENC_IMR.FIND Position                   */
#define ENC_IMR_FIND(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_IMR_FIND_SHIFT))&ENC_IMR_FIND_MASK) /*!< ENC_IMR.FIND Field                      */
#define ENC_IMR_FPHB_MASK                        (0x40U)                                             /*!< ENC_IMR.FPHB Mask                       */
#define ENC_IMR_FPHB_SHIFT                       (6U)                                                /*!< ENC_IMR.FPHB Position                   */
#define ENC_IMR_FPHB(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_IMR_FPHB_SHIFT))&ENC_IMR_FPHB_MASK) /*!< ENC_IMR.FPHB Field                      */
#define ENC_IMR_FPHA_MASK                        (0x80U)                                             /*!< ENC_IMR.FPHA Mask                       */
#define ENC_IMR_FPHA_SHIFT                       (7U)                                                /*!< ENC_IMR.FPHA Position                   */
#define ENC_IMR_FPHA(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_IMR_FPHA_SHIFT))&ENC_IMR_FPHA_MASK) /*!< ENC_IMR.FPHA Field                      */

/*! @name TST - Test Register */
#define ENC_TST_TEST_COUNT_MASK                  (0xFFU)                                             /*!< ENC_TST.TEST_COUNT Mask                 */
#define ENC_TST_TEST_COUNT_SHIFT                 (0U)                                                /*!< ENC_TST.TEST_COUNT Position             */
#define ENC_TST_TEST_COUNT(x)                    (((uint16_t)(((uint16_t)(x))<<ENC_TST_TEST_COUNT_SHIFT))&ENC_TST_TEST_COUNT_MASK) /*!< ENC_TST.TEST_COUNT Field                */
#define ENC_TST_TEST_PERIOD_MASK                 (0x1F00U)                                           /*!< ENC_TST.TEST_PERIOD Mask                */
#define ENC_TST_TEST_PERIOD_SHIFT                (8U)                                                /*!< ENC_TST.TEST_PERIOD Position            */
#define ENC_TST_TEST_PERIOD(x)                   (((uint16_t)(((uint16_t)(x))<<ENC_TST_TEST_PERIOD_SHIFT))&ENC_TST_TEST_PERIOD_MASK) /*!< ENC_TST.TEST_PERIOD Field               */
#define ENC_TST_QDN_MASK                         (0x2000U)                                           /*!< ENC_TST.QDN Mask                        */
#define ENC_TST_QDN_SHIFT                        (13U)                                               /*!< ENC_TST.QDN Position                    */
#define ENC_TST_QDN(x)                           (((uint16_t)(((uint16_t)(x))<<ENC_TST_QDN_SHIFT))&ENC_TST_QDN_MASK) /*!< ENC_TST.QDN Field                       */
#define ENC_TST_TCE_MASK                         (0x4000U)                                           /*!< ENC_TST.TCE Mask                        */
#define ENC_TST_TCE_SHIFT                        (14U)                                               /*!< ENC_TST.TCE Position                    */
#define ENC_TST_TCE(x)                           (((uint16_t)(((uint16_t)(x))<<ENC_TST_TCE_SHIFT))&ENC_TST_TCE_MASK) /*!< ENC_TST.TCE Field                       */
#define ENC_TST_TEN_MASK                         (0x8000U)                                           /*!< ENC_TST.TEN Mask                        */
#define ENC_TST_TEN_SHIFT                        (15U)                                               /*!< ENC_TST.TEN Position                    */
#define ENC_TST_TEN(x)                           (((uint16_t)(((uint16_t)(x))<<ENC_TST_TEN_SHIFT))&ENC_TST_TEN_MASK) /*!< ENC_TST.TEN Field                       */

/*! @name CTRL2 - Control 2 Register */
#define ENC_CTRL2_UPDHLD_MASK                    (0x1U)                                              /*!< ENC_CTRL2.UPDHLD Mask                   */
#define ENC_CTRL2_UPDHLD_SHIFT                   (0U)                                                /*!< ENC_CTRL2.UPDHLD Position               */
#define ENC_CTRL2_UPDHLD(x)                      (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_UPDHLD_SHIFT))&ENC_CTRL2_UPDHLD_MASK) /*!< ENC_CTRL2.UPDHLD Field                  */
#define ENC_CTRL2_UPDPOS_MASK                    (0x2U)                                              /*!< ENC_CTRL2.UPDPOS Mask                   */
#define ENC_CTRL2_UPDPOS_SHIFT                   (1U)                                                /*!< ENC_CTRL2.UPDPOS Position               */
#define ENC_CTRL2_UPDPOS(x)                      (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_UPDPOS_SHIFT))&ENC_CTRL2_UPDPOS_MASK) /*!< ENC_CTRL2.UPDPOS Field                  */
#define ENC_CTRL2_MOD_MASK                       (0x4U)                                              /*!< ENC_CTRL2.MOD Mask                      */
#define ENC_CTRL2_MOD_SHIFT                      (2U)                                                /*!< ENC_CTRL2.MOD Position                  */
#define ENC_CTRL2_MOD(x)                         (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_MOD_SHIFT))&ENC_CTRL2_MOD_MASK) /*!< ENC_CTRL2.MOD Field                     */
#define ENC_CTRL2_DIR_MASK                       (0x8U)                                              /*!< ENC_CTRL2.DIR Mask                      */
#define ENC_CTRL2_DIR_SHIFT                      (3U)                                                /*!< ENC_CTRL2.DIR Position                  */
#define ENC_CTRL2_DIR(x)                         (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_DIR_SHIFT))&ENC_CTRL2_DIR_MASK) /*!< ENC_CTRL2.DIR Field                     */
#define ENC_CTRL2_RUIE_MASK                      (0x10U)                                             /*!< ENC_CTRL2.RUIE Mask                     */
#define ENC_CTRL2_RUIE_SHIFT                     (4U)                                                /*!< ENC_CTRL2.RUIE Position                 */
#define ENC_CTRL2_RUIE(x)                        (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_RUIE_SHIFT))&ENC_CTRL2_RUIE_MASK) /*!< ENC_CTRL2.RUIE Field                    */
#define ENC_CTRL2_RUIRQ_MASK                     (0x20U)                                             /*!< ENC_CTRL2.RUIRQ Mask                    */
#define ENC_CTRL2_RUIRQ_SHIFT                    (5U)                                                /*!< ENC_CTRL2.RUIRQ Position                */
#define ENC_CTRL2_RUIRQ(x)                       (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_RUIRQ_SHIFT))&ENC_CTRL2_RUIRQ_MASK) /*!< ENC_CTRL2.RUIRQ Field                   */
#define ENC_CTRL2_ROIE_MASK                      (0x40U)                                             /*!< ENC_CTRL2.ROIE Mask                     */
#define ENC_CTRL2_ROIE_SHIFT                     (6U)                                                /*!< ENC_CTRL2.ROIE Position                 */
#define ENC_CTRL2_ROIE(x)                        (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_ROIE_SHIFT))&ENC_CTRL2_ROIE_MASK) /*!< ENC_CTRL2.ROIE Field                    */
#define ENC_CTRL2_ROIRQ_MASK                     (0x80U)                                             /*!< ENC_CTRL2.ROIRQ Mask                    */
#define ENC_CTRL2_ROIRQ_SHIFT                    (7U)                                                /*!< ENC_CTRL2.ROIRQ Position                */
#define ENC_CTRL2_ROIRQ(x)                       (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_ROIRQ_SHIFT))&ENC_CTRL2_ROIRQ_MASK) /*!< ENC_CTRL2.ROIRQ Field                   */
#define ENC_CTRL2_REVMOD_MASK                    (0x100U)                                            /*!< ENC_CTRL2.REVMOD Mask                   */
#define ENC_CTRL2_REVMOD_SHIFT                   (8U)                                                /*!< ENC_CTRL2.REVMOD Position               */
#define ENC_CTRL2_REVMOD(x)                      (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_REVMOD_SHIFT))&ENC_CTRL2_REVMOD_MASK) /*!< ENC_CTRL2.REVMOD Field                  */
#define ENC_CTRL2_OUTCTL_MASK                    (0x200U)                                            /*!< ENC_CTRL2.OUTCTL Mask                   */
#define ENC_CTRL2_OUTCTL_SHIFT                   (9U)                                                /*!< ENC_CTRL2.OUTCTL Position               */
#define ENC_CTRL2_OUTCTL(x)                      (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_OUTCTL_SHIFT))&ENC_CTRL2_OUTCTL_MASK) /*!< ENC_CTRL2.OUTCTL Field                  */
#define ENC_CTRL2_SABIE_MASK                     (0x400U)                                            /*!< ENC_CTRL2.SABIE Mask                    */
#define ENC_CTRL2_SABIE_SHIFT                    (10U)                                               /*!< ENC_CTRL2.SABIE Position                */
#define ENC_CTRL2_SABIE(x)                       (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_SABIE_SHIFT))&ENC_CTRL2_SABIE_MASK) /*!< ENC_CTRL2.SABIE Field                   */
#define ENC_CTRL2_SABIRQ_MASK                    (0x800U)                                            /*!< ENC_CTRL2.SABIRQ Mask                   */
#define ENC_CTRL2_SABIRQ_SHIFT                   (11U)                                               /*!< ENC_CTRL2.SABIRQ Position               */
#define ENC_CTRL2_SABIRQ(x)                      (((uint16_t)(((uint16_t)(x))<<ENC_CTRL2_SABIRQ_SHIFT))&ENC_CTRL2_SABIRQ_MASK) /*!< ENC_CTRL2.SABIRQ Field                  */

/*! @name UMOD - Upper Modulus Register */
#define ENC_UMOD_MOD_MASK                        (0xFFFFU)                                           /*!< ENC_UMOD.MOD Mask                       */
#define ENC_UMOD_MOD_SHIFT                       (0U)                                                /*!< ENC_UMOD.MOD Position                   */
#define ENC_UMOD_MOD(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_UMOD_MOD_SHIFT))&ENC_UMOD_MOD_MASK) /*!< ENC_UMOD.MOD Field                      */

/*! @name LMOD - Lower Modulus Register */
#define ENC_LMOD_MOD_MASK                        (0xFFFFU)                                           /*!< ENC_LMOD.MOD Mask                       */
#define ENC_LMOD_MOD_SHIFT                       (0U)                                                /*!< ENC_LMOD.MOD Position                   */
#define ENC_LMOD_MOD(x)                          (((uint16_t)(((uint16_t)(x))<<ENC_LMOD_MOD_SHIFT))&ENC_LMOD_MOD_MASK) /*!< ENC_LMOD.MOD Field                      */

/*! @name UCOMP - Upper Position Compare Register */
#define ENC_UCOMP_COMP_MASK                      (0xFFFFU)                                           /*!< ENC_UCOMP.COMP Mask                     */
#define ENC_UCOMP_COMP_SHIFT                     (0U)                                                /*!< ENC_UCOMP.COMP Position                 */
#define ENC_UCOMP_COMP(x)                        (((uint16_t)(((uint16_t)(x))<<ENC_UCOMP_COMP_SHIFT))&ENC_UCOMP_COMP_MASK) /*!< ENC_UCOMP.COMP Field                    */

/*! @name LCOMP - Lower Position Compare Register */
#define ENC_LCOMP_COMP_MASK                      (0xFFFFU)                                           /*!< ENC_LCOMP.COMP Mask                     */
#define ENC_LCOMP_COMP_SHIFT                     (0U)                                                /*!< ENC_LCOMP.COMP Position                 */
#define ENC_LCOMP_COMP(x)                        (((uint16_t)(((uint16_t)(x))<<ENC_LCOMP_COMP_SHIFT))&ENC_LCOMP_COMP_MASK) /*!< ENC_LCOMP.COMP Field                    */
/**
 * @} */ /* End group ENC_Register_Masks_GROUP 
 */

/* ENC - Peripheral instance base addresses */
#define ENC_BasePtr                    0x40055000UL //!< Peripheral base address
#define ENC                            ((ENC_Type *) ENC_BasePtr) //!< Freescale base pointer
#define ENC_BASE_PTR                   (ENC) //!< Freescale style base pointer
/**
 * @} */ /* End group ENC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup EWM_Peripheral_access_layer_GROUP EWM Peripheral Access Layer
* @brief C Struct for EWM
* @{
*/

/* ================================================================================ */
/* ================           EWM (file:EWM_INT)                   ================ */
/* ================================================================================ */

/**
 * @brief External Watchdog Monitor
 */
/**
* @addtogroup EWM_structs_GROUP EWM struct
* @brief Struct for EWM
* @{
*/
typedef struct EWM_Type {
   __IO uint8_t   CTRL;                         /**< 0000: Control Register                                             */
   __O  uint8_t   SERV;                         /**< 0001: Service Register                                             */
   __IO uint8_t   CMPL;                         /**< 0002: Compare Low Register                                         */
   __IO uint8_t   CMPH;                         /**< 0003: Compare High Register                                        */
} EWM_Type;

/**
 * @} */ /* End group EWM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'EWM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup EWM_Register_Masks_GROUP EWM Register Masks
* @brief Register Masks for EWM
* @{
*/

/*! @name CTRL - Control Register */
#define EWM_CTRL_EWMEN_MASK                      (0x1U)                                              /*!< EWM_CTRL.EWMEN Mask                     */
#define EWM_CTRL_EWMEN_SHIFT                     (0U)                                                /*!< EWM_CTRL.EWMEN Position                 */
#define EWM_CTRL_EWMEN(x)                        (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_EWMEN_SHIFT))&EWM_CTRL_EWMEN_MASK) /*!< EWM_CTRL.EWMEN Field                    */
#define EWM_CTRL_ASSIN_MASK                      (0x2U)                                              /*!< EWM_CTRL.ASSIN Mask                     */
#define EWM_CTRL_ASSIN_SHIFT                     (1U)                                                /*!< EWM_CTRL.ASSIN Position                 */
#define EWM_CTRL_ASSIN(x)                        (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_ASSIN_SHIFT))&EWM_CTRL_ASSIN_MASK) /*!< EWM_CTRL.ASSIN Field                    */
#define EWM_CTRL_INEN_MASK                       (0x4U)                                              /*!< EWM_CTRL.INEN Mask                      */
#define EWM_CTRL_INEN_SHIFT                      (2U)                                                /*!< EWM_CTRL.INEN Position                  */
#define EWM_CTRL_INEN(x)                         (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_INEN_SHIFT))&EWM_CTRL_INEN_MASK) /*!< EWM_CTRL.INEN Field                     */
#define EWM_CTRL_INTEN_MASK                      (0x8U)                                              /*!< EWM_CTRL.INTEN Mask                     */
#define EWM_CTRL_INTEN_SHIFT                     (3U)                                                /*!< EWM_CTRL.INTEN Position                 */
#define EWM_CTRL_INTEN(x)                        (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_INTEN_SHIFT))&EWM_CTRL_INTEN_MASK) /*!< EWM_CTRL.INTEN Field                    */

/*! @name SERV - Service Register */
#define EWM_SERV_SERVICE_MASK                    (0xFFU)                                             /*!< EWM_SERV.SERVICE Mask                   */
#define EWM_SERV_SERVICE_SHIFT                   (0U)                                                /*!< EWM_SERV.SERVICE Position               */
#define EWM_SERV_SERVICE(x)                      (((uint8_t)(((uint8_t)(x))<<EWM_SERV_SERVICE_SHIFT))&EWM_SERV_SERVICE_MASK) /*!< EWM_SERV.SERVICE Field                  */

/*! @name CMPL - Compare Low Register */
#define EWM_CMPL_COMPAREL_MASK                   (0xFFU)                                             /*!< EWM_CMPL.COMPAREL Mask                  */
#define EWM_CMPL_COMPAREL_SHIFT                  (0U)                                                /*!< EWM_CMPL.COMPAREL Position              */
#define EWM_CMPL_COMPAREL(x)                     (((uint8_t)(((uint8_t)(x))<<EWM_CMPL_COMPAREL_SHIFT))&EWM_CMPL_COMPAREL_MASK) /*!< EWM_CMPL.COMPAREL Field                 */

/*! @name CMPH - Compare High Register */
#define EWM_CMPH_COMPAREH_MASK                   (0xFFU)                                             /*!< EWM_CMPH.COMPAREH Mask                  */
#define EWM_CMPH_COMPAREH_SHIFT                  (0U)                                                /*!< EWM_CMPH.COMPAREH Position              */
#define EWM_CMPH_COMPAREH(x)                     (((uint8_t)(((uint8_t)(x))<<EWM_CMPH_COMPAREH_SHIFT))&EWM_CMPH_COMPAREH_MASK) /*!< EWM_CMPH.COMPAREH Field                 */
/**
 * @} */ /* End group EWM_Register_Masks_GROUP 
 */

/* EWM - Peripheral instance base addresses */
#define EWM_BasePtr                    0x40061000UL //!< Peripheral base address
#define EWM                            ((EWM_Type *) EWM_BasePtr) //!< Freescale base pointer
#define EWM_BASE_PTR                   (EWM) //!< Freescale style base pointer
/**
 * @} */ /* End group EWM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup FMC_Peripheral_access_layer_GROUP FMC Peripheral Access Layer
* @brief C Struct for FMC
* @{
*/

/* ================================================================================ */
/* ================           FMC (file:FMC_MKV40F15)              ================ */
/* ================================================================================ */

/**
 * @brief Flash Memory Controller
 */
/**
* @addtogroup FMC_structs_GROUP FMC struct
* @brief Struct for FMC
* @{
*/
typedef struct FMC_Type {
   __IO uint32_t  PFAPR;                        /**< 0000: Flash Access Protection Register                             */
   __IO uint32_t  PFB0CR;                       /**< 0004: Flash Bank 0 Control Register                                */
   __I  uint32_t  PFB1CR;                       /**< 0008: Flash Bank 1 Control Register                                */
        uint8_t   RESERVED_0[244];              /**< 000C: 0xF4 bytes                                                   */
   struct {
      __IO uint32_t  S[2];                      /**< 0100: Cache Tag Storage                                            */
   } TAGVDW[4];                                 /**< 0100: (cluster: size=0x0020, 32)                                   */
        uint8_t   RESERVED_2[224];              /**< 0120: 0xE0 bytes                                                   */
   struct {
      __IO uint32_t  S0UM;                      /**< 0200: Cache Data Storage (uppermost word)                          */
      __IO uint32_t  S0MU;                      /**< 0204: Cache Data Storage (mid-upper word)                          */
      __IO uint32_t  S0ML;                      /**< 0208: Cache Data Storage (mid-lower word)                          */
      __IO uint32_t  S0LM;                      /**< 020C: Cache Data Storage (lowermost word)                          */
      __IO uint32_t  S1UM;                      /**< 0210: Cache Data Storage (uppermost word)                          */
      __IO uint32_t  S1MU;                      /**< 0214: Cache Data Storage (mid-upper word)                          */
      __IO uint32_t  S1ML;                      /**< 0218: Cache Data Storage (mid-lower word)                          */
      __IO uint32_t  S1LM;                      /**< 021C: Cache Data Storage (lowermost word)                          */
           uint8_t   RESERVED_3[32];            /**< 0220: 0x20 bytes                                                   */
   } DATAW[4];                                  /**< 0200: (cluster: size=0x0100, 256)                                  */
} FMC_Type;

/**
 * @} */ /* End group FMC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'FMC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup FMC_Register_Masks_GROUP FMC Register Masks
* @brief Register Masks for FMC
* @{
*/

/*! @name PFAPR - Flash Access Protection Register */
#define FMC_PFAPR_M0AP_MASK                      (0x3U)                                              /*!< FMC_PFAPR.M0AP Mask                     */
#define FMC_PFAPR_M0AP_SHIFT                     (0U)                                                /*!< FMC_PFAPR.M0AP Position                 */
#define FMC_PFAPR_M0AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M0AP_SHIFT))&FMC_PFAPR_M0AP_MASK) /*!< FMC_PFAPR.M0AP Field                    */
#define FMC_PFAPR_M1AP_MASK                      (0xCU)                                              /*!< FMC_PFAPR.M1AP Mask                     */
#define FMC_PFAPR_M1AP_SHIFT                     (2U)                                                /*!< FMC_PFAPR.M1AP Position                 */
#define FMC_PFAPR_M1AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M1AP_SHIFT))&FMC_PFAPR_M1AP_MASK) /*!< FMC_PFAPR.M1AP Field                    */
#define FMC_PFAPR_M2AP_MASK                      (0x30U)                                             /*!< FMC_PFAPR.M2AP Mask                     */
#define FMC_PFAPR_M2AP_SHIFT                     (4U)                                                /*!< FMC_PFAPR.M2AP Position                 */
#define FMC_PFAPR_M2AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M2AP_SHIFT))&FMC_PFAPR_M2AP_MASK) /*!< FMC_PFAPR.M2AP Field                    */
#define FMC_PFAPR_M0PFD_MASK                     (0x10000U)                                          /*!< FMC_PFAPR.M0PFD Mask                    */
#define FMC_PFAPR_M0PFD_SHIFT                    (16U)                                               /*!< FMC_PFAPR.M0PFD Position                */
#define FMC_PFAPR_M0PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M0PFD_SHIFT))&FMC_PFAPR_M0PFD_MASK) /*!< FMC_PFAPR.M0PFD Field                   */
#define FMC_PFAPR_M1PFD_MASK                     (0x20000U)                                          /*!< FMC_PFAPR.M1PFD Mask                    */
#define FMC_PFAPR_M1PFD_SHIFT                    (17U)                                               /*!< FMC_PFAPR.M1PFD Position                */
#define FMC_PFAPR_M1PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M1PFD_SHIFT))&FMC_PFAPR_M1PFD_MASK) /*!< FMC_PFAPR.M1PFD Field                   */
#define FMC_PFAPR_M2PFD_MASK                     (0x40000U)                                          /*!< FMC_PFAPR.M2PFD Mask                    */
#define FMC_PFAPR_M2PFD_SHIFT                    (18U)                                               /*!< FMC_PFAPR.M2PFD Position                */
#define FMC_PFAPR_M2PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M2PFD_SHIFT))&FMC_PFAPR_M2PFD_MASK) /*!< FMC_PFAPR.M2PFD Field                   */

/*! @name PFB0CR - Flash Bank 0 Control Register */
#define FMC_PFB0CR_B0SEBE_MASK                   (0x1U)                                              /*!< FMC_PFB0CR.B0SEBE Mask                  */
#define FMC_PFB0CR_B0SEBE_SHIFT                  (0U)                                                /*!< FMC_PFB0CR.B0SEBE Position              */
#define FMC_PFB0CR_B0SEBE(x)                     (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0SEBE_SHIFT))&FMC_PFB0CR_B0SEBE_MASK) /*!< FMC_PFB0CR.B0SEBE Field                 */
#define FMC_PFB0CR_B0IPE_MASK                    (0x2U)                                              /*!< FMC_PFB0CR.B0IPE Mask                   */
#define FMC_PFB0CR_B0IPE_SHIFT                   (1U)                                                /*!< FMC_PFB0CR.B0IPE Position               */
#define FMC_PFB0CR_B0IPE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0IPE_SHIFT))&FMC_PFB0CR_B0IPE_MASK) /*!< FMC_PFB0CR.B0IPE Field                  */
#define FMC_PFB0CR_B0DPE_MASK                    (0x4U)                                              /*!< FMC_PFB0CR.B0DPE Mask                   */
#define FMC_PFB0CR_B0DPE_SHIFT                   (2U)                                                /*!< FMC_PFB0CR.B0DPE Position               */
#define FMC_PFB0CR_B0DPE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0DPE_SHIFT))&FMC_PFB0CR_B0DPE_MASK) /*!< FMC_PFB0CR.B0DPE Field                  */
#define FMC_PFB0CR_B0ICE_MASK                    (0x8U)                                              /*!< FMC_PFB0CR.B0ICE Mask                   */
#define FMC_PFB0CR_B0ICE_SHIFT                   (3U)                                                /*!< FMC_PFB0CR.B0ICE Position               */
#define FMC_PFB0CR_B0ICE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0ICE_SHIFT))&FMC_PFB0CR_B0ICE_MASK) /*!< FMC_PFB0CR.B0ICE Field                  */
#define FMC_PFB0CR_B0DCE_MASK                    (0x10U)                                             /*!< FMC_PFB0CR.B0DCE Mask                   */
#define FMC_PFB0CR_B0DCE_SHIFT                   (4U)                                                /*!< FMC_PFB0CR.B0DCE Position               */
#define FMC_PFB0CR_B0DCE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0DCE_SHIFT))&FMC_PFB0CR_B0DCE_MASK) /*!< FMC_PFB0CR.B0DCE Field                  */
#define FMC_PFB0CR_CRC_MASK                      (0xE0U)                                             /*!< FMC_PFB0CR.CRC Mask                     */
#define FMC_PFB0CR_CRC_SHIFT                     (5U)                                                /*!< FMC_PFB0CR.CRC Position                 */
#define FMC_PFB0CR_CRC(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_CRC_SHIFT))&FMC_PFB0CR_CRC_MASK) /*!< FMC_PFB0CR.CRC Field                    */
#define FMC_PFB0CR_B0MW_MASK                     (0x60000U)                                          /*!< FMC_PFB0CR.B0MW Mask                    */
#define FMC_PFB0CR_B0MW_SHIFT                    (17U)                                               /*!< FMC_PFB0CR.B0MW Position                */
#define FMC_PFB0CR_B0MW(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0MW_SHIFT))&FMC_PFB0CR_B0MW_MASK) /*!< FMC_PFB0CR.B0MW Field                   */
#define FMC_PFB0CR_S_B_INV_MASK                  (0x80000U)                                          /*!< FMC_PFB0CR.S_B_INV Mask                 */
#define FMC_PFB0CR_S_B_INV_SHIFT                 (19U)                                               /*!< FMC_PFB0CR.S_B_INV Position             */
#define FMC_PFB0CR_S_B_INV(x)                    (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_S_B_INV_SHIFT))&FMC_PFB0CR_S_B_INV_MASK) /*!< FMC_PFB0CR.S_B_INV Field                */
#define FMC_PFB0CR_CINV_WAY_MASK                 (0xF00000U)                                         /*!< FMC_PFB0CR.CINV_WAY Mask                */
#define FMC_PFB0CR_CINV_WAY_SHIFT                (20U)                                               /*!< FMC_PFB0CR.CINV_WAY Position            */
#define FMC_PFB0CR_CINV_WAY(x)                   (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_CINV_WAY_SHIFT))&FMC_PFB0CR_CINV_WAY_MASK) /*!< FMC_PFB0CR.CINV_WAY Field               */
#define FMC_PFB0CR_CLCK_WAY_MASK                 (0xF000000U)                                        /*!< FMC_PFB0CR.CLCK_WAY Mask                */
#define FMC_PFB0CR_CLCK_WAY_SHIFT                (24U)                                               /*!< FMC_PFB0CR.CLCK_WAY Position            */
#define FMC_PFB0CR_CLCK_WAY(x)                   (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_CLCK_WAY_SHIFT))&FMC_PFB0CR_CLCK_WAY_MASK) /*!< FMC_PFB0CR.CLCK_WAY Field               */
#define FMC_PFB0CR_B0RWSC_MASK                   (0xF0000000U)                                       /*!< FMC_PFB0CR.B0RWSC Mask                  */
#define FMC_PFB0CR_B0RWSC_SHIFT                  (28U)                                               /*!< FMC_PFB0CR.B0RWSC Position              */
#define FMC_PFB0CR_B0RWSC(x)                     (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0RWSC_SHIFT))&FMC_PFB0CR_B0RWSC_MASK) /*!< FMC_PFB0CR.B0RWSC Field                 */

/*! @name PFB1CR - Flash Bank 1 Control Register */

/*! @name S - Cache Tag Storage */
#define FMC_S_valid_MASK                         (0x1U)                                              /*!< FMC_S.valid Mask                        */
#define FMC_S_valid_SHIFT                        (0U)                                                /*!< FMC_S.valid Position                    */
#define FMC_S_valid(x)                           (((uint32_t)(((uint32_t)(x))<<FMC_S_valid_SHIFT))&FMC_S_valid_MASK) /*!< FMC_S.valid Field                       */
#define FMC_S_tag_MASK                           (0xFFFE0U)                                          /*!< FMC_S.tag Mask                          */
#define FMC_S_tag_SHIFT                          (5U)                                                /*!< FMC_S.tag Position                      */
#define FMC_S_tag(x)                             (((uint32_t)(((uint32_t)(x))<<FMC_S_tag_SHIFT))&FMC_S_tag_MASK) /*!< FMC_S.tag Field                         */

/*! @name S0UM - Cache Data Storage (uppermost word) */
#define FMC_S0UM_data_MASK                       (0xFFFFFFFFU)                                       /*!< FMC_S0UM.data Mask                      */
#define FMC_S0UM_data_SHIFT                      (0U)                                                /*!< FMC_S0UM.data Position                  */
#define FMC_S0UM_data(x)                         (((uint32_t)(((uint32_t)(x))<<FMC_S0UM_data_SHIFT))&FMC_S0UM_data_MASK) /*!< FMC_S0UM.data Field                     */

/*! @name S0MU - Cache Data Storage (mid-upper word) */
#define FMC_S0MU_data_MASK                       (0xFFFFFFFFU)                                       /*!< FMC_S0MU.data Mask                      */
#define FMC_S0MU_data_SHIFT                      (0U)                                                /*!< FMC_S0MU.data Position                  */
#define FMC_S0MU_data(x)                         (((uint32_t)(((uint32_t)(x))<<FMC_S0MU_data_SHIFT))&FMC_S0MU_data_MASK) /*!< FMC_S0MU.data Field                     */

/*! @name S0ML - Cache Data Storage (mid-lower word) */
#define FMC_S0ML_data_MASK                       (0xFFFFFFFFU)                                       /*!< FMC_S0ML.data Mask                      */
#define FMC_S0ML_data_SHIFT                      (0U)                                                /*!< FMC_S0ML.data Position                  */
#define FMC_S0ML_data(x)                         (((uint32_t)(((uint32_t)(x))<<FMC_S0ML_data_SHIFT))&FMC_S0ML_data_MASK) /*!< FMC_S0ML.data Field                     */

/*! @name S0LM - Cache Data Storage (lowermost word) */
#define FMC_S0LM_data_MASK                       (0xFFFFFFFFU)                                       /*!< FMC_S0LM.data Mask                      */
#define FMC_S0LM_data_SHIFT                      (0U)                                                /*!< FMC_S0LM.data Position                  */
#define FMC_S0LM_data(x)                         (((uint32_t)(((uint32_t)(x))<<FMC_S0LM_data_SHIFT))&FMC_S0LM_data_MASK) /*!< FMC_S0LM.data Field                     */

/*! @name S1UM - Cache Data Storage (uppermost word) */
#define FMC_S1UM_data_MASK                       (0xFFFFFFFFU)                                       /*!< FMC_S1UM.data Mask                      */
#define FMC_S1UM_data_SHIFT                      (0U)                                                /*!< FMC_S1UM.data Position                  */
#define FMC_S1UM_data(x)                         (((uint32_t)(((uint32_t)(x))<<FMC_S1UM_data_SHIFT))&FMC_S1UM_data_MASK) /*!< FMC_S1UM.data Field                     */

/*! @name S1MU - Cache Data Storage (mid-upper word) */
#define FMC_S1MU_data_MASK                       (0xFFFFFFFFU)                                       /*!< FMC_S1MU.data Mask                      */
#define FMC_S1MU_data_SHIFT                      (0U)                                                /*!< FMC_S1MU.data Position                  */
#define FMC_S1MU_data(x)                         (((uint32_t)(((uint32_t)(x))<<FMC_S1MU_data_SHIFT))&FMC_S1MU_data_MASK) /*!< FMC_S1MU.data Field                     */

/*! @name S1ML - Cache Data Storage (mid-lower word) */
#define FMC_S1ML_data_MASK                       (0xFFFFFFFFU)                                       /*!< FMC_S1ML.data Mask                      */
#define FMC_S1ML_data_SHIFT                      (0U)                                                /*!< FMC_S1ML.data Position                  */
#define FMC_S1ML_data(x)                         (((uint32_t)(((uint32_t)(x))<<FMC_S1ML_data_SHIFT))&FMC_S1ML_data_MASK) /*!< FMC_S1ML.data Field                     */

/*! @name S1LM - Cache Data Storage (lowermost word) */
#define FMC_S1LM_data_MASK                       (0xFFFFFFFFU)                                       /*!< FMC_S1LM.data Mask                      */
#define FMC_S1LM_data_SHIFT                      (0U)                                                /*!< FMC_S1LM.data Position                  */
#define FMC_S1LM_data(x)                         (((uint32_t)(((uint32_t)(x))<<FMC_S1LM_data_SHIFT))&FMC_S1LM_data_MASK) /*!< FMC_S1LM.data Field                     */
/**
 * @} */ /* End group FMC_Register_Masks_GROUP 
 */

/* FMC - Peripheral instance base addresses */
#define FMC_BasePtr                    0x4001F000UL //!< Peripheral base address
#define FMC                            ((FMC_Type *) FMC_BasePtr) //!< Freescale base pointer
#define FMC_BASE_PTR                   (FMC) //!< Freescale style base pointer
/**
 * @} */ /* End group FMC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup FTFA_Peripheral_access_layer_GROUP FTFA Peripheral Access Layer
* @brief C Struct for FTFA
* @{
*/

/* ================================================================================ */
/* ================           FTFA (file:FTFA_XACCH)               ================ */
/* ================================================================================ */

/**
 * @brief Flash Memory Interface
 */
/**
* @addtogroup FTFA_structs_GROUP FTFA struct
* @brief Struct for FTFA
* @{
*/
typedef struct FTFA_Type {
   __IO uint8_t   FSTAT;                        /**< 0000: Flash Status Register                                        */
   __IO uint8_t   FCNFG;                        /**< 0001: Flash Configuration Register                                 */
   __I  uint8_t   FSEC;                         /**< 0002: Flash Security Register                                      */
   __I  uint8_t   FOPT;                         /**< 0003: Flash Option Register                                        */
   __IO uint8_t   FCCOB3;                       /**< 0004: FCCOB 3 - Usually Flash address [7..0]                       */
   __IO uint8_t   FCCOB2;                       /**< 0005: FCCOB 2 - Usually Flash address [15..8]                      */
   __IO uint8_t   FCCOB1;                       /**< 0006: FCCOB 1 - Usually Flash address [23..16]                     */
   __IO uint8_t   FCCOB0;                       /**< 0007: FCCOB 0 - Usually FCMD (Flash command)                       */
   __IO uint8_t   FCCOB7;                       /**< 0008: FCCOB 7 - Usually Data Byte 3                                */
   __IO uint8_t   FCCOB6;                       /**< 0009: FCCOB 6 - Usually Data Byte 2                                */
   __IO uint8_t   FCCOB5;                       /**< 000A: FCCOB 5 - Usually Data Byte 1                                */
   __IO uint8_t   FCCOB4;                       /**< 000B: FCCOB 4 - Usually Data Byte 0                                */
   __IO uint8_t   FCCOBB;                       /**< 000C: FCCOB B - Usually Data Byte 7                                */
   __IO uint8_t   FCCOBA;                       /**< 000D: FCCOB A - Usually Data Byte 6                                */
   __IO uint8_t   FCCOB9;                       /**< 000E: FCCOB 9 - Usually Data Byte 5                                */
   __IO uint8_t   FCCOB8;                       /**< 000F: FCCOB 8 - Usually Data Byte 4                                */
   __IO uint8_t   FPROT3;                       /**< 0010: Program Flash Protection                                     */
   __IO uint8_t   FPROT2;                       /**< 0011: Program Flash Protection                                     */
   __IO uint8_t   FPROT1;                       /**< 0012: Program Flash Protection                                     */
   __IO uint8_t   FPROT0;                       /**< 0013: Program Flash Protection                                     */
        uint8_t   RESERVED_0[4];                /**< 0014: 0x4 bytes                                                    */
   __I  uint8_t   XACCH3;                       /**< 0018: Execute-only Access Registers (high)                         */
   __I  uint8_t   XACCH2;                       /**< 0019: Execute-only Access Registers (high)                         */
   __I  uint8_t   XACCH1;                       /**< 001A: Execute-only Access Registers (high)                         */
   __I  uint8_t   XACCH0;                       /**< 001B: Execute-only Access Registers (high)                         */
   __I  uint8_t   XACCL3;                       /**< 001C: Execute-only Access Registers (low)                          */
   __I  uint8_t   XACCL2;                       /**< 001D: Execute-only Access Registers (low)                          */
   __I  uint8_t   XACCL1;                       /**< 001E: Execute-only Access Registers (low)                          */
   __I  uint8_t   XACCL0;                       /**< 001F: Execute-only Access Registers (low)                          */
   __I  uint8_t   SACCH3;                       /**< 0020: Supervisor-only Access Registers (high)                      */
   __I  uint8_t   SACCH2;                       /**< 0021: Supervisor-only Access Registers (high)                      */
   __I  uint8_t   SACCH1;                       /**< 0022: Supervisor-only Access Registers (high)                      */
   __I  uint8_t   SACCH0;                       /**< 0023: Supervisor-only Access Registers (high)                      */
   __I  uint8_t   SACCL3;                       /**< 0024: Supervisor-only Access Registers (low)                       */
   __I  uint8_t   SACCL2;                       /**< 0025: Supervisor-only Access Registers (low)                       */
   __I  uint8_t   SACCL1;                       /**< 0026: Supervisor-only Access Registers (low)                       */
   __I  uint8_t   SACCL0;                       /**< 0027: Supervisor-only Access Registers (low)                       */
   __I  uint8_t   FACSS;                        /**< 0028: Flash Access Segment Size Register                           */
        uint8_t   RESERVED_1[2];                /**< 0029: 0x2 bytes                                                    */
   __I  uint8_t   FACSN;                        /**< 002B: Flash Access Segment Number Register                         */
} FTFA_Type;

/**
 * @} */ /* End group FTFA_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'FTFA' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup FTFA_Register_Masks_GROUP FTFA Register Masks
* @brief Register Masks for FTFA
* @{
*/

/*! @name FSTAT - Flash Status Register */
#define FTFA_FSTAT_MGSTAT0_MASK                  (0x1U)                                              /*!< FTFA_FSTAT.MGSTAT0 Mask                 */
#define FTFA_FSTAT_MGSTAT0_SHIFT                 (0U)                                                /*!< FTFA_FSTAT.MGSTAT0 Position             */
#define FTFA_FSTAT_MGSTAT0(x)                    (((uint8_t)(((uint8_t)(x))<<FTFA_FSTAT_MGSTAT0_SHIFT))&FTFA_FSTAT_MGSTAT0_MASK) /*!< FTFA_FSTAT.MGSTAT0 Field                */
#define FTFA_FSTAT_FPVIOL_MASK                   (0x10U)                                             /*!< FTFA_FSTAT.FPVIOL Mask                  */
#define FTFA_FSTAT_FPVIOL_SHIFT                  (4U)                                                /*!< FTFA_FSTAT.FPVIOL Position              */
#define FTFA_FSTAT_FPVIOL(x)                     (((uint8_t)(((uint8_t)(x))<<FTFA_FSTAT_FPVIOL_SHIFT))&FTFA_FSTAT_FPVIOL_MASK) /*!< FTFA_FSTAT.FPVIOL Field                 */
#define FTFA_FSTAT_ACCERR_MASK                   (0x20U)                                             /*!< FTFA_FSTAT.ACCERR Mask                  */
#define FTFA_FSTAT_ACCERR_SHIFT                  (5U)                                                /*!< FTFA_FSTAT.ACCERR Position              */
#define FTFA_FSTAT_ACCERR(x)                     (((uint8_t)(((uint8_t)(x))<<FTFA_FSTAT_ACCERR_SHIFT))&FTFA_FSTAT_ACCERR_MASK) /*!< FTFA_FSTAT.ACCERR Field                 */
#define FTFA_FSTAT_RDCOLERR_MASK                 (0x40U)                                             /*!< FTFA_FSTAT.RDCOLERR Mask                */
#define FTFA_FSTAT_RDCOLERR_SHIFT                (6U)                                                /*!< FTFA_FSTAT.RDCOLERR Position            */
#define FTFA_FSTAT_RDCOLERR(x)                   (((uint8_t)(((uint8_t)(x))<<FTFA_FSTAT_RDCOLERR_SHIFT))&FTFA_FSTAT_RDCOLERR_MASK) /*!< FTFA_FSTAT.RDCOLERR Field               */
#define FTFA_FSTAT_CCIF_MASK                     (0x80U)                                             /*!< FTFA_FSTAT.CCIF Mask                    */
#define FTFA_FSTAT_CCIF_SHIFT                    (7U)                                                /*!< FTFA_FSTAT.CCIF Position                */
#define FTFA_FSTAT_CCIF(x)                       (((uint8_t)(((uint8_t)(x))<<FTFA_FSTAT_CCIF_SHIFT))&FTFA_FSTAT_CCIF_MASK) /*!< FTFA_FSTAT.CCIF Field                   */

/*! @name FCNFG - Flash Configuration Register */
#define FTFA_FCNFG_ERSSUSP_MASK                  (0x10U)                                             /*!< FTFA_FCNFG.ERSSUSP Mask                 */
#define FTFA_FCNFG_ERSSUSP_SHIFT                 (4U)                                                /*!< FTFA_FCNFG.ERSSUSP Position             */
#define FTFA_FCNFG_ERSSUSP(x)                    (((uint8_t)(((uint8_t)(x))<<FTFA_FCNFG_ERSSUSP_SHIFT))&FTFA_FCNFG_ERSSUSP_MASK) /*!< FTFA_FCNFG.ERSSUSP Field                */
#define FTFA_FCNFG_ERSAREQ_MASK                  (0x20U)                                             /*!< FTFA_FCNFG.ERSAREQ Mask                 */
#define FTFA_FCNFG_ERSAREQ_SHIFT                 (5U)                                                /*!< FTFA_FCNFG.ERSAREQ Position             */
#define FTFA_FCNFG_ERSAREQ(x)                    (((uint8_t)(((uint8_t)(x))<<FTFA_FCNFG_ERSAREQ_SHIFT))&FTFA_FCNFG_ERSAREQ_MASK) /*!< FTFA_FCNFG.ERSAREQ Field                */
#define FTFA_FCNFG_RDCOLLIE_MASK                 (0x40U)                                             /*!< FTFA_FCNFG.RDCOLLIE Mask                */
#define FTFA_FCNFG_RDCOLLIE_SHIFT                (6U)                                                /*!< FTFA_FCNFG.RDCOLLIE Position            */
#define FTFA_FCNFG_RDCOLLIE(x)                   (((uint8_t)(((uint8_t)(x))<<FTFA_FCNFG_RDCOLLIE_SHIFT))&FTFA_FCNFG_RDCOLLIE_MASK) /*!< FTFA_FCNFG.RDCOLLIE Field               */
#define FTFA_FCNFG_CCIE_MASK                     (0x80U)                                             /*!< FTFA_FCNFG.CCIE Mask                    */
#define FTFA_FCNFG_CCIE_SHIFT                    (7U)                                                /*!< FTFA_FCNFG.CCIE Position                */
#define FTFA_FCNFG_CCIE(x)                       (((uint8_t)(((uint8_t)(x))<<FTFA_FCNFG_CCIE_SHIFT))&FTFA_FCNFG_CCIE_MASK) /*!< FTFA_FCNFG.CCIE Field                   */

/*! @name FSEC - Flash Security Register */
#define FTFA_FSEC_SEC_MASK                       (0x3U)                                              /*!< FTFA_FSEC.SEC Mask                      */
#define FTFA_FSEC_SEC_SHIFT                      (0U)                                                /*!< FTFA_FSEC.SEC Position                  */
#define FTFA_FSEC_SEC(x)                         (((uint8_t)(((uint8_t)(x))<<FTFA_FSEC_SEC_SHIFT))&FTFA_FSEC_SEC_MASK) /*!< FTFA_FSEC.SEC Field                     */
#define FTFA_FSEC_FSLACC_MASK                    (0xCU)                                              /*!< FTFA_FSEC.FSLACC Mask                   */
#define FTFA_FSEC_FSLACC_SHIFT                   (2U)                                                /*!< FTFA_FSEC.FSLACC Position               */
#define FTFA_FSEC_FSLACC(x)                      (((uint8_t)(((uint8_t)(x))<<FTFA_FSEC_FSLACC_SHIFT))&FTFA_FSEC_FSLACC_MASK) /*!< FTFA_FSEC.FSLACC Field                  */
#define FTFA_FSEC_MEEN_MASK                      (0x30U)                                             /*!< FTFA_FSEC.MEEN Mask                     */
#define FTFA_FSEC_MEEN_SHIFT                     (4U)                                                /*!< FTFA_FSEC.MEEN Position                 */
#define FTFA_FSEC_MEEN(x)                        (((uint8_t)(((uint8_t)(x))<<FTFA_FSEC_MEEN_SHIFT))&FTFA_FSEC_MEEN_MASK) /*!< FTFA_FSEC.MEEN Field                    */
#define FTFA_FSEC_KEYEN_MASK                     (0xC0U)                                             /*!< FTFA_FSEC.KEYEN Mask                    */
#define FTFA_FSEC_KEYEN_SHIFT                    (6U)                                                /*!< FTFA_FSEC.KEYEN Position                */
#define FTFA_FSEC_KEYEN(x)                       (((uint8_t)(((uint8_t)(x))<<FTFA_FSEC_KEYEN_SHIFT))&FTFA_FSEC_KEYEN_MASK) /*!< FTFA_FSEC.KEYEN Field                   */

/*! @name FOPT - Flash Option Register  */
#define FTFA_FOPT_OPT_MASK                       (0xFFU)                                             /*!< FTFA_FOPT.OPT Mask                      */
#define FTFA_FOPT_OPT_SHIFT                      (0U)                                                /*!< FTFA_FOPT.OPT Position                  */
#define FTFA_FOPT_OPT(x)                         (((uint8_t)(((uint8_t)(x))<<FTFA_FOPT_OPT_SHIFT))&FTFA_FOPT_OPT_MASK) /*!< FTFA_FOPT.OPT Field                     */

/*! @name FCCOB - FCCOB %s - Usually %m  */
#define FTFA_FCCOB_CCOBn_MASK                    (0xFFU)                                             /*!< FTFA_FCCOB.CCOBn Mask                   */
#define FTFA_FCCOB_CCOBn_SHIFT                   (0U)                                                /*!< FTFA_FCCOB.CCOBn Position               */
#define FTFA_FCCOB_CCOBn(x)                      (((uint8_t)(((uint8_t)(x))<<FTFA_FCCOB_CCOBn_SHIFT))&FTFA_FCCOB_CCOBn_MASK) /*!< FTFA_FCCOB.CCOBn Field                  */

/*! @name FPROT - Program Flash Protection  */
#define FTFA_FPROT_PROT_MASK                     (0xFFU)                                             /*!< FTFA_FPROT.PROT Mask                    */
#define FTFA_FPROT_PROT_SHIFT                    (0U)                                                /*!< FTFA_FPROT.PROT Position                */
#define FTFA_FPROT_PROT(x)                       (((uint8_t)(((uint8_t)(x))<<FTFA_FPROT_PROT_SHIFT))&FTFA_FPROT_PROT_MASK) /*!< FTFA_FPROT.PROT Field                   */

/*! @name XACCH - Execute-only Access Registers (high) */
#define FTFA_XACCH_XA_MASK                       (0xFFU)                                             /*!< FTFA_XACCH.XA Mask                      */
#define FTFA_XACCH_XA_SHIFT                      (0U)                                                /*!< FTFA_XACCH.XA Position                  */
#define FTFA_XACCH_XA(x)                         (((uint8_t)(((uint8_t)(x))<<FTFA_XACCH_XA_SHIFT))&FTFA_XACCH_XA_MASK) /*!< FTFA_XACCH.XA Field                     */

/*! @name XACCL - Execute-only Access Registers (low) */
#define FTFA_XACCL_XA_MASK                       (0xFFU)                                             /*!< FTFA_XACCL.XA Mask                      */
#define FTFA_XACCL_XA_SHIFT                      (0U)                                                /*!< FTFA_XACCL.XA Position                  */
#define FTFA_XACCL_XA(x)                         (((uint8_t)(((uint8_t)(x))<<FTFA_XACCL_XA_SHIFT))&FTFA_XACCL_XA_MASK) /*!< FTFA_XACCL.XA Field                     */

/*! @name SACCH - Supervisor-only Access Registers (high) */
#define FTFA_SACCH_SA_MASK                       (0xFFU)                                             /*!< FTFA_SACCH.SA Mask                      */
#define FTFA_SACCH_SA_SHIFT                      (0U)                                                /*!< FTFA_SACCH.SA Position                  */
#define FTFA_SACCH_SA(x)                         (((uint8_t)(((uint8_t)(x))<<FTFA_SACCH_SA_SHIFT))&FTFA_SACCH_SA_MASK) /*!< FTFA_SACCH.SA Field                     */

/*! @name SACCL - Supervisor-only Access Registers (low) */
#define FTFA_SACCL_SA_MASK                       (0xFFU)                                             /*!< FTFA_SACCL.SA Mask                      */
#define FTFA_SACCL_SA_SHIFT                      (0U)                                                /*!< FTFA_SACCL.SA Position                  */
#define FTFA_SACCL_SA(x)                         (((uint8_t)(((uint8_t)(x))<<FTFA_SACCL_SA_SHIFT))&FTFA_SACCL_SA_MASK) /*!< FTFA_SACCL.SA Field                     */

/*! @name FACSS - Flash Access Segment Size Register */
#define FTFA_FACSS_SGSIZE_MASK                   (0xFFU)                                             /*!< FTFA_FACSS.SGSIZE Mask                  */
#define FTFA_FACSS_SGSIZE_SHIFT                  (0U)                                                /*!< FTFA_FACSS.SGSIZE Position              */
#define FTFA_FACSS_SGSIZE(x)                     (((uint8_t)(((uint8_t)(x))<<FTFA_FACSS_SGSIZE_SHIFT))&FTFA_FACSS_SGSIZE_MASK) /*!< FTFA_FACSS.SGSIZE Field                 */

/*! @name FACSN - Flash Access Segment Number Register */
#define FTFA_FACSN_NUMSG_MASK                    (0xFFU)                                             /*!< FTFA_FACSN.NUMSG Mask                   */
#define FTFA_FACSN_NUMSG_SHIFT                   (0U)                                                /*!< FTFA_FACSN.NUMSG Position               */
#define FTFA_FACSN_NUMSG(x)                      (((uint8_t)(((uint8_t)(x))<<FTFA_FACSN_NUMSG_SHIFT))&FTFA_FACSN_NUMSG_MASK) /*!< FTFA_FACSN.NUMSG Field                  */
/**
 * @} */ /* End group FTFA_Register_Masks_GROUP 
 */

/* FTFA - Peripheral instance base addresses */
#define FTFA_BasePtr                   0x40020000UL //!< Peripheral base address
#define FTFA                           ((FTFA_Type *) FTFA_BasePtr) //!< Freescale base pointer
#define FTFA_BASE_PTR                  (FTFA) //!< Freescale style base pointer
/**
 * @} */ /* End group FTFA_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer
* @brief C Struct for GPIO
* @{
*/

/* ================================================================================ */
/* ================           GPIOA (file:GPIOA_0x400FF000)        ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */
/**
* @addtogroup GPIO_structs_GROUP GPIO struct
* @brief Struct for GPIO
* @{
*/
typedef struct GPIO_Type {
   __IO uint32_t  PDOR;                         /**< 0000: Port Data Output Register                                    */
   __O  uint32_t  PSOR;                         /**< 0004: Port Set Output Register                                     */
   __O  uint32_t  PCOR;                         /**< 0008: Port Clear Output Register                                   */
   __O  uint32_t  PTOR;                         /**< 000C: Port Toggle Output Register                                  */
   __I  uint32_t  PDIR;                         /**< 0010: Port Data Input Register                                     */
   __IO uint32_t  PDDR;                         /**< 0014: Port Data Direction Register                                 */
} GPIO_Type;

/**
 * @} */ /* End group GPIO_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'GPIOA' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup GPIO_Register_Masks_GROUP GPIO Register Masks
* @brief Register Masks for GPIO
* @{
*/

/*! @name PDOR - Port Data Output Register */

/*! @name PSOR - Port Set Output Register */

/*! @name PCOR - Port Clear Output Register */

/*! @name PTOR - Port Toggle Output Register */

/*! @name PDIR - Port Data Input Register */

/*! @name PDDR - Port Data Direction Register */
/**
 * @} */ /* End group GPIO_Register_Masks_GROUP 
 */

/* GPIOA - Peripheral instance base addresses */
#define GPIOA_BasePtr                  0x400FF000UL //!< Peripheral base address
#define GPIOA                          ((GPIO_Type *) GPIOA_BasePtr) //!< Freescale base pointer
#define GPIOA_BASE_PTR                 (GPIOA) //!< Freescale style base pointer
/**
 * @} */ /* End group GPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer
* @brief C Struct for GPIO
* @{
*/

/* ================================================================================ */
/* ================           GPIOB (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOB - Peripheral instance base addresses */
#define GPIOB_BasePtr                  0x400FF040UL //!< Peripheral base address
#define GPIOB                          ((GPIO_Type *) GPIOB_BasePtr) //!< Freescale base pointer
#define GPIOB_BASE_PTR                 (GPIOB) //!< Freescale style base pointer
/**
 * @} */ /* End group GPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer
* @brief C Struct for GPIO
* @{
*/

/* ================================================================================ */
/* ================           GPIOC (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOC - Peripheral instance base addresses */
#define GPIOC_BasePtr                  0x400FF080UL //!< Peripheral base address
#define GPIOC                          ((GPIO_Type *) GPIOC_BasePtr) //!< Freescale base pointer
#define GPIOC_BASE_PTR                 (GPIOC) //!< Freescale style base pointer
/**
 * @} */ /* End group GPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer
* @brief C Struct for GPIO
* @{
*/

/* ================================================================================ */
/* ================           GPIOD (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOD - Peripheral instance base addresses */
#define GPIOD_BasePtr                  0x400FF0C0UL //!< Peripheral base address
#define GPIOD                          ((GPIO_Type *) GPIOD_BasePtr) //!< Freescale base pointer
#define GPIOD_BASE_PTR                 (GPIOD) //!< Freescale style base pointer
/**
 * @} */ /* End group GPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer
* @brief C Struct for GPIO
* @{
*/

/* ================================================================================ */
/* ================           GPIOE (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOE - Peripheral instance base addresses */
#define GPIOE_BasePtr                  0x400FF100UL //!< Peripheral base address
#define GPIOE                          ((GPIO_Type *) GPIOE_BasePtr) //!< Freescale base pointer
#define GPIOE_BASE_PTR                 (GPIOE) //!< Freescale style base pointer
/**
 * @} */ /* End group GPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup I2C_Peripheral_access_layer_GROUP I2C Peripheral Access Layer
* @brief C Struct for I2C
* @{
*/

/* ================================================================================ */
/* ================           I2C0 (file:I2C0_F12)                 ================ */
/* ================================================================================ */

/**
 * @brief Inter-Integrated Circuit
 */
/**
* @addtogroup I2C_structs_GROUP I2C struct
* @brief Struct for I2C
* @{
*/
typedef struct I2C_Type {
   __IO uint8_t   A1;                           /**< 0000: Address Register 1                                           */
   __IO uint8_t   F;                            /**< 0001: Frequency Divider register                                   */
   __IO uint8_t   C1;                           /**< 0002: Control Register 1                                           */
   __IO uint8_t   S;                            /**< 0003: Status Register                                              */
   __IO uint8_t   D;                            /**< 0004: Data I/O register                                            */
   __IO uint8_t   C2;                           /**< 0005: Control Register 2                                           */
   __IO uint8_t   FLT;                          /**< 0006: Programmable Input Glitch Filter register                    */
   __IO uint8_t   RA;                           /**< 0007: Range Address register                                       */
   __IO uint8_t   SMB;                          /**< 0008: SMBus Control and Status register                            */
   __IO uint8_t   A2;                           /**< 0009: Address Register 2                                           */
   __IO uint8_t   SLTH;                         /**< 000A: SCL Low Timeout Register High                                */
   __IO uint8_t   SLTL;                         /**< 000B: SCL Low Timeout Register Low                                 */
} I2C_Type;

/**
 * @} */ /* End group I2C_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'I2C0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup I2C_Register_Masks_GROUP I2C Register Masks
* @brief Register Masks for I2C
* @{
*/

/*! @name A1 - Address Register 1 */
#define I2C_A1_AD_MASK                           (0xFEU)                                             /*!< I2C0_A1.AD Mask                         */
#define I2C_A1_AD_SHIFT                          (1U)                                                /*!< I2C0_A1.AD Position                     */
#define I2C_A1_AD(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_A1_AD_SHIFT))&I2C_A1_AD_MASK) /*!< I2C0_A1.AD Field                        */

/*! @name F - Frequency Divider register */
#define I2C_F_ICR_MASK                           (0x3FU)                                             /*!< I2C0_F.ICR Mask                         */
#define I2C_F_ICR_SHIFT                          (0U)                                                /*!< I2C0_F.ICR Position                     */
#define I2C_F_ICR(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_F_ICR_SHIFT))&I2C_F_ICR_MASK) /*!< I2C0_F.ICR Field                        */
#define I2C_F_MULT_MASK                          (0xC0U)                                             /*!< I2C0_F.MULT Mask                        */
#define I2C_F_MULT_SHIFT                         (6U)                                                /*!< I2C0_F.MULT Position                    */
#define I2C_F_MULT(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_F_MULT_SHIFT))&I2C_F_MULT_MASK) /*!< I2C0_F.MULT Field                       */

/*! @name C1 - Control Register 1 */
#define I2C_C1_DMAEN_MASK                        (0x1U)                                              /*!< I2C0_C1.DMAEN Mask                      */
#define I2C_C1_DMAEN_SHIFT                       (0U)                                                /*!< I2C0_C1.DMAEN Position                  */
#define I2C_C1_DMAEN(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_C1_DMAEN_SHIFT))&I2C_C1_DMAEN_MASK) /*!< I2C0_C1.DMAEN Field                     */
#define I2C_C1_WUEN_MASK                         (0x2U)                                              /*!< I2C0_C1.WUEN Mask                       */
#define I2C_C1_WUEN_SHIFT                        (1U)                                                /*!< I2C0_C1.WUEN Position                   */
#define I2C_C1_WUEN(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C1_WUEN_SHIFT))&I2C_C1_WUEN_MASK) /*!< I2C0_C1.WUEN Field                      */
#define I2C_C1_RSTA_MASK                         (0x4U)                                              /*!< I2C0_C1.RSTA Mask                       */
#define I2C_C1_RSTA_SHIFT                        (2U)                                                /*!< I2C0_C1.RSTA Position                   */
#define I2C_C1_RSTA(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C1_RSTA_SHIFT))&I2C_C1_RSTA_MASK) /*!< I2C0_C1.RSTA Field                      */
#define I2C_C1_TXAK_MASK                         (0x8U)                                              /*!< I2C0_C1.TXAK Mask                       */
#define I2C_C1_TXAK_SHIFT                        (3U)                                                /*!< I2C0_C1.TXAK Position                   */
#define I2C_C1_TXAK(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C1_TXAK_SHIFT))&I2C_C1_TXAK_MASK) /*!< I2C0_C1.TXAK Field                      */
#define I2C_C1_TX_MASK                           (0x10U)                                             /*!< I2C0_C1.TX Mask                         */
#define I2C_C1_TX_SHIFT                          (4U)                                                /*!< I2C0_C1.TX Position                     */
#define I2C_C1_TX(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_C1_TX_SHIFT))&I2C_C1_TX_MASK) /*!< I2C0_C1.TX Field                        */
#define I2C_C1_MST_MASK                          (0x20U)                                             /*!< I2C0_C1.MST Mask                        */
#define I2C_C1_MST_SHIFT                         (5U)                                                /*!< I2C0_C1.MST Position                    */
#define I2C_C1_MST(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_C1_MST_SHIFT))&I2C_C1_MST_MASK) /*!< I2C0_C1.MST Field                       */
#define I2C_C1_IICIE_MASK                        (0x40U)                                             /*!< I2C0_C1.IICIE Mask                      */
#define I2C_C1_IICIE_SHIFT                       (6U)                                                /*!< I2C0_C1.IICIE Position                  */
#define I2C_C1_IICIE(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_C1_IICIE_SHIFT))&I2C_C1_IICIE_MASK) /*!< I2C0_C1.IICIE Field                     */
#define I2C_C1_IICEN_MASK                        (0x80U)                                             /*!< I2C0_C1.IICEN Mask                      */
#define I2C_C1_IICEN_SHIFT                       (7U)                                                /*!< I2C0_C1.IICEN Position                  */
#define I2C_C1_IICEN(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_C1_IICEN_SHIFT))&I2C_C1_IICEN_MASK) /*!< I2C0_C1.IICEN Field                     */

/*! @name S - Status Register */
#define I2C_S_RXAK_MASK                          (0x1U)                                              /*!< I2C0_S.RXAK Mask                        */
#define I2C_S_RXAK_SHIFT                         (0U)                                                /*!< I2C0_S.RXAK Position                    */
#define I2C_S_RXAK(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_S_RXAK_SHIFT))&I2C_S_RXAK_MASK) /*!< I2C0_S.RXAK Field                       */
#define I2C_S_IICIF_MASK                         (0x2U)                                              /*!< I2C0_S.IICIF Mask                       */
#define I2C_S_IICIF_SHIFT                        (1U)                                                /*!< I2C0_S.IICIF Position                   */
#define I2C_S_IICIF(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_S_IICIF_SHIFT))&I2C_S_IICIF_MASK) /*!< I2C0_S.IICIF Field                      */
#define I2C_S_SRW_MASK                           (0x4U)                                              /*!< I2C0_S.SRW Mask                         */
#define I2C_S_SRW_SHIFT                          (2U)                                                /*!< I2C0_S.SRW Position                     */
#define I2C_S_SRW(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_S_SRW_SHIFT))&I2C_S_SRW_MASK) /*!< I2C0_S.SRW Field                        */
#define I2C_S_RAM_MASK                           (0x8U)                                              /*!< I2C0_S.RAM Mask                         */
#define I2C_S_RAM_SHIFT                          (3U)                                                /*!< I2C0_S.RAM Position                     */
#define I2C_S_RAM(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_S_RAM_SHIFT))&I2C_S_RAM_MASK) /*!< I2C0_S.RAM Field                        */
#define I2C_S_ARBL_MASK                          (0x10U)                                             /*!< I2C0_S.ARBL Mask                        */
#define I2C_S_ARBL_SHIFT                         (4U)                                                /*!< I2C0_S.ARBL Position                    */
#define I2C_S_ARBL(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_S_ARBL_SHIFT))&I2C_S_ARBL_MASK) /*!< I2C0_S.ARBL Field                       */
#define I2C_S_BUSY_MASK                          (0x20U)                                             /*!< I2C0_S.BUSY Mask                        */
#define I2C_S_BUSY_SHIFT                         (5U)                                                /*!< I2C0_S.BUSY Position                    */
#define I2C_S_BUSY(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_S_BUSY_SHIFT))&I2C_S_BUSY_MASK) /*!< I2C0_S.BUSY Field                       */
#define I2C_S_IAAS_MASK                          (0x40U)                                             /*!< I2C0_S.IAAS Mask                        */
#define I2C_S_IAAS_SHIFT                         (6U)                                                /*!< I2C0_S.IAAS Position                    */
#define I2C_S_IAAS(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_S_IAAS_SHIFT))&I2C_S_IAAS_MASK) /*!< I2C0_S.IAAS Field                       */
#define I2C_S_TCF_MASK                           (0x80U)                                             /*!< I2C0_S.TCF Mask                         */
#define I2C_S_TCF_SHIFT                          (7U)                                                /*!< I2C0_S.TCF Position                     */
#define I2C_S_TCF(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_S_TCF_SHIFT))&I2C_S_TCF_MASK) /*!< I2C0_S.TCF Field                        */

/*! @name D - Data I/O register */
#define I2C_D_DATA_MASK                          (0xFFU)                                             /*!< I2C0_D.DATA Mask                        */
#define I2C_D_DATA_SHIFT                         (0U)                                                /*!< I2C0_D.DATA Position                    */
#define I2C_D_DATA(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_D_DATA_SHIFT))&I2C_D_DATA_MASK) /*!< I2C0_D.DATA Field                       */

/*! @name C2 - Control Register 2 */
#define I2C_C2_AD_MASK                           (0x7U)                                              /*!< I2C0_C2.AD Mask                         */
#define I2C_C2_AD_SHIFT                          (0U)                                                /*!< I2C0_C2.AD Position                     */
#define I2C_C2_AD(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_C2_AD_SHIFT))&I2C_C2_AD_MASK) /*!< I2C0_C2.AD Field                        */
#define I2C_C2_RMEN_MASK                         (0x8U)                                              /*!< I2C0_C2.RMEN Mask                       */
#define I2C_C2_RMEN_SHIFT                        (3U)                                                /*!< I2C0_C2.RMEN Position                   */
#define I2C_C2_RMEN(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C2_RMEN_SHIFT))&I2C_C2_RMEN_MASK) /*!< I2C0_C2.RMEN Field                      */
#define I2C_C2_SBRC_MASK                         (0x10U)                                             /*!< I2C0_C2.SBRC Mask                       */
#define I2C_C2_SBRC_SHIFT                        (4U)                                                /*!< I2C0_C2.SBRC Position                   */
#define I2C_C2_SBRC(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C2_SBRC_SHIFT))&I2C_C2_SBRC_MASK) /*!< I2C0_C2.SBRC Field                      */
#define I2C_C2_HDRS_MASK                         (0x20U)                                             /*!< I2C0_C2.HDRS Mask                       */
#define I2C_C2_HDRS_SHIFT                        (5U)                                                /*!< I2C0_C2.HDRS Position                   */
#define I2C_C2_HDRS(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C2_HDRS_SHIFT))&I2C_C2_HDRS_MASK) /*!< I2C0_C2.HDRS Field                      */
#define I2C_C2_ADEXT_MASK                        (0x40U)                                             /*!< I2C0_C2.ADEXT Mask                      */
#define I2C_C2_ADEXT_SHIFT                       (6U)                                                /*!< I2C0_C2.ADEXT Position                  */
#define I2C_C2_ADEXT(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_C2_ADEXT_SHIFT))&I2C_C2_ADEXT_MASK) /*!< I2C0_C2.ADEXT Field                     */
#define I2C_C2_GCAEN_MASK                        (0x80U)                                             /*!< I2C0_C2.GCAEN Mask                      */
#define I2C_C2_GCAEN_SHIFT                       (7U)                                                /*!< I2C0_C2.GCAEN Position                  */
#define I2C_C2_GCAEN(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_C2_GCAEN_SHIFT))&I2C_C2_GCAEN_MASK) /*!< I2C0_C2.GCAEN Field                     */

/*! @name FLT - Programmable Input Glitch Filter register */
#define I2C_FLT_FLT_MASK                         (0xFU)                                              /*!< I2C0_FLT.FLT Mask                       */
#define I2C_FLT_FLT_SHIFT                        (0U)                                                /*!< I2C0_FLT.FLT Position                   */
#define I2C_FLT_FLT(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_FLT_FLT_SHIFT))&I2C_FLT_FLT_MASK) /*!< I2C0_FLT.FLT Field                      */
#define I2C_FLT_STARTF_MASK                      (0x10U)                                             /*!< I2C0_FLT.STARTF Mask                    */
#define I2C_FLT_STARTF_SHIFT                     (4U)                                                /*!< I2C0_FLT.STARTF Position                */
#define I2C_FLT_STARTF(x)                        (((uint8_t)(((uint8_t)(x))<<I2C_FLT_STARTF_SHIFT))&I2C_FLT_STARTF_MASK) /*!< I2C0_FLT.STARTF Field                   */
#define I2C_FLT_SSIE_MASK                        (0x20U)                                             /*!< I2C0_FLT.SSIE Mask                      */
#define I2C_FLT_SSIE_SHIFT                       (5U)                                                /*!< I2C0_FLT.SSIE Position                  */
#define I2C_FLT_SSIE(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_FLT_SSIE_SHIFT))&I2C_FLT_SSIE_MASK) /*!< I2C0_FLT.SSIE Field                     */
#define I2C_FLT_STOPF_MASK                       (0x40U)                                             /*!< I2C0_FLT.STOPF Mask                     */
#define I2C_FLT_STOPF_SHIFT                      (6U)                                                /*!< I2C0_FLT.STOPF Position                 */
#define I2C_FLT_STOPF(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_FLT_STOPF_SHIFT))&I2C_FLT_STOPF_MASK) /*!< I2C0_FLT.STOPF Field                    */
#define I2C_FLT_SHEN_MASK                        (0x80U)                                             /*!< I2C0_FLT.SHEN Mask                      */
#define I2C_FLT_SHEN_SHIFT                       (7U)                                                /*!< I2C0_FLT.SHEN Position                  */
#define I2C_FLT_SHEN(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_FLT_SHEN_SHIFT))&I2C_FLT_SHEN_MASK) /*!< I2C0_FLT.SHEN Field                     */

/*! @name RA - Range Address register */
#define I2C_RA_RAD_MASK                          (0xFEU)                                             /*!< I2C0_RA.RAD Mask                        */
#define I2C_RA_RAD_SHIFT                         (1U)                                                /*!< I2C0_RA.RAD Position                    */
#define I2C_RA_RAD(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_RA_RAD_SHIFT))&I2C_RA_RAD_MASK) /*!< I2C0_RA.RAD Field                       */

/*! @name SMB - SMBus Control and Status register */
#define I2C_SMB_SHTF2IE_MASK                     (0x1U)                                              /*!< I2C0_SMB.SHTF2IE Mask                   */
#define I2C_SMB_SHTF2IE_SHIFT                    (0U)                                                /*!< I2C0_SMB.SHTF2IE Position               */
#define I2C_SMB_SHTF2IE(x)                       (((uint8_t)(((uint8_t)(x))<<I2C_SMB_SHTF2IE_SHIFT))&I2C_SMB_SHTF2IE_MASK) /*!< I2C0_SMB.SHTF2IE Field                  */
#define I2C_SMB_SHTF2_MASK                       (0x2U)                                              /*!< I2C0_SMB.SHTF2 Mask                     */
#define I2C_SMB_SHTF2_SHIFT                      (1U)                                                /*!< I2C0_SMB.SHTF2 Position                 */
#define I2C_SMB_SHTF2(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_SMB_SHTF2_SHIFT))&I2C_SMB_SHTF2_MASK) /*!< I2C0_SMB.SHTF2 Field                    */
#define I2C_SMB_SHTF1_MASK                       (0x4U)                                              /*!< I2C0_SMB.SHTF1 Mask                     */
#define I2C_SMB_SHTF1_SHIFT                      (2U)                                                /*!< I2C0_SMB.SHTF1 Position                 */
#define I2C_SMB_SHTF1(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_SMB_SHTF1_SHIFT))&I2C_SMB_SHTF1_MASK) /*!< I2C0_SMB.SHTF1 Field                    */
#define I2C_SMB_SLTF_MASK                        (0x8U)                                              /*!< I2C0_SMB.SLTF Mask                      */
#define I2C_SMB_SLTF_SHIFT                       (3U)                                                /*!< I2C0_SMB.SLTF Position                  */
#define I2C_SMB_SLTF(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_SMB_SLTF_SHIFT))&I2C_SMB_SLTF_MASK) /*!< I2C0_SMB.SLTF Field                     */
#define I2C_SMB_TCKSEL_MASK                      (0x10U)                                             /*!< I2C0_SMB.TCKSEL Mask                    */
#define I2C_SMB_TCKSEL_SHIFT                     (4U)                                                /*!< I2C0_SMB.TCKSEL Position                */
#define I2C_SMB_TCKSEL(x)                        (((uint8_t)(((uint8_t)(x))<<I2C_SMB_TCKSEL_SHIFT))&I2C_SMB_TCKSEL_MASK) /*!< I2C0_SMB.TCKSEL Field                   */
#define I2C_SMB_SIICAEN_MASK                     (0x20U)                                             /*!< I2C0_SMB.SIICAEN Mask                   */
#define I2C_SMB_SIICAEN_SHIFT                    (5U)                                                /*!< I2C0_SMB.SIICAEN Position               */
#define I2C_SMB_SIICAEN(x)                       (((uint8_t)(((uint8_t)(x))<<I2C_SMB_SIICAEN_SHIFT))&I2C_SMB_SIICAEN_MASK) /*!< I2C0_SMB.SIICAEN Field                  */
#define I2C_SMB_ALERTEN_MASK                     (0x40U)                                             /*!< I2C0_SMB.ALERTEN Mask                   */
#define I2C_SMB_ALERTEN_SHIFT                    (6U)                                                /*!< I2C0_SMB.ALERTEN Position               */
#define I2C_SMB_ALERTEN(x)                       (((uint8_t)(((uint8_t)(x))<<I2C_SMB_ALERTEN_SHIFT))&I2C_SMB_ALERTEN_MASK) /*!< I2C0_SMB.ALERTEN Field                  */
#define I2C_SMB_FACK_MASK                        (0x80U)                                             /*!< I2C0_SMB.FACK Mask                      */
#define I2C_SMB_FACK_SHIFT                       (7U)                                                /*!< I2C0_SMB.FACK Position                  */
#define I2C_SMB_FACK(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_SMB_FACK_SHIFT))&I2C_SMB_FACK_MASK) /*!< I2C0_SMB.FACK Field                     */

/*! @name A2 - Address Register 2 */
#define I2C_A2_SAD_MASK                          (0xFEU)                                             /*!< I2C0_A2.SAD Mask                        */
#define I2C_A2_SAD_SHIFT                         (1U)                                                /*!< I2C0_A2.SAD Position                    */
#define I2C_A2_SAD(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_A2_SAD_SHIFT))&I2C_A2_SAD_MASK) /*!< I2C0_A2.SAD Field                       */

/*! @name SLTH - SCL Low Timeout Register High */
#define I2C_SLTH_SSLT_MASK                       (0xFFU)                                             /*!< I2C0_SLTH.SSLT Mask                     */
#define I2C_SLTH_SSLT_SHIFT                      (0U)                                                /*!< I2C0_SLTH.SSLT Position                 */
#define I2C_SLTH_SSLT(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_SLTH_SSLT_SHIFT))&I2C_SLTH_SSLT_MASK) /*!< I2C0_SLTH.SSLT Field                    */

/*! @name SLTL - SCL Low Timeout Register Low */
#define I2C_SLTL_SSLT_MASK                       (0xFFU)                                             /*!< I2C0_SLTL.SSLT Mask                     */
#define I2C_SLTL_SSLT_SHIFT                      (0U)                                                /*!< I2C0_SLTL.SSLT Position                 */
#define I2C_SLTL_SSLT(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_SLTL_SSLT_SHIFT))&I2C_SLTL_SSLT_MASK) /*!< I2C0_SLTL.SSLT Field                    */
/**
 * @} */ /* End group I2C_Register_Masks_GROUP 
 */

/* I2C0 - Peripheral instance base addresses */
#define I2C0_BasePtr                   0x40066000UL //!< Peripheral base address
#define I2C0                           ((I2C_Type *) I2C0_BasePtr) //!< Freescale base pointer
#define I2C0_BASE_PTR                  (I2C0) //!< Freescale style base pointer
/**
 * @} */ /* End group I2C_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup LLWU_Peripheral_access_layer_GROUP LLWU Peripheral Access Layer
* @brief C Struct for LLWU
* @{
*/

/* ================================================================================ */
/* ================           LLWU (file:LLWU_ME_PE8_FILT2)        ================ */
/* ================================================================================ */

/**
 * @brief Low leakage wakeup unit
 */
/**
* @addtogroup LLWU_structs_GROUP LLWU struct
* @brief Struct for LLWU
* @{
*/
typedef struct LLWU_Type {
   union {                                      /**< 0000: (size=0008)                                                  */
      __IO uint8_t   PE[8];                     /**< 0000: Pin Enable  Register                                         */
      struct {                                  /**< 0000: (size=0008)                                                  */
         __IO uint8_t   PE1;                    /**< 0000: Pin Enable 1 Register                                        */
         __IO uint8_t   PE2;                    /**< 0001: Pin Enable 2 Register                                        */
         __IO uint8_t   PE3;                    /**< 0002: Pin Enable 3 Register                                        */
         __IO uint8_t   PE4;                    /**< 0003: Pin Enable 4 Register                                        */
         __IO uint8_t   PE5;                    /**< 0004: Pin Enable 5 Register                                        */
         __IO uint8_t   PE6;                    /**< 0005: Pin Enable 6 Register                                        */
         __IO uint8_t   PE7;                    /**< 0006: Pin Enable 7 Register                                        */
         __IO uint8_t   PE8;                    /**< 0007: Pin Enable 8 Register                                        */
      };
   };
   __IO uint8_t   ME;                           /**< 0008: Module Enable Register                                       */
   union {                                      /**< 0009: (size=0004)                                                  */
      __IO uint8_t   PF[4];                     /**< 0009: Pin Flag  Register                                           */
      struct {                                  /**< 0009: (size=0004)                                                  */
         __IO uint8_t   PF1;                    /**< 0009: Pin Flag 1 Register                                          */
         __IO uint8_t   PF2;                    /**< 000A: Pin Flag 2 Register                                          */
         __IO uint8_t   PF3;                    /**< 000B: Pin Flag 3 Register                                          */
         __IO uint8_t   PF4;                    /**< 000C: Pin Flag 4 register                                          */
      };
   };
   __I  uint8_t   MF;                           /**< 000D: Module Flag Register                                         */
   union {                                      /**< 000E: (size=0002)                                                  */
      __IO uint8_t   FILT[2];                   /**< 000E: Pin Filter register                                          */
      struct {                                  /**< 000E: (size=0002)                                                  */
         __IO uint8_t   FILT1;                  /**< 000E: Pin Filter register                                          */
         __IO uint8_t   FILT2;                  /**< 000F: Pin Filter register                                          */
      };
   };
} LLWU_Type;

/**
 * @} */ /* End group LLWU_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'LLWU' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup LLWU_Register_Masks_GROUP LLWU Register Masks
* @brief Register Masks for LLWU
* @{
*/

/*! @name PE - Pin Enable %s Register */
#define LLWU_PE_WUPE0_MASK                       (0x3U)                                              /*!< LLWU_PE.WUPE0 Mask                      */
#define LLWU_PE_WUPE0_SHIFT                      (0U)                                                /*!< LLWU_PE.WUPE0 Position                  */
#define LLWU_PE_WUPE0(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PE_WUPE0_SHIFT))&LLWU_PE_WUPE0_MASK) /*!< LLWU_PE.WUPE0 Field                     */
#define LLWU_PE_WUPE1_MASK                       (0xCU)                                              /*!< LLWU_PE.WUPE1 Mask                      */
#define LLWU_PE_WUPE1_SHIFT                      (2U)                                                /*!< LLWU_PE.WUPE1 Position                  */
#define LLWU_PE_WUPE1(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PE_WUPE1_SHIFT))&LLWU_PE_WUPE1_MASK) /*!< LLWU_PE.WUPE1 Field                     */
#define LLWU_PE_WUPE2_MASK                       (0x30U)                                             /*!< LLWU_PE.WUPE2 Mask                      */
#define LLWU_PE_WUPE2_SHIFT                      (4U)                                                /*!< LLWU_PE.WUPE2 Position                  */
#define LLWU_PE_WUPE2(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PE_WUPE2_SHIFT))&LLWU_PE_WUPE2_MASK) /*!< LLWU_PE.WUPE2 Field                     */
#define LLWU_PE_WUPE3_MASK                       (0xC0U)                                             /*!< LLWU_PE.WUPE3 Mask                      */
#define LLWU_PE_WUPE3_SHIFT                      (6U)                                                /*!< LLWU_PE.WUPE3 Position                  */
#define LLWU_PE_WUPE3(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PE_WUPE3_SHIFT))&LLWU_PE_WUPE3_MASK) /*!< LLWU_PE.WUPE3 Field                     */

/*! @name PE1 - Pin Enable 1 Register */
#define LLWU_PE1_WUPE0_MASK                      (0x3U)                                              /*!< LLWU_PE1.WUPE0 Mask                     */
#define LLWU_PE1_WUPE0_SHIFT                     (0U)                                                /*!< LLWU_PE1.WUPE0 Position                 */
#define LLWU_PE1_WUPE0(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE1_WUPE0_SHIFT))&LLWU_PE1_WUPE0_MASK) /*!< LLWU_PE1.WUPE0 Field                    */
#define LLWU_PE1_WUPE1_MASK                      (0xCU)                                              /*!< LLWU_PE1.WUPE1 Mask                     */
#define LLWU_PE1_WUPE1_SHIFT                     (2U)                                                /*!< LLWU_PE1.WUPE1 Position                 */
#define LLWU_PE1_WUPE1(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE1_WUPE1_SHIFT))&LLWU_PE1_WUPE1_MASK) /*!< LLWU_PE1.WUPE1 Field                    */
#define LLWU_PE1_WUPE2_MASK                      (0x30U)                                             /*!< LLWU_PE1.WUPE2 Mask                     */
#define LLWU_PE1_WUPE2_SHIFT                     (4U)                                                /*!< LLWU_PE1.WUPE2 Position                 */
#define LLWU_PE1_WUPE2(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE1_WUPE2_SHIFT))&LLWU_PE1_WUPE2_MASK) /*!< LLWU_PE1.WUPE2 Field                    */
#define LLWU_PE1_WUPE3_MASK                      (0xC0U)                                             /*!< LLWU_PE1.WUPE3 Mask                     */
#define LLWU_PE1_WUPE3_SHIFT                     (6U)                                                /*!< LLWU_PE1.WUPE3 Position                 */
#define LLWU_PE1_WUPE3(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE1_WUPE3_SHIFT))&LLWU_PE1_WUPE3_MASK) /*!< LLWU_PE1.WUPE3 Field                    */

/*! @name PE2 - Pin Enable 2 Register */
#define LLWU_PE2_WUPE4_MASK                      (0x3U)                                              /*!< LLWU_PE2.WUPE4 Mask                     */
#define LLWU_PE2_WUPE4_SHIFT                     (0U)                                                /*!< LLWU_PE2.WUPE4 Position                 */
#define LLWU_PE2_WUPE4(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE2_WUPE4_SHIFT))&LLWU_PE2_WUPE4_MASK) /*!< LLWU_PE2.WUPE4 Field                    */
#define LLWU_PE2_WUPE5_MASK                      (0xCU)                                              /*!< LLWU_PE2.WUPE5 Mask                     */
#define LLWU_PE2_WUPE5_SHIFT                     (2U)                                                /*!< LLWU_PE2.WUPE5 Position                 */
#define LLWU_PE2_WUPE5(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE2_WUPE5_SHIFT))&LLWU_PE2_WUPE5_MASK) /*!< LLWU_PE2.WUPE5 Field                    */
#define LLWU_PE2_WUPE6_MASK                      (0x30U)                                             /*!< LLWU_PE2.WUPE6 Mask                     */
#define LLWU_PE2_WUPE6_SHIFT                     (4U)                                                /*!< LLWU_PE2.WUPE6 Position                 */
#define LLWU_PE2_WUPE6(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE2_WUPE6_SHIFT))&LLWU_PE2_WUPE6_MASK) /*!< LLWU_PE2.WUPE6 Field                    */
#define LLWU_PE2_WUPE7_MASK                      (0xC0U)                                             /*!< LLWU_PE2.WUPE7 Mask                     */
#define LLWU_PE2_WUPE7_SHIFT                     (6U)                                                /*!< LLWU_PE2.WUPE7 Position                 */
#define LLWU_PE2_WUPE7(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE2_WUPE7_SHIFT))&LLWU_PE2_WUPE7_MASK) /*!< LLWU_PE2.WUPE7 Field                    */

/*! @name PE3 - Pin Enable 3 Register */
#define LLWU_PE3_WUPE8_MASK                      (0x3U)                                              /*!< LLWU_PE3.WUPE8 Mask                     */
#define LLWU_PE3_WUPE8_SHIFT                     (0U)                                                /*!< LLWU_PE3.WUPE8 Position                 */
#define LLWU_PE3_WUPE8(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE3_WUPE8_SHIFT))&LLWU_PE3_WUPE8_MASK) /*!< LLWU_PE3.WUPE8 Field                    */
#define LLWU_PE3_WUPE9_MASK                      (0xCU)                                              /*!< LLWU_PE3.WUPE9 Mask                     */
#define LLWU_PE3_WUPE9_SHIFT                     (2U)                                                /*!< LLWU_PE3.WUPE9 Position                 */
#define LLWU_PE3_WUPE9(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE3_WUPE9_SHIFT))&LLWU_PE3_WUPE9_MASK) /*!< LLWU_PE3.WUPE9 Field                    */
#define LLWU_PE3_WUPE10_MASK                     (0x30U)                                             /*!< LLWU_PE3.WUPE10 Mask                    */
#define LLWU_PE3_WUPE10_SHIFT                    (4U)                                                /*!< LLWU_PE3.WUPE10 Position                */
#define LLWU_PE3_WUPE10(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE3_WUPE10_SHIFT))&LLWU_PE3_WUPE10_MASK) /*!< LLWU_PE3.WUPE10 Field                   */
#define LLWU_PE3_WUPE11_MASK                     (0xC0U)                                             /*!< LLWU_PE3.WUPE11 Mask                    */
#define LLWU_PE3_WUPE11_SHIFT                    (6U)                                                /*!< LLWU_PE3.WUPE11 Position                */
#define LLWU_PE3_WUPE11(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE3_WUPE11_SHIFT))&LLWU_PE3_WUPE11_MASK) /*!< LLWU_PE3.WUPE11 Field                   */

/*! @name PE4 - Pin Enable 4 Register */
#define LLWU_PE4_WUPE12_MASK                     (0x3U)                                              /*!< LLWU_PE4.WUPE12 Mask                    */
#define LLWU_PE4_WUPE12_SHIFT                    (0U)                                                /*!< LLWU_PE4.WUPE12 Position                */
#define LLWU_PE4_WUPE12(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE4_WUPE12_SHIFT))&LLWU_PE4_WUPE12_MASK) /*!< LLWU_PE4.WUPE12 Field                   */
#define LLWU_PE4_WUPE13_MASK                     (0xCU)                                              /*!< LLWU_PE4.WUPE13 Mask                    */
#define LLWU_PE4_WUPE13_SHIFT                    (2U)                                                /*!< LLWU_PE4.WUPE13 Position                */
#define LLWU_PE4_WUPE13(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE4_WUPE13_SHIFT))&LLWU_PE4_WUPE13_MASK) /*!< LLWU_PE4.WUPE13 Field                   */
#define LLWU_PE4_WUPE14_MASK                     (0x30U)                                             /*!< LLWU_PE4.WUPE14 Mask                    */
#define LLWU_PE4_WUPE14_SHIFT                    (4U)                                                /*!< LLWU_PE4.WUPE14 Position                */
#define LLWU_PE4_WUPE14(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE4_WUPE14_SHIFT))&LLWU_PE4_WUPE14_MASK) /*!< LLWU_PE4.WUPE14 Field                   */
#define LLWU_PE4_WUPE15_MASK                     (0xC0U)                                             /*!< LLWU_PE4.WUPE15 Mask                    */
#define LLWU_PE4_WUPE15_SHIFT                    (6U)                                                /*!< LLWU_PE4.WUPE15 Position                */
#define LLWU_PE4_WUPE15(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE4_WUPE15_SHIFT))&LLWU_PE4_WUPE15_MASK) /*!< LLWU_PE4.WUPE15 Field                   */

/*! @name PE5 - Pin Enable 5 Register */
#define LLWU_PE5_WUPE16_MASK                     (0x3U)                                              /*!< LLWU_PE5.WUPE16 Mask                    */
#define LLWU_PE5_WUPE16_SHIFT                    (0U)                                                /*!< LLWU_PE5.WUPE16 Position                */
#define LLWU_PE5_WUPE16(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE5_WUPE16_SHIFT))&LLWU_PE5_WUPE16_MASK) /*!< LLWU_PE5.WUPE16 Field                   */
#define LLWU_PE5_WUPE17_MASK                     (0xCU)                                              /*!< LLWU_PE5.WUPE17 Mask                    */
#define LLWU_PE5_WUPE17_SHIFT                    (2U)                                                /*!< LLWU_PE5.WUPE17 Position                */
#define LLWU_PE5_WUPE17(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE5_WUPE17_SHIFT))&LLWU_PE5_WUPE17_MASK) /*!< LLWU_PE5.WUPE17 Field                   */
#define LLWU_PE5_WUPE18_MASK                     (0x30U)                                             /*!< LLWU_PE5.WUPE18 Mask                    */
#define LLWU_PE5_WUPE18_SHIFT                    (4U)                                                /*!< LLWU_PE5.WUPE18 Position                */
#define LLWU_PE5_WUPE18(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE5_WUPE18_SHIFT))&LLWU_PE5_WUPE18_MASK) /*!< LLWU_PE5.WUPE18 Field                   */
#define LLWU_PE5_WUPE19_MASK                     (0xC0U)                                             /*!< LLWU_PE5.WUPE19 Mask                    */
#define LLWU_PE5_WUPE19_SHIFT                    (6U)                                                /*!< LLWU_PE5.WUPE19 Position                */
#define LLWU_PE5_WUPE19(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE5_WUPE19_SHIFT))&LLWU_PE5_WUPE19_MASK) /*!< LLWU_PE5.WUPE19 Field                   */

/*! @name PE6 - Pin Enable 6 Register */
#define LLWU_PE6_WUPE20_MASK                     (0x3U)                                              /*!< LLWU_PE6.WUPE20 Mask                    */
#define LLWU_PE6_WUPE20_SHIFT                    (0U)                                                /*!< LLWU_PE6.WUPE20 Position                */
#define LLWU_PE6_WUPE20(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE6_WUPE20_SHIFT))&LLWU_PE6_WUPE20_MASK) /*!< LLWU_PE6.WUPE20 Field                   */
#define LLWU_PE6_WUPE21_MASK                     (0xCU)                                              /*!< LLWU_PE6.WUPE21 Mask                    */
#define LLWU_PE6_WUPE21_SHIFT                    (2U)                                                /*!< LLWU_PE6.WUPE21 Position                */
#define LLWU_PE6_WUPE21(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE6_WUPE21_SHIFT))&LLWU_PE6_WUPE21_MASK) /*!< LLWU_PE6.WUPE21 Field                   */
#define LLWU_PE6_WUPE22_MASK                     (0x30U)                                             /*!< LLWU_PE6.WUPE22 Mask                    */
#define LLWU_PE6_WUPE22_SHIFT                    (4U)                                                /*!< LLWU_PE6.WUPE22 Position                */
#define LLWU_PE6_WUPE22(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE6_WUPE22_SHIFT))&LLWU_PE6_WUPE22_MASK) /*!< LLWU_PE6.WUPE22 Field                   */
#define LLWU_PE6_WUPE23_MASK                     (0xC0U)                                             /*!< LLWU_PE6.WUPE23 Mask                    */
#define LLWU_PE6_WUPE23_SHIFT                    (6U)                                                /*!< LLWU_PE6.WUPE23 Position                */
#define LLWU_PE6_WUPE23(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE6_WUPE23_SHIFT))&LLWU_PE6_WUPE23_MASK) /*!< LLWU_PE6.WUPE23 Field                   */

/*! @name PE7 - Pin Enable 7 Register */
#define LLWU_PE7_WUPE24_MASK                     (0x3U)                                              /*!< LLWU_PE7.WUPE24 Mask                    */
#define LLWU_PE7_WUPE24_SHIFT                    (0U)                                                /*!< LLWU_PE7.WUPE24 Position                */
#define LLWU_PE7_WUPE24(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE7_WUPE24_SHIFT))&LLWU_PE7_WUPE24_MASK) /*!< LLWU_PE7.WUPE24 Field                   */
#define LLWU_PE7_WUPE25_MASK                     (0xCU)                                              /*!< LLWU_PE7.WUPE25 Mask                    */
#define LLWU_PE7_WUPE25_SHIFT                    (2U)                                                /*!< LLWU_PE7.WUPE25 Position                */
#define LLWU_PE7_WUPE25(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE7_WUPE25_SHIFT))&LLWU_PE7_WUPE25_MASK) /*!< LLWU_PE7.WUPE25 Field                   */
#define LLWU_PE7_WUPE26_MASK                     (0x30U)                                             /*!< LLWU_PE7.WUPE26 Mask                    */
#define LLWU_PE7_WUPE26_SHIFT                    (4U)                                                /*!< LLWU_PE7.WUPE26 Position                */
#define LLWU_PE7_WUPE26(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE7_WUPE26_SHIFT))&LLWU_PE7_WUPE26_MASK) /*!< LLWU_PE7.WUPE26 Field                   */
#define LLWU_PE7_WUPE27_MASK                     (0xC0U)                                             /*!< LLWU_PE7.WUPE27 Mask                    */
#define LLWU_PE7_WUPE27_SHIFT                    (6U)                                                /*!< LLWU_PE7.WUPE27 Position                */
#define LLWU_PE7_WUPE27(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE7_WUPE27_SHIFT))&LLWU_PE7_WUPE27_MASK) /*!< LLWU_PE7.WUPE27 Field                   */

/*! @name PE8 - Pin Enable 8 Register */
#define LLWU_PE8_WUPE28_MASK                     (0x3U)                                              /*!< LLWU_PE8.WUPE28 Mask                    */
#define LLWU_PE8_WUPE28_SHIFT                    (0U)                                                /*!< LLWU_PE8.WUPE28 Position                */
#define LLWU_PE8_WUPE28(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE8_WUPE28_SHIFT))&LLWU_PE8_WUPE28_MASK) /*!< LLWU_PE8.WUPE28 Field                   */
#define LLWU_PE8_WUPE29_MASK                     (0xCU)                                              /*!< LLWU_PE8.WUPE29 Mask                    */
#define LLWU_PE8_WUPE29_SHIFT                    (2U)                                                /*!< LLWU_PE8.WUPE29 Position                */
#define LLWU_PE8_WUPE29(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE8_WUPE29_SHIFT))&LLWU_PE8_WUPE29_MASK) /*!< LLWU_PE8.WUPE29 Field                   */
#define LLWU_PE8_WUPE30_MASK                     (0x30U)                                             /*!< LLWU_PE8.WUPE30 Mask                    */
#define LLWU_PE8_WUPE30_SHIFT                    (4U)                                                /*!< LLWU_PE8.WUPE30 Position                */
#define LLWU_PE8_WUPE30(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE8_WUPE30_SHIFT))&LLWU_PE8_WUPE30_MASK) /*!< LLWU_PE8.WUPE30 Field                   */
#define LLWU_PE8_WUPE31_MASK                     (0xC0U)                                             /*!< LLWU_PE8.WUPE31 Mask                    */
#define LLWU_PE8_WUPE31_SHIFT                    (6U)                                                /*!< LLWU_PE8.WUPE31 Position                */
#define LLWU_PE8_WUPE31(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE8_WUPE31_SHIFT))&LLWU_PE8_WUPE31_MASK) /*!< LLWU_PE8.WUPE31 Field                   */

/*! @name ME - Module Enable Register */
#define LLWU_ME_WUME0_MASK                       (0x1U)                                              /*!< LLWU_ME.WUME0 Mask                      */
#define LLWU_ME_WUME0_SHIFT                      (0U)                                                /*!< LLWU_ME.WUME0 Position                  */
#define LLWU_ME_WUME0(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME0_SHIFT))&LLWU_ME_WUME0_MASK) /*!< LLWU_ME.WUME0 Field                     */
#define LLWU_ME_WUME1_MASK                       (0x2U)                                              /*!< LLWU_ME.WUME1 Mask                      */
#define LLWU_ME_WUME1_SHIFT                      (1U)                                                /*!< LLWU_ME.WUME1 Position                  */
#define LLWU_ME_WUME1(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME1_SHIFT))&LLWU_ME_WUME1_MASK) /*!< LLWU_ME.WUME1 Field                     */
#define LLWU_ME_WUME2_MASK                       (0x4U)                                              /*!< LLWU_ME.WUME2 Mask                      */
#define LLWU_ME_WUME2_SHIFT                      (2U)                                                /*!< LLWU_ME.WUME2 Position                  */
#define LLWU_ME_WUME2(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME2_SHIFT))&LLWU_ME_WUME2_MASK) /*!< LLWU_ME.WUME2 Field                     */
#define LLWU_ME_WUME3_MASK                       (0x8U)                                              /*!< LLWU_ME.WUME3 Mask                      */
#define LLWU_ME_WUME3_SHIFT                      (3U)                                                /*!< LLWU_ME.WUME3 Position                  */
#define LLWU_ME_WUME3(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME3_SHIFT))&LLWU_ME_WUME3_MASK) /*!< LLWU_ME.WUME3 Field                     */
#define LLWU_ME_WUME4_MASK                       (0x10U)                                             /*!< LLWU_ME.WUME4 Mask                      */
#define LLWU_ME_WUME4_SHIFT                      (4U)                                                /*!< LLWU_ME.WUME4 Position                  */
#define LLWU_ME_WUME4(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME4_SHIFT))&LLWU_ME_WUME4_MASK) /*!< LLWU_ME.WUME4 Field                     */
#define LLWU_ME_WUME5_MASK                       (0x20U)                                             /*!< LLWU_ME.WUME5 Mask                      */
#define LLWU_ME_WUME5_SHIFT                      (5U)                                                /*!< LLWU_ME.WUME5 Position                  */
#define LLWU_ME_WUME5(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME5_SHIFT))&LLWU_ME_WUME5_MASK) /*!< LLWU_ME.WUME5 Field                     */
#define LLWU_ME_WUME6_MASK                       (0x40U)                                             /*!< LLWU_ME.WUME6 Mask                      */
#define LLWU_ME_WUME6_SHIFT                      (6U)                                                /*!< LLWU_ME.WUME6 Position                  */
#define LLWU_ME_WUME6(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME6_SHIFT))&LLWU_ME_WUME6_MASK) /*!< LLWU_ME.WUME6 Field                     */
#define LLWU_ME_WUME7_MASK                       (0x80U)                                             /*!< LLWU_ME.WUME7 Mask                      */
#define LLWU_ME_WUME7_SHIFT                      (7U)                                                /*!< LLWU_ME.WUME7 Position                  */
#define LLWU_ME_WUME7(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME7_SHIFT))&LLWU_ME_WUME7_MASK) /*!< LLWU_ME.WUME7 Field                     */

/*! @name PF - Pin Flag %s Register */
#define LLWU_PF_WUF0_MASK                        (0x1U)                                              /*!< LLWU_PF.WUF0 Mask                       */
#define LLWU_PF_WUF0_SHIFT                       (0U)                                                /*!< LLWU_PF.WUF0 Position                   */
#define LLWU_PF_WUF0(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF0_SHIFT))&LLWU_PF_WUF0_MASK) /*!< LLWU_PF.WUF0 Field                      */
#define LLWU_PF_WUF1_MASK                        (0x2U)                                              /*!< LLWU_PF.WUF1 Mask                       */
#define LLWU_PF_WUF1_SHIFT                       (1U)                                                /*!< LLWU_PF.WUF1 Position                   */
#define LLWU_PF_WUF1(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF1_SHIFT))&LLWU_PF_WUF1_MASK) /*!< LLWU_PF.WUF1 Field                      */
#define LLWU_PF_WUF2_MASK                        (0x4U)                                              /*!< LLWU_PF.WUF2 Mask                       */
#define LLWU_PF_WUF2_SHIFT                       (2U)                                                /*!< LLWU_PF.WUF2 Position                   */
#define LLWU_PF_WUF2(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF2_SHIFT))&LLWU_PF_WUF2_MASK) /*!< LLWU_PF.WUF2 Field                      */
#define LLWU_PF_WUF3_MASK                        (0x8U)                                              /*!< LLWU_PF.WUF3 Mask                       */
#define LLWU_PF_WUF3_SHIFT                       (3U)                                                /*!< LLWU_PF.WUF3 Position                   */
#define LLWU_PF_WUF3(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF3_SHIFT))&LLWU_PF_WUF3_MASK) /*!< LLWU_PF.WUF3 Field                      */
#define LLWU_PF_WUF4_MASK                        (0x10U)                                             /*!< LLWU_PF.WUF4 Mask                       */
#define LLWU_PF_WUF4_SHIFT                       (4U)                                                /*!< LLWU_PF.WUF4 Position                   */
#define LLWU_PF_WUF4(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF4_SHIFT))&LLWU_PF_WUF4_MASK) /*!< LLWU_PF.WUF4 Field                      */
#define LLWU_PF_WUF5_MASK                        (0x20U)                                             /*!< LLWU_PF.WUF5 Mask                       */
#define LLWU_PF_WUF5_SHIFT                       (5U)                                                /*!< LLWU_PF.WUF5 Position                   */
#define LLWU_PF_WUF5(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF5_SHIFT))&LLWU_PF_WUF5_MASK) /*!< LLWU_PF.WUF5 Field                      */
#define LLWU_PF_WUF6_MASK                        (0x40U)                                             /*!< LLWU_PF.WUF6 Mask                       */
#define LLWU_PF_WUF6_SHIFT                       (6U)                                                /*!< LLWU_PF.WUF6 Position                   */
#define LLWU_PF_WUF6(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF6_SHIFT))&LLWU_PF_WUF6_MASK) /*!< LLWU_PF.WUF6 Field                      */
#define LLWU_PF_WUF7_MASK                        (0x80U)                                             /*!< LLWU_PF.WUF7 Mask                       */
#define LLWU_PF_WUF7_SHIFT                       (7U)                                                /*!< LLWU_PF.WUF7 Position                   */
#define LLWU_PF_WUF7(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF7_SHIFT))&LLWU_PF_WUF7_MASK) /*!< LLWU_PF.WUF7 Field                      */

/*! @name PF1 - Pin Flag 1 Register */
#define LLWU_PF1_WUF0_MASK                       (0x1U)                                              /*!< LLWU_PF1.WUF0 Mask                      */
#define LLWU_PF1_WUF0_SHIFT                      (0U)                                                /*!< LLWU_PF1.WUF0 Position                  */
#define LLWU_PF1_WUF0(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF0_SHIFT))&LLWU_PF1_WUF0_MASK) /*!< LLWU_PF1.WUF0 Field                     */
#define LLWU_PF1_WUF1_MASK                       (0x2U)                                              /*!< LLWU_PF1.WUF1 Mask                      */
#define LLWU_PF1_WUF1_SHIFT                      (1U)                                                /*!< LLWU_PF1.WUF1 Position                  */
#define LLWU_PF1_WUF1(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF1_SHIFT))&LLWU_PF1_WUF1_MASK) /*!< LLWU_PF1.WUF1 Field                     */
#define LLWU_PF1_WUF2_MASK                       (0x4U)                                              /*!< LLWU_PF1.WUF2 Mask                      */
#define LLWU_PF1_WUF2_SHIFT                      (2U)                                                /*!< LLWU_PF1.WUF2 Position                  */
#define LLWU_PF1_WUF2(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF2_SHIFT))&LLWU_PF1_WUF2_MASK) /*!< LLWU_PF1.WUF2 Field                     */
#define LLWU_PF1_WUF3_MASK                       (0x8U)                                              /*!< LLWU_PF1.WUF3 Mask                      */
#define LLWU_PF1_WUF3_SHIFT                      (3U)                                                /*!< LLWU_PF1.WUF3 Position                  */
#define LLWU_PF1_WUF3(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF3_SHIFT))&LLWU_PF1_WUF3_MASK) /*!< LLWU_PF1.WUF3 Field                     */
#define LLWU_PF1_WUF4_MASK                       (0x10U)                                             /*!< LLWU_PF1.WUF4 Mask                      */
#define LLWU_PF1_WUF4_SHIFT                      (4U)                                                /*!< LLWU_PF1.WUF4 Position                  */
#define LLWU_PF1_WUF4(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF4_SHIFT))&LLWU_PF1_WUF4_MASK) /*!< LLWU_PF1.WUF4 Field                     */
#define LLWU_PF1_WUF5_MASK                       (0x20U)                                             /*!< LLWU_PF1.WUF5 Mask                      */
#define LLWU_PF1_WUF5_SHIFT                      (5U)                                                /*!< LLWU_PF1.WUF5 Position                  */
#define LLWU_PF1_WUF5(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF5_SHIFT))&LLWU_PF1_WUF5_MASK) /*!< LLWU_PF1.WUF5 Field                     */
#define LLWU_PF1_WUF6_MASK                       (0x40U)                                             /*!< LLWU_PF1.WUF6 Mask                      */
#define LLWU_PF1_WUF6_SHIFT                      (6U)                                                /*!< LLWU_PF1.WUF6 Position                  */
#define LLWU_PF1_WUF6(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF6_SHIFT))&LLWU_PF1_WUF6_MASK) /*!< LLWU_PF1.WUF6 Field                     */
#define LLWU_PF1_WUF7_MASK                       (0x80U)                                             /*!< LLWU_PF1.WUF7 Mask                      */
#define LLWU_PF1_WUF7_SHIFT                      (7U)                                                /*!< LLWU_PF1.WUF7 Position                  */
#define LLWU_PF1_WUF7(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF7_SHIFT))&LLWU_PF1_WUF7_MASK) /*!< LLWU_PF1.WUF7 Field                     */

/*! @name PF2 - Pin Flag 2 Register */
#define LLWU_PF2_WUF8_MASK                       (0x1U)                                              /*!< LLWU_PF2.WUF8 Mask                      */
#define LLWU_PF2_WUF8_SHIFT                      (0U)                                                /*!< LLWU_PF2.WUF8 Position                  */
#define LLWU_PF2_WUF8(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF8_SHIFT))&LLWU_PF2_WUF8_MASK) /*!< LLWU_PF2.WUF8 Field                     */
#define LLWU_PF2_WUF9_MASK                       (0x2U)                                              /*!< LLWU_PF2.WUF9 Mask                      */
#define LLWU_PF2_WUF9_SHIFT                      (1U)                                                /*!< LLWU_PF2.WUF9 Position                  */
#define LLWU_PF2_WUF9(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF9_SHIFT))&LLWU_PF2_WUF9_MASK) /*!< LLWU_PF2.WUF9 Field                     */
#define LLWU_PF2_WUF10_MASK                      (0x4U)                                              /*!< LLWU_PF2.WUF10 Mask                     */
#define LLWU_PF2_WUF10_SHIFT                     (2U)                                                /*!< LLWU_PF2.WUF10 Position                 */
#define LLWU_PF2_WUF10(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF10_SHIFT))&LLWU_PF2_WUF10_MASK) /*!< LLWU_PF2.WUF10 Field                    */
#define LLWU_PF2_WUF11_MASK                      (0x8U)                                              /*!< LLWU_PF2.WUF11 Mask                     */
#define LLWU_PF2_WUF11_SHIFT                     (3U)                                                /*!< LLWU_PF2.WUF11 Position                 */
#define LLWU_PF2_WUF11(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF11_SHIFT))&LLWU_PF2_WUF11_MASK) /*!< LLWU_PF2.WUF11 Field                    */
#define LLWU_PF2_WUF12_MASK                      (0x10U)                                             /*!< LLWU_PF2.WUF12 Mask                     */
#define LLWU_PF2_WUF12_SHIFT                     (4U)                                                /*!< LLWU_PF2.WUF12 Position                 */
#define LLWU_PF2_WUF12(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF12_SHIFT))&LLWU_PF2_WUF12_MASK) /*!< LLWU_PF2.WUF12 Field                    */
#define LLWU_PF2_WUF13_MASK                      (0x20U)                                             /*!< LLWU_PF2.WUF13 Mask                     */
#define LLWU_PF2_WUF13_SHIFT                     (5U)                                                /*!< LLWU_PF2.WUF13 Position                 */
#define LLWU_PF2_WUF13(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF13_SHIFT))&LLWU_PF2_WUF13_MASK) /*!< LLWU_PF2.WUF13 Field                    */
#define LLWU_PF2_WUF14_MASK                      (0x40U)                                             /*!< LLWU_PF2.WUF14 Mask                     */
#define LLWU_PF2_WUF14_SHIFT                     (6U)                                                /*!< LLWU_PF2.WUF14 Position                 */
#define LLWU_PF2_WUF14(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF14_SHIFT))&LLWU_PF2_WUF14_MASK) /*!< LLWU_PF2.WUF14 Field                    */
#define LLWU_PF2_WUF15_MASK                      (0x80U)                                             /*!< LLWU_PF2.WUF15 Mask                     */
#define LLWU_PF2_WUF15_SHIFT                     (7U)                                                /*!< LLWU_PF2.WUF15 Position                 */
#define LLWU_PF2_WUF15(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF15_SHIFT))&LLWU_PF2_WUF15_MASK) /*!< LLWU_PF2.WUF15 Field                    */

/*! @name PF3 - Pin Flag 3 Register */
#define LLWU_PF3_WUF16_MASK                      (0x1U)                                              /*!< LLWU_PF3.WUF16 Mask                     */
#define LLWU_PF3_WUF16_SHIFT                     (0U)                                                /*!< LLWU_PF3.WUF16 Position                 */
#define LLWU_PF3_WUF16(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF3_WUF16_SHIFT))&LLWU_PF3_WUF16_MASK) /*!< LLWU_PF3.WUF16 Field                    */
#define LLWU_PF3_WUF17_MASK                      (0x2U)                                              /*!< LLWU_PF3.WUF17 Mask                     */
#define LLWU_PF3_WUF17_SHIFT                     (1U)                                                /*!< LLWU_PF3.WUF17 Position                 */
#define LLWU_PF3_WUF17(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF3_WUF17_SHIFT))&LLWU_PF3_WUF17_MASK) /*!< LLWU_PF3.WUF17 Field                    */
#define LLWU_PF3_WUF18_MASK                      (0x4U)                                              /*!< LLWU_PF3.WUF18 Mask                     */
#define LLWU_PF3_WUF18_SHIFT                     (2U)                                                /*!< LLWU_PF3.WUF18 Position                 */
#define LLWU_PF3_WUF18(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF3_WUF18_SHIFT))&LLWU_PF3_WUF18_MASK) /*!< LLWU_PF3.WUF18 Field                    */
#define LLWU_PF3_WUF19_MASK                      (0x8U)                                              /*!< LLWU_PF3.WUF19 Mask                     */
#define LLWU_PF3_WUF19_SHIFT                     (3U)                                                /*!< LLWU_PF3.WUF19 Position                 */
#define LLWU_PF3_WUF19(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF3_WUF19_SHIFT))&LLWU_PF3_WUF19_MASK) /*!< LLWU_PF3.WUF19 Field                    */
#define LLWU_PF3_WUF20_MASK                      (0x10U)                                             /*!< LLWU_PF3.WUF20 Mask                     */
#define LLWU_PF3_WUF20_SHIFT                     (4U)                                                /*!< LLWU_PF3.WUF20 Position                 */
#define LLWU_PF3_WUF20(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF3_WUF20_SHIFT))&LLWU_PF3_WUF20_MASK) /*!< LLWU_PF3.WUF20 Field                    */
#define LLWU_PF3_WUF21_MASK                      (0x20U)                                             /*!< LLWU_PF3.WUF21 Mask                     */
#define LLWU_PF3_WUF21_SHIFT                     (5U)                                                /*!< LLWU_PF3.WUF21 Position                 */
#define LLWU_PF3_WUF21(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF3_WUF21_SHIFT))&LLWU_PF3_WUF21_MASK) /*!< LLWU_PF3.WUF21 Field                    */
#define LLWU_PF3_WUF22_MASK                      (0x40U)                                             /*!< LLWU_PF3.WUF22 Mask                     */
#define LLWU_PF3_WUF22_SHIFT                     (6U)                                                /*!< LLWU_PF3.WUF22 Position                 */
#define LLWU_PF3_WUF22(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF3_WUF22_SHIFT))&LLWU_PF3_WUF22_MASK) /*!< LLWU_PF3.WUF22 Field                    */
#define LLWU_PF3_WUF23_MASK                      (0x80U)                                             /*!< LLWU_PF3.WUF23 Mask                     */
#define LLWU_PF3_WUF23_SHIFT                     (7U)                                                /*!< LLWU_PF3.WUF23 Position                 */
#define LLWU_PF3_WUF23(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF3_WUF23_SHIFT))&LLWU_PF3_WUF23_MASK) /*!< LLWU_PF3.WUF23 Field                    */

/*! @name PF4 - Pin Flag 4 register */
#define LLWU_PF4_WUF24_MASK                      (0x1U)                                              /*!< LLWU_PF4.WUF24 Mask                     */
#define LLWU_PF4_WUF24_SHIFT                     (0U)                                                /*!< LLWU_PF4.WUF24 Position                 */
#define LLWU_PF4_WUF24(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF4_WUF24_SHIFT))&LLWU_PF4_WUF24_MASK) /*!< LLWU_PF4.WUF24 Field                    */
#define LLWU_PF4_WUF25_MASK                      (0x2U)                                              /*!< LLWU_PF4.WUF25 Mask                     */
#define LLWU_PF4_WUF25_SHIFT                     (1U)                                                /*!< LLWU_PF4.WUF25 Position                 */
#define LLWU_PF4_WUF25(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF4_WUF25_SHIFT))&LLWU_PF4_WUF25_MASK) /*!< LLWU_PF4.WUF25 Field                    */
#define LLWU_PF4_WUF26_MASK                      (0x4U)                                              /*!< LLWU_PF4.WUF26 Mask                     */
#define LLWU_PF4_WUF26_SHIFT                     (2U)                                                /*!< LLWU_PF4.WUF26 Position                 */
#define LLWU_PF4_WUF26(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF4_WUF26_SHIFT))&LLWU_PF4_WUF26_MASK) /*!< LLWU_PF4.WUF26 Field                    */
#define LLWU_PF4_WUF27_MASK                      (0x8U)                                              /*!< LLWU_PF4.WUF27 Mask                     */
#define LLWU_PF4_WUF27_SHIFT                     (3U)                                                /*!< LLWU_PF4.WUF27 Position                 */
#define LLWU_PF4_WUF27(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF4_WUF27_SHIFT))&LLWU_PF4_WUF27_MASK) /*!< LLWU_PF4.WUF27 Field                    */
#define LLWU_PF4_WUF28_MASK                      (0x10U)                                             /*!< LLWU_PF4.WUF28 Mask                     */
#define LLWU_PF4_WUF28_SHIFT                     (4U)                                                /*!< LLWU_PF4.WUF28 Position                 */
#define LLWU_PF4_WUF28(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF4_WUF28_SHIFT))&LLWU_PF4_WUF28_MASK) /*!< LLWU_PF4.WUF28 Field                    */
#define LLWU_PF4_WUF29_MASK                      (0x20U)                                             /*!< LLWU_PF4.WUF29 Mask                     */
#define LLWU_PF4_WUF29_SHIFT                     (5U)                                                /*!< LLWU_PF4.WUF29 Position                 */
#define LLWU_PF4_WUF29(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF4_WUF29_SHIFT))&LLWU_PF4_WUF29_MASK) /*!< LLWU_PF4.WUF29 Field                    */
#define LLWU_PF4_WUF30_MASK                      (0x40U)                                             /*!< LLWU_PF4.WUF30 Mask                     */
#define LLWU_PF4_WUF30_SHIFT                     (6U)                                                /*!< LLWU_PF4.WUF30 Position                 */
#define LLWU_PF4_WUF30(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF4_WUF30_SHIFT))&LLWU_PF4_WUF30_MASK) /*!< LLWU_PF4.WUF30 Field                    */
#define LLWU_PF4_WUF31_MASK                      (0x80U)                                             /*!< LLWU_PF4.WUF31 Mask                     */
#define LLWU_PF4_WUF31_SHIFT                     (7U)                                                /*!< LLWU_PF4.WUF31 Position                 */
#define LLWU_PF4_WUF31(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF4_WUF31_SHIFT))&LLWU_PF4_WUF31_MASK) /*!< LLWU_PF4.WUF31 Field                    */

/*! @name MF - Module Flag Register */
#define LLWU_MF_MWUF0_MASK                       (0x1U)                                              /*!< LLWU_MF.MWUF0 Mask                      */
#define LLWU_MF_MWUF0_SHIFT                      (0U)                                                /*!< LLWU_MF.MWUF0 Position                  */
#define LLWU_MF_MWUF0(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF0_SHIFT))&LLWU_MF_MWUF0_MASK) /*!< LLWU_MF.MWUF0 Field                     */
#define LLWU_MF_MWUF1_MASK                       (0x2U)                                              /*!< LLWU_MF.MWUF1 Mask                      */
#define LLWU_MF_MWUF1_SHIFT                      (1U)                                                /*!< LLWU_MF.MWUF1 Position                  */
#define LLWU_MF_MWUF1(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF1_SHIFT))&LLWU_MF_MWUF1_MASK) /*!< LLWU_MF.MWUF1 Field                     */
#define LLWU_MF_MWUF2_MASK                       (0x4U)                                              /*!< LLWU_MF.MWUF2 Mask                      */
#define LLWU_MF_MWUF2_SHIFT                      (2U)                                                /*!< LLWU_MF.MWUF2 Position                  */
#define LLWU_MF_MWUF2(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF2_SHIFT))&LLWU_MF_MWUF2_MASK) /*!< LLWU_MF.MWUF2 Field                     */
#define LLWU_MF_MWUF3_MASK                       (0x8U)                                              /*!< LLWU_MF.MWUF3 Mask                      */
#define LLWU_MF_MWUF3_SHIFT                      (3U)                                                /*!< LLWU_MF.MWUF3 Position                  */
#define LLWU_MF_MWUF3(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF3_SHIFT))&LLWU_MF_MWUF3_MASK) /*!< LLWU_MF.MWUF3 Field                     */
#define LLWU_MF_MWUF4_MASK                       (0x10U)                                             /*!< LLWU_MF.MWUF4 Mask                      */
#define LLWU_MF_MWUF4_SHIFT                      (4U)                                                /*!< LLWU_MF.MWUF4 Position                  */
#define LLWU_MF_MWUF4(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF4_SHIFT))&LLWU_MF_MWUF4_MASK) /*!< LLWU_MF.MWUF4 Field                     */
#define LLWU_MF_MWUF5_MASK                       (0x20U)                                             /*!< LLWU_MF.MWUF5 Mask                      */
#define LLWU_MF_MWUF5_SHIFT                      (5U)                                                /*!< LLWU_MF.MWUF5 Position                  */
#define LLWU_MF_MWUF5(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF5_SHIFT))&LLWU_MF_MWUF5_MASK) /*!< LLWU_MF.MWUF5 Field                     */
#define LLWU_MF_MWUF6_MASK                       (0x40U)                                             /*!< LLWU_MF.MWUF6 Mask                      */
#define LLWU_MF_MWUF6_SHIFT                      (6U)                                                /*!< LLWU_MF.MWUF6 Position                  */
#define LLWU_MF_MWUF6(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF6_SHIFT))&LLWU_MF_MWUF6_MASK) /*!< LLWU_MF.MWUF6 Field                     */
#define LLWU_MF_MWUF7_MASK                       (0x80U)                                             /*!< LLWU_MF.MWUF7 Mask                      */
#define LLWU_MF_MWUF7_SHIFT                      (7U)                                                /*!< LLWU_MF.MWUF7 Position                  */
#define LLWU_MF_MWUF7(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF7_SHIFT))&LLWU_MF_MWUF7_MASK) /*!< LLWU_MF.MWUF7 Field                     */

/*! @name FILT - Pin Filter register */
#define LLWU_FILT_FILTSEL_MASK                   (0x1FU)                                             /*!< LLWU_FILT.FILTSEL Mask                  */
#define LLWU_FILT_FILTSEL_SHIFT                  (0U)                                                /*!< LLWU_FILT.FILTSEL Position              */
#define LLWU_FILT_FILTSEL(x)                     (((uint8_t)(((uint8_t)(x))<<LLWU_FILT_FILTSEL_SHIFT))&LLWU_FILT_FILTSEL_MASK) /*!< LLWU_FILT.FILTSEL Field                 */
#define LLWU_FILT_FILTE_MASK                     (0x60U)                                             /*!< LLWU_FILT.FILTE Mask                    */
#define LLWU_FILT_FILTE_SHIFT                    (5U)                                                /*!< LLWU_FILT.FILTE Position                */
#define LLWU_FILT_FILTE(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_FILT_FILTE_SHIFT))&LLWU_FILT_FILTE_MASK) /*!< LLWU_FILT.FILTE Field                   */
#define LLWU_FILT_FILTF_MASK                     (0x80U)                                             /*!< LLWU_FILT.FILTF Mask                    */
#define LLWU_FILT_FILTF_SHIFT                    (7U)                                                /*!< LLWU_FILT.FILTF Position                */
#define LLWU_FILT_FILTF(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_FILT_FILTF_SHIFT))&LLWU_FILT_FILTF_MASK) /*!< LLWU_FILT.FILTF Field                   */

/*! @name FILT1 - Pin Filter register */
#define LLWU_FILT1_FILTSEL_MASK                  (0x1FU)                                             /*!< LLWU_FILT1.FILTSEL Mask                 */
#define LLWU_FILT1_FILTSEL_SHIFT                 (0U)                                                /*!< LLWU_FILT1.FILTSEL Position             */
#define LLWU_FILT1_FILTSEL(x)                    (((uint8_t)(((uint8_t)(x))<<LLWU_FILT1_FILTSEL_SHIFT))&LLWU_FILT1_FILTSEL_MASK) /*!< LLWU_FILT1.FILTSEL Field                */
#define LLWU_FILT1_FILTE_MASK                    (0x60U)                                             /*!< LLWU_FILT1.FILTE Mask                   */
#define LLWU_FILT1_FILTE_SHIFT                   (5U)                                                /*!< LLWU_FILT1.FILTE Position               */
#define LLWU_FILT1_FILTE(x)                      (((uint8_t)(((uint8_t)(x))<<LLWU_FILT1_FILTE_SHIFT))&LLWU_FILT1_FILTE_MASK) /*!< LLWU_FILT1.FILTE Field                  */
#define LLWU_FILT1_FILTF_MASK                    (0x80U)                                             /*!< LLWU_FILT1.FILTF Mask                   */
#define LLWU_FILT1_FILTF_SHIFT                   (7U)                                                /*!< LLWU_FILT1.FILTF Position               */
#define LLWU_FILT1_FILTF(x)                      (((uint8_t)(((uint8_t)(x))<<LLWU_FILT1_FILTF_SHIFT))&LLWU_FILT1_FILTF_MASK) /*!< LLWU_FILT1.FILTF Field                  */

/*! @name FILT2 - Pin Filter register */
#define LLWU_FILT2_FILTSEL_MASK                  (0x1FU)                                             /*!< LLWU_FILT2.FILTSEL Mask                 */
#define LLWU_FILT2_FILTSEL_SHIFT                 (0U)                                                /*!< LLWU_FILT2.FILTSEL Position             */
#define LLWU_FILT2_FILTSEL(x)                    (((uint8_t)(((uint8_t)(x))<<LLWU_FILT2_FILTSEL_SHIFT))&LLWU_FILT2_FILTSEL_MASK) /*!< LLWU_FILT2.FILTSEL Field                */
#define LLWU_FILT2_FILTE_MASK                    (0x60U)                                             /*!< LLWU_FILT2.FILTE Mask                   */
#define LLWU_FILT2_FILTE_SHIFT                   (5U)                                                /*!< LLWU_FILT2.FILTE Position               */
#define LLWU_FILT2_FILTE(x)                      (((uint8_t)(((uint8_t)(x))<<LLWU_FILT2_FILTE_SHIFT))&LLWU_FILT2_FILTE_MASK) /*!< LLWU_FILT2.FILTE Field                  */
#define LLWU_FILT2_FILTF_MASK                    (0x80U)                                             /*!< LLWU_FILT2.FILTF Mask                   */
#define LLWU_FILT2_FILTF_SHIFT                   (7U)                                                /*!< LLWU_FILT2.FILTF Position               */
#define LLWU_FILT2_FILTF(x)                      (((uint8_t)(((uint8_t)(x))<<LLWU_FILT2_FILTF_SHIFT))&LLWU_FILT2_FILTF_MASK) /*!< LLWU_FILT2.FILTF Field                  */
/**
 * @} */ /* End group LLWU_Register_Masks_GROUP 
 */

/* LLWU - Peripheral instance base addresses */
#define LLWU_BasePtr                   0x4007C000UL //!< Peripheral base address
#define LLWU                           ((LLWU_Type *) LLWU_BasePtr) //!< Freescale base pointer
#define LLWU_BASE_PTR                  (LLWU) //!< Freescale style base pointer
/**
 * @} */ /* End group LLWU_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup LPTMR_Peripheral_access_layer_GROUP LPTMR Peripheral Access Layer
* @brief C Struct for LPTMR
* @{
*/

/* ================================================================================ */
/* ================           LPTMR0 (file:LPTMR0)                 ================ */
/* ================================================================================ */

/**
 * @brief Low Power Timer
 */
/**
* @addtogroup LPTMR_structs_GROUP LPTMR struct
* @brief Struct for LPTMR
* @{
*/
typedef struct LPTMR_Type {
   __IO uint32_t  CSR;                          /**< 0000: Control Status Register                                      */
   __IO uint32_t  PSR;                          /**< 0004: Prescale Register                                            */
   __IO uint32_t  CMR;                          /**< 0008: Compare Register                                             */
   __IO uint32_t  CNR;                          /**< 000C: Counter Register                                             */
} LPTMR_Type;

/**
 * @} */ /* End group LPTMR_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'LPTMR0' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup LPTMR_Register_Masks_GROUP LPTMR Register Masks
* @brief Register Masks for LPTMR
* @{
*/

/*! @name CSR - Control Status Register */
#define LPTMR_CSR_TEN_MASK                       (0x1U)                                              /*!< LPTMR0_CSR.TEN Mask                     */
#define LPTMR_CSR_TEN_SHIFT                      (0U)                                                /*!< LPTMR0_CSR.TEN Position                 */
#define LPTMR_CSR_TEN(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TEN_SHIFT))&LPTMR_CSR_TEN_MASK) /*!< LPTMR0_CSR.TEN Field                    */
#define LPTMR_CSR_TMS_MASK                       (0x2U)                                              /*!< LPTMR0_CSR.TMS Mask                     */
#define LPTMR_CSR_TMS_SHIFT                      (1U)                                                /*!< LPTMR0_CSR.TMS Position                 */
#define LPTMR_CSR_TMS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TMS_SHIFT))&LPTMR_CSR_TMS_MASK) /*!< LPTMR0_CSR.TMS Field                    */
#define LPTMR_CSR_TFC_MASK                       (0x4U)                                              /*!< LPTMR0_CSR.TFC Mask                     */
#define LPTMR_CSR_TFC_SHIFT                      (2U)                                                /*!< LPTMR0_CSR.TFC Position                 */
#define LPTMR_CSR_TFC(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TFC_SHIFT))&LPTMR_CSR_TFC_MASK) /*!< LPTMR0_CSR.TFC Field                    */
#define LPTMR_CSR_TPP_MASK                       (0x8U)                                              /*!< LPTMR0_CSR.TPP Mask                     */
#define LPTMR_CSR_TPP_SHIFT                      (3U)                                                /*!< LPTMR0_CSR.TPP Position                 */
#define LPTMR_CSR_TPP(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TPP_SHIFT))&LPTMR_CSR_TPP_MASK) /*!< LPTMR0_CSR.TPP Field                    */
#define LPTMR_CSR_TPS_MASK                       (0x30U)                                             /*!< LPTMR0_CSR.TPS Mask                     */
#define LPTMR_CSR_TPS_SHIFT                      (4U)                                                /*!< LPTMR0_CSR.TPS Position                 */
#define LPTMR_CSR_TPS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TPS_SHIFT))&LPTMR_CSR_TPS_MASK) /*!< LPTMR0_CSR.TPS Field                    */
#define LPTMR_CSR_TIE_MASK                       (0x40U)                                             /*!< LPTMR0_CSR.TIE Mask                     */
#define LPTMR_CSR_TIE_SHIFT                      (6U)                                                /*!< LPTMR0_CSR.TIE Position                 */
#define LPTMR_CSR_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TIE_SHIFT))&LPTMR_CSR_TIE_MASK) /*!< LPTMR0_CSR.TIE Field                    */
#define LPTMR_CSR_TCF_MASK                       (0x80U)                                             /*!< LPTMR0_CSR.TCF Mask                     */
#define LPTMR_CSR_TCF_SHIFT                      (7U)                                                /*!< LPTMR0_CSR.TCF Position                 */
#define LPTMR_CSR_TCF(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TCF_SHIFT))&LPTMR_CSR_TCF_MASK) /*!< LPTMR0_CSR.TCF Field                    */

/*! @name PSR - Prescale Register */
#define LPTMR_PSR_PCS_MASK                       (0x3U)                                              /*!< LPTMR0_PSR.PCS Mask                     */
#define LPTMR_PSR_PCS_SHIFT                      (0U)                                                /*!< LPTMR0_PSR.PCS Position                 */
#define LPTMR_PSR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PCS_SHIFT))&LPTMR_PSR_PCS_MASK) /*!< LPTMR0_PSR.PCS Field                    */
#define LPTMR_PSR_PBYP_MASK                      (0x4U)                                              /*!< LPTMR0_PSR.PBYP Mask                    */
#define LPTMR_PSR_PBYP_SHIFT                     (2U)                                                /*!< LPTMR0_PSR.PBYP Position                */
#define LPTMR_PSR_PBYP(x)                        (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PBYP_SHIFT))&LPTMR_PSR_PBYP_MASK) /*!< LPTMR0_PSR.PBYP Field                   */
#define LPTMR_PSR_PRESCALE_MASK                  (0x78U)                                             /*!< LPTMR0_PSR.PRESCALE Mask                */
#define LPTMR_PSR_PRESCALE_SHIFT                 (3U)                                                /*!< LPTMR0_PSR.PRESCALE Position            */
#define LPTMR_PSR_PRESCALE(x)                    (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PRESCALE_SHIFT))&LPTMR_PSR_PRESCALE_MASK) /*!< LPTMR0_PSR.PRESCALE Field               */

/*! @name CMR - Compare Register */
#define LPTMR_CMR_COMPARE_MASK                   (0xFFFFU)                                           /*!< LPTMR0_CMR.COMPARE Mask                 */
#define LPTMR_CMR_COMPARE_SHIFT                  (0U)                                                /*!< LPTMR0_CMR.COMPARE Position             */
#define LPTMR_CMR_COMPARE(x)                     (((uint32_t)(((uint32_t)(x))<<LPTMR_CMR_COMPARE_SHIFT))&LPTMR_CMR_COMPARE_MASK) /*!< LPTMR0_CMR.COMPARE Field                */

/*! @name CNR - Counter Register */
#define LPTMR_CNR_COUNTER_MASK                   (0xFFFFU)                                           /*!< LPTMR0_CNR.COUNTER Mask                 */
#define LPTMR_CNR_COUNTER_SHIFT                  (0U)                                                /*!< LPTMR0_CNR.COUNTER Position             */
#define LPTMR_CNR_COUNTER(x)                     (((uint32_t)(((uint32_t)(x))<<LPTMR_CNR_COUNTER_SHIFT))&LPTMR_CNR_COUNTER_MASK) /*!< LPTMR0_CNR.COUNTER Field                */
/**
 * @} */ /* End group LPTMR_Register_Masks_GROUP 
 */

/* LPTMR0 - Peripheral instance base addresses */
#define LPTMR0_BasePtr                 0x40040000UL //!< Peripheral base address
#define LPTMR0                         ((LPTMR_Type *) LPTMR0_BasePtr) //!< Freescale base pointer
#define LPTMR0_BASE_PTR                (LPTMR0) //!< Freescale style base pointer
/**
 * @} */ /* End group LPTMR_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup MCG_Peripheral_access_layer_GROUP MCG Peripheral Access Layer
* @brief C Struct for MCG
* @{
*/

/* ================================================================================ */
/* ================           MCG (file:MCG_MKV40F15)              ================ */
/* ================================================================================ */

/**
 * @brief Multipurpose Clock Generator module
 */
/**
* @addtogroup MCG_structs_GROUP MCG struct
* @brief Struct for MCG
* @{
*/
typedef struct MCG_Type {
   __IO uint8_t   C1;                           /**< 0000: Control 1 Register                                           */
   __IO uint8_t   C2;                           /**< 0001: Control 2 Register                                           */
   __IO uint8_t   C3;                           /**< 0002: Control 3 Register                                           */
   __IO uint8_t   C4;                           /**< 0003: Control 4 Register                                           */
   __IO uint8_t   C5;                           /**< 0004: Control 5 Register                                           */
   __IO uint8_t   C6;                           /**< 0005: Control 6 Register                                           */
   __IO uint8_t   S;                            /**< 0006: Status Register                                              */
        uint8_t   RESERVED_0;                   /**< 0007: 0x1 bytes                                                    */
   __IO uint8_t   SC;                           /**< 0008: Status and Control Register                                  */
        uint8_t   RESERVED_1;                   /**< 0009: 0x1 bytes                                                    */
   __IO uint8_t   ATCVH;                        /**< 000A: ATM Compare Value High                                       */
   __IO uint8_t   ATCVL;                        /**< 000B: ATM Compare Value Low                                        */
        uint8_t   RESERVED_2;                   /**< 000C: 0x1 bytes                                                    */
   __IO uint8_t   C8;                           /**< 000D: Control 8 Register                                           */
} MCG_Type;

/**
 * @} */ /* End group MCG_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'MCG' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup MCG_Register_Masks_GROUP MCG Register Masks
* @brief Register Masks for MCG
* @{
*/

/*! @name C1 - Control 1 Register */
#define MCG_C1_IREFSTEN_MASK                     (0x1U)                                              /*!< MCG_C1.IREFSTEN Mask                    */
#define MCG_C1_IREFSTEN_SHIFT                    (0U)                                                /*!< MCG_C1.IREFSTEN Position                */
#define MCG_C1_IREFSTEN(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_C1_IREFSTEN_SHIFT))&MCG_C1_IREFSTEN_MASK) /*!< MCG_C1.IREFSTEN Field                   */
#define MCG_C1_IRCLKEN_MASK                      (0x2U)                                              /*!< MCG_C1.IRCLKEN Mask                     */
#define MCG_C1_IRCLKEN_SHIFT                     (1U)                                                /*!< MCG_C1.IRCLKEN Position                 */
#define MCG_C1_IRCLKEN(x)                        (((uint8_t)(((uint8_t)(x))<<MCG_C1_IRCLKEN_SHIFT))&MCG_C1_IRCLKEN_MASK) /*!< MCG_C1.IRCLKEN Field                    */
#define MCG_C1_IREFS_MASK                        (0x4U)                                              /*!< MCG_C1.IREFS Mask                       */
#define MCG_C1_IREFS_SHIFT                       (2U)                                                /*!< MCG_C1.IREFS Position                   */
#define MCG_C1_IREFS(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C1_IREFS_SHIFT))&MCG_C1_IREFS_MASK) /*!< MCG_C1.IREFS Field                      */
#define MCG_C1_FRDIV_MASK                        (0x38U)                                             /*!< MCG_C1.FRDIV Mask                       */
#define MCG_C1_FRDIV_SHIFT                       (3U)                                                /*!< MCG_C1.FRDIV Position                   */
#define MCG_C1_FRDIV(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C1_FRDIV_SHIFT))&MCG_C1_FRDIV_MASK) /*!< MCG_C1.FRDIV Field                      */
#define MCG_C1_CLKS_MASK                         (0xC0U)                                             /*!< MCG_C1.CLKS Mask                        */
#define MCG_C1_CLKS_SHIFT                        (6U)                                                /*!< MCG_C1.CLKS Position                    */
#define MCG_C1_CLKS(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C1_CLKS_SHIFT))&MCG_C1_CLKS_MASK) /*!< MCG_C1.CLKS Field                       */

/*! @name C2 - Control 2 Register */
#define MCG_C2_IRCS_MASK                         (0x1U)                                              /*!< MCG_C2.IRCS Mask                        */
#define MCG_C2_IRCS_SHIFT                        (0U)                                                /*!< MCG_C2.IRCS Position                    */
#define MCG_C2_IRCS(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C2_IRCS_SHIFT))&MCG_C2_IRCS_MASK) /*!< MCG_C2.IRCS Field                       */
#define MCG_C2_LP_MASK                           (0x2U)                                              /*!< MCG_C2.LP Mask                          */
#define MCG_C2_LP_SHIFT                          (1U)                                                /*!< MCG_C2.LP Position                      */
#define MCG_C2_LP(x)                             (((uint8_t)(((uint8_t)(x))<<MCG_C2_LP_SHIFT))&MCG_C2_LP_MASK) /*!< MCG_C2.LP Field                         */
#define MCG_C2_EREFS0_MASK                       (0x4U)                                              /*!< MCG_C2.EREFS0 Mask                      */
#define MCG_C2_EREFS0_SHIFT                      (2U)                                                /*!< MCG_C2.EREFS0 Position                  */
#define MCG_C2_EREFS0(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C2_EREFS0_SHIFT))&MCG_C2_EREFS0_MASK) /*!< MCG_C2.EREFS0 Field                     */
#define MCG_C2_HGO0_MASK                         (0x8U)                                              /*!< MCG_C2.HGO0 Mask                        */
#define MCG_C2_HGO0_SHIFT                        (3U)                                                /*!< MCG_C2.HGO0 Position                    */
#define MCG_C2_HGO0(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C2_HGO0_SHIFT))&MCG_C2_HGO0_MASK) /*!< MCG_C2.HGO0 Field                       */
#define MCG_C2_RANGE0_MASK                       (0x30U)                                             /*!< MCG_C2.RANGE0 Mask                      */
#define MCG_C2_RANGE0_SHIFT                      (4U)                                                /*!< MCG_C2.RANGE0 Position                  */
#define MCG_C2_RANGE0(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C2_RANGE0_SHIFT))&MCG_C2_RANGE0_MASK) /*!< MCG_C2.RANGE0 Field                     */
#define MCG_C2_FCFTRIM_MASK                      (0x40U)                                             /*!< MCG_C2.FCFTRIM Mask                     */
#define MCG_C2_FCFTRIM_SHIFT                     (6U)                                                /*!< MCG_C2.FCFTRIM Position                 */
#define MCG_C2_FCFTRIM(x)                        (((uint8_t)(((uint8_t)(x))<<MCG_C2_FCFTRIM_SHIFT))&MCG_C2_FCFTRIM_MASK) /*!< MCG_C2.FCFTRIM Field                    */
#define MCG_C2_LOCRE0_MASK                       (0x80U)                                             /*!< MCG_C2.LOCRE0 Mask                      */
#define MCG_C2_LOCRE0_SHIFT                      (7U)                                                /*!< MCG_C2.LOCRE0 Position                  */
#define MCG_C2_LOCRE0(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C2_LOCRE0_SHIFT))&MCG_C2_LOCRE0_MASK) /*!< MCG_C2.LOCRE0 Field                     */

/*! @name C3 - Control 3 Register */
#define MCG_C3_SCTRIM_MASK                       (0xFFU)                                             /*!< MCG_C3.SCTRIM Mask                      */
#define MCG_C3_SCTRIM_SHIFT                      (0U)                                                /*!< MCG_C3.SCTRIM Position                  */
#define MCG_C3_SCTRIM(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C3_SCTRIM_SHIFT))&MCG_C3_SCTRIM_MASK) /*!< MCG_C3.SCTRIM Field                     */

/*! @name C4 - Control 4 Register */
#define MCG_C4_SCFTRIM_MASK                      (0x1U)                                              /*!< MCG_C4.SCFTRIM Mask                     */
#define MCG_C4_SCFTRIM_SHIFT                     (0U)                                                /*!< MCG_C4.SCFTRIM Position                 */
#define MCG_C4_SCFTRIM(x)                        (((uint8_t)(((uint8_t)(x))<<MCG_C4_SCFTRIM_SHIFT))&MCG_C4_SCFTRIM_MASK) /*!< MCG_C4.SCFTRIM Field                    */
#define MCG_C4_FCTRIM_MASK                       (0x1EU)                                             /*!< MCG_C4.FCTRIM Mask                      */
#define MCG_C4_FCTRIM_SHIFT                      (1U)                                                /*!< MCG_C4.FCTRIM Position                  */
#define MCG_C4_FCTRIM(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C4_FCTRIM_SHIFT))&MCG_C4_FCTRIM_MASK) /*!< MCG_C4.FCTRIM Field                     */
#define MCG_C4_DRST_DRS_MASK                     (0x60U)                                             /*!< MCG_C4.DRST_DRS Mask                    */
#define MCG_C4_DRST_DRS_SHIFT                    (5U)                                                /*!< MCG_C4.DRST_DRS Position                */
#define MCG_C4_DRST_DRS(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_C4_DRST_DRS_SHIFT))&MCG_C4_DRST_DRS_MASK) /*!< MCG_C4.DRST_DRS Field                   */
#define MCG_C4_DMX32_MASK                        (0x80U)                                             /*!< MCG_C4.DMX32 Mask                       */
#define MCG_C4_DMX32_SHIFT                       (7U)                                                /*!< MCG_C4.DMX32 Position                   */
#define MCG_C4_DMX32(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C4_DMX32_SHIFT))&MCG_C4_DMX32_MASK) /*!< MCG_C4.DMX32 Field                      */

/*! @name C5 - Control 5 Register */
#define MCG_C5_PRDIV0_MASK                       (0x7U)                                              /*!< MCG_C5.PRDIV0 Mask                      */
#define MCG_C5_PRDIV0_SHIFT                      (0U)                                                /*!< MCG_C5.PRDIV0 Position                  */
#define MCG_C5_PRDIV0(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C5_PRDIV0_SHIFT))&MCG_C5_PRDIV0_MASK) /*!< MCG_C5.PRDIV0 Field                     */
#define MCG_C5_PLLSTEN0_MASK                     (0x20U)                                             /*!< MCG_C5.PLLSTEN0 Mask                    */
#define MCG_C5_PLLSTEN0_SHIFT                    (5U)                                                /*!< MCG_C5.PLLSTEN0 Position                */
#define MCG_C5_PLLSTEN0(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_C5_PLLSTEN0_SHIFT))&MCG_C5_PLLSTEN0_MASK) /*!< MCG_C5.PLLSTEN0 Field                   */
#define MCG_C5_PLLCLKEN0_MASK                    (0x40U)                                             /*!< MCG_C5.PLLCLKEN0 Mask                   */
#define MCG_C5_PLLCLKEN0_SHIFT                   (6U)                                                /*!< MCG_C5.PLLCLKEN0 Position               */
#define MCG_C5_PLLCLKEN0(x)                      (((uint8_t)(((uint8_t)(x))<<MCG_C5_PLLCLKEN0_SHIFT))&MCG_C5_PLLCLKEN0_MASK) /*!< MCG_C5.PLLCLKEN0 Field                  */

/*! @name C6 - Control 6 Register */
#define MCG_C6_VDIV0_MASK                        (0x1FU)                                             /*!< MCG_C6.VDIV0 Mask                       */
#define MCG_C6_VDIV0_SHIFT                       (0U)                                                /*!< MCG_C6.VDIV0 Position                   */
#define MCG_C6_VDIV0(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C6_VDIV0_SHIFT))&MCG_C6_VDIV0_MASK) /*!< MCG_C6.VDIV0 Field                      */
#define MCG_C6_CME0_MASK                         (0x20U)                                             /*!< MCG_C6.CME0 Mask                        */
#define MCG_C6_CME0_SHIFT                        (5U)                                                /*!< MCG_C6.CME0 Position                    */
#define MCG_C6_CME0(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C6_CME0_SHIFT))&MCG_C6_CME0_MASK) /*!< MCG_C6.CME0 Field                       */
#define MCG_C6_PLLS_MASK                         (0x40U)                                             /*!< MCG_C6.PLLS Mask                        */
#define MCG_C6_PLLS_SHIFT                        (6U)                                                /*!< MCG_C6.PLLS Position                    */
#define MCG_C6_PLLS(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C6_PLLS_SHIFT))&MCG_C6_PLLS_MASK) /*!< MCG_C6.PLLS Field                       */
#define MCG_C6_LOLIE0_MASK                       (0x80U)                                             /*!< MCG_C6.LOLIE0 Mask                      */
#define MCG_C6_LOLIE0_SHIFT                      (7U)                                                /*!< MCG_C6.LOLIE0 Position                  */
#define MCG_C6_LOLIE0(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C6_LOLIE0_SHIFT))&MCG_C6_LOLIE0_MASK) /*!< MCG_C6.LOLIE0 Field                     */

/*! @name S - Status Register */
#define MCG_S_IRCST_MASK                         (0x1U)                                              /*!< MCG_S.IRCST Mask                        */
#define MCG_S_IRCST_SHIFT                        (0U)                                                /*!< MCG_S.IRCST Position                    */
#define MCG_S_IRCST(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_S_IRCST_SHIFT))&MCG_S_IRCST_MASK) /*!< MCG_S.IRCST Field                       */
#define MCG_S_OSCINIT0_MASK                      (0x2U)                                              /*!< MCG_S.OSCINIT0 Mask                     */
#define MCG_S_OSCINIT0_SHIFT                     (1U)                                                /*!< MCG_S.OSCINIT0 Position                 */
#define MCG_S_OSCINIT0(x)                        (((uint8_t)(((uint8_t)(x))<<MCG_S_OSCINIT0_SHIFT))&MCG_S_OSCINIT0_MASK) /*!< MCG_S.OSCINIT0 Field                    */
#define MCG_S_CLKST_MASK                         (0xCU)                                              /*!< MCG_S.CLKST Mask                        */
#define MCG_S_CLKST_SHIFT                        (2U)                                                /*!< MCG_S.CLKST Position                    */
#define MCG_S_CLKST(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_S_CLKST_SHIFT))&MCG_S_CLKST_MASK) /*!< MCG_S.CLKST Field                       */
#define MCG_S_IREFST_MASK                        (0x10U)                                             /*!< MCG_S.IREFST Mask                       */
#define MCG_S_IREFST_SHIFT                       (4U)                                                /*!< MCG_S.IREFST Position                   */
#define MCG_S_IREFST(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_S_IREFST_SHIFT))&MCG_S_IREFST_MASK) /*!< MCG_S.IREFST Field                      */
#define MCG_S_PLLST_MASK                         (0x20U)                                             /*!< MCG_S.PLLST Mask                        */
#define MCG_S_PLLST_SHIFT                        (5U)                                                /*!< MCG_S.PLLST Position                    */
#define MCG_S_PLLST(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_S_PLLST_SHIFT))&MCG_S_PLLST_MASK) /*!< MCG_S.PLLST Field                       */
#define MCG_S_LOCK0_MASK                         (0x40U)                                             /*!< MCG_S.LOCK0 Mask                        */
#define MCG_S_LOCK0_SHIFT                        (6U)                                                /*!< MCG_S.LOCK0 Position                    */
#define MCG_S_LOCK0(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_S_LOCK0_SHIFT))&MCG_S_LOCK0_MASK) /*!< MCG_S.LOCK0 Field                       */
#define MCG_S_LOLS0_MASK                         (0x80U)                                             /*!< MCG_S.LOLS0 Mask                        */
#define MCG_S_LOLS0_SHIFT                        (7U)                                                /*!< MCG_S.LOLS0 Position                    */
#define MCG_S_LOLS0(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_S_LOLS0_SHIFT))&MCG_S_LOLS0_MASK) /*!< MCG_S.LOLS0 Field                       */

/*! @name SC - Status and Control Register */
#define MCG_SC_LOCS0_MASK                        (0x1U)                                              /*!< MCG_SC.LOCS0 Mask                       */
#define MCG_SC_LOCS0_SHIFT                       (0U)                                                /*!< MCG_SC.LOCS0 Position                   */
#define MCG_SC_LOCS0(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_SC_LOCS0_SHIFT))&MCG_SC_LOCS0_MASK) /*!< MCG_SC.LOCS0 Field                      */
#define MCG_SC_FCRDIV_MASK                       (0xEU)                                              /*!< MCG_SC.FCRDIV Mask                      */
#define MCG_SC_FCRDIV_SHIFT                      (1U)                                                /*!< MCG_SC.FCRDIV Position                  */
#define MCG_SC_FCRDIV(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_SC_FCRDIV_SHIFT))&MCG_SC_FCRDIV_MASK) /*!< MCG_SC.FCRDIV Field                     */
#define MCG_SC_FLTPRSRV_MASK                     (0x10U)                                             /*!< MCG_SC.FLTPRSRV Mask                    */
#define MCG_SC_FLTPRSRV_SHIFT                    (4U)                                                /*!< MCG_SC.FLTPRSRV Position                */
#define MCG_SC_FLTPRSRV(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_SC_FLTPRSRV_SHIFT))&MCG_SC_FLTPRSRV_MASK) /*!< MCG_SC.FLTPRSRV Field                   */
#define MCG_SC_ATMF_MASK                         (0x20U)                                             /*!< MCG_SC.ATMF Mask                        */
#define MCG_SC_ATMF_SHIFT                        (5U)                                                /*!< MCG_SC.ATMF Position                    */
#define MCG_SC_ATMF(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_SC_ATMF_SHIFT))&MCG_SC_ATMF_MASK) /*!< MCG_SC.ATMF Field                       */
#define MCG_SC_ATMS_MASK                         (0x40U)                                             /*!< MCG_SC.ATMS Mask                        */
#define MCG_SC_ATMS_SHIFT                        (6U)                                                /*!< MCG_SC.ATMS Position                    */
#define MCG_SC_ATMS(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_SC_ATMS_SHIFT))&MCG_SC_ATMS_MASK) /*!< MCG_SC.ATMS Field                       */
#define MCG_SC_ATME_MASK                         (0x80U)                                             /*!< MCG_SC.ATME Mask                        */
#define MCG_SC_ATME_SHIFT                        (7U)                                                /*!< MCG_SC.ATME Position                    */
#define MCG_SC_ATME(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_SC_ATME_SHIFT))&MCG_SC_ATME_MASK) /*!< MCG_SC.ATME Field                       */

/*! @name ATCVH - ATM Compare Value High */
#define MCG_ATCVH_ATCVH_MASK                     (0xFFU)                                             /*!< MCG_ATCVH.ATCVH Mask                    */
#define MCG_ATCVH_ATCVH_SHIFT                    (0U)                                                /*!< MCG_ATCVH.ATCVH Position                */
#define MCG_ATCVH_ATCVH(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_ATCVH_ATCVH_SHIFT))&MCG_ATCVH_ATCVH_MASK) /*!< MCG_ATCVH.ATCVH Field                   */

/*! @name ATCVL - ATM Compare Value Low */
#define MCG_ATCVL_ATCVL_MASK                     (0xFFU)                                             /*!< MCG_ATCVL.ATCVL Mask                    */
#define MCG_ATCVL_ATCVL_SHIFT                    (0U)                                                /*!< MCG_ATCVL.ATCVL Position                */
#define MCG_ATCVL_ATCVL(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_ATCVL_ATCVL_SHIFT))&MCG_ATCVL_ATCVL_MASK) /*!< MCG_ATCVL.ATCVL Field                   */

/*! @name C8 - Control 8 Register */
#define MCG_C8_LOLRE_MASK                        (0x40U)                                             /*!< MCG_C8.LOLRE Mask                       */
#define MCG_C8_LOLRE_SHIFT                       (6U)                                                /*!< MCG_C8.LOLRE Position                   */
#define MCG_C8_LOLRE(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C8_LOLRE_SHIFT))&MCG_C8_LOLRE_MASK) /*!< MCG_C8.LOLRE Field                      */
/**
 * @} */ /* End group MCG_Register_Masks_GROUP 
 */

/* MCG - Peripheral instance base addresses */
#define MCG_BasePtr                    0x40064000UL //!< Peripheral base address
#define MCG                            ((MCG_Type *) MCG_BasePtr) //!< Freescale base pointer
#define MCG_BASE_PTR                   (MCG) //!< Freescale style base pointer
/**
 * @} */ /* End group MCG_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup MCM_Peripheral_access_layer_GROUP MCM Peripheral Access Layer
* @brief C Struct for MCM
* @{
*/

/* ================================================================================ */
/* ================           MCM (file:MCM_MKV40F15)              ================ */
/* ================================================================================ */

/**
 * @brief Core Platform Miscellaneous Control Module
 */
/**
* @addtogroup MCM_structs_GROUP MCM struct
* @brief Struct for MCM
* @{
*/
typedef struct MCM_Type {
        uint8_t   RESERVED_0[8];                /**< 0000: 0x8 bytes                                                    */
   __I  uint16_t  PLASC;                        /**< 0008: Crossbar Switch (AXBS) Slave Configuration                   */
   __I  uint16_t  PLAMC;                        /**< 000A: Crossbar Switch (AXBS) Master Configuration                  */
   __IO uint32_t  CR;                           /**< 000C: Control Register                                             */
   __IO uint32_t  ISR;                          /**< 0010: Interrupt Status Register                                    */
        uint8_t   RESERVED_1[44];               /**< 0014: 0x2C bytes                                                   */
   __IO uint32_t  CPO;                          /**< 0040: Compute Operation Control Register                           */
} MCM_Type;

/**
 * @} */ /* End group MCM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'MCM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup MCM_Register_Masks_GROUP MCM Register Masks
* @brief Register Masks for MCM
* @{
*/

/*! @name PLASC - Crossbar Switch (AXBS) Slave Configuration */
#define MCM_PLASC_ASC_MASK                       (0xFFU)                                             /*!< MCM_PLASC.ASC Mask                      */
#define MCM_PLASC_ASC_SHIFT                      (0U)                                                /*!< MCM_PLASC.ASC Position                  */
#define MCM_PLASC_ASC(x)                         (((uint16_t)(((uint16_t)(x))<<MCM_PLASC_ASC_SHIFT))&MCM_PLASC_ASC_MASK) /*!< MCM_PLASC.ASC Field                     */

/*! @name PLAMC - Crossbar Switch (AXBS) Master Configuration */
#define MCM_PLAMC_AMC_MASK                       (0xFFU)                                             /*!< MCM_PLAMC.AMC Mask                      */
#define MCM_PLAMC_AMC_SHIFT                      (0U)                                                /*!< MCM_PLAMC.AMC Position                  */
#define MCM_PLAMC_AMC(x)                         (((uint16_t)(((uint16_t)(x))<<MCM_PLAMC_AMC_SHIFT))&MCM_PLAMC_AMC_MASK) /*!< MCM_PLAMC.AMC Field                     */

/*! @name CR - Control Register */
#define MCM_CR_SRAMUAP_MASK                      (0x3000000U)                                        /*!< MCM_CR.SRAMUAP Mask                     */
#define MCM_CR_SRAMUAP_SHIFT                     (24U)                                               /*!< MCM_CR.SRAMUAP Position                 */
#define MCM_CR_SRAMUAP(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CR_SRAMUAP_SHIFT))&MCM_CR_SRAMUAP_MASK) /*!< MCM_CR.SRAMUAP Field                    */
#define MCM_CR_SRAMUWP_MASK                      (0x4000000U)                                        /*!< MCM_CR.SRAMUWP Mask                     */
#define MCM_CR_SRAMUWP_SHIFT                     (26U)                                               /*!< MCM_CR.SRAMUWP Position                 */
#define MCM_CR_SRAMUWP(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CR_SRAMUWP_SHIFT))&MCM_CR_SRAMUWP_MASK) /*!< MCM_CR.SRAMUWP Field                    */
#define MCM_CR_SRAMLAP_MASK                      (0x30000000U)                                       /*!< MCM_CR.SRAMLAP Mask                     */
#define MCM_CR_SRAMLAP_SHIFT                     (28U)                                               /*!< MCM_CR.SRAMLAP Position                 */
#define MCM_CR_SRAMLAP(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CR_SRAMLAP_SHIFT))&MCM_CR_SRAMLAP_MASK) /*!< MCM_CR.SRAMLAP Field                    */
#define MCM_CR_SRAMLWP_MASK                      (0x40000000U)                                       /*!< MCM_CR.SRAMLWP Mask                     */
#define MCM_CR_SRAMLWP_SHIFT                     (30U)                                               /*!< MCM_CR.SRAMLWP Position                 */
#define MCM_CR_SRAMLWP(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CR_SRAMLWP_SHIFT))&MCM_CR_SRAMLWP_MASK) /*!< MCM_CR.SRAMLWP Field                    */

/*! @name ISR - Interrupt Status Register */
#define MCM_ISR_FIOC_MASK                        (0x100U)                                            /*!< MCM_ISR.FIOC Mask                       */
#define MCM_ISR_FIOC_SHIFT                       (8U)                                                /*!< MCM_ISR.FIOC Position                   */
#define MCM_ISR_FIOC(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FIOC_SHIFT))&MCM_ISR_FIOC_MASK) /*!< MCM_ISR.FIOC Field                      */
#define MCM_ISR_FDZC_MASK                        (0x200U)                                            /*!< MCM_ISR.FDZC Mask                       */
#define MCM_ISR_FDZC_SHIFT                       (9U)                                                /*!< MCM_ISR.FDZC Position                   */
#define MCM_ISR_FDZC(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FDZC_SHIFT))&MCM_ISR_FDZC_MASK) /*!< MCM_ISR.FDZC Field                      */
#define MCM_ISR_FOFC_MASK                        (0x400U)                                            /*!< MCM_ISR.FOFC Mask                       */
#define MCM_ISR_FOFC_SHIFT                       (10U)                                               /*!< MCM_ISR.FOFC Position                   */
#define MCM_ISR_FOFC(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FOFC_SHIFT))&MCM_ISR_FOFC_MASK) /*!< MCM_ISR.FOFC Field                      */
#define MCM_ISR_FUFC_MASK                        (0x800U)                                            /*!< MCM_ISR.FUFC Mask                       */
#define MCM_ISR_FUFC_SHIFT                       (11U)                                               /*!< MCM_ISR.FUFC Position                   */
#define MCM_ISR_FUFC(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FUFC_SHIFT))&MCM_ISR_FUFC_MASK) /*!< MCM_ISR.FUFC Field                      */
#define MCM_ISR_FIXC_MASK                        (0x1000U)                                           /*!< MCM_ISR.FIXC Mask                       */
#define MCM_ISR_FIXC_SHIFT                       (12U)                                               /*!< MCM_ISR.FIXC Position                   */
#define MCM_ISR_FIXC(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FIXC_SHIFT))&MCM_ISR_FIXC_MASK) /*!< MCM_ISR.FIXC Field                      */
#define MCM_ISR_FIDC_MASK                        (0x8000U)                                           /*!< MCM_ISR.FIDC Mask                       */
#define MCM_ISR_FIDC_SHIFT                       (15U)                                               /*!< MCM_ISR.FIDC Position                   */
#define MCM_ISR_FIDC(x)                          (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FIDC_SHIFT))&MCM_ISR_FIDC_MASK) /*!< MCM_ISR.FIDC Field                      */
#define MCM_ISR_FIOCE_MASK                       (0x1000000U)                                        /*!< MCM_ISR.FIOCE Mask                      */
#define MCM_ISR_FIOCE_SHIFT                      (24U)                                               /*!< MCM_ISR.FIOCE Position                  */
#define MCM_ISR_FIOCE(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FIOCE_SHIFT))&MCM_ISR_FIOCE_MASK) /*!< MCM_ISR.FIOCE Field                     */
#define MCM_ISR_FDZCE_MASK                       (0x2000000U)                                        /*!< MCM_ISR.FDZCE Mask                      */
#define MCM_ISR_FDZCE_SHIFT                      (25U)                                               /*!< MCM_ISR.FDZCE Position                  */
#define MCM_ISR_FDZCE(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FDZCE_SHIFT))&MCM_ISR_FDZCE_MASK) /*!< MCM_ISR.FDZCE Field                     */
#define MCM_ISR_FOFCE_MASK                       (0x4000000U)                                        /*!< MCM_ISR.FOFCE Mask                      */
#define MCM_ISR_FOFCE_SHIFT                      (26U)                                               /*!< MCM_ISR.FOFCE Position                  */
#define MCM_ISR_FOFCE(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FOFCE_SHIFT))&MCM_ISR_FOFCE_MASK) /*!< MCM_ISR.FOFCE Field                     */
#define MCM_ISR_FUFCE_MASK                       (0x8000000U)                                        /*!< MCM_ISR.FUFCE Mask                      */
#define MCM_ISR_FUFCE_SHIFT                      (27U)                                               /*!< MCM_ISR.FUFCE Position                  */
#define MCM_ISR_FUFCE(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FUFCE_SHIFT))&MCM_ISR_FUFCE_MASK) /*!< MCM_ISR.FUFCE Field                     */
#define MCM_ISR_FIXCE_MASK                       (0x10000000U)                                       /*!< MCM_ISR.FIXCE Mask                      */
#define MCM_ISR_FIXCE_SHIFT                      (28U)                                               /*!< MCM_ISR.FIXCE Position                  */
#define MCM_ISR_FIXCE(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FIXCE_SHIFT))&MCM_ISR_FIXCE_MASK) /*!< MCM_ISR.FIXCE Field                     */
#define MCM_ISR_FIDCE_MASK                       (0x80000000U)                                       /*!< MCM_ISR.FIDCE Mask                      */
#define MCM_ISR_FIDCE_SHIFT                      (31U)                                               /*!< MCM_ISR.FIDCE Position                  */
#define MCM_ISR_FIDCE(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISR_FIDCE_SHIFT))&MCM_ISR_FIDCE_MASK) /*!< MCM_ISR.FIDCE Field                     */

/*! @name CPO - Compute Operation Control Register */
#define MCM_CPO_CPOREQ_MASK                      (0x1U)                                              /*!< MCM_CPO.CPOREQ Mask                     */
#define MCM_CPO_CPOREQ_SHIFT                     (0U)                                                /*!< MCM_CPO.CPOREQ Position                 */
#define MCM_CPO_CPOREQ(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CPO_CPOREQ_SHIFT))&MCM_CPO_CPOREQ_MASK) /*!< MCM_CPO.CPOREQ Field                    */
#define MCM_CPO_CPOACK_MASK                      (0x2U)                                              /*!< MCM_CPO.CPOACK Mask                     */
#define MCM_CPO_CPOACK_SHIFT                     (1U)                                                /*!< MCM_CPO.CPOACK Position                 */
#define MCM_CPO_CPOACK(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CPO_CPOACK_SHIFT))&MCM_CPO_CPOACK_MASK) /*!< MCM_CPO.CPOACK Field                    */
#define MCM_CPO_CPOWOI_MASK                      (0x4U)                                              /*!< MCM_CPO.CPOWOI Mask                     */
#define MCM_CPO_CPOWOI_SHIFT                     (2U)                                                /*!< MCM_CPO.CPOWOI Position                 */
#define MCM_CPO_CPOWOI(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CPO_CPOWOI_SHIFT))&MCM_CPO_CPOWOI_MASK) /*!< MCM_CPO.CPOWOI Field                    */
/**
 * @} */ /* End group MCM_Register_Masks_GROUP 
 */

/* MCM - Peripheral instance base addresses */
#define MCM_BasePtr                    0xE0080000UL //!< Peripheral base address
#define MCM                            ((MCM_Type *) MCM_BasePtr) //!< Freescale base pointer
#define MCM_BASE_PTR                   (MCM) //!< Freescale style base pointer
/**
 * @} */ /* End group MCM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup NV_Peripheral_access_layer_GROUP NV Peripheral Access Layer
* @brief C Struct for NV
* @{
*/

/* ================================================================================ */
/* ================           NV (file:NV_MKV40)                   ================ */
/* ================================================================================ */

/**
 * @brief Flash configuration field
 */
/**
* @addtogroup NV_structs_GROUP NV struct
* @brief Struct for NV
* @{
*/
typedef struct NV_Type {
   __I  uint8_t   BACKKEY3;                     /**< 0000: Backdoor Comparison Key 3                                    */
   __I  uint8_t   BACKKEY2;                     /**< 0001: Backdoor Comparison Key 2                                    */
   __I  uint8_t   BACKKEY1;                     /**< 0002: Backdoor Comparison Key 1                                    */
   __I  uint8_t   BACKKEY0;                     /**< 0003: Backdoor Comparison Key 0                                    */
   __I  uint8_t   BACKKEY7;                     /**< 0004: Backdoor Comparison Key 7                                    */
   __I  uint8_t   BACKKEY6;                     /**< 0005: Backdoor Comparison Key 6                                    */
   __I  uint8_t   BACKKEY5;                     /**< 0006: Backdoor Comparison Key 5                                    */
   __I  uint8_t   BACKKEY4;                     /**< 0007: Backdoor Comparison Key 4                                    */
   __I  uint8_t   FPROT3;                       /**< 0008: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FPROT2;                       /**< 0009: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FPROT1;                       /**< 000A: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FPROT0;                       /**< 000B: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FSEC;                         /**< 000C: Non-volatile Flash Security Register                         */
   __I  uint8_t   FOPT;                         /**< 000D: Non-volatile Flash Option Register                           */
   __I  uint8_t   FEPROT;                       /**< 000E: Non-volatile EERAM Protection Register                       */
   __I  uint8_t   FDPROT;                       /**< 000F: Non-volatile D-Flash Protection Register                     */
} NV_Type;

/**
 * @} */ /* End group NV_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'NV' Position & Mask macros                          ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup NV_Register_Masks_GROUP NV Register Masks
* @brief Register Masks for NV
* @{
*/

/*! @name BACKKEY - Backdoor Comparison Key %s */
#define NV_BACKKEY_KEY_MASK                      (0xFFU)                                             /*!< NV_BACKKEY.KEY Mask                     */
#define NV_BACKKEY_KEY_SHIFT                     (0U)                                                /*!< NV_BACKKEY.KEY Position                 */
#define NV_BACKKEY_KEY(x)                        (((uint8_t)(((uint8_t)(x))<<NV_BACKKEY_KEY_SHIFT))&NV_BACKKEY_KEY_MASK) /*!< NV_BACKKEY.KEY Field                    */

/*! @name FPROT - Non-volatile P-Flash Protection Register */
#define NV_FPROT_PROT_MASK                       (0xFFU)                                             /*!< NV_FPROT.PROT Mask                      */
#define NV_FPROT_PROT_SHIFT                      (0U)                                                /*!< NV_FPROT.PROT Position                  */
#define NV_FPROT_PROT(x)                         (((uint8_t)(((uint8_t)(x))<<NV_FPROT_PROT_SHIFT))&NV_FPROT_PROT_MASK) /*!< NV_FPROT.PROT Field                     */

/*! @name FSEC - Non-volatile Flash Security Register */
#define NV_FSEC_SEC_MASK                         (0x3U)                                              /*!< NV_FSEC.SEC Mask                        */
#define NV_FSEC_SEC_SHIFT                        (0U)                                                /*!< NV_FSEC.SEC Position                    */
#define NV_FSEC_SEC(x)                           (((uint8_t)(((uint8_t)(x))<<NV_FSEC_SEC_SHIFT))&NV_FSEC_SEC_MASK) /*!< NV_FSEC.SEC Field                       */
#define NV_FSEC_FSLACC_MASK                      (0xCU)                                              /*!< NV_FSEC.FSLACC Mask                     */
#define NV_FSEC_FSLACC_SHIFT                     (2U)                                                /*!< NV_FSEC.FSLACC Position                 */
#define NV_FSEC_FSLACC(x)                        (((uint8_t)(((uint8_t)(x))<<NV_FSEC_FSLACC_SHIFT))&NV_FSEC_FSLACC_MASK) /*!< NV_FSEC.FSLACC Field                    */
#define NV_FSEC_MEEN_MASK                        (0x30U)                                             /*!< NV_FSEC.MEEN Mask                       */
#define NV_FSEC_MEEN_SHIFT                       (4U)                                                /*!< NV_FSEC.MEEN Position                   */
#define NV_FSEC_MEEN(x)                          (((uint8_t)(((uint8_t)(x))<<NV_FSEC_MEEN_SHIFT))&NV_FSEC_MEEN_MASK) /*!< NV_FSEC.MEEN Field                      */
#define NV_FSEC_KEYEN_MASK                       (0xC0U)                                             /*!< NV_FSEC.KEYEN Mask                      */
#define NV_FSEC_KEYEN_SHIFT                      (6U)                                                /*!< NV_FSEC.KEYEN Position                  */
#define NV_FSEC_KEYEN(x)                         (((uint8_t)(((uint8_t)(x))<<NV_FSEC_KEYEN_SHIFT))&NV_FSEC_KEYEN_MASK) /*!< NV_FSEC.KEYEN Field                     */

/*! @name FOPT - Non-volatile Flash Option Register */
#define NV_FOPT_LPBOOT_MASK                      (0x1U)                                              /*!< NV_FOPT.LPBOOT Mask                     */
#define NV_FOPT_LPBOOT_SHIFT                     (0U)                                                /*!< NV_FOPT.LPBOOT Position                 */
#define NV_FOPT_LPBOOT(x)                        (((uint8_t)(((uint8_t)(x))<<NV_FOPT_LPBOOT_SHIFT))&NV_FOPT_LPBOOT_MASK) /*!< NV_FOPT.LPBOOT Field                    */
#define NV_FOPT_NMI_DIS_MASK                     (0x4U)                                              /*!< NV_FOPT.NMI_DIS Mask                    */
#define NV_FOPT_NMI_DIS_SHIFT                    (2U)                                                /*!< NV_FOPT.NMI_DIS Position                */
#define NV_FOPT_NMI_DIS(x)                       (((uint8_t)(((uint8_t)(x))<<NV_FOPT_NMI_DIS_SHIFT))&NV_FOPT_NMI_DIS_MASK) /*!< NV_FOPT.NMI_DIS Field                   */
#define NV_FOPT_FAST_INIT_MASK                   (0x20U)                                             /*!< NV_FOPT.FAST_INIT Mask                  */
#define NV_FOPT_FAST_INIT_SHIFT                  (5U)                                                /*!< NV_FOPT.FAST_INIT Position              */
#define NV_FOPT_FAST_INIT(x)                     (((uint8_t)(((uint8_t)(x))<<NV_FOPT_FAST_INIT_SHIFT))&NV_FOPT_FAST_INIT_MASK) /*!< NV_FOPT.FAST_INIT Field                 */

/*! @name FEPROT - Non-volatile EERAM Protection Register */
#define NV_FEPROT_EPROT_MASK                     (0xFFU)                                             /*!< NV_FEPROT.EPROT Mask                    */
#define NV_FEPROT_EPROT_SHIFT                    (0U)                                                /*!< NV_FEPROT.EPROT Position                */
#define NV_FEPROT_EPROT(x)                       (((uint8_t)(((uint8_t)(x))<<NV_FEPROT_EPROT_SHIFT))&NV_FEPROT_EPROT_MASK) /*!< NV_FEPROT.EPROT Field                   */

/*! @name FDPROT - Non-volatile D-Flash Protection Register */
#define NV_FDPROT_DPROT_MASK                     (0xFFU)                                             /*!< NV_FDPROT.DPROT Mask                    */
#define NV_FDPROT_DPROT_SHIFT                    (0U)                                                /*!< NV_FDPROT.DPROT Position                */
#define NV_FDPROT_DPROT(x)                       (((uint8_t)(((uint8_t)(x))<<NV_FDPROT_DPROT_SHIFT))&NV_FDPROT_DPROT_MASK) /*!< NV_FDPROT.DPROT Field                   */
/**
 * @} */ /* End group NV_Register_Masks_GROUP 
 */

/* NV - Peripheral instance base addresses */
#define NV_BasePtr                     0x00000400UL //!< Peripheral base address
#define NV                             ((NV_Type *) NV_BasePtr) //!< Freescale base pointer
#define NV_BASE_PTR                    (NV) //!< Freescale style base pointer
/**
 * @} */ /* End group NV_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup OSC_Peripheral_access_layer_GROUP OSC Peripheral Access Layer
* @brief C Struct for OSC
* @{
*/

/* ================================================================================ */
/* ================           OSC0 (file:OSC0_DIV)                 ================ */
/* ================================================================================ */

/**
 * @brief System Oscillator
 */
/**
* @addtogroup OSC_structs_GROUP OSC struct
* @brief Struct for OSC
* @{
*/
typedef struct OSC_Type {
   __IO uint8_t   CR;                           /**< 0000: Control Register                                             */
        uint8_t   RESERVED_0;                   /**< 0001: 0x1 bytes                                                    */
   __IO uint8_t   DIV;                          /**< 0002: Clock Divider Register                                       */
} OSC_Type;

/**
 * @} */ /* End group OSC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'OSC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup OSC_Register_Masks_GROUP OSC Register Masks
* @brief Register Masks for OSC
* @{
*/

/*! @name CR - Control Register */
#define OSC_CR_SCP_MASK                          (0xFU)                                              /*!< OSC0_CR.SCP Mask                        */
#define OSC_CR_SCP_SHIFT                         (0U)                                                /*!< OSC0_CR.SCP Position                    */
#define OSC_CR_SCP(x)                            (((uint8_t)(((uint8_t)(x))<<OSC_CR_SCP_SHIFT))&OSC_CR_SCP_MASK) /*!< OSC0_CR.SCP Field                       */
#define OSC_CR_SC16P_MASK                        (0x1U)                                              /*!< OSC0_CR.SC16P Mask                      */
#define OSC_CR_SC16P_SHIFT                       (0U)                                                /*!< OSC0_CR.SC16P Position                  */
#define OSC_CR_SC16P(x)                          (((uint8_t)(((uint8_t)(x))<<OSC_CR_SC16P_SHIFT))&OSC_CR_SC16P_MASK) /*!< OSC0_CR.SC16P Field                     */
#define OSC_CR_SC8P_MASK                         (0x2U)                                              /*!< OSC0_CR.SC8P Mask                       */
#define OSC_CR_SC8P_SHIFT                        (1U)                                                /*!< OSC0_CR.SC8P Position                   */
#define OSC_CR_SC8P(x)                           (((uint8_t)(((uint8_t)(x))<<OSC_CR_SC8P_SHIFT))&OSC_CR_SC8P_MASK) /*!< OSC0_CR.SC8P Field                      */
#define OSC_CR_SC4P_MASK                         (0x4U)                                              /*!< OSC0_CR.SC4P Mask                       */
#define OSC_CR_SC4P_SHIFT                        (2U)                                                /*!< OSC0_CR.SC4P Position                   */
#define OSC_CR_SC4P(x)                           (((uint8_t)(((uint8_t)(x))<<OSC_CR_SC4P_SHIFT))&OSC_CR_SC4P_MASK) /*!< OSC0_CR.SC4P Field                      */
#define OSC_CR_SC2P_MASK                         (0x8U)                                              /*!< OSC0_CR.SC2P Mask                       */
#define OSC_CR_SC2P_SHIFT                        (3U)                                                /*!< OSC0_CR.SC2P Position                   */
#define OSC_CR_SC2P(x)                           (((uint8_t)(((uint8_t)(x))<<OSC_CR_SC2P_SHIFT))&OSC_CR_SC2P_MASK) /*!< OSC0_CR.SC2P Field                      */
#define OSC_CR_EREFSTEN_MASK                     (0x20U)                                             /*!< OSC0_CR.EREFSTEN Mask                   */
#define OSC_CR_EREFSTEN_SHIFT                    (5U)                                                /*!< OSC0_CR.EREFSTEN Position               */
#define OSC_CR_EREFSTEN(x)                       (((uint8_t)(((uint8_t)(x))<<OSC_CR_EREFSTEN_SHIFT))&OSC_CR_EREFSTEN_MASK) /*!< OSC0_CR.EREFSTEN Field                  */
#define OSC_CR_ERCLKEN_MASK                      (0x80U)                                             /*!< OSC0_CR.ERCLKEN Mask                    */
#define OSC_CR_ERCLKEN_SHIFT                     (7U)                                                /*!< OSC0_CR.ERCLKEN Position                */
#define OSC_CR_ERCLKEN(x)                        (((uint8_t)(((uint8_t)(x))<<OSC_CR_ERCLKEN_SHIFT))&OSC_CR_ERCLKEN_MASK) /*!< OSC0_CR.ERCLKEN Field                   */

/*! @name DIV - Clock Divider Register */
#define OSC_DIV_ERPS_MASK                        (0xC0U)                                             /*!< OSC0_DIV.ERPS Mask                      */
#define OSC_DIV_ERPS_SHIFT                       (6U)                                                /*!< OSC0_DIV.ERPS Position                  */
#define OSC_DIV_ERPS(x)                          (((uint8_t)(((uint8_t)(x))<<OSC_DIV_ERPS_SHIFT))&OSC_DIV_ERPS_MASK) /*!< OSC0_DIV.ERPS Field                     */
/**
 * @} */ /* End group OSC_Register_Masks_GROUP 
 */

/* OSC0 - Peripheral instance base addresses */
#define OSC0_BasePtr                   0x40065000UL //!< Peripheral base address
#define OSC0                           ((OSC_Type *) OSC0_BasePtr) //!< Freescale base pointer
#define OSC0_BASE_PTR                  (OSC0) //!< Freescale style base pointer
/**
 * @} */ /* End group OSC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PDB_Peripheral_access_layer_GROUP PDB Peripheral Access Layer
* @brief C Struct for PDB
* @{
*/

/* ================================================================================ */
/* ================           PDB0 (file:PDB0_1CH_4PT_1DAC_4PO)       ================ */
/* ================================================================================ */

/**
 * @brief Programmable Delay Block (1 channels, 4 pre-triggers, 2 DAC, 4 pulse out)
 */
#define PDB_CH_COUNT         1          /**< Number of PDB channels                             */
#define PDB_DAC_COUNT        2          /**< Number of DAC outputs                              */
#define PDB_DLY_COUNT        4          /**< Number of Pre-triggers                             */
#define PDB_POnDLY_COUNT     4          /**< Number of Pulse outputs                            */
/**
* @addtogroup PDB_structs_GROUP PDB struct
* @brief Struct for PDB
* @{
*/
typedef struct PDB_Type {
   __IO uint32_t  SC;                           /**< 0000: Status and Control Register                                  */
   __IO uint32_t  MOD;                          /**< 0004: Modulus Register                                             */
   __I  uint32_t  CNT;                          /**< 0008: Counter Register                                             */
   __IO uint32_t  IDLY;                         /**< 000C: Interrupt Delay Register                                     */
   struct {
      __IO uint32_t  C1;                        /**< 0010: Channel  Control Register 1                                  */
      __IO uint32_t  S;                         /**< 0014: Channel  Status Register                                     */
      __IO uint32_t  DLY[PDB_DLY_COUNT];        /**< 0018: Channel Delay  Register                                      */
           uint8_t   RESERVED_0[16];            /**< 0028: 0x10 bytes                                                   */
   } CH[PDB_CH_COUNT];                          /**< 0010: (cluster: size=0x0028, 40)                                   */
        uint8_t   RESERVED_1[280];              /**< 0038: 0x118 bytes                                                  */
   struct {
      __IO uint32_t  INTC;                      /**< 0150: DAC Interval Trigger n Control Register                      */
      __IO uint32_t  INT;                       /**< 0154: DAC Interval n Register                                      */
   } DAC[PDB_DAC_COUNT];                        /**< 0150: (cluster: size=0x0010, 16)                                   */
        uint8_t   RESERVED_3[48];               /**< 0160: 0x30 bytes                                                   */
   __IO uint32_t  POEN;                         /**< 0190: Pulse-Out Enable Register                                    */
   struct {
      union {                                   /**< 0194: (size=0004)                                                  */
         struct {                               /**< 0194: (size=0004)                                                  */
         __IO uint16_t  DLY2;                   /**< 0194: Pulse-Out 2 Delay Register                                   */
         __IO uint16_t  DLY1;                   /**< 0196: Pulse-Out 1 Delay Register                                   */
         };
         __IO uint32_t  PODLY;                  /**< 0194: Pulse-Out  Delay Register                                    */
      };
   } POnDLY[PDB_POnDLY_COUNT];                  /**< 0194: (cluster: size=0x0010, 16)                                   */
} PDB_Type;

/**
 * @} */ /* End group PDB_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'PDB0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup PDB_Register_Masks_GROUP PDB Register Masks
* @brief Register Masks for PDB
* @{
*/

/*! @name SC - Status and Control Register */
#define PDB_SC_LDOK_MASK                         (0x1U)                                              /*!< PDB0_SC.LDOK Mask                       */
#define PDB_SC_LDOK_SHIFT                        (0U)                                                /*!< PDB0_SC.LDOK Position                   */
#define PDB_SC_LDOK(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_SC_LDOK_SHIFT))&PDB_SC_LDOK_MASK) /*!< PDB0_SC.LDOK Field                      */
#define PDB_SC_CONT_MASK                         (0x2U)                                              /*!< PDB0_SC.CONT Mask                       */
#define PDB_SC_CONT_SHIFT                        (1U)                                                /*!< PDB0_SC.CONT Position                   */
#define PDB_SC_CONT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_SC_CONT_SHIFT))&PDB_SC_CONT_MASK) /*!< PDB0_SC.CONT Field                      */
#define PDB_SC_MULT_MASK                         (0xCU)                                              /*!< PDB0_SC.MULT Mask                       */
#define PDB_SC_MULT_SHIFT                        (2U)                                                /*!< PDB0_SC.MULT Position                   */
#define PDB_SC_MULT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_SC_MULT_SHIFT))&PDB_SC_MULT_MASK) /*!< PDB0_SC.MULT Field                      */
#define PDB_SC_PDBIE_MASK                        (0x20U)                                             /*!< PDB0_SC.PDBIE Mask                      */
#define PDB_SC_PDBIE_SHIFT                       (5U)                                                /*!< PDB0_SC.PDBIE Position                  */
#define PDB_SC_PDBIE(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBIE_SHIFT))&PDB_SC_PDBIE_MASK) /*!< PDB0_SC.PDBIE Field                     */
#define PDB_SC_PDBIF_MASK                        (0x40U)                                             /*!< PDB0_SC.PDBIF Mask                      */
#define PDB_SC_PDBIF_SHIFT                       (6U)                                                /*!< PDB0_SC.PDBIF Position                  */
#define PDB_SC_PDBIF(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBIF_SHIFT))&PDB_SC_PDBIF_MASK) /*!< PDB0_SC.PDBIF Field                     */
#define PDB_SC_PDBEN_MASK                        (0x80U)                                             /*!< PDB0_SC.PDBEN Mask                      */
#define PDB_SC_PDBEN_SHIFT                       (7U)                                                /*!< PDB0_SC.PDBEN Position                  */
#define PDB_SC_PDBEN(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBEN_SHIFT))&PDB_SC_PDBEN_MASK) /*!< PDB0_SC.PDBEN Field                     */
#define PDB_SC_TRGSEL_MASK                       (0xF00U)                                            /*!< PDB0_SC.TRGSEL Mask                     */
#define PDB_SC_TRGSEL_SHIFT                      (8U)                                                /*!< PDB0_SC.TRGSEL Position                 */
#define PDB_SC_TRGSEL(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_SC_TRGSEL_SHIFT))&PDB_SC_TRGSEL_MASK) /*!< PDB0_SC.TRGSEL Field                    */
#define PDB_SC_PRESCALER_MASK                    (0x7000U)                                           /*!< PDB0_SC.PRESCALER Mask                  */
#define PDB_SC_PRESCALER_SHIFT                   (12U)                                               /*!< PDB0_SC.PRESCALER Position              */
#define PDB_SC_PRESCALER(x)                      (((uint32_t)(((uint32_t)(x))<<PDB_SC_PRESCALER_SHIFT))&PDB_SC_PRESCALER_MASK) /*!< PDB0_SC.PRESCALER Field                 */
#define PDB_SC_DMAEN_MASK                        (0x8000U)                                           /*!< PDB0_SC.DMAEN Mask                      */
#define PDB_SC_DMAEN_SHIFT                       (15U)                                               /*!< PDB0_SC.DMAEN Position                  */
#define PDB_SC_DMAEN(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_DMAEN_SHIFT))&PDB_SC_DMAEN_MASK) /*!< PDB0_SC.DMAEN Field                     */
#define PDB_SC_SWTRIG_MASK                       (0x10000U)                                          /*!< PDB0_SC.SWTRIG Mask                     */
#define PDB_SC_SWTRIG_SHIFT                      (16U)                                               /*!< PDB0_SC.SWTRIG Position                 */
#define PDB_SC_SWTRIG(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_SC_SWTRIG_SHIFT))&PDB_SC_SWTRIG_MASK) /*!< PDB0_SC.SWTRIG Field                    */
#define PDB_SC_PDBEIE_MASK                       (0x20000U)                                          /*!< PDB0_SC.PDBEIE Mask                     */
#define PDB_SC_PDBEIE_SHIFT                      (17U)                                               /*!< PDB0_SC.PDBEIE Position                 */
#define PDB_SC_PDBEIE(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBEIE_SHIFT))&PDB_SC_PDBEIE_MASK) /*!< PDB0_SC.PDBEIE Field                    */
#define PDB_SC_LDMOD_MASK                        (0xC0000U)                                          /*!< PDB0_SC.LDMOD Mask                      */
#define PDB_SC_LDMOD_SHIFT                       (18U)                                               /*!< PDB0_SC.LDMOD Position                  */
#define PDB_SC_LDMOD(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_LDMOD_SHIFT))&PDB_SC_LDMOD_MASK) /*!< PDB0_SC.LDMOD Field                     */

/*! @name MOD - Modulus Register */
#define PDB_MOD_MOD_MASK                         (0xFFFFU)                                           /*!< PDB0_MOD.MOD Mask                       */
#define PDB_MOD_MOD_SHIFT                        (0U)                                                /*!< PDB0_MOD.MOD Position                   */
#define PDB_MOD_MOD(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_MOD_MOD_SHIFT))&PDB_MOD_MOD_MASK) /*!< PDB0_MOD.MOD Field                      */

/*! @name CNT - Counter Register */
#define PDB_CNT_CNT_MASK                         (0xFFFFU)                                           /*!< PDB0_CNT.CNT Mask                       */
#define PDB_CNT_CNT_SHIFT                        (0U)                                                /*!< PDB0_CNT.CNT Position                   */
#define PDB_CNT_CNT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_CNT_CNT_SHIFT))&PDB_CNT_CNT_MASK) /*!< PDB0_CNT.CNT Field                      */

/*! @name IDLY - Interrupt Delay Register */
#define PDB_IDLY_IDLY_MASK                       (0xFFFFU)                                           /*!< PDB0_IDLY.IDLY Mask                     */
#define PDB_IDLY_IDLY_SHIFT                      (0U)                                                /*!< PDB0_IDLY.IDLY Position                 */
#define PDB_IDLY_IDLY(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_IDLY_IDLY_SHIFT))&PDB_IDLY_IDLY_MASK) /*!< PDB0_IDLY.IDLY Field                    */

/*! @name C1 - Channel %s Control Register 1 */
#define PDB_C1_EN_MASK                           (0xFFU)                                             /*!< PDB0_C1.EN Mask                         */
#define PDB_C1_EN_SHIFT                          (0U)                                                /*!< PDB0_C1.EN Position                     */
#define PDB_C1_EN(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_C1_EN_SHIFT))&PDB_C1_EN_MASK) /*!< PDB0_C1.EN Field                        */
#define PDB_C1_TOS_MASK                          (0xFF00U)                                           /*!< PDB0_C1.TOS Mask                        */
#define PDB_C1_TOS_SHIFT                         (8U)                                                /*!< PDB0_C1.TOS Position                    */
#define PDB_C1_TOS(x)                            (((uint32_t)(((uint32_t)(x))<<PDB_C1_TOS_SHIFT))&PDB_C1_TOS_MASK) /*!< PDB0_C1.TOS Field                       */
#define PDB_C1_BB_MASK                           (0xFF0000U)                                         /*!< PDB0_C1.BB Mask                         */
#define PDB_C1_BB_SHIFT                          (16U)                                               /*!< PDB0_C1.BB Position                     */
#define PDB_C1_BB(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_C1_BB_SHIFT))&PDB_C1_BB_MASK) /*!< PDB0_C1.BB Field                        */

/*! @name S - Channel %s Status Register */
#define PDB_S_ERR_MASK                           (0xFFU)                                             /*!< PDB0_S.ERR Mask                         */
#define PDB_S_ERR_SHIFT                          (0U)                                                /*!< PDB0_S.ERR Position                     */
#define PDB_S_ERR(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_S_ERR_SHIFT))&PDB_S_ERR_MASK) /*!< PDB0_S.ERR Field                        */
#define PDB_S_CF_MASK                            (0xFF0000U)                                         /*!< PDB0_S.CF Mask                          */
#define PDB_S_CF_SHIFT                           (16U)                                               /*!< PDB0_S.CF Position                      */
#define PDB_S_CF(x)                              (((uint32_t)(((uint32_t)(x))<<PDB_S_CF_SHIFT))&PDB_S_CF_MASK) /*!< PDB0_S.CF Field                         */

/*! @name DLY - Channel Delay %s Register */
#define PDB_DLY_DLY_MASK                         (0xFFFFU)                                           /*!< PDB0_DLY.DLY Mask                       */
#define PDB_DLY_DLY_SHIFT                        (0U)                                                /*!< PDB0_DLY.DLY Position                   */
#define PDB_DLY_DLY(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_DLY_DLY_SHIFT))&PDB_DLY_DLY_MASK) /*!< PDB0_DLY.DLY Field                      */

/*! @name INTC - DAC Interval Trigger n Control Register */
#define PDB_INTC_TOE_MASK                        (0x1U)                                              /*!< PDB0_INTC.TOE Mask                      */
#define PDB_INTC_TOE_SHIFT                       (0U)                                                /*!< PDB0_INTC.TOE Position                  */
#define PDB_INTC_TOE(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_INTC_TOE_SHIFT))&PDB_INTC_TOE_MASK) /*!< PDB0_INTC.TOE Field                     */
#define PDB_INTC_EXT_MASK                        (0x2U)                                              /*!< PDB0_INTC.EXT Mask                      */
#define PDB_INTC_EXT_SHIFT                       (1U)                                                /*!< PDB0_INTC.EXT Position                  */
#define PDB_INTC_EXT(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_INTC_EXT_SHIFT))&PDB_INTC_EXT_MASK) /*!< PDB0_INTC.EXT Field                     */

/*! @name INT - DAC Interval n Register */
#define PDB_INT_INT_MASK                         (0xFFFFU)                                           /*!< PDB0_INT.INT Mask                       */
#define PDB_INT_INT_SHIFT                        (0U)                                                /*!< PDB0_INT.INT Position                   */
#define PDB_INT_INT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_INT_INT_SHIFT))&PDB_INT_INT_MASK) /*!< PDB0_INT.INT Field                      */

/*! @name POEN - Pulse-Out Enable Register */
#define PDB_POEN_POEN_MASK                       (0xFFU)                                             /*!< PDB0_POEN.POEN Mask                     */
#define PDB_POEN_POEN_SHIFT                      (0U)                                                /*!< PDB0_POEN.POEN Position                 */
#define PDB_POEN_POEN(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_POEN_POEN_SHIFT))&PDB_POEN_POEN_MASK) /*!< PDB0_POEN.POEN Field                    */

/*! @name DLY - Pulse-Out %s Delay Register */

/*! @name PODLY - Pulse-Out %s Delay Register */
#define PDB_PODLY_DLY2_MASK                      (0xFFFFU)                                           /*!< PDB0_PODLY.DLY2 Mask                    */
#define PDB_PODLY_DLY2_SHIFT                     (0U)                                                /*!< PDB0_PODLY.DLY2 Position                */
#define PDB_PODLY_DLY2(x)                        (((uint32_t)(((uint32_t)(x))<<PDB_PODLY_DLY2_SHIFT))&PDB_PODLY_DLY2_MASK) /*!< PDB0_PODLY.DLY2 Field                   */
#define PDB_PODLY_DLY1_MASK                      (0xFFFF0000U)                                       /*!< PDB0_PODLY.DLY1 Mask                    */
#define PDB_PODLY_DLY1_SHIFT                     (16U)                                               /*!< PDB0_PODLY.DLY1 Position                */
#define PDB_PODLY_DLY1(x)                        (((uint32_t)(((uint32_t)(x))<<PDB_PODLY_DLY1_SHIFT))&PDB_PODLY_DLY1_MASK) /*!< PDB0_PODLY.DLY1 Field                   */
/**
 * @} */ /* End group PDB_Register_Masks_GROUP 
 */

/* PDB0 - Peripheral instance base addresses */
#define PDB0_BasePtr                   0x40036000UL //!< Peripheral base address
#define PDB0                           ((PDB_Type *) PDB0_BasePtr) //!< Freescale base pointer
#define PDB0_BASE_PTR                  (PDB0) //!< Freescale style base pointer
/**
 * @} */ /* End group PDB_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PDB_Peripheral_access_layer_GROUP PDB Peripheral Access Layer
* @brief C Struct for PDB
* @{
*/

/* ================================================================================ */
/* ================           PDB1 (derived from PDB0)             ================ */
/* ================================================================================ */

/**
 * @brief Programmable Delay Block (1 channels, 4 pre-triggers, 2 DAC, 4 pulse out)
 */

/* PDB1 - Peripheral instance base addresses */
#define PDB1_BasePtr                   0x40031000UL //!< Peripheral base address
#define PDB1                           ((PDB_Type *) PDB1_BasePtr) //!< Freescale base pointer
#define PDB1_BASE_PTR                  (PDB1) //!< Freescale style base pointer
/**
 * @} */ /* End group PDB_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PIT_Peripheral_access_layer_GROUP PIT Peripheral Access Layer
* @brief C Struct for PIT
* @{
*/

/* ================================================================================ */
/* ================           PIT (file:PIT_4CH_CHAIN)             ================ */
/* ================================================================================ */

/**
 * @brief Periodic Interrupt Timer (4 channels)
 */
#define PIT_TMR_COUNT        4          /**< Number of timer channels                           */
/**
* @addtogroup PIT_structs_GROUP PIT struct
* @brief Struct for PIT
* @{
*/
typedef struct PIT_Type {
   __IO uint32_t  MCR;                          /**< 0000: Module Control Register                                      */
        uint8_t   RESERVED_0[252];              /**< 0004: 0xFC bytes                                                   */
   struct {
      __IO uint32_t  LDVAL;                     /**< 0100: Timer Load Value Register                                    */
      __I  uint32_t  CVAL;                      /**< 0104: Current Timer Value Register                                 */
      __IO uint32_t  TCTRL;                     /**< 0108: Timer Control Register                                       */
      __IO uint32_t  TFLG;                      /**< 010C: Timer Flag Register                                          */
   } CHANNEL[PIT_TMR_COUNT];                    /**< 0100: (cluster: size=0x0040, 64)                                   */
} PIT_Type;

/**
 * @} */ /* End group PIT_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'PIT' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup PIT_Register_Masks_GROUP PIT Register Masks
* @brief Register Masks for PIT
* @{
*/

/*! @name MCR - Module Control Register */
#define PIT_MCR_FRZ_MASK                         (0x1U)                                              /*!< PIT_MCR.FRZ Mask                        */
#define PIT_MCR_FRZ_SHIFT                        (0U)                                                /*!< PIT_MCR.FRZ Position                    */
#define PIT_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<PIT_MCR_FRZ_SHIFT))&PIT_MCR_FRZ_MASK) /*!< PIT_MCR.FRZ Field                       */
#define PIT_MCR_MDIS_MASK                        (0x2U)                                              /*!< PIT_MCR.MDIS Mask                       */
#define PIT_MCR_MDIS_SHIFT                       (1U)                                                /*!< PIT_MCR.MDIS Position                   */
#define PIT_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_MCR_MDIS_SHIFT))&PIT_MCR_MDIS_MASK) /*!< PIT_MCR.MDIS Field                      */

/*! @name LDVAL - Timer Load Value Register */
#define PIT_LDVAL_TSV_MASK                       (0xFFFFFFFFU)                                       /*!< PIT_LDVAL.TSV Mask                      */
#define PIT_LDVAL_TSV_SHIFT                      (0U)                                                /*!< PIT_LDVAL.TSV Position                  */
#define PIT_LDVAL_TSV(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_LDVAL_TSV_SHIFT))&PIT_LDVAL_TSV_MASK) /*!< PIT_LDVAL.TSV Field                     */

/*! @name CVAL - Current Timer Value Register */
#define PIT_CVAL_TVL_MASK                        (0xFFFFFFFFU)                                       /*!< PIT_CVAL.TVL Mask                       */
#define PIT_CVAL_TVL_SHIFT                       (0U)                                                /*!< PIT_CVAL.TVL Position                   */
#define PIT_CVAL_TVL(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_CVAL_TVL_SHIFT))&PIT_CVAL_TVL_MASK) /*!< PIT_CVAL.TVL Field                      */

/*! @name TCTRL - Timer Control Register */
#define PIT_TCTRL_TEN_MASK                       (0x1U)                                              /*!< PIT_TCTRL.TEN Mask                      */
#define PIT_TCTRL_TEN_SHIFT                      (0U)                                                /*!< PIT_TCTRL.TEN Position                  */
#define PIT_TCTRL_TEN(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_TEN_SHIFT))&PIT_TCTRL_TEN_MASK) /*!< PIT_TCTRL.TEN Field                     */
#define PIT_TCTRL_TIE_MASK                       (0x2U)                                              /*!< PIT_TCTRL.TIE Mask                      */
#define PIT_TCTRL_TIE_SHIFT                      (1U)                                                /*!< PIT_TCTRL.TIE Position                  */
#define PIT_TCTRL_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_TIE_SHIFT))&PIT_TCTRL_TIE_MASK) /*!< PIT_TCTRL.TIE Field                     */
#define PIT_TCTRL_CHN_MASK                       (0x4U)                                              /*!< PIT_TCTRL.CHN Mask                      */
#define PIT_TCTRL_CHN_SHIFT                      (2U)                                                /*!< PIT_TCTRL.CHN Position                  */
#define PIT_TCTRL_CHN(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_CHN_SHIFT))&PIT_TCTRL_CHN_MASK) /*!< PIT_TCTRL.CHN Field                     */

/*! @name TFLG - Timer Flag Register */
#define PIT_TFLG_TIF_MASK                        (0x1U)                                              /*!< PIT_TFLG.TIF Mask                       */
#define PIT_TFLG_TIF_SHIFT                       (0U)                                                /*!< PIT_TFLG.TIF Position                   */
#define PIT_TFLG_TIF(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_TFLG_TIF_SHIFT))&PIT_TFLG_TIF_MASK) /*!< PIT_TFLG.TIF Field                      */
/**
 * @} */ /* End group PIT_Register_Masks_GROUP 
 */

/* PIT - Peripheral instance base addresses */
#define PIT_BasePtr                    0x40037000UL //!< Peripheral base address
#define PIT                            ((PIT_Type *) PIT_BasePtr) //!< Freescale base pointer
#define PIT_BASE_PTR                   (PIT) //!< Freescale style base pointer
/**
 * @} */ /* End group PIT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PMC_Peripheral_access_layer_GROUP PMC Peripheral Access Layer
* @brief C Struct for PMC
* @{
*/

/* ================================================================================ */
/* ================           PMC (file:PMC_MKM)                   ================ */
/* ================================================================================ */

/**
 * @brief Power Management Controller
 */
/**
* @addtogroup PMC_structs_GROUP PMC struct
* @brief Struct for PMC
* @{
*/
typedef struct PMC_Type {
   __IO uint8_t   LVDSC1;                       /**< 0000: Low Voltage Detect Status and Control 1 Register             */
   __IO uint8_t   LVDSC2;                       /**< 0001: Low Voltage Status and Control 2                             */
   __IO uint8_t   REGSC;                        /**< 0002: Regulator Status and Control                                 */
} PMC_Type;

/**
 * @} */ /* End group PMC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'PMC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup PMC_Register_Masks_GROUP PMC Register Masks
* @brief Register Masks for PMC
* @{
*/

/*! @name LVDSC1 - Low Voltage Detect Status and Control 1 Register */
#define PMC_LVDSC1_LVDV_MASK                     (0x3U)                                              /*!< PMC_LVDSC1.LVDV Mask                    */
#define PMC_LVDSC1_LVDV_SHIFT                    (0U)                                                /*!< PMC_LVDSC1.LVDV Position                */
#define PMC_LVDSC1_LVDV(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDV_SHIFT))&PMC_LVDSC1_LVDV_MASK) /*!< PMC_LVDSC1.LVDV Field                   */
#define PMC_LVDSC1_LVDRE_MASK                    (0x10U)                                             /*!< PMC_LVDSC1.LVDRE Mask                   */
#define PMC_LVDSC1_LVDRE_SHIFT                   (4U)                                                /*!< PMC_LVDSC1.LVDRE Position               */
#define PMC_LVDSC1_LVDRE(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDRE_SHIFT))&PMC_LVDSC1_LVDRE_MASK) /*!< PMC_LVDSC1.LVDRE Field                  */
#define PMC_LVDSC1_LVDIE_MASK                    (0x20U)                                             /*!< PMC_LVDSC1.LVDIE Mask                   */
#define PMC_LVDSC1_LVDIE_SHIFT                   (5U)                                                /*!< PMC_LVDSC1.LVDIE Position               */
#define PMC_LVDSC1_LVDIE(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDIE_SHIFT))&PMC_LVDSC1_LVDIE_MASK) /*!< PMC_LVDSC1.LVDIE Field                  */
#define PMC_LVDSC1_LVDACK_MASK                   (0x40U)                                             /*!< PMC_LVDSC1.LVDACK Mask                  */
#define PMC_LVDSC1_LVDACK_SHIFT                  (6U)                                                /*!< PMC_LVDSC1.LVDACK Position              */
#define PMC_LVDSC1_LVDACK(x)                     (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDACK_SHIFT))&PMC_LVDSC1_LVDACK_MASK) /*!< PMC_LVDSC1.LVDACK Field                 */
#define PMC_LVDSC1_LVDF_MASK                     (0x80U)                                             /*!< PMC_LVDSC1.LVDF Mask                    */
#define PMC_LVDSC1_LVDF_SHIFT                    (7U)                                                /*!< PMC_LVDSC1.LVDF Position                */
#define PMC_LVDSC1_LVDF(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDF_SHIFT))&PMC_LVDSC1_LVDF_MASK) /*!< PMC_LVDSC1.LVDF Field                   */

/*! @name LVDSC2 - Low Voltage Status and Control 2 */
#define PMC_LVDSC2_LVWV_MASK                     (0x3U)                                              /*!< PMC_LVDSC2.LVWV Mask                    */
#define PMC_LVDSC2_LVWV_SHIFT                    (0U)                                                /*!< PMC_LVDSC2.LVWV Position                */
#define PMC_LVDSC2_LVWV(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWV_SHIFT))&PMC_LVDSC2_LVWV_MASK) /*!< PMC_LVDSC2.LVWV Field                   */
#define PMC_LVDSC2_LVWIE_MASK                    (0x20U)                                             /*!< PMC_LVDSC2.LVWIE Mask                   */
#define PMC_LVDSC2_LVWIE_SHIFT                   (5U)                                                /*!< PMC_LVDSC2.LVWIE Position               */
#define PMC_LVDSC2_LVWIE(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWIE_SHIFT))&PMC_LVDSC2_LVWIE_MASK) /*!< PMC_LVDSC2.LVWIE Field                  */
#define PMC_LVDSC2_LVWACK_MASK                   (0x40U)                                             /*!< PMC_LVDSC2.LVWACK Mask                  */
#define PMC_LVDSC2_LVWACK_SHIFT                  (6U)                                                /*!< PMC_LVDSC2.LVWACK Position              */
#define PMC_LVDSC2_LVWACK(x)                     (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWACK_SHIFT))&PMC_LVDSC2_LVWACK_MASK) /*!< PMC_LVDSC2.LVWACK Field                 */
#define PMC_LVDSC2_LVWF_MASK                     (0x80U)                                             /*!< PMC_LVDSC2.LVWF Mask                    */
#define PMC_LVDSC2_LVWF_SHIFT                    (7U)                                                /*!< PMC_LVDSC2.LVWF Position                */
#define PMC_LVDSC2_LVWF(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWF_SHIFT))&PMC_LVDSC2_LVWF_MASK) /*!< PMC_LVDSC2.LVWF Field                   */

/*! @name REGSC - Regulator Status and Control */
#define PMC_REGSC_BGBE_MASK                      (0x1U)                                              /*!< PMC_REGSC.BGBE Mask                     */
#define PMC_REGSC_BGBE_SHIFT                     (0U)                                                /*!< PMC_REGSC.BGBE Position                 */
#define PMC_REGSC_BGBE(x)                        (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_BGBE_SHIFT))&PMC_REGSC_BGBE_MASK) /*!< PMC_REGSC.BGBE Field                    */
#define PMC_REGSC_BGBDS_MASK                     (0x2U)                                              /*!< PMC_REGSC.BGBDS Mask                    */
#define PMC_REGSC_BGBDS_SHIFT                    (1U)                                                /*!< PMC_REGSC.BGBDS Position                */
#define PMC_REGSC_BGBDS(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_BGBDS_SHIFT))&PMC_REGSC_BGBDS_MASK) /*!< PMC_REGSC.BGBDS Field                   */
#define PMC_REGSC_REGONS_MASK                    (0x4U)                                              /*!< PMC_REGSC.REGONS Mask                   */
#define PMC_REGSC_REGONS_SHIFT                   (2U)                                                /*!< PMC_REGSC.REGONS Position               */
#define PMC_REGSC_REGONS(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_REGONS_SHIFT))&PMC_REGSC_REGONS_MASK) /*!< PMC_REGSC.REGONS Field                  */
#define PMC_REGSC_ACKISO_MASK                    (0x8U)                                              /*!< PMC_REGSC.ACKISO Mask                   */
#define PMC_REGSC_ACKISO_SHIFT                   (3U)                                                /*!< PMC_REGSC.ACKISO Position               */
#define PMC_REGSC_ACKISO(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_ACKISO_SHIFT))&PMC_REGSC_ACKISO_MASK) /*!< PMC_REGSC.ACKISO Field                  */
#define PMC_REGSC_BGEN_MASK                      (0x10U)                                             /*!< PMC_REGSC.BGEN Mask                     */
#define PMC_REGSC_BGEN_SHIFT                     (4U)                                                /*!< PMC_REGSC.BGEN Position                 */
#define PMC_REGSC_BGEN(x)                        (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_BGEN_SHIFT))&PMC_REGSC_BGEN_MASK) /*!< PMC_REGSC.BGEN Field                    */
/**
 * @} */ /* End group PMC_Register_Masks_GROUP 
 */

/* PMC - Peripheral instance base addresses */
#define PMC_BasePtr                    0x4007D000UL //!< Peripheral base address
#define PMC                            ((PMC_Type *) PMC_BasePtr) //!< Freescale base pointer
#define PMC_BASE_PTR                   (PMC) //!< Freescale style base pointer
/**
 * @} */ /* End group PMC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer
* @brief C Struct for PORT
* @{
*/

/* ================================================================================ */
/* ================           PORTA (file:PORTA)                   ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */
/**
* @addtogroup PORT_structs_GROUP PORT struct
* @brief Struct for PORT
* @{
*/
typedef struct PORT_Type {
   __IO uint32_t  PCR[32];                      /**< 0000: Pin Control Register                                         */
   __O  uint32_t  GPCLR;                        /**< 0080: Global Pin Control Low Register                              */
   __O  uint32_t  GPCHR;                        /**< 0084: Global Pin Control High Register                             */
        uint8_t   RESERVED_0[24];               /**< 0088: 0x18 bytes                                                   */
   __IO uint32_t  ISFR;                         /**< 00A0: Interrupt Status Flag Register                               */
} PORT_Type;

/**
 * @} */ /* End group PORT_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'PORTA' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup PORT_Register_Masks_GROUP PORT Register Masks
* @brief Register Masks for PORT
* @{
*/

/*! @name PCR - Pin Control Register %s */
#define PORT_PCR_PD_MASK                         (0x3U)                                              /*!< PORTA_PCR.PD Mask                       */
#define PORT_PCR_PD_SHIFT                        (0U)                                                /*!< PORTA_PCR.PD Position                   */
#define PORT_PCR_PD(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PD_SHIFT))&PORT_PCR_PD_MASK) /*!< PORTA_PCR.PD Field                      */
#define PORT_PCR_PS_MASK                         (0x1U)                                              /*!< PORTA_PCR.PS Mask                       */
#define PORT_PCR_PS_SHIFT                        (0U)                                                /*!< PORTA_PCR.PS Position                   */
#define PORT_PCR_PS(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PS_SHIFT))&PORT_PCR_PS_MASK) /*!< PORTA_PCR.PS Field                      */
#define PORT_PCR_PE_MASK                         (0x2U)                                              /*!< PORTA_PCR.PE Mask                       */
#define PORT_PCR_PE_SHIFT                        (1U)                                                /*!< PORTA_PCR.PE Position                   */
#define PORT_PCR_PE(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PE_SHIFT))&PORT_PCR_PE_MASK) /*!< PORTA_PCR.PE Field                      */
#define PORT_PCR_SRE_MASK                        (0x4U)                                              /*!< PORTA_PCR.SRE Mask                      */
#define PORT_PCR_SRE_SHIFT                       (2U)                                                /*!< PORTA_PCR.SRE Position                  */
#define PORT_PCR_SRE(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_SRE_SHIFT))&PORT_PCR_SRE_MASK) /*!< PORTA_PCR.SRE Field                     */
#define PORT_PCR_PFE_MASK                        (0x10U)                                             /*!< PORTA_PCR.PFE Mask                      */
#define PORT_PCR_PFE_SHIFT                       (4U)                                                /*!< PORTA_PCR.PFE Position                  */
#define PORT_PCR_PFE(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PFE_SHIFT))&PORT_PCR_PFE_MASK) /*!< PORTA_PCR.PFE Field                     */
#define PORT_PCR_ODE_MASK                        (0x20U)                                             /*!< PORTA_PCR.ODE Mask                      */
#define PORT_PCR_ODE_SHIFT                       (5U)                                                /*!< PORTA_PCR.ODE Position                  */
#define PORT_PCR_ODE(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_ODE_SHIFT))&PORT_PCR_ODE_MASK) /*!< PORTA_PCR.ODE Field                     */
#define PORT_PCR_DSE_MASK                        (0x40U)                                             /*!< PORTA_PCR.DSE Mask                      */
#define PORT_PCR_DSE_SHIFT                       (6U)                                                /*!< PORTA_PCR.DSE Position                  */
#define PORT_PCR_DSE(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_DSE_SHIFT))&PORT_PCR_DSE_MASK) /*!< PORTA_PCR.DSE Field                     */
#define PORT_PCR_MUX_MASK                        (0x700U)                                            /*!< PORTA_PCR.MUX Mask                      */
#define PORT_PCR_MUX_SHIFT                       (8U)                                                /*!< PORTA_PCR.MUX Position                  */
#define PORT_PCR_MUX(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_MUX_SHIFT))&PORT_PCR_MUX_MASK) /*!< PORTA_PCR.MUX Field                     */
#define PORT_PCR_LK_MASK                         (0x8000U)                                           /*!< PORTA_PCR.LK Mask                       */
#define PORT_PCR_LK_SHIFT                        (15U)                                               /*!< PORTA_PCR.LK Position                   */
#define PORT_PCR_LK(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_LK_SHIFT))&PORT_PCR_LK_MASK) /*!< PORTA_PCR.LK Field                      */
#define PORT_PCR_IRQC_MASK                       (0xF0000U)                                          /*!< PORTA_PCR.IRQC Mask                     */
#define PORT_PCR_IRQC_SHIFT                      (16U)                                               /*!< PORTA_PCR.IRQC Position                 */
#define PORT_PCR_IRQC(x)                         (((uint32_t)(((uint32_t)(x))<<PORT_PCR_IRQC_SHIFT))&PORT_PCR_IRQC_MASK) /*!< PORTA_PCR.IRQC Field                    */
#define PORT_PCR_ISF_MASK                        (0x1000000U)                                        /*!< PORTA_PCR.ISF Mask                      */
#define PORT_PCR_ISF_SHIFT                       (24U)                                               /*!< PORTA_PCR.ISF Position                  */
#define PORT_PCR_ISF(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_ISF_SHIFT))&PORT_PCR_ISF_MASK) /*!< PORTA_PCR.ISF Field                     */

/*! @name GPCLR - Global Pin Control Low Register */
#define PORT_GPCLR_GPWD_MASK                     (0xFFFFU)                                           /*!< PORTA_GPCLR.GPWD Mask                   */
#define PORT_GPCLR_GPWD_SHIFT                    (0U)                                                /*!< PORTA_GPCLR.GPWD Position               */
#define PORT_GPCLR_GPWD(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCLR_GPWD_SHIFT))&PORT_GPCLR_GPWD_MASK) /*!< PORTA_GPCLR.GPWD Field                  */
#define PORT_GPCLR_GPWE_MASK                     (0xFFFF0000U)                                       /*!< PORTA_GPCLR.GPWE Mask                   */
#define PORT_GPCLR_GPWE_SHIFT                    (16U)                                               /*!< PORTA_GPCLR.GPWE Position               */
#define PORT_GPCLR_GPWE(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCLR_GPWE_SHIFT))&PORT_GPCLR_GPWE_MASK) /*!< PORTA_GPCLR.GPWE Field                  */

/*! @name GPCHR - Global Pin Control High Register */
#define PORT_GPCHR_GPWD_MASK                     (0xFFFFU)                                           /*!< PORTA_GPCHR.GPWD Mask                   */
#define PORT_GPCHR_GPWD_SHIFT                    (0U)                                                /*!< PORTA_GPCHR.GPWD Position               */
#define PORT_GPCHR_GPWD(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCHR_GPWD_SHIFT))&PORT_GPCHR_GPWD_MASK) /*!< PORTA_GPCHR.GPWD Field                  */
#define PORT_GPCHR_GPWE_MASK                     (0xFFFF0000U)                                       /*!< PORTA_GPCHR.GPWE Mask                   */
#define PORT_GPCHR_GPWE_SHIFT                    (16U)                                               /*!< PORTA_GPCHR.GPWE Position               */
#define PORT_GPCHR_GPWE(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCHR_GPWE_SHIFT))&PORT_GPCHR_GPWE_MASK) /*!< PORTA_GPCHR.GPWE Field                  */

/*! @name ISFR - Interrupt Status Flag Register */
/**
 * @} */ /* End group PORT_Register_Masks_GROUP 
 */

/* PORTA - Peripheral instance base addresses */
#define PORTA_BasePtr                  0x40049000UL //!< Peripheral base address
#define PORTA                          ((PORT_Type *) PORTA_BasePtr) //!< Freescale base pointer
#define PORTA_BASE_PTR                 (PORTA) //!< Freescale style base pointer
/**
 * @} */ /* End group PORT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer
* @brief C Struct for PORT
* @{
*/

/* ================================================================================ */
/* ================           PORTB (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTB - Peripheral instance base addresses */
#define PORTB_BasePtr                  0x4004A000UL //!< Peripheral base address
#define PORTB                          ((PORT_Type *) PORTB_BasePtr) //!< Freescale base pointer
#define PORTB_BASE_PTR                 (PORTB) //!< Freescale style base pointer
/**
 * @} */ /* End group PORT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer
* @brief C Struct for PORT
* @{
*/

/* ================================================================================ */
/* ================           PORTC (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTC - Peripheral instance base addresses */
#define PORTC_BasePtr                  0x4004B000UL //!< Peripheral base address
#define PORTC                          ((PORT_Type *) PORTC_BasePtr) //!< Freescale base pointer
#define PORTC_BASE_PTR                 (PORTC) //!< Freescale style base pointer
/**
 * @} */ /* End group PORT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer
* @brief C Struct for PORT
* @{
*/

/* ================================================================================ */
/* ================           PORTD (file:PORTD_DFER)              ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */
/**
* @addtogroup PORT_structs_GROUP PORT struct
* @brief Struct for PORT
* @{
*/
typedef struct PORT_DFER_Type {
   __IO uint32_t  PCR[32];                      /**< 0000: Pin Control Register                                         */
   __O  uint32_t  GPCLR;                        /**< 0080: Global Pin Control Low Register                              */
   __O  uint32_t  GPCHR;                        /**< 0084: Global Pin Control High Register                             */
        uint8_t   RESERVED_0[24];               /**< 0088: 0x18 bytes                                                   */
   __IO uint32_t  ISFR;                         /**< 00A0: Interrupt Status Flag Register                               */
        uint8_t   RESERVED_1[28];               /**< 00A4: 0x1C bytes                                                   */
   __IO uint32_t  DFER;                         /**< 00C0: Digital Filter Enable Register                               */
   __IO uint32_t  DFCR;                         /**< 00C4: Digital Filter Clock Register                                */
   __IO uint32_t  DFWR;                         /**< 00C8: Digital Filter Width Register                                */
} PORT_DFER_Type;

/**
 * @} */ /* End group PORT_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'PORTD' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup PORT_Register_Masks_GROUP PORT Register Masks
* @brief Register Masks for PORT
* @{
*/

/*! @name PCR - Pin Control Register %s */

/*! @name GPCLR - Global Pin Control Low Register */

/*! @name GPCHR - Global Pin Control High Register */

/*! @name ISFR - Interrupt Status Flag Register */

/*! @name DFER - Digital Filter Enable Register */

/*! @name DFCR - Digital Filter Clock Register */
#define PORT_DFCR_CS_MASK                        (0x1U)                                              /*!< PORTD_DFCR.CS Mask                      */
#define PORT_DFCR_CS_SHIFT                       (0U)                                                /*!< PORTD_DFCR.CS Position                  */
#define PORT_DFCR_CS(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_DFCR_CS_SHIFT))&PORT_DFCR_CS_MASK) /*!< PORTD_DFCR.CS Field                     */

/*! @name DFWR - Digital Filter Width Register */
#define PORT_DFWR_FILT_MASK                      (0x1FU)                                             /*!< PORTD_DFWR.FILT Mask                    */
#define PORT_DFWR_FILT_SHIFT                     (0U)                                                /*!< PORTD_DFWR.FILT Position                */
#define PORT_DFWR_FILT(x)                        (((uint32_t)(((uint32_t)(x))<<PORT_DFWR_FILT_SHIFT))&PORT_DFWR_FILT_MASK) /*!< PORTD_DFWR.FILT Field                   */
/**
 * @} */ /* End group PORT_Register_Masks_GROUP 
 */

/* PORTD - Peripheral instance base addresses */
#define PORTD_BasePtr                  0x4004C000UL //!< Peripheral base address
#define PORTD                          ((PORT_DFER_Type *) PORTD_BasePtr) //!< Freescale base pointer
#define PORTD_BASE_PTR                 (PORTD) //!< Freescale style base pointer
/**
 * @} */ /* End group PORT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer
* @brief C Struct for PORT
* @{
*/

/* ================================================================================ */
/* ================           PORTE (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTE - Peripheral instance base addresses */
#define PORTE_BasePtr                  0x4004D000UL //!< Peripheral base address
#define PORTE                          ((PORT_Type *) PORTE_BasePtr) //!< Freescale base pointer
#define PORTE_BASE_PTR                 (PORTE) //!< Freescale style base pointer
/**
 * @} */ /* End group PORT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PWMA_Peripheral_access_layer_GROUP PWMA Peripheral Access Layer
* @brief C Struct for PWMA
* @{
*/

/* ================================================================================ */
/* ================           PWMA (file:PWMA_0)                   ================ */
/* ================================================================================ */

/**
 * @brief Pulse Width Modulator with nano edge placement
 */
/**
* @addtogroup PWMA_structs_GROUP PWMA struct
* @brief Struct for PWMA
* @{
*/
typedef struct PWMA_Type {
   __I  uint16_t  SM0CNT;                       /**< 0000: Counter Register                                             */
   __IO uint16_t  SM0INIT;                      /**< 0002: Initial Count Register                                       */
   __IO uint16_t  SM0CTRL2;                     /**< 0004: Control 2 Register                                           */
   __IO uint16_t  SM0CTRL;                      /**< 0006: Control Register                                             */
        uint8_t   RESERVED_0[2];                /**< 0008: 0x2 bytes                                                    */
   __IO uint16_t  SM0VAL0;                      /**< 000A: Value Register 0                                             */
   __IO uint16_t  SM0FRACVAL1;                  /**< 000C: Fractional Value Register 1                                  */
   __IO uint16_t  SM0VAL1;                      /**< 000E: Value Register 1                                             */
   __IO uint16_t  SM0FRACVAL2;                  /**< 0010: Fractional Value Register 2                                  */
   __IO uint16_t  SM0VAL2;                      /**< 0012: Value Register 2                                             */
   __IO uint16_t  SM0FRACVAL3;                  /**< 0014: Fractional Value Register 3                                  */
   __IO uint16_t  SM0VAL3;                      /**< 0016: Value Register 3                                             */
   __IO uint16_t  SM0FRACVAL4;                  /**< 0018: Fractional Value Register 4                                  */
   __IO uint16_t  SM0VAL4;                      /**< 001A: Value Register 4                                             */
   __IO uint16_t  SM0FRACVAL5;                  /**< 001C: Fractional Value Register 5                                  */
   __IO uint16_t  SM0VAL5;                      /**< 001E: Value Register 5                                             */
   __IO uint16_t  SM0FRCTRL;                    /**< 0020: Fractional Control Register                                  */
   __IO uint16_t  SM0OCTRL;                     /**< 0022: Output Control Register                                      */
   __IO uint16_t  SM0STS;                       /**< 0024: Status Register                                              */
   __IO uint16_t  SM0INTEN;                     /**< 0026: Interrupt Enable Register                                    */
   __IO uint16_t  SM0DMAEN;                     /**< 0028: DMA Enable Register                                          */
   __IO uint16_t  SM0TCTRL;                     /**< 002A: Output Trigger Control Register                              */
   __IO uint16_t  SM0DISMAP0;                   /**< 002C: Fault Disable Mapping Register 0                             */
        uint8_t   RESERVED_1[2];                /**< 002E: 0x2 bytes                                                    */
   __IO uint16_t  SM0DTCNT[2];                  /**< 0030: Deadtime Count Register                                      */
   __IO uint16_t  SM0CAPTCTRLA;                 /**< 0034: Capture Control A Register                                   */
   __IO uint16_t  SM0CAPTCOMPA;                 /**< 0036: Capture Compare A Register                                   */
   __IO uint16_t  SM0CAPTCTRLB;                 /**< 0038: Capture Control B Register                                   */
   __IO uint16_t  SM0CAPTCOMPB;                 /**< 003A: Capture Compare B Register                                   */
   __IO uint16_t  SM0CAPTCTRLX;                 /**< 003C: Capture Control X Register                                   */
   __IO uint16_t  SM0CAPTCOMPX;                 /**< 003E: Capture Compare X Register                                   */
   __I  uint16_t  SM0CVAL0;                     /**< 0040: Capture Value 0 Register                                     */
   __I  uint16_t  SM0CVAL0CYC;                  /**< 0042: Capture Value 0 Cycle Register                               */
   __I  uint16_t  SM0CVAL1;                     /**< 0044: Capture Value 1 Register                                     */
   __I  uint16_t  SM0CVAL1CYC;                  /**< 0046: Capture Value 1 Cycle Register                               */
   __I  uint16_t  SM0CVAL2;                     /**< 0048: Capture Value 2 Register                                     */
   __I  uint16_t  SM0CVAL2CYC;                  /**< 004A: Capture Value 2 Cycle Register                               */
   __I  uint16_t  SM0CVAL3;                     /**< 004C: Capture Value 3 Register                                     */
   __I  uint16_t  SM0CVAL3CYC;                  /**< 004E: Capture Value 3 Cycle Register                               */
   __I  uint16_t  SM0CVAL4;                     /**< 0050: Capture Value 4 Register                                     */
   __I  uint16_t  SM0CVAL4CYC;                  /**< 0052: Capture Value 4 Cycle Register                               */
   __I  uint16_t  SM0CVAL5;                     /**< 0054: Capture Value 5 Register                                     */
   __I  uint16_t  SM0CVAL5CYC;                  /**< 0056: Capture Value 5 Cycle Register                               */
        uint8_t   RESERVED_2[8];                /**< 0058: 0x8 bytes                                                    */
   __I  uint16_t  SM1CNT;                       /**< 0060: Counter Register                                             */
   __IO uint16_t  SM1INIT;                      /**< 0062: Initial Count Register                                       */
   __IO uint16_t  SM1CTRL2;                     /**< 0064: Control 2 Register                                           */
   __IO uint16_t  SM1CTRL;                      /**< 0066: Control Register                                             */
        uint8_t   RESERVED_3[2];                /**< 0068: 0x2 bytes                                                    */
   __IO uint16_t  SM1VAL0;                      /**< 006A: Value Register 0                                             */
   __IO uint16_t  SM1FRACVAL1;                  /**< 006C: Fractional Value Register 1                                  */
   __IO uint16_t  SM1VAL1;                      /**< 006E: Value Register 1                                             */
   __IO uint16_t  SM1FRACVAL2;                  /**< 0070: Fractional Value Register 2                                  */
   __IO uint16_t  SM1VAL2;                      /**< 0072: Value Register 2                                             */
   __IO uint16_t  SM1FRACVAL3;                  /**< 0074: Fractional Value Register 3                                  */
   __IO uint16_t  SM1VAL3;                      /**< 0076: Value Register 3                                             */
   __IO uint16_t  SM1FRACVAL4;                  /**< 0078: Fractional Value Register 4                                  */
   __IO uint16_t  SM1VAL4;                      /**< 007A: Value Register 4                                             */
   __IO uint16_t  SM1FRACVAL5;                  /**< 007C: Fractional Value Register 5                                  */
   __IO uint16_t  SM1VAL5;                      /**< 007E: Value Register 5                                             */
   __IO uint16_t  SM1FRCTRL;                    /**< 0080: Fractional Control Register                                  */
   __IO uint16_t  SM1OCTRL;                     /**< 0082: Output Control Register                                      */
   __IO uint16_t  SM1STS;                       /**< 0084: Status Register                                              */
   __IO uint16_t  SM1INTEN;                     /**< 0086: Interrupt Enable Register                                    */
   __IO uint16_t  SM1DMAEN;                     /**< 0088: DMA Enable Register                                          */
   __IO uint16_t  SM1TCTRL;                     /**< 008A: Output Trigger Control Register                              */
   __IO uint16_t  SM1DISMAP0;                   /**< 008C: Fault Disable Mapping Register 0                             */
        uint8_t   RESERVED_4[2];                /**< 008E: 0x2 bytes                                                    */
   __IO uint16_t  SM1DTCNT[2];                  /**< 0090: Deadtime Count Register                                      */
   __IO uint16_t  SM1CAPTCTRLA;                 /**< 0094: Capture Control A Register                                   */
   __IO uint16_t  SM1CAPTCOMPA;                 /**< 0096: Capture Compare A Register                                   */
   __IO uint16_t  SM1CAPTCTRLB;                 /**< 0098: Capture Control B Register                                   */
   __IO uint16_t  SM1CAPTCOMPB;                 /**< 009A: Capture Compare B Register                                   */
   __IO uint16_t  SM1CAPTCTRLX;                 /**< 009C: Capture Control X Register                                   */
   __IO uint16_t  SM1CAPTCOMPX;                 /**< 009E: Capture Compare X Register                                   */
   __I  uint16_t  SM1CVAL0;                     /**< 00A0: Capture Value 0 Register                                     */
   __I  uint16_t  SM1CVAL0CYC;                  /**< 00A2: Capture Value 0 Cycle Register                               */
   __I  uint16_t  SM1CVAL1;                     /**< 00A4: Capture Value 1 Register                                     */
   __I  uint16_t  SM1CVAL1CYC;                  /**< 00A6: Capture Value 1 Cycle Register                               */
   __I  uint16_t  SM1CVAL2;                     /**< 00A8: Capture Value 2 Register                                     */
   __I  uint16_t  SM1CVAL2CYC;                  /**< 00AA: Capture Value 2 Cycle Register                               */
   __I  uint16_t  SM1CVAL3;                     /**< 00AC: Capture Value 3 Register                                     */
   __I  uint16_t  SM1CVAL3CYC;                  /**< 00AE: Capture Value 3 Cycle Register                               */
   __I  uint16_t  SM1CVAL4;                     /**< 00B0: Capture Value 4 Register                                     */
   __I  uint16_t  SM1CVAL4CYC;                  /**< 00B2: Capture Value 4 Cycle Register                               */
   __I  uint16_t  SM1CVAL5;                     /**< 00B4: Capture Value 5 Register                                     */
   __I  uint16_t  SM1CVAL5CYC;                  /**< 00B6: Capture Value 5 Cycle Register                               */
        uint8_t   RESERVED_5[8];                /**< 00B8: 0x8 bytes                                                    */
   __I  uint16_t  SM2CNT;                       /**< 00C0: Counter Register                                             */
   __IO uint16_t  SM2INIT;                      /**< 00C2: Initial Count Register                                       */
   __IO uint16_t  SM2CTRL2;                     /**< 00C4: Control 2 Register                                           */
   __IO uint16_t  SM2CTRL;                      /**< 00C6: Control Register                                             */
        uint8_t   RESERVED_6[2];                /**< 00C8: 0x2 bytes                                                    */
   __IO uint16_t  SM2VAL0;                      /**< 00CA: Value Register 0                                             */
   __IO uint16_t  SM2FRACVAL1;                  /**< 00CC: Fractional Value Register 1                                  */
   __IO uint16_t  SM2VAL1;                      /**< 00CE: Value Register 1                                             */
   __IO uint16_t  SM2FRACVAL2;                  /**< 00D0: Fractional Value Register 2                                  */
   __IO uint16_t  SM2VAL2;                      /**< 00D2: Value Register 2                                             */
   __IO uint16_t  SM2FRACVAL3;                  /**< 00D4: Fractional Value Register 3                                  */
   __IO uint16_t  SM2VAL3;                      /**< 00D6: Value Register 3                                             */
   __IO uint16_t  SM2FRACVAL4;                  /**< 00D8: Fractional Value Register 4                                  */
   __IO uint16_t  SM2VAL4;                      /**< 00DA: Value Register 4                                             */
   __IO uint16_t  SM2FRACVAL5;                  /**< 00DC: Fractional Value Register 5                                  */
   __IO uint16_t  SM2VAL5;                      /**< 00DE: Value Register 5                                             */
   __IO uint16_t  SM2FRCTRL;                    /**< 00E0: Fractional Control Register                                  */
   __IO uint16_t  SM2OCTRL;                     /**< 00E2: Output Control Register                                      */
   __IO uint16_t  SM2STS;                       /**< 00E4: Status Register                                              */
   __IO uint16_t  SM2INTEN;                     /**< 00E6: Interrupt Enable Register                                    */
   __IO uint16_t  SM2DMAEN;                     /**< 00E8: DMA Enable Register                                          */
   __IO uint16_t  SM2TCTRL;                     /**< 00EA: Output Trigger Control Register                              */
   __IO uint16_t  SM2DISMAP0;                   /**< 00EC: Fault Disable Mapping Register 0                             */
        uint8_t   RESERVED_7[2];                /**< 00EE: 0x2 bytes                                                    */
   __IO uint16_t  SM2DTCNT[2];                  /**< 00F0: Deadtime Count Register                                      */
   __IO uint16_t  SM2CAPTCTRLA;                 /**< 00F4: Capture Control A Register                                   */
   __IO uint16_t  SM2CAPTCOMPA;                 /**< 00F6: Capture Compare A Register                                   */
   __IO uint16_t  SM2CAPTCTRLB;                 /**< 00F8: Capture Control B Register                                   */
   __IO uint16_t  SM2CAPTCOMPB;                 /**< 00FA: Capture Compare B Register                                   */
   __IO uint16_t  SM2CAPTCTRLX;                 /**< 00FC: Capture Control X Register                                   */
   __IO uint16_t  SM2CAPTCOMPX;                 /**< 00FE: Capture Compare X Register                                   */
   __I  uint16_t  SM2CVAL0;                     /**< 0100: Capture Value 0 Register                                     */
   __I  uint16_t  SM2CVAL0CYC;                  /**< 0102: Capture Value 0 Cycle Register                               */
   __I  uint16_t  SM2CVAL1;                     /**< 0104: Capture Value 1 Register                                     */
   __I  uint16_t  SM2CVAL1CYC;                  /**< 0106: Capture Value 1 Cycle Register                               */
   __I  uint16_t  SM2CVAL2;                     /**< 0108: Capture Value 2 Register                                     */
   __I  uint16_t  SM2CVAL2CYC;                  /**< 010A: Capture Value 2 Cycle Register                               */
   __I  uint16_t  SM2CVAL3;                     /**< 010C: Capture Value 3 Register                                     */
   __I  uint16_t  SM2CVAL3CYC;                  /**< 010E: Capture Value 3 Cycle Register                               */
   __I  uint16_t  SM2CVAL4;                     /**< 0110: Capture Value 4 Register                                     */
   __I  uint16_t  SM2CVAL4CYC;                  /**< 0112: Capture Value 4 Cycle Register                               */
   __I  uint16_t  SM2CVAL5;                     /**< 0114: Capture Value 5 Register                                     */
   __I  uint16_t  SM2CVAL5CYC;                  /**< 0116: Capture Value 5 Cycle Register                               */
        uint8_t   RESERVED_8[8];                /**< 0118: 0x8 bytes                                                    */
   __I  uint16_t  SM3CNT;                       /**< 0120: Counter Register                                             */
   __IO uint16_t  SM3INIT;                      /**< 0122: Initial Count Register                                       */
   __IO uint16_t  SM3CTRL2;                     /**< 0124: Control 2 Register                                           */
   __IO uint16_t  SM3CTRL;                      /**< 0126: Control Register                                             */
        uint8_t   RESERVED_9[2];                /**< 0128: 0x2 bytes                                                    */
   __IO uint16_t  SM3VAL0;                      /**< 012A: Value Register 0                                             */
   __IO uint16_t  SM3FRACVAL1;                  /**< 012C: Fractional Value Register 1                                  */
   __IO uint16_t  SM3VAL1;                      /**< 012E: Value Register 1                                             */
   __IO uint16_t  SM3FRACVAL2;                  /**< 0130: Fractional Value Register 2                                  */
   __IO uint16_t  SM3VAL2;                      /**< 0132: Value Register 2                                             */
   __IO uint16_t  SM3FRACVAL3;                  /**< 0134: Fractional Value Register 3                                  */
   __IO uint16_t  SM3VAL3;                      /**< 0136: Value Register 3                                             */
   __IO uint16_t  SM3FRACVAL4;                  /**< 0138: Fractional Value Register 4                                  */
   __IO uint16_t  SM3VAL4;                      /**< 013A: Value Register 4                                             */
   __IO uint16_t  SM3FRACVAL5;                  /**< 013C: Fractional Value Register 5                                  */
   __IO uint16_t  SM3VAL5;                      /**< 013E: Value Register 5                                             */
   __IO uint16_t  SM3FRCTRL;                    /**< 0140: Fractional Control Register                                  */
   __IO uint16_t  SM3OCTRL;                     /**< 0142: Output Control Register                                      */
   __IO uint16_t  SM3STS;                       /**< 0144: Status Register                                              */
   __IO uint16_t  SM3INTEN;                     /**< 0146: Interrupt Enable Register                                    */
   __IO uint16_t  SM3DMAEN;                     /**< 0148: DMA Enable Register                                          */
   __IO uint16_t  SM3TCTRL;                     /**< 014A: Output Trigger Control Register                              */
   __IO uint16_t  SM3DISMAP0;                   /**< 014C: Fault Disable Mapping Register 0                             */
        uint8_t   RESERVED_10[2];               /**< 014E: 0x2 bytes                                                    */
   __IO uint16_t  SM3DTCNT[2];                  /**< 0150: Deadtime Count Register                                      */
   __IO uint16_t  SM3CAPTCTRLA;                 /**< 0154: Capture Control A Register                                   */
   __IO uint16_t  SM3CAPTCOMPA;                 /**< 0156: Capture Compare A Register                                   */
   __IO uint16_t  SM3CAPTCTRLB;                 /**< 0158: Capture Control B Register                                   */
   __IO uint16_t  SM3CAPTCOMPB;                 /**< 015A: Capture Compare B Register                                   */
   __IO uint16_t  SM3CAPTCTRLX;                 /**< 015C: Capture Control X Register                                   */
   __IO uint16_t  SM3CAPTCOMPX;                 /**< 015E: Capture Compare X Register                                   */
   __I  uint16_t  SM3CVAL0;                     /**< 0160: Capture Value 0 Register                                     */
   __I  uint16_t  SM3CVAL0CYC;                  /**< 0162: Capture Value 0 Cycle Register                               */
   __I  uint16_t  SM3CVAL1;                     /**< 0164: Capture Value 1 Register                                     */
   __I  uint16_t  SM3CVAL1CYC;                  /**< 0166: Capture Value 1 Cycle Register                               */
   __I  uint16_t  SM3CVAL2;                     /**< 0168: Capture Value 2 Register                                     */
   __I  uint16_t  SM3CVAL2CYC;                  /**< 016A: Capture Value 2 Cycle Register                               */
   __I  uint16_t  SM3CVAL3;                     /**< 016C: Capture Value 3 Register                                     */
   __I  uint16_t  SM3CVAL3CYC;                  /**< 016E: Capture Value 3 Cycle Register                               */
   __I  uint16_t  SM3CVAL4;                     /**< 0170: Capture Value 4 Register                                     */
   __I  uint16_t  SM3CVAL4CYC;                  /**< 0172: Capture Value 4 Cycle Register                               */
   __I  uint16_t  SM3CVAL5;                     /**< 0174: Capture Value 5 Register                                     */
   __I  uint16_t  SM3CVAL5CYC;                  /**< 0176: Capture Value 5 Cycle Register                               */
        uint8_t   RESERVED_11[8];               /**< 0178: 0x8 bytes                                                    */
   __IO uint16_t  OUTEN;                        /**< 0180: Output Enable Register                                       */
   __IO uint16_t  MASK;                         /**< 0182: Mask Register                                                */
   __IO uint16_t  SWCOUT;                       /**< 0184: Software Controlled Output Register                          */
   __IO uint16_t  DTSRCSEL;                     /**< 0186: PWM Source Select Register                                   */
   __IO uint16_t  MCTRL;                        /**< 0188: Master Control Register                                      */
   __IO uint16_t  MCTRL2;                       /**< 018A: Master Control 2 Register                                    */
   __IO uint16_t  FCTRL;                        /**< 018C: Fault Control Register                                       */
   __IO uint16_t  FSTS;                         /**< 018E: Fault Status Register                                        */
   __IO uint16_t  FFILT;                        /**< 0190: Fault Filter Register                                        */
   __IO uint16_t  FTST;                         /**< 0192: Fault Test Register                                          */
   __IO uint16_t  FCTRL2;                       /**< 0194: Fault Control 2 Register                                     */
} PWMA_Type;

/**
 * @} */ /* End group PWMA_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'PWMA' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup PWMA_Register_Masks_GROUP PWMA Register Masks
* @brief Register Masks for PWMA
* @{
*/

/*! @name SM0CNT - Counter Register */
#define PWMA_SM0CNT_CNT_MASK                     (0xFFFFU)                                           /*!< PWMA_SM0CNT.CNT Mask                    */
#define PWMA_SM0CNT_CNT_SHIFT                    (0U)                                                /*!< PWMA_SM0CNT.CNT Position                */
#define PWMA_SM0CNT_CNT(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CNT_CNT_SHIFT))&PWMA_SM0CNT_CNT_MASK) /*!< PWMA_SM0CNT.CNT Field                   */

/*! @name SM0INIT - Initial Count Register */
#define PWMA_SM0INIT_INIT_MASK                   (0xFFFFU)                                           /*!< PWMA_SM0INIT.INIT Mask                  */
#define PWMA_SM0INIT_INIT_SHIFT                  (0U)                                                /*!< PWMA_SM0INIT.INIT Position              */
#define PWMA_SM0INIT_INIT(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0INIT_INIT_SHIFT))&PWMA_SM0INIT_INIT_MASK) /*!< PWMA_SM0INIT.INIT Field                 */

/*! @name SM0CTRL2 - Control 2 Register */
#define PWMA_SM0CTRL2_CLK_SEL_MASK               (0x3U)                                              /*!< PWMA_SM0CTRL2.CLK_SEL Mask              */
#define PWMA_SM0CTRL2_CLK_SEL_SHIFT              (0U)                                                /*!< PWMA_SM0CTRL2.CLK_SEL Position          */
#define PWMA_SM0CTRL2_CLK_SEL(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_CLK_SEL_SHIFT))&PWMA_SM0CTRL2_CLK_SEL_MASK) /*!< PWMA_SM0CTRL2.CLK_SEL Field             */
#define PWMA_SM0CTRL2_RELOAD_SEL_MASK            (0x4U)                                              /*!< PWMA_SM0CTRL2.RELOAD_SEL Mask           */
#define PWMA_SM0CTRL2_RELOAD_SEL_SHIFT           (2U)                                                /*!< PWMA_SM0CTRL2.RELOAD_SEL Position       */
#define PWMA_SM0CTRL2_RELOAD_SEL(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_RELOAD_SEL_SHIFT))&PWMA_SM0CTRL2_RELOAD_SEL_MASK) /*!< PWMA_SM0CTRL2.RELOAD_SEL Field          */
#define PWMA_SM0CTRL2_FORCE_SEL_MASK             (0x38U)                                             /*!< PWMA_SM0CTRL2.FORCE_SEL Mask            */
#define PWMA_SM0CTRL2_FORCE_SEL_SHIFT            (3U)                                                /*!< PWMA_SM0CTRL2.FORCE_SEL Position        */
#define PWMA_SM0CTRL2_FORCE_SEL(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_FORCE_SEL_SHIFT))&PWMA_SM0CTRL2_FORCE_SEL_MASK) /*!< PWMA_SM0CTRL2.FORCE_SEL Field           */
#define PWMA_SM0CTRL2_FORCE_MASK                 (0x40U)                                             /*!< PWMA_SM0CTRL2.FORCE Mask                */
#define PWMA_SM0CTRL2_FORCE_SHIFT                (6U)                                                /*!< PWMA_SM0CTRL2.FORCE Position            */
#define PWMA_SM0CTRL2_FORCE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_FORCE_SHIFT))&PWMA_SM0CTRL2_FORCE_MASK) /*!< PWMA_SM0CTRL2.FORCE Field               */
#define PWMA_SM0CTRL2_FRCEN_MASK                 (0x80U)                                             /*!< PWMA_SM0CTRL2.FRCEN Mask                */
#define PWMA_SM0CTRL2_FRCEN_SHIFT                (7U)                                                /*!< PWMA_SM0CTRL2.FRCEN Position            */
#define PWMA_SM0CTRL2_FRCEN(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_FRCEN_SHIFT))&PWMA_SM0CTRL2_FRCEN_MASK) /*!< PWMA_SM0CTRL2.FRCEN Field               */
#define PWMA_SM0CTRL2_INIT_SEL_MASK              (0x300U)                                            /*!< PWMA_SM0CTRL2.INIT_SEL Mask             */
#define PWMA_SM0CTRL2_INIT_SEL_SHIFT             (8U)                                                /*!< PWMA_SM0CTRL2.INIT_SEL Position         */
#define PWMA_SM0CTRL2_INIT_SEL(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_INIT_SEL_SHIFT))&PWMA_SM0CTRL2_INIT_SEL_MASK) /*!< PWMA_SM0CTRL2.INIT_SEL Field            */
#define PWMA_SM0CTRL2_PWMX_INIT_MASK             (0x400U)                                            /*!< PWMA_SM0CTRL2.PWMX_INIT Mask            */
#define PWMA_SM0CTRL2_PWMX_INIT_SHIFT            (10U)                                               /*!< PWMA_SM0CTRL2.PWMX_INIT Position        */
#define PWMA_SM0CTRL2_PWMX_INIT(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_PWMX_INIT_SHIFT))&PWMA_SM0CTRL2_PWMX_INIT_MASK) /*!< PWMA_SM0CTRL2.PWMX_INIT Field           */
#define PWMA_SM0CTRL2_PWM45_INIT_MASK            (0x800U)                                            /*!< PWMA_SM0CTRL2.PWM45_INIT Mask           */
#define PWMA_SM0CTRL2_PWM45_INIT_SHIFT           (11U)                                               /*!< PWMA_SM0CTRL2.PWM45_INIT Position       */
#define PWMA_SM0CTRL2_PWM45_INIT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_PWM45_INIT_SHIFT))&PWMA_SM0CTRL2_PWM45_INIT_MASK) /*!< PWMA_SM0CTRL2.PWM45_INIT Field          */
#define PWMA_SM0CTRL2_PWM23_INIT_MASK            (0x1000U)                                           /*!< PWMA_SM0CTRL2.PWM23_INIT Mask           */
#define PWMA_SM0CTRL2_PWM23_INIT_SHIFT           (12U)                                               /*!< PWMA_SM0CTRL2.PWM23_INIT Position       */
#define PWMA_SM0CTRL2_PWM23_INIT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_PWM23_INIT_SHIFT))&PWMA_SM0CTRL2_PWM23_INIT_MASK) /*!< PWMA_SM0CTRL2.PWM23_INIT Field          */
#define PWMA_SM0CTRL2_INDEP_MASK                 (0x2000U)                                           /*!< PWMA_SM0CTRL2.INDEP Mask                */
#define PWMA_SM0CTRL2_INDEP_SHIFT                (13U)                                               /*!< PWMA_SM0CTRL2.INDEP Position            */
#define PWMA_SM0CTRL2_INDEP(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_INDEP_SHIFT))&PWMA_SM0CTRL2_INDEP_MASK) /*!< PWMA_SM0CTRL2.INDEP Field               */
#define PWMA_SM0CTRL2_WAITEN_MASK                (0x4000U)                                           /*!< PWMA_SM0CTRL2.WAITEN Mask               */
#define PWMA_SM0CTRL2_WAITEN_SHIFT               (14U)                                               /*!< PWMA_SM0CTRL2.WAITEN Position           */
#define PWMA_SM0CTRL2_WAITEN(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_WAITEN_SHIFT))&PWMA_SM0CTRL2_WAITEN_MASK) /*!< PWMA_SM0CTRL2.WAITEN Field              */
#define PWMA_SM0CTRL2_DBGEN_MASK                 (0x8000U)                                           /*!< PWMA_SM0CTRL2.DBGEN Mask                */
#define PWMA_SM0CTRL2_DBGEN_SHIFT                (15U)                                               /*!< PWMA_SM0CTRL2.DBGEN Position            */
#define PWMA_SM0CTRL2_DBGEN(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL2_DBGEN_SHIFT))&PWMA_SM0CTRL2_DBGEN_MASK) /*!< PWMA_SM0CTRL2.DBGEN Field               */

/*! @name SM0CTRL - Control Register */
#define PWMA_SM0CTRL_DBLEN_MASK                  (0x1U)                                              /*!< PWMA_SM0CTRL.DBLEN Mask                 */
#define PWMA_SM0CTRL_DBLEN_SHIFT                 (0U)                                                /*!< PWMA_SM0CTRL.DBLEN Position             */
#define PWMA_SM0CTRL_DBLEN(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL_DBLEN_SHIFT))&PWMA_SM0CTRL_DBLEN_MASK) /*!< PWMA_SM0CTRL.DBLEN Field                */
#define PWMA_SM0CTRL_DBLX_MASK                   (0x2U)                                              /*!< PWMA_SM0CTRL.DBLX Mask                  */
#define PWMA_SM0CTRL_DBLX_SHIFT                  (1U)                                                /*!< PWMA_SM0CTRL.DBLX Position              */
#define PWMA_SM0CTRL_DBLX(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL_DBLX_SHIFT))&PWMA_SM0CTRL_DBLX_MASK) /*!< PWMA_SM0CTRL.DBLX Field                 */
#define PWMA_SM0CTRL_LDMOD_MASK                  (0x4U)                                              /*!< PWMA_SM0CTRL.LDMOD Mask                 */
#define PWMA_SM0CTRL_LDMOD_SHIFT                 (2U)                                                /*!< PWMA_SM0CTRL.LDMOD Position             */
#define PWMA_SM0CTRL_LDMOD(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL_LDMOD_SHIFT))&PWMA_SM0CTRL_LDMOD_MASK) /*!< PWMA_SM0CTRL.LDMOD Field                */
#define PWMA_SM0CTRL_PRSC_MASK                   (0x70U)                                             /*!< PWMA_SM0CTRL.PRSC Mask                  */
#define PWMA_SM0CTRL_PRSC_SHIFT                  (4U)                                                /*!< PWMA_SM0CTRL.PRSC Position              */
#define PWMA_SM0CTRL_PRSC(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL_PRSC_SHIFT))&PWMA_SM0CTRL_PRSC_MASK) /*!< PWMA_SM0CTRL.PRSC Field                 */
#define PWMA_SM0CTRL_DT_MASK                     (0x300U)                                            /*!< PWMA_SM0CTRL.DT Mask                    */
#define PWMA_SM0CTRL_DT_SHIFT                    (8U)                                                /*!< PWMA_SM0CTRL.DT Position                */
#define PWMA_SM0CTRL_DT(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL_DT_SHIFT))&PWMA_SM0CTRL_DT_MASK) /*!< PWMA_SM0CTRL.DT Field                   */
#define PWMA_SM0CTRL_FULL_MASK                   (0x400U)                                            /*!< PWMA_SM0CTRL.FULL Mask                  */
#define PWMA_SM0CTRL_FULL_SHIFT                  (10U)                                               /*!< PWMA_SM0CTRL.FULL Position              */
#define PWMA_SM0CTRL_FULL(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL_FULL_SHIFT))&PWMA_SM0CTRL_FULL_MASK) /*!< PWMA_SM0CTRL.FULL Field                 */
#define PWMA_SM0CTRL_HALF_MASK                   (0x800U)                                            /*!< PWMA_SM0CTRL.HALF Mask                  */
#define PWMA_SM0CTRL_HALF_SHIFT                  (11U)                                               /*!< PWMA_SM0CTRL.HALF Position              */
#define PWMA_SM0CTRL_HALF(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL_HALF_SHIFT))&PWMA_SM0CTRL_HALF_MASK) /*!< PWMA_SM0CTRL.HALF Field                 */
#define PWMA_SM0CTRL_LDFQ_MASK                   (0xF000U)                                           /*!< PWMA_SM0CTRL.LDFQ Mask                  */
#define PWMA_SM0CTRL_LDFQ_SHIFT                  (12U)                                               /*!< PWMA_SM0CTRL.LDFQ Position              */
#define PWMA_SM0CTRL_LDFQ(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CTRL_LDFQ_SHIFT))&PWMA_SM0CTRL_LDFQ_MASK) /*!< PWMA_SM0CTRL.LDFQ Field                 */

/*! @name SM0VAL0 - Value Register 0 */
#define PWMA_SM0VAL0_VAL0_MASK                   (0xFFFFU)                                           /*!< PWMA_SM0VAL0.VAL0 Mask                  */
#define PWMA_SM0VAL0_VAL0_SHIFT                  (0U)                                                /*!< PWMA_SM0VAL0.VAL0 Position              */
#define PWMA_SM0VAL0_VAL0(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0VAL0_VAL0_SHIFT))&PWMA_SM0VAL0_VAL0_MASK) /*!< PWMA_SM0VAL0.VAL0 Field                 */

/*! @name SM0FRACVAL1 - Fractional Value Register 1 */
#define PWMA_SM0FRACVAL1_FRACVAL1_MASK           (0xF800U)                                           /*!< PWMA_SM0FRACVAL1.FRACVAL1 Mask          */
#define PWMA_SM0FRACVAL1_FRACVAL1_SHIFT          (11U)                                               /*!< PWMA_SM0FRACVAL1.FRACVAL1 Position      */
#define PWMA_SM0FRACVAL1_FRACVAL1(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0FRACVAL1_FRACVAL1_SHIFT))&PWMA_SM0FRACVAL1_FRACVAL1_MASK) /*!< PWMA_SM0FRACVAL1.FRACVAL1 Field         */

/*! @name SM0VAL1 - Value Register 1 */
#define PWMA_SM0VAL1_VAL1_MASK                   (0xFFFFU)                                           /*!< PWMA_SM0VAL1.VAL1 Mask                  */
#define PWMA_SM0VAL1_VAL1_SHIFT                  (0U)                                                /*!< PWMA_SM0VAL1.VAL1 Position              */
#define PWMA_SM0VAL1_VAL1(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0VAL1_VAL1_SHIFT))&PWMA_SM0VAL1_VAL1_MASK) /*!< PWMA_SM0VAL1.VAL1 Field                 */

/*! @name SM0FRACVAL2 - Fractional Value Register 2 */
#define PWMA_SM0FRACVAL2_FRACVAL2_MASK           (0xF800U)                                           /*!< PWMA_SM0FRACVAL2.FRACVAL2 Mask          */
#define PWMA_SM0FRACVAL2_FRACVAL2_SHIFT          (11U)                                               /*!< PWMA_SM0FRACVAL2.FRACVAL2 Position      */
#define PWMA_SM0FRACVAL2_FRACVAL2(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0FRACVAL2_FRACVAL2_SHIFT))&PWMA_SM0FRACVAL2_FRACVAL2_MASK) /*!< PWMA_SM0FRACVAL2.FRACVAL2 Field         */

/*! @name SM0VAL2 - Value Register 2 */
#define PWMA_SM0VAL2_VAL2_MASK                   (0xFFFFU)                                           /*!< PWMA_SM0VAL2.VAL2 Mask                  */
#define PWMA_SM0VAL2_VAL2_SHIFT                  (0U)                                                /*!< PWMA_SM0VAL2.VAL2 Position              */
#define PWMA_SM0VAL2_VAL2(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0VAL2_VAL2_SHIFT))&PWMA_SM0VAL2_VAL2_MASK) /*!< PWMA_SM0VAL2.VAL2 Field                 */

/*! @name SM0FRACVAL3 - Fractional Value Register 3 */
#define PWMA_SM0FRACVAL3_FRACVAL3_MASK           (0xF800U)                                           /*!< PWMA_SM0FRACVAL3.FRACVAL3 Mask          */
#define PWMA_SM0FRACVAL3_FRACVAL3_SHIFT          (11U)                                               /*!< PWMA_SM0FRACVAL3.FRACVAL3 Position      */
#define PWMA_SM0FRACVAL3_FRACVAL3(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0FRACVAL3_FRACVAL3_SHIFT))&PWMA_SM0FRACVAL3_FRACVAL3_MASK) /*!< PWMA_SM0FRACVAL3.FRACVAL3 Field         */

/*! @name SM0VAL3 - Value Register 3 */
#define PWMA_SM0VAL3_VAL3_MASK                   (0xFFFFU)                                           /*!< PWMA_SM0VAL3.VAL3 Mask                  */
#define PWMA_SM0VAL3_VAL3_SHIFT                  (0U)                                                /*!< PWMA_SM0VAL3.VAL3 Position              */
#define PWMA_SM0VAL3_VAL3(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0VAL3_VAL3_SHIFT))&PWMA_SM0VAL3_VAL3_MASK) /*!< PWMA_SM0VAL3.VAL3 Field                 */

/*! @name SM0FRACVAL4 - Fractional Value Register 4 */
#define PWMA_SM0FRACVAL4_FRACVAL4_MASK           (0xF800U)                                           /*!< PWMA_SM0FRACVAL4.FRACVAL4 Mask          */
#define PWMA_SM0FRACVAL4_FRACVAL4_SHIFT          (11U)                                               /*!< PWMA_SM0FRACVAL4.FRACVAL4 Position      */
#define PWMA_SM0FRACVAL4_FRACVAL4(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0FRACVAL4_FRACVAL4_SHIFT))&PWMA_SM0FRACVAL4_FRACVAL4_MASK) /*!< PWMA_SM0FRACVAL4.FRACVAL4 Field         */

/*! @name SM0VAL4 - Value Register 4 */
#define PWMA_SM0VAL4_VAL4_MASK                   (0xFFFFU)                                           /*!< PWMA_SM0VAL4.VAL4 Mask                  */
#define PWMA_SM0VAL4_VAL4_SHIFT                  (0U)                                                /*!< PWMA_SM0VAL4.VAL4 Position              */
#define PWMA_SM0VAL4_VAL4(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0VAL4_VAL4_SHIFT))&PWMA_SM0VAL4_VAL4_MASK) /*!< PWMA_SM0VAL4.VAL4 Field                 */

/*! @name SM0FRACVAL5 - Fractional Value Register 5 */
#define PWMA_SM0FRACVAL5_FRACVAL5_MASK           (0xF800U)                                           /*!< PWMA_SM0FRACVAL5.FRACVAL5 Mask          */
#define PWMA_SM0FRACVAL5_FRACVAL5_SHIFT          (11U)                                               /*!< PWMA_SM0FRACVAL5.FRACVAL5 Position      */
#define PWMA_SM0FRACVAL5_FRACVAL5(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0FRACVAL5_FRACVAL5_SHIFT))&PWMA_SM0FRACVAL5_FRACVAL5_MASK) /*!< PWMA_SM0FRACVAL5.FRACVAL5 Field         */

/*! @name SM0VAL5 - Value Register 5 */
#define PWMA_SM0VAL5_VAL5_MASK                   (0xFFFFU)                                           /*!< PWMA_SM0VAL5.VAL5 Mask                  */
#define PWMA_SM0VAL5_VAL5_SHIFT                  (0U)                                                /*!< PWMA_SM0VAL5.VAL5 Position              */
#define PWMA_SM0VAL5_VAL5(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0VAL5_VAL5_SHIFT))&PWMA_SM0VAL5_VAL5_MASK) /*!< PWMA_SM0VAL5.VAL5 Field                 */

/*! @name SM0FRCTRL - Fractional Control Register */
#define PWMA_SM0FRCTRL_FRAC1_EN_MASK             (0x2U)                                              /*!< PWMA_SM0FRCTRL.FRAC1_EN Mask            */
#define PWMA_SM0FRCTRL_FRAC1_EN_SHIFT            (1U)                                                /*!< PWMA_SM0FRCTRL.FRAC1_EN Position        */
#define PWMA_SM0FRCTRL_FRAC1_EN(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0FRCTRL_FRAC1_EN_SHIFT))&PWMA_SM0FRCTRL_FRAC1_EN_MASK) /*!< PWMA_SM0FRCTRL.FRAC1_EN Field           */
#define PWMA_SM0FRCTRL_FRAC23_EN_MASK            (0x4U)                                              /*!< PWMA_SM0FRCTRL.FRAC23_EN Mask           */
#define PWMA_SM0FRCTRL_FRAC23_EN_SHIFT           (2U)                                                /*!< PWMA_SM0FRCTRL.FRAC23_EN Position       */
#define PWMA_SM0FRCTRL_FRAC23_EN(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0FRCTRL_FRAC23_EN_SHIFT))&PWMA_SM0FRCTRL_FRAC23_EN_MASK) /*!< PWMA_SM0FRCTRL.FRAC23_EN Field          */
#define PWMA_SM0FRCTRL_FRAC45_EN_MASK            (0x10U)                                             /*!< PWMA_SM0FRCTRL.FRAC45_EN Mask           */
#define PWMA_SM0FRCTRL_FRAC45_EN_SHIFT           (4U)                                                /*!< PWMA_SM0FRCTRL.FRAC45_EN Position       */
#define PWMA_SM0FRCTRL_FRAC45_EN(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0FRCTRL_FRAC45_EN_SHIFT))&PWMA_SM0FRCTRL_FRAC45_EN_MASK) /*!< PWMA_SM0FRCTRL.FRAC45_EN Field          */
#define PWMA_SM0FRCTRL_FRAC_PU_MASK              (0x100U)                                            /*!< PWMA_SM0FRCTRL.FRAC_PU Mask             */
#define PWMA_SM0FRCTRL_FRAC_PU_SHIFT             (8U)                                                /*!< PWMA_SM0FRCTRL.FRAC_PU Position         */
#define PWMA_SM0FRCTRL_FRAC_PU(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0FRCTRL_FRAC_PU_SHIFT))&PWMA_SM0FRCTRL_FRAC_PU_MASK) /*!< PWMA_SM0FRCTRL.FRAC_PU Field            */
#define PWMA_SM0FRCTRL_TEST_MASK                 (0x8000U)                                           /*!< PWMA_SM0FRCTRL.TEST Mask                */
#define PWMA_SM0FRCTRL_TEST_SHIFT                (15U)                                               /*!< PWMA_SM0FRCTRL.TEST Position            */
#define PWMA_SM0FRCTRL_TEST(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0FRCTRL_TEST_SHIFT))&PWMA_SM0FRCTRL_TEST_MASK) /*!< PWMA_SM0FRCTRL.TEST Field               */

/*! @name SM0OCTRL - Output Control Register */
#define PWMA_SM0OCTRL_PWMXFS_MASK                (0x3U)                                              /*!< PWMA_SM0OCTRL.PWMXFS Mask               */
#define PWMA_SM0OCTRL_PWMXFS_SHIFT               (0U)                                                /*!< PWMA_SM0OCTRL.PWMXFS Position           */
#define PWMA_SM0OCTRL_PWMXFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM0OCTRL_PWMXFS_SHIFT))&PWMA_SM0OCTRL_PWMXFS_MASK) /*!< PWMA_SM0OCTRL.PWMXFS Field              */
#define PWMA_SM0OCTRL_PWMBFS_MASK                (0xCU)                                              /*!< PWMA_SM0OCTRL.PWMBFS Mask               */
#define PWMA_SM0OCTRL_PWMBFS_SHIFT               (2U)                                                /*!< PWMA_SM0OCTRL.PWMBFS Position           */
#define PWMA_SM0OCTRL_PWMBFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM0OCTRL_PWMBFS_SHIFT))&PWMA_SM0OCTRL_PWMBFS_MASK) /*!< PWMA_SM0OCTRL.PWMBFS Field              */
#define PWMA_SM0OCTRL_PWMAFS_MASK                (0x30U)                                             /*!< PWMA_SM0OCTRL.PWMAFS Mask               */
#define PWMA_SM0OCTRL_PWMAFS_SHIFT               (4U)                                                /*!< PWMA_SM0OCTRL.PWMAFS Position           */
#define PWMA_SM0OCTRL_PWMAFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM0OCTRL_PWMAFS_SHIFT))&PWMA_SM0OCTRL_PWMAFS_MASK) /*!< PWMA_SM0OCTRL.PWMAFS Field              */
#define PWMA_SM0OCTRL_POLX_MASK                  (0x100U)                                            /*!< PWMA_SM0OCTRL.POLX Mask                 */
#define PWMA_SM0OCTRL_POLX_SHIFT                 (8U)                                                /*!< PWMA_SM0OCTRL.POLX Position             */
#define PWMA_SM0OCTRL_POLX(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM0OCTRL_POLX_SHIFT))&PWMA_SM0OCTRL_POLX_MASK) /*!< PWMA_SM0OCTRL.POLX Field                */
#define PWMA_SM0OCTRL_POLB_MASK                  (0x200U)                                            /*!< PWMA_SM0OCTRL.POLB Mask                 */
#define PWMA_SM0OCTRL_POLB_SHIFT                 (9U)                                                /*!< PWMA_SM0OCTRL.POLB Position             */
#define PWMA_SM0OCTRL_POLB(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM0OCTRL_POLB_SHIFT))&PWMA_SM0OCTRL_POLB_MASK) /*!< PWMA_SM0OCTRL.POLB Field                */
#define PWMA_SM0OCTRL_POLA_MASK                  (0x400U)                                            /*!< PWMA_SM0OCTRL.POLA Mask                 */
#define PWMA_SM0OCTRL_POLA_SHIFT                 (10U)                                               /*!< PWMA_SM0OCTRL.POLA Position             */
#define PWMA_SM0OCTRL_POLA(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM0OCTRL_POLA_SHIFT))&PWMA_SM0OCTRL_POLA_MASK) /*!< PWMA_SM0OCTRL.POLA Field                */
#define PWMA_SM0OCTRL_PWMX_IN_MASK               (0x2000U)                                           /*!< PWMA_SM0OCTRL.PWMX_IN Mask              */
#define PWMA_SM0OCTRL_PWMX_IN_SHIFT              (13U)                                               /*!< PWMA_SM0OCTRL.PWMX_IN Position          */
#define PWMA_SM0OCTRL_PWMX_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM0OCTRL_PWMX_IN_SHIFT))&PWMA_SM0OCTRL_PWMX_IN_MASK) /*!< PWMA_SM0OCTRL.PWMX_IN Field             */
#define PWMA_SM0OCTRL_PWMB_IN_MASK               (0x4000U)                                           /*!< PWMA_SM0OCTRL.PWMB_IN Mask              */
#define PWMA_SM0OCTRL_PWMB_IN_SHIFT              (14U)                                               /*!< PWMA_SM0OCTRL.PWMB_IN Position          */
#define PWMA_SM0OCTRL_PWMB_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM0OCTRL_PWMB_IN_SHIFT))&PWMA_SM0OCTRL_PWMB_IN_MASK) /*!< PWMA_SM0OCTRL.PWMB_IN Field             */
#define PWMA_SM0OCTRL_PWMA_IN_MASK               (0x8000U)                                           /*!< PWMA_SM0OCTRL.PWMA_IN Mask              */
#define PWMA_SM0OCTRL_PWMA_IN_SHIFT              (15U)                                               /*!< PWMA_SM0OCTRL.PWMA_IN Position          */
#define PWMA_SM0OCTRL_PWMA_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM0OCTRL_PWMA_IN_SHIFT))&PWMA_SM0OCTRL_PWMA_IN_MASK) /*!< PWMA_SM0OCTRL.PWMA_IN Field             */

/*! @name SM0STS - Status Register */
#define PWMA_SM0STS_CMPF_MASK                    (0x3FU)                                             /*!< PWMA_SM0STS.CMPF Mask                   */
#define PWMA_SM0STS_CMPF_SHIFT                   (0U)                                                /*!< PWMA_SM0STS.CMPF Position               */
#define PWMA_SM0STS_CMPF(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM0STS_CMPF_SHIFT))&PWMA_SM0STS_CMPF_MASK) /*!< PWMA_SM0STS.CMPF Field                  */
#define PWMA_SM0STS_CFX0_MASK                    (0x40U)                                             /*!< PWMA_SM0STS.CFX0 Mask                   */
#define PWMA_SM0STS_CFX0_SHIFT                   (6U)                                                /*!< PWMA_SM0STS.CFX0 Position               */
#define PWMA_SM0STS_CFX0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM0STS_CFX0_SHIFT))&PWMA_SM0STS_CFX0_MASK) /*!< PWMA_SM0STS.CFX0 Field                  */
#define PWMA_SM0STS_CFX1_MASK                    (0x80U)                                             /*!< PWMA_SM0STS.CFX1 Mask                   */
#define PWMA_SM0STS_CFX1_SHIFT                   (7U)                                                /*!< PWMA_SM0STS.CFX1 Position               */
#define PWMA_SM0STS_CFX1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM0STS_CFX1_SHIFT))&PWMA_SM0STS_CFX1_MASK) /*!< PWMA_SM0STS.CFX1 Field                  */
#define PWMA_SM0STS_CFB0_MASK                    (0x100U)                                            /*!< PWMA_SM0STS.CFB0 Mask                   */
#define PWMA_SM0STS_CFB0_SHIFT                   (8U)                                                /*!< PWMA_SM0STS.CFB0 Position               */
#define PWMA_SM0STS_CFB0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM0STS_CFB0_SHIFT))&PWMA_SM0STS_CFB0_MASK) /*!< PWMA_SM0STS.CFB0 Field                  */
#define PWMA_SM0STS_CFB1_MASK                    (0x200U)                                            /*!< PWMA_SM0STS.CFB1 Mask                   */
#define PWMA_SM0STS_CFB1_SHIFT                   (9U)                                                /*!< PWMA_SM0STS.CFB1 Position               */
#define PWMA_SM0STS_CFB1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM0STS_CFB1_SHIFT))&PWMA_SM0STS_CFB1_MASK) /*!< PWMA_SM0STS.CFB1 Field                  */
#define PWMA_SM0STS_CFA0_MASK                    (0x400U)                                            /*!< PWMA_SM0STS.CFA0 Mask                   */
#define PWMA_SM0STS_CFA0_SHIFT                   (10U)                                               /*!< PWMA_SM0STS.CFA0 Position               */
#define PWMA_SM0STS_CFA0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM0STS_CFA0_SHIFT))&PWMA_SM0STS_CFA0_MASK) /*!< PWMA_SM0STS.CFA0 Field                  */
#define PWMA_SM0STS_CFA1_MASK                    (0x800U)                                            /*!< PWMA_SM0STS.CFA1 Mask                   */
#define PWMA_SM0STS_CFA1_SHIFT                   (11U)                                               /*!< PWMA_SM0STS.CFA1 Position               */
#define PWMA_SM0STS_CFA1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM0STS_CFA1_SHIFT))&PWMA_SM0STS_CFA1_MASK) /*!< PWMA_SM0STS.CFA1 Field                  */
#define PWMA_SM0STS_RF_MASK                      (0x1000U)                                           /*!< PWMA_SM0STS.RF Mask                     */
#define PWMA_SM0STS_RF_SHIFT                     (12U)                                               /*!< PWMA_SM0STS.RF Position                 */
#define PWMA_SM0STS_RF(x)                        (((uint16_t)(((uint16_t)(x))<<PWMA_SM0STS_RF_SHIFT))&PWMA_SM0STS_RF_MASK) /*!< PWMA_SM0STS.RF Field                    */
#define PWMA_SM0STS_REF_MASK                     (0x2000U)                                           /*!< PWMA_SM0STS.REF Mask                    */
#define PWMA_SM0STS_REF_SHIFT                    (13U)                                               /*!< PWMA_SM0STS.REF Position                */
#define PWMA_SM0STS_REF(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM0STS_REF_SHIFT))&PWMA_SM0STS_REF_MASK) /*!< PWMA_SM0STS.REF Field                   */
#define PWMA_SM0STS_RUF_MASK                     (0x4000U)                                           /*!< PWMA_SM0STS.RUF Mask                    */
#define PWMA_SM0STS_RUF_SHIFT                    (14U)                                               /*!< PWMA_SM0STS.RUF Position                */
#define PWMA_SM0STS_RUF(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM0STS_RUF_SHIFT))&PWMA_SM0STS_RUF_MASK) /*!< PWMA_SM0STS.RUF Field                   */

/*! @name SM0INTEN - Interrupt Enable Register */
#define PWMA_SM0INTEN_CMPIE_MASK                 (0x3FU)                                             /*!< PWMA_SM0INTEN.CMPIE Mask                */
#define PWMA_SM0INTEN_CMPIE_SHIFT                (0U)                                                /*!< PWMA_SM0INTEN.CMPIE Position            */
#define PWMA_SM0INTEN_CMPIE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0INTEN_CMPIE_SHIFT))&PWMA_SM0INTEN_CMPIE_MASK) /*!< PWMA_SM0INTEN.CMPIE Field               */
#define PWMA_SM0INTEN_CX0IE_MASK                 (0x40U)                                             /*!< PWMA_SM0INTEN.CX0IE Mask                */
#define PWMA_SM0INTEN_CX0IE_SHIFT                (6U)                                                /*!< PWMA_SM0INTEN.CX0IE Position            */
#define PWMA_SM0INTEN_CX0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0INTEN_CX0IE_SHIFT))&PWMA_SM0INTEN_CX0IE_MASK) /*!< PWMA_SM0INTEN.CX0IE Field               */
#define PWMA_SM0INTEN_CX1IE_MASK                 (0x80U)                                             /*!< PWMA_SM0INTEN.CX1IE Mask                */
#define PWMA_SM0INTEN_CX1IE_SHIFT                (7U)                                                /*!< PWMA_SM0INTEN.CX1IE Position            */
#define PWMA_SM0INTEN_CX1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0INTEN_CX1IE_SHIFT))&PWMA_SM0INTEN_CX1IE_MASK) /*!< PWMA_SM0INTEN.CX1IE Field               */
#define PWMA_SM0INTEN_CB0IE_MASK                 (0x100U)                                            /*!< PWMA_SM0INTEN.CB0IE Mask                */
#define PWMA_SM0INTEN_CB0IE_SHIFT                (8U)                                                /*!< PWMA_SM0INTEN.CB0IE Position            */
#define PWMA_SM0INTEN_CB0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0INTEN_CB0IE_SHIFT))&PWMA_SM0INTEN_CB0IE_MASK) /*!< PWMA_SM0INTEN.CB0IE Field               */
#define PWMA_SM0INTEN_CB1IE_MASK                 (0x200U)                                            /*!< PWMA_SM0INTEN.CB1IE Mask                */
#define PWMA_SM0INTEN_CB1IE_SHIFT                (9U)                                                /*!< PWMA_SM0INTEN.CB1IE Position            */
#define PWMA_SM0INTEN_CB1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0INTEN_CB1IE_SHIFT))&PWMA_SM0INTEN_CB1IE_MASK) /*!< PWMA_SM0INTEN.CB1IE Field               */
#define PWMA_SM0INTEN_CA0IE_MASK                 (0x400U)                                            /*!< PWMA_SM0INTEN.CA0IE Mask                */
#define PWMA_SM0INTEN_CA0IE_SHIFT                (10U)                                               /*!< PWMA_SM0INTEN.CA0IE Position            */
#define PWMA_SM0INTEN_CA0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0INTEN_CA0IE_SHIFT))&PWMA_SM0INTEN_CA0IE_MASK) /*!< PWMA_SM0INTEN.CA0IE Field               */
#define PWMA_SM0INTEN_CA1IE_MASK                 (0x800U)                                            /*!< PWMA_SM0INTEN.CA1IE Mask                */
#define PWMA_SM0INTEN_CA1IE_SHIFT                (11U)                                               /*!< PWMA_SM0INTEN.CA1IE Position            */
#define PWMA_SM0INTEN_CA1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0INTEN_CA1IE_SHIFT))&PWMA_SM0INTEN_CA1IE_MASK) /*!< PWMA_SM0INTEN.CA1IE Field               */
#define PWMA_SM0INTEN_RIE_MASK                   (0x1000U)                                           /*!< PWMA_SM0INTEN.RIE Mask                  */
#define PWMA_SM0INTEN_RIE_SHIFT                  (12U)                                               /*!< PWMA_SM0INTEN.RIE Position              */
#define PWMA_SM0INTEN_RIE(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM0INTEN_RIE_SHIFT))&PWMA_SM0INTEN_RIE_MASK) /*!< PWMA_SM0INTEN.RIE Field                 */
#define PWMA_SM0INTEN_REIE_MASK                  (0x2000U)                                           /*!< PWMA_SM0INTEN.REIE Mask                 */
#define PWMA_SM0INTEN_REIE_SHIFT                 (13U)                                               /*!< PWMA_SM0INTEN.REIE Position             */
#define PWMA_SM0INTEN_REIE(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM0INTEN_REIE_SHIFT))&PWMA_SM0INTEN_REIE_MASK) /*!< PWMA_SM0INTEN.REIE Field                */

/*! @name SM0DMAEN - DMA Enable Register */
#define PWMA_SM0DMAEN_CX0DE_MASK                 (0x1U)                                              /*!< PWMA_SM0DMAEN.CX0DE Mask                */
#define PWMA_SM0DMAEN_CX0DE_SHIFT                (0U)                                                /*!< PWMA_SM0DMAEN.CX0DE Position            */
#define PWMA_SM0DMAEN_CX0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DMAEN_CX0DE_SHIFT))&PWMA_SM0DMAEN_CX0DE_MASK) /*!< PWMA_SM0DMAEN.CX0DE Field               */
#define PWMA_SM0DMAEN_CX1DE_MASK                 (0x2U)                                              /*!< PWMA_SM0DMAEN.CX1DE Mask                */
#define PWMA_SM0DMAEN_CX1DE_SHIFT                (1U)                                                /*!< PWMA_SM0DMAEN.CX1DE Position            */
#define PWMA_SM0DMAEN_CX1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DMAEN_CX1DE_SHIFT))&PWMA_SM0DMAEN_CX1DE_MASK) /*!< PWMA_SM0DMAEN.CX1DE Field               */
#define PWMA_SM0DMAEN_CB0DE_MASK                 (0x4U)                                              /*!< PWMA_SM0DMAEN.CB0DE Mask                */
#define PWMA_SM0DMAEN_CB0DE_SHIFT                (2U)                                                /*!< PWMA_SM0DMAEN.CB0DE Position            */
#define PWMA_SM0DMAEN_CB0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DMAEN_CB0DE_SHIFT))&PWMA_SM0DMAEN_CB0DE_MASK) /*!< PWMA_SM0DMAEN.CB0DE Field               */
#define PWMA_SM0DMAEN_CB1DE_MASK                 (0x8U)                                              /*!< PWMA_SM0DMAEN.CB1DE Mask                */
#define PWMA_SM0DMAEN_CB1DE_SHIFT                (3U)                                                /*!< PWMA_SM0DMAEN.CB1DE Position            */
#define PWMA_SM0DMAEN_CB1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DMAEN_CB1DE_SHIFT))&PWMA_SM0DMAEN_CB1DE_MASK) /*!< PWMA_SM0DMAEN.CB1DE Field               */
#define PWMA_SM0DMAEN_CA0DE_MASK                 (0x10U)                                             /*!< PWMA_SM0DMAEN.CA0DE Mask                */
#define PWMA_SM0DMAEN_CA0DE_SHIFT                (4U)                                                /*!< PWMA_SM0DMAEN.CA0DE Position            */
#define PWMA_SM0DMAEN_CA0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DMAEN_CA0DE_SHIFT))&PWMA_SM0DMAEN_CA0DE_MASK) /*!< PWMA_SM0DMAEN.CA0DE Field               */
#define PWMA_SM0DMAEN_CA1DE_MASK                 (0x20U)                                             /*!< PWMA_SM0DMAEN.CA1DE Mask                */
#define PWMA_SM0DMAEN_CA1DE_SHIFT                (5U)                                                /*!< PWMA_SM0DMAEN.CA1DE Position            */
#define PWMA_SM0DMAEN_CA1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DMAEN_CA1DE_SHIFT))&PWMA_SM0DMAEN_CA1DE_MASK) /*!< PWMA_SM0DMAEN.CA1DE Field               */
#define PWMA_SM0DMAEN_CAPTDE_MASK                (0xC0U)                                             /*!< PWMA_SM0DMAEN.CAPTDE Mask               */
#define PWMA_SM0DMAEN_CAPTDE_SHIFT               (6U)                                                /*!< PWMA_SM0DMAEN.CAPTDE Position           */
#define PWMA_SM0DMAEN_CAPTDE(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DMAEN_CAPTDE_SHIFT))&PWMA_SM0DMAEN_CAPTDE_MASK) /*!< PWMA_SM0DMAEN.CAPTDE Field              */
#define PWMA_SM0DMAEN_FAND_MASK                  (0x100U)                                            /*!< PWMA_SM0DMAEN.FAND Mask                 */
#define PWMA_SM0DMAEN_FAND_SHIFT                 (8U)                                                /*!< PWMA_SM0DMAEN.FAND Position             */
#define PWMA_SM0DMAEN_FAND(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DMAEN_FAND_SHIFT))&PWMA_SM0DMAEN_FAND_MASK) /*!< PWMA_SM0DMAEN.FAND Field                */
#define PWMA_SM0DMAEN_VALDE_MASK                 (0x200U)                                            /*!< PWMA_SM0DMAEN.VALDE Mask                */
#define PWMA_SM0DMAEN_VALDE_SHIFT                (9U)                                                /*!< PWMA_SM0DMAEN.VALDE Position            */
#define PWMA_SM0DMAEN_VALDE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DMAEN_VALDE_SHIFT))&PWMA_SM0DMAEN_VALDE_MASK) /*!< PWMA_SM0DMAEN.VALDE Field               */

/*! @name SM0TCTRL - Output Trigger Control Register */
#define PWMA_SM0TCTRL_OUT_TRIG_EN_MASK           (0x3FU)                                             /*!< PWMA_SM0TCTRL.OUT_TRIG_EN Mask          */
#define PWMA_SM0TCTRL_OUT_TRIG_EN_SHIFT          (0U)                                                /*!< PWMA_SM0TCTRL.OUT_TRIG_EN Position      */
#define PWMA_SM0TCTRL_OUT_TRIG_EN(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0TCTRL_OUT_TRIG_EN_SHIFT))&PWMA_SM0TCTRL_OUT_TRIG_EN_MASK) /*!< PWMA_SM0TCTRL.OUT_TRIG_EN Field         */
#define PWMA_SM0TCTRL_PWBOT1_MASK                (0x4000U)                                           /*!< PWMA_SM0TCTRL.PWBOT1 Mask               */
#define PWMA_SM0TCTRL_PWBOT1_SHIFT               (14U)                                               /*!< PWMA_SM0TCTRL.PWBOT1 Position           */
#define PWMA_SM0TCTRL_PWBOT1(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM0TCTRL_PWBOT1_SHIFT))&PWMA_SM0TCTRL_PWBOT1_MASK) /*!< PWMA_SM0TCTRL.PWBOT1 Field              */
#define PWMA_SM0TCTRL_PWAOT0_MASK                (0x8000U)                                           /*!< PWMA_SM0TCTRL.PWAOT0 Mask               */
#define PWMA_SM0TCTRL_PWAOT0_SHIFT               (15U)                                               /*!< PWMA_SM0TCTRL.PWAOT0 Position           */
#define PWMA_SM0TCTRL_PWAOT0(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM0TCTRL_PWAOT0_SHIFT))&PWMA_SM0TCTRL_PWAOT0_MASK) /*!< PWMA_SM0TCTRL.PWAOT0 Field              */

/*! @name SM0DISMAP0 - Fault Disable Mapping Register 0 */
#define PWMA_SM0DISMAP0_DIS0A_MASK               (0xFU)                                              /*!< PWMA_SM0DISMAP0.DIS0A Mask              */
#define PWMA_SM0DISMAP0_DIS0A_SHIFT              (0U)                                                /*!< PWMA_SM0DISMAP0.DIS0A Position          */
#define PWMA_SM0DISMAP0_DIS0A(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DISMAP0_DIS0A_SHIFT))&PWMA_SM0DISMAP0_DIS0A_MASK) /*!< PWMA_SM0DISMAP0.DIS0A Field             */
#define PWMA_SM0DISMAP0_DIS0B_MASK               (0xF0U)                                             /*!< PWMA_SM0DISMAP0.DIS0B Mask              */
#define PWMA_SM0DISMAP0_DIS0B_SHIFT              (4U)                                                /*!< PWMA_SM0DISMAP0.DIS0B Position          */
#define PWMA_SM0DISMAP0_DIS0B(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DISMAP0_DIS0B_SHIFT))&PWMA_SM0DISMAP0_DIS0B_MASK) /*!< PWMA_SM0DISMAP0.DIS0B Field             */
#define PWMA_SM0DISMAP0_DIS0X_MASK               (0xF00U)                                            /*!< PWMA_SM0DISMAP0.DIS0X Mask              */
#define PWMA_SM0DISMAP0_DIS0X_SHIFT              (8U)                                                /*!< PWMA_SM0DISMAP0.DIS0X Position          */
#define PWMA_SM0DISMAP0_DIS0X(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DISMAP0_DIS0X_SHIFT))&PWMA_SM0DISMAP0_DIS0X_MASK) /*!< PWMA_SM0DISMAP0.DIS0X Field             */

/*! @name SM0DTCNT - Deadtime Count Register %s */
#define PWMA_SM0DTCNT_DTCNT0_MASK                (0x7FFU)                                            /*!< PWMA_SM0DTCNT.DTCNT0 Mask               */
#define PWMA_SM0DTCNT_DTCNT0_SHIFT               (0U)                                                /*!< PWMA_SM0DTCNT.DTCNT0 Position           */
#define PWMA_SM0DTCNT_DTCNT0(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM0DTCNT_DTCNT0_SHIFT))&PWMA_SM0DTCNT_DTCNT0_MASK) /*!< PWMA_SM0DTCNT.DTCNT0 Field              */

/*! @name SM0CAPTCTRLA - Capture Control A Register */
#define PWMA_SM0CAPTCTRLA_ARMA_MASK              (0x1U)                                              /*!< PWMA_SM0CAPTCTRLA.ARMA Mask             */
#define PWMA_SM0CAPTCTRLA_ARMA_SHIFT             (0U)                                                /*!< PWMA_SM0CAPTCTRLA.ARMA Position         */
#define PWMA_SM0CAPTCTRLA_ARMA(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLA_ARMA_SHIFT))&PWMA_SM0CAPTCTRLA_ARMA_MASK) /*!< PWMA_SM0CAPTCTRLA.ARMA Field            */
#define PWMA_SM0CAPTCTRLA_ONESHOTA_MASK          (0x2U)                                              /*!< PWMA_SM0CAPTCTRLA.ONESHOTA Mask         */
#define PWMA_SM0CAPTCTRLA_ONESHOTA_SHIFT         (1U)                                                /*!< PWMA_SM0CAPTCTRLA.ONESHOTA Position     */
#define PWMA_SM0CAPTCTRLA_ONESHOTA(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLA_ONESHOTA_SHIFT))&PWMA_SM0CAPTCTRLA_ONESHOTA_MASK) /*!< PWMA_SM0CAPTCTRLA.ONESHOTA Field        */
#define PWMA_SM0CAPTCTRLA_EDGA0_MASK             (0xCU)                                              /*!< PWMA_SM0CAPTCTRLA.EDGA0 Mask            */
#define PWMA_SM0CAPTCTRLA_EDGA0_SHIFT            (2U)                                                /*!< PWMA_SM0CAPTCTRLA.EDGA0 Position        */
#define PWMA_SM0CAPTCTRLA_EDGA0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLA_EDGA0_SHIFT))&PWMA_SM0CAPTCTRLA_EDGA0_MASK) /*!< PWMA_SM0CAPTCTRLA.EDGA0 Field           */
#define PWMA_SM0CAPTCTRLA_EDGA1_MASK             (0x30U)                                             /*!< PWMA_SM0CAPTCTRLA.EDGA1 Mask            */
#define PWMA_SM0CAPTCTRLA_EDGA1_SHIFT            (4U)                                                /*!< PWMA_SM0CAPTCTRLA.EDGA1 Position        */
#define PWMA_SM0CAPTCTRLA_EDGA1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLA_EDGA1_SHIFT))&PWMA_SM0CAPTCTRLA_EDGA1_MASK) /*!< PWMA_SM0CAPTCTRLA.EDGA1 Field           */
#define PWMA_SM0CAPTCTRLA_INP_SELA_MASK          (0x40U)                                             /*!< PWMA_SM0CAPTCTRLA.INP_SELA Mask         */
#define PWMA_SM0CAPTCTRLA_INP_SELA_SHIFT         (6U)                                                /*!< PWMA_SM0CAPTCTRLA.INP_SELA Position     */
#define PWMA_SM0CAPTCTRLA_INP_SELA(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLA_INP_SELA_SHIFT))&PWMA_SM0CAPTCTRLA_INP_SELA_MASK) /*!< PWMA_SM0CAPTCTRLA.INP_SELA Field        */
#define PWMA_SM0CAPTCTRLA_EDGCNTA_EN_MASK        (0x80U)                                             /*!< PWMA_SM0CAPTCTRLA.EDGCNTA_EN Mask       */
#define PWMA_SM0CAPTCTRLA_EDGCNTA_EN_SHIFT       (7U)                                                /*!< PWMA_SM0CAPTCTRLA.EDGCNTA_EN Position   */
#define PWMA_SM0CAPTCTRLA_EDGCNTA_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLA_EDGCNTA_EN_SHIFT))&PWMA_SM0CAPTCTRLA_EDGCNTA_EN_MASK) /*!< PWMA_SM0CAPTCTRLA.EDGCNTA_EN Field      */
#define PWMA_SM0CAPTCTRLA_CFAWM_MASK             (0x300U)                                            /*!< PWMA_SM0CAPTCTRLA.CFAWM Mask            */
#define PWMA_SM0CAPTCTRLA_CFAWM_SHIFT            (8U)                                                /*!< PWMA_SM0CAPTCTRLA.CFAWM Position        */
#define PWMA_SM0CAPTCTRLA_CFAWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLA_CFAWM_SHIFT))&PWMA_SM0CAPTCTRLA_CFAWM_MASK) /*!< PWMA_SM0CAPTCTRLA.CFAWM Field           */
#define PWMA_SM0CAPTCTRLA_CA0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM0CAPTCTRLA.CA0CNT Mask           */
#define PWMA_SM0CAPTCTRLA_CA0CNT_SHIFT           (10U)                                               /*!< PWMA_SM0CAPTCTRLA.CA0CNT Position       */
#define PWMA_SM0CAPTCTRLA_CA0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLA_CA0CNT_SHIFT))&PWMA_SM0CAPTCTRLA_CA0CNT_MASK) /*!< PWMA_SM0CAPTCTRLA.CA0CNT Field          */
#define PWMA_SM0CAPTCTRLA_CA1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM0CAPTCTRLA.CA1CNT Mask           */
#define PWMA_SM0CAPTCTRLA_CA1CNT_SHIFT           (13U)                                               /*!< PWMA_SM0CAPTCTRLA.CA1CNT Position       */
#define PWMA_SM0CAPTCTRLA_CA1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLA_CA1CNT_SHIFT))&PWMA_SM0CAPTCTRLA_CA1CNT_MASK) /*!< PWMA_SM0CAPTCTRLA.CA1CNT Field          */

/*! @name SM0CAPTCOMPA - Capture Compare A Register */
#define PWMA_SM0CAPTCOMPA_EDGCMPA_MASK           (0xFFU)                                             /*!< PWMA_SM0CAPTCOMPA.EDGCMPA Mask          */
#define PWMA_SM0CAPTCOMPA_EDGCMPA_SHIFT          (0U)                                                /*!< PWMA_SM0CAPTCOMPA.EDGCMPA Position      */
#define PWMA_SM0CAPTCOMPA_EDGCMPA(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCOMPA_EDGCMPA_SHIFT))&PWMA_SM0CAPTCOMPA_EDGCMPA_MASK) /*!< PWMA_SM0CAPTCOMPA.EDGCMPA Field         */
#define PWMA_SM0CAPTCOMPA_EDGCNTA_MASK           (0xFF00U)                                           /*!< PWMA_SM0CAPTCOMPA.EDGCNTA Mask          */
#define PWMA_SM0CAPTCOMPA_EDGCNTA_SHIFT          (8U)                                                /*!< PWMA_SM0CAPTCOMPA.EDGCNTA Position      */
#define PWMA_SM0CAPTCOMPA_EDGCNTA(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCOMPA_EDGCNTA_SHIFT))&PWMA_SM0CAPTCOMPA_EDGCNTA_MASK) /*!< PWMA_SM0CAPTCOMPA.EDGCNTA Field         */

/*! @name SM0CAPTCTRLB - Capture Control B Register */
#define PWMA_SM0CAPTCTRLB_ARMB_MASK              (0x1U)                                              /*!< PWMA_SM0CAPTCTRLB.ARMB Mask             */
#define PWMA_SM0CAPTCTRLB_ARMB_SHIFT             (0U)                                                /*!< PWMA_SM0CAPTCTRLB.ARMB Position         */
#define PWMA_SM0CAPTCTRLB_ARMB(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLB_ARMB_SHIFT))&PWMA_SM0CAPTCTRLB_ARMB_MASK) /*!< PWMA_SM0CAPTCTRLB.ARMB Field            */
#define PWMA_SM0CAPTCTRLB_ONESHOTB_MASK          (0x2U)                                              /*!< PWMA_SM0CAPTCTRLB.ONESHOTB Mask         */
#define PWMA_SM0CAPTCTRLB_ONESHOTB_SHIFT         (1U)                                                /*!< PWMA_SM0CAPTCTRLB.ONESHOTB Position     */
#define PWMA_SM0CAPTCTRLB_ONESHOTB(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLB_ONESHOTB_SHIFT))&PWMA_SM0CAPTCTRLB_ONESHOTB_MASK) /*!< PWMA_SM0CAPTCTRLB.ONESHOTB Field        */
#define PWMA_SM0CAPTCTRLB_EDGB0_MASK             (0xCU)                                              /*!< PWMA_SM0CAPTCTRLB.EDGB0 Mask            */
#define PWMA_SM0CAPTCTRLB_EDGB0_SHIFT            (2U)                                                /*!< PWMA_SM0CAPTCTRLB.EDGB0 Position        */
#define PWMA_SM0CAPTCTRLB_EDGB0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLB_EDGB0_SHIFT))&PWMA_SM0CAPTCTRLB_EDGB0_MASK) /*!< PWMA_SM0CAPTCTRLB.EDGB0 Field           */
#define PWMA_SM0CAPTCTRLB_EDGB1_MASK             (0x30U)                                             /*!< PWMA_SM0CAPTCTRLB.EDGB1 Mask            */
#define PWMA_SM0CAPTCTRLB_EDGB1_SHIFT            (4U)                                                /*!< PWMA_SM0CAPTCTRLB.EDGB1 Position        */
#define PWMA_SM0CAPTCTRLB_EDGB1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLB_EDGB1_SHIFT))&PWMA_SM0CAPTCTRLB_EDGB1_MASK) /*!< PWMA_SM0CAPTCTRLB.EDGB1 Field           */
#define PWMA_SM0CAPTCTRLB_INP_SELB_MASK          (0x40U)                                             /*!< PWMA_SM0CAPTCTRLB.INP_SELB Mask         */
#define PWMA_SM0CAPTCTRLB_INP_SELB_SHIFT         (6U)                                                /*!< PWMA_SM0CAPTCTRLB.INP_SELB Position     */
#define PWMA_SM0CAPTCTRLB_INP_SELB(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLB_INP_SELB_SHIFT))&PWMA_SM0CAPTCTRLB_INP_SELB_MASK) /*!< PWMA_SM0CAPTCTRLB.INP_SELB Field        */
#define PWMA_SM0CAPTCTRLB_EDGCNTB_EN_MASK        (0x80U)                                             /*!< PWMA_SM0CAPTCTRLB.EDGCNTB_EN Mask       */
#define PWMA_SM0CAPTCTRLB_EDGCNTB_EN_SHIFT       (7U)                                                /*!< PWMA_SM0CAPTCTRLB.EDGCNTB_EN Position   */
#define PWMA_SM0CAPTCTRLB_EDGCNTB_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLB_EDGCNTB_EN_SHIFT))&PWMA_SM0CAPTCTRLB_EDGCNTB_EN_MASK) /*!< PWMA_SM0CAPTCTRLB.EDGCNTB_EN Field      */
#define PWMA_SM0CAPTCTRLB_CFBWM_MASK             (0x300U)                                            /*!< PWMA_SM0CAPTCTRLB.CFBWM Mask            */
#define PWMA_SM0CAPTCTRLB_CFBWM_SHIFT            (8U)                                                /*!< PWMA_SM0CAPTCTRLB.CFBWM Position        */
#define PWMA_SM0CAPTCTRLB_CFBWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLB_CFBWM_SHIFT))&PWMA_SM0CAPTCTRLB_CFBWM_MASK) /*!< PWMA_SM0CAPTCTRLB.CFBWM Field           */
#define PWMA_SM0CAPTCTRLB_CB0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM0CAPTCTRLB.CB0CNT Mask           */
#define PWMA_SM0CAPTCTRLB_CB0CNT_SHIFT           (10U)                                               /*!< PWMA_SM0CAPTCTRLB.CB0CNT Position       */
#define PWMA_SM0CAPTCTRLB_CB0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLB_CB0CNT_SHIFT))&PWMA_SM0CAPTCTRLB_CB0CNT_MASK) /*!< PWMA_SM0CAPTCTRLB.CB0CNT Field          */
#define PWMA_SM0CAPTCTRLB_CB1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM0CAPTCTRLB.CB1CNT Mask           */
#define PWMA_SM0CAPTCTRLB_CB1CNT_SHIFT           (13U)                                               /*!< PWMA_SM0CAPTCTRLB.CB1CNT Position       */
#define PWMA_SM0CAPTCTRLB_CB1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLB_CB1CNT_SHIFT))&PWMA_SM0CAPTCTRLB_CB1CNT_MASK) /*!< PWMA_SM0CAPTCTRLB.CB1CNT Field          */

/*! @name SM0CAPTCOMPB - Capture Compare B Register */
#define PWMA_SM0CAPTCOMPB_EDGCMPB_MASK           (0xFFU)                                             /*!< PWMA_SM0CAPTCOMPB.EDGCMPB Mask          */
#define PWMA_SM0CAPTCOMPB_EDGCMPB_SHIFT          (0U)                                                /*!< PWMA_SM0CAPTCOMPB.EDGCMPB Position      */
#define PWMA_SM0CAPTCOMPB_EDGCMPB(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCOMPB_EDGCMPB_SHIFT))&PWMA_SM0CAPTCOMPB_EDGCMPB_MASK) /*!< PWMA_SM0CAPTCOMPB.EDGCMPB Field         */
#define PWMA_SM0CAPTCOMPB_EDGCNTB_MASK           (0xFF00U)                                           /*!< PWMA_SM0CAPTCOMPB.EDGCNTB Mask          */
#define PWMA_SM0CAPTCOMPB_EDGCNTB_SHIFT          (8U)                                                /*!< PWMA_SM0CAPTCOMPB.EDGCNTB Position      */
#define PWMA_SM0CAPTCOMPB_EDGCNTB(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCOMPB_EDGCNTB_SHIFT))&PWMA_SM0CAPTCOMPB_EDGCNTB_MASK) /*!< PWMA_SM0CAPTCOMPB.EDGCNTB Field         */

/*! @name SM0CAPTCTRLX - Capture Control X Register */
#define PWMA_SM0CAPTCTRLX_ARMX_MASK              (0x1U)                                              /*!< PWMA_SM0CAPTCTRLX.ARMX Mask             */
#define PWMA_SM0CAPTCTRLX_ARMX_SHIFT             (0U)                                                /*!< PWMA_SM0CAPTCTRLX.ARMX Position         */
#define PWMA_SM0CAPTCTRLX_ARMX(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLX_ARMX_SHIFT))&PWMA_SM0CAPTCTRLX_ARMX_MASK) /*!< PWMA_SM0CAPTCTRLX.ARMX Field            */
#define PWMA_SM0CAPTCTRLX_ONESHOTX_MASK          (0x2U)                                              /*!< PWMA_SM0CAPTCTRLX.ONESHOTX Mask         */
#define PWMA_SM0CAPTCTRLX_ONESHOTX_SHIFT         (1U)                                                /*!< PWMA_SM0CAPTCTRLX.ONESHOTX Position     */
#define PWMA_SM0CAPTCTRLX_ONESHOTX(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLX_ONESHOTX_SHIFT))&PWMA_SM0CAPTCTRLX_ONESHOTX_MASK) /*!< PWMA_SM0CAPTCTRLX.ONESHOTX Field        */
#define PWMA_SM0CAPTCTRLX_EDGX0_MASK             (0xCU)                                              /*!< PWMA_SM0CAPTCTRLX.EDGX0 Mask            */
#define PWMA_SM0CAPTCTRLX_EDGX0_SHIFT            (2U)                                                /*!< PWMA_SM0CAPTCTRLX.EDGX0 Position        */
#define PWMA_SM0CAPTCTRLX_EDGX0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLX_EDGX0_SHIFT))&PWMA_SM0CAPTCTRLX_EDGX0_MASK) /*!< PWMA_SM0CAPTCTRLX.EDGX0 Field           */
#define PWMA_SM0CAPTCTRLX_EDGX1_MASK             (0x30U)                                             /*!< PWMA_SM0CAPTCTRLX.EDGX1 Mask            */
#define PWMA_SM0CAPTCTRLX_EDGX1_SHIFT            (4U)                                                /*!< PWMA_SM0CAPTCTRLX.EDGX1 Position        */
#define PWMA_SM0CAPTCTRLX_EDGX1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLX_EDGX1_SHIFT))&PWMA_SM0CAPTCTRLX_EDGX1_MASK) /*!< PWMA_SM0CAPTCTRLX.EDGX1 Field           */
#define PWMA_SM0CAPTCTRLX_INP_SELX_MASK          (0x40U)                                             /*!< PWMA_SM0CAPTCTRLX.INP_SELX Mask         */
#define PWMA_SM0CAPTCTRLX_INP_SELX_SHIFT         (6U)                                                /*!< PWMA_SM0CAPTCTRLX.INP_SELX Position     */
#define PWMA_SM0CAPTCTRLX_INP_SELX(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLX_INP_SELX_SHIFT))&PWMA_SM0CAPTCTRLX_INP_SELX_MASK) /*!< PWMA_SM0CAPTCTRLX.INP_SELX Field        */
#define PWMA_SM0CAPTCTRLX_EDGCNTX_EN_MASK        (0x80U)                                             /*!< PWMA_SM0CAPTCTRLX.EDGCNTX_EN Mask       */
#define PWMA_SM0CAPTCTRLX_EDGCNTX_EN_SHIFT       (7U)                                                /*!< PWMA_SM0CAPTCTRLX.EDGCNTX_EN Position   */
#define PWMA_SM0CAPTCTRLX_EDGCNTX_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLX_EDGCNTX_EN_SHIFT))&PWMA_SM0CAPTCTRLX_EDGCNTX_EN_MASK) /*!< PWMA_SM0CAPTCTRLX.EDGCNTX_EN Field      */
#define PWMA_SM0CAPTCTRLX_CFXWM_MASK             (0x300U)                                            /*!< PWMA_SM0CAPTCTRLX.CFXWM Mask            */
#define PWMA_SM0CAPTCTRLX_CFXWM_SHIFT            (8U)                                                /*!< PWMA_SM0CAPTCTRLX.CFXWM Position        */
#define PWMA_SM0CAPTCTRLX_CFXWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLX_CFXWM_SHIFT))&PWMA_SM0CAPTCTRLX_CFXWM_MASK) /*!< PWMA_SM0CAPTCTRLX.CFXWM Field           */
#define PWMA_SM0CAPTCTRLX_CX0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM0CAPTCTRLX.CX0CNT Mask           */
#define PWMA_SM0CAPTCTRLX_CX0CNT_SHIFT           (10U)                                               /*!< PWMA_SM0CAPTCTRLX.CX0CNT Position       */
#define PWMA_SM0CAPTCTRLX_CX0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLX_CX0CNT_SHIFT))&PWMA_SM0CAPTCTRLX_CX0CNT_MASK) /*!< PWMA_SM0CAPTCTRLX.CX0CNT Field          */
#define PWMA_SM0CAPTCTRLX_CX1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM0CAPTCTRLX.CX1CNT Mask           */
#define PWMA_SM0CAPTCTRLX_CX1CNT_SHIFT           (13U)                                               /*!< PWMA_SM0CAPTCTRLX.CX1CNT Position       */
#define PWMA_SM0CAPTCTRLX_CX1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCTRLX_CX1CNT_SHIFT))&PWMA_SM0CAPTCTRLX_CX1CNT_MASK) /*!< PWMA_SM0CAPTCTRLX.CX1CNT Field          */

/*! @name SM0CAPTCOMPX - Capture Compare X Register */
#define PWMA_SM0CAPTCOMPX_EDGCMPX_MASK           (0xFFU)                                             /*!< PWMA_SM0CAPTCOMPX.EDGCMPX Mask          */
#define PWMA_SM0CAPTCOMPX_EDGCMPX_SHIFT          (0U)                                                /*!< PWMA_SM0CAPTCOMPX.EDGCMPX Position      */
#define PWMA_SM0CAPTCOMPX_EDGCMPX(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCOMPX_EDGCMPX_SHIFT))&PWMA_SM0CAPTCOMPX_EDGCMPX_MASK) /*!< PWMA_SM0CAPTCOMPX.EDGCMPX Field         */
#define PWMA_SM0CAPTCOMPX_EDGCNTX_MASK           (0xFF00U)                                           /*!< PWMA_SM0CAPTCOMPX.EDGCNTX Mask          */
#define PWMA_SM0CAPTCOMPX_EDGCNTX_SHIFT          (8U)                                                /*!< PWMA_SM0CAPTCOMPX.EDGCNTX Position      */
#define PWMA_SM0CAPTCOMPX_EDGCNTX(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CAPTCOMPX_EDGCNTX_SHIFT))&PWMA_SM0CAPTCOMPX_EDGCNTX_MASK) /*!< PWMA_SM0CAPTCOMPX.EDGCNTX Field         */

/*! @name SM0CVAL0 - Capture Value 0 Register */
#define PWMA_SM0CVAL0_CAPTVAL0_MASK              (0xFFFFU)                                           /*!< PWMA_SM0CVAL0.CAPTVAL0 Mask             */
#define PWMA_SM0CVAL0_CAPTVAL0_SHIFT             (0U)                                                /*!< PWMA_SM0CVAL0.CAPTVAL0 Position         */
#define PWMA_SM0CVAL0_CAPTVAL0(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL0_CAPTVAL0_SHIFT))&PWMA_SM0CVAL0_CAPTVAL0_MASK) /*!< PWMA_SM0CVAL0.CAPTVAL0 Field            */

/*! @name SM0CVAL0CYC - Capture Value 0 Cycle Register */
#define PWMA_SM0CVAL0CYC_CVAL0CYC_MASK           (0xFU)                                              /*!< PWMA_SM0CVAL0CYC.CVAL0CYC Mask          */
#define PWMA_SM0CVAL0CYC_CVAL0CYC_SHIFT          (0U)                                                /*!< PWMA_SM0CVAL0CYC.CVAL0CYC Position      */
#define PWMA_SM0CVAL0CYC_CVAL0CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL0CYC_CVAL0CYC_SHIFT))&PWMA_SM0CVAL0CYC_CVAL0CYC_MASK) /*!< PWMA_SM0CVAL0CYC.CVAL0CYC Field         */

/*! @name SM0CVAL1 - Capture Value 1 Register */
#define PWMA_SM0CVAL1_CAPTVAL1_MASK              (0xFFFFU)                                           /*!< PWMA_SM0CVAL1.CAPTVAL1 Mask             */
#define PWMA_SM0CVAL1_CAPTVAL1_SHIFT             (0U)                                                /*!< PWMA_SM0CVAL1.CAPTVAL1 Position         */
#define PWMA_SM0CVAL1_CAPTVAL1(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL1_CAPTVAL1_SHIFT))&PWMA_SM0CVAL1_CAPTVAL1_MASK) /*!< PWMA_SM0CVAL1.CAPTVAL1 Field            */

/*! @name SM0CVAL1CYC - Capture Value 1 Cycle Register */
#define PWMA_SM0CVAL1CYC_CVAL1CYC_MASK           (0xFU)                                              /*!< PWMA_SM0CVAL1CYC.CVAL1CYC Mask          */
#define PWMA_SM0CVAL1CYC_CVAL1CYC_SHIFT          (0U)                                                /*!< PWMA_SM0CVAL1CYC.CVAL1CYC Position      */
#define PWMA_SM0CVAL1CYC_CVAL1CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL1CYC_CVAL1CYC_SHIFT))&PWMA_SM0CVAL1CYC_CVAL1CYC_MASK) /*!< PWMA_SM0CVAL1CYC.CVAL1CYC Field         */

/*! @name SM0CVAL2 - Capture Value 2 Register */
#define PWMA_SM0CVAL2_CAPTVAL2_MASK              (0xFFFFU)                                           /*!< PWMA_SM0CVAL2.CAPTVAL2 Mask             */
#define PWMA_SM0CVAL2_CAPTVAL2_SHIFT             (0U)                                                /*!< PWMA_SM0CVAL2.CAPTVAL2 Position         */
#define PWMA_SM0CVAL2_CAPTVAL2(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL2_CAPTVAL2_SHIFT))&PWMA_SM0CVAL2_CAPTVAL2_MASK) /*!< PWMA_SM0CVAL2.CAPTVAL2 Field            */

/*! @name SM0CVAL2CYC - Capture Value 2 Cycle Register */
#define PWMA_SM0CVAL2CYC_CVAL2CYC_MASK           (0xFU)                                              /*!< PWMA_SM0CVAL2CYC.CVAL2CYC Mask          */
#define PWMA_SM0CVAL2CYC_CVAL2CYC_SHIFT          (0U)                                                /*!< PWMA_SM0CVAL2CYC.CVAL2CYC Position      */
#define PWMA_SM0CVAL2CYC_CVAL2CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL2CYC_CVAL2CYC_SHIFT))&PWMA_SM0CVAL2CYC_CVAL2CYC_MASK) /*!< PWMA_SM0CVAL2CYC.CVAL2CYC Field         */

/*! @name SM0CVAL3 - Capture Value 3 Register */
#define PWMA_SM0CVAL3_CAPTVAL3_MASK              (0xFFFFU)                                           /*!< PWMA_SM0CVAL3.CAPTVAL3 Mask             */
#define PWMA_SM0CVAL3_CAPTVAL3_SHIFT             (0U)                                                /*!< PWMA_SM0CVAL3.CAPTVAL3 Position         */
#define PWMA_SM0CVAL3_CAPTVAL3(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL3_CAPTVAL3_SHIFT))&PWMA_SM0CVAL3_CAPTVAL3_MASK) /*!< PWMA_SM0CVAL3.CAPTVAL3 Field            */

/*! @name SM0CVAL3CYC - Capture Value 3 Cycle Register */
#define PWMA_SM0CVAL3CYC_CVAL3CYC_MASK           (0xFU)                                              /*!< PWMA_SM0CVAL3CYC.CVAL3CYC Mask          */
#define PWMA_SM0CVAL3CYC_CVAL3CYC_SHIFT          (0U)                                                /*!< PWMA_SM0CVAL3CYC.CVAL3CYC Position      */
#define PWMA_SM0CVAL3CYC_CVAL3CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL3CYC_CVAL3CYC_SHIFT))&PWMA_SM0CVAL3CYC_CVAL3CYC_MASK) /*!< PWMA_SM0CVAL3CYC.CVAL3CYC Field         */

/*! @name SM0CVAL4 - Capture Value 4 Register */
#define PWMA_SM0CVAL4_CAPTVAL4_MASK              (0xFFFFU)                                           /*!< PWMA_SM0CVAL4.CAPTVAL4 Mask             */
#define PWMA_SM0CVAL4_CAPTVAL4_SHIFT             (0U)                                                /*!< PWMA_SM0CVAL4.CAPTVAL4 Position         */
#define PWMA_SM0CVAL4_CAPTVAL4(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL4_CAPTVAL4_SHIFT))&PWMA_SM0CVAL4_CAPTVAL4_MASK) /*!< PWMA_SM0CVAL4.CAPTVAL4 Field            */

/*! @name SM0CVAL4CYC - Capture Value 4 Cycle Register */
#define PWMA_SM0CVAL4CYC_CVAL4CYC_MASK           (0xFU)                                              /*!< PWMA_SM0CVAL4CYC.CVAL4CYC Mask          */
#define PWMA_SM0CVAL4CYC_CVAL4CYC_SHIFT          (0U)                                                /*!< PWMA_SM0CVAL4CYC.CVAL4CYC Position      */
#define PWMA_SM0CVAL4CYC_CVAL4CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL4CYC_CVAL4CYC_SHIFT))&PWMA_SM0CVAL4CYC_CVAL4CYC_MASK) /*!< PWMA_SM0CVAL4CYC.CVAL4CYC Field         */

/*! @name SM0CVAL5 - Capture Value 5 Register */
#define PWMA_SM0CVAL5_CAPTVAL5_MASK              (0xFFFFU)                                           /*!< PWMA_SM0CVAL5.CAPTVAL5 Mask             */
#define PWMA_SM0CVAL5_CAPTVAL5_SHIFT             (0U)                                                /*!< PWMA_SM0CVAL5.CAPTVAL5 Position         */
#define PWMA_SM0CVAL5_CAPTVAL5(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL5_CAPTVAL5_SHIFT))&PWMA_SM0CVAL5_CAPTVAL5_MASK) /*!< PWMA_SM0CVAL5.CAPTVAL5 Field            */

/*! @name SM0CVAL5CYC - Capture Value 5 Cycle Register */
#define PWMA_SM0CVAL5CYC_CVAL5CYC_MASK           (0xFU)                                              /*!< PWMA_SM0CVAL5CYC.CVAL5CYC Mask          */
#define PWMA_SM0CVAL5CYC_CVAL5CYC_SHIFT          (0U)                                                /*!< PWMA_SM0CVAL5CYC.CVAL5CYC Position      */
#define PWMA_SM0CVAL5CYC_CVAL5CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM0CVAL5CYC_CVAL5CYC_SHIFT))&PWMA_SM0CVAL5CYC_CVAL5CYC_MASK) /*!< PWMA_SM0CVAL5CYC.CVAL5CYC Field         */

/*! @name SM1CNT - Counter Register */
#define PWMA_SM1CNT_CNT_MASK                     (0xFFFFU)                                           /*!< PWMA_SM1CNT.CNT Mask                    */
#define PWMA_SM1CNT_CNT_SHIFT                    (0U)                                                /*!< PWMA_SM1CNT.CNT Position                */
#define PWMA_SM1CNT_CNT(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CNT_CNT_SHIFT))&PWMA_SM1CNT_CNT_MASK) /*!< PWMA_SM1CNT.CNT Field                   */

/*! @name SM1INIT - Initial Count Register */
#define PWMA_SM1INIT_INIT_MASK                   (0xFFFFU)                                           /*!< PWMA_SM1INIT.INIT Mask                  */
#define PWMA_SM1INIT_INIT_SHIFT                  (0U)                                                /*!< PWMA_SM1INIT.INIT Position              */
#define PWMA_SM1INIT_INIT(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1INIT_INIT_SHIFT))&PWMA_SM1INIT_INIT_MASK) /*!< PWMA_SM1INIT.INIT Field                 */

/*! @name SM1CTRL2 - Control 2 Register */
#define PWMA_SM1CTRL2_CLK_SEL_MASK               (0x3U)                                              /*!< PWMA_SM1CTRL2.CLK_SEL Mask              */
#define PWMA_SM1CTRL2_CLK_SEL_SHIFT              (0U)                                                /*!< PWMA_SM1CTRL2.CLK_SEL Position          */
#define PWMA_SM1CTRL2_CLK_SEL(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_CLK_SEL_SHIFT))&PWMA_SM1CTRL2_CLK_SEL_MASK) /*!< PWMA_SM1CTRL2.CLK_SEL Field             */
#define PWMA_SM1CTRL2_RELOAD_SEL_MASK            (0x4U)                                              /*!< PWMA_SM1CTRL2.RELOAD_SEL Mask           */
#define PWMA_SM1CTRL2_RELOAD_SEL_SHIFT           (2U)                                                /*!< PWMA_SM1CTRL2.RELOAD_SEL Position       */
#define PWMA_SM1CTRL2_RELOAD_SEL(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_RELOAD_SEL_SHIFT))&PWMA_SM1CTRL2_RELOAD_SEL_MASK) /*!< PWMA_SM1CTRL2.RELOAD_SEL Field          */
#define PWMA_SM1CTRL2_FORCE_SEL_MASK             (0x38U)                                             /*!< PWMA_SM1CTRL2.FORCE_SEL Mask            */
#define PWMA_SM1CTRL2_FORCE_SEL_SHIFT            (3U)                                                /*!< PWMA_SM1CTRL2.FORCE_SEL Position        */
#define PWMA_SM1CTRL2_FORCE_SEL(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_FORCE_SEL_SHIFT))&PWMA_SM1CTRL2_FORCE_SEL_MASK) /*!< PWMA_SM1CTRL2.FORCE_SEL Field           */
#define PWMA_SM1CTRL2_FORCE_MASK                 (0x40U)                                             /*!< PWMA_SM1CTRL2.FORCE Mask                */
#define PWMA_SM1CTRL2_FORCE_SHIFT                (6U)                                                /*!< PWMA_SM1CTRL2.FORCE Position            */
#define PWMA_SM1CTRL2_FORCE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_FORCE_SHIFT))&PWMA_SM1CTRL2_FORCE_MASK) /*!< PWMA_SM1CTRL2.FORCE Field               */
#define PWMA_SM1CTRL2_FRCEN_MASK                 (0x80U)                                             /*!< PWMA_SM1CTRL2.FRCEN Mask                */
#define PWMA_SM1CTRL2_FRCEN_SHIFT                (7U)                                                /*!< PWMA_SM1CTRL2.FRCEN Position            */
#define PWMA_SM1CTRL2_FRCEN(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_FRCEN_SHIFT))&PWMA_SM1CTRL2_FRCEN_MASK) /*!< PWMA_SM1CTRL2.FRCEN Field               */
#define PWMA_SM1CTRL2_INIT_SEL_MASK              (0x300U)                                            /*!< PWMA_SM1CTRL2.INIT_SEL Mask             */
#define PWMA_SM1CTRL2_INIT_SEL_SHIFT             (8U)                                                /*!< PWMA_SM1CTRL2.INIT_SEL Position         */
#define PWMA_SM1CTRL2_INIT_SEL(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_INIT_SEL_SHIFT))&PWMA_SM1CTRL2_INIT_SEL_MASK) /*!< PWMA_SM1CTRL2.INIT_SEL Field            */
#define PWMA_SM1CTRL2_PWMX_INIT_MASK             (0x400U)                                            /*!< PWMA_SM1CTRL2.PWMX_INIT Mask            */
#define PWMA_SM1CTRL2_PWMX_INIT_SHIFT            (10U)                                               /*!< PWMA_SM1CTRL2.PWMX_INIT Position        */
#define PWMA_SM1CTRL2_PWMX_INIT(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_PWMX_INIT_SHIFT))&PWMA_SM1CTRL2_PWMX_INIT_MASK) /*!< PWMA_SM1CTRL2.PWMX_INIT Field           */
#define PWMA_SM1CTRL2_PWM45_INIT_MASK            (0x800U)                                            /*!< PWMA_SM1CTRL2.PWM45_INIT Mask           */
#define PWMA_SM1CTRL2_PWM45_INIT_SHIFT           (11U)                                               /*!< PWMA_SM1CTRL2.PWM45_INIT Position       */
#define PWMA_SM1CTRL2_PWM45_INIT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_PWM45_INIT_SHIFT))&PWMA_SM1CTRL2_PWM45_INIT_MASK) /*!< PWMA_SM1CTRL2.PWM45_INIT Field          */
#define PWMA_SM1CTRL2_PWM23_INIT_MASK            (0x1000U)                                           /*!< PWMA_SM1CTRL2.PWM23_INIT Mask           */
#define PWMA_SM1CTRL2_PWM23_INIT_SHIFT           (12U)                                               /*!< PWMA_SM1CTRL2.PWM23_INIT Position       */
#define PWMA_SM1CTRL2_PWM23_INIT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_PWM23_INIT_SHIFT))&PWMA_SM1CTRL2_PWM23_INIT_MASK) /*!< PWMA_SM1CTRL2.PWM23_INIT Field          */
#define PWMA_SM1CTRL2_INDEP_MASK                 (0x2000U)                                           /*!< PWMA_SM1CTRL2.INDEP Mask                */
#define PWMA_SM1CTRL2_INDEP_SHIFT                (13U)                                               /*!< PWMA_SM1CTRL2.INDEP Position            */
#define PWMA_SM1CTRL2_INDEP(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_INDEP_SHIFT))&PWMA_SM1CTRL2_INDEP_MASK) /*!< PWMA_SM1CTRL2.INDEP Field               */
#define PWMA_SM1CTRL2_WAITEN_MASK                (0x4000U)                                           /*!< PWMA_SM1CTRL2.WAITEN Mask               */
#define PWMA_SM1CTRL2_WAITEN_SHIFT               (14U)                                               /*!< PWMA_SM1CTRL2.WAITEN Position           */
#define PWMA_SM1CTRL2_WAITEN(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_WAITEN_SHIFT))&PWMA_SM1CTRL2_WAITEN_MASK) /*!< PWMA_SM1CTRL2.WAITEN Field              */
#define PWMA_SM1CTRL2_DBGEN_MASK                 (0x8000U)                                           /*!< PWMA_SM1CTRL2.DBGEN Mask                */
#define PWMA_SM1CTRL2_DBGEN_SHIFT                (15U)                                               /*!< PWMA_SM1CTRL2.DBGEN Position            */
#define PWMA_SM1CTRL2_DBGEN(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL2_DBGEN_SHIFT))&PWMA_SM1CTRL2_DBGEN_MASK) /*!< PWMA_SM1CTRL2.DBGEN Field               */

/*! @name SM1CTRL - Control Register */
#define PWMA_SM1CTRL_DBLEN_MASK                  (0x1U)                                              /*!< PWMA_SM1CTRL.DBLEN Mask                 */
#define PWMA_SM1CTRL_DBLEN_SHIFT                 (0U)                                                /*!< PWMA_SM1CTRL.DBLEN Position             */
#define PWMA_SM1CTRL_DBLEN(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL_DBLEN_SHIFT))&PWMA_SM1CTRL_DBLEN_MASK) /*!< PWMA_SM1CTRL.DBLEN Field                */
#define PWMA_SM1CTRL_DBLX_MASK                   (0x2U)                                              /*!< PWMA_SM1CTRL.DBLX Mask                  */
#define PWMA_SM1CTRL_DBLX_SHIFT                  (1U)                                                /*!< PWMA_SM1CTRL.DBLX Position              */
#define PWMA_SM1CTRL_DBLX(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL_DBLX_SHIFT))&PWMA_SM1CTRL_DBLX_MASK) /*!< PWMA_SM1CTRL.DBLX Field                 */
#define PWMA_SM1CTRL_LDMOD_MASK                  (0x4U)                                              /*!< PWMA_SM1CTRL.LDMOD Mask                 */
#define PWMA_SM1CTRL_LDMOD_SHIFT                 (2U)                                                /*!< PWMA_SM1CTRL.LDMOD Position             */
#define PWMA_SM1CTRL_LDMOD(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL_LDMOD_SHIFT))&PWMA_SM1CTRL_LDMOD_MASK) /*!< PWMA_SM1CTRL.LDMOD Field                */
#define PWMA_SM1CTRL_PRSC_MASK                   (0x70U)                                             /*!< PWMA_SM1CTRL.PRSC Mask                  */
#define PWMA_SM1CTRL_PRSC_SHIFT                  (4U)                                                /*!< PWMA_SM1CTRL.PRSC Position              */
#define PWMA_SM1CTRL_PRSC(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL_PRSC_SHIFT))&PWMA_SM1CTRL_PRSC_MASK) /*!< PWMA_SM1CTRL.PRSC Field                 */
#define PWMA_SM1CTRL_DT_MASK                     (0x300U)                                            /*!< PWMA_SM1CTRL.DT Mask                    */
#define PWMA_SM1CTRL_DT_SHIFT                    (8U)                                                /*!< PWMA_SM1CTRL.DT Position                */
#define PWMA_SM1CTRL_DT(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL_DT_SHIFT))&PWMA_SM1CTRL_DT_MASK) /*!< PWMA_SM1CTRL.DT Field                   */
#define PWMA_SM1CTRL_FULL_MASK                   (0x400U)                                            /*!< PWMA_SM1CTRL.FULL Mask                  */
#define PWMA_SM1CTRL_FULL_SHIFT                  (10U)                                               /*!< PWMA_SM1CTRL.FULL Position              */
#define PWMA_SM1CTRL_FULL(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL_FULL_SHIFT))&PWMA_SM1CTRL_FULL_MASK) /*!< PWMA_SM1CTRL.FULL Field                 */
#define PWMA_SM1CTRL_HALF_MASK                   (0x800U)                                            /*!< PWMA_SM1CTRL.HALF Mask                  */
#define PWMA_SM1CTRL_HALF_SHIFT                  (11U)                                               /*!< PWMA_SM1CTRL.HALF Position              */
#define PWMA_SM1CTRL_HALF(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL_HALF_SHIFT))&PWMA_SM1CTRL_HALF_MASK) /*!< PWMA_SM1CTRL.HALF Field                 */
#define PWMA_SM1CTRL_LDFQ_MASK                   (0xF000U)                                           /*!< PWMA_SM1CTRL.LDFQ Mask                  */
#define PWMA_SM1CTRL_LDFQ_SHIFT                  (12U)                                               /*!< PWMA_SM1CTRL.LDFQ Position              */
#define PWMA_SM1CTRL_LDFQ(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CTRL_LDFQ_SHIFT))&PWMA_SM1CTRL_LDFQ_MASK) /*!< PWMA_SM1CTRL.LDFQ Field                 */

/*! @name SM1VAL0 - Value Register 0 */
#define PWMA_SM1VAL0_VAL0_MASK                   (0xFFFFU)                                           /*!< PWMA_SM1VAL0.VAL0 Mask                  */
#define PWMA_SM1VAL0_VAL0_SHIFT                  (0U)                                                /*!< PWMA_SM1VAL0.VAL0 Position              */
#define PWMA_SM1VAL0_VAL0(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1VAL0_VAL0_SHIFT))&PWMA_SM1VAL0_VAL0_MASK) /*!< PWMA_SM1VAL0.VAL0 Field                 */

/*! @name SM1FRACVAL1 - Fractional Value Register 1 */
#define PWMA_SM1FRACVAL1_FRACVAL1_MASK           (0xF800U)                                           /*!< PWMA_SM1FRACVAL1.FRACVAL1 Mask          */
#define PWMA_SM1FRACVAL1_FRACVAL1_SHIFT          (11U)                                               /*!< PWMA_SM1FRACVAL1.FRACVAL1 Position      */
#define PWMA_SM1FRACVAL1_FRACVAL1(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1FRACVAL1_FRACVAL1_SHIFT))&PWMA_SM1FRACVAL1_FRACVAL1_MASK) /*!< PWMA_SM1FRACVAL1.FRACVAL1 Field         */

/*! @name SM1VAL1 - Value Register 1 */
#define PWMA_SM1VAL1_VAL1_MASK                   (0xFFFFU)                                           /*!< PWMA_SM1VAL1.VAL1 Mask                  */
#define PWMA_SM1VAL1_VAL1_SHIFT                  (0U)                                                /*!< PWMA_SM1VAL1.VAL1 Position              */
#define PWMA_SM1VAL1_VAL1(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1VAL1_VAL1_SHIFT))&PWMA_SM1VAL1_VAL1_MASK) /*!< PWMA_SM1VAL1.VAL1 Field                 */

/*! @name SM1FRACVAL2 - Fractional Value Register 2 */
#define PWMA_SM1FRACVAL2_FRACVAL2_MASK           (0xF800U)                                           /*!< PWMA_SM1FRACVAL2.FRACVAL2 Mask          */
#define PWMA_SM1FRACVAL2_FRACVAL2_SHIFT          (11U)                                               /*!< PWMA_SM1FRACVAL2.FRACVAL2 Position      */
#define PWMA_SM1FRACVAL2_FRACVAL2(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1FRACVAL2_FRACVAL2_SHIFT))&PWMA_SM1FRACVAL2_FRACVAL2_MASK) /*!< PWMA_SM1FRACVAL2.FRACVAL2 Field         */

/*! @name SM1VAL2 - Value Register 2 */
#define PWMA_SM1VAL2_VAL2_MASK                   (0xFFFFU)                                           /*!< PWMA_SM1VAL2.VAL2 Mask                  */
#define PWMA_SM1VAL2_VAL2_SHIFT                  (0U)                                                /*!< PWMA_SM1VAL2.VAL2 Position              */
#define PWMA_SM1VAL2_VAL2(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1VAL2_VAL2_SHIFT))&PWMA_SM1VAL2_VAL2_MASK) /*!< PWMA_SM1VAL2.VAL2 Field                 */

/*! @name SM1FRACVAL3 - Fractional Value Register 3 */
#define PWMA_SM1FRACVAL3_FRACVAL3_MASK           (0xF800U)                                           /*!< PWMA_SM1FRACVAL3.FRACVAL3 Mask          */
#define PWMA_SM1FRACVAL3_FRACVAL3_SHIFT          (11U)                                               /*!< PWMA_SM1FRACVAL3.FRACVAL3 Position      */
#define PWMA_SM1FRACVAL3_FRACVAL3(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1FRACVAL3_FRACVAL3_SHIFT))&PWMA_SM1FRACVAL3_FRACVAL3_MASK) /*!< PWMA_SM1FRACVAL3.FRACVAL3 Field         */

/*! @name SM1VAL3 - Value Register 3 */
#define PWMA_SM1VAL3_VAL3_MASK                   (0xFFFFU)                                           /*!< PWMA_SM1VAL3.VAL3 Mask                  */
#define PWMA_SM1VAL3_VAL3_SHIFT                  (0U)                                                /*!< PWMA_SM1VAL3.VAL3 Position              */
#define PWMA_SM1VAL3_VAL3(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1VAL3_VAL3_SHIFT))&PWMA_SM1VAL3_VAL3_MASK) /*!< PWMA_SM1VAL3.VAL3 Field                 */

/*! @name SM1FRACVAL4 - Fractional Value Register 4 */
#define PWMA_SM1FRACVAL4_FRACVAL4_MASK           (0xF800U)                                           /*!< PWMA_SM1FRACVAL4.FRACVAL4 Mask          */
#define PWMA_SM1FRACVAL4_FRACVAL4_SHIFT          (11U)                                               /*!< PWMA_SM1FRACVAL4.FRACVAL4 Position      */
#define PWMA_SM1FRACVAL4_FRACVAL4(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1FRACVAL4_FRACVAL4_SHIFT))&PWMA_SM1FRACVAL4_FRACVAL4_MASK) /*!< PWMA_SM1FRACVAL4.FRACVAL4 Field         */

/*! @name SM1VAL4 - Value Register 4 */
#define PWMA_SM1VAL4_VAL4_MASK                   (0xFFFFU)                                           /*!< PWMA_SM1VAL4.VAL4 Mask                  */
#define PWMA_SM1VAL4_VAL4_SHIFT                  (0U)                                                /*!< PWMA_SM1VAL4.VAL4 Position              */
#define PWMA_SM1VAL4_VAL4(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1VAL4_VAL4_SHIFT))&PWMA_SM1VAL4_VAL4_MASK) /*!< PWMA_SM1VAL4.VAL4 Field                 */

/*! @name SM1FRACVAL5 - Fractional Value Register 5 */
#define PWMA_SM1FRACVAL5_FRACVAL5_MASK           (0xF800U)                                           /*!< PWMA_SM1FRACVAL5.FRACVAL5 Mask          */
#define PWMA_SM1FRACVAL5_FRACVAL5_SHIFT          (11U)                                               /*!< PWMA_SM1FRACVAL5.FRACVAL5 Position      */
#define PWMA_SM1FRACVAL5_FRACVAL5(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1FRACVAL5_FRACVAL5_SHIFT))&PWMA_SM1FRACVAL5_FRACVAL5_MASK) /*!< PWMA_SM1FRACVAL5.FRACVAL5 Field         */

/*! @name SM1VAL5 - Value Register 5 */
#define PWMA_SM1VAL5_VAL5_MASK                   (0xFFFFU)                                           /*!< PWMA_SM1VAL5.VAL5 Mask                  */
#define PWMA_SM1VAL5_VAL5_SHIFT                  (0U)                                                /*!< PWMA_SM1VAL5.VAL5 Position              */
#define PWMA_SM1VAL5_VAL5(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1VAL5_VAL5_SHIFT))&PWMA_SM1VAL5_VAL5_MASK) /*!< PWMA_SM1VAL5.VAL5 Field                 */

/*! @name SM1FRCTRL - Fractional Control Register */
#define PWMA_SM1FRCTRL_FRAC1_EN_MASK             (0x2U)                                              /*!< PWMA_SM1FRCTRL.FRAC1_EN Mask            */
#define PWMA_SM1FRCTRL_FRAC1_EN_SHIFT            (1U)                                                /*!< PWMA_SM1FRCTRL.FRAC1_EN Position        */
#define PWMA_SM1FRCTRL_FRAC1_EN(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1FRCTRL_FRAC1_EN_SHIFT))&PWMA_SM1FRCTRL_FRAC1_EN_MASK) /*!< PWMA_SM1FRCTRL.FRAC1_EN Field           */
#define PWMA_SM1FRCTRL_FRAC23_EN_MASK            (0x4U)                                              /*!< PWMA_SM1FRCTRL.FRAC23_EN Mask           */
#define PWMA_SM1FRCTRL_FRAC23_EN_SHIFT           (2U)                                                /*!< PWMA_SM1FRCTRL.FRAC23_EN Position       */
#define PWMA_SM1FRCTRL_FRAC23_EN(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1FRCTRL_FRAC23_EN_SHIFT))&PWMA_SM1FRCTRL_FRAC23_EN_MASK) /*!< PWMA_SM1FRCTRL.FRAC23_EN Field          */
#define PWMA_SM1FRCTRL_FRAC45_EN_MASK            (0x10U)                                             /*!< PWMA_SM1FRCTRL.FRAC45_EN Mask           */
#define PWMA_SM1FRCTRL_FRAC45_EN_SHIFT           (4U)                                                /*!< PWMA_SM1FRCTRL.FRAC45_EN Position       */
#define PWMA_SM1FRCTRL_FRAC45_EN(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1FRCTRL_FRAC45_EN_SHIFT))&PWMA_SM1FRCTRL_FRAC45_EN_MASK) /*!< PWMA_SM1FRCTRL.FRAC45_EN Field          */
#define PWMA_SM1FRCTRL_FRAC_PU_MASK              (0x100U)                                            /*!< PWMA_SM1FRCTRL.FRAC_PU Mask             */
#define PWMA_SM1FRCTRL_FRAC_PU_SHIFT             (8U)                                                /*!< PWMA_SM1FRCTRL.FRAC_PU Position         */
#define PWMA_SM1FRCTRL_FRAC_PU(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1FRCTRL_FRAC_PU_SHIFT))&PWMA_SM1FRCTRL_FRAC_PU_MASK) /*!< PWMA_SM1FRCTRL.FRAC_PU Field            */
#define PWMA_SM1FRCTRL_TEST_MASK                 (0x8000U)                                           /*!< PWMA_SM1FRCTRL.TEST Mask                */
#define PWMA_SM1FRCTRL_TEST_SHIFT                (15U)                                               /*!< PWMA_SM1FRCTRL.TEST Position            */
#define PWMA_SM1FRCTRL_TEST(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1FRCTRL_TEST_SHIFT))&PWMA_SM1FRCTRL_TEST_MASK) /*!< PWMA_SM1FRCTRL.TEST Field               */

/*! @name SM1OCTRL - Output Control Register */
#define PWMA_SM1OCTRL_PWMXFS_MASK                (0x3U)                                              /*!< PWMA_SM1OCTRL.PWMXFS Mask               */
#define PWMA_SM1OCTRL_PWMXFS_SHIFT               (0U)                                                /*!< PWMA_SM1OCTRL.PWMXFS Position           */
#define PWMA_SM1OCTRL_PWMXFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM1OCTRL_PWMXFS_SHIFT))&PWMA_SM1OCTRL_PWMXFS_MASK) /*!< PWMA_SM1OCTRL.PWMXFS Field              */
#define PWMA_SM1OCTRL_PWMBFS_MASK                (0xCU)                                              /*!< PWMA_SM1OCTRL.PWMBFS Mask               */
#define PWMA_SM1OCTRL_PWMBFS_SHIFT               (2U)                                                /*!< PWMA_SM1OCTRL.PWMBFS Position           */
#define PWMA_SM1OCTRL_PWMBFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM1OCTRL_PWMBFS_SHIFT))&PWMA_SM1OCTRL_PWMBFS_MASK) /*!< PWMA_SM1OCTRL.PWMBFS Field              */
#define PWMA_SM1OCTRL_PWMAFS_MASK                (0x30U)                                             /*!< PWMA_SM1OCTRL.PWMAFS Mask               */
#define PWMA_SM1OCTRL_PWMAFS_SHIFT               (4U)                                                /*!< PWMA_SM1OCTRL.PWMAFS Position           */
#define PWMA_SM1OCTRL_PWMAFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM1OCTRL_PWMAFS_SHIFT))&PWMA_SM1OCTRL_PWMAFS_MASK) /*!< PWMA_SM1OCTRL.PWMAFS Field              */
#define PWMA_SM1OCTRL_POLX_MASK                  (0x100U)                                            /*!< PWMA_SM1OCTRL.POLX Mask                 */
#define PWMA_SM1OCTRL_POLX_SHIFT                 (8U)                                                /*!< PWMA_SM1OCTRL.POLX Position             */
#define PWMA_SM1OCTRL_POLX(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM1OCTRL_POLX_SHIFT))&PWMA_SM1OCTRL_POLX_MASK) /*!< PWMA_SM1OCTRL.POLX Field                */
#define PWMA_SM1OCTRL_POLB_MASK                  (0x200U)                                            /*!< PWMA_SM1OCTRL.POLB Mask                 */
#define PWMA_SM1OCTRL_POLB_SHIFT                 (9U)                                                /*!< PWMA_SM1OCTRL.POLB Position             */
#define PWMA_SM1OCTRL_POLB(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM1OCTRL_POLB_SHIFT))&PWMA_SM1OCTRL_POLB_MASK) /*!< PWMA_SM1OCTRL.POLB Field                */
#define PWMA_SM1OCTRL_POLA_MASK                  (0x400U)                                            /*!< PWMA_SM1OCTRL.POLA Mask                 */
#define PWMA_SM1OCTRL_POLA_SHIFT                 (10U)                                               /*!< PWMA_SM1OCTRL.POLA Position             */
#define PWMA_SM1OCTRL_POLA(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM1OCTRL_POLA_SHIFT))&PWMA_SM1OCTRL_POLA_MASK) /*!< PWMA_SM1OCTRL.POLA Field                */
#define PWMA_SM1OCTRL_PWMX_IN_MASK               (0x2000U)                                           /*!< PWMA_SM1OCTRL.PWMX_IN Mask              */
#define PWMA_SM1OCTRL_PWMX_IN_SHIFT              (13U)                                               /*!< PWMA_SM1OCTRL.PWMX_IN Position          */
#define PWMA_SM1OCTRL_PWMX_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM1OCTRL_PWMX_IN_SHIFT))&PWMA_SM1OCTRL_PWMX_IN_MASK) /*!< PWMA_SM1OCTRL.PWMX_IN Field             */
#define PWMA_SM1OCTRL_PWMB_IN_MASK               (0x4000U)                                           /*!< PWMA_SM1OCTRL.PWMB_IN Mask              */
#define PWMA_SM1OCTRL_PWMB_IN_SHIFT              (14U)                                               /*!< PWMA_SM1OCTRL.PWMB_IN Position          */
#define PWMA_SM1OCTRL_PWMB_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM1OCTRL_PWMB_IN_SHIFT))&PWMA_SM1OCTRL_PWMB_IN_MASK) /*!< PWMA_SM1OCTRL.PWMB_IN Field             */
#define PWMA_SM1OCTRL_PWMA_IN_MASK               (0x8000U)                                           /*!< PWMA_SM1OCTRL.PWMA_IN Mask              */
#define PWMA_SM1OCTRL_PWMA_IN_SHIFT              (15U)                                               /*!< PWMA_SM1OCTRL.PWMA_IN Position          */
#define PWMA_SM1OCTRL_PWMA_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM1OCTRL_PWMA_IN_SHIFT))&PWMA_SM1OCTRL_PWMA_IN_MASK) /*!< PWMA_SM1OCTRL.PWMA_IN Field             */

/*! @name SM1STS - Status Register */
#define PWMA_SM1STS_CMPF_MASK                    (0x3FU)                                             /*!< PWMA_SM1STS.CMPF Mask                   */
#define PWMA_SM1STS_CMPF_SHIFT                   (0U)                                                /*!< PWMA_SM1STS.CMPF Position               */
#define PWMA_SM1STS_CMPF(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM1STS_CMPF_SHIFT))&PWMA_SM1STS_CMPF_MASK) /*!< PWMA_SM1STS.CMPF Field                  */
#define PWMA_SM1STS_CFX0_MASK                    (0x40U)                                             /*!< PWMA_SM1STS.CFX0 Mask                   */
#define PWMA_SM1STS_CFX0_SHIFT                   (6U)                                                /*!< PWMA_SM1STS.CFX0 Position               */
#define PWMA_SM1STS_CFX0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM1STS_CFX0_SHIFT))&PWMA_SM1STS_CFX0_MASK) /*!< PWMA_SM1STS.CFX0 Field                  */
#define PWMA_SM1STS_CFX1_MASK                    (0x80U)                                             /*!< PWMA_SM1STS.CFX1 Mask                   */
#define PWMA_SM1STS_CFX1_SHIFT                   (7U)                                                /*!< PWMA_SM1STS.CFX1 Position               */
#define PWMA_SM1STS_CFX1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM1STS_CFX1_SHIFT))&PWMA_SM1STS_CFX1_MASK) /*!< PWMA_SM1STS.CFX1 Field                  */
#define PWMA_SM1STS_CFB0_MASK                    (0x100U)                                            /*!< PWMA_SM1STS.CFB0 Mask                   */
#define PWMA_SM1STS_CFB0_SHIFT                   (8U)                                                /*!< PWMA_SM1STS.CFB0 Position               */
#define PWMA_SM1STS_CFB0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM1STS_CFB0_SHIFT))&PWMA_SM1STS_CFB0_MASK) /*!< PWMA_SM1STS.CFB0 Field                  */
#define PWMA_SM1STS_CFB1_MASK                    (0x200U)                                            /*!< PWMA_SM1STS.CFB1 Mask                   */
#define PWMA_SM1STS_CFB1_SHIFT                   (9U)                                                /*!< PWMA_SM1STS.CFB1 Position               */
#define PWMA_SM1STS_CFB1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM1STS_CFB1_SHIFT))&PWMA_SM1STS_CFB1_MASK) /*!< PWMA_SM1STS.CFB1 Field                  */
#define PWMA_SM1STS_CFA0_MASK                    (0x400U)                                            /*!< PWMA_SM1STS.CFA0 Mask                   */
#define PWMA_SM1STS_CFA0_SHIFT                   (10U)                                               /*!< PWMA_SM1STS.CFA0 Position               */
#define PWMA_SM1STS_CFA0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM1STS_CFA0_SHIFT))&PWMA_SM1STS_CFA0_MASK) /*!< PWMA_SM1STS.CFA0 Field                  */
#define PWMA_SM1STS_CFA1_MASK                    (0x800U)                                            /*!< PWMA_SM1STS.CFA1 Mask                   */
#define PWMA_SM1STS_CFA1_SHIFT                   (11U)                                               /*!< PWMA_SM1STS.CFA1 Position               */
#define PWMA_SM1STS_CFA1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM1STS_CFA1_SHIFT))&PWMA_SM1STS_CFA1_MASK) /*!< PWMA_SM1STS.CFA1 Field                  */
#define PWMA_SM1STS_RF_MASK                      (0x1000U)                                           /*!< PWMA_SM1STS.RF Mask                     */
#define PWMA_SM1STS_RF_SHIFT                     (12U)                                               /*!< PWMA_SM1STS.RF Position                 */
#define PWMA_SM1STS_RF(x)                        (((uint16_t)(((uint16_t)(x))<<PWMA_SM1STS_RF_SHIFT))&PWMA_SM1STS_RF_MASK) /*!< PWMA_SM1STS.RF Field                    */
#define PWMA_SM1STS_REF_MASK                     (0x2000U)                                           /*!< PWMA_SM1STS.REF Mask                    */
#define PWMA_SM1STS_REF_SHIFT                    (13U)                                               /*!< PWMA_SM1STS.REF Position                */
#define PWMA_SM1STS_REF(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM1STS_REF_SHIFT))&PWMA_SM1STS_REF_MASK) /*!< PWMA_SM1STS.REF Field                   */
#define PWMA_SM1STS_RUF_MASK                     (0x4000U)                                           /*!< PWMA_SM1STS.RUF Mask                    */
#define PWMA_SM1STS_RUF_SHIFT                    (14U)                                               /*!< PWMA_SM1STS.RUF Position                */
#define PWMA_SM1STS_RUF(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM1STS_RUF_SHIFT))&PWMA_SM1STS_RUF_MASK) /*!< PWMA_SM1STS.RUF Field                   */

/*! @name SM1INTEN - Interrupt Enable Register */
#define PWMA_SM1INTEN_CMPIE_MASK                 (0x3FU)                                             /*!< PWMA_SM1INTEN.CMPIE Mask                */
#define PWMA_SM1INTEN_CMPIE_SHIFT                (0U)                                                /*!< PWMA_SM1INTEN.CMPIE Position            */
#define PWMA_SM1INTEN_CMPIE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1INTEN_CMPIE_SHIFT))&PWMA_SM1INTEN_CMPIE_MASK) /*!< PWMA_SM1INTEN.CMPIE Field               */
#define PWMA_SM1INTEN_CX0IE_MASK                 (0x40U)                                             /*!< PWMA_SM1INTEN.CX0IE Mask                */
#define PWMA_SM1INTEN_CX0IE_SHIFT                (6U)                                                /*!< PWMA_SM1INTEN.CX0IE Position            */
#define PWMA_SM1INTEN_CX0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1INTEN_CX0IE_SHIFT))&PWMA_SM1INTEN_CX0IE_MASK) /*!< PWMA_SM1INTEN.CX0IE Field               */
#define PWMA_SM1INTEN_CX1IE_MASK                 (0x80U)                                             /*!< PWMA_SM1INTEN.CX1IE Mask                */
#define PWMA_SM1INTEN_CX1IE_SHIFT                (7U)                                                /*!< PWMA_SM1INTEN.CX1IE Position            */
#define PWMA_SM1INTEN_CX1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1INTEN_CX1IE_SHIFT))&PWMA_SM1INTEN_CX1IE_MASK) /*!< PWMA_SM1INTEN.CX1IE Field               */
#define PWMA_SM1INTEN_CB0IE_MASK                 (0x100U)                                            /*!< PWMA_SM1INTEN.CB0IE Mask                */
#define PWMA_SM1INTEN_CB0IE_SHIFT                (8U)                                                /*!< PWMA_SM1INTEN.CB0IE Position            */
#define PWMA_SM1INTEN_CB0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1INTEN_CB0IE_SHIFT))&PWMA_SM1INTEN_CB0IE_MASK) /*!< PWMA_SM1INTEN.CB0IE Field               */
#define PWMA_SM1INTEN_CB1IE_MASK                 (0x200U)                                            /*!< PWMA_SM1INTEN.CB1IE Mask                */
#define PWMA_SM1INTEN_CB1IE_SHIFT                (9U)                                                /*!< PWMA_SM1INTEN.CB1IE Position            */
#define PWMA_SM1INTEN_CB1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1INTEN_CB1IE_SHIFT))&PWMA_SM1INTEN_CB1IE_MASK) /*!< PWMA_SM1INTEN.CB1IE Field               */
#define PWMA_SM1INTEN_CA0IE_MASK                 (0x400U)                                            /*!< PWMA_SM1INTEN.CA0IE Mask                */
#define PWMA_SM1INTEN_CA0IE_SHIFT                (10U)                                               /*!< PWMA_SM1INTEN.CA0IE Position            */
#define PWMA_SM1INTEN_CA0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1INTEN_CA0IE_SHIFT))&PWMA_SM1INTEN_CA0IE_MASK) /*!< PWMA_SM1INTEN.CA0IE Field               */
#define PWMA_SM1INTEN_CA1IE_MASK                 (0x800U)                                            /*!< PWMA_SM1INTEN.CA1IE Mask                */
#define PWMA_SM1INTEN_CA1IE_SHIFT                (11U)                                               /*!< PWMA_SM1INTEN.CA1IE Position            */
#define PWMA_SM1INTEN_CA1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1INTEN_CA1IE_SHIFT))&PWMA_SM1INTEN_CA1IE_MASK) /*!< PWMA_SM1INTEN.CA1IE Field               */
#define PWMA_SM1INTEN_RIE_MASK                   (0x1000U)                                           /*!< PWMA_SM1INTEN.RIE Mask                  */
#define PWMA_SM1INTEN_RIE_SHIFT                  (12U)                                               /*!< PWMA_SM1INTEN.RIE Position              */
#define PWMA_SM1INTEN_RIE(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM1INTEN_RIE_SHIFT))&PWMA_SM1INTEN_RIE_MASK) /*!< PWMA_SM1INTEN.RIE Field                 */
#define PWMA_SM1INTEN_REIE_MASK                  (0x2000U)                                           /*!< PWMA_SM1INTEN.REIE Mask                 */
#define PWMA_SM1INTEN_REIE_SHIFT                 (13U)                                               /*!< PWMA_SM1INTEN.REIE Position             */
#define PWMA_SM1INTEN_REIE(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM1INTEN_REIE_SHIFT))&PWMA_SM1INTEN_REIE_MASK) /*!< PWMA_SM1INTEN.REIE Field                */

/*! @name SM1DMAEN - DMA Enable Register */
#define PWMA_SM1DMAEN_CX0DE_MASK                 (0x1U)                                              /*!< PWMA_SM1DMAEN.CX0DE Mask                */
#define PWMA_SM1DMAEN_CX0DE_SHIFT                (0U)                                                /*!< PWMA_SM1DMAEN.CX0DE Position            */
#define PWMA_SM1DMAEN_CX0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DMAEN_CX0DE_SHIFT))&PWMA_SM1DMAEN_CX0DE_MASK) /*!< PWMA_SM1DMAEN.CX0DE Field               */
#define PWMA_SM1DMAEN_CX1DE_MASK                 (0x2U)                                              /*!< PWMA_SM1DMAEN.CX1DE Mask                */
#define PWMA_SM1DMAEN_CX1DE_SHIFT                (1U)                                                /*!< PWMA_SM1DMAEN.CX1DE Position            */
#define PWMA_SM1DMAEN_CX1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DMAEN_CX1DE_SHIFT))&PWMA_SM1DMAEN_CX1DE_MASK) /*!< PWMA_SM1DMAEN.CX1DE Field               */
#define PWMA_SM1DMAEN_CB0DE_MASK                 (0x4U)                                              /*!< PWMA_SM1DMAEN.CB0DE Mask                */
#define PWMA_SM1DMAEN_CB0DE_SHIFT                (2U)                                                /*!< PWMA_SM1DMAEN.CB0DE Position            */
#define PWMA_SM1DMAEN_CB0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DMAEN_CB0DE_SHIFT))&PWMA_SM1DMAEN_CB0DE_MASK) /*!< PWMA_SM1DMAEN.CB0DE Field               */
#define PWMA_SM1DMAEN_CB1DE_MASK                 (0x8U)                                              /*!< PWMA_SM1DMAEN.CB1DE Mask                */
#define PWMA_SM1DMAEN_CB1DE_SHIFT                (3U)                                                /*!< PWMA_SM1DMAEN.CB1DE Position            */
#define PWMA_SM1DMAEN_CB1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DMAEN_CB1DE_SHIFT))&PWMA_SM1DMAEN_CB1DE_MASK) /*!< PWMA_SM1DMAEN.CB1DE Field               */
#define PWMA_SM1DMAEN_CA0DE_MASK                 (0x10U)                                             /*!< PWMA_SM1DMAEN.CA0DE Mask                */
#define PWMA_SM1DMAEN_CA0DE_SHIFT                (4U)                                                /*!< PWMA_SM1DMAEN.CA0DE Position            */
#define PWMA_SM1DMAEN_CA0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DMAEN_CA0DE_SHIFT))&PWMA_SM1DMAEN_CA0DE_MASK) /*!< PWMA_SM1DMAEN.CA0DE Field               */
#define PWMA_SM1DMAEN_CA1DE_MASK                 (0x20U)                                             /*!< PWMA_SM1DMAEN.CA1DE Mask                */
#define PWMA_SM1DMAEN_CA1DE_SHIFT                (5U)                                                /*!< PWMA_SM1DMAEN.CA1DE Position            */
#define PWMA_SM1DMAEN_CA1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DMAEN_CA1DE_SHIFT))&PWMA_SM1DMAEN_CA1DE_MASK) /*!< PWMA_SM1DMAEN.CA1DE Field               */
#define PWMA_SM1DMAEN_CAPTDE_MASK                (0xC0U)                                             /*!< PWMA_SM1DMAEN.CAPTDE Mask               */
#define PWMA_SM1DMAEN_CAPTDE_SHIFT               (6U)                                                /*!< PWMA_SM1DMAEN.CAPTDE Position           */
#define PWMA_SM1DMAEN_CAPTDE(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DMAEN_CAPTDE_SHIFT))&PWMA_SM1DMAEN_CAPTDE_MASK) /*!< PWMA_SM1DMAEN.CAPTDE Field              */
#define PWMA_SM1DMAEN_FAND_MASK                  (0x100U)                                            /*!< PWMA_SM1DMAEN.FAND Mask                 */
#define PWMA_SM1DMAEN_FAND_SHIFT                 (8U)                                                /*!< PWMA_SM1DMAEN.FAND Position             */
#define PWMA_SM1DMAEN_FAND(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DMAEN_FAND_SHIFT))&PWMA_SM1DMAEN_FAND_MASK) /*!< PWMA_SM1DMAEN.FAND Field                */
#define PWMA_SM1DMAEN_VALDE_MASK                 (0x200U)                                            /*!< PWMA_SM1DMAEN.VALDE Mask                */
#define PWMA_SM1DMAEN_VALDE_SHIFT                (9U)                                                /*!< PWMA_SM1DMAEN.VALDE Position            */
#define PWMA_SM1DMAEN_VALDE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DMAEN_VALDE_SHIFT))&PWMA_SM1DMAEN_VALDE_MASK) /*!< PWMA_SM1DMAEN.VALDE Field               */

/*! @name SM1TCTRL - Output Trigger Control Register */
#define PWMA_SM1TCTRL_OUT_TRIG_EN_MASK           (0x3FU)                                             /*!< PWMA_SM1TCTRL.OUT_TRIG_EN Mask          */
#define PWMA_SM1TCTRL_OUT_TRIG_EN_SHIFT          (0U)                                                /*!< PWMA_SM1TCTRL.OUT_TRIG_EN Position      */
#define PWMA_SM1TCTRL_OUT_TRIG_EN(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1TCTRL_OUT_TRIG_EN_SHIFT))&PWMA_SM1TCTRL_OUT_TRIG_EN_MASK) /*!< PWMA_SM1TCTRL.OUT_TRIG_EN Field         */
#define PWMA_SM1TCTRL_PWBOT1_MASK                (0x4000U)                                           /*!< PWMA_SM1TCTRL.PWBOT1 Mask               */
#define PWMA_SM1TCTRL_PWBOT1_SHIFT               (14U)                                               /*!< PWMA_SM1TCTRL.PWBOT1 Position           */
#define PWMA_SM1TCTRL_PWBOT1(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM1TCTRL_PWBOT1_SHIFT))&PWMA_SM1TCTRL_PWBOT1_MASK) /*!< PWMA_SM1TCTRL.PWBOT1 Field              */
#define PWMA_SM1TCTRL_PWAOT0_MASK                (0x8000U)                                           /*!< PWMA_SM1TCTRL.PWAOT0 Mask               */
#define PWMA_SM1TCTRL_PWAOT0_SHIFT               (15U)                                               /*!< PWMA_SM1TCTRL.PWAOT0 Position           */
#define PWMA_SM1TCTRL_PWAOT0(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM1TCTRL_PWAOT0_SHIFT))&PWMA_SM1TCTRL_PWAOT0_MASK) /*!< PWMA_SM1TCTRL.PWAOT0 Field              */

/*! @name SM1DISMAP0 - Fault Disable Mapping Register 0 */
#define PWMA_SM1DISMAP0_DIS0A_MASK               (0xFU)                                              /*!< PWMA_SM1DISMAP0.DIS0A Mask              */
#define PWMA_SM1DISMAP0_DIS0A_SHIFT              (0U)                                                /*!< PWMA_SM1DISMAP0.DIS0A Position          */
#define PWMA_SM1DISMAP0_DIS0A(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DISMAP0_DIS0A_SHIFT))&PWMA_SM1DISMAP0_DIS0A_MASK) /*!< PWMA_SM1DISMAP0.DIS0A Field             */
#define PWMA_SM1DISMAP0_DIS0B_MASK               (0xF0U)                                             /*!< PWMA_SM1DISMAP0.DIS0B Mask              */
#define PWMA_SM1DISMAP0_DIS0B_SHIFT              (4U)                                                /*!< PWMA_SM1DISMAP0.DIS0B Position          */
#define PWMA_SM1DISMAP0_DIS0B(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DISMAP0_DIS0B_SHIFT))&PWMA_SM1DISMAP0_DIS0B_MASK) /*!< PWMA_SM1DISMAP0.DIS0B Field             */
#define PWMA_SM1DISMAP0_DIS0X_MASK               (0xF00U)                                            /*!< PWMA_SM1DISMAP0.DIS0X Mask              */
#define PWMA_SM1DISMAP0_DIS0X_SHIFT              (8U)                                                /*!< PWMA_SM1DISMAP0.DIS0X Position          */
#define PWMA_SM1DISMAP0_DIS0X(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DISMAP0_DIS0X_SHIFT))&PWMA_SM1DISMAP0_DIS0X_MASK) /*!< PWMA_SM1DISMAP0.DIS0X Field             */

/*! @name SM1DTCNT - Deadtime Count Register %s */
#define PWMA_SM1DTCNT_DTCNT0_MASK                (0x7FFU)                                            /*!< PWMA_SM1DTCNT.DTCNT0 Mask               */
#define PWMA_SM1DTCNT_DTCNT0_SHIFT               (0U)                                                /*!< PWMA_SM1DTCNT.DTCNT0 Position           */
#define PWMA_SM1DTCNT_DTCNT0(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM1DTCNT_DTCNT0_SHIFT))&PWMA_SM1DTCNT_DTCNT0_MASK) /*!< PWMA_SM1DTCNT.DTCNT0 Field              */

/*! @name SM1CAPTCTRLA - Capture Control A Register */
#define PWMA_SM1CAPTCTRLA_ARMA_MASK              (0x1U)                                              /*!< PWMA_SM1CAPTCTRLA.ARMA Mask             */
#define PWMA_SM1CAPTCTRLA_ARMA_SHIFT             (0U)                                                /*!< PWMA_SM1CAPTCTRLA.ARMA Position         */
#define PWMA_SM1CAPTCTRLA_ARMA(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLA_ARMA_SHIFT))&PWMA_SM1CAPTCTRLA_ARMA_MASK) /*!< PWMA_SM1CAPTCTRLA.ARMA Field            */
#define PWMA_SM1CAPTCTRLA_ONESHOTA_MASK          (0x2U)                                              /*!< PWMA_SM1CAPTCTRLA.ONESHOTA Mask         */
#define PWMA_SM1CAPTCTRLA_ONESHOTA_SHIFT         (1U)                                                /*!< PWMA_SM1CAPTCTRLA.ONESHOTA Position     */
#define PWMA_SM1CAPTCTRLA_ONESHOTA(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLA_ONESHOTA_SHIFT))&PWMA_SM1CAPTCTRLA_ONESHOTA_MASK) /*!< PWMA_SM1CAPTCTRLA.ONESHOTA Field        */
#define PWMA_SM1CAPTCTRLA_EDGA0_MASK             (0xCU)                                              /*!< PWMA_SM1CAPTCTRLA.EDGA0 Mask            */
#define PWMA_SM1CAPTCTRLA_EDGA0_SHIFT            (2U)                                                /*!< PWMA_SM1CAPTCTRLA.EDGA0 Position        */
#define PWMA_SM1CAPTCTRLA_EDGA0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLA_EDGA0_SHIFT))&PWMA_SM1CAPTCTRLA_EDGA0_MASK) /*!< PWMA_SM1CAPTCTRLA.EDGA0 Field           */
#define PWMA_SM1CAPTCTRLA_EDGA1_MASK             (0x30U)                                             /*!< PWMA_SM1CAPTCTRLA.EDGA1 Mask            */
#define PWMA_SM1CAPTCTRLA_EDGA1_SHIFT            (4U)                                                /*!< PWMA_SM1CAPTCTRLA.EDGA1 Position        */
#define PWMA_SM1CAPTCTRLA_EDGA1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLA_EDGA1_SHIFT))&PWMA_SM1CAPTCTRLA_EDGA1_MASK) /*!< PWMA_SM1CAPTCTRLA.EDGA1 Field           */
#define PWMA_SM1CAPTCTRLA_INP_SELA_MASK          (0x40U)                                             /*!< PWMA_SM1CAPTCTRLA.INP_SELA Mask         */
#define PWMA_SM1CAPTCTRLA_INP_SELA_SHIFT         (6U)                                                /*!< PWMA_SM1CAPTCTRLA.INP_SELA Position     */
#define PWMA_SM1CAPTCTRLA_INP_SELA(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLA_INP_SELA_SHIFT))&PWMA_SM1CAPTCTRLA_INP_SELA_MASK) /*!< PWMA_SM1CAPTCTRLA.INP_SELA Field        */
#define PWMA_SM1CAPTCTRLA_EDGCNTA_EN_MASK        (0x80U)                                             /*!< PWMA_SM1CAPTCTRLA.EDGCNTA_EN Mask       */
#define PWMA_SM1CAPTCTRLA_EDGCNTA_EN_SHIFT       (7U)                                                /*!< PWMA_SM1CAPTCTRLA.EDGCNTA_EN Position   */
#define PWMA_SM1CAPTCTRLA_EDGCNTA_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLA_EDGCNTA_EN_SHIFT))&PWMA_SM1CAPTCTRLA_EDGCNTA_EN_MASK) /*!< PWMA_SM1CAPTCTRLA.EDGCNTA_EN Field      */
#define PWMA_SM1CAPTCTRLA_CFAWM_MASK             (0x300U)                                            /*!< PWMA_SM1CAPTCTRLA.CFAWM Mask            */
#define PWMA_SM1CAPTCTRLA_CFAWM_SHIFT            (8U)                                                /*!< PWMA_SM1CAPTCTRLA.CFAWM Position        */
#define PWMA_SM1CAPTCTRLA_CFAWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLA_CFAWM_SHIFT))&PWMA_SM1CAPTCTRLA_CFAWM_MASK) /*!< PWMA_SM1CAPTCTRLA.CFAWM Field           */
#define PWMA_SM1CAPTCTRLA_CA0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM1CAPTCTRLA.CA0CNT Mask           */
#define PWMA_SM1CAPTCTRLA_CA0CNT_SHIFT           (10U)                                               /*!< PWMA_SM1CAPTCTRLA.CA0CNT Position       */
#define PWMA_SM1CAPTCTRLA_CA0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLA_CA0CNT_SHIFT))&PWMA_SM1CAPTCTRLA_CA0CNT_MASK) /*!< PWMA_SM1CAPTCTRLA.CA0CNT Field          */
#define PWMA_SM1CAPTCTRLA_CA1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM1CAPTCTRLA.CA1CNT Mask           */
#define PWMA_SM1CAPTCTRLA_CA1CNT_SHIFT           (13U)                                               /*!< PWMA_SM1CAPTCTRLA.CA1CNT Position       */
#define PWMA_SM1CAPTCTRLA_CA1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLA_CA1CNT_SHIFT))&PWMA_SM1CAPTCTRLA_CA1CNT_MASK) /*!< PWMA_SM1CAPTCTRLA.CA1CNT Field          */

/*! @name SM1CAPTCOMPA - Capture Compare A Register */
#define PWMA_SM1CAPTCOMPA_EDGCMPA_MASK           (0xFFU)                                             /*!< PWMA_SM1CAPTCOMPA.EDGCMPA Mask          */
#define PWMA_SM1CAPTCOMPA_EDGCMPA_SHIFT          (0U)                                                /*!< PWMA_SM1CAPTCOMPA.EDGCMPA Position      */
#define PWMA_SM1CAPTCOMPA_EDGCMPA(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCOMPA_EDGCMPA_SHIFT))&PWMA_SM1CAPTCOMPA_EDGCMPA_MASK) /*!< PWMA_SM1CAPTCOMPA.EDGCMPA Field         */
#define PWMA_SM1CAPTCOMPA_EDGCNTA_MASK           (0xFF00U)                                           /*!< PWMA_SM1CAPTCOMPA.EDGCNTA Mask          */
#define PWMA_SM1CAPTCOMPA_EDGCNTA_SHIFT          (8U)                                                /*!< PWMA_SM1CAPTCOMPA.EDGCNTA Position      */
#define PWMA_SM1CAPTCOMPA_EDGCNTA(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCOMPA_EDGCNTA_SHIFT))&PWMA_SM1CAPTCOMPA_EDGCNTA_MASK) /*!< PWMA_SM1CAPTCOMPA.EDGCNTA Field         */

/*! @name SM1CAPTCTRLB - Capture Control B Register */
#define PWMA_SM1CAPTCTRLB_ARMB_MASK              (0x1U)                                              /*!< PWMA_SM1CAPTCTRLB.ARMB Mask             */
#define PWMA_SM1CAPTCTRLB_ARMB_SHIFT             (0U)                                                /*!< PWMA_SM1CAPTCTRLB.ARMB Position         */
#define PWMA_SM1CAPTCTRLB_ARMB(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLB_ARMB_SHIFT))&PWMA_SM1CAPTCTRLB_ARMB_MASK) /*!< PWMA_SM1CAPTCTRLB.ARMB Field            */
#define PWMA_SM1CAPTCTRLB_ONESHOTB_MASK          (0x2U)                                              /*!< PWMA_SM1CAPTCTRLB.ONESHOTB Mask         */
#define PWMA_SM1CAPTCTRLB_ONESHOTB_SHIFT         (1U)                                                /*!< PWMA_SM1CAPTCTRLB.ONESHOTB Position     */
#define PWMA_SM1CAPTCTRLB_ONESHOTB(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLB_ONESHOTB_SHIFT))&PWMA_SM1CAPTCTRLB_ONESHOTB_MASK) /*!< PWMA_SM1CAPTCTRLB.ONESHOTB Field        */
#define PWMA_SM1CAPTCTRLB_EDGB0_MASK             (0xCU)                                              /*!< PWMA_SM1CAPTCTRLB.EDGB0 Mask            */
#define PWMA_SM1CAPTCTRLB_EDGB0_SHIFT            (2U)                                                /*!< PWMA_SM1CAPTCTRLB.EDGB0 Position        */
#define PWMA_SM1CAPTCTRLB_EDGB0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLB_EDGB0_SHIFT))&PWMA_SM1CAPTCTRLB_EDGB0_MASK) /*!< PWMA_SM1CAPTCTRLB.EDGB0 Field           */
#define PWMA_SM1CAPTCTRLB_EDGB1_MASK             (0x30U)                                             /*!< PWMA_SM1CAPTCTRLB.EDGB1 Mask            */
#define PWMA_SM1CAPTCTRLB_EDGB1_SHIFT            (4U)                                                /*!< PWMA_SM1CAPTCTRLB.EDGB1 Position        */
#define PWMA_SM1CAPTCTRLB_EDGB1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLB_EDGB1_SHIFT))&PWMA_SM1CAPTCTRLB_EDGB1_MASK) /*!< PWMA_SM1CAPTCTRLB.EDGB1 Field           */
#define PWMA_SM1CAPTCTRLB_INP_SELB_MASK          (0x40U)                                             /*!< PWMA_SM1CAPTCTRLB.INP_SELB Mask         */
#define PWMA_SM1CAPTCTRLB_INP_SELB_SHIFT         (6U)                                                /*!< PWMA_SM1CAPTCTRLB.INP_SELB Position     */
#define PWMA_SM1CAPTCTRLB_INP_SELB(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLB_INP_SELB_SHIFT))&PWMA_SM1CAPTCTRLB_INP_SELB_MASK) /*!< PWMA_SM1CAPTCTRLB.INP_SELB Field        */
#define PWMA_SM1CAPTCTRLB_EDGCNTB_EN_MASK        (0x80U)                                             /*!< PWMA_SM1CAPTCTRLB.EDGCNTB_EN Mask       */
#define PWMA_SM1CAPTCTRLB_EDGCNTB_EN_SHIFT       (7U)                                                /*!< PWMA_SM1CAPTCTRLB.EDGCNTB_EN Position   */
#define PWMA_SM1CAPTCTRLB_EDGCNTB_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLB_EDGCNTB_EN_SHIFT))&PWMA_SM1CAPTCTRLB_EDGCNTB_EN_MASK) /*!< PWMA_SM1CAPTCTRLB.EDGCNTB_EN Field      */
#define PWMA_SM1CAPTCTRLB_CFBWM_MASK             (0x300U)                                            /*!< PWMA_SM1CAPTCTRLB.CFBWM Mask            */
#define PWMA_SM1CAPTCTRLB_CFBWM_SHIFT            (8U)                                                /*!< PWMA_SM1CAPTCTRLB.CFBWM Position        */
#define PWMA_SM1CAPTCTRLB_CFBWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLB_CFBWM_SHIFT))&PWMA_SM1CAPTCTRLB_CFBWM_MASK) /*!< PWMA_SM1CAPTCTRLB.CFBWM Field           */
#define PWMA_SM1CAPTCTRLB_CB0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM1CAPTCTRLB.CB0CNT Mask           */
#define PWMA_SM1CAPTCTRLB_CB0CNT_SHIFT           (10U)                                               /*!< PWMA_SM1CAPTCTRLB.CB0CNT Position       */
#define PWMA_SM1CAPTCTRLB_CB0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLB_CB0CNT_SHIFT))&PWMA_SM1CAPTCTRLB_CB0CNT_MASK) /*!< PWMA_SM1CAPTCTRLB.CB0CNT Field          */
#define PWMA_SM1CAPTCTRLB_CB1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM1CAPTCTRLB.CB1CNT Mask           */
#define PWMA_SM1CAPTCTRLB_CB1CNT_SHIFT           (13U)                                               /*!< PWMA_SM1CAPTCTRLB.CB1CNT Position       */
#define PWMA_SM1CAPTCTRLB_CB1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLB_CB1CNT_SHIFT))&PWMA_SM1CAPTCTRLB_CB1CNT_MASK) /*!< PWMA_SM1CAPTCTRLB.CB1CNT Field          */

/*! @name SM1CAPTCOMPB - Capture Compare B Register */
#define PWMA_SM1CAPTCOMPB_EDGCMPB_MASK           (0xFFU)                                             /*!< PWMA_SM1CAPTCOMPB.EDGCMPB Mask          */
#define PWMA_SM1CAPTCOMPB_EDGCMPB_SHIFT          (0U)                                                /*!< PWMA_SM1CAPTCOMPB.EDGCMPB Position      */
#define PWMA_SM1CAPTCOMPB_EDGCMPB(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCOMPB_EDGCMPB_SHIFT))&PWMA_SM1CAPTCOMPB_EDGCMPB_MASK) /*!< PWMA_SM1CAPTCOMPB.EDGCMPB Field         */
#define PWMA_SM1CAPTCOMPB_EDGCNTB_MASK           (0xFF00U)                                           /*!< PWMA_SM1CAPTCOMPB.EDGCNTB Mask          */
#define PWMA_SM1CAPTCOMPB_EDGCNTB_SHIFT          (8U)                                                /*!< PWMA_SM1CAPTCOMPB.EDGCNTB Position      */
#define PWMA_SM1CAPTCOMPB_EDGCNTB(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCOMPB_EDGCNTB_SHIFT))&PWMA_SM1CAPTCOMPB_EDGCNTB_MASK) /*!< PWMA_SM1CAPTCOMPB.EDGCNTB Field         */

/*! @name SM1CAPTCTRLX - Capture Control X Register */
#define PWMA_SM1CAPTCTRLX_ARMX_MASK              (0x1U)                                              /*!< PWMA_SM1CAPTCTRLX.ARMX Mask             */
#define PWMA_SM1CAPTCTRLX_ARMX_SHIFT             (0U)                                                /*!< PWMA_SM1CAPTCTRLX.ARMX Position         */
#define PWMA_SM1CAPTCTRLX_ARMX(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLX_ARMX_SHIFT))&PWMA_SM1CAPTCTRLX_ARMX_MASK) /*!< PWMA_SM1CAPTCTRLX.ARMX Field            */
#define PWMA_SM1CAPTCTRLX_ONESHOTX_MASK          (0x2U)                                              /*!< PWMA_SM1CAPTCTRLX.ONESHOTX Mask         */
#define PWMA_SM1CAPTCTRLX_ONESHOTX_SHIFT         (1U)                                                /*!< PWMA_SM1CAPTCTRLX.ONESHOTX Position     */
#define PWMA_SM1CAPTCTRLX_ONESHOTX(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLX_ONESHOTX_SHIFT))&PWMA_SM1CAPTCTRLX_ONESHOTX_MASK) /*!< PWMA_SM1CAPTCTRLX.ONESHOTX Field        */
#define PWMA_SM1CAPTCTRLX_EDGX0_MASK             (0xCU)                                              /*!< PWMA_SM1CAPTCTRLX.EDGX0 Mask            */
#define PWMA_SM1CAPTCTRLX_EDGX0_SHIFT            (2U)                                                /*!< PWMA_SM1CAPTCTRLX.EDGX0 Position        */
#define PWMA_SM1CAPTCTRLX_EDGX0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLX_EDGX0_SHIFT))&PWMA_SM1CAPTCTRLX_EDGX0_MASK) /*!< PWMA_SM1CAPTCTRLX.EDGX0 Field           */
#define PWMA_SM1CAPTCTRLX_EDGX1_MASK             (0x30U)                                             /*!< PWMA_SM1CAPTCTRLX.EDGX1 Mask            */
#define PWMA_SM1CAPTCTRLX_EDGX1_SHIFT            (4U)                                                /*!< PWMA_SM1CAPTCTRLX.EDGX1 Position        */
#define PWMA_SM1CAPTCTRLX_EDGX1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLX_EDGX1_SHIFT))&PWMA_SM1CAPTCTRLX_EDGX1_MASK) /*!< PWMA_SM1CAPTCTRLX.EDGX1 Field           */
#define PWMA_SM1CAPTCTRLX_INP_SELX_MASK          (0x40U)                                             /*!< PWMA_SM1CAPTCTRLX.INP_SELX Mask         */
#define PWMA_SM1CAPTCTRLX_INP_SELX_SHIFT         (6U)                                                /*!< PWMA_SM1CAPTCTRLX.INP_SELX Position     */
#define PWMA_SM1CAPTCTRLX_INP_SELX(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLX_INP_SELX_SHIFT))&PWMA_SM1CAPTCTRLX_INP_SELX_MASK) /*!< PWMA_SM1CAPTCTRLX.INP_SELX Field        */
#define PWMA_SM1CAPTCTRLX_EDGCNTX_EN_MASK        (0x80U)                                             /*!< PWMA_SM1CAPTCTRLX.EDGCNTX_EN Mask       */
#define PWMA_SM1CAPTCTRLX_EDGCNTX_EN_SHIFT       (7U)                                                /*!< PWMA_SM1CAPTCTRLX.EDGCNTX_EN Position   */
#define PWMA_SM1CAPTCTRLX_EDGCNTX_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLX_EDGCNTX_EN_SHIFT))&PWMA_SM1CAPTCTRLX_EDGCNTX_EN_MASK) /*!< PWMA_SM1CAPTCTRLX.EDGCNTX_EN Field      */
#define PWMA_SM1CAPTCTRLX_CFXWM_MASK             (0x300U)                                            /*!< PWMA_SM1CAPTCTRLX.CFXWM Mask            */
#define PWMA_SM1CAPTCTRLX_CFXWM_SHIFT            (8U)                                                /*!< PWMA_SM1CAPTCTRLX.CFXWM Position        */
#define PWMA_SM1CAPTCTRLX_CFXWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLX_CFXWM_SHIFT))&PWMA_SM1CAPTCTRLX_CFXWM_MASK) /*!< PWMA_SM1CAPTCTRLX.CFXWM Field           */
#define PWMA_SM1CAPTCTRLX_CX0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM1CAPTCTRLX.CX0CNT Mask           */
#define PWMA_SM1CAPTCTRLX_CX0CNT_SHIFT           (10U)                                               /*!< PWMA_SM1CAPTCTRLX.CX0CNT Position       */
#define PWMA_SM1CAPTCTRLX_CX0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLX_CX0CNT_SHIFT))&PWMA_SM1CAPTCTRLX_CX0CNT_MASK) /*!< PWMA_SM1CAPTCTRLX.CX0CNT Field          */
#define PWMA_SM1CAPTCTRLX_CX1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM1CAPTCTRLX.CX1CNT Mask           */
#define PWMA_SM1CAPTCTRLX_CX1CNT_SHIFT           (13U)                                               /*!< PWMA_SM1CAPTCTRLX.CX1CNT Position       */
#define PWMA_SM1CAPTCTRLX_CX1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCTRLX_CX1CNT_SHIFT))&PWMA_SM1CAPTCTRLX_CX1CNT_MASK) /*!< PWMA_SM1CAPTCTRLX.CX1CNT Field          */

/*! @name SM1CAPTCOMPX - Capture Compare X Register */
#define PWMA_SM1CAPTCOMPX_EDGCMPX_MASK           (0xFFU)                                             /*!< PWMA_SM1CAPTCOMPX.EDGCMPX Mask          */
#define PWMA_SM1CAPTCOMPX_EDGCMPX_SHIFT          (0U)                                                /*!< PWMA_SM1CAPTCOMPX.EDGCMPX Position      */
#define PWMA_SM1CAPTCOMPX_EDGCMPX(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCOMPX_EDGCMPX_SHIFT))&PWMA_SM1CAPTCOMPX_EDGCMPX_MASK) /*!< PWMA_SM1CAPTCOMPX.EDGCMPX Field         */
#define PWMA_SM1CAPTCOMPX_EDGCNTX_MASK           (0xFF00U)                                           /*!< PWMA_SM1CAPTCOMPX.EDGCNTX Mask          */
#define PWMA_SM1CAPTCOMPX_EDGCNTX_SHIFT          (8U)                                                /*!< PWMA_SM1CAPTCOMPX.EDGCNTX Position      */
#define PWMA_SM1CAPTCOMPX_EDGCNTX(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CAPTCOMPX_EDGCNTX_SHIFT))&PWMA_SM1CAPTCOMPX_EDGCNTX_MASK) /*!< PWMA_SM1CAPTCOMPX.EDGCNTX Field         */

/*! @name SM1CVAL0 - Capture Value 0 Register */
#define PWMA_SM1CVAL0_CAPTVAL0_MASK              (0xFFFFU)                                           /*!< PWMA_SM1CVAL0.CAPTVAL0 Mask             */
#define PWMA_SM1CVAL0_CAPTVAL0_SHIFT             (0U)                                                /*!< PWMA_SM1CVAL0.CAPTVAL0 Position         */
#define PWMA_SM1CVAL0_CAPTVAL0(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL0_CAPTVAL0_SHIFT))&PWMA_SM1CVAL0_CAPTVAL0_MASK) /*!< PWMA_SM1CVAL0.CAPTVAL0 Field            */

/*! @name SM1CVAL0CYC - Capture Value 0 Cycle Register */
#define PWMA_SM1CVAL0CYC_CVAL0CYC_MASK           (0xFU)                                              /*!< PWMA_SM1CVAL0CYC.CVAL0CYC Mask          */
#define PWMA_SM1CVAL0CYC_CVAL0CYC_SHIFT          (0U)                                                /*!< PWMA_SM1CVAL0CYC.CVAL0CYC Position      */
#define PWMA_SM1CVAL0CYC_CVAL0CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL0CYC_CVAL0CYC_SHIFT))&PWMA_SM1CVAL0CYC_CVAL0CYC_MASK) /*!< PWMA_SM1CVAL0CYC.CVAL0CYC Field         */

/*! @name SM1CVAL1 - Capture Value 1 Register */
#define PWMA_SM1CVAL1_CAPTVAL1_MASK              (0xFFFFU)                                           /*!< PWMA_SM1CVAL1.CAPTVAL1 Mask             */
#define PWMA_SM1CVAL1_CAPTVAL1_SHIFT             (0U)                                                /*!< PWMA_SM1CVAL1.CAPTVAL1 Position         */
#define PWMA_SM1CVAL1_CAPTVAL1(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL1_CAPTVAL1_SHIFT))&PWMA_SM1CVAL1_CAPTVAL1_MASK) /*!< PWMA_SM1CVAL1.CAPTVAL1 Field            */

/*! @name SM1CVAL1CYC - Capture Value 1 Cycle Register */
#define PWMA_SM1CVAL1CYC_CVAL1CYC_MASK           (0xFU)                                              /*!< PWMA_SM1CVAL1CYC.CVAL1CYC Mask          */
#define PWMA_SM1CVAL1CYC_CVAL1CYC_SHIFT          (0U)                                                /*!< PWMA_SM1CVAL1CYC.CVAL1CYC Position      */
#define PWMA_SM1CVAL1CYC_CVAL1CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL1CYC_CVAL1CYC_SHIFT))&PWMA_SM1CVAL1CYC_CVAL1CYC_MASK) /*!< PWMA_SM1CVAL1CYC.CVAL1CYC Field         */

/*! @name SM1CVAL2 - Capture Value 2 Register */
#define PWMA_SM1CVAL2_CAPTVAL2_MASK              (0xFFFFU)                                           /*!< PWMA_SM1CVAL2.CAPTVAL2 Mask             */
#define PWMA_SM1CVAL2_CAPTVAL2_SHIFT             (0U)                                                /*!< PWMA_SM1CVAL2.CAPTVAL2 Position         */
#define PWMA_SM1CVAL2_CAPTVAL2(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL2_CAPTVAL2_SHIFT))&PWMA_SM1CVAL2_CAPTVAL2_MASK) /*!< PWMA_SM1CVAL2.CAPTVAL2 Field            */

/*! @name SM1CVAL2CYC - Capture Value 2 Cycle Register */
#define PWMA_SM1CVAL2CYC_CVAL2CYC_MASK           (0xFU)                                              /*!< PWMA_SM1CVAL2CYC.CVAL2CYC Mask          */
#define PWMA_SM1CVAL2CYC_CVAL2CYC_SHIFT          (0U)                                                /*!< PWMA_SM1CVAL2CYC.CVAL2CYC Position      */
#define PWMA_SM1CVAL2CYC_CVAL2CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL2CYC_CVAL2CYC_SHIFT))&PWMA_SM1CVAL2CYC_CVAL2CYC_MASK) /*!< PWMA_SM1CVAL2CYC.CVAL2CYC Field         */

/*! @name SM1CVAL3 - Capture Value 3 Register */
#define PWMA_SM1CVAL3_CAPTVAL3_MASK              (0xFFFFU)                                           /*!< PWMA_SM1CVAL3.CAPTVAL3 Mask             */
#define PWMA_SM1CVAL3_CAPTVAL3_SHIFT             (0U)                                                /*!< PWMA_SM1CVAL3.CAPTVAL3 Position         */
#define PWMA_SM1CVAL3_CAPTVAL3(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL3_CAPTVAL3_SHIFT))&PWMA_SM1CVAL3_CAPTVAL3_MASK) /*!< PWMA_SM1CVAL3.CAPTVAL3 Field            */

/*! @name SM1CVAL3CYC - Capture Value 3 Cycle Register */
#define PWMA_SM1CVAL3CYC_CVAL3CYC_MASK           (0xFU)                                              /*!< PWMA_SM1CVAL3CYC.CVAL3CYC Mask          */
#define PWMA_SM1CVAL3CYC_CVAL3CYC_SHIFT          (0U)                                                /*!< PWMA_SM1CVAL3CYC.CVAL3CYC Position      */
#define PWMA_SM1CVAL3CYC_CVAL3CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL3CYC_CVAL3CYC_SHIFT))&PWMA_SM1CVAL3CYC_CVAL3CYC_MASK) /*!< PWMA_SM1CVAL3CYC.CVAL3CYC Field         */

/*! @name SM1CVAL4 - Capture Value 4 Register */
#define PWMA_SM1CVAL4_CAPTVAL4_MASK              (0xFFFFU)                                           /*!< PWMA_SM1CVAL4.CAPTVAL4 Mask             */
#define PWMA_SM1CVAL4_CAPTVAL4_SHIFT             (0U)                                                /*!< PWMA_SM1CVAL4.CAPTVAL4 Position         */
#define PWMA_SM1CVAL4_CAPTVAL4(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL4_CAPTVAL4_SHIFT))&PWMA_SM1CVAL4_CAPTVAL4_MASK) /*!< PWMA_SM1CVAL4.CAPTVAL4 Field            */

/*! @name SM1CVAL4CYC - Capture Value 4 Cycle Register */
#define PWMA_SM1CVAL4CYC_CVAL4CYC_MASK           (0xFU)                                              /*!< PWMA_SM1CVAL4CYC.CVAL4CYC Mask          */
#define PWMA_SM1CVAL4CYC_CVAL4CYC_SHIFT          (0U)                                                /*!< PWMA_SM1CVAL4CYC.CVAL4CYC Position      */
#define PWMA_SM1CVAL4CYC_CVAL4CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL4CYC_CVAL4CYC_SHIFT))&PWMA_SM1CVAL4CYC_CVAL4CYC_MASK) /*!< PWMA_SM1CVAL4CYC.CVAL4CYC Field         */

/*! @name SM1CVAL5 - Capture Value 5 Register */
#define PWMA_SM1CVAL5_CAPTVAL5_MASK              (0xFFFFU)                                           /*!< PWMA_SM1CVAL5.CAPTVAL5 Mask             */
#define PWMA_SM1CVAL5_CAPTVAL5_SHIFT             (0U)                                                /*!< PWMA_SM1CVAL5.CAPTVAL5 Position         */
#define PWMA_SM1CVAL5_CAPTVAL5(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL5_CAPTVAL5_SHIFT))&PWMA_SM1CVAL5_CAPTVAL5_MASK) /*!< PWMA_SM1CVAL5.CAPTVAL5 Field            */

/*! @name SM1CVAL5CYC - Capture Value 5 Cycle Register */
#define PWMA_SM1CVAL5CYC_CVAL5CYC_MASK           (0xFU)                                              /*!< PWMA_SM1CVAL5CYC.CVAL5CYC Mask          */
#define PWMA_SM1CVAL5CYC_CVAL5CYC_SHIFT          (0U)                                                /*!< PWMA_SM1CVAL5CYC.CVAL5CYC Position      */
#define PWMA_SM1CVAL5CYC_CVAL5CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM1CVAL5CYC_CVAL5CYC_SHIFT))&PWMA_SM1CVAL5CYC_CVAL5CYC_MASK) /*!< PWMA_SM1CVAL5CYC.CVAL5CYC Field         */

/*! @name SM2CNT - Counter Register */
#define PWMA_SM2CNT_CNT_MASK                     (0xFFFFU)                                           /*!< PWMA_SM2CNT.CNT Mask                    */
#define PWMA_SM2CNT_CNT_SHIFT                    (0U)                                                /*!< PWMA_SM2CNT.CNT Position                */
#define PWMA_SM2CNT_CNT(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CNT_CNT_SHIFT))&PWMA_SM2CNT_CNT_MASK) /*!< PWMA_SM2CNT.CNT Field                   */

/*! @name SM2INIT - Initial Count Register */
#define PWMA_SM2INIT_INIT_MASK                   (0xFFFFU)                                           /*!< PWMA_SM2INIT.INIT Mask                  */
#define PWMA_SM2INIT_INIT_SHIFT                  (0U)                                                /*!< PWMA_SM2INIT.INIT Position              */
#define PWMA_SM2INIT_INIT(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2INIT_INIT_SHIFT))&PWMA_SM2INIT_INIT_MASK) /*!< PWMA_SM2INIT.INIT Field                 */

/*! @name SM2CTRL2 - Control 2 Register */
#define PWMA_SM2CTRL2_CLK_SEL_MASK               (0x3U)                                              /*!< PWMA_SM2CTRL2.CLK_SEL Mask              */
#define PWMA_SM2CTRL2_CLK_SEL_SHIFT              (0U)                                                /*!< PWMA_SM2CTRL2.CLK_SEL Position          */
#define PWMA_SM2CTRL2_CLK_SEL(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_CLK_SEL_SHIFT))&PWMA_SM2CTRL2_CLK_SEL_MASK) /*!< PWMA_SM2CTRL2.CLK_SEL Field             */
#define PWMA_SM2CTRL2_RELOAD_SEL_MASK            (0x4U)                                              /*!< PWMA_SM2CTRL2.RELOAD_SEL Mask           */
#define PWMA_SM2CTRL2_RELOAD_SEL_SHIFT           (2U)                                                /*!< PWMA_SM2CTRL2.RELOAD_SEL Position       */
#define PWMA_SM2CTRL2_RELOAD_SEL(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_RELOAD_SEL_SHIFT))&PWMA_SM2CTRL2_RELOAD_SEL_MASK) /*!< PWMA_SM2CTRL2.RELOAD_SEL Field          */
#define PWMA_SM2CTRL2_FORCE_SEL_MASK             (0x38U)                                             /*!< PWMA_SM2CTRL2.FORCE_SEL Mask            */
#define PWMA_SM2CTRL2_FORCE_SEL_SHIFT            (3U)                                                /*!< PWMA_SM2CTRL2.FORCE_SEL Position        */
#define PWMA_SM2CTRL2_FORCE_SEL(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_FORCE_SEL_SHIFT))&PWMA_SM2CTRL2_FORCE_SEL_MASK) /*!< PWMA_SM2CTRL2.FORCE_SEL Field           */
#define PWMA_SM2CTRL2_FORCE_MASK                 (0x40U)                                             /*!< PWMA_SM2CTRL2.FORCE Mask                */
#define PWMA_SM2CTRL2_FORCE_SHIFT                (6U)                                                /*!< PWMA_SM2CTRL2.FORCE Position            */
#define PWMA_SM2CTRL2_FORCE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_FORCE_SHIFT))&PWMA_SM2CTRL2_FORCE_MASK) /*!< PWMA_SM2CTRL2.FORCE Field               */
#define PWMA_SM2CTRL2_FRCEN_MASK                 (0x80U)                                             /*!< PWMA_SM2CTRL2.FRCEN Mask                */
#define PWMA_SM2CTRL2_FRCEN_SHIFT                (7U)                                                /*!< PWMA_SM2CTRL2.FRCEN Position            */
#define PWMA_SM2CTRL2_FRCEN(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_FRCEN_SHIFT))&PWMA_SM2CTRL2_FRCEN_MASK) /*!< PWMA_SM2CTRL2.FRCEN Field               */
#define PWMA_SM2CTRL2_INIT_SEL_MASK              (0x300U)                                            /*!< PWMA_SM2CTRL2.INIT_SEL Mask             */
#define PWMA_SM2CTRL2_INIT_SEL_SHIFT             (8U)                                                /*!< PWMA_SM2CTRL2.INIT_SEL Position         */
#define PWMA_SM2CTRL2_INIT_SEL(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_INIT_SEL_SHIFT))&PWMA_SM2CTRL2_INIT_SEL_MASK) /*!< PWMA_SM2CTRL2.INIT_SEL Field            */
#define PWMA_SM2CTRL2_PWMX_INIT_MASK             (0x400U)                                            /*!< PWMA_SM2CTRL2.PWMX_INIT Mask            */
#define PWMA_SM2CTRL2_PWMX_INIT_SHIFT            (10U)                                               /*!< PWMA_SM2CTRL2.PWMX_INIT Position        */
#define PWMA_SM2CTRL2_PWMX_INIT(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_PWMX_INIT_SHIFT))&PWMA_SM2CTRL2_PWMX_INIT_MASK) /*!< PWMA_SM2CTRL2.PWMX_INIT Field           */
#define PWMA_SM2CTRL2_PWM45_INIT_MASK            (0x800U)                                            /*!< PWMA_SM2CTRL2.PWM45_INIT Mask           */
#define PWMA_SM2CTRL2_PWM45_INIT_SHIFT           (11U)                                               /*!< PWMA_SM2CTRL2.PWM45_INIT Position       */
#define PWMA_SM2CTRL2_PWM45_INIT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_PWM45_INIT_SHIFT))&PWMA_SM2CTRL2_PWM45_INIT_MASK) /*!< PWMA_SM2CTRL2.PWM45_INIT Field          */
#define PWMA_SM2CTRL2_PWM23_INIT_MASK            (0x1000U)                                           /*!< PWMA_SM2CTRL2.PWM23_INIT Mask           */
#define PWMA_SM2CTRL2_PWM23_INIT_SHIFT           (12U)                                               /*!< PWMA_SM2CTRL2.PWM23_INIT Position       */
#define PWMA_SM2CTRL2_PWM23_INIT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_PWM23_INIT_SHIFT))&PWMA_SM2CTRL2_PWM23_INIT_MASK) /*!< PWMA_SM2CTRL2.PWM23_INIT Field          */
#define PWMA_SM2CTRL2_INDEP_MASK                 (0x2000U)                                           /*!< PWMA_SM2CTRL2.INDEP Mask                */
#define PWMA_SM2CTRL2_INDEP_SHIFT                (13U)                                               /*!< PWMA_SM2CTRL2.INDEP Position            */
#define PWMA_SM2CTRL2_INDEP(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_INDEP_SHIFT))&PWMA_SM2CTRL2_INDEP_MASK) /*!< PWMA_SM2CTRL2.INDEP Field               */
#define PWMA_SM2CTRL2_WAITEN_MASK                (0x4000U)                                           /*!< PWMA_SM2CTRL2.WAITEN Mask               */
#define PWMA_SM2CTRL2_WAITEN_SHIFT               (14U)                                               /*!< PWMA_SM2CTRL2.WAITEN Position           */
#define PWMA_SM2CTRL2_WAITEN(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_WAITEN_SHIFT))&PWMA_SM2CTRL2_WAITEN_MASK) /*!< PWMA_SM2CTRL2.WAITEN Field              */
#define PWMA_SM2CTRL2_DBGEN_MASK                 (0x8000U)                                           /*!< PWMA_SM2CTRL2.DBGEN Mask                */
#define PWMA_SM2CTRL2_DBGEN_SHIFT                (15U)                                               /*!< PWMA_SM2CTRL2.DBGEN Position            */
#define PWMA_SM2CTRL2_DBGEN(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL2_DBGEN_SHIFT))&PWMA_SM2CTRL2_DBGEN_MASK) /*!< PWMA_SM2CTRL2.DBGEN Field               */

/*! @name SM2CTRL - Control Register */
#define PWMA_SM2CTRL_DBLEN_MASK                  (0x1U)                                              /*!< PWMA_SM2CTRL.DBLEN Mask                 */
#define PWMA_SM2CTRL_DBLEN_SHIFT                 (0U)                                                /*!< PWMA_SM2CTRL.DBLEN Position             */
#define PWMA_SM2CTRL_DBLEN(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL_DBLEN_SHIFT))&PWMA_SM2CTRL_DBLEN_MASK) /*!< PWMA_SM2CTRL.DBLEN Field                */
#define PWMA_SM2CTRL_DBLX_MASK                   (0x2U)                                              /*!< PWMA_SM2CTRL.DBLX Mask                  */
#define PWMA_SM2CTRL_DBLX_SHIFT                  (1U)                                                /*!< PWMA_SM2CTRL.DBLX Position              */
#define PWMA_SM2CTRL_DBLX(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL_DBLX_SHIFT))&PWMA_SM2CTRL_DBLX_MASK) /*!< PWMA_SM2CTRL.DBLX Field                 */
#define PWMA_SM2CTRL_LDMOD_MASK                  (0x4U)                                              /*!< PWMA_SM2CTRL.LDMOD Mask                 */
#define PWMA_SM2CTRL_LDMOD_SHIFT                 (2U)                                                /*!< PWMA_SM2CTRL.LDMOD Position             */
#define PWMA_SM2CTRL_LDMOD(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL_LDMOD_SHIFT))&PWMA_SM2CTRL_LDMOD_MASK) /*!< PWMA_SM2CTRL.LDMOD Field                */
#define PWMA_SM2CTRL_PRSC_MASK                   (0x70U)                                             /*!< PWMA_SM2CTRL.PRSC Mask                  */
#define PWMA_SM2CTRL_PRSC_SHIFT                  (4U)                                                /*!< PWMA_SM2CTRL.PRSC Position              */
#define PWMA_SM2CTRL_PRSC(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL_PRSC_SHIFT))&PWMA_SM2CTRL_PRSC_MASK) /*!< PWMA_SM2CTRL.PRSC Field                 */
#define PWMA_SM2CTRL_DT_MASK                     (0x300U)                                            /*!< PWMA_SM2CTRL.DT Mask                    */
#define PWMA_SM2CTRL_DT_SHIFT                    (8U)                                                /*!< PWMA_SM2CTRL.DT Position                */
#define PWMA_SM2CTRL_DT(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL_DT_SHIFT))&PWMA_SM2CTRL_DT_MASK) /*!< PWMA_SM2CTRL.DT Field                   */
#define PWMA_SM2CTRL_FULL_MASK                   (0x400U)                                            /*!< PWMA_SM2CTRL.FULL Mask                  */
#define PWMA_SM2CTRL_FULL_SHIFT                  (10U)                                               /*!< PWMA_SM2CTRL.FULL Position              */
#define PWMA_SM2CTRL_FULL(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL_FULL_SHIFT))&PWMA_SM2CTRL_FULL_MASK) /*!< PWMA_SM2CTRL.FULL Field                 */
#define PWMA_SM2CTRL_HALF_MASK                   (0x800U)                                            /*!< PWMA_SM2CTRL.HALF Mask                  */
#define PWMA_SM2CTRL_HALF_SHIFT                  (11U)                                               /*!< PWMA_SM2CTRL.HALF Position              */
#define PWMA_SM2CTRL_HALF(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL_HALF_SHIFT))&PWMA_SM2CTRL_HALF_MASK) /*!< PWMA_SM2CTRL.HALF Field                 */
#define PWMA_SM2CTRL_LDFQ_MASK                   (0xF000U)                                           /*!< PWMA_SM2CTRL.LDFQ Mask                  */
#define PWMA_SM2CTRL_LDFQ_SHIFT                  (12U)                                               /*!< PWMA_SM2CTRL.LDFQ Position              */
#define PWMA_SM2CTRL_LDFQ(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CTRL_LDFQ_SHIFT))&PWMA_SM2CTRL_LDFQ_MASK) /*!< PWMA_SM2CTRL.LDFQ Field                 */

/*! @name SM2VAL0 - Value Register 0 */
#define PWMA_SM2VAL0_VAL0_MASK                   (0xFFFFU)                                           /*!< PWMA_SM2VAL0.VAL0 Mask                  */
#define PWMA_SM2VAL0_VAL0_SHIFT                  (0U)                                                /*!< PWMA_SM2VAL0.VAL0 Position              */
#define PWMA_SM2VAL0_VAL0(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2VAL0_VAL0_SHIFT))&PWMA_SM2VAL0_VAL0_MASK) /*!< PWMA_SM2VAL0.VAL0 Field                 */

/*! @name SM2FRACVAL1 - Fractional Value Register 1 */
#define PWMA_SM2FRACVAL1_FRACVAL1_MASK           (0xF800U)                                           /*!< PWMA_SM2FRACVAL1.FRACVAL1 Mask          */
#define PWMA_SM2FRACVAL1_FRACVAL1_SHIFT          (11U)                                               /*!< PWMA_SM2FRACVAL1.FRACVAL1 Position      */
#define PWMA_SM2FRACVAL1_FRACVAL1(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2FRACVAL1_FRACVAL1_SHIFT))&PWMA_SM2FRACVAL1_FRACVAL1_MASK) /*!< PWMA_SM2FRACVAL1.FRACVAL1 Field         */

/*! @name SM2VAL1 - Value Register 1 */
#define PWMA_SM2VAL1_VAL1_MASK                   (0xFFFFU)                                           /*!< PWMA_SM2VAL1.VAL1 Mask                  */
#define PWMA_SM2VAL1_VAL1_SHIFT                  (0U)                                                /*!< PWMA_SM2VAL1.VAL1 Position              */
#define PWMA_SM2VAL1_VAL1(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2VAL1_VAL1_SHIFT))&PWMA_SM2VAL1_VAL1_MASK) /*!< PWMA_SM2VAL1.VAL1 Field                 */

/*! @name SM2FRACVAL2 - Fractional Value Register 2 */
#define PWMA_SM2FRACVAL2_FRACVAL2_MASK           (0xF800U)                                           /*!< PWMA_SM2FRACVAL2.FRACVAL2 Mask          */
#define PWMA_SM2FRACVAL2_FRACVAL2_SHIFT          (11U)                                               /*!< PWMA_SM2FRACVAL2.FRACVAL2 Position      */
#define PWMA_SM2FRACVAL2_FRACVAL2(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2FRACVAL2_FRACVAL2_SHIFT))&PWMA_SM2FRACVAL2_FRACVAL2_MASK) /*!< PWMA_SM2FRACVAL2.FRACVAL2 Field         */

/*! @name SM2VAL2 - Value Register 2 */
#define PWMA_SM2VAL2_VAL2_MASK                   (0xFFFFU)                                           /*!< PWMA_SM2VAL2.VAL2 Mask                  */
#define PWMA_SM2VAL2_VAL2_SHIFT                  (0U)                                                /*!< PWMA_SM2VAL2.VAL2 Position              */
#define PWMA_SM2VAL2_VAL2(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2VAL2_VAL2_SHIFT))&PWMA_SM2VAL2_VAL2_MASK) /*!< PWMA_SM2VAL2.VAL2 Field                 */

/*! @name SM2FRACVAL3 - Fractional Value Register 3 */
#define PWMA_SM2FRACVAL3_FRACVAL3_MASK           (0xF800U)                                           /*!< PWMA_SM2FRACVAL3.FRACVAL3 Mask          */
#define PWMA_SM2FRACVAL3_FRACVAL3_SHIFT          (11U)                                               /*!< PWMA_SM2FRACVAL3.FRACVAL3 Position      */
#define PWMA_SM2FRACVAL3_FRACVAL3(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2FRACVAL3_FRACVAL3_SHIFT))&PWMA_SM2FRACVAL3_FRACVAL3_MASK) /*!< PWMA_SM2FRACVAL3.FRACVAL3 Field         */

/*! @name SM2VAL3 - Value Register 3 */
#define PWMA_SM2VAL3_VAL3_MASK                   (0xFFFFU)                                           /*!< PWMA_SM2VAL3.VAL3 Mask                  */
#define PWMA_SM2VAL3_VAL3_SHIFT                  (0U)                                                /*!< PWMA_SM2VAL3.VAL3 Position              */
#define PWMA_SM2VAL3_VAL3(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2VAL3_VAL3_SHIFT))&PWMA_SM2VAL3_VAL3_MASK) /*!< PWMA_SM2VAL3.VAL3 Field                 */

/*! @name SM2FRACVAL4 - Fractional Value Register 4 */
#define PWMA_SM2FRACVAL4_FRACVAL4_MASK           (0xF800U)                                           /*!< PWMA_SM2FRACVAL4.FRACVAL4 Mask          */
#define PWMA_SM2FRACVAL4_FRACVAL4_SHIFT          (11U)                                               /*!< PWMA_SM2FRACVAL4.FRACVAL4 Position      */
#define PWMA_SM2FRACVAL4_FRACVAL4(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2FRACVAL4_FRACVAL4_SHIFT))&PWMA_SM2FRACVAL4_FRACVAL4_MASK) /*!< PWMA_SM2FRACVAL4.FRACVAL4 Field         */

/*! @name SM2VAL4 - Value Register 4 */
#define PWMA_SM2VAL4_VAL4_MASK                   (0xFFFFU)                                           /*!< PWMA_SM2VAL4.VAL4 Mask                  */
#define PWMA_SM2VAL4_VAL4_SHIFT                  (0U)                                                /*!< PWMA_SM2VAL4.VAL4 Position              */
#define PWMA_SM2VAL4_VAL4(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2VAL4_VAL4_SHIFT))&PWMA_SM2VAL4_VAL4_MASK) /*!< PWMA_SM2VAL4.VAL4 Field                 */

/*! @name SM2FRACVAL5 - Fractional Value Register 5 */
#define PWMA_SM2FRACVAL5_FRACVAL5_MASK           (0xF800U)                                           /*!< PWMA_SM2FRACVAL5.FRACVAL5 Mask          */
#define PWMA_SM2FRACVAL5_FRACVAL5_SHIFT          (11U)                                               /*!< PWMA_SM2FRACVAL5.FRACVAL5 Position      */
#define PWMA_SM2FRACVAL5_FRACVAL5(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2FRACVAL5_FRACVAL5_SHIFT))&PWMA_SM2FRACVAL5_FRACVAL5_MASK) /*!< PWMA_SM2FRACVAL5.FRACVAL5 Field         */

/*! @name SM2VAL5 - Value Register 5 */
#define PWMA_SM2VAL5_VAL5_MASK                   (0xFFFFU)                                           /*!< PWMA_SM2VAL5.VAL5 Mask                  */
#define PWMA_SM2VAL5_VAL5_SHIFT                  (0U)                                                /*!< PWMA_SM2VAL5.VAL5 Position              */
#define PWMA_SM2VAL5_VAL5(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2VAL5_VAL5_SHIFT))&PWMA_SM2VAL5_VAL5_MASK) /*!< PWMA_SM2VAL5.VAL5 Field                 */

/*! @name SM2FRCTRL - Fractional Control Register */
#define PWMA_SM2FRCTRL_FRAC1_EN_MASK             (0x2U)                                              /*!< PWMA_SM2FRCTRL.FRAC1_EN Mask            */
#define PWMA_SM2FRCTRL_FRAC1_EN_SHIFT            (1U)                                                /*!< PWMA_SM2FRCTRL.FRAC1_EN Position        */
#define PWMA_SM2FRCTRL_FRAC1_EN(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2FRCTRL_FRAC1_EN_SHIFT))&PWMA_SM2FRCTRL_FRAC1_EN_MASK) /*!< PWMA_SM2FRCTRL.FRAC1_EN Field           */
#define PWMA_SM2FRCTRL_FRAC23_EN_MASK            (0x4U)                                              /*!< PWMA_SM2FRCTRL.FRAC23_EN Mask           */
#define PWMA_SM2FRCTRL_FRAC23_EN_SHIFT           (2U)                                                /*!< PWMA_SM2FRCTRL.FRAC23_EN Position       */
#define PWMA_SM2FRCTRL_FRAC23_EN(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2FRCTRL_FRAC23_EN_SHIFT))&PWMA_SM2FRCTRL_FRAC23_EN_MASK) /*!< PWMA_SM2FRCTRL.FRAC23_EN Field          */
#define PWMA_SM2FRCTRL_FRAC45_EN_MASK            (0x10U)                                             /*!< PWMA_SM2FRCTRL.FRAC45_EN Mask           */
#define PWMA_SM2FRCTRL_FRAC45_EN_SHIFT           (4U)                                                /*!< PWMA_SM2FRCTRL.FRAC45_EN Position       */
#define PWMA_SM2FRCTRL_FRAC45_EN(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2FRCTRL_FRAC45_EN_SHIFT))&PWMA_SM2FRCTRL_FRAC45_EN_MASK) /*!< PWMA_SM2FRCTRL.FRAC45_EN Field          */
#define PWMA_SM2FRCTRL_FRAC_PU_MASK              (0x100U)                                            /*!< PWMA_SM2FRCTRL.FRAC_PU Mask             */
#define PWMA_SM2FRCTRL_FRAC_PU_SHIFT             (8U)                                                /*!< PWMA_SM2FRCTRL.FRAC_PU Position         */
#define PWMA_SM2FRCTRL_FRAC_PU(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2FRCTRL_FRAC_PU_SHIFT))&PWMA_SM2FRCTRL_FRAC_PU_MASK) /*!< PWMA_SM2FRCTRL.FRAC_PU Field            */
#define PWMA_SM2FRCTRL_TEST_MASK                 (0x8000U)                                           /*!< PWMA_SM2FRCTRL.TEST Mask                */
#define PWMA_SM2FRCTRL_TEST_SHIFT                (15U)                                               /*!< PWMA_SM2FRCTRL.TEST Position            */
#define PWMA_SM2FRCTRL_TEST(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2FRCTRL_TEST_SHIFT))&PWMA_SM2FRCTRL_TEST_MASK) /*!< PWMA_SM2FRCTRL.TEST Field               */

/*! @name SM2OCTRL - Output Control Register */
#define PWMA_SM2OCTRL_PWMXFS_MASK                (0x3U)                                              /*!< PWMA_SM2OCTRL.PWMXFS Mask               */
#define PWMA_SM2OCTRL_PWMXFS_SHIFT               (0U)                                                /*!< PWMA_SM2OCTRL.PWMXFS Position           */
#define PWMA_SM2OCTRL_PWMXFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM2OCTRL_PWMXFS_SHIFT))&PWMA_SM2OCTRL_PWMXFS_MASK) /*!< PWMA_SM2OCTRL.PWMXFS Field              */
#define PWMA_SM2OCTRL_PWMBFS_MASK                (0xCU)                                              /*!< PWMA_SM2OCTRL.PWMBFS Mask               */
#define PWMA_SM2OCTRL_PWMBFS_SHIFT               (2U)                                                /*!< PWMA_SM2OCTRL.PWMBFS Position           */
#define PWMA_SM2OCTRL_PWMBFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM2OCTRL_PWMBFS_SHIFT))&PWMA_SM2OCTRL_PWMBFS_MASK) /*!< PWMA_SM2OCTRL.PWMBFS Field              */
#define PWMA_SM2OCTRL_PWMAFS_MASK                (0x30U)                                             /*!< PWMA_SM2OCTRL.PWMAFS Mask               */
#define PWMA_SM2OCTRL_PWMAFS_SHIFT               (4U)                                                /*!< PWMA_SM2OCTRL.PWMAFS Position           */
#define PWMA_SM2OCTRL_PWMAFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM2OCTRL_PWMAFS_SHIFT))&PWMA_SM2OCTRL_PWMAFS_MASK) /*!< PWMA_SM2OCTRL.PWMAFS Field              */
#define PWMA_SM2OCTRL_POLX_MASK                  (0x100U)                                            /*!< PWMA_SM2OCTRL.POLX Mask                 */
#define PWMA_SM2OCTRL_POLX_SHIFT                 (8U)                                                /*!< PWMA_SM2OCTRL.POLX Position             */
#define PWMA_SM2OCTRL_POLX(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM2OCTRL_POLX_SHIFT))&PWMA_SM2OCTRL_POLX_MASK) /*!< PWMA_SM2OCTRL.POLX Field                */
#define PWMA_SM2OCTRL_POLB_MASK                  (0x200U)                                            /*!< PWMA_SM2OCTRL.POLB Mask                 */
#define PWMA_SM2OCTRL_POLB_SHIFT                 (9U)                                                /*!< PWMA_SM2OCTRL.POLB Position             */
#define PWMA_SM2OCTRL_POLB(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM2OCTRL_POLB_SHIFT))&PWMA_SM2OCTRL_POLB_MASK) /*!< PWMA_SM2OCTRL.POLB Field                */
#define PWMA_SM2OCTRL_POLA_MASK                  (0x400U)                                            /*!< PWMA_SM2OCTRL.POLA Mask                 */
#define PWMA_SM2OCTRL_POLA_SHIFT                 (10U)                                               /*!< PWMA_SM2OCTRL.POLA Position             */
#define PWMA_SM2OCTRL_POLA(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM2OCTRL_POLA_SHIFT))&PWMA_SM2OCTRL_POLA_MASK) /*!< PWMA_SM2OCTRL.POLA Field                */
#define PWMA_SM2OCTRL_PWMX_IN_MASK               (0x2000U)                                           /*!< PWMA_SM2OCTRL.PWMX_IN Mask              */
#define PWMA_SM2OCTRL_PWMX_IN_SHIFT              (13U)                                               /*!< PWMA_SM2OCTRL.PWMX_IN Position          */
#define PWMA_SM2OCTRL_PWMX_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM2OCTRL_PWMX_IN_SHIFT))&PWMA_SM2OCTRL_PWMX_IN_MASK) /*!< PWMA_SM2OCTRL.PWMX_IN Field             */
#define PWMA_SM2OCTRL_PWMB_IN_MASK               (0x4000U)                                           /*!< PWMA_SM2OCTRL.PWMB_IN Mask              */
#define PWMA_SM2OCTRL_PWMB_IN_SHIFT              (14U)                                               /*!< PWMA_SM2OCTRL.PWMB_IN Position          */
#define PWMA_SM2OCTRL_PWMB_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM2OCTRL_PWMB_IN_SHIFT))&PWMA_SM2OCTRL_PWMB_IN_MASK) /*!< PWMA_SM2OCTRL.PWMB_IN Field             */
#define PWMA_SM2OCTRL_PWMA_IN_MASK               (0x8000U)                                           /*!< PWMA_SM2OCTRL.PWMA_IN Mask              */
#define PWMA_SM2OCTRL_PWMA_IN_SHIFT              (15U)                                               /*!< PWMA_SM2OCTRL.PWMA_IN Position          */
#define PWMA_SM2OCTRL_PWMA_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM2OCTRL_PWMA_IN_SHIFT))&PWMA_SM2OCTRL_PWMA_IN_MASK) /*!< PWMA_SM2OCTRL.PWMA_IN Field             */

/*! @name SM2STS - Status Register */
#define PWMA_SM2STS_CMPF_MASK                    (0x3FU)                                             /*!< PWMA_SM2STS.CMPF Mask                   */
#define PWMA_SM2STS_CMPF_SHIFT                   (0U)                                                /*!< PWMA_SM2STS.CMPF Position               */
#define PWMA_SM2STS_CMPF(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM2STS_CMPF_SHIFT))&PWMA_SM2STS_CMPF_MASK) /*!< PWMA_SM2STS.CMPF Field                  */
#define PWMA_SM2STS_CFX0_MASK                    (0x40U)                                             /*!< PWMA_SM2STS.CFX0 Mask                   */
#define PWMA_SM2STS_CFX0_SHIFT                   (6U)                                                /*!< PWMA_SM2STS.CFX0 Position               */
#define PWMA_SM2STS_CFX0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM2STS_CFX0_SHIFT))&PWMA_SM2STS_CFX0_MASK) /*!< PWMA_SM2STS.CFX0 Field                  */
#define PWMA_SM2STS_CFX1_MASK                    (0x80U)                                             /*!< PWMA_SM2STS.CFX1 Mask                   */
#define PWMA_SM2STS_CFX1_SHIFT                   (7U)                                                /*!< PWMA_SM2STS.CFX1 Position               */
#define PWMA_SM2STS_CFX1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM2STS_CFX1_SHIFT))&PWMA_SM2STS_CFX1_MASK) /*!< PWMA_SM2STS.CFX1 Field                  */
#define PWMA_SM2STS_CFB0_MASK                    (0x100U)                                            /*!< PWMA_SM2STS.CFB0 Mask                   */
#define PWMA_SM2STS_CFB0_SHIFT                   (8U)                                                /*!< PWMA_SM2STS.CFB0 Position               */
#define PWMA_SM2STS_CFB0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM2STS_CFB0_SHIFT))&PWMA_SM2STS_CFB0_MASK) /*!< PWMA_SM2STS.CFB0 Field                  */
#define PWMA_SM2STS_CFB1_MASK                    (0x200U)                                            /*!< PWMA_SM2STS.CFB1 Mask                   */
#define PWMA_SM2STS_CFB1_SHIFT                   (9U)                                                /*!< PWMA_SM2STS.CFB1 Position               */
#define PWMA_SM2STS_CFB1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM2STS_CFB1_SHIFT))&PWMA_SM2STS_CFB1_MASK) /*!< PWMA_SM2STS.CFB1 Field                  */
#define PWMA_SM2STS_CFA0_MASK                    (0x400U)                                            /*!< PWMA_SM2STS.CFA0 Mask                   */
#define PWMA_SM2STS_CFA0_SHIFT                   (10U)                                               /*!< PWMA_SM2STS.CFA0 Position               */
#define PWMA_SM2STS_CFA0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM2STS_CFA0_SHIFT))&PWMA_SM2STS_CFA0_MASK) /*!< PWMA_SM2STS.CFA0 Field                  */
#define PWMA_SM2STS_CFA1_MASK                    (0x800U)                                            /*!< PWMA_SM2STS.CFA1 Mask                   */
#define PWMA_SM2STS_CFA1_SHIFT                   (11U)                                               /*!< PWMA_SM2STS.CFA1 Position               */
#define PWMA_SM2STS_CFA1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM2STS_CFA1_SHIFT))&PWMA_SM2STS_CFA1_MASK) /*!< PWMA_SM2STS.CFA1 Field                  */
#define PWMA_SM2STS_RF_MASK                      (0x1000U)                                           /*!< PWMA_SM2STS.RF Mask                     */
#define PWMA_SM2STS_RF_SHIFT                     (12U)                                               /*!< PWMA_SM2STS.RF Position                 */
#define PWMA_SM2STS_RF(x)                        (((uint16_t)(((uint16_t)(x))<<PWMA_SM2STS_RF_SHIFT))&PWMA_SM2STS_RF_MASK) /*!< PWMA_SM2STS.RF Field                    */
#define PWMA_SM2STS_REF_MASK                     (0x2000U)                                           /*!< PWMA_SM2STS.REF Mask                    */
#define PWMA_SM2STS_REF_SHIFT                    (13U)                                               /*!< PWMA_SM2STS.REF Position                */
#define PWMA_SM2STS_REF(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM2STS_REF_SHIFT))&PWMA_SM2STS_REF_MASK) /*!< PWMA_SM2STS.REF Field                   */
#define PWMA_SM2STS_RUF_MASK                     (0x4000U)                                           /*!< PWMA_SM2STS.RUF Mask                    */
#define PWMA_SM2STS_RUF_SHIFT                    (14U)                                               /*!< PWMA_SM2STS.RUF Position                */
#define PWMA_SM2STS_RUF(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM2STS_RUF_SHIFT))&PWMA_SM2STS_RUF_MASK) /*!< PWMA_SM2STS.RUF Field                   */

/*! @name SM2INTEN - Interrupt Enable Register */
#define PWMA_SM2INTEN_CMPIE_MASK                 (0x3FU)                                             /*!< PWMA_SM2INTEN.CMPIE Mask                */
#define PWMA_SM2INTEN_CMPIE_SHIFT                (0U)                                                /*!< PWMA_SM2INTEN.CMPIE Position            */
#define PWMA_SM2INTEN_CMPIE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2INTEN_CMPIE_SHIFT))&PWMA_SM2INTEN_CMPIE_MASK) /*!< PWMA_SM2INTEN.CMPIE Field               */
#define PWMA_SM2INTEN_CX0IE_MASK                 (0x40U)                                             /*!< PWMA_SM2INTEN.CX0IE Mask                */
#define PWMA_SM2INTEN_CX0IE_SHIFT                (6U)                                                /*!< PWMA_SM2INTEN.CX0IE Position            */
#define PWMA_SM2INTEN_CX0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2INTEN_CX0IE_SHIFT))&PWMA_SM2INTEN_CX0IE_MASK) /*!< PWMA_SM2INTEN.CX0IE Field               */
#define PWMA_SM2INTEN_CX1IE_MASK                 (0x80U)                                             /*!< PWMA_SM2INTEN.CX1IE Mask                */
#define PWMA_SM2INTEN_CX1IE_SHIFT                (7U)                                                /*!< PWMA_SM2INTEN.CX1IE Position            */
#define PWMA_SM2INTEN_CX1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2INTEN_CX1IE_SHIFT))&PWMA_SM2INTEN_CX1IE_MASK) /*!< PWMA_SM2INTEN.CX1IE Field               */
#define PWMA_SM2INTEN_CB0IE_MASK                 (0x100U)                                            /*!< PWMA_SM2INTEN.CB0IE Mask                */
#define PWMA_SM2INTEN_CB0IE_SHIFT                (8U)                                                /*!< PWMA_SM2INTEN.CB0IE Position            */
#define PWMA_SM2INTEN_CB0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2INTEN_CB0IE_SHIFT))&PWMA_SM2INTEN_CB0IE_MASK) /*!< PWMA_SM2INTEN.CB0IE Field               */
#define PWMA_SM2INTEN_CB1IE_MASK                 (0x200U)                                            /*!< PWMA_SM2INTEN.CB1IE Mask                */
#define PWMA_SM2INTEN_CB1IE_SHIFT                (9U)                                                /*!< PWMA_SM2INTEN.CB1IE Position            */
#define PWMA_SM2INTEN_CB1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2INTEN_CB1IE_SHIFT))&PWMA_SM2INTEN_CB1IE_MASK) /*!< PWMA_SM2INTEN.CB1IE Field               */
#define PWMA_SM2INTEN_CA0IE_MASK                 (0x400U)                                            /*!< PWMA_SM2INTEN.CA0IE Mask                */
#define PWMA_SM2INTEN_CA0IE_SHIFT                (10U)                                               /*!< PWMA_SM2INTEN.CA0IE Position            */
#define PWMA_SM2INTEN_CA0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2INTEN_CA0IE_SHIFT))&PWMA_SM2INTEN_CA0IE_MASK) /*!< PWMA_SM2INTEN.CA0IE Field               */
#define PWMA_SM2INTEN_CA1IE_MASK                 (0x800U)                                            /*!< PWMA_SM2INTEN.CA1IE Mask                */
#define PWMA_SM2INTEN_CA1IE_SHIFT                (11U)                                               /*!< PWMA_SM2INTEN.CA1IE Position            */
#define PWMA_SM2INTEN_CA1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2INTEN_CA1IE_SHIFT))&PWMA_SM2INTEN_CA1IE_MASK) /*!< PWMA_SM2INTEN.CA1IE Field               */
#define PWMA_SM2INTEN_RIE_MASK                   (0x1000U)                                           /*!< PWMA_SM2INTEN.RIE Mask                  */
#define PWMA_SM2INTEN_RIE_SHIFT                  (12U)                                               /*!< PWMA_SM2INTEN.RIE Position              */
#define PWMA_SM2INTEN_RIE(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM2INTEN_RIE_SHIFT))&PWMA_SM2INTEN_RIE_MASK) /*!< PWMA_SM2INTEN.RIE Field                 */
#define PWMA_SM2INTEN_REIE_MASK                  (0x2000U)                                           /*!< PWMA_SM2INTEN.REIE Mask                 */
#define PWMA_SM2INTEN_REIE_SHIFT                 (13U)                                               /*!< PWMA_SM2INTEN.REIE Position             */
#define PWMA_SM2INTEN_REIE(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM2INTEN_REIE_SHIFT))&PWMA_SM2INTEN_REIE_MASK) /*!< PWMA_SM2INTEN.REIE Field                */

/*! @name SM2DMAEN - DMA Enable Register */
#define PWMA_SM2DMAEN_CX0DE_MASK                 (0x1U)                                              /*!< PWMA_SM2DMAEN.CX0DE Mask                */
#define PWMA_SM2DMAEN_CX0DE_SHIFT                (0U)                                                /*!< PWMA_SM2DMAEN.CX0DE Position            */
#define PWMA_SM2DMAEN_CX0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DMAEN_CX0DE_SHIFT))&PWMA_SM2DMAEN_CX0DE_MASK) /*!< PWMA_SM2DMAEN.CX0DE Field               */
#define PWMA_SM2DMAEN_CX1DE_MASK                 (0x2U)                                              /*!< PWMA_SM2DMAEN.CX1DE Mask                */
#define PWMA_SM2DMAEN_CX1DE_SHIFT                (1U)                                                /*!< PWMA_SM2DMAEN.CX1DE Position            */
#define PWMA_SM2DMAEN_CX1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DMAEN_CX1DE_SHIFT))&PWMA_SM2DMAEN_CX1DE_MASK) /*!< PWMA_SM2DMAEN.CX1DE Field               */
#define PWMA_SM2DMAEN_CB0DE_MASK                 (0x4U)                                              /*!< PWMA_SM2DMAEN.CB0DE Mask                */
#define PWMA_SM2DMAEN_CB0DE_SHIFT                (2U)                                                /*!< PWMA_SM2DMAEN.CB0DE Position            */
#define PWMA_SM2DMAEN_CB0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DMAEN_CB0DE_SHIFT))&PWMA_SM2DMAEN_CB0DE_MASK) /*!< PWMA_SM2DMAEN.CB0DE Field               */
#define PWMA_SM2DMAEN_CB1DE_MASK                 (0x8U)                                              /*!< PWMA_SM2DMAEN.CB1DE Mask                */
#define PWMA_SM2DMAEN_CB1DE_SHIFT                (3U)                                                /*!< PWMA_SM2DMAEN.CB1DE Position            */
#define PWMA_SM2DMAEN_CB1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DMAEN_CB1DE_SHIFT))&PWMA_SM2DMAEN_CB1DE_MASK) /*!< PWMA_SM2DMAEN.CB1DE Field               */
#define PWMA_SM2DMAEN_CA0DE_MASK                 (0x10U)                                             /*!< PWMA_SM2DMAEN.CA0DE Mask                */
#define PWMA_SM2DMAEN_CA0DE_SHIFT                (4U)                                                /*!< PWMA_SM2DMAEN.CA0DE Position            */
#define PWMA_SM2DMAEN_CA0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DMAEN_CA0DE_SHIFT))&PWMA_SM2DMAEN_CA0DE_MASK) /*!< PWMA_SM2DMAEN.CA0DE Field               */
#define PWMA_SM2DMAEN_CA1DE_MASK                 (0x20U)                                             /*!< PWMA_SM2DMAEN.CA1DE Mask                */
#define PWMA_SM2DMAEN_CA1DE_SHIFT                (5U)                                                /*!< PWMA_SM2DMAEN.CA1DE Position            */
#define PWMA_SM2DMAEN_CA1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DMAEN_CA1DE_SHIFT))&PWMA_SM2DMAEN_CA1DE_MASK) /*!< PWMA_SM2DMAEN.CA1DE Field               */
#define PWMA_SM2DMAEN_CAPTDE_MASK                (0xC0U)                                             /*!< PWMA_SM2DMAEN.CAPTDE Mask               */
#define PWMA_SM2DMAEN_CAPTDE_SHIFT               (6U)                                                /*!< PWMA_SM2DMAEN.CAPTDE Position           */
#define PWMA_SM2DMAEN_CAPTDE(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DMAEN_CAPTDE_SHIFT))&PWMA_SM2DMAEN_CAPTDE_MASK) /*!< PWMA_SM2DMAEN.CAPTDE Field              */
#define PWMA_SM2DMAEN_FAND_MASK                  (0x100U)                                            /*!< PWMA_SM2DMAEN.FAND Mask                 */
#define PWMA_SM2DMAEN_FAND_SHIFT                 (8U)                                                /*!< PWMA_SM2DMAEN.FAND Position             */
#define PWMA_SM2DMAEN_FAND(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DMAEN_FAND_SHIFT))&PWMA_SM2DMAEN_FAND_MASK) /*!< PWMA_SM2DMAEN.FAND Field                */
#define PWMA_SM2DMAEN_VALDE_MASK                 (0x200U)                                            /*!< PWMA_SM2DMAEN.VALDE Mask                */
#define PWMA_SM2DMAEN_VALDE_SHIFT                (9U)                                                /*!< PWMA_SM2DMAEN.VALDE Position            */
#define PWMA_SM2DMAEN_VALDE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DMAEN_VALDE_SHIFT))&PWMA_SM2DMAEN_VALDE_MASK) /*!< PWMA_SM2DMAEN.VALDE Field               */

/*! @name SM2TCTRL - Output Trigger Control Register */
#define PWMA_SM2TCTRL_OUT_TRIG_EN_MASK           (0x3FU)                                             /*!< PWMA_SM2TCTRL.OUT_TRIG_EN Mask          */
#define PWMA_SM2TCTRL_OUT_TRIG_EN_SHIFT          (0U)                                                /*!< PWMA_SM2TCTRL.OUT_TRIG_EN Position      */
#define PWMA_SM2TCTRL_OUT_TRIG_EN(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2TCTRL_OUT_TRIG_EN_SHIFT))&PWMA_SM2TCTRL_OUT_TRIG_EN_MASK) /*!< PWMA_SM2TCTRL.OUT_TRIG_EN Field         */
#define PWMA_SM2TCTRL_PWBOT1_MASK                (0x4000U)                                           /*!< PWMA_SM2TCTRL.PWBOT1 Mask               */
#define PWMA_SM2TCTRL_PWBOT1_SHIFT               (14U)                                               /*!< PWMA_SM2TCTRL.PWBOT1 Position           */
#define PWMA_SM2TCTRL_PWBOT1(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM2TCTRL_PWBOT1_SHIFT))&PWMA_SM2TCTRL_PWBOT1_MASK) /*!< PWMA_SM2TCTRL.PWBOT1 Field              */
#define PWMA_SM2TCTRL_PWAOT0_MASK                (0x8000U)                                           /*!< PWMA_SM2TCTRL.PWAOT0 Mask               */
#define PWMA_SM2TCTRL_PWAOT0_SHIFT               (15U)                                               /*!< PWMA_SM2TCTRL.PWAOT0 Position           */
#define PWMA_SM2TCTRL_PWAOT0(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM2TCTRL_PWAOT0_SHIFT))&PWMA_SM2TCTRL_PWAOT0_MASK) /*!< PWMA_SM2TCTRL.PWAOT0 Field              */

/*! @name SM2DISMAP0 - Fault Disable Mapping Register 0 */
#define PWMA_SM2DISMAP0_DIS0A_MASK               (0xFU)                                              /*!< PWMA_SM2DISMAP0.DIS0A Mask              */
#define PWMA_SM2DISMAP0_DIS0A_SHIFT              (0U)                                                /*!< PWMA_SM2DISMAP0.DIS0A Position          */
#define PWMA_SM2DISMAP0_DIS0A(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DISMAP0_DIS0A_SHIFT))&PWMA_SM2DISMAP0_DIS0A_MASK) /*!< PWMA_SM2DISMAP0.DIS0A Field             */
#define PWMA_SM2DISMAP0_DIS0B_MASK               (0xF0U)                                             /*!< PWMA_SM2DISMAP0.DIS0B Mask              */
#define PWMA_SM2DISMAP0_DIS0B_SHIFT              (4U)                                                /*!< PWMA_SM2DISMAP0.DIS0B Position          */
#define PWMA_SM2DISMAP0_DIS0B(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DISMAP0_DIS0B_SHIFT))&PWMA_SM2DISMAP0_DIS0B_MASK) /*!< PWMA_SM2DISMAP0.DIS0B Field             */
#define PWMA_SM2DISMAP0_DIS0X_MASK               (0xF00U)                                            /*!< PWMA_SM2DISMAP0.DIS0X Mask              */
#define PWMA_SM2DISMAP0_DIS0X_SHIFT              (8U)                                                /*!< PWMA_SM2DISMAP0.DIS0X Position          */
#define PWMA_SM2DISMAP0_DIS0X(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DISMAP0_DIS0X_SHIFT))&PWMA_SM2DISMAP0_DIS0X_MASK) /*!< PWMA_SM2DISMAP0.DIS0X Field             */

/*! @name SM2DTCNT - Deadtime Count Register %s */
#define PWMA_SM2DTCNT_DTCNT0_MASK                (0x7FFU)                                            /*!< PWMA_SM2DTCNT.DTCNT0 Mask               */
#define PWMA_SM2DTCNT_DTCNT0_SHIFT               (0U)                                                /*!< PWMA_SM2DTCNT.DTCNT0 Position           */
#define PWMA_SM2DTCNT_DTCNT0(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM2DTCNT_DTCNT0_SHIFT))&PWMA_SM2DTCNT_DTCNT0_MASK) /*!< PWMA_SM2DTCNT.DTCNT0 Field              */

/*! @name SM2CAPTCTRLA - Capture Control A Register */
#define PWMA_SM2CAPTCTRLA_ARMA_MASK              (0x1U)                                              /*!< PWMA_SM2CAPTCTRLA.ARMA Mask             */
#define PWMA_SM2CAPTCTRLA_ARMA_SHIFT             (0U)                                                /*!< PWMA_SM2CAPTCTRLA.ARMA Position         */
#define PWMA_SM2CAPTCTRLA_ARMA(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLA_ARMA_SHIFT))&PWMA_SM2CAPTCTRLA_ARMA_MASK) /*!< PWMA_SM2CAPTCTRLA.ARMA Field            */
#define PWMA_SM2CAPTCTRLA_ONESHOTA_MASK          (0x2U)                                              /*!< PWMA_SM2CAPTCTRLA.ONESHOTA Mask         */
#define PWMA_SM2CAPTCTRLA_ONESHOTA_SHIFT         (1U)                                                /*!< PWMA_SM2CAPTCTRLA.ONESHOTA Position     */
#define PWMA_SM2CAPTCTRLA_ONESHOTA(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLA_ONESHOTA_SHIFT))&PWMA_SM2CAPTCTRLA_ONESHOTA_MASK) /*!< PWMA_SM2CAPTCTRLA.ONESHOTA Field        */
#define PWMA_SM2CAPTCTRLA_EDGA0_MASK             (0xCU)                                              /*!< PWMA_SM2CAPTCTRLA.EDGA0 Mask            */
#define PWMA_SM2CAPTCTRLA_EDGA0_SHIFT            (2U)                                                /*!< PWMA_SM2CAPTCTRLA.EDGA0 Position        */
#define PWMA_SM2CAPTCTRLA_EDGA0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLA_EDGA0_SHIFT))&PWMA_SM2CAPTCTRLA_EDGA0_MASK) /*!< PWMA_SM2CAPTCTRLA.EDGA0 Field           */
#define PWMA_SM2CAPTCTRLA_EDGA1_MASK             (0x30U)                                             /*!< PWMA_SM2CAPTCTRLA.EDGA1 Mask            */
#define PWMA_SM2CAPTCTRLA_EDGA1_SHIFT            (4U)                                                /*!< PWMA_SM2CAPTCTRLA.EDGA1 Position        */
#define PWMA_SM2CAPTCTRLA_EDGA1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLA_EDGA1_SHIFT))&PWMA_SM2CAPTCTRLA_EDGA1_MASK) /*!< PWMA_SM2CAPTCTRLA.EDGA1 Field           */
#define PWMA_SM2CAPTCTRLA_INP_SELA_MASK          (0x40U)                                             /*!< PWMA_SM2CAPTCTRLA.INP_SELA Mask         */
#define PWMA_SM2CAPTCTRLA_INP_SELA_SHIFT         (6U)                                                /*!< PWMA_SM2CAPTCTRLA.INP_SELA Position     */
#define PWMA_SM2CAPTCTRLA_INP_SELA(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLA_INP_SELA_SHIFT))&PWMA_SM2CAPTCTRLA_INP_SELA_MASK) /*!< PWMA_SM2CAPTCTRLA.INP_SELA Field        */
#define PWMA_SM2CAPTCTRLA_EDGCNTA_EN_MASK        (0x80U)                                             /*!< PWMA_SM2CAPTCTRLA.EDGCNTA_EN Mask       */
#define PWMA_SM2CAPTCTRLA_EDGCNTA_EN_SHIFT       (7U)                                                /*!< PWMA_SM2CAPTCTRLA.EDGCNTA_EN Position   */
#define PWMA_SM2CAPTCTRLA_EDGCNTA_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLA_EDGCNTA_EN_SHIFT))&PWMA_SM2CAPTCTRLA_EDGCNTA_EN_MASK) /*!< PWMA_SM2CAPTCTRLA.EDGCNTA_EN Field      */
#define PWMA_SM2CAPTCTRLA_CFAWM_MASK             (0x300U)                                            /*!< PWMA_SM2CAPTCTRLA.CFAWM Mask            */
#define PWMA_SM2CAPTCTRLA_CFAWM_SHIFT            (8U)                                                /*!< PWMA_SM2CAPTCTRLA.CFAWM Position        */
#define PWMA_SM2CAPTCTRLA_CFAWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLA_CFAWM_SHIFT))&PWMA_SM2CAPTCTRLA_CFAWM_MASK) /*!< PWMA_SM2CAPTCTRLA.CFAWM Field           */
#define PWMA_SM2CAPTCTRLA_CA0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM2CAPTCTRLA.CA0CNT Mask           */
#define PWMA_SM2CAPTCTRLA_CA0CNT_SHIFT           (10U)                                               /*!< PWMA_SM2CAPTCTRLA.CA0CNT Position       */
#define PWMA_SM2CAPTCTRLA_CA0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLA_CA0CNT_SHIFT))&PWMA_SM2CAPTCTRLA_CA0CNT_MASK) /*!< PWMA_SM2CAPTCTRLA.CA0CNT Field          */
#define PWMA_SM2CAPTCTRLA_CA1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM2CAPTCTRLA.CA1CNT Mask           */
#define PWMA_SM2CAPTCTRLA_CA1CNT_SHIFT           (13U)                                               /*!< PWMA_SM2CAPTCTRLA.CA1CNT Position       */
#define PWMA_SM2CAPTCTRLA_CA1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLA_CA1CNT_SHIFT))&PWMA_SM2CAPTCTRLA_CA1CNT_MASK) /*!< PWMA_SM2CAPTCTRLA.CA1CNT Field          */

/*! @name SM2CAPTCOMPA - Capture Compare A Register */
#define PWMA_SM2CAPTCOMPA_EDGCMPA_MASK           (0xFFU)                                             /*!< PWMA_SM2CAPTCOMPA.EDGCMPA Mask          */
#define PWMA_SM2CAPTCOMPA_EDGCMPA_SHIFT          (0U)                                                /*!< PWMA_SM2CAPTCOMPA.EDGCMPA Position      */
#define PWMA_SM2CAPTCOMPA_EDGCMPA(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCOMPA_EDGCMPA_SHIFT))&PWMA_SM2CAPTCOMPA_EDGCMPA_MASK) /*!< PWMA_SM2CAPTCOMPA.EDGCMPA Field         */
#define PWMA_SM2CAPTCOMPA_EDGCNTA_MASK           (0xFF00U)                                           /*!< PWMA_SM2CAPTCOMPA.EDGCNTA Mask          */
#define PWMA_SM2CAPTCOMPA_EDGCNTA_SHIFT          (8U)                                                /*!< PWMA_SM2CAPTCOMPA.EDGCNTA Position      */
#define PWMA_SM2CAPTCOMPA_EDGCNTA(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCOMPA_EDGCNTA_SHIFT))&PWMA_SM2CAPTCOMPA_EDGCNTA_MASK) /*!< PWMA_SM2CAPTCOMPA.EDGCNTA Field         */

/*! @name SM2CAPTCTRLB - Capture Control B Register */
#define PWMA_SM2CAPTCTRLB_ARMB_MASK              (0x1U)                                              /*!< PWMA_SM2CAPTCTRLB.ARMB Mask             */
#define PWMA_SM2CAPTCTRLB_ARMB_SHIFT             (0U)                                                /*!< PWMA_SM2CAPTCTRLB.ARMB Position         */
#define PWMA_SM2CAPTCTRLB_ARMB(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLB_ARMB_SHIFT))&PWMA_SM2CAPTCTRLB_ARMB_MASK) /*!< PWMA_SM2CAPTCTRLB.ARMB Field            */
#define PWMA_SM2CAPTCTRLB_ONESHOTB_MASK          (0x2U)                                              /*!< PWMA_SM2CAPTCTRLB.ONESHOTB Mask         */
#define PWMA_SM2CAPTCTRLB_ONESHOTB_SHIFT         (1U)                                                /*!< PWMA_SM2CAPTCTRLB.ONESHOTB Position     */
#define PWMA_SM2CAPTCTRLB_ONESHOTB(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLB_ONESHOTB_SHIFT))&PWMA_SM2CAPTCTRLB_ONESHOTB_MASK) /*!< PWMA_SM2CAPTCTRLB.ONESHOTB Field        */
#define PWMA_SM2CAPTCTRLB_EDGB0_MASK             (0xCU)                                              /*!< PWMA_SM2CAPTCTRLB.EDGB0 Mask            */
#define PWMA_SM2CAPTCTRLB_EDGB0_SHIFT            (2U)                                                /*!< PWMA_SM2CAPTCTRLB.EDGB0 Position        */
#define PWMA_SM2CAPTCTRLB_EDGB0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLB_EDGB0_SHIFT))&PWMA_SM2CAPTCTRLB_EDGB0_MASK) /*!< PWMA_SM2CAPTCTRLB.EDGB0 Field           */
#define PWMA_SM2CAPTCTRLB_EDGB1_MASK             (0x30U)                                             /*!< PWMA_SM2CAPTCTRLB.EDGB1 Mask            */
#define PWMA_SM2CAPTCTRLB_EDGB1_SHIFT            (4U)                                                /*!< PWMA_SM2CAPTCTRLB.EDGB1 Position        */
#define PWMA_SM2CAPTCTRLB_EDGB1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLB_EDGB1_SHIFT))&PWMA_SM2CAPTCTRLB_EDGB1_MASK) /*!< PWMA_SM2CAPTCTRLB.EDGB1 Field           */
#define PWMA_SM2CAPTCTRLB_INP_SELB_MASK          (0x40U)                                             /*!< PWMA_SM2CAPTCTRLB.INP_SELB Mask         */
#define PWMA_SM2CAPTCTRLB_INP_SELB_SHIFT         (6U)                                                /*!< PWMA_SM2CAPTCTRLB.INP_SELB Position     */
#define PWMA_SM2CAPTCTRLB_INP_SELB(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLB_INP_SELB_SHIFT))&PWMA_SM2CAPTCTRLB_INP_SELB_MASK) /*!< PWMA_SM2CAPTCTRLB.INP_SELB Field        */
#define PWMA_SM2CAPTCTRLB_EDGCNTB_EN_MASK        (0x80U)                                             /*!< PWMA_SM2CAPTCTRLB.EDGCNTB_EN Mask       */
#define PWMA_SM2CAPTCTRLB_EDGCNTB_EN_SHIFT       (7U)                                                /*!< PWMA_SM2CAPTCTRLB.EDGCNTB_EN Position   */
#define PWMA_SM2CAPTCTRLB_EDGCNTB_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLB_EDGCNTB_EN_SHIFT))&PWMA_SM2CAPTCTRLB_EDGCNTB_EN_MASK) /*!< PWMA_SM2CAPTCTRLB.EDGCNTB_EN Field      */
#define PWMA_SM2CAPTCTRLB_CFBWM_MASK             (0x300U)                                            /*!< PWMA_SM2CAPTCTRLB.CFBWM Mask            */
#define PWMA_SM2CAPTCTRLB_CFBWM_SHIFT            (8U)                                                /*!< PWMA_SM2CAPTCTRLB.CFBWM Position        */
#define PWMA_SM2CAPTCTRLB_CFBWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLB_CFBWM_SHIFT))&PWMA_SM2CAPTCTRLB_CFBWM_MASK) /*!< PWMA_SM2CAPTCTRLB.CFBWM Field           */
#define PWMA_SM2CAPTCTRLB_CB0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM2CAPTCTRLB.CB0CNT Mask           */
#define PWMA_SM2CAPTCTRLB_CB0CNT_SHIFT           (10U)                                               /*!< PWMA_SM2CAPTCTRLB.CB0CNT Position       */
#define PWMA_SM2CAPTCTRLB_CB0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLB_CB0CNT_SHIFT))&PWMA_SM2CAPTCTRLB_CB0CNT_MASK) /*!< PWMA_SM2CAPTCTRLB.CB0CNT Field          */
#define PWMA_SM2CAPTCTRLB_CB1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM2CAPTCTRLB.CB1CNT Mask           */
#define PWMA_SM2CAPTCTRLB_CB1CNT_SHIFT           (13U)                                               /*!< PWMA_SM2CAPTCTRLB.CB1CNT Position       */
#define PWMA_SM2CAPTCTRLB_CB1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLB_CB1CNT_SHIFT))&PWMA_SM2CAPTCTRLB_CB1CNT_MASK) /*!< PWMA_SM2CAPTCTRLB.CB1CNT Field          */

/*! @name SM2CAPTCOMPB - Capture Compare B Register */
#define PWMA_SM2CAPTCOMPB_EDGCMPB_MASK           (0xFFU)                                             /*!< PWMA_SM2CAPTCOMPB.EDGCMPB Mask          */
#define PWMA_SM2CAPTCOMPB_EDGCMPB_SHIFT          (0U)                                                /*!< PWMA_SM2CAPTCOMPB.EDGCMPB Position      */
#define PWMA_SM2CAPTCOMPB_EDGCMPB(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCOMPB_EDGCMPB_SHIFT))&PWMA_SM2CAPTCOMPB_EDGCMPB_MASK) /*!< PWMA_SM2CAPTCOMPB.EDGCMPB Field         */
#define PWMA_SM2CAPTCOMPB_EDGCNTB_MASK           (0xFF00U)                                           /*!< PWMA_SM2CAPTCOMPB.EDGCNTB Mask          */
#define PWMA_SM2CAPTCOMPB_EDGCNTB_SHIFT          (8U)                                                /*!< PWMA_SM2CAPTCOMPB.EDGCNTB Position      */
#define PWMA_SM2CAPTCOMPB_EDGCNTB(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCOMPB_EDGCNTB_SHIFT))&PWMA_SM2CAPTCOMPB_EDGCNTB_MASK) /*!< PWMA_SM2CAPTCOMPB.EDGCNTB Field         */

/*! @name SM2CAPTCTRLX - Capture Control X Register */
#define PWMA_SM2CAPTCTRLX_ARMX_MASK              (0x1U)                                              /*!< PWMA_SM2CAPTCTRLX.ARMX Mask             */
#define PWMA_SM2CAPTCTRLX_ARMX_SHIFT             (0U)                                                /*!< PWMA_SM2CAPTCTRLX.ARMX Position         */
#define PWMA_SM2CAPTCTRLX_ARMX(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLX_ARMX_SHIFT))&PWMA_SM2CAPTCTRLX_ARMX_MASK) /*!< PWMA_SM2CAPTCTRLX.ARMX Field            */
#define PWMA_SM2CAPTCTRLX_ONESHOTX_MASK          (0x2U)                                              /*!< PWMA_SM2CAPTCTRLX.ONESHOTX Mask         */
#define PWMA_SM2CAPTCTRLX_ONESHOTX_SHIFT         (1U)                                                /*!< PWMA_SM2CAPTCTRLX.ONESHOTX Position     */
#define PWMA_SM2CAPTCTRLX_ONESHOTX(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLX_ONESHOTX_SHIFT))&PWMA_SM2CAPTCTRLX_ONESHOTX_MASK) /*!< PWMA_SM2CAPTCTRLX.ONESHOTX Field        */
#define PWMA_SM2CAPTCTRLX_EDGX0_MASK             (0xCU)                                              /*!< PWMA_SM2CAPTCTRLX.EDGX0 Mask            */
#define PWMA_SM2CAPTCTRLX_EDGX0_SHIFT            (2U)                                                /*!< PWMA_SM2CAPTCTRLX.EDGX0 Position        */
#define PWMA_SM2CAPTCTRLX_EDGX0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLX_EDGX0_SHIFT))&PWMA_SM2CAPTCTRLX_EDGX0_MASK) /*!< PWMA_SM2CAPTCTRLX.EDGX0 Field           */
#define PWMA_SM2CAPTCTRLX_EDGX1_MASK             (0x30U)                                             /*!< PWMA_SM2CAPTCTRLX.EDGX1 Mask            */
#define PWMA_SM2CAPTCTRLX_EDGX1_SHIFT            (4U)                                                /*!< PWMA_SM2CAPTCTRLX.EDGX1 Position        */
#define PWMA_SM2CAPTCTRLX_EDGX1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLX_EDGX1_SHIFT))&PWMA_SM2CAPTCTRLX_EDGX1_MASK) /*!< PWMA_SM2CAPTCTRLX.EDGX1 Field           */
#define PWMA_SM2CAPTCTRLX_INP_SELX_MASK          (0x40U)                                             /*!< PWMA_SM2CAPTCTRLX.INP_SELX Mask         */
#define PWMA_SM2CAPTCTRLX_INP_SELX_SHIFT         (6U)                                                /*!< PWMA_SM2CAPTCTRLX.INP_SELX Position     */
#define PWMA_SM2CAPTCTRLX_INP_SELX(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLX_INP_SELX_SHIFT))&PWMA_SM2CAPTCTRLX_INP_SELX_MASK) /*!< PWMA_SM2CAPTCTRLX.INP_SELX Field        */
#define PWMA_SM2CAPTCTRLX_EDGCNTX_EN_MASK        (0x80U)                                             /*!< PWMA_SM2CAPTCTRLX.EDGCNTX_EN Mask       */
#define PWMA_SM2CAPTCTRLX_EDGCNTX_EN_SHIFT       (7U)                                                /*!< PWMA_SM2CAPTCTRLX.EDGCNTX_EN Position   */
#define PWMA_SM2CAPTCTRLX_EDGCNTX_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLX_EDGCNTX_EN_SHIFT))&PWMA_SM2CAPTCTRLX_EDGCNTX_EN_MASK) /*!< PWMA_SM2CAPTCTRLX.EDGCNTX_EN Field      */
#define PWMA_SM2CAPTCTRLX_CFXWM_MASK             (0x300U)                                            /*!< PWMA_SM2CAPTCTRLX.CFXWM Mask            */
#define PWMA_SM2CAPTCTRLX_CFXWM_SHIFT            (8U)                                                /*!< PWMA_SM2CAPTCTRLX.CFXWM Position        */
#define PWMA_SM2CAPTCTRLX_CFXWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLX_CFXWM_SHIFT))&PWMA_SM2CAPTCTRLX_CFXWM_MASK) /*!< PWMA_SM2CAPTCTRLX.CFXWM Field           */
#define PWMA_SM2CAPTCTRLX_CX0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM2CAPTCTRLX.CX0CNT Mask           */
#define PWMA_SM2CAPTCTRLX_CX0CNT_SHIFT           (10U)                                               /*!< PWMA_SM2CAPTCTRLX.CX0CNT Position       */
#define PWMA_SM2CAPTCTRLX_CX0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLX_CX0CNT_SHIFT))&PWMA_SM2CAPTCTRLX_CX0CNT_MASK) /*!< PWMA_SM2CAPTCTRLX.CX0CNT Field          */
#define PWMA_SM2CAPTCTRLX_CX1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM2CAPTCTRLX.CX1CNT Mask           */
#define PWMA_SM2CAPTCTRLX_CX1CNT_SHIFT           (13U)                                               /*!< PWMA_SM2CAPTCTRLX.CX1CNT Position       */
#define PWMA_SM2CAPTCTRLX_CX1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCTRLX_CX1CNT_SHIFT))&PWMA_SM2CAPTCTRLX_CX1CNT_MASK) /*!< PWMA_SM2CAPTCTRLX.CX1CNT Field          */

/*! @name SM2CAPTCOMPX - Capture Compare X Register */
#define PWMA_SM2CAPTCOMPX_EDGCMPX_MASK           (0xFFU)                                             /*!< PWMA_SM2CAPTCOMPX.EDGCMPX Mask          */
#define PWMA_SM2CAPTCOMPX_EDGCMPX_SHIFT          (0U)                                                /*!< PWMA_SM2CAPTCOMPX.EDGCMPX Position      */
#define PWMA_SM2CAPTCOMPX_EDGCMPX(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCOMPX_EDGCMPX_SHIFT))&PWMA_SM2CAPTCOMPX_EDGCMPX_MASK) /*!< PWMA_SM2CAPTCOMPX.EDGCMPX Field         */
#define PWMA_SM2CAPTCOMPX_EDGCNTX_MASK           (0xFF00U)                                           /*!< PWMA_SM2CAPTCOMPX.EDGCNTX Mask          */
#define PWMA_SM2CAPTCOMPX_EDGCNTX_SHIFT          (8U)                                                /*!< PWMA_SM2CAPTCOMPX.EDGCNTX Position      */
#define PWMA_SM2CAPTCOMPX_EDGCNTX(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CAPTCOMPX_EDGCNTX_SHIFT))&PWMA_SM2CAPTCOMPX_EDGCNTX_MASK) /*!< PWMA_SM2CAPTCOMPX.EDGCNTX Field         */

/*! @name SM2CVAL0 - Capture Value 0 Register */
#define PWMA_SM2CVAL0_CAPTVAL0_MASK              (0xFFFFU)                                           /*!< PWMA_SM2CVAL0.CAPTVAL0 Mask             */
#define PWMA_SM2CVAL0_CAPTVAL0_SHIFT             (0U)                                                /*!< PWMA_SM2CVAL0.CAPTVAL0 Position         */
#define PWMA_SM2CVAL0_CAPTVAL0(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL0_CAPTVAL0_SHIFT))&PWMA_SM2CVAL0_CAPTVAL0_MASK) /*!< PWMA_SM2CVAL0.CAPTVAL0 Field            */

/*! @name SM2CVAL0CYC - Capture Value 0 Cycle Register */
#define PWMA_SM2CVAL0CYC_CVAL0CYC_MASK           (0xFU)                                              /*!< PWMA_SM2CVAL0CYC.CVAL0CYC Mask          */
#define PWMA_SM2CVAL0CYC_CVAL0CYC_SHIFT          (0U)                                                /*!< PWMA_SM2CVAL0CYC.CVAL0CYC Position      */
#define PWMA_SM2CVAL0CYC_CVAL0CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL0CYC_CVAL0CYC_SHIFT))&PWMA_SM2CVAL0CYC_CVAL0CYC_MASK) /*!< PWMA_SM2CVAL0CYC.CVAL0CYC Field         */

/*! @name SM2CVAL1 - Capture Value 1 Register */
#define PWMA_SM2CVAL1_CAPTVAL1_MASK              (0xFFFFU)                                           /*!< PWMA_SM2CVAL1.CAPTVAL1 Mask             */
#define PWMA_SM2CVAL1_CAPTVAL1_SHIFT             (0U)                                                /*!< PWMA_SM2CVAL1.CAPTVAL1 Position         */
#define PWMA_SM2CVAL1_CAPTVAL1(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL1_CAPTVAL1_SHIFT))&PWMA_SM2CVAL1_CAPTVAL1_MASK) /*!< PWMA_SM2CVAL1.CAPTVAL1 Field            */

/*! @name SM2CVAL1CYC - Capture Value 1 Cycle Register */
#define PWMA_SM2CVAL1CYC_CVAL1CYC_MASK           (0xFU)                                              /*!< PWMA_SM2CVAL1CYC.CVAL1CYC Mask          */
#define PWMA_SM2CVAL1CYC_CVAL1CYC_SHIFT          (0U)                                                /*!< PWMA_SM2CVAL1CYC.CVAL1CYC Position      */
#define PWMA_SM2CVAL1CYC_CVAL1CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL1CYC_CVAL1CYC_SHIFT))&PWMA_SM2CVAL1CYC_CVAL1CYC_MASK) /*!< PWMA_SM2CVAL1CYC.CVAL1CYC Field         */

/*! @name SM2CVAL2 - Capture Value 2 Register */
#define PWMA_SM2CVAL2_CAPTVAL2_MASK              (0xFFFFU)                                           /*!< PWMA_SM2CVAL2.CAPTVAL2 Mask             */
#define PWMA_SM2CVAL2_CAPTVAL2_SHIFT             (0U)                                                /*!< PWMA_SM2CVAL2.CAPTVAL2 Position         */
#define PWMA_SM2CVAL2_CAPTVAL2(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL2_CAPTVAL2_SHIFT))&PWMA_SM2CVAL2_CAPTVAL2_MASK) /*!< PWMA_SM2CVAL2.CAPTVAL2 Field            */

/*! @name SM2CVAL2CYC - Capture Value 2 Cycle Register */
#define PWMA_SM2CVAL2CYC_CVAL2CYC_MASK           (0xFU)                                              /*!< PWMA_SM2CVAL2CYC.CVAL2CYC Mask          */
#define PWMA_SM2CVAL2CYC_CVAL2CYC_SHIFT          (0U)                                                /*!< PWMA_SM2CVAL2CYC.CVAL2CYC Position      */
#define PWMA_SM2CVAL2CYC_CVAL2CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL2CYC_CVAL2CYC_SHIFT))&PWMA_SM2CVAL2CYC_CVAL2CYC_MASK) /*!< PWMA_SM2CVAL2CYC.CVAL2CYC Field         */

/*! @name SM2CVAL3 - Capture Value 3 Register */
#define PWMA_SM2CVAL3_CAPTVAL3_MASK              (0xFFFFU)                                           /*!< PWMA_SM2CVAL3.CAPTVAL3 Mask             */
#define PWMA_SM2CVAL3_CAPTVAL3_SHIFT             (0U)                                                /*!< PWMA_SM2CVAL3.CAPTVAL3 Position         */
#define PWMA_SM2CVAL3_CAPTVAL3(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL3_CAPTVAL3_SHIFT))&PWMA_SM2CVAL3_CAPTVAL3_MASK) /*!< PWMA_SM2CVAL3.CAPTVAL3 Field            */

/*! @name SM2CVAL3CYC - Capture Value 3 Cycle Register */
#define PWMA_SM2CVAL3CYC_CVAL3CYC_MASK           (0xFU)                                              /*!< PWMA_SM2CVAL3CYC.CVAL3CYC Mask          */
#define PWMA_SM2CVAL3CYC_CVAL3CYC_SHIFT          (0U)                                                /*!< PWMA_SM2CVAL3CYC.CVAL3CYC Position      */
#define PWMA_SM2CVAL3CYC_CVAL3CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL3CYC_CVAL3CYC_SHIFT))&PWMA_SM2CVAL3CYC_CVAL3CYC_MASK) /*!< PWMA_SM2CVAL3CYC.CVAL3CYC Field         */

/*! @name SM2CVAL4 - Capture Value 4 Register */
#define PWMA_SM2CVAL4_CAPTVAL4_MASK              (0xFFFFU)                                           /*!< PWMA_SM2CVAL4.CAPTVAL4 Mask             */
#define PWMA_SM2CVAL4_CAPTVAL4_SHIFT             (0U)                                                /*!< PWMA_SM2CVAL4.CAPTVAL4 Position         */
#define PWMA_SM2CVAL4_CAPTVAL4(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL4_CAPTVAL4_SHIFT))&PWMA_SM2CVAL4_CAPTVAL4_MASK) /*!< PWMA_SM2CVAL4.CAPTVAL4 Field            */

/*! @name SM2CVAL4CYC - Capture Value 4 Cycle Register */
#define PWMA_SM2CVAL4CYC_CVAL4CYC_MASK           (0xFU)                                              /*!< PWMA_SM2CVAL4CYC.CVAL4CYC Mask          */
#define PWMA_SM2CVAL4CYC_CVAL4CYC_SHIFT          (0U)                                                /*!< PWMA_SM2CVAL4CYC.CVAL4CYC Position      */
#define PWMA_SM2CVAL4CYC_CVAL4CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL4CYC_CVAL4CYC_SHIFT))&PWMA_SM2CVAL4CYC_CVAL4CYC_MASK) /*!< PWMA_SM2CVAL4CYC.CVAL4CYC Field         */

/*! @name SM2CVAL5 - Capture Value 5 Register */
#define PWMA_SM2CVAL5_CAPTVAL5_MASK              (0xFFFFU)                                           /*!< PWMA_SM2CVAL5.CAPTVAL5 Mask             */
#define PWMA_SM2CVAL5_CAPTVAL5_SHIFT             (0U)                                                /*!< PWMA_SM2CVAL5.CAPTVAL5 Position         */
#define PWMA_SM2CVAL5_CAPTVAL5(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL5_CAPTVAL5_SHIFT))&PWMA_SM2CVAL5_CAPTVAL5_MASK) /*!< PWMA_SM2CVAL5.CAPTVAL5 Field            */

/*! @name SM2CVAL5CYC - Capture Value 5 Cycle Register */
#define PWMA_SM2CVAL5CYC_CVAL5CYC_MASK           (0xFU)                                              /*!< PWMA_SM2CVAL5CYC.CVAL5CYC Mask          */
#define PWMA_SM2CVAL5CYC_CVAL5CYC_SHIFT          (0U)                                                /*!< PWMA_SM2CVAL5CYC.CVAL5CYC Position      */
#define PWMA_SM2CVAL5CYC_CVAL5CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM2CVAL5CYC_CVAL5CYC_SHIFT))&PWMA_SM2CVAL5CYC_CVAL5CYC_MASK) /*!< PWMA_SM2CVAL5CYC.CVAL5CYC Field         */

/*! @name SM3CNT - Counter Register */
#define PWMA_SM3CNT_CNT_MASK                     (0xFFFFU)                                           /*!< PWMA_SM3CNT.CNT Mask                    */
#define PWMA_SM3CNT_CNT_SHIFT                    (0U)                                                /*!< PWMA_SM3CNT.CNT Position                */
#define PWMA_SM3CNT_CNT(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CNT_CNT_SHIFT))&PWMA_SM3CNT_CNT_MASK) /*!< PWMA_SM3CNT.CNT Field                   */

/*! @name SM3INIT - Initial Count Register */
#define PWMA_SM3INIT_INIT_MASK                   (0xFFFFU)                                           /*!< PWMA_SM3INIT.INIT Mask                  */
#define PWMA_SM3INIT_INIT_SHIFT                  (0U)                                                /*!< PWMA_SM3INIT.INIT Position              */
#define PWMA_SM3INIT_INIT(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3INIT_INIT_SHIFT))&PWMA_SM3INIT_INIT_MASK) /*!< PWMA_SM3INIT.INIT Field                 */

/*! @name SM3CTRL2 - Control 2 Register */
#define PWMA_SM3CTRL2_CLK_SEL_MASK               (0x3U)                                              /*!< PWMA_SM3CTRL2.CLK_SEL Mask              */
#define PWMA_SM3CTRL2_CLK_SEL_SHIFT              (0U)                                                /*!< PWMA_SM3CTRL2.CLK_SEL Position          */
#define PWMA_SM3CTRL2_CLK_SEL(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_CLK_SEL_SHIFT))&PWMA_SM3CTRL2_CLK_SEL_MASK) /*!< PWMA_SM3CTRL2.CLK_SEL Field             */
#define PWMA_SM3CTRL2_RELOAD_SEL_MASK            (0x4U)                                              /*!< PWMA_SM3CTRL2.RELOAD_SEL Mask           */
#define PWMA_SM3CTRL2_RELOAD_SEL_SHIFT           (2U)                                                /*!< PWMA_SM3CTRL2.RELOAD_SEL Position       */
#define PWMA_SM3CTRL2_RELOAD_SEL(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_RELOAD_SEL_SHIFT))&PWMA_SM3CTRL2_RELOAD_SEL_MASK) /*!< PWMA_SM3CTRL2.RELOAD_SEL Field          */
#define PWMA_SM3CTRL2_FORCE_SEL_MASK             (0x38U)                                             /*!< PWMA_SM3CTRL2.FORCE_SEL Mask            */
#define PWMA_SM3CTRL2_FORCE_SEL_SHIFT            (3U)                                                /*!< PWMA_SM3CTRL2.FORCE_SEL Position        */
#define PWMA_SM3CTRL2_FORCE_SEL(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_FORCE_SEL_SHIFT))&PWMA_SM3CTRL2_FORCE_SEL_MASK) /*!< PWMA_SM3CTRL2.FORCE_SEL Field           */
#define PWMA_SM3CTRL2_FORCE_MASK                 (0x40U)                                             /*!< PWMA_SM3CTRL2.FORCE Mask                */
#define PWMA_SM3CTRL2_FORCE_SHIFT                (6U)                                                /*!< PWMA_SM3CTRL2.FORCE Position            */
#define PWMA_SM3CTRL2_FORCE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_FORCE_SHIFT))&PWMA_SM3CTRL2_FORCE_MASK) /*!< PWMA_SM3CTRL2.FORCE Field               */
#define PWMA_SM3CTRL2_FRCEN_MASK                 (0x80U)                                             /*!< PWMA_SM3CTRL2.FRCEN Mask                */
#define PWMA_SM3CTRL2_FRCEN_SHIFT                (7U)                                                /*!< PWMA_SM3CTRL2.FRCEN Position            */
#define PWMA_SM3CTRL2_FRCEN(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_FRCEN_SHIFT))&PWMA_SM3CTRL2_FRCEN_MASK) /*!< PWMA_SM3CTRL2.FRCEN Field               */
#define PWMA_SM3CTRL2_INIT_SEL_MASK              (0x300U)                                            /*!< PWMA_SM3CTRL2.INIT_SEL Mask             */
#define PWMA_SM3CTRL2_INIT_SEL_SHIFT             (8U)                                                /*!< PWMA_SM3CTRL2.INIT_SEL Position         */
#define PWMA_SM3CTRL2_INIT_SEL(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_INIT_SEL_SHIFT))&PWMA_SM3CTRL2_INIT_SEL_MASK) /*!< PWMA_SM3CTRL2.INIT_SEL Field            */
#define PWMA_SM3CTRL2_PWMX_INIT_MASK             (0x400U)                                            /*!< PWMA_SM3CTRL2.PWMX_INIT Mask            */
#define PWMA_SM3CTRL2_PWMX_INIT_SHIFT            (10U)                                               /*!< PWMA_SM3CTRL2.PWMX_INIT Position        */
#define PWMA_SM3CTRL2_PWMX_INIT(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_PWMX_INIT_SHIFT))&PWMA_SM3CTRL2_PWMX_INIT_MASK) /*!< PWMA_SM3CTRL2.PWMX_INIT Field           */
#define PWMA_SM3CTRL2_PWM45_INIT_MASK            (0x800U)                                            /*!< PWMA_SM3CTRL2.PWM45_INIT Mask           */
#define PWMA_SM3CTRL2_PWM45_INIT_SHIFT           (11U)                                               /*!< PWMA_SM3CTRL2.PWM45_INIT Position       */
#define PWMA_SM3CTRL2_PWM45_INIT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_PWM45_INIT_SHIFT))&PWMA_SM3CTRL2_PWM45_INIT_MASK) /*!< PWMA_SM3CTRL2.PWM45_INIT Field          */
#define PWMA_SM3CTRL2_PWM23_INIT_MASK            (0x1000U)                                           /*!< PWMA_SM3CTRL2.PWM23_INIT Mask           */
#define PWMA_SM3CTRL2_PWM23_INIT_SHIFT           (12U)                                               /*!< PWMA_SM3CTRL2.PWM23_INIT Position       */
#define PWMA_SM3CTRL2_PWM23_INIT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_PWM23_INIT_SHIFT))&PWMA_SM3CTRL2_PWM23_INIT_MASK) /*!< PWMA_SM3CTRL2.PWM23_INIT Field          */
#define PWMA_SM3CTRL2_INDEP_MASK                 (0x2000U)                                           /*!< PWMA_SM3CTRL2.INDEP Mask                */
#define PWMA_SM3CTRL2_INDEP_SHIFT                (13U)                                               /*!< PWMA_SM3CTRL2.INDEP Position            */
#define PWMA_SM3CTRL2_INDEP(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_INDEP_SHIFT))&PWMA_SM3CTRL2_INDEP_MASK) /*!< PWMA_SM3CTRL2.INDEP Field               */
#define PWMA_SM3CTRL2_WAITEN_MASK                (0x4000U)                                           /*!< PWMA_SM3CTRL2.WAITEN Mask               */
#define PWMA_SM3CTRL2_WAITEN_SHIFT               (14U)                                               /*!< PWMA_SM3CTRL2.WAITEN Position           */
#define PWMA_SM3CTRL2_WAITEN(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_WAITEN_SHIFT))&PWMA_SM3CTRL2_WAITEN_MASK) /*!< PWMA_SM3CTRL2.WAITEN Field              */
#define PWMA_SM3CTRL2_DBGEN_MASK                 (0x8000U)                                           /*!< PWMA_SM3CTRL2.DBGEN Mask                */
#define PWMA_SM3CTRL2_DBGEN_SHIFT                (15U)                                               /*!< PWMA_SM3CTRL2.DBGEN Position            */
#define PWMA_SM3CTRL2_DBGEN(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL2_DBGEN_SHIFT))&PWMA_SM3CTRL2_DBGEN_MASK) /*!< PWMA_SM3CTRL2.DBGEN Field               */

/*! @name SM3CTRL - Control Register */
#define PWMA_SM3CTRL_DBLEN_MASK                  (0x1U)                                              /*!< PWMA_SM3CTRL.DBLEN Mask                 */
#define PWMA_SM3CTRL_DBLEN_SHIFT                 (0U)                                                /*!< PWMA_SM3CTRL.DBLEN Position             */
#define PWMA_SM3CTRL_DBLEN(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL_DBLEN_SHIFT))&PWMA_SM3CTRL_DBLEN_MASK) /*!< PWMA_SM3CTRL.DBLEN Field                */
#define PWMA_SM3CTRL_DBLX_MASK                   (0x2U)                                              /*!< PWMA_SM3CTRL.DBLX Mask                  */
#define PWMA_SM3CTRL_DBLX_SHIFT                  (1U)                                                /*!< PWMA_SM3CTRL.DBLX Position              */
#define PWMA_SM3CTRL_DBLX(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL_DBLX_SHIFT))&PWMA_SM3CTRL_DBLX_MASK) /*!< PWMA_SM3CTRL.DBLX Field                 */
#define PWMA_SM3CTRL_LDMOD_MASK                  (0x4U)                                              /*!< PWMA_SM3CTRL.LDMOD Mask                 */
#define PWMA_SM3CTRL_LDMOD_SHIFT                 (2U)                                                /*!< PWMA_SM3CTRL.LDMOD Position             */
#define PWMA_SM3CTRL_LDMOD(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL_LDMOD_SHIFT))&PWMA_SM3CTRL_LDMOD_MASK) /*!< PWMA_SM3CTRL.LDMOD Field                */
#define PWMA_SM3CTRL_PRSC_MASK                   (0x70U)                                             /*!< PWMA_SM3CTRL.PRSC Mask                  */
#define PWMA_SM3CTRL_PRSC_SHIFT                  (4U)                                                /*!< PWMA_SM3CTRL.PRSC Position              */
#define PWMA_SM3CTRL_PRSC(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL_PRSC_SHIFT))&PWMA_SM3CTRL_PRSC_MASK) /*!< PWMA_SM3CTRL.PRSC Field                 */
#define PWMA_SM3CTRL_DT_MASK                     (0x300U)                                            /*!< PWMA_SM3CTRL.DT Mask                    */
#define PWMA_SM3CTRL_DT_SHIFT                    (8U)                                                /*!< PWMA_SM3CTRL.DT Position                */
#define PWMA_SM3CTRL_DT(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL_DT_SHIFT))&PWMA_SM3CTRL_DT_MASK) /*!< PWMA_SM3CTRL.DT Field                   */
#define PWMA_SM3CTRL_FULL_MASK                   (0x400U)                                            /*!< PWMA_SM3CTRL.FULL Mask                  */
#define PWMA_SM3CTRL_FULL_SHIFT                  (10U)                                               /*!< PWMA_SM3CTRL.FULL Position              */
#define PWMA_SM3CTRL_FULL(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL_FULL_SHIFT))&PWMA_SM3CTRL_FULL_MASK) /*!< PWMA_SM3CTRL.FULL Field                 */
#define PWMA_SM3CTRL_HALF_MASK                   (0x800U)                                            /*!< PWMA_SM3CTRL.HALF Mask                  */
#define PWMA_SM3CTRL_HALF_SHIFT                  (11U)                                               /*!< PWMA_SM3CTRL.HALF Position              */
#define PWMA_SM3CTRL_HALF(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL_HALF_SHIFT))&PWMA_SM3CTRL_HALF_MASK) /*!< PWMA_SM3CTRL.HALF Field                 */
#define PWMA_SM3CTRL_LDFQ_MASK                   (0xF000U)                                           /*!< PWMA_SM3CTRL.LDFQ Mask                  */
#define PWMA_SM3CTRL_LDFQ_SHIFT                  (12U)                                               /*!< PWMA_SM3CTRL.LDFQ Position              */
#define PWMA_SM3CTRL_LDFQ(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CTRL_LDFQ_SHIFT))&PWMA_SM3CTRL_LDFQ_MASK) /*!< PWMA_SM3CTRL.LDFQ Field                 */

/*! @name SM3VAL0 - Value Register 0 */
#define PWMA_SM3VAL0_VAL0_MASK                   (0xFFFFU)                                           /*!< PWMA_SM3VAL0.VAL0 Mask                  */
#define PWMA_SM3VAL0_VAL0_SHIFT                  (0U)                                                /*!< PWMA_SM3VAL0.VAL0 Position              */
#define PWMA_SM3VAL0_VAL0(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3VAL0_VAL0_SHIFT))&PWMA_SM3VAL0_VAL0_MASK) /*!< PWMA_SM3VAL0.VAL0 Field                 */

/*! @name SM3FRACVAL1 - Fractional Value Register 1 */
#define PWMA_SM3FRACVAL1_FRACVAL1_MASK           (0xF800U)                                           /*!< PWMA_SM3FRACVAL1.FRACVAL1 Mask          */
#define PWMA_SM3FRACVAL1_FRACVAL1_SHIFT          (11U)                                               /*!< PWMA_SM3FRACVAL1.FRACVAL1 Position      */
#define PWMA_SM3FRACVAL1_FRACVAL1(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3FRACVAL1_FRACVAL1_SHIFT))&PWMA_SM3FRACVAL1_FRACVAL1_MASK) /*!< PWMA_SM3FRACVAL1.FRACVAL1 Field         */

/*! @name SM3VAL1 - Value Register 1 */
#define PWMA_SM3VAL1_VAL1_MASK                   (0xFFFFU)                                           /*!< PWMA_SM3VAL1.VAL1 Mask                  */
#define PWMA_SM3VAL1_VAL1_SHIFT                  (0U)                                                /*!< PWMA_SM3VAL1.VAL1 Position              */
#define PWMA_SM3VAL1_VAL1(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3VAL1_VAL1_SHIFT))&PWMA_SM3VAL1_VAL1_MASK) /*!< PWMA_SM3VAL1.VAL1 Field                 */

/*! @name SM3FRACVAL2 - Fractional Value Register 2 */
#define PWMA_SM3FRACVAL2_FRACVAL2_MASK           (0xF800U)                                           /*!< PWMA_SM3FRACVAL2.FRACVAL2 Mask          */
#define PWMA_SM3FRACVAL2_FRACVAL2_SHIFT          (11U)                                               /*!< PWMA_SM3FRACVAL2.FRACVAL2 Position      */
#define PWMA_SM3FRACVAL2_FRACVAL2(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3FRACVAL2_FRACVAL2_SHIFT))&PWMA_SM3FRACVAL2_FRACVAL2_MASK) /*!< PWMA_SM3FRACVAL2.FRACVAL2 Field         */

/*! @name SM3VAL2 - Value Register 2 */
#define PWMA_SM3VAL2_VAL2_MASK                   (0xFFFFU)                                           /*!< PWMA_SM3VAL2.VAL2 Mask                  */
#define PWMA_SM3VAL2_VAL2_SHIFT                  (0U)                                                /*!< PWMA_SM3VAL2.VAL2 Position              */
#define PWMA_SM3VAL2_VAL2(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3VAL2_VAL2_SHIFT))&PWMA_SM3VAL2_VAL2_MASK) /*!< PWMA_SM3VAL2.VAL2 Field                 */

/*! @name SM3FRACVAL3 - Fractional Value Register 3 */
#define PWMA_SM3FRACVAL3_FRACVAL3_MASK           (0xF800U)                                           /*!< PWMA_SM3FRACVAL3.FRACVAL3 Mask          */
#define PWMA_SM3FRACVAL3_FRACVAL3_SHIFT          (11U)                                               /*!< PWMA_SM3FRACVAL3.FRACVAL3 Position      */
#define PWMA_SM3FRACVAL3_FRACVAL3(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3FRACVAL3_FRACVAL3_SHIFT))&PWMA_SM3FRACVAL3_FRACVAL3_MASK) /*!< PWMA_SM3FRACVAL3.FRACVAL3 Field         */

/*! @name SM3VAL3 - Value Register 3 */
#define PWMA_SM3VAL3_VAL3_MASK                   (0xFFFFU)                                           /*!< PWMA_SM3VAL3.VAL3 Mask                  */
#define PWMA_SM3VAL3_VAL3_SHIFT                  (0U)                                                /*!< PWMA_SM3VAL3.VAL3 Position              */
#define PWMA_SM3VAL3_VAL3(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3VAL3_VAL3_SHIFT))&PWMA_SM3VAL3_VAL3_MASK) /*!< PWMA_SM3VAL3.VAL3 Field                 */

/*! @name SM3FRACVAL4 - Fractional Value Register 4 */
#define PWMA_SM3FRACVAL4_FRACVAL4_MASK           (0xF800U)                                           /*!< PWMA_SM3FRACVAL4.FRACVAL4 Mask          */
#define PWMA_SM3FRACVAL4_FRACVAL4_SHIFT          (11U)                                               /*!< PWMA_SM3FRACVAL4.FRACVAL4 Position      */
#define PWMA_SM3FRACVAL4_FRACVAL4(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3FRACVAL4_FRACVAL4_SHIFT))&PWMA_SM3FRACVAL4_FRACVAL4_MASK) /*!< PWMA_SM3FRACVAL4.FRACVAL4 Field         */

/*! @name SM3VAL4 - Value Register 4 */
#define PWMA_SM3VAL4_VAL4_MASK                   (0xFFFFU)                                           /*!< PWMA_SM3VAL4.VAL4 Mask                  */
#define PWMA_SM3VAL4_VAL4_SHIFT                  (0U)                                                /*!< PWMA_SM3VAL4.VAL4 Position              */
#define PWMA_SM3VAL4_VAL4(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3VAL4_VAL4_SHIFT))&PWMA_SM3VAL4_VAL4_MASK) /*!< PWMA_SM3VAL4.VAL4 Field                 */

/*! @name SM3FRACVAL5 - Fractional Value Register 5 */
#define PWMA_SM3FRACVAL5_FRACVAL5_MASK           (0xF800U)                                           /*!< PWMA_SM3FRACVAL5.FRACVAL5 Mask          */
#define PWMA_SM3FRACVAL5_FRACVAL5_SHIFT          (11U)                                               /*!< PWMA_SM3FRACVAL5.FRACVAL5 Position      */
#define PWMA_SM3FRACVAL5_FRACVAL5(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3FRACVAL5_FRACVAL5_SHIFT))&PWMA_SM3FRACVAL5_FRACVAL5_MASK) /*!< PWMA_SM3FRACVAL5.FRACVAL5 Field         */

/*! @name SM3VAL5 - Value Register 5 */
#define PWMA_SM3VAL5_VAL5_MASK                   (0xFFFFU)                                           /*!< PWMA_SM3VAL5.VAL5 Mask                  */
#define PWMA_SM3VAL5_VAL5_SHIFT                  (0U)                                                /*!< PWMA_SM3VAL5.VAL5 Position              */
#define PWMA_SM3VAL5_VAL5(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3VAL5_VAL5_SHIFT))&PWMA_SM3VAL5_VAL5_MASK) /*!< PWMA_SM3VAL5.VAL5 Field                 */

/*! @name SM3FRCTRL - Fractional Control Register */
#define PWMA_SM3FRCTRL_FRAC1_EN_MASK             (0x2U)                                              /*!< PWMA_SM3FRCTRL.FRAC1_EN Mask            */
#define PWMA_SM3FRCTRL_FRAC1_EN_SHIFT            (1U)                                                /*!< PWMA_SM3FRCTRL.FRAC1_EN Position        */
#define PWMA_SM3FRCTRL_FRAC1_EN(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3FRCTRL_FRAC1_EN_SHIFT))&PWMA_SM3FRCTRL_FRAC1_EN_MASK) /*!< PWMA_SM3FRCTRL.FRAC1_EN Field           */
#define PWMA_SM3FRCTRL_FRAC23_EN_MASK            (0x4U)                                              /*!< PWMA_SM3FRCTRL.FRAC23_EN Mask           */
#define PWMA_SM3FRCTRL_FRAC23_EN_SHIFT           (2U)                                                /*!< PWMA_SM3FRCTRL.FRAC23_EN Position       */
#define PWMA_SM3FRCTRL_FRAC23_EN(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3FRCTRL_FRAC23_EN_SHIFT))&PWMA_SM3FRCTRL_FRAC23_EN_MASK) /*!< PWMA_SM3FRCTRL.FRAC23_EN Field          */
#define PWMA_SM3FRCTRL_FRAC45_EN_MASK            (0x10U)                                             /*!< PWMA_SM3FRCTRL.FRAC45_EN Mask           */
#define PWMA_SM3FRCTRL_FRAC45_EN_SHIFT           (4U)                                                /*!< PWMA_SM3FRCTRL.FRAC45_EN Position       */
#define PWMA_SM3FRCTRL_FRAC45_EN(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3FRCTRL_FRAC45_EN_SHIFT))&PWMA_SM3FRCTRL_FRAC45_EN_MASK) /*!< PWMA_SM3FRCTRL.FRAC45_EN Field          */
#define PWMA_SM3FRCTRL_FRAC_PU_MASK              (0x100U)                                            /*!< PWMA_SM3FRCTRL.FRAC_PU Mask             */
#define PWMA_SM3FRCTRL_FRAC_PU_SHIFT             (8U)                                                /*!< PWMA_SM3FRCTRL.FRAC_PU Position         */
#define PWMA_SM3FRCTRL_FRAC_PU(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3FRCTRL_FRAC_PU_SHIFT))&PWMA_SM3FRCTRL_FRAC_PU_MASK) /*!< PWMA_SM3FRCTRL.FRAC_PU Field            */
#define PWMA_SM3FRCTRL_TEST_MASK                 (0x8000U)                                           /*!< PWMA_SM3FRCTRL.TEST Mask                */
#define PWMA_SM3FRCTRL_TEST_SHIFT                (15U)                                               /*!< PWMA_SM3FRCTRL.TEST Position            */
#define PWMA_SM3FRCTRL_TEST(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3FRCTRL_TEST_SHIFT))&PWMA_SM3FRCTRL_TEST_MASK) /*!< PWMA_SM3FRCTRL.TEST Field               */

/*! @name SM3OCTRL - Output Control Register */
#define PWMA_SM3OCTRL_PWMXFS_MASK                (0x3U)                                              /*!< PWMA_SM3OCTRL.PWMXFS Mask               */
#define PWMA_SM3OCTRL_PWMXFS_SHIFT               (0U)                                                /*!< PWMA_SM3OCTRL.PWMXFS Position           */
#define PWMA_SM3OCTRL_PWMXFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM3OCTRL_PWMXFS_SHIFT))&PWMA_SM3OCTRL_PWMXFS_MASK) /*!< PWMA_SM3OCTRL.PWMXFS Field              */
#define PWMA_SM3OCTRL_PWMBFS_MASK                (0xCU)                                              /*!< PWMA_SM3OCTRL.PWMBFS Mask               */
#define PWMA_SM3OCTRL_PWMBFS_SHIFT               (2U)                                                /*!< PWMA_SM3OCTRL.PWMBFS Position           */
#define PWMA_SM3OCTRL_PWMBFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM3OCTRL_PWMBFS_SHIFT))&PWMA_SM3OCTRL_PWMBFS_MASK) /*!< PWMA_SM3OCTRL.PWMBFS Field              */
#define PWMA_SM3OCTRL_PWMAFS_MASK                (0x30U)                                             /*!< PWMA_SM3OCTRL.PWMAFS Mask               */
#define PWMA_SM3OCTRL_PWMAFS_SHIFT               (4U)                                                /*!< PWMA_SM3OCTRL.PWMAFS Position           */
#define PWMA_SM3OCTRL_PWMAFS(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM3OCTRL_PWMAFS_SHIFT))&PWMA_SM3OCTRL_PWMAFS_MASK) /*!< PWMA_SM3OCTRL.PWMAFS Field              */
#define PWMA_SM3OCTRL_POLX_MASK                  (0x100U)                                            /*!< PWMA_SM3OCTRL.POLX Mask                 */
#define PWMA_SM3OCTRL_POLX_SHIFT                 (8U)                                                /*!< PWMA_SM3OCTRL.POLX Position             */
#define PWMA_SM3OCTRL_POLX(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM3OCTRL_POLX_SHIFT))&PWMA_SM3OCTRL_POLX_MASK) /*!< PWMA_SM3OCTRL.POLX Field                */
#define PWMA_SM3OCTRL_POLB_MASK                  (0x200U)                                            /*!< PWMA_SM3OCTRL.POLB Mask                 */
#define PWMA_SM3OCTRL_POLB_SHIFT                 (9U)                                                /*!< PWMA_SM3OCTRL.POLB Position             */
#define PWMA_SM3OCTRL_POLB(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM3OCTRL_POLB_SHIFT))&PWMA_SM3OCTRL_POLB_MASK) /*!< PWMA_SM3OCTRL.POLB Field                */
#define PWMA_SM3OCTRL_POLA_MASK                  (0x400U)                                            /*!< PWMA_SM3OCTRL.POLA Mask                 */
#define PWMA_SM3OCTRL_POLA_SHIFT                 (10U)                                               /*!< PWMA_SM3OCTRL.POLA Position             */
#define PWMA_SM3OCTRL_POLA(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM3OCTRL_POLA_SHIFT))&PWMA_SM3OCTRL_POLA_MASK) /*!< PWMA_SM3OCTRL.POLA Field                */
#define PWMA_SM3OCTRL_PWMX_IN_MASK               (0x2000U)                                           /*!< PWMA_SM3OCTRL.PWMX_IN Mask              */
#define PWMA_SM3OCTRL_PWMX_IN_SHIFT              (13U)                                               /*!< PWMA_SM3OCTRL.PWMX_IN Position          */
#define PWMA_SM3OCTRL_PWMX_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM3OCTRL_PWMX_IN_SHIFT))&PWMA_SM3OCTRL_PWMX_IN_MASK) /*!< PWMA_SM3OCTRL.PWMX_IN Field             */
#define PWMA_SM3OCTRL_PWMB_IN_MASK               (0x4000U)                                           /*!< PWMA_SM3OCTRL.PWMB_IN Mask              */
#define PWMA_SM3OCTRL_PWMB_IN_SHIFT              (14U)                                               /*!< PWMA_SM3OCTRL.PWMB_IN Position          */
#define PWMA_SM3OCTRL_PWMB_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM3OCTRL_PWMB_IN_SHIFT))&PWMA_SM3OCTRL_PWMB_IN_MASK) /*!< PWMA_SM3OCTRL.PWMB_IN Field             */
#define PWMA_SM3OCTRL_PWMA_IN_MASK               (0x8000U)                                           /*!< PWMA_SM3OCTRL.PWMA_IN Mask              */
#define PWMA_SM3OCTRL_PWMA_IN_SHIFT              (15U)                                               /*!< PWMA_SM3OCTRL.PWMA_IN Position          */
#define PWMA_SM3OCTRL_PWMA_IN(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM3OCTRL_PWMA_IN_SHIFT))&PWMA_SM3OCTRL_PWMA_IN_MASK) /*!< PWMA_SM3OCTRL.PWMA_IN Field             */

/*! @name SM3STS - Status Register */
#define PWMA_SM3STS_CMPF_MASK                    (0x3FU)                                             /*!< PWMA_SM3STS.CMPF Mask                   */
#define PWMA_SM3STS_CMPF_SHIFT                   (0U)                                                /*!< PWMA_SM3STS.CMPF Position               */
#define PWMA_SM3STS_CMPF(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM3STS_CMPF_SHIFT))&PWMA_SM3STS_CMPF_MASK) /*!< PWMA_SM3STS.CMPF Field                  */
#define PWMA_SM3STS_CFX0_MASK                    (0x40U)                                             /*!< PWMA_SM3STS.CFX0 Mask                   */
#define PWMA_SM3STS_CFX0_SHIFT                   (6U)                                                /*!< PWMA_SM3STS.CFX0 Position               */
#define PWMA_SM3STS_CFX0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM3STS_CFX0_SHIFT))&PWMA_SM3STS_CFX0_MASK) /*!< PWMA_SM3STS.CFX0 Field                  */
#define PWMA_SM3STS_CFX1_MASK                    (0x80U)                                             /*!< PWMA_SM3STS.CFX1 Mask                   */
#define PWMA_SM3STS_CFX1_SHIFT                   (7U)                                                /*!< PWMA_SM3STS.CFX1 Position               */
#define PWMA_SM3STS_CFX1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM3STS_CFX1_SHIFT))&PWMA_SM3STS_CFX1_MASK) /*!< PWMA_SM3STS.CFX1 Field                  */
#define PWMA_SM3STS_CFB0_MASK                    (0x100U)                                            /*!< PWMA_SM3STS.CFB0 Mask                   */
#define PWMA_SM3STS_CFB0_SHIFT                   (8U)                                                /*!< PWMA_SM3STS.CFB0 Position               */
#define PWMA_SM3STS_CFB0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM3STS_CFB0_SHIFT))&PWMA_SM3STS_CFB0_MASK) /*!< PWMA_SM3STS.CFB0 Field                  */
#define PWMA_SM3STS_CFB1_MASK                    (0x200U)                                            /*!< PWMA_SM3STS.CFB1 Mask                   */
#define PWMA_SM3STS_CFB1_SHIFT                   (9U)                                                /*!< PWMA_SM3STS.CFB1 Position               */
#define PWMA_SM3STS_CFB1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM3STS_CFB1_SHIFT))&PWMA_SM3STS_CFB1_MASK) /*!< PWMA_SM3STS.CFB1 Field                  */
#define PWMA_SM3STS_CFA0_MASK                    (0x400U)                                            /*!< PWMA_SM3STS.CFA0 Mask                   */
#define PWMA_SM3STS_CFA0_SHIFT                   (10U)                                               /*!< PWMA_SM3STS.CFA0 Position               */
#define PWMA_SM3STS_CFA0(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM3STS_CFA0_SHIFT))&PWMA_SM3STS_CFA0_MASK) /*!< PWMA_SM3STS.CFA0 Field                  */
#define PWMA_SM3STS_CFA1_MASK                    (0x800U)                                            /*!< PWMA_SM3STS.CFA1 Mask                   */
#define PWMA_SM3STS_CFA1_SHIFT                   (11U)                                               /*!< PWMA_SM3STS.CFA1 Position               */
#define PWMA_SM3STS_CFA1(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_SM3STS_CFA1_SHIFT))&PWMA_SM3STS_CFA1_MASK) /*!< PWMA_SM3STS.CFA1 Field                  */
#define PWMA_SM3STS_RF_MASK                      (0x1000U)                                           /*!< PWMA_SM3STS.RF Mask                     */
#define PWMA_SM3STS_RF_SHIFT                     (12U)                                               /*!< PWMA_SM3STS.RF Position                 */
#define PWMA_SM3STS_RF(x)                        (((uint16_t)(((uint16_t)(x))<<PWMA_SM3STS_RF_SHIFT))&PWMA_SM3STS_RF_MASK) /*!< PWMA_SM3STS.RF Field                    */
#define PWMA_SM3STS_REF_MASK                     (0x2000U)                                           /*!< PWMA_SM3STS.REF Mask                    */
#define PWMA_SM3STS_REF_SHIFT                    (13U)                                               /*!< PWMA_SM3STS.REF Position                */
#define PWMA_SM3STS_REF(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM3STS_REF_SHIFT))&PWMA_SM3STS_REF_MASK) /*!< PWMA_SM3STS.REF Field                   */
#define PWMA_SM3STS_RUF_MASK                     (0x4000U)                                           /*!< PWMA_SM3STS.RUF Mask                    */
#define PWMA_SM3STS_RUF_SHIFT                    (14U)                                               /*!< PWMA_SM3STS.RUF Position                */
#define PWMA_SM3STS_RUF(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_SM3STS_RUF_SHIFT))&PWMA_SM3STS_RUF_MASK) /*!< PWMA_SM3STS.RUF Field                   */

/*! @name SM3INTEN - Interrupt Enable Register */
#define PWMA_SM3INTEN_CMPIE_MASK                 (0x3FU)                                             /*!< PWMA_SM3INTEN.CMPIE Mask                */
#define PWMA_SM3INTEN_CMPIE_SHIFT                (0U)                                                /*!< PWMA_SM3INTEN.CMPIE Position            */
#define PWMA_SM3INTEN_CMPIE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3INTEN_CMPIE_SHIFT))&PWMA_SM3INTEN_CMPIE_MASK) /*!< PWMA_SM3INTEN.CMPIE Field               */
#define PWMA_SM3INTEN_CX0IE_MASK                 (0x40U)                                             /*!< PWMA_SM3INTEN.CX0IE Mask                */
#define PWMA_SM3INTEN_CX0IE_SHIFT                (6U)                                                /*!< PWMA_SM3INTEN.CX0IE Position            */
#define PWMA_SM3INTEN_CX0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3INTEN_CX0IE_SHIFT))&PWMA_SM3INTEN_CX0IE_MASK) /*!< PWMA_SM3INTEN.CX0IE Field               */
#define PWMA_SM3INTEN_CX1IE_MASK                 (0x80U)                                             /*!< PWMA_SM3INTEN.CX1IE Mask                */
#define PWMA_SM3INTEN_CX1IE_SHIFT                (7U)                                                /*!< PWMA_SM3INTEN.CX1IE Position            */
#define PWMA_SM3INTEN_CX1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3INTEN_CX1IE_SHIFT))&PWMA_SM3INTEN_CX1IE_MASK) /*!< PWMA_SM3INTEN.CX1IE Field               */
#define PWMA_SM3INTEN_CB0IE_MASK                 (0x100U)                                            /*!< PWMA_SM3INTEN.CB0IE Mask                */
#define PWMA_SM3INTEN_CB0IE_SHIFT                (8U)                                                /*!< PWMA_SM3INTEN.CB0IE Position            */
#define PWMA_SM3INTEN_CB0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3INTEN_CB0IE_SHIFT))&PWMA_SM3INTEN_CB0IE_MASK) /*!< PWMA_SM3INTEN.CB0IE Field               */
#define PWMA_SM3INTEN_CB1IE_MASK                 (0x200U)                                            /*!< PWMA_SM3INTEN.CB1IE Mask                */
#define PWMA_SM3INTEN_CB1IE_SHIFT                (9U)                                                /*!< PWMA_SM3INTEN.CB1IE Position            */
#define PWMA_SM3INTEN_CB1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3INTEN_CB1IE_SHIFT))&PWMA_SM3INTEN_CB1IE_MASK) /*!< PWMA_SM3INTEN.CB1IE Field               */
#define PWMA_SM3INTEN_CA0IE_MASK                 (0x400U)                                            /*!< PWMA_SM3INTEN.CA0IE Mask                */
#define PWMA_SM3INTEN_CA0IE_SHIFT                (10U)                                               /*!< PWMA_SM3INTEN.CA0IE Position            */
#define PWMA_SM3INTEN_CA0IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3INTEN_CA0IE_SHIFT))&PWMA_SM3INTEN_CA0IE_MASK) /*!< PWMA_SM3INTEN.CA0IE Field               */
#define PWMA_SM3INTEN_CA1IE_MASK                 (0x800U)                                            /*!< PWMA_SM3INTEN.CA1IE Mask                */
#define PWMA_SM3INTEN_CA1IE_SHIFT                (11U)                                               /*!< PWMA_SM3INTEN.CA1IE Position            */
#define PWMA_SM3INTEN_CA1IE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3INTEN_CA1IE_SHIFT))&PWMA_SM3INTEN_CA1IE_MASK) /*!< PWMA_SM3INTEN.CA1IE Field               */
#define PWMA_SM3INTEN_RIE_MASK                   (0x1000U)                                           /*!< PWMA_SM3INTEN.RIE Mask                  */
#define PWMA_SM3INTEN_RIE_SHIFT                  (12U)                                               /*!< PWMA_SM3INTEN.RIE Position              */
#define PWMA_SM3INTEN_RIE(x)                     (((uint16_t)(((uint16_t)(x))<<PWMA_SM3INTEN_RIE_SHIFT))&PWMA_SM3INTEN_RIE_MASK) /*!< PWMA_SM3INTEN.RIE Field                 */
#define PWMA_SM3INTEN_REIE_MASK                  (0x2000U)                                           /*!< PWMA_SM3INTEN.REIE Mask                 */
#define PWMA_SM3INTEN_REIE_SHIFT                 (13U)                                               /*!< PWMA_SM3INTEN.REIE Position             */
#define PWMA_SM3INTEN_REIE(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM3INTEN_REIE_SHIFT))&PWMA_SM3INTEN_REIE_MASK) /*!< PWMA_SM3INTEN.REIE Field                */

/*! @name SM3DMAEN - DMA Enable Register */
#define PWMA_SM3DMAEN_CX0DE_MASK                 (0x1U)                                              /*!< PWMA_SM3DMAEN.CX0DE Mask                */
#define PWMA_SM3DMAEN_CX0DE_SHIFT                (0U)                                                /*!< PWMA_SM3DMAEN.CX0DE Position            */
#define PWMA_SM3DMAEN_CX0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DMAEN_CX0DE_SHIFT))&PWMA_SM3DMAEN_CX0DE_MASK) /*!< PWMA_SM3DMAEN.CX0DE Field               */
#define PWMA_SM3DMAEN_CX1DE_MASK                 (0x2U)                                              /*!< PWMA_SM3DMAEN.CX1DE Mask                */
#define PWMA_SM3DMAEN_CX1DE_SHIFT                (1U)                                                /*!< PWMA_SM3DMAEN.CX1DE Position            */
#define PWMA_SM3DMAEN_CX1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DMAEN_CX1DE_SHIFT))&PWMA_SM3DMAEN_CX1DE_MASK) /*!< PWMA_SM3DMAEN.CX1DE Field               */
#define PWMA_SM3DMAEN_CB0DE_MASK                 (0x4U)                                              /*!< PWMA_SM3DMAEN.CB0DE Mask                */
#define PWMA_SM3DMAEN_CB0DE_SHIFT                (2U)                                                /*!< PWMA_SM3DMAEN.CB0DE Position            */
#define PWMA_SM3DMAEN_CB0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DMAEN_CB0DE_SHIFT))&PWMA_SM3DMAEN_CB0DE_MASK) /*!< PWMA_SM3DMAEN.CB0DE Field               */
#define PWMA_SM3DMAEN_CB1DE_MASK                 (0x8U)                                              /*!< PWMA_SM3DMAEN.CB1DE Mask                */
#define PWMA_SM3DMAEN_CB1DE_SHIFT                (3U)                                                /*!< PWMA_SM3DMAEN.CB1DE Position            */
#define PWMA_SM3DMAEN_CB1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DMAEN_CB1DE_SHIFT))&PWMA_SM3DMAEN_CB1DE_MASK) /*!< PWMA_SM3DMAEN.CB1DE Field               */
#define PWMA_SM3DMAEN_CA0DE_MASK                 (0x10U)                                             /*!< PWMA_SM3DMAEN.CA0DE Mask                */
#define PWMA_SM3DMAEN_CA0DE_SHIFT                (4U)                                                /*!< PWMA_SM3DMAEN.CA0DE Position            */
#define PWMA_SM3DMAEN_CA0DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DMAEN_CA0DE_SHIFT))&PWMA_SM3DMAEN_CA0DE_MASK) /*!< PWMA_SM3DMAEN.CA0DE Field               */
#define PWMA_SM3DMAEN_CA1DE_MASK                 (0x20U)                                             /*!< PWMA_SM3DMAEN.CA1DE Mask                */
#define PWMA_SM3DMAEN_CA1DE_SHIFT                (5U)                                                /*!< PWMA_SM3DMAEN.CA1DE Position            */
#define PWMA_SM3DMAEN_CA1DE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DMAEN_CA1DE_SHIFT))&PWMA_SM3DMAEN_CA1DE_MASK) /*!< PWMA_SM3DMAEN.CA1DE Field               */
#define PWMA_SM3DMAEN_CAPTDE_MASK                (0xC0U)                                             /*!< PWMA_SM3DMAEN.CAPTDE Mask               */
#define PWMA_SM3DMAEN_CAPTDE_SHIFT               (6U)                                                /*!< PWMA_SM3DMAEN.CAPTDE Position           */
#define PWMA_SM3DMAEN_CAPTDE(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DMAEN_CAPTDE_SHIFT))&PWMA_SM3DMAEN_CAPTDE_MASK) /*!< PWMA_SM3DMAEN.CAPTDE Field              */
#define PWMA_SM3DMAEN_FAND_MASK                  (0x100U)                                            /*!< PWMA_SM3DMAEN.FAND Mask                 */
#define PWMA_SM3DMAEN_FAND_SHIFT                 (8U)                                                /*!< PWMA_SM3DMAEN.FAND Position             */
#define PWMA_SM3DMAEN_FAND(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DMAEN_FAND_SHIFT))&PWMA_SM3DMAEN_FAND_MASK) /*!< PWMA_SM3DMAEN.FAND Field                */
#define PWMA_SM3DMAEN_VALDE_MASK                 (0x200U)                                            /*!< PWMA_SM3DMAEN.VALDE Mask                */
#define PWMA_SM3DMAEN_VALDE_SHIFT                (9U)                                                /*!< PWMA_SM3DMAEN.VALDE Position            */
#define PWMA_SM3DMAEN_VALDE(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DMAEN_VALDE_SHIFT))&PWMA_SM3DMAEN_VALDE_MASK) /*!< PWMA_SM3DMAEN.VALDE Field               */

/*! @name SM3TCTRL - Output Trigger Control Register */
#define PWMA_SM3TCTRL_OUT_TRIG_EN_MASK           (0x3FU)                                             /*!< PWMA_SM3TCTRL.OUT_TRIG_EN Mask          */
#define PWMA_SM3TCTRL_OUT_TRIG_EN_SHIFT          (0U)                                                /*!< PWMA_SM3TCTRL.OUT_TRIG_EN Position      */
#define PWMA_SM3TCTRL_OUT_TRIG_EN(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3TCTRL_OUT_TRIG_EN_SHIFT))&PWMA_SM3TCTRL_OUT_TRIG_EN_MASK) /*!< PWMA_SM3TCTRL.OUT_TRIG_EN Field         */
#define PWMA_SM3TCTRL_PWBOT1_MASK                (0x4000U)                                           /*!< PWMA_SM3TCTRL.PWBOT1 Mask               */
#define PWMA_SM3TCTRL_PWBOT1_SHIFT               (14U)                                               /*!< PWMA_SM3TCTRL.PWBOT1 Position           */
#define PWMA_SM3TCTRL_PWBOT1(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM3TCTRL_PWBOT1_SHIFT))&PWMA_SM3TCTRL_PWBOT1_MASK) /*!< PWMA_SM3TCTRL.PWBOT1 Field              */
#define PWMA_SM3TCTRL_PWAOT0_MASK                (0x8000U)                                           /*!< PWMA_SM3TCTRL.PWAOT0 Mask               */
#define PWMA_SM3TCTRL_PWAOT0_SHIFT               (15U)                                               /*!< PWMA_SM3TCTRL.PWAOT0 Position           */
#define PWMA_SM3TCTRL_PWAOT0(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM3TCTRL_PWAOT0_SHIFT))&PWMA_SM3TCTRL_PWAOT0_MASK) /*!< PWMA_SM3TCTRL.PWAOT0 Field              */

/*! @name SM3DISMAP0 - Fault Disable Mapping Register 0 */
#define PWMA_SM3DISMAP0_DIS0A_MASK               (0xFU)                                              /*!< PWMA_SM3DISMAP0.DIS0A Mask              */
#define PWMA_SM3DISMAP0_DIS0A_SHIFT              (0U)                                                /*!< PWMA_SM3DISMAP0.DIS0A Position          */
#define PWMA_SM3DISMAP0_DIS0A(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DISMAP0_DIS0A_SHIFT))&PWMA_SM3DISMAP0_DIS0A_MASK) /*!< PWMA_SM3DISMAP0.DIS0A Field             */
#define PWMA_SM3DISMAP0_DIS0B_MASK               (0xF0U)                                             /*!< PWMA_SM3DISMAP0.DIS0B Mask              */
#define PWMA_SM3DISMAP0_DIS0B_SHIFT              (4U)                                                /*!< PWMA_SM3DISMAP0.DIS0B Position          */
#define PWMA_SM3DISMAP0_DIS0B(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DISMAP0_DIS0B_SHIFT))&PWMA_SM3DISMAP0_DIS0B_MASK) /*!< PWMA_SM3DISMAP0.DIS0B Field             */
#define PWMA_SM3DISMAP0_DIS0X_MASK               (0xF00U)                                            /*!< PWMA_SM3DISMAP0.DIS0X Mask              */
#define PWMA_SM3DISMAP0_DIS0X_SHIFT              (8U)                                                /*!< PWMA_SM3DISMAP0.DIS0X Position          */
#define PWMA_SM3DISMAP0_DIS0X(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DISMAP0_DIS0X_SHIFT))&PWMA_SM3DISMAP0_DIS0X_MASK) /*!< PWMA_SM3DISMAP0.DIS0X Field             */

/*! @name SM3DTCNT - Deadtime Count Register %s */
#define PWMA_SM3DTCNT_DTCNT0_MASK                (0x7FFU)                                            /*!< PWMA_SM3DTCNT.DTCNT0 Mask               */
#define PWMA_SM3DTCNT_DTCNT0_SHIFT               (0U)                                                /*!< PWMA_SM3DTCNT.DTCNT0 Position           */
#define PWMA_SM3DTCNT_DTCNT0(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SM3DTCNT_DTCNT0_SHIFT))&PWMA_SM3DTCNT_DTCNT0_MASK) /*!< PWMA_SM3DTCNT.DTCNT0 Field              */

/*! @name SM3CAPTCTRLA - Capture Control A Register */
#define PWMA_SM3CAPTCTRLA_ARMA_MASK              (0x1U)                                              /*!< PWMA_SM3CAPTCTRLA.ARMA Mask             */
#define PWMA_SM3CAPTCTRLA_ARMA_SHIFT             (0U)                                                /*!< PWMA_SM3CAPTCTRLA.ARMA Position         */
#define PWMA_SM3CAPTCTRLA_ARMA(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLA_ARMA_SHIFT))&PWMA_SM3CAPTCTRLA_ARMA_MASK) /*!< PWMA_SM3CAPTCTRLA.ARMA Field            */
#define PWMA_SM3CAPTCTRLA_ONESHOTA_MASK          (0x2U)                                              /*!< PWMA_SM3CAPTCTRLA.ONESHOTA Mask         */
#define PWMA_SM3CAPTCTRLA_ONESHOTA_SHIFT         (1U)                                                /*!< PWMA_SM3CAPTCTRLA.ONESHOTA Position     */
#define PWMA_SM3CAPTCTRLA_ONESHOTA(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLA_ONESHOTA_SHIFT))&PWMA_SM3CAPTCTRLA_ONESHOTA_MASK) /*!< PWMA_SM3CAPTCTRLA.ONESHOTA Field        */
#define PWMA_SM3CAPTCTRLA_EDGA0_MASK             (0xCU)                                              /*!< PWMA_SM3CAPTCTRLA.EDGA0 Mask            */
#define PWMA_SM3CAPTCTRLA_EDGA0_SHIFT            (2U)                                                /*!< PWMA_SM3CAPTCTRLA.EDGA0 Position        */
#define PWMA_SM3CAPTCTRLA_EDGA0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLA_EDGA0_SHIFT))&PWMA_SM3CAPTCTRLA_EDGA0_MASK) /*!< PWMA_SM3CAPTCTRLA.EDGA0 Field           */
#define PWMA_SM3CAPTCTRLA_EDGA1_MASK             (0x30U)                                             /*!< PWMA_SM3CAPTCTRLA.EDGA1 Mask            */
#define PWMA_SM3CAPTCTRLA_EDGA1_SHIFT            (4U)                                                /*!< PWMA_SM3CAPTCTRLA.EDGA1 Position        */
#define PWMA_SM3CAPTCTRLA_EDGA1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLA_EDGA1_SHIFT))&PWMA_SM3CAPTCTRLA_EDGA1_MASK) /*!< PWMA_SM3CAPTCTRLA.EDGA1 Field           */
#define PWMA_SM3CAPTCTRLA_INP_SELA_MASK          (0x40U)                                             /*!< PWMA_SM3CAPTCTRLA.INP_SELA Mask         */
#define PWMA_SM3CAPTCTRLA_INP_SELA_SHIFT         (6U)                                                /*!< PWMA_SM3CAPTCTRLA.INP_SELA Position     */
#define PWMA_SM3CAPTCTRLA_INP_SELA(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLA_INP_SELA_SHIFT))&PWMA_SM3CAPTCTRLA_INP_SELA_MASK) /*!< PWMA_SM3CAPTCTRLA.INP_SELA Field        */
#define PWMA_SM3CAPTCTRLA_EDGCNTA_EN_MASK        (0x80U)                                             /*!< PWMA_SM3CAPTCTRLA.EDGCNTA_EN Mask       */
#define PWMA_SM3CAPTCTRLA_EDGCNTA_EN_SHIFT       (7U)                                                /*!< PWMA_SM3CAPTCTRLA.EDGCNTA_EN Position   */
#define PWMA_SM3CAPTCTRLA_EDGCNTA_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLA_EDGCNTA_EN_SHIFT))&PWMA_SM3CAPTCTRLA_EDGCNTA_EN_MASK) /*!< PWMA_SM3CAPTCTRLA.EDGCNTA_EN Field      */
#define PWMA_SM3CAPTCTRLA_CFAWM_MASK             (0x300U)                                            /*!< PWMA_SM3CAPTCTRLA.CFAWM Mask            */
#define PWMA_SM3CAPTCTRLA_CFAWM_SHIFT            (8U)                                                /*!< PWMA_SM3CAPTCTRLA.CFAWM Position        */
#define PWMA_SM3CAPTCTRLA_CFAWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLA_CFAWM_SHIFT))&PWMA_SM3CAPTCTRLA_CFAWM_MASK) /*!< PWMA_SM3CAPTCTRLA.CFAWM Field           */
#define PWMA_SM3CAPTCTRLA_CA0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM3CAPTCTRLA.CA0CNT Mask           */
#define PWMA_SM3CAPTCTRLA_CA0CNT_SHIFT           (10U)                                               /*!< PWMA_SM3CAPTCTRLA.CA0CNT Position       */
#define PWMA_SM3CAPTCTRLA_CA0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLA_CA0CNT_SHIFT))&PWMA_SM3CAPTCTRLA_CA0CNT_MASK) /*!< PWMA_SM3CAPTCTRLA.CA0CNT Field          */
#define PWMA_SM3CAPTCTRLA_CA1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM3CAPTCTRLA.CA1CNT Mask           */
#define PWMA_SM3CAPTCTRLA_CA1CNT_SHIFT           (13U)                                               /*!< PWMA_SM3CAPTCTRLA.CA1CNT Position       */
#define PWMA_SM3CAPTCTRLA_CA1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLA_CA1CNT_SHIFT))&PWMA_SM3CAPTCTRLA_CA1CNT_MASK) /*!< PWMA_SM3CAPTCTRLA.CA1CNT Field          */

/*! @name SM3CAPTCOMPA - Capture Compare A Register */
#define PWMA_SM3CAPTCOMPA_EDGCMPA_MASK           (0xFFU)                                             /*!< PWMA_SM3CAPTCOMPA.EDGCMPA Mask          */
#define PWMA_SM3CAPTCOMPA_EDGCMPA_SHIFT          (0U)                                                /*!< PWMA_SM3CAPTCOMPA.EDGCMPA Position      */
#define PWMA_SM3CAPTCOMPA_EDGCMPA(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCOMPA_EDGCMPA_SHIFT))&PWMA_SM3CAPTCOMPA_EDGCMPA_MASK) /*!< PWMA_SM3CAPTCOMPA.EDGCMPA Field         */
#define PWMA_SM3CAPTCOMPA_EDGCNTA_MASK           (0xFF00U)                                           /*!< PWMA_SM3CAPTCOMPA.EDGCNTA Mask          */
#define PWMA_SM3CAPTCOMPA_EDGCNTA_SHIFT          (8U)                                                /*!< PWMA_SM3CAPTCOMPA.EDGCNTA Position      */
#define PWMA_SM3CAPTCOMPA_EDGCNTA(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCOMPA_EDGCNTA_SHIFT))&PWMA_SM3CAPTCOMPA_EDGCNTA_MASK) /*!< PWMA_SM3CAPTCOMPA.EDGCNTA Field         */

/*! @name SM3CAPTCTRLB - Capture Control B Register */
#define PWMA_SM3CAPTCTRLB_ARMB_MASK              (0x1U)                                              /*!< PWMA_SM3CAPTCTRLB.ARMB Mask             */
#define PWMA_SM3CAPTCTRLB_ARMB_SHIFT             (0U)                                                /*!< PWMA_SM3CAPTCTRLB.ARMB Position         */
#define PWMA_SM3CAPTCTRLB_ARMB(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLB_ARMB_SHIFT))&PWMA_SM3CAPTCTRLB_ARMB_MASK) /*!< PWMA_SM3CAPTCTRLB.ARMB Field            */
#define PWMA_SM3CAPTCTRLB_ONESHOTB_MASK          (0x2U)                                              /*!< PWMA_SM3CAPTCTRLB.ONESHOTB Mask         */
#define PWMA_SM3CAPTCTRLB_ONESHOTB_SHIFT         (1U)                                                /*!< PWMA_SM3CAPTCTRLB.ONESHOTB Position     */
#define PWMA_SM3CAPTCTRLB_ONESHOTB(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLB_ONESHOTB_SHIFT))&PWMA_SM3CAPTCTRLB_ONESHOTB_MASK) /*!< PWMA_SM3CAPTCTRLB.ONESHOTB Field        */
#define PWMA_SM3CAPTCTRLB_EDGB0_MASK             (0xCU)                                              /*!< PWMA_SM3CAPTCTRLB.EDGB0 Mask            */
#define PWMA_SM3CAPTCTRLB_EDGB0_SHIFT            (2U)                                                /*!< PWMA_SM3CAPTCTRLB.EDGB0 Position        */
#define PWMA_SM3CAPTCTRLB_EDGB0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLB_EDGB0_SHIFT))&PWMA_SM3CAPTCTRLB_EDGB0_MASK) /*!< PWMA_SM3CAPTCTRLB.EDGB0 Field           */
#define PWMA_SM3CAPTCTRLB_EDGB1_MASK             (0x30U)                                             /*!< PWMA_SM3CAPTCTRLB.EDGB1 Mask            */
#define PWMA_SM3CAPTCTRLB_EDGB1_SHIFT            (4U)                                                /*!< PWMA_SM3CAPTCTRLB.EDGB1 Position        */
#define PWMA_SM3CAPTCTRLB_EDGB1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLB_EDGB1_SHIFT))&PWMA_SM3CAPTCTRLB_EDGB1_MASK) /*!< PWMA_SM3CAPTCTRLB.EDGB1 Field           */
#define PWMA_SM3CAPTCTRLB_INP_SELB_MASK          (0x40U)                                             /*!< PWMA_SM3CAPTCTRLB.INP_SELB Mask         */
#define PWMA_SM3CAPTCTRLB_INP_SELB_SHIFT         (6U)                                                /*!< PWMA_SM3CAPTCTRLB.INP_SELB Position     */
#define PWMA_SM3CAPTCTRLB_INP_SELB(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLB_INP_SELB_SHIFT))&PWMA_SM3CAPTCTRLB_INP_SELB_MASK) /*!< PWMA_SM3CAPTCTRLB.INP_SELB Field        */
#define PWMA_SM3CAPTCTRLB_EDGCNTB_EN_MASK        (0x80U)                                             /*!< PWMA_SM3CAPTCTRLB.EDGCNTB_EN Mask       */
#define PWMA_SM3CAPTCTRLB_EDGCNTB_EN_SHIFT       (7U)                                                /*!< PWMA_SM3CAPTCTRLB.EDGCNTB_EN Position   */
#define PWMA_SM3CAPTCTRLB_EDGCNTB_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLB_EDGCNTB_EN_SHIFT))&PWMA_SM3CAPTCTRLB_EDGCNTB_EN_MASK) /*!< PWMA_SM3CAPTCTRLB.EDGCNTB_EN Field      */
#define PWMA_SM3CAPTCTRLB_CFBWM_MASK             (0x300U)                                            /*!< PWMA_SM3CAPTCTRLB.CFBWM Mask            */
#define PWMA_SM3CAPTCTRLB_CFBWM_SHIFT            (8U)                                                /*!< PWMA_SM3CAPTCTRLB.CFBWM Position        */
#define PWMA_SM3CAPTCTRLB_CFBWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLB_CFBWM_SHIFT))&PWMA_SM3CAPTCTRLB_CFBWM_MASK) /*!< PWMA_SM3CAPTCTRLB.CFBWM Field           */
#define PWMA_SM3CAPTCTRLB_CB0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM3CAPTCTRLB.CB0CNT Mask           */
#define PWMA_SM3CAPTCTRLB_CB0CNT_SHIFT           (10U)                                               /*!< PWMA_SM3CAPTCTRLB.CB0CNT Position       */
#define PWMA_SM3CAPTCTRLB_CB0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLB_CB0CNT_SHIFT))&PWMA_SM3CAPTCTRLB_CB0CNT_MASK) /*!< PWMA_SM3CAPTCTRLB.CB0CNT Field          */
#define PWMA_SM3CAPTCTRLB_CB1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM3CAPTCTRLB.CB1CNT Mask           */
#define PWMA_SM3CAPTCTRLB_CB1CNT_SHIFT           (13U)                                               /*!< PWMA_SM3CAPTCTRLB.CB1CNT Position       */
#define PWMA_SM3CAPTCTRLB_CB1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLB_CB1CNT_SHIFT))&PWMA_SM3CAPTCTRLB_CB1CNT_MASK) /*!< PWMA_SM3CAPTCTRLB.CB1CNT Field          */

/*! @name SM3CAPTCOMPB - Capture Compare B Register */
#define PWMA_SM3CAPTCOMPB_EDGCMPB_MASK           (0xFFU)                                             /*!< PWMA_SM3CAPTCOMPB.EDGCMPB Mask          */
#define PWMA_SM3CAPTCOMPB_EDGCMPB_SHIFT          (0U)                                                /*!< PWMA_SM3CAPTCOMPB.EDGCMPB Position      */
#define PWMA_SM3CAPTCOMPB_EDGCMPB(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCOMPB_EDGCMPB_SHIFT))&PWMA_SM3CAPTCOMPB_EDGCMPB_MASK) /*!< PWMA_SM3CAPTCOMPB.EDGCMPB Field         */
#define PWMA_SM3CAPTCOMPB_EDGCNTB_MASK           (0xFF00U)                                           /*!< PWMA_SM3CAPTCOMPB.EDGCNTB Mask          */
#define PWMA_SM3CAPTCOMPB_EDGCNTB_SHIFT          (8U)                                                /*!< PWMA_SM3CAPTCOMPB.EDGCNTB Position      */
#define PWMA_SM3CAPTCOMPB_EDGCNTB(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCOMPB_EDGCNTB_SHIFT))&PWMA_SM3CAPTCOMPB_EDGCNTB_MASK) /*!< PWMA_SM3CAPTCOMPB.EDGCNTB Field         */

/*! @name SM3CAPTCTRLX - Capture Control X Register */
#define PWMA_SM3CAPTCTRLX_ARMX_MASK              (0x1U)                                              /*!< PWMA_SM3CAPTCTRLX.ARMX Mask             */
#define PWMA_SM3CAPTCTRLX_ARMX_SHIFT             (0U)                                                /*!< PWMA_SM3CAPTCTRLX.ARMX Position         */
#define PWMA_SM3CAPTCTRLX_ARMX(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLX_ARMX_SHIFT))&PWMA_SM3CAPTCTRLX_ARMX_MASK) /*!< PWMA_SM3CAPTCTRLX.ARMX Field            */
#define PWMA_SM3CAPTCTRLX_ONESHOTX_MASK          (0x2U)                                              /*!< PWMA_SM3CAPTCTRLX.ONESHOTX Mask         */
#define PWMA_SM3CAPTCTRLX_ONESHOTX_SHIFT         (1U)                                                /*!< PWMA_SM3CAPTCTRLX.ONESHOTX Position     */
#define PWMA_SM3CAPTCTRLX_ONESHOTX(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLX_ONESHOTX_SHIFT))&PWMA_SM3CAPTCTRLX_ONESHOTX_MASK) /*!< PWMA_SM3CAPTCTRLX.ONESHOTX Field        */
#define PWMA_SM3CAPTCTRLX_EDGX0_MASK             (0xCU)                                              /*!< PWMA_SM3CAPTCTRLX.EDGX0 Mask            */
#define PWMA_SM3CAPTCTRLX_EDGX0_SHIFT            (2U)                                                /*!< PWMA_SM3CAPTCTRLX.EDGX0 Position        */
#define PWMA_SM3CAPTCTRLX_EDGX0(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLX_EDGX0_SHIFT))&PWMA_SM3CAPTCTRLX_EDGX0_MASK) /*!< PWMA_SM3CAPTCTRLX.EDGX0 Field           */
#define PWMA_SM3CAPTCTRLX_EDGX1_MASK             (0x30U)                                             /*!< PWMA_SM3CAPTCTRLX.EDGX1 Mask            */
#define PWMA_SM3CAPTCTRLX_EDGX1_SHIFT            (4U)                                                /*!< PWMA_SM3CAPTCTRLX.EDGX1 Position        */
#define PWMA_SM3CAPTCTRLX_EDGX1(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLX_EDGX1_SHIFT))&PWMA_SM3CAPTCTRLX_EDGX1_MASK) /*!< PWMA_SM3CAPTCTRLX.EDGX1 Field           */
#define PWMA_SM3CAPTCTRLX_INP_SELX_MASK          (0x40U)                                             /*!< PWMA_SM3CAPTCTRLX.INP_SELX Mask         */
#define PWMA_SM3CAPTCTRLX_INP_SELX_SHIFT         (6U)                                                /*!< PWMA_SM3CAPTCTRLX.INP_SELX Position     */
#define PWMA_SM3CAPTCTRLX_INP_SELX(x)            (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLX_INP_SELX_SHIFT))&PWMA_SM3CAPTCTRLX_INP_SELX_MASK) /*!< PWMA_SM3CAPTCTRLX.INP_SELX Field        */
#define PWMA_SM3CAPTCTRLX_EDGCNTX_EN_MASK        (0x80U)                                             /*!< PWMA_SM3CAPTCTRLX.EDGCNTX_EN Mask       */
#define PWMA_SM3CAPTCTRLX_EDGCNTX_EN_SHIFT       (7U)                                                /*!< PWMA_SM3CAPTCTRLX.EDGCNTX_EN Position   */
#define PWMA_SM3CAPTCTRLX_EDGCNTX_EN(x)          (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLX_EDGCNTX_EN_SHIFT))&PWMA_SM3CAPTCTRLX_EDGCNTX_EN_MASK) /*!< PWMA_SM3CAPTCTRLX.EDGCNTX_EN Field      */
#define PWMA_SM3CAPTCTRLX_CFXWM_MASK             (0x300U)                                            /*!< PWMA_SM3CAPTCTRLX.CFXWM Mask            */
#define PWMA_SM3CAPTCTRLX_CFXWM_SHIFT            (8U)                                                /*!< PWMA_SM3CAPTCTRLX.CFXWM Position        */
#define PWMA_SM3CAPTCTRLX_CFXWM(x)               (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLX_CFXWM_SHIFT))&PWMA_SM3CAPTCTRLX_CFXWM_MASK) /*!< PWMA_SM3CAPTCTRLX.CFXWM Field           */
#define PWMA_SM3CAPTCTRLX_CX0CNT_MASK            (0x1C00U)                                           /*!< PWMA_SM3CAPTCTRLX.CX0CNT Mask           */
#define PWMA_SM3CAPTCTRLX_CX0CNT_SHIFT           (10U)                                               /*!< PWMA_SM3CAPTCTRLX.CX0CNT Position       */
#define PWMA_SM3CAPTCTRLX_CX0CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLX_CX0CNT_SHIFT))&PWMA_SM3CAPTCTRLX_CX0CNT_MASK) /*!< PWMA_SM3CAPTCTRLX.CX0CNT Field          */
#define PWMA_SM3CAPTCTRLX_CX1CNT_MASK            (0xE000U)                                           /*!< PWMA_SM3CAPTCTRLX.CX1CNT Mask           */
#define PWMA_SM3CAPTCTRLX_CX1CNT_SHIFT           (13U)                                               /*!< PWMA_SM3CAPTCTRLX.CX1CNT Position       */
#define PWMA_SM3CAPTCTRLX_CX1CNT(x)              (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCTRLX_CX1CNT_SHIFT))&PWMA_SM3CAPTCTRLX_CX1CNT_MASK) /*!< PWMA_SM3CAPTCTRLX.CX1CNT Field          */

/*! @name SM3CAPTCOMPX - Capture Compare X Register */
#define PWMA_SM3CAPTCOMPX_EDGCMPX_MASK           (0xFFU)                                             /*!< PWMA_SM3CAPTCOMPX.EDGCMPX Mask          */
#define PWMA_SM3CAPTCOMPX_EDGCMPX_SHIFT          (0U)                                                /*!< PWMA_SM3CAPTCOMPX.EDGCMPX Position      */
#define PWMA_SM3CAPTCOMPX_EDGCMPX(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCOMPX_EDGCMPX_SHIFT))&PWMA_SM3CAPTCOMPX_EDGCMPX_MASK) /*!< PWMA_SM3CAPTCOMPX.EDGCMPX Field         */
#define PWMA_SM3CAPTCOMPX_EDGCNTX_MASK           (0xFF00U)                                           /*!< PWMA_SM3CAPTCOMPX.EDGCNTX Mask          */
#define PWMA_SM3CAPTCOMPX_EDGCNTX_SHIFT          (8U)                                                /*!< PWMA_SM3CAPTCOMPX.EDGCNTX Position      */
#define PWMA_SM3CAPTCOMPX_EDGCNTX(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CAPTCOMPX_EDGCNTX_SHIFT))&PWMA_SM3CAPTCOMPX_EDGCNTX_MASK) /*!< PWMA_SM3CAPTCOMPX.EDGCNTX Field         */

/*! @name SM3CVAL0 - Capture Value 0 Register */
#define PWMA_SM3CVAL0_CAPTVAL0_MASK              (0xFFFFU)                                           /*!< PWMA_SM3CVAL0.CAPTVAL0 Mask             */
#define PWMA_SM3CVAL0_CAPTVAL0_SHIFT             (0U)                                                /*!< PWMA_SM3CVAL0.CAPTVAL0 Position         */
#define PWMA_SM3CVAL0_CAPTVAL0(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL0_CAPTVAL0_SHIFT))&PWMA_SM3CVAL0_CAPTVAL0_MASK) /*!< PWMA_SM3CVAL0.CAPTVAL0 Field            */

/*! @name SM3CVAL0CYC - Capture Value 0 Cycle Register */
#define PWMA_SM3CVAL0CYC_CVAL0CYC_MASK           (0xFU)                                              /*!< PWMA_SM3CVAL0CYC.CVAL0CYC Mask          */
#define PWMA_SM3CVAL0CYC_CVAL0CYC_SHIFT          (0U)                                                /*!< PWMA_SM3CVAL0CYC.CVAL0CYC Position      */
#define PWMA_SM3CVAL0CYC_CVAL0CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL0CYC_CVAL0CYC_SHIFT))&PWMA_SM3CVAL0CYC_CVAL0CYC_MASK) /*!< PWMA_SM3CVAL0CYC.CVAL0CYC Field         */

/*! @name SM3CVAL1 - Capture Value 1 Register */
#define PWMA_SM3CVAL1_CAPTVAL1_MASK              (0xFFFFU)                                           /*!< PWMA_SM3CVAL1.CAPTVAL1 Mask             */
#define PWMA_SM3CVAL1_CAPTVAL1_SHIFT             (0U)                                                /*!< PWMA_SM3CVAL1.CAPTVAL1 Position         */
#define PWMA_SM3CVAL1_CAPTVAL1(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL1_CAPTVAL1_SHIFT))&PWMA_SM3CVAL1_CAPTVAL1_MASK) /*!< PWMA_SM3CVAL1.CAPTVAL1 Field            */

/*! @name SM3CVAL1CYC - Capture Value 1 Cycle Register */
#define PWMA_SM3CVAL1CYC_CVAL1CYC_MASK           (0xFU)                                              /*!< PWMA_SM3CVAL1CYC.CVAL1CYC Mask          */
#define PWMA_SM3CVAL1CYC_CVAL1CYC_SHIFT          (0U)                                                /*!< PWMA_SM3CVAL1CYC.CVAL1CYC Position      */
#define PWMA_SM3CVAL1CYC_CVAL1CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL1CYC_CVAL1CYC_SHIFT))&PWMA_SM3CVAL1CYC_CVAL1CYC_MASK) /*!< PWMA_SM3CVAL1CYC.CVAL1CYC Field         */

/*! @name SM3CVAL2 - Capture Value 2 Register */
#define PWMA_SM3CVAL2_CAPTVAL2_MASK              (0xFFFFU)                                           /*!< PWMA_SM3CVAL2.CAPTVAL2 Mask             */
#define PWMA_SM3CVAL2_CAPTVAL2_SHIFT             (0U)                                                /*!< PWMA_SM3CVAL2.CAPTVAL2 Position         */
#define PWMA_SM3CVAL2_CAPTVAL2(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL2_CAPTVAL2_SHIFT))&PWMA_SM3CVAL2_CAPTVAL2_MASK) /*!< PWMA_SM3CVAL2.CAPTVAL2 Field            */

/*! @name SM3CVAL2CYC - Capture Value 2 Cycle Register */
#define PWMA_SM3CVAL2CYC_CVAL2CYC_MASK           (0xFU)                                              /*!< PWMA_SM3CVAL2CYC.CVAL2CYC Mask          */
#define PWMA_SM3CVAL2CYC_CVAL2CYC_SHIFT          (0U)                                                /*!< PWMA_SM3CVAL2CYC.CVAL2CYC Position      */
#define PWMA_SM3CVAL2CYC_CVAL2CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL2CYC_CVAL2CYC_SHIFT))&PWMA_SM3CVAL2CYC_CVAL2CYC_MASK) /*!< PWMA_SM3CVAL2CYC.CVAL2CYC Field         */

/*! @name SM3CVAL3 - Capture Value 3 Register */
#define PWMA_SM3CVAL3_CAPTVAL3_MASK              (0xFFFFU)                                           /*!< PWMA_SM3CVAL3.CAPTVAL3 Mask             */
#define PWMA_SM3CVAL3_CAPTVAL3_SHIFT             (0U)                                                /*!< PWMA_SM3CVAL3.CAPTVAL3 Position         */
#define PWMA_SM3CVAL3_CAPTVAL3(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL3_CAPTVAL3_SHIFT))&PWMA_SM3CVAL3_CAPTVAL3_MASK) /*!< PWMA_SM3CVAL3.CAPTVAL3 Field            */

/*! @name SM3CVAL3CYC - Capture Value 3 Cycle Register */
#define PWMA_SM3CVAL3CYC_CVAL3CYC_MASK           (0xFU)                                              /*!< PWMA_SM3CVAL3CYC.CVAL3CYC Mask          */
#define PWMA_SM3CVAL3CYC_CVAL3CYC_SHIFT          (0U)                                                /*!< PWMA_SM3CVAL3CYC.CVAL3CYC Position      */
#define PWMA_SM3CVAL3CYC_CVAL3CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL3CYC_CVAL3CYC_SHIFT))&PWMA_SM3CVAL3CYC_CVAL3CYC_MASK) /*!< PWMA_SM3CVAL3CYC.CVAL3CYC Field         */

/*! @name SM3CVAL4 - Capture Value 4 Register */
#define PWMA_SM3CVAL4_CAPTVAL4_MASK              (0xFFFFU)                                           /*!< PWMA_SM3CVAL4.CAPTVAL4 Mask             */
#define PWMA_SM3CVAL4_CAPTVAL4_SHIFT             (0U)                                                /*!< PWMA_SM3CVAL4.CAPTVAL4 Position         */
#define PWMA_SM3CVAL4_CAPTVAL4(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL4_CAPTVAL4_SHIFT))&PWMA_SM3CVAL4_CAPTVAL4_MASK) /*!< PWMA_SM3CVAL4.CAPTVAL4 Field            */

/*! @name SM3CVAL4CYC - Capture Value 4 Cycle Register */
#define PWMA_SM3CVAL4CYC_CVAL4CYC_MASK           (0xFU)                                              /*!< PWMA_SM3CVAL4CYC.CVAL4CYC Mask          */
#define PWMA_SM3CVAL4CYC_CVAL4CYC_SHIFT          (0U)                                                /*!< PWMA_SM3CVAL4CYC.CVAL4CYC Position      */
#define PWMA_SM3CVAL4CYC_CVAL4CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL4CYC_CVAL4CYC_SHIFT))&PWMA_SM3CVAL4CYC_CVAL4CYC_MASK) /*!< PWMA_SM3CVAL4CYC.CVAL4CYC Field         */

/*! @name SM3CVAL5 - Capture Value 5 Register */
#define PWMA_SM3CVAL5_CAPTVAL5_MASK              (0xFFFFU)                                           /*!< PWMA_SM3CVAL5.CAPTVAL5 Mask             */
#define PWMA_SM3CVAL5_CAPTVAL5_SHIFT             (0U)                                                /*!< PWMA_SM3CVAL5.CAPTVAL5 Position         */
#define PWMA_SM3CVAL5_CAPTVAL5(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL5_CAPTVAL5_SHIFT))&PWMA_SM3CVAL5_CAPTVAL5_MASK) /*!< PWMA_SM3CVAL5.CAPTVAL5 Field            */

/*! @name SM3CVAL5CYC - Capture Value 5 Cycle Register */
#define PWMA_SM3CVAL5CYC_CVAL5CYC_MASK           (0xFU)                                              /*!< PWMA_SM3CVAL5CYC.CVAL5CYC Mask          */
#define PWMA_SM3CVAL5CYC_CVAL5CYC_SHIFT          (0U)                                                /*!< PWMA_SM3CVAL5CYC.CVAL5CYC Position      */
#define PWMA_SM3CVAL5CYC_CVAL5CYC(x)             (((uint16_t)(((uint16_t)(x))<<PWMA_SM3CVAL5CYC_CVAL5CYC_SHIFT))&PWMA_SM3CVAL5CYC_CVAL5CYC_MASK) /*!< PWMA_SM3CVAL5CYC.CVAL5CYC Field         */

/*! @name OUTEN - Output Enable Register */
#define PWMA_OUTEN_PWMX_EN_MASK                  (0xFU)                                              /*!< PWMA_OUTEN.PWMX_EN Mask                 */
#define PWMA_OUTEN_PWMX_EN_SHIFT                 (0U)                                                /*!< PWMA_OUTEN.PWMX_EN Position             */
#define PWMA_OUTEN_PWMX_EN(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_OUTEN_PWMX_EN_SHIFT))&PWMA_OUTEN_PWMX_EN_MASK) /*!< PWMA_OUTEN.PWMX_EN Field                */
#define PWMA_OUTEN_PWMB_EN_MASK                  (0xF0U)                                             /*!< PWMA_OUTEN.PWMB_EN Mask                 */
#define PWMA_OUTEN_PWMB_EN_SHIFT                 (4U)                                                /*!< PWMA_OUTEN.PWMB_EN Position             */
#define PWMA_OUTEN_PWMB_EN(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_OUTEN_PWMB_EN_SHIFT))&PWMA_OUTEN_PWMB_EN_MASK) /*!< PWMA_OUTEN.PWMB_EN Field                */
#define PWMA_OUTEN_PWMA_EN_MASK                  (0xF00U)                                            /*!< PWMA_OUTEN.PWMA_EN Mask                 */
#define PWMA_OUTEN_PWMA_EN_SHIFT                 (8U)                                                /*!< PWMA_OUTEN.PWMA_EN Position             */
#define PWMA_OUTEN_PWMA_EN(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_OUTEN_PWMA_EN_SHIFT))&PWMA_OUTEN_PWMA_EN_MASK) /*!< PWMA_OUTEN.PWMA_EN Field                */

/*! @name MASK - Mask Register */
#define PWMA_MASK_MASKX_MASK                     (0xFU)                                              /*!< PWMA_MASK.MASKX Mask                    */
#define PWMA_MASK_MASKX_SHIFT                    (0U)                                                /*!< PWMA_MASK.MASKX Position                */
#define PWMA_MASK_MASKX(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_MASK_MASKX_SHIFT))&PWMA_MASK_MASKX_MASK) /*!< PWMA_MASK.MASKX Field                   */
#define PWMA_MASK_MASKB_MASK                     (0xF0U)                                             /*!< PWMA_MASK.MASKB Mask                    */
#define PWMA_MASK_MASKB_SHIFT                    (4U)                                                /*!< PWMA_MASK.MASKB Position                */
#define PWMA_MASK_MASKB(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_MASK_MASKB_SHIFT))&PWMA_MASK_MASKB_MASK) /*!< PWMA_MASK.MASKB Field                   */
#define PWMA_MASK_MASKA_MASK                     (0xF00U)                                            /*!< PWMA_MASK.MASKA Mask                    */
#define PWMA_MASK_MASKA_SHIFT                    (8U)                                                /*!< PWMA_MASK.MASKA Position                */
#define PWMA_MASK_MASKA(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_MASK_MASKA_SHIFT))&PWMA_MASK_MASKA_MASK) /*!< PWMA_MASK.MASKA Field                   */
#define PWMA_MASK_UPDATE_MASK_MASK               (0xF000U)                                           /*!< PWMA_MASK.UPDATE_MASK Mask              */
#define PWMA_MASK_UPDATE_MASK_SHIFT              (12U)                                               /*!< PWMA_MASK.UPDATE_MASK Position          */
#define PWMA_MASK_UPDATE_MASK(x)                 (((uint16_t)(((uint16_t)(x))<<PWMA_MASK_UPDATE_MASK_SHIFT))&PWMA_MASK_UPDATE_MASK_MASK) /*!< PWMA_MASK.UPDATE_MASK Field             */

/*! @name SWCOUT - Software Controlled Output Register */
#define PWMA_SWCOUT_SM0OUT45_MASK                (0x1U)                                              /*!< PWMA_SWCOUT.SM0OUT45 Mask               */
#define PWMA_SWCOUT_SM0OUT45_SHIFT               (0U)                                                /*!< PWMA_SWCOUT.SM0OUT45 Position           */
#define PWMA_SWCOUT_SM0OUT45(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SWCOUT_SM0OUT45_SHIFT))&PWMA_SWCOUT_SM0OUT45_MASK) /*!< PWMA_SWCOUT.SM0OUT45 Field              */
#define PWMA_SWCOUT_SM0OUT23_MASK                (0x2U)                                              /*!< PWMA_SWCOUT.SM0OUT23 Mask               */
#define PWMA_SWCOUT_SM0OUT23_SHIFT               (1U)                                                /*!< PWMA_SWCOUT.SM0OUT23 Position           */
#define PWMA_SWCOUT_SM0OUT23(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SWCOUT_SM0OUT23_SHIFT))&PWMA_SWCOUT_SM0OUT23_MASK) /*!< PWMA_SWCOUT.SM0OUT23 Field              */
#define PWMA_SWCOUT_SM1OUT45_MASK                (0x4U)                                              /*!< PWMA_SWCOUT.SM1OUT45 Mask               */
#define PWMA_SWCOUT_SM1OUT45_SHIFT               (2U)                                                /*!< PWMA_SWCOUT.SM1OUT45 Position           */
#define PWMA_SWCOUT_SM1OUT45(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SWCOUT_SM1OUT45_SHIFT))&PWMA_SWCOUT_SM1OUT45_MASK) /*!< PWMA_SWCOUT.SM1OUT45 Field              */
#define PWMA_SWCOUT_SM1OUT23_MASK                (0x8U)                                              /*!< PWMA_SWCOUT.SM1OUT23 Mask               */
#define PWMA_SWCOUT_SM1OUT23_SHIFT               (3U)                                                /*!< PWMA_SWCOUT.SM1OUT23 Position           */
#define PWMA_SWCOUT_SM1OUT23(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SWCOUT_SM1OUT23_SHIFT))&PWMA_SWCOUT_SM1OUT23_MASK) /*!< PWMA_SWCOUT.SM1OUT23 Field              */
#define PWMA_SWCOUT_SM2OUT45_MASK                (0x10U)                                             /*!< PWMA_SWCOUT.SM2OUT45 Mask               */
#define PWMA_SWCOUT_SM2OUT45_SHIFT               (4U)                                                /*!< PWMA_SWCOUT.SM2OUT45 Position           */
#define PWMA_SWCOUT_SM2OUT45(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SWCOUT_SM2OUT45_SHIFT))&PWMA_SWCOUT_SM2OUT45_MASK) /*!< PWMA_SWCOUT.SM2OUT45 Field              */
#define PWMA_SWCOUT_SM2OUT23_MASK                (0x20U)                                             /*!< PWMA_SWCOUT.SM2OUT23 Mask               */
#define PWMA_SWCOUT_SM2OUT23_SHIFT               (5U)                                                /*!< PWMA_SWCOUT.SM2OUT23 Position           */
#define PWMA_SWCOUT_SM2OUT23(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SWCOUT_SM2OUT23_SHIFT))&PWMA_SWCOUT_SM2OUT23_MASK) /*!< PWMA_SWCOUT.SM2OUT23 Field              */
#define PWMA_SWCOUT_SM3OUT45_MASK                (0x40U)                                             /*!< PWMA_SWCOUT.SM3OUT45 Mask               */
#define PWMA_SWCOUT_SM3OUT45_SHIFT               (6U)                                                /*!< PWMA_SWCOUT.SM3OUT45 Position           */
#define PWMA_SWCOUT_SM3OUT45(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SWCOUT_SM3OUT45_SHIFT))&PWMA_SWCOUT_SM3OUT45_MASK) /*!< PWMA_SWCOUT.SM3OUT45 Field              */
#define PWMA_SWCOUT_SM3OUT23_MASK                (0x80U)                                             /*!< PWMA_SWCOUT.SM3OUT23 Mask               */
#define PWMA_SWCOUT_SM3OUT23_SHIFT               (7U)                                                /*!< PWMA_SWCOUT.SM3OUT23 Position           */
#define PWMA_SWCOUT_SM3OUT23(x)                  (((uint16_t)(((uint16_t)(x))<<PWMA_SWCOUT_SM3OUT23_SHIFT))&PWMA_SWCOUT_SM3OUT23_MASK) /*!< PWMA_SWCOUT.SM3OUT23 Field              */

/*! @name DTSRCSEL - PWM Source Select Register */
#define PWMA_DTSRCSEL_SM0SEL45_MASK              (0x3U)                                              /*!< PWMA_DTSRCSEL.SM0SEL45 Mask             */
#define PWMA_DTSRCSEL_SM0SEL45_SHIFT             (0U)                                                /*!< PWMA_DTSRCSEL.SM0SEL45 Position         */
#define PWMA_DTSRCSEL_SM0SEL45(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_DTSRCSEL_SM0SEL45_SHIFT))&PWMA_DTSRCSEL_SM0SEL45_MASK) /*!< PWMA_DTSRCSEL.SM0SEL45 Field            */
#define PWMA_DTSRCSEL_SM0SEL23_MASK              (0xCU)                                              /*!< PWMA_DTSRCSEL.SM0SEL23 Mask             */
#define PWMA_DTSRCSEL_SM0SEL23_SHIFT             (2U)                                                /*!< PWMA_DTSRCSEL.SM0SEL23 Position         */
#define PWMA_DTSRCSEL_SM0SEL23(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_DTSRCSEL_SM0SEL23_SHIFT))&PWMA_DTSRCSEL_SM0SEL23_MASK) /*!< PWMA_DTSRCSEL.SM0SEL23 Field            */
#define PWMA_DTSRCSEL_SM1SEL45_MASK              (0x30U)                                             /*!< PWMA_DTSRCSEL.SM1SEL45 Mask             */
#define PWMA_DTSRCSEL_SM1SEL45_SHIFT             (4U)                                                /*!< PWMA_DTSRCSEL.SM1SEL45 Position         */
#define PWMA_DTSRCSEL_SM1SEL45(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_DTSRCSEL_SM1SEL45_SHIFT))&PWMA_DTSRCSEL_SM1SEL45_MASK) /*!< PWMA_DTSRCSEL.SM1SEL45 Field            */
#define PWMA_DTSRCSEL_SM1SEL23_MASK              (0xC0U)                                             /*!< PWMA_DTSRCSEL.SM1SEL23 Mask             */
#define PWMA_DTSRCSEL_SM1SEL23_SHIFT             (6U)                                                /*!< PWMA_DTSRCSEL.SM1SEL23 Position         */
#define PWMA_DTSRCSEL_SM1SEL23(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_DTSRCSEL_SM1SEL23_SHIFT))&PWMA_DTSRCSEL_SM1SEL23_MASK) /*!< PWMA_DTSRCSEL.SM1SEL23 Field            */
#define PWMA_DTSRCSEL_SM2SEL45_MASK              (0x300U)                                            /*!< PWMA_DTSRCSEL.SM2SEL45 Mask             */
#define PWMA_DTSRCSEL_SM2SEL45_SHIFT             (8U)                                                /*!< PWMA_DTSRCSEL.SM2SEL45 Position         */
#define PWMA_DTSRCSEL_SM2SEL45(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_DTSRCSEL_SM2SEL45_SHIFT))&PWMA_DTSRCSEL_SM2SEL45_MASK) /*!< PWMA_DTSRCSEL.SM2SEL45 Field            */
#define PWMA_DTSRCSEL_SM2SEL23_MASK              (0xC00U)                                            /*!< PWMA_DTSRCSEL.SM2SEL23 Mask             */
#define PWMA_DTSRCSEL_SM2SEL23_SHIFT             (10U)                                               /*!< PWMA_DTSRCSEL.SM2SEL23 Position         */
#define PWMA_DTSRCSEL_SM2SEL23(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_DTSRCSEL_SM2SEL23_SHIFT))&PWMA_DTSRCSEL_SM2SEL23_MASK) /*!< PWMA_DTSRCSEL.SM2SEL23 Field            */
#define PWMA_DTSRCSEL_SM3SEL45_MASK              (0x3000U)                                           /*!< PWMA_DTSRCSEL.SM3SEL45 Mask             */
#define PWMA_DTSRCSEL_SM3SEL45_SHIFT             (12U)                                               /*!< PWMA_DTSRCSEL.SM3SEL45 Position         */
#define PWMA_DTSRCSEL_SM3SEL45(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_DTSRCSEL_SM3SEL45_SHIFT))&PWMA_DTSRCSEL_SM3SEL45_MASK) /*!< PWMA_DTSRCSEL.SM3SEL45 Field            */
#define PWMA_DTSRCSEL_SM3SEL23_MASK              (0xC000U)                                           /*!< PWMA_DTSRCSEL.SM3SEL23 Mask             */
#define PWMA_DTSRCSEL_SM3SEL23_SHIFT             (14U)                                               /*!< PWMA_DTSRCSEL.SM3SEL23 Position         */
#define PWMA_DTSRCSEL_SM3SEL23(x)                (((uint16_t)(((uint16_t)(x))<<PWMA_DTSRCSEL_SM3SEL23_SHIFT))&PWMA_DTSRCSEL_SM3SEL23_MASK) /*!< PWMA_DTSRCSEL.SM3SEL23 Field            */

/*! @name MCTRL - Master Control Register */
#define PWMA_MCTRL_LDOK_MASK                     (0xFU)                                              /*!< PWMA_MCTRL.LDOK Mask                    */
#define PWMA_MCTRL_LDOK_SHIFT                    (0U)                                                /*!< PWMA_MCTRL.LDOK Position                */
#define PWMA_MCTRL_LDOK(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_MCTRL_LDOK_SHIFT))&PWMA_MCTRL_LDOK_MASK) /*!< PWMA_MCTRL.LDOK Field                   */
#define PWMA_MCTRL_CLDOK_MASK                    (0xF0U)                                             /*!< PWMA_MCTRL.CLDOK Mask                   */
#define PWMA_MCTRL_CLDOK_SHIFT                   (4U)                                                /*!< PWMA_MCTRL.CLDOK Position               */
#define PWMA_MCTRL_CLDOK(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_MCTRL_CLDOK_SHIFT))&PWMA_MCTRL_CLDOK_MASK) /*!< PWMA_MCTRL.CLDOK Field                  */
#define PWMA_MCTRL_RUN_MASK                      (0xF00U)                                            /*!< PWMA_MCTRL.RUN Mask                     */
#define PWMA_MCTRL_RUN_SHIFT                     (8U)                                                /*!< PWMA_MCTRL.RUN Position                 */
#define PWMA_MCTRL_RUN(x)                        (((uint16_t)(((uint16_t)(x))<<PWMA_MCTRL_RUN_SHIFT))&PWMA_MCTRL_RUN_MASK) /*!< PWMA_MCTRL.RUN Field                    */
#define PWMA_MCTRL_IPOL_MASK                     (0xF000U)                                           /*!< PWMA_MCTRL.IPOL Mask                    */
#define PWMA_MCTRL_IPOL_SHIFT                    (12U)                                               /*!< PWMA_MCTRL.IPOL Position                */
#define PWMA_MCTRL_IPOL(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_MCTRL_IPOL_SHIFT))&PWMA_MCTRL_IPOL_MASK) /*!< PWMA_MCTRL.IPOL Field                   */

/*! @name MCTRL2 - Master Control 2 Register */
#define PWMA_MCTRL2_MONPLL_MASK                  (0x3U)                                              /*!< PWMA_MCTRL2.MONPLL Mask                 */
#define PWMA_MCTRL2_MONPLL_SHIFT                 (0U)                                                /*!< PWMA_MCTRL2.MONPLL Position             */
#define PWMA_MCTRL2_MONPLL(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_MCTRL2_MONPLL_SHIFT))&PWMA_MCTRL2_MONPLL_MASK) /*!< PWMA_MCTRL2.MONPLL Field                */

/*! @name FCTRL - Fault Control Register */
#define PWMA_FCTRL_FIE_MASK                      (0xFU)                                              /*!< PWMA_FCTRL.FIE Mask                     */
#define PWMA_FCTRL_FIE_SHIFT                     (0U)                                                /*!< PWMA_FCTRL.FIE Position                 */
#define PWMA_FCTRL_FIE(x)                        (((uint16_t)(((uint16_t)(x))<<PWMA_FCTRL_FIE_SHIFT))&PWMA_FCTRL_FIE_MASK) /*!< PWMA_FCTRL.FIE Field                    */
#define PWMA_FCTRL_FSAFE_MASK                    (0xF0U)                                             /*!< PWMA_FCTRL.FSAFE Mask                   */
#define PWMA_FCTRL_FSAFE_SHIFT                   (4U)                                                /*!< PWMA_FCTRL.FSAFE Position               */
#define PWMA_FCTRL_FSAFE(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_FCTRL_FSAFE_SHIFT))&PWMA_FCTRL_FSAFE_MASK) /*!< PWMA_FCTRL.FSAFE Field                  */
#define PWMA_FCTRL_FAUTO_MASK                    (0xF00U)                                            /*!< PWMA_FCTRL.FAUTO Mask                   */
#define PWMA_FCTRL_FAUTO_SHIFT                   (8U)                                                /*!< PWMA_FCTRL.FAUTO Position               */
#define PWMA_FCTRL_FAUTO(x)                      (((uint16_t)(((uint16_t)(x))<<PWMA_FCTRL_FAUTO_SHIFT))&PWMA_FCTRL_FAUTO_MASK) /*!< PWMA_FCTRL.FAUTO Field                  */
#define PWMA_FCTRL_FLVL_MASK                     (0xF000U)                                           /*!< PWMA_FCTRL.FLVL Mask                    */
#define PWMA_FCTRL_FLVL_SHIFT                    (12U)                                               /*!< PWMA_FCTRL.FLVL Position                */
#define PWMA_FCTRL_FLVL(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_FCTRL_FLVL_SHIFT))&PWMA_FCTRL_FLVL_MASK) /*!< PWMA_FCTRL.FLVL Field                   */

/*! @name FSTS - Fault Status Register */
#define PWMA_FSTS_FFLAG_MASK                     (0xFU)                                              /*!< PWMA_FSTS.FFLAG Mask                    */
#define PWMA_FSTS_FFLAG_SHIFT                    (0U)                                                /*!< PWMA_FSTS.FFLAG Position                */
#define PWMA_FSTS_FFLAG(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_FSTS_FFLAG_SHIFT))&PWMA_FSTS_FFLAG_MASK) /*!< PWMA_FSTS.FFLAG Field                   */
#define PWMA_FSTS_FFULL_MASK                     (0xF0U)                                             /*!< PWMA_FSTS.FFULL Mask                    */
#define PWMA_FSTS_FFULL_SHIFT                    (4U)                                                /*!< PWMA_FSTS.FFULL Position                */
#define PWMA_FSTS_FFULL(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_FSTS_FFULL_SHIFT))&PWMA_FSTS_FFULL_MASK) /*!< PWMA_FSTS.FFULL Field                   */
#define PWMA_FSTS_FFPIN_MASK                     (0xF00U)                                            /*!< PWMA_FSTS.FFPIN Mask                    */
#define PWMA_FSTS_FFPIN_SHIFT                    (8U)                                                /*!< PWMA_FSTS.FFPIN Position                */
#define PWMA_FSTS_FFPIN(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_FSTS_FFPIN_SHIFT))&PWMA_FSTS_FFPIN_MASK) /*!< PWMA_FSTS.FFPIN Field                   */
#define PWMA_FSTS_FHALF_MASK                     (0xF000U)                                           /*!< PWMA_FSTS.FHALF Mask                    */
#define PWMA_FSTS_FHALF_SHIFT                    (12U)                                               /*!< PWMA_FSTS.FHALF Position                */
#define PWMA_FSTS_FHALF(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_FSTS_FHALF_SHIFT))&PWMA_FSTS_FHALF_MASK) /*!< PWMA_FSTS.FHALF Field                   */

/*! @name FFILT - Fault Filter Register */
#define PWMA_FFILT_FILT_PER_MASK                 (0xFFU)                                             /*!< PWMA_FFILT.FILT_PER Mask                */
#define PWMA_FFILT_FILT_PER_SHIFT                (0U)                                                /*!< PWMA_FFILT.FILT_PER Position            */
#define PWMA_FFILT_FILT_PER(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_FFILT_FILT_PER_SHIFT))&PWMA_FFILT_FILT_PER_MASK) /*!< PWMA_FFILT.FILT_PER Field               */
#define PWMA_FFILT_FILT_CNT_MASK                 (0x700U)                                            /*!< PWMA_FFILT.FILT_CNT Mask                */
#define PWMA_FFILT_FILT_CNT_SHIFT                (8U)                                                /*!< PWMA_FFILT.FILT_CNT Position            */
#define PWMA_FFILT_FILT_CNT(x)                   (((uint16_t)(((uint16_t)(x))<<PWMA_FFILT_FILT_CNT_SHIFT))&PWMA_FFILT_FILT_CNT_MASK) /*!< PWMA_FFILT.FILT_CNT Field               */
#define PWMA_FFILT_GSTR_MASK                     (0x8000U)                                           /*!< PWMA_FFILT.GSTR Mask                    */
#define PWMA_FFILT_GSTR_SHIFT                    (15U)                                               /*!< PWMA_FFILT.GSTR Position                */
#define PWMA_FFILT_GSTR(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_FFILT_GSTR_SHIFT))&PWMA_FFILT_GSTR_MASK) /*!< PWMA_FFILT.GSTR Field                   */

/*! @name FTST - Fault Test Register */
#define PWMA_FTST_FTEST_MASK                     (0x1U)                                              /*!< PWMA_FTST.FTEST Mask                    */
#define PWMA_FTST_FTEST_SHIFT                    (0U)                                                /*!< PWMA_FTST.FTEST Position                */
#define PWMA_FTST_FTEST(x)                       (((uint16_t)(((uint16_t)(x))<<PWMA_FTST_FTEST_SHIFT))&PWMA_FTST_FTEST_MASK) /*!< PWMA_FTST.FTEST Field                   */

/*! @name FCTRL2 - Fault Control 2 Register */
#define PWMA_FCTRL2_NOCOMB_MASK                  (0xFU)                                              /*!< PWMA_FCTRL2.NOCOMB Mask                 */
#define PWMA_FCTRL2_NOCOMB_SHIFT                 (0U)                                                /*!< PWMA_FCTRL2.NOCOMB Position             */
#define PWMA_FCTRL2_NOCOMB(x)                    (((uint16_t)(((uint16_t)(x))<<PWMA_FCTRL2_NOCOMB_SHIFT))&PWMA_FCTRL2_NOCOMB_MASK) /*!< PWMA_FCTRL2.NOCOMB Field                */
/**
 * @} */ /* End group PWMA_Register_Masks_GROUP 
 */

/* PWMA - Peripheral instance base addresses */
#define PWMA_BasePtr                   0x40033000UL //!< Peripheral base address
#define PWMA                           ((PWMA_Type *) PWMA_BasePtr) //!< Freescale base pointer
#define PWMA_BASE_PTR                  (PWMA) //!< Freescale style base pointer
/**
 * @} */ /* End group PWMA_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup RCM_Peripheral_access_layer_GROUP RCM Peripheral Access Layer
* @brief C Struct for RCM
* @{
*/

/* ================================================================================ */
/* ================           RCM (file:RCM_MKV40F15)              ================ */
/* ================================================================================ */

/**
 * @brief Reset Control Module
 */
/**
* @addtogroup RCM_structs_GROUP RCM struct
* @brief Struct for RCM
* @{
*/
typedef struct RCM_Type {
   __I  uint8_t   SRS0;                         /**< 0000: System Reset Status Register 0                               */
   __I  uint8_t   SRS1;                         /**< 0001: System Reset Status Register 1                               */
        uint8_t   RESERVED_0[2];                /**< 0002: 0x2 bytes                                                    */
   __IO uint8_t   RPFC;                         /**< 0004: Reset Pin Filter Control Register                            */
   __IO uint8_t   RPFW;                         /**< 0005: Reset Pin Filter Width Register                              */
        uint8_t   RESERVED_1[2];                /**< 0006: 0x2 bytes                                                    */
   __IO uint8_t   SSRS0;                        /**< 0008: Sticky System Reset Status Register 0                        */
   __IO uint8_t   SSRS1;                        /**< 0009: Sticky System Reset Status Register 1                        */
} RCM_Type;

/**
 * @} */ /* End group RCM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'RCM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup RCM_Register_Masks_GROUP RCM Register Masks
* @brief Register Masks for RCM
* @{
*/

/*! @name SRS0 - System Reset Status Register 0 */
#define RCM_SRS0_WAKEUP_MASK                     (0x1U)                                              /*!< RCM_SRS0.WAKEUP Mask                    */
#define RCM_SRS0_WAKEUP_SHIFT                    (0U)                                                /*!< RCM_SRS0.WAKEUP Position                */
#define RCM_SRS0_WAKEUP(x)                       (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_WAKEUP_SHIFT))&RCM_SRS0_WAKEUP_MASK) /*!< RCM_SRS0.WAKEUP Field                   */
#define RCM_SRS0_LVD_MASK                        (0x2U)                                              /*!< RCM_SRS0.LVD Mask                       */
#define RCM_SRS0_LVD_SHIFT                       (1U)                                                /*!< RCM_SRS0.LVD Position                   */
#define RCM_SRS0_LVD(x)                          (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_LVD_SHIFT))&RCM_SRS0_LVD_MASK) /*!< RCM_SRS0.LVD Field                      */
#define RCM_SRS0_LOC_MASK                        (0x4U)                                              /*!< RCM_SRS0.LOC Mask                       */
#define RCM_SRS0_LOC_SHIFT                       (2U)                                                /*!< RCM_SRS0.LOC Position                   */
#define RCM_SRS0_LOC(x)                          (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_LOC_SHIFT))&RCM_SRS0_LOC_MASK) /*!< RCM_SRS0.LOC Field                      */
#define RCM_SRS0_LOL_MASK                        (0x8U)                                              /*!< RCM_SRS0.LOL Mask                       */
#define RCM_SRS0_LOL_SHIFT                       (3U)                                                /*!< RCM_SRS0.LOL Position                   */
#define RCM_SRS0_LOL(x)                          (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_LOL_SHIFT))&RCM_SRS0_LOL_MASK) /*!< RCM_SRS0.LOL Field                      */
#define RCM_SRS0_WDOG_MASK                       (0x20U)                                             /*!< RCM_SRS0.WDOG Mask                      */
#define RCM_SRS0_WDOG_SHIFT                      (5U)                                                /*!< RCM_SRS0.WDOG Position                  */
#define RCM_SRS0_WDOG(x)                         (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_WDOG_SHIFT))&RCM_SRS0_WDOG_MASK) /*!< RCM_SRS0.WDOG Field                     */
#define RCM_SRS0_PIN_MASK                        (0x40U)                                             /*!< RCM_SRS0.PIN Mask                       */
#define RCM_SRS0_PIN_SHIFT                       (6U)                                                /*!< RCM_SRS0.PIN Position                   */
#define RCM_SRS0_PIN(x)                          (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_PIN_SHIFT))&RCM_SRS0_PIN_MASK) /*!< RCM_SRS0.PIN Field                      */
#define RCM_SRS0_POR_MASK                        (0x80U)                                             /*!< RCM_SRS0.POR Mask                       */
#define RCM_SRS0_POR_SHIFT                       (7U)                                                /*!< RCM_SRS0.POR Position                   */
#define RCM_SRS0_POR(x)                          (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_POR_SHIFT))&RCM_SRS0_POR_MASK) /*!< RCM_SRS0.POR Field                      */

/*! @name SRS1 - System Reset Status Register 1 */
#define RCM_SRS1_LOCKUP_MASK                     (0x2U)                                              /*!< RCM_SRS1.LOCKUP Mask                    */
#define RCM_SRS1_LOCKUP_SHIFT                    (1U)                                                /*!< RCM_SRS1.LOCKUP Position                */
#define RCM_SRS1_LOCKUP(x)                       (((uint8_t)(((uint8_t)(x))<<RCM_SRS1_LOCKUP_SHIFT))&RCM_SRS1_LOCKUP_MASK) /*!< RCM_SRS1.LOCKUP Field                   */
#define RCM_SRS1_SW_MASK                         (0x4U)                                              /*!< RCM_SRS1.SW Mask                        */
#define RCM_SRS1_SW_SHIFT                        (2U)                                                /*!< RCM_SRS1.SW Position                    */
#define RCM_SRS1_SW(x)                           (((uint8_t)(((uint8_t)(x))<<RCM_SRS1_SW_SHIFT))&RCM_SRS1_SW_MASK) /*!< RCM_SRS1.SW Field                       */
#define RCM_SRS1_MDM_AP_MASK                     (0x8U)                                              /*!< RCM_SRS1.MDM_AP Mask                    */
#define RCM_SRS1_MDM_AP_SHIFT                    (3U)                                                /*!< RCM_SRS1.MDM_AP Position                */
#define RCM_SRS1_MDM_AP(x)                       (((uint8_t)(((uint8_t)(x))<<RCM_SRS1_MDM_AP_SHIFT))&RCM_SRS1_MDM_AP_MASK) /*!< RCM_SRS1.MDM_AP Field                   */
#define RCM_SRS1_SACKERR_MASK                    (0x20U)                                             /*!< RCM_SRS1.SACKERR Mask                   */
#define RCM_SRS1_SACKERR_SHIFT                   (5U)                                                /*!< RCM_SRS1.SACKERR Position               */
#define RCM_SRS1_SACKERR(x)                      (((uint8_t)(((uint8_t)(x))<<RCM_SRS1_SACKERR_SHIFT))&RCM_SRS1_SACKERR_MASK) /*!< RCM_SRS1.SACKERR Field                  */

/*! @name RPFC - Reset Pin Filter Control Register */
#define RCM_RPFC_RSTFLTSRW_MASK                  (0x3U)                                              /*!< RCM_RPFC.RSTFLTSRW Mask                 */
#define RCM_RPFC_RSTFLTSRW_SHIFT                 (0U)                                                /*!< RCM_RPFC.RSTFLTSRW Position             */
#define RCM_RPFC_RSTFLTSRW(x)                    (((uint8_t)(((uint8_t)(x))<<RCM_RPFC_RSTFLTSRW_SHIFT))&RCM_RPFC_RSTFLTSRW_MASK) /*!< RCM_RPFC.RSTFLTSRW Field                */
#define RCM_RPFC_RSTFLTSS_MASK                   (0x4U)                                              /*!< RCM_RPFC.RSTFLTSS Mask                  */
#define RCM_RPFC_RSTFLTSS_SHIFT                  (2U)                                                /*!< RCM_RPFC.RSTFLTSS Position              */
#define RCM_RPFC_RSTFLTSS(x)                     (((uint8_t)(((uint8_t)(x))<<RCM_RPFC_RSTFLTSS_SHIFT))&RCM_RPFC_RSTFLTSS_MASK) /*!< RCM_RPFC.RSTFLTSS Field                 */

/*! @name RPFW - Reset Pin Filter Width Register */
#define RCM_RPFW_RSTFLTSEL_MASK                  (0x1FU)                                             /*!< RCM_RPFW.RSTFLTSEL Mask                 */
#define RCM_RPFW_RSTFLTSEL_SHIFT                 (0U)                                                /*!< RCM_RPFW.RSTFLTSEL Position             */
#define RCM_RPFW_RSTFLTSEL(x)                    (((uint8_t)(((uint8_t)(x))<<RCM_RPFW_RSTFLTSEL_SHIFT))&RCM_RPFW_RSTFLTSEL_MASK) /*!< RCM_RPFW.RSTFLTSEL Field                */

/*! @name SSRS0 - Sticky System Reset Status Register 0 */
#define RCM_SSRS0_SWAKEUP_MASK                   (0x1U)                                              /*!< RCM_SSRS0.SWAKEUP Mask                  */
#define RCM_SSRS0_SWAKEUP_SHIFT                  (0U)                                                /*!< RCM_SSRS0.SWAKEUP Position              */
#define RCM_SSRS0_SWAKEUP(x)                     (((uint8_t)(((uint8_t)(x))<<RCM_SSRS0_SWAKEUP_SHIFT))&RCM_SSRS0_SWAKEUP_MASK) /*!< RCM_SSRS0.SWAKEUP Field                 */
#define RCM_SSRS0_SLVD_MASK                      (0x2U)                                              /*!< RCM_SSRS0.SLVD Mask                     */
#define RCM_SSRS0_SLVD_SHIFT                     (1U)                                                /*!< RCM_SSRS0.SLVD Position                 */
#define RCM_SSRS0_SLVD(x)                        (((uint8_t)(((uint8_t)(x))<<RCM_SSRS0_SLVD_SHIFT))&RCM_SSRS0_SLVD_MASK) /*!< RCM_SSRS0.SLVD Field                    */
#define RCM_SSRS0_SLOC_MASK                      (0x4U)                                              /*!< RCM_SSRS0.SLOC Mask                     */
#define RCM_SSRS0_SLOC_SHIFT                     (2U)                                                /*!< RCM_SSRS0.SLOC Position                 */
#define RCM_SSRS0_SLOC(x)                        (((uint8_t)(((uint8_t)(x))<<RCM_SSRS0_SLOC_SHIFT))&RCM_SSRS0_SLOC_MASK) /*!< RCM_SSRS0.SLOC Field                    */
#define RCM_SSRS0_SLOL_MASK                      (0x8U)                                              /*!< RCM_SSRS0.SLOL Mask                     */
#define RCM_SSRS0_SLOL_SHIFT                     (3U)                                                /*!< RCM_SSRS0.SLOL Position                 */
#define RCM_SSRS0_SLOL(x)                        (((uint8_t)(((uint8_t)(x))<<RCM_SSRS0_SLOL_SHIFT))&RCM_SSRS0_SLOL_MASK) /*!< RCM_SSRS0.SLOL Field                    */
#define RCM_SSRS0_SWDOG_MASK                     (0x20U)                                             /*!< RCM_SSRS0.SWDOG Mask                    */
#define RCM_SSRS0_SWDOG_SHIFT                    (5U)                                                /*!< RCM_SSRS0.SWDOG Position                */
#define RCM_SSRS0_SWDOG(x)                       (((uint8_t)(((uint8_t)(x))<<RCM_SSRS0_SWDOG_SHIFT))&RCM_SSRS0_SWDOG_MASK) /*!< RCM_SSRS0.SWDOG Field                   */
#define RCM_SSRS0_SPIN_MASK                      (0x40U)                                             /*!< RCM_SSRS0.SPIN Mask                     */
#define RCM_SSRS0_SPIN_SHIFT                     (6U)                                                /*!< RCM_SSRS0.SPIN Position                 */
#define RCM_SSRS0_SPIN(x)                        (((uint8_t)(((uint8_t)(x))<<RCM_SSRS0_SPIN_SHIFT))&RCM_SSRS0_SPIN_MASK) /*!< RCM_SSRS0.SPIN Field                    */
#define RCM_SSRS0_SPOR_MASK                      (0x80U)                                             /*!< RCM_SSRS0.SPOR Mask                     */
#define RCM_SSRS0_SPOR_SHIFT                     (7U)                                                /*!< RCM_SSRS0.SPOR Position                 */
#define RCM_SSRS0_SPOR(x)                        (((uint8_t)(((uint8_t)(x))<<RCM_SSRS0_SPOR_SHIFT))&RCM_SSRS0_SPOR_MASK) /*!< RCM_SSRS0.SPOR Field                    */

/*! @name SSRS1 - Sticky System Reset Status Register 1 */
#define RCM_SSRS1_SLOCKUP_MASK                   (0x2U)                                              /*!< RCM_SSRS1.SLOCKUP Mask                  */
#define RCM_SSRS1_SLOCKUP_SHIFT                  (1U)                                                /*!< RCM_SSRS1.SLOCKUP Position              */
#define RCM_SSRS1_SLOCKUP(x)                     (((uint8_t)(((uint8_t)(x))<<RCM_SSRS1_SLOCKUP_SHIFT))&RCM_SSRS1_SLOCKUP_MASK) /*!< RCM_SSRS1.SLOCKUP Field                 */
#define RCM_SSRS1_SSW_MASK                       (0x4U)                                              /*!< RCM_SSRS1.SSW Mask                      */
#define RCM_SSRS1_SSW_SHIFT                      (2U)                                                /*!< RCM_SSRS1.SSW Position                  */
#define RCM_SSRS1_SSW(x)                         (((uint8_t)(((uint8_t)(x))<<RCM_SSRS1_SSW_SHIFT))&RCM_SSRS1_SSW_MASK) /*!< RCM_SSRS1.SSW Field                     */
#define RCM_SSRS1_SMDM_AP_MASK                   (0x8U)                                              /*!< RCM_SSRS1.SMDM_AP Mask                  */
#define RCM_SSRS1_SMDM_AP_SHIFT                  (3U)                                                /*!< RCM_SSRS1.SMDM_AP Position              */
#define RCM_SSRS1_SMDM_AP(x)                     (((uint8_t)(((uint8_t)(x))<<RCM_SSRS1_SMDM_AP_SHIFT))&RCM_SSRS1_SMDM_AP_MASK) /*!< RCM_SSRS1.SMDM_AP Field                 */
#define RCM_SSRS1_SSACKERR_MASK                  (0x20U)                                             /*!< RCM_SSRS1.SSACKERR Mask                 */
#define RCM_SSRS1_SSACKERR_SHIFT                 (5U)                                                /*!< RCM_SSRS1.SSACKERR Position             */
#define RCM_SSRS1_SSACKERR(x)                    (((uint8_t)(((uint8_t)(x))<<RCM_SSRS1_SSACKERR_SHIFT))&RCM_SSRS1_SSACKERR_MASK) /*!< RCM_SSRS1.SSACKERR Field                */
/**
 * @} */ /* End group RCM_Register_Masks_GROUP 
 */

/* RCM - Peripheral instance base addresses */
#define RCM_BasePtr                    0x4007F000UL //!< Peripheral base address
#define RCM                            ((RCM_Type *) RCM_BasePtr) //!< Freescale base pointer
#define RCM_BASE_PTR                   (RCM) //!< Freescale style base pointer
/**
 * @} */ /* End group RCM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup SIM_Peripheral_access_layer_GROUP SIM Peripheral Access Layer
* @brief C Struct for SIM
* @{
*/

/* ================================================================================ */
/* ================           SIM (file:SIM_MKV40F15)              ================ */
/* ================================================================================ */

/**
 * @brief System Integration Module
 */
/**
* @addtogroup SIM_structs_GROUP SIM struct
* @brief Struct for SIM
* @{
*/
typedef struct SIM_Type {
   __IO uint32_t  SOPT1;                        /**< 0000: System Options Register 1                                    */
        uint8_t   RESERVED_0[4096];             /**< 0004: 0x1000 bytes                                                 */
   __IO uint32_t  SOPT2;                        /**< 1004: System Options Register 2                                    */
        uint8_t   RESERVED_1[4];                /**< 1008: 0x4 bytes                                                    */
   __IO uint32_t  SOPT4;                        /**< 100C: System Options Register 4                                    */
   __IO uint32_t  SOPT5;                        /**< 1010: System Options Register 5                                    */
        uint8_t   RESERVED_2[4];                /**< 1014: 0x4 bytes                                                    */
   __IO uint32_t  SOPT7;                        /**< 1018: System Options Register 7                                    */
   __IO uint32_t  SOPT8;                        /**< 101C: System Options Register 8                                    */
   __IO uint32_t  SOPT9;                        /**< 1020: System Options Register 9                                    */
   __I  uint32_t  SDID;                         /**< 1024: System Device Identification Register                        */
        uint8_t   RESERVED_3[12];               /**< 1028: 0xC bytes                                                    */
   __IO uint32_t  SCGC4;                        /**< 1034: System Clock Gating Control Register 4                       */
   __IO uint32_t  SCGC5;                        /**< 1038: System Clock Gating Control Register 5                       */
   __IO uint32_t  SCGC6;                        /**< 103C: System Clock Gating Control Register 6                       */
   __IO uint32_t  SCGC7;                        /**< 1040: System Clock Gating Control Register 7                       */
   __IO uint32_t  CLKDIV1;                      /**< 1044: System Clock Divider Register 1                              */
        uint8_t   RESERVED_4[4];                /**< 1048: 0x4 bytes                                                    */
   __IO uint32_t  FCFG1;                        /**< 104C: Flash Configuration Register 1                               */
   __I  uint32_t  FCFG2;                        /**< 1050: Flash Configuration Register 2                               */
   __I  uint32_t  UIDH;                         /**< 1054: Unique Identification Register High                          */
   __I  uint32_t  UIDMH;                        /**< 1058: Unique Identification Register Mid-High                      */
   __I  uint32_t  UIDML;                        /**< 105C: Unique Identification Register Mid Low                       */
   __I  uint32_t  UIDL;                         /**< 1060: Unique Identification Register Low                           */
        uint8_t   RESERVED_5[4];                /**< 1064: 0x4 bytes                                                    */
   __IO uint32_t  CLKDIV4;                      /**< 1068: System Clock Divider Register 4                              */
   __IO uint32_t  MISCTRL;                      /**< 106C: Miscellaneous Control Register                               */
   __IO uint32_t  MISCTRL2;                     /**< 1070: Miscellaneous Control Register 2                             */
        uint8_t   RESERVED_6[140];              /**< 1074: 0x8C bytes                                                   */
   __IO uint32_t  WDOGC;                        /**< 1100: WDOG Control Register                                        */
   __IO uint32_t  PWRC;                         /**< 1104: Power Control Register                                       */
   __IO uint32_t  ADCOPT;                       /**< 1108: ADC Channel 6/7 Mux Control Register                         */
} SIM_Type;

/**
 * @} */ /* End group SIM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'SIM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup SIM_Register_Masks_GROUP SIM Register Masks
* @brief Register Masks for SIM
* @{
*/

/*! @name SOPT1 - System Options Register 1 */
#define SIM_SOPT1_RAMSIZE_MASK                   (0xF000U)                                           /*!< SIM_SOPT1.RAMSIZE Mask                  */
#define SIM_SOPT1_RAMSIZE_SHIFT                  (12U)                                               /*!< SIM_SOPT1.RAMSIZE Position              */
#define SIM_SOPT1_RAMSIZE(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SOPT1_RAMSIZE_SHIFT))&SIM_SOPT1_RAMSIZE_MASK) /*!< SIM_SOPT1.RAMSIZE Field                 */
#define SIM_SOPT1_OSC32KSEL_MASK                 (0xC0000U)                                          /*!< SIM_SOPT1.OSC32KSEL Mask                */
#define SIM_SOPT1_OSC32KSEL_SHIFT                (18U)                                               /*!< SIM_SOPT1.OSC32KSEL Position            */
#define SIM_SOPT1_OSC32KSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SOPT1_OSC32KSEL_SHIFT))&SIM_SOPT1_OSC32KSEL_MASK) /*!< SIM_SOPT1.OSC32KSEL Field               */

/*! @name SOPT2 - System Options Register 2 */
#define SIM_SOPT2_CLKOUTSEL_MASK                 (0xE0U)                                             /*!< SIM_SOPT2.CLKOUTSEL Mask                */
#define SIM_SOPT2_CLKOUTSEL_SHIFT                (5U)                                                /*!< SIM_SOPT2.CLKOUTSEL Position            */
#define SIM_SOPT2_CLKOUTSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_CLKOUTSEL_SHIFT))&SIM_SOPT2_CLKOUTSEL_MASK) /*!< SIM_SOPT2.CLKOUTSEL Field               */
#define SIM_SOPT2_TRACECLKSEL_MASK               (0x1000U)                                           /*!< SIM_SOPT2.TRACECLKSEL Mask              */
#define SIM_SOPT2_TRACECLKSEL_SHIFT              (12U)                                               /*!< SIM_SOPT2.TRACECLKSEL Position          */
#define SIM_SOPT2_TRACECLKSEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_TRACECLKSEL_SHIFT))&SIM_SOPT2_TRACECLKSEL_MASK) /*!< SIM_SOPT2.TRACECLKSEL Field             */
#define SIM_SOPT2_NANOEDGECLK2XSEL_MASK          (0x80000000U)                                       /*!< SIM_SOPT2.NANOEDGECLK2XSEL Mask         */
#define SIM_SOPT2_NANOEDGECLK2XSEL_SHIFT         (31U)                                               /*!< SIM_SOPT2.NANOEDGECLK2XSEL Position     */
#define SIM_SOPT2_NANOEDGECLK2XSEL(x)            (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_NANOEDGECLK2XSEL_SHIFT))&SIM_SOPT2_NANOEDGECLK2XSEL_MASK) /*!< SIM_SOPT2.NANOEDGECLK2XSEL Field        */

/*! @name SOPT4 - System Options Register 4 */
#define SIM_SOPT4_FTM0FLT0_MASK                  (0x1U)                                              /*!< SIM_SOPT4.FTM0FLT0 Mask                 */
#define SIM_SOPT4_FTM0FLT0_SHIFT                 (0U)                                                /*!< SIM_SOPT4.FTM0FLT0 Position             */
#define SIM_SOPT4_FTM0FLT0(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0FLT0_SHIFT))&SIM_SOPT4_FTM0FLT0_MASK) /*!< SIM_SOPT4.FTM0FLT0 Field                */
#define SIM_SOPT4_FTM0FLT1_MASK                  (0x2U)                                              /*!< SIM_SOPT4.FTM0FLT1 Mask                 */
#define SIM_SOPT4_FTM0FLT1_SHIFT                 (1U)                                                /*!< SIM_SOPT4.FTM0FLT1 Position             */
#define SIM_SOPT4_FTM0FLT1(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0FLT1_SHIFT))&SIM_SOPT4_FTM0FLT1_MASK) /*!< SIM_SOPT4.FTM0FLT1 Field                */
#define SIM_SOPT4_FTM0FLT2_MASK                  (0x4U)                                              /*!< SIM_SOPT4.FTM0FLT2 Mask                 */
#define SIM_SOPT4_FTM0FLT2_SHIFT                 (2U)                                                /*!< SIM_SOPT4.FTM0FLT2 Position             */
#define SIM_SOPT4_FTM0FLT2(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0FLT2_SHIFT))&SIM_SOPT4_FTM0FLT2_MASK) /*!< SIM_SOPT4.FTM0FLT2 Field                */
#define SIM_SOPT4_FTM0FLT3_MASK                  (0x8U)                                              /*!< SIM_SOPT4.FTM0FLT3 Mask                 */
#define SIM_SOPT4_FTM0FLT3_SHIFT                 (3U)                                                /*!< SIM_SOPT4.FTM0FLT3 Position             */
#define SIM_SOPT4_FTM0FLT3(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0FLT3_SHIFT))&SIM_SOPT4_FTM0FLT3_MASK) /*!< SIM_SOPT4.FTM0FLT3 Field                */
#define SIM_SOPT4_FTM1FLT0_MASK                  (0x10U)                                             /*!< SIM_SOPT4.FTM1FLT0 Mask                 */
#define SIM_SOPT4_FTM1FLT0_SHIFT                 (4U)                                                /*!< SIM_SOPT4.FTM1FLT0 Position             */
#define SIM_SOPT4_FTM1FLT0(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM1FLT0_SHIFT))&SIM_SOPT4_FTM1FLT0_MASK) /*!< SIM_SOPT4.FTM1FLT0 Field                */
#define SIM_SOPT4_FTM3FLT0_MASK                  (0x1000U)                                           /*!< SIM_SOPT4.FTM3FLT0 Mask                 */
#define SIM_SOPT4_FTM3FLT0_SHIFT                 (12U)                                               /*!< SIM_SOPT4.FTM3FLT0 Position             */
#define SIM_SOPT4_FTM3FLT0(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM3FLT0_SHIFT))&SIM_SOPT4_FTM3FLT0_MASK) /*!< SIM_SOPT4.FTM3FLT0 Field                */
#define SIM_SOPT4_FTM0TRG0SRC_MASK               (0x10000U)                                          /*!< SIM_SOPT4.FTM0TRG0SRC Mask              */
#define SIM_SOPT4_FTM0TRG0SRC_SHIFT              (16U)                                               /*!< SIM_SOPT4.FTM0TRG0SRC Position          */
#define SIM_SOPT4_FTM0TRG0SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0TRG0SRC_SHIFT))&SIM_SOPT4_FTM0TRG0SRC_MASK) /*!< SIM_SOPT4.FTM0TRG0SRC Field             */
#define SIM_SOPT4_FTM0TRG1SRC_MASK               (0x20000U)                                          /*!< SIM_SOPT4.FTM0TRG1SRC Mask              */
#define SIM_SOPT4_FTM0TRG1SRC_SHIFT              (17U)                                               /*!< SIM_SOPT4.FTM0TRG1SRC Position          */
#define SIM_SOPT4_FTM0TRG1SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0TRG1SRC_SHIFT))&SIM_SOPT4_FTM0TRG1SRC_MASK) /*!< SIM_SOPT4.FTM0TRG1SRC Field             */
#define SIM_SOPT4_FTM0TRG2SRC_MASK               (0x40000U)                                          /*!< SIM_SOPT4.FTM0TRG2SRC Mask              */
#define SIM_SOPT4_FTM0TRG2SRC_SHIFT              (18U)                                               /*!< SIM_SOPT4.FTM0TRG2SRC Position          */
#define SIM_SOPT4_FTM0TRG2SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0TRG2SRC_SHIFT))&SIM_SOPT4_FTM0TRG2SRC_MASK) /*!< SIM_SOPT4.FTM0TRG2SRC Field             */
#define SIM_SOPT4_FTM1TRG0SRC_MASK               (0x100000U)                                         /*!< SIM_SOPT4.FTM1TRG0SRC Mask              */
#define SIM_SOPT4_FTM1TRG0SRC_SHIFT              (20U)                                               /*!< SIM_SOPT4.FTM1TRG0SRC Position          */
#define SIM_SOPT4_FTM1TRG0SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM1TRG0SRC_SHIFT))&SIM_SOPT4_FTM1TRG0SRC_MASK) /*!< SIM_SOPT4.FTM1TRG0SRC Field             */
#define SIM_SOPT4_FTM1TRG2SRC_MASK               (0x400000U)                                         /*!< SIM_SOPT4.FTM1TRG2SRC Mask              */
#define SIM_SOPT4_FTM1TRG2SRC_SHIFT              (22U)                                               /*!< SIM_SOPT4.FTM1TRG2SRC Position          */
#define SIM_SOPT4_FTM1TRG2SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM1TRG2SRC_SHIFT))&SIM_SOPT4_FTM1TRG2SRC_MASK) /*!< SIM_SOPT4.FTM1TRG2SRC Field             */
#define SIM_SOPT4_FTM3TRG0SRC_MASK               (0x10000000U)                                       /*!< SIM_SOPT4.FTM3TRG0SRC Mask              */
#define SIM_SOPT4_FTM3TRG0SRC_SHIFT              (28U)                                               /*!< SIM_SOPT4.FTM3TRG0SRC Position          */
#define SIM_SOPT4_FTM3TRG0SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM3TRG0SRC_SHIFT))&SIM_SOPT4_FTM3TRG0SRC_MASK) /*!< SIM_SOPT4.FTM3TRG0SRC Field             */
#define SIM_SOPT4_FTM3TRG1SRC_MASK               (0x20000000U)                                       /*!< SIM_SOPT4.FTM3TRG1SRC Mask              */
#define SIM_SOPT4_FTM3TRG1SRC_SHIFT              (29U)                                               /*!< SIM_SOPT4.FTM3TRG1SRC Position          */
#define SIM_SOPT4_FTM3TRG1SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM3TRG1SRC_SHIFT))&SIM_SOPT4_FTM3TRG1SRC_MASK) /*!< SIM_SOPT4.FTM3TRG1SRC Field             */
#define SIM_SOPT4_FTM3TRG2SRC_MASK               (0x40000000U)                                       /*!< SIM_SOPT4.FTM3TRG2SRC Mask              */
#define SIM_SOPT4_FTM3TRG2SRC_SHIFT              (30U)                                               /*!< SIM_SOPT4.FTM3TRG2SRC Position          */
#define SIM_SOPT4_FTM3TRG2SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM3TRG2SRC_SHIFT))&SIM_SOPT4_FTM3TRG2SRC_MASK) /*!< SIM_SOPT4.FTM3TRG2SRC Field             */

/*! @name SOPT5 - System Options Register 5 */
#define SIM_SOPT5_UART0TXSRC_MASK                (0x1U)                                              /*!< SIM_SOPT5.UART0TXSRC Mask               */
#define SIM_SOPT5_UART0TXSRC_SHIFT               (0U)                                                /*!< SIM_SOPT5.UART0TXSRC Position           */
#define SIM_SOPT5_UART0TXSRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT5_UART0TXSRC_SHIFT))&SIM_SOPT5_UART0TXSRC_MASK) /*!< SIM_SOPT5.UART0TXSRC Field              */
#define SIM_SOPT5_UART0RXSRC_MASK                (0xCU)                                              /*!< SIM_SOPT5.UART0RXSRC Mask               */
#define SIM_SOPT5_UART0RXSRC_SHIFT               (2U)                                                /*!< SIM_SOPT5.UART0RXSRC Position           */
#define SIM_SOPT5_UART0RXSRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT5_UART0RXSRC_SHIFT))&SIM_SOPT5_UART0RXSRC_MASK) /*!< SIM_SOPT5.UART0RXSRC Field              */
#define SIM_SOPT5_UART1TXSRC_MASK                (0x10U)                                             /*!< SIM_SOPT5.UART1TXSRC Mask               */
#define SIM_SOPT5_UART1TXSRC_SHIFT               (4U)                                                /*!< SIM_SOPT5.UART1TXSRC Position           */
#define SIM_SOPT5_UART1TXSRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT5_UART1TXSRC_SHIFT))&SIM_SOPT5_UART1TXSRC_MASK) /*!< SIM_SOPT5.UART1TXSRC Field              */
#define SIM_SOPT5_UART1RXSRC_MASK                (0xC0U)                                             /*!< SIM_SOPT5.UART1RXSRC Mask               */
#define SIM_SOPT5_UART1RXSRC_SHIFT               (6U)                                                /*!< SIM_SOPT5.UART1RXSRC Position           */
#define SIM_SOPT5_UART1RXSRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT5_UART1RXSRC_SHIFT))&SIM_SOPT5_UART1RXSRC_MASK) /*!< SIM_SOPT5.UART1RXSRC Field              */

/*! @name SOPT7 - System Options Register 7 */
#define SIM_SOPT7_ADCATRGSEL_MASK                (0xFU)                                              /*!< SIM_SOPT7.ADCATRGSEL Mask               */
#define SIM_SOPT7_ADCATRGSEL_SHIFT               (0U)                                                /*!< SIM_SOPT7.ADCATRGSEL Position           */
#define SIM_SOPT7_ADCATRGSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT7_ADCATRGSEL_SHIFT))&SIM_SOPT7_ADCATRGSEL_MASK) /*!< SIM_SOPT7.ADCATRGSEL Field              */
#define SIM_SOPT7_ADCAALTTRGEN_MASK              (0xC0U)                                             /*!< SIM_SOPT7.ADCAALTTRGEN Mask             */
#define SIM_SOPT7_ADCAALTTRGEN_SHIFT             (6U)                                                /*!< SIM_SOPT7.ADCAALTTRGEN Position         */
#define SIM_SOPT7_ADCAALTTRGEN(x)                (((uint32_t)(((uint32_t)(x))<<SIM_SOPT7_ADCAALTTRGEN_SHIFT))&SIM_SOPT7_ADCAALTTRGEN_MASK) /*!< SIM_SOPT7.ADCAALTTRGEN Field            */
#define SIM_SOPT7_ADCBTRGSEL_MASK                (0xF00U)                                            /*!< SIM_SOPT7.ADCBTRGSEL Mask               */
#define SIM_SOPT7_ADCBTRGSEL_SHIFT               (8U)                                                /*!< SIM_SOPT7.ADCBTRGSEL Position           */
#define SIM_SOPT7_ADCBTRGSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT7_ADCBTRGSEL_SHIFT))&SIM_SOPT7_ADCBTRGSEL_MASK) /*!< SIM_SOPT7.ADCBTRGSEL Field              */
#define SIM_SOPT7_ADCBALTTRGEN_MASK              (0xC000U)                                           /*!< SIM_SOPT7.ADCBALTTRGEN Mask             */
#define SIM_SOPT7_ADCBALTTRGEN_SHIFT             (14U)                                               /*!< SIM_SOPT7.ADCBALTTRGEN Position         */
#define SIM_SOPT7_ADCBALTTRGEN(x)                (((uint32_t)(((uint32_t)(x))<<SIM_SOPT7_ADCBALTTRGEN_SHIFT))&SIM_SOPT7_ADCBALTTRGEN_MASK) /*!< SIM_SOPT7.ADCBALTTRGEN Field            */

/*! @name SOPT8 - System Options Register 8 */
#define SIM_SOPT8_FTM0SYNCBIT_MASK               (0x1U)                                              /*!< SIM_SOPT8.FTM0SYNCBIT Mask              */
#define SIM_SOPT8_FTM0SYNCBIT_SHIFT              (0U)                                                /*!< SIM_SOPT8.FTM0SYNCBIT Position          */
#define SIM_SOPT8_FTM0SYNCBIT(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM0SYNCBIT_SHIFT))&SIM_SOPT8_FTM0SYNCBIT_MASK) /*!< SIM_SOPT8.FTM0SYNCBIT Field             */
#define SIM_SOPT8_FTM1SYNCBIT_MASK               (0x2U)                                              /*!< SIM_SOPT8.FTM1SYNCBIT Mask              */
#define SIM_SOPT8_FTM1SYNCBIT_SHIFT              (1U)                                                /*!< SIM_SOPT8.FTM1SYNCBIT Position          */
#define SIM_SOPT8_FTM1SYNCBIT(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM1SYNCBIT_SHIFT))&SIM_SOPT8_FTM1SYNCBIT_MASK) /*!< SIM_SOPT8.FTM1SYNCBIT Field             */
#define SIM_SOPT8_FTM3SYNCBIT_MASK               (0x8U)                                              /*!< SIM_SOPT8.FTM3SYNCBIT Mask              */
#define SIM_SOPT8_FTM3SYNCBIT_SHIFT              (3U)                                                /*!< SIM_SOPT8.FTM3SYNCBIT Position          */
#define SIM_SOPT8_FTM3SYNCBIT(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM3SYNCBIT_SHIFT))&SIM_SOPT8_FTM3SYNCBIT_MASK) /*!< SIM_SOPT8.FTM3SYNCBIT Field             */
#define SIM_SOPT8_FTM0CFSEL_MASK                 (0x100U)                                            /*!< SIM_SOPT8.FTM0CFSEL Mask                */
#define SIM_SOPT8_FTM0CFSEL_SHIFT                (8U)                                                /*!< SIM_SOPT8.FTM0CFSEL Position            */
#define SIM_SOPT8_FTM0CFSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM0CFSEL_SHIFT))&SIM_SOPT8_FTM0CFSEL_MASK) /*!< SIM_SOPT8.FTM0CFSEL Field               */
#define SIM_SOPT8_FTM3CFSEL_MASK                 (0x200U)                                            /*!< SIM_SOPT8.FTM3CFSEL Mask                */
#define SIM_SOPT8_FTM3CFSEL_SHIFT                (9U)                                                /*!< SIM_SOPT8.FTM3CFSEL Position            */
#define SIM_SOPT8_FTM3CFSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM3CFSEL_SHIFT))&SIM_SOPT8_FTM3CFSEL_MASK) /*!< SIM_SOPT8.FTM3CFSEL Field               */
#define SIM_SOPT8_FTM0OCH0SRC_MASK               (0x10000U)                                          /*!< SIM_SOPT8.FTM0OCH0SRC Mask              */
#define SIM_SOPT8_FTM0OCH0SRC_SHIFT              (16U)                                               /*!< SIM_SOPT8.FTM0OCH0SRC Position          */
#define SIM_SOPT8_FTM0OCH0SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM0OCH0SRC_SHIFT))&SIM_SOPT8_FTM0OCH0SRC_MASK) /*!< SIM_SOPT8.FTM0OCH0SRC Field             */
#define SIM_SOPT8_FTM0OCH1SRC_MASK               (0x20000U)                                          /*!< SIM_SOPT8.FTM0OCH1SRC Mask              */
#define SIM_SOPT8_FTM0OCH1SRC_SHIFT              (17U)                                               /*!< SIM_SOPT8.FTM0OCH1SRC Position          */
#define SIM_SOPT8_FTM0OCH1SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM0OCH1SRC_SHIFT))&SIM_SOPT8_FTM0OCH1SRC_MASK) /*!< SIM_SOPT8.FTM0OCH1SRC Field             */
#define SIM_SOPT8_FTM0OCH2SRC_MASK               (0x40000U)                                          /*!< SIM_SOPT8.FTM0OCH2SRC Mask              */
#define SIM_SOPT8_FTM0OCH2SRC_SHIFT              (18U)                                               /*!< SIM_SOPT8.FTM0OCH2SRC Position          */
#define SIM_SOPT8_FTM0OCH2SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM0OCH2SRC_SHIFT))&SIM_SOPT8_FTM0OCH2SRC_MASK) /*!< SIM_SOPT8.FTM0OCH2SRC Field             */
#define SIM_SOPT8_FTM0OCH3SRC_MASK               (0x80000U)                                          /*!< SIM_SOPT8.FTM0OCH3SRC Mask              */
#define SIM_SOPT8_FTM0OCH3SRC_SHIFT              (19U)                                               /*!< SIM_SOPT8.FTM0OCH3SRC Position          */
#define SIM_SOPT8_FTM0OCH3SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM0OCH3SRC_SHIFT))&SIM_SOPT8_FTM0OCH3SRC_MASK) /*!< SIM_SOPT8.FTM0OCH3SRC Field             */
#define SIM_SOPT8_FTM0OCH4SRC_MASK               (0x100000U)                                         /*!< SIM_SOPT8.FTM0OCH4SRC Mask              */
#define SIM_SOPT8_FTM0OCH4SRC_SHIFT              (20U)                                               /*!< SIM_SOPT8.FTM0OCH4SRC Position          */
#define SIM_SOPT8_FTM0OCH4SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM0OCH4SRC_SHIFT))&SIM_SOPT8_FTM0OCH4SRC_MASK) /*!< SIM_SOPT8.FTM0OCH4SRC Field             */
#define SIM_SOPT8_FTM0OCH5SRC_MASK               (0x200000U)                                         /*!< SIM_SOPT8.FTM0OCH5SRC Mask              */
#define SIM_SOPT8_FTM0OCH5SRC_SHIFT              (21U)                                               /*!< SIM_SOPT8.FTM0OCH5SRC Position          */
#define SIM_SOPT8_FTM0OCH5SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM0OCH5SRC_SHIFT))&SIM_SOPT8_FTM0OCH5SRC_MASK) /*!< SIM_SOPT8.FTM0OCH5SRC Field             */
#define SIM_SOPT8_FTM0OCH6SRC_MASK               (0x400000U)                                         /*!< SIM_SOPT8.FTM0OCH6SRC Mask              */
#define SIM_SOPT8_FTM0OCH6SRC_SHIFT              (22U)                                               /*!< SIM_SOPT8.FTM0OCH6SRC Position          */
#define SIM_SOPT8_FTM0OCH6SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM0OCH6SRC_SHIFT))&SIM_SOPT8_FTM0OCH6SRC_MASK) /*!< SIM_SOPT8.FTM0OCH6SRC Field             */
#define SIM_SOPT8_FTM0OCH7SRC_MASK               (0x800000U)                                         /*!< SIM_SOPT8.FTM0OCH7SRC Mask              */
#define SIM_SOPT8_FTM0OCH7SRC_SHIFT              (23U)                                               /*!< SIM_SOPT8.FTM0OCH7SRC Position          */
#define SIM_SOPT8_FTM0OCH7SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM0OCH7SRC_SHIFT))&SIM_SOPT8_FTM0OCH7SRC_MASK) /*!< SIM_SOPT8.FTM0OCH7SRC Field             */
#define SIM_SOPT8_FTM3OCH0SRC_MASK               (0x1000000U)                                        /*!< SIM_SOPT8.FTM3OCH0SRC Mask              */
#define SIM_SOPT8_FTM3OCH0SRC_SHIFT              (24U)                                               /*!< SIM_SOPT8.FTM3OCH0SRC Position          */
#define SIM_SOPT8_FTM3OCH0SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM3OCH0SRC_SHIFT))&SIM_SOPT8_FTM3OCH0SRC_MASK) /*!< SIM_SOPT8.FTM3OCH0SRC Field             */
#define SIM_SOPT8_FTM3OCH1SRC_MASK               (0x2000000U)                                        /*!< SIM_SOPT8.FTM3OCH1SRC Mask              */
#define SIM_SOPT8_FTM3OCH1SRC_SHIFT              (25U)                                               /*!< SIM_SOPT8.FTM3OCH1SRC Position          */
#define SIM_SOPT8_FTM3OCH1SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM3OCH1SRC_SHIFT))&SIM_SOPT8_FTM3OCH1SRC_MASK) /*!< SIM_SOPT8.FTM3OCH1SRC Field             */
#define SIM_SOPT8_FTM3OCH2SRC_MASK               (0x4000000U)                                        /*!< SIM_SOPT8.FTM3OCH2SRC Mask              */
#define SIM_SOPT8_FTM3OCH2SRC_SHIFT              (26U)                                               /*!< SIM_SOPT8.FTM3OCH2SRC Position          */
#define SIM_SOPT8_FTM3OCH2SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM3OCH2SRC_SHIFT))&SIM_SOPT8_FTM3OCH2SRC_MASK) /*!< SIM_SOPT8.FTM3OCH2SRC Field             */
#define SIM_SOPT8_FTM3OCH3SRC_MASK               (0x8000000U)                                        /*!< SIM_SOPT8.FTM3OCH3SRC Mask              */
#define SIM_SOPT8_FTM3OCH3SRC_SHIFT              (27U)                                               /*!< SIM_SOPT8.FTM3OCH3SRC Position          */
#define SIM_SOPT8_FTM3OCH3SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM3OCH3SRC_SHIFT))&SIM_SOPT8_FTM3OCH3SRC_MASK) /*!< SIM_SOPT8.FTM3OCH3SRC Field             */
#define SIM_SOPT8_FTM3OCH4SRC_MASK               (0x10000000U)                                       /*!< SIM_SOPT8.FTM3OCH4SRC Mask              */
#define SIM_SOPT8_FTM3OCH4SRC_SHIFT              (28U)                                               /*!< SIM_SOPT8.FTM3OCH4SRC Position          */
#define SIM_SOPT8_FTM3OCH4SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM3OCH4SRC_SHIFT))&SIM_SOPT8_FTM3OCH4SRC_MASK) /*!< SIM_SOPT8.FTM3OCH4SRC Field             */
#define SIM_SOPT8_FTM3OCH5SRC_MASK               (0x20000000U)                                       /*!< SIM_SOPT8.FTM3OCH5SRC Mask              */
#define SIM_SOPT8_FTM3OCH5SRC_SHIFT              (29U)                                               /*!< SIM_SOPT8.FTM3OCH5SRC Position          */
#define SIM_SOPT8_FTM3OCH5SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM3OCH5SRC_SHIFT))&SIM_SOPT8_FTM3OCH5SRC_MASK) /*!< SIM_SOPT8.FTM3OCH5SRC Field             */
#define SIM_SOPT8_FTM3OCH6SRC_MASK               (0x40000000U)                                       /*!< SIM_SOPT8.FTM3OCH6SRC Mask              */
#define SIM_SOPT8_FTM3OCH6SRC_SHIFT              (30U)                                               /*!< SIM_SOPT8.FTM3OCH6SRC Position          */
#define SIM_SOPT8_FTM3OCH6SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM3OCH6SRC_SHIFT))&SIM_SOPT8_FTM3OCH6SRC_MASK) /*!< SIM_SOPT8.FTM3OCH6SRC Field             */
#define SIM_SOPT8_FTM3OCH7SRC_MASK               (0x80000000U)                                       /*!< SIM_SOPT8.FTM3OCH7SRC Mask              */
#define SIM_SOPT8_FTM3OCH7SRC_SHIFT              (31U)                                               /*!< SIM_SOPT8.FTM3OCH7SRC Position          */
#define SIM_SOPT8_FTM3OCH7SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT8_FTM3OCH7SRC_SHIFT))&SIM_SOPT8_FTM3OCH7SRC_MASK) /*!< SIM_SOPT8.FTM3OCH7SRC Field             */

/*! @name SOPT9 - System Options Register 9 */
#define SIM_SOPT9_FTM1ICH0SRC_MASK               (0x30U)                                             /*!< SIM_SOPT9.FTM1ICH0SRC Mask              */
#define SIM_SOPT9_FTM1ICH0SRC_SHIFT              (4U)                                                /*!< SIM_SOPT9.FTM1ICH0SRC Position          */
#define SIM_SOPT9_FTM1ICH0SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT9_FTM1ICH0SRC_SHIFT))&SIM_SOPT9_FTM1ICH0SRC_MASK) /*!< SIM_SOPT9.FTM1ICH0SRC Field             */
#define SIM_SOPT9_FTM1ICH1SRC_MASK               (0x40U)                                             /*!< SIM_SOPT9.FTM1ICH1SRC Mask              */
#define SIM_SOPT9_FTM1ICH1SRC_SHIFT              (6U)                                                /*!< SIM_SOPT9.FTM1ICH1SRC Position          */
#define SIM_SOPT9_FTM1ICH1SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT9_FTM1ICH1SRC_SHIFT))&SIM_SOPT9_FTM1ICH1SRC_MASK) /*!< SIM_SOPT9.FTM1ICH1SRC Field             */
#define SIM_SOPT9_FTM0CLKSEL_MASK                (0x3000000U)                                        /*!< SIM_SOPT9.FTM0CLKSEL Mask               */
#define SIM_SOPT9_FTM0CLKSEL_SHIFT               (24U)                                               /*!< SIM_SOPT9.FTM0CLKSEL Position           */
#define SIM_SOPT9_FTM0CLKSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT9_FTM0CLKSEL_SHIFT))&SIM_SOPT9_FTM0CLKSEL_MASK) /*!< SIM_SOPT9.FTM0CLKSEL Field              */
#define SIM_SOPT9_FTM1CLKSEL_MASK                (0xC000000U)                                        /*!< SIM_SOPT9.FTM1CLKSEL Mask               */
#define SIM_SOPT9_FTM1CLKSEL_SHIFT               (26U)                                               /*!< SIM_SOPT9.FTM1CLKSEL Position           */
#define SIM_SOPT9_FTM1CLKSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT9_FTM1CLKSEL_SHIFT))&SIM_SOPT9_FTM1CLKSEL_MASK) /*!< SIM_SOPT9.FTM1CLKSEL Field              */
#define SIM_SOPT9_FTM3CLKSEL_MASK                (0xC0000000U)                                       /*!< SIM_SOPT9.FTM3CLKSEL Mask               */
#define SIM_SOPT9_FTM3CLKSEL_SHIFT               (30U)                                               /*!< SIM_SOPT9.FTM3CLKSEL Position           */
#define SIM_SOPT9_FTM3CLKSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT9_FTM3CLKSEL_SHIFT))&SIM_SOPT9_FTM3CLKSEL_MASK) /*!< SIM_SOPT9.FTM3CLKSEL Field              */

/*! @name SDID - System Device Identification Register */
#define SIM_SDID_PINID_MASK                      (0xFU)                                              /*!< SIM_SDID.PINID Mask                     */
#define SIM_SDID_PINID_SHIFT                     (0U)                                                /*!< SIM_SDID.PINID Position                 */
#define SIM_SDID_PINID(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SDID_PINID_SHIFT))&SIM_SDID_PINID_MASK) /*!< SIM_SDID.PINID Field                    */
#define SIM_SDID_DIEID_MASK                      (0xF80U)                                            /*!< SIM_SDID.DIEID Mask                     */
#define SIM_SDID_DIEID_SHIFT                     (7U)                                                /*!< SIM_SDID.DIEID Position                 */
#define SIM_SDID_DIEID(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SDID_DIEID_SHIFT))&SIM_SDID_DIEID_MASK) /*!< SIM_SDID.DIEID Field                    */
#define SIM_SDID_REVID_MASK                      (0xF000U)                                           /*!< SIM_SDID.REVID Mask                     */
#define SIM_SDID_REVID_SHIFT                     (12U)                                               /*!< SIM_SDID.REVID Position                 */
#define SIM_SDID_REVID(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SDID_REVID_SHIFT))&SIM_SDID_REVID_MASK) /*!< SIM_SDID.REVID Field                    */
#define SIM_SDID_SERIESID_MASK                   (0xF00000U)                                         /*!< SIM_SDID.SERIESID Mask                  */
#define SIM_SDID_SERIESID_SHIFT                  (20U)                                               /*!< SIM_SDID.SERIESID Position              */
#define SIM_SDID_SERIESID(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SDID_SERIESID_SHIFT))&SIM_SDID_SERIESID_MASK) /*!< SIM_SDID.SERIESID Field                 */
#define SIM_SDID_SUBFAMID_MASK                   (0xF000000U)                                        /*!< SIM_SDID.SUBFAMID Mask                  */
#define SIM_SDID_SUBFAMID_SHIFT                  (24U)                                               /*!< SIM_SDID.SUBFAMID Position              */
#define SIM_SDID_SUBFAMID(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SDID_SUBFAMID_SHIFT))&SIM_SDID_SUBFAMID_MASK) /*!< SIM_SDID.SUBFAMID Field                 */
#define SIM_SDID_FAMILYID_MASK                   (0xF0000000U)                                       /*!< SIM_SDID.FAMILYID Mask                  */
#define SIM_SDID_FAMILYID_SHIFT                  (28U)                                               /*!< SIM_SDID.FAMILYID Position              */
#define SIM_SDID_FAMILYID(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SDID_FAMILYID_SHIFT))&SIM_SDID_FAMILYID_MASK) /*!< SIM_SDID.FAMILYID Field                 */

/*! @name SCGC4 - System Clock Gating Control Register 4 */
#define SIM_SCGC4_EWM_MASK                       (0x2U)                                              /*!< SIM_SCGC4.EWM Mask                      */
#define SIM_SCGC4_EWM_SHIFT                      (1U)                                                /*!< SIM_SCGC4.EWM Position                  */
#define SIM_SCGC4_EWM(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_EWM_SHIFT))&SIM_SCGC4_EWM_MASK) /*!< SIM_SCGC4.EWM Field                     */
#define SIM_SCGC4_I2C0_MASK                      (0x40U)                                             /*!< SIM_SCGC4.I2C0 Mask                     */
#define SIM_SCGC4_I2C0_SHIFT                     (6U)                                                /*!< SIM_SCGC4.I2C0 Position                 */
#define SIM_SCGC4_I2C0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_I2C0_SHIFT))&SIM_SCGC4_I2C0_MASK) /*!< SIM_SCGC4.I2C0 Field                    */
#define SIM_SCGC4_UART0_MASK                     (0x400U)                                            /*!< SIM_SCGC4.UART0 Mask                    */
#define SIM_SCGC4_UART0_SHIFT                    (10U)                                               /*!< SIM_SCGC4.UART0 Position                */
#define SIM_SCGC4_UART0(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_UART0_SHIFT))&SIM_SCGC4_UART0_MASK) /*!< SIM_SCGC4.UART0 Field                   */
#define SIM_SCGC4_UART1_MASK                     (0x800U)                                            /*!< SIM_SCGC4.UART1 Mask                    */
#define SIM_SCGC4_UART1_SHIFT                    (11U)                                               /*!< SIM_SCGC4.UART1 Position                */
#define SIM_SCGC4_UART1(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_UART1_SHIFT))&SIM_SCGC4_UART1_MASK) /*!< SIM_SCGC4.UART1 Field                   */
#define SIM_SCGC4_CMP_MASK                       (0x80000U)                                          /*!< SIM_SCGC4.CMP Mask                      */
#define SIM_SCGC4_CMP_SHIFT                      (19U)                                               /*!< SIM_SCGC4.CMP Position                  */
#define SIM_SCGC4_CMP(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_CMP_SHIFT))&SIM_SCGC4_CMP_MASK) /*!< SIM_SCGC4.CMP Field                     */
#define SIM_SCGC4_eFlexPWM0_MASK                 (0x1000000U)                                        /*!< SIM_SCGC4.eFlexPWM0 Mask                */
#define SIM_SCGC4_eFlexPWM0_SHIFT                (24U)                                               /*!< SIM_SCGC4.eFlexPWM0 Position            */
#define SIM_SCGC4_eFlexPWM0(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_eFlexPWM0_SHIFT))&SIM_SCGC4_eFlexPWM0_MASK) /*!< SIM_SCGC4.eFlexPWM0 Field               */
#define SIM_SCGC4_eFlexPWM1_MASK                 (0x2000000U)                                        /*!< SIM_SCGC4.eFlexPWM1 Mask                */
#define SIM_SCGC4_eFlexPWM1_SHIFT                (25U)                                               /*!< SIM_SCGC4.eFlexPWM1 Position            */
#define SIM_SCGC4_eFlexPWM1(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_eFlexPWM1_SHIFT))&SIM_SCGC4_eFlexPWM1_MASK) /*!< SIM_SCGC4.eFlexPWM1 Field               */
#define SIM_SCGC4_eFlexPWM2_MASK                 (0x4000000U)                                        /*!< SIM_SCGC4.eFlexPWM2 Mask                */
#define SIM_SCGC4_eFlexPWM2_SHIFT                (26U)                                               /*!< SIM_SCGC4.eFlexPWM2 Position            */
#define SIM_SCGC4_eFlexPWM2(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_eFlexPWM2_SHIFT))&SIM_SCGC4_eFlexPWM2_MASK) /*!< SIM_SCGC4.eFlexPWM2 Field               */
#define SIM_SCGC4_eFlexPWM3_MASK                 (0x8000000U)                                        /*!< SIM_SCGC4.eFlexPWM3 Mask                */
#define SIM_SCGC4_eFlexPWM3_SHIFT                (27U)                                               /*!< SIM_SCGC4.eFlexPWM3 Position            */
#define SIM_SCGC4_eFlexPWM3(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_eFlexPWM3_SHIFT))&SIM_SCGC4_eFlexPWM3_MASK) /*!< SIM_SCGC4.eFlexPWM3 Field               */

/*! @name SCGC5 - System Clock Gating Control Register 5 */
#define SIM_SCGC5_LPTMR_MASK                     (0x1U)                                              /*!< SIM_SCGC5.LPTMR Mask                    */
#define SIM_SCGC5_LPTMR_SHIFT                    (0U)                                                /*!< SIM_SCGC5.LPTMR Position                */
#define SIM_SCGC5_LPTMR(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_LPTMR_SHIFT))&SIM_SCGC5_LPTMR_MASK) /*!< SIM_SCGC5.LPTMR Field                   */
#define SIM_SCGC5_PORTA_MASK                     (0x200U)                                            /*!< SIM_SCGC5.PORTA Mask                    */
#define SIM_SCGC5_PORTA_SHIFT                    (9U)                                                /*!< SIM_SCGC5.PORTA Position                */
#define SIM_SCGC5_PORTA(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_PORTA_SHIFT))&SIM_SCGC5_PORTA_MASK) /*!< SIM_SCGC5.PORTA Field                   */
#define SIM_SCGC5_PORTB_MASK                     (0x400U)                                            /*!< SIM_SCGC5.PORTB Mask                    */
#define SIM_SCGC5_PORTB_SHIFT                    (10U)                                               /*!< SIM_SCGC5.PORTB Position                */
#define SIM_SCGC5_PORTB(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_PORTB_SHIFT))&SIM_SCGC5_PORTB_MASK) /*!< SIM_SCGC5.PORTB Field                   */
#define SIM_SCGC5_PORTC_MASK                     (0x800U)                                            /*!< SIM_SCGC5.PORTC Mask                    */
#define SIM_SCGC5_PORTC_SHIFT                    (11U)                                               /*!< SIM_SCGC5.PORTC Position                */
#define SIM_SCGC5_PORTC(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_PORTC_SHIFT))&SIM_SCGC5_PORTC_MASK) /*!< SIM_SCGC5.PORTC Field                   */
#define SIM_SCGC5_PORTD_MASK                     (0x1000U)                                           /*!< SIM_SCGC5.PORTD Mask                    */
#define SIM_SCGC5_PORTD_SHIFT                    (12U)                                               /*!< SIM_SCGC5.PORTD Position                */
#define SIM_SCGC5_PORTD(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_PORTD_SHIFT))&SIM_SCGC5_PORTD_MASK) /*!< SIM_SCGC5.PORTD Field                   */
#define SIM_SCGC5_PORTE_MASK                     (0x2000U)                                           /*!< SIM_SCGC5.PORTE Mask                    */
#define SIM_SCGC5_PORTE_SHIFT                    (13U)                                               /*!< SIM_SCGC5.PORTE Position                */
#define SIM_SCGC5_PORTE(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_PORTE_SHIFT))&SIM_SCGC5_PORTE_MASK) /*!< SIM_SCGC5.PORTE Field                   */
#define SIM_SCGC5_ENC_MASK                       (0x200000U)                                         /*!< SIM_SCGC5.ENC Mask                      */
#define SIM_SCGC5_ENC_SHIFT                      (21U)                                               /*!< SIM_SCGC5.ENC Position                  */
#define SIM_SCGC5_ENC(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_ENC_SHIFT))&SIM_SCGC5_ENC_MASK) /*!< SIM_SCGC5.ENC Field                     */
#define SIM_SCGC5_XBARA_MASK                     (0x2000000U)                                        /*!< SIM_SCGC5.XBARA Mask                    */
#define SIM_SCGC5_XBARA_SHIFT                    (25U)                                               /*!< SIM_SCGC5.XBARA Position                */
#define SIM_SCGC5_XBARA(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_XBARA_SHIFT))&SIM_SCGC5_XBARA_MASK) /*!< SIM_SCGC5.XBARA Field                   */
#define SIM_SCGC5_XBARB_MASK                     (0x4000000U)                                        /*!< SIM_SCGC5.XBARB Mask                    */
#define SIM_SCGC5_XBARB_SHIFT                    (26U)                                               /*!< SIM_SCGC5.XBARB Position                */
#define SIM_SCGC5_XBARB(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_XBARB_SHIFT))&SIM_SCGC5_XBARB_MASK) /*!< SIM_SCGC5.XBARB Field                   */
#define SIM_SCGC5_AOI_MASK                       (0x8000000U)                                        /*!< SIM_SCGC5.AOI Mask                      */
#define SIM_SCGC5_AOI_SHIFT                      (27U)                                               /*!< SIM_SCGC5.AOI Position                  */
#define SIM_SCGC5_AOI(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_AOI_SHIFT))&SIM_SCGC5_AOI_MASK) /*!< SIM_SCGC5.AOI Field                     */
#define SIM_SCGC5_ADC_MASK                       (0x10000000U)                                       /*!< SIM_SCGC5.ADC Mask                      */
#define SIM_SCGC5_ADC_SHIFT                      (28U)                                               /*!< SIM_SCGC5.ADC Position                  */
#define SIM_SCGC5_ADC(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_ADC_SHIFT))&SIM_SCGC5_ADC_MASK) /*!< SIM_SCGC5.ADC Field                     */

/*! @name SCGC6 - System Clock Gating Control Register 6 */
#define SIM_SCGC6_FTF_MASK                       (0x1U)                                              /*!< SIM_SCGC6.FTF Mask                      */
#define SIM_SCGC6_FTF_SHIFT                      (0U)                                                /*!< SIM_SCGC6.FTF Position                  */
#define SIM_SCGC6_FTF(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_FTF_SHIFT))&SIM_SCGC6_FTF_MASK) /*!< SIM_SCGC6.FTF Field                     */
#define SIM_SCGC6_DMAMUX0_MASK                   (0x2U)                                              /*!< SIM_SCGC6.DMAMUX0 Mask                  */
#define SIM_SCGC6_DMAMUX0_SHIFT                  (1U)                                                /*!< SIM_SCGC6.DMAMUX0 Position              */
#define SIM_SCGC6_DMAMUX0(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_DMAMUX0_SHIFT))&SIM_SCGC6_DMAMUX0_MASK) /*!< SIM_SCGC6.DMAMUX0 Field                 */
#define SIM_SCGC6_CAN0_MASK                      (0x10U)                                             /*!< SIM_SCGC6.CAN0 Mask                     */
#define SIM_SCGC6_CAN0_SHIFT                     (4U)                                                /*!< SIM_SCGC6.CAN0 Position                 */
#define SIM_SCGC6_CAN0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_CAN0_SHIFT))&SIM_SCGC6_CAN0_MASK) /*!< SIM_SCGC6.CAN0 Field                    */
#define SIM_SCGC6_CAN1_MASK                      (0x20U)                                             /*!< SIM_SCGC6.CAN1 Mask                     */
#define SIM_SCGC6_CAN1_SHIFT                     (5U)                                                /*!< SIM_SCGC6.CAN1 Position                 */
#define SIM_SCGC6_CAN1(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_CAN1_SHIFT))&SIM_SCGC6_CAN1_MASK) /*!< SIM_SCGC6.CAN1 Field                    */
#define SIM_SCGC6_FTM3_MASK                      (0x40U)                                             /*!< SIM_SCGC6.FTM3 Mask                     */
#define SIM_SCGC6_FTM3_SHIFT                     (6U)                                                /*!< SIM_SCGC6.FTM3 Position                 */
#define SIM_SCGC6_FTM3(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_FTM3_SHIFT))&SIM_SCGC6_FTM3_MASK) /*!< SIM_SCGC6.FTM3 Field                    */
#define SIM_SCGC6_SPI0_MASK                      (0x1000U)                                           /*!< SIM_SCGC6.SPI0 Mask                     */
#define SIM_SCGC6_SPI0_SHIFT                     (12U)                                               /*!< SIM_SCGC6.SPI0 Position                 */
#define SIM_SCGC6_SPI0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_SPI0_SHIFT))&SIM_SCGC6_SPI0_MASK) /*!< SIM_SCGC6.SPI0 Field                    */
#define SIM_SCGC6_PDB1_MASK                      (0x20000U)                                          /*!< SIM_SCGC6.PDB1 Mask                     */
#define SIM_SCGC6_PDB1_SHIFT                     (17U)                                               /*!< SIM_SCGC6.PDB1 Position                 */
#define SIM_SCGC6_PDB1(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_PDB1_SHIFT))&SIM_SCGC6_PDB1_MASK) /*!< SIM_SCGC6.PDB1 Field                    */
#define SIM_SCGC6_CRC_MASK                       (0x40000U)                                          /*!< SIM_SCGC6.CRC Mask                      */
#define SIM_SCGC6_CRC_SHIFT                      (18U)                                               /*!< SIM_SCGC6.CRC Position                  */
#define SIM_SCGC6_CRC(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_CRC_SHIFT))&SIM_SCGC6_CRC_MASK) /*!< SIM_SCGC6.CRC Field                     */
#define SIM_SCGC6_PDB0_MASK                      (0x400000U)                                         /*!< SIM_SCGC6.PDB0 Mask                     */
#define SIM_SCGC6_PDB0_SHIFT                     (22U)                                               /*!< SIM_SCGC6.PDB0 Position                 */
#define SIM_SCGC6_PDB0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_PDB0_SHIFT))&SIM_SCGC6_PDB0_MASK) /*!< SIM_SCGC6.PDB0 Field                    */
#define SIM_SCGC6_PIT_MASK                       (0x800000U)                                         /*!< SIM_SCGC6.PIT Mask                      */
#define SIM_SCGC6_PIT_SHIFT                      (23U)                                               /*!< SIM_SCGC6.PIT Position                  */
#define SIM_SCGC6_PIT(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_PIT_SHIFT))&SIM_SCGC6_PIT_MASK) /*!< SIM_SCGC6.PIT Field                     */
#define SIM_SCGC6_FTM0_MASK                      (0x1000000U)                                        /*!< SIM_SCGC6.FTM0 Mask                     */
#define SIM_SCGC6_FTM0_SHIFT                     (24U)                                               /*!< SIM_SCGC6.FTM0 Position                 */
#define SIM_SCGC6_FTM0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_FTM0_SHIFT))&SIM_SCGC6_FTM0_MASK) /*!< SIM_SCGC6.FTM0 Field                    */
#define SIM_SCGC6_FTM1_MASK                      (0x2000000U)                                        /*!< SIM_SCGC6.FTM1 Mask                     */
#define SIM_SCGC6_FTM1_SHIFT                     (25U)                                               /*!< SIM_SCGC6.FTM1 Position                 */
#define SIM_SCGC6_FTM1(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_FTM1_SHIFT))&SIM_SCGC6_FTM1_MASK) /*!< SIM_SCGC6.FTM1 Field                    */
#define SIM_SCGC6_DAC0_MASK                      (0x80000000U)                                       /*!< SIM_SCGC6.DAC0 Mask                     */
#define SIM_SCGC6_DAC0_SHIFT                     (31U)                                               /*!< SIM_SCGC6.DAC0 Position                 */
#define SIM_SCGC6_DAC0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_DAC0_SHIFT))&SIM_SCGC6_DAC0_MASK) /*!< SIM_SCGC6.DAC0 Field                    */

/*! @name SCGC7 - System Clock Gating Control Register 7 */
#define SIM_SCGC7_DMA_MASK                       (0x100U)                                            /*!< SIM_SCGC7.DMA Mask                      */
#define SIM_SCGC7_DMA_SHIFT                      (8U)                                                /*!< SIM_SCGC7.DMA Position                  */
#define SIM_SCGC7_DMA(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC7_DMA_SHIFT))&SIM_SCGC7_DMA_MASK) /*!< SIM_SCGC7.DMA Field                     */

/*! @name CLKDIV1 - System Clock Divider Register 1 */
#define SIM_CLKDIV1_OUTDIV4_MASK                 (0xF0000U)                                          /*!< SIM_CLKDIV1.OUTDIV4 Mask                */
#define SIM_CLKDIV1_OUTDIV4_SHIFT                (16U)                                               /*!< SIM_CLKDIV1.OUTDIV4 Position            */
#define SIM_CLKDIV1_OUTDIV4(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV1_OUTDIV4_SHIFT))&SIM_CLKDIV1_OUTDIV4_MASK) /*!< SIM_CLKDIV1.OUTDIV4 Field               */
#define SIM_CLKDIV1_OUTDIV2_MASK                 (0xF000000U)                                        /*!< SIM_CLKDIV1.OUTDIV2 Mask                */
#define SIM_CLKDIV1_OUTDIV2_SHIFT                (24U)                                               /*!< SIM_CLKDIV1.OUTDIV2 Position            */
#define SIM_CLKDIV1_OUTDIV2(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV1_OUTDIV2_SHIFT))&SIM_CLKDIV1_OUTDIV2_MASK) /*!< SIM_CLKDIV1.OUTDIV2 Field               */
#define SIM_CLKDIV1_OUTDIV1_MASK                 (0xF0000000U)                                       /*!< SIM_CLKDIV1.OUTDIV1 Mask                */
#define SIM_CLKDIV1_OUTDIV1_SHIFT                (28U)                                               /*!< SIM_CLKDIV1.OUTDIV1 Position            */
#define SIM_CLKDIV1_OUTDIV1(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV1_OUTDIV1_SHIFT))&SIM_CLKDIV1_OUTDIV1_MASK) /*!< SIM_CLKDIV1.OUTDIV1 Field               */

/*! @name FCFG1 - Flash Configuration Register 1 */
#define SIM_FCFG1_FLASHDIS_MASK                  (0x1U)                                              /*!< SIM_FCFG1.FLASHDIS Mask                 */
#define SIM_FCFG1_FLASHDIS_SHIFT                 (0U)                                                /*!< SIM_FCFG1.FLASHDIS Position             */
#define SIM_FCFG1_FLASHDIS(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_FLASHDIS_SHIFT))&SIM_FCFG1_FLASHDIS_MASK) /*!< SIM_FCFG1.FLASHDIS Field                */
#define SIM_FCFG1_FLASHDOZE_MASK                 (0x2U)                                              /*!< SIM_FCFG1.FLASHDOZE Mask                */
#define SIM_FCFG1_FLASHDOZE_SHIFT                (1U)                                                /*!< SIM_FCFG1.FLASHDOZE Position            */
#define SIM_FCFG1_FLASHDOZE(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_FLASHDOZE_SHIFT))&SIM_FCFG1_FLASHDOZE_MASK) /*!< SIM_FCFG1.FLASHDOZE Field               */
#define SIM_FCFG1_PFSIZE_MASK                    (0xF000000U)                                        /*!< SIM_FCFG1.PFSIZE Mask                   */
#define SIM_FCFG1_PFSIZE_SHIFT                   (24U)                                               /*!< SIM_FCFG1.PFSIZE Position               */
#define SIM_FCFG1_PFSIZE(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_PFSIZE_SHIFT))&SIM_FCFG1_PFSIZE_MASK) /*!< SIM_FCFG1.PFSIZE Field                  */

/*! @name FCFG2 - Flash Configuration Register 2 */
#define SIM_FCFG2_MAXADDR0_MASK                  (0x7F000000U)                                       /*!< SIM_FCFG2.MAXADDR0 Mask                 */
#define SIM_FCFG2_MAXADDR0_SHIFT                 (24U)                                               /*!< SIM_FCFG2.MAXADDR0 Position             */
#define SIM_FCFG2_MAXADDR0(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_FCFG2_MAXADDR0_SHIFT))&SIM_FCFG2_MAXADDR0_MASK) /*!< SIM_FCFG2.MAXADDR0 Field                */

/*! @name UIDH - Unique Identification Register High */
#define SIM_UIDH_UID_MASK                        (0xFFFFFFFFU)                                       /*!< SIM_UIDH.UID Mask                       */
#define SIM_UIDH_UID_SHIFT                       (0U)                                                /*!< SIM_UIDH.UID Position                   */
#define SIM_UIDH_UID(x)                          (((uint32_t)(((uint32_t)(x))<<SIM_UIDH_UID_SHIFT))&SIM_UIDH_UID_MASK) /*!< SIM_UIDH.UID Field                      */

/*! @name UIDMH - Unique Identification Register Mid-High */
#define SIM_UIDMH_UID_MASK                       (0xFFFFFFFFU)                                       /*!< SIM_UIDMH.UID Mask                      */
#define SIM_UIDMH_UID_SHIFT                      (0U)                                                /*!< SIM_UIDMH.UID Position                  */
#define SIM_UIDMH_UID(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_UIDMH_UID_SHIFT))&SIM_UIDMH_UID_MASK) /*!< SIM_UIDMH.UID Field                     */

/*! @name UIDML - Unique Identification Register Mid Low */
#define SIM_UIDML_UID_MASK                       (0xFFFFFFFFU)                                       /*!< SIM_UIDML.UID Mask                      */
#define SIM_UIDML_UID_SHIFT                      (0U)                                                /*!< SIM_UIDML.UID Position                  */
#define SIM_UIDML_UID(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_UIDML_UID_SHIFT))&SIM_UIDML_UID_MASK) /*!< SIM_UIDML.UID Field                     */

/*! @name UIDL - Unique Identification Register Low */
#define SIM_UIDL_UID_MASK                        (0xFFFFFFFFU)                                       /*!< SIM_UIDL.UID Mask                       */
#define SIM_UIDL_UID_SHIFT                       (0U)                                                /*!< SIM_UIDL.UID Position                   */
#define SIM_UIDL_UID(x)                          (((uint32_t)(((uint32_t)(x))<<SIM_UIDL_UID_SHIFT))&SIM_UIDL_UID_MASK) /*!< SIM_UIDL.UID Field                      */

/*! @name CLKDIV4 - System Clock Divider Register 4 */
#define SIM_CLKDIV4_TRACEFRAC_MASK               (0x1U)                                              /*!< SIM_CLKDIV4.TRACEFRAC Mask              */
#define SIM_CLKDIV4_TRACEFRAC_SHIFT              (0U)                                                /*!< SIM_CLKDIV4.TRACEFRAC Position          */
#define SIM_CLKDIV4_TRACEFRAC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV4_TRACEFRAC_SHIFT))&SIM_CLKDIV4_TRACEFRAC_MASK) /*!< SIM_CLKDIV4.TRACEFRAC Field             */
#define SIM_CLKDIV4_TRACEDIV_MASK                (0xEU)                                              /*!< SIM_CLKDIV4.TRACEDIV Mask               */
#define SIM_CLKDIV4_TRACEDIV_SHIFT               (1U)                                                /*!< SIM_CLKDIV4.TRACEDIV Position           */
#define SIM_CLKDIV4_TRACEDIV(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV4_TRACEDIV_SHIFT))&SIM_CLKDIV4_TRACEDIV_MASK) /*!< SIM_CLKDIV4.TRACEDIV Field              */
#define SIM_CLKDIV4_TRACEDIVEN_MASK              (0x10000000U)                                       /*!< SIM_CLKDIV4.TRACEDIVEN Mask             */
#define SIM_CLKDIV4_TRACEDIVEN_SHIFT             (28U)                                               /*!< SIM_CLKDIV4.TRACEDIVEN Position         */
#define SIM_CLKDIV4_TRACEDIVEN(x)                (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV4_TRACEDIVEN_SHIFT))&SIM_CLKDIV4_TRACEDIVEN_MASK) /*!< SIM_CLKDIV4.TRACEDIVEN Field            */

/*! @name MISCTRL - Miscellaneous Control Register */
#define SIM_MISCTRL_CMPWIN0SRC_MASK              (0x300U)                                            /*!< SIM_MISCTRL.CMPWIN0SRC Mask             */
#define SIM_MISCTRL_CMPWIN0SRC_SHIFT             (8U)                                                /*!< SIM_MISCTRL.CMPWIN0SRC Position         */
#define SIM_MISCTRL_CMPWIN0SRC(x)                (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL_CMPWIN0SRC_SHIFT))&SIM_MISCTRL_CMPWIN0SRC_MASK) /*!< SIM_MISCTRL.CMPWIN0SRC Field            */
#define SIM_MISCTRL_CMPWIN1SRC_MASK              (0xC00U)                                            /*!< SIM_MISCTRL.CMPWIN1SRC Mask             */
#define SIM_MISCTRL_CMPWIN1SRC_SHIFT             (10U)                                               /*!< SIM_MISCTRL.CMPWIN1SRC Position         */
#define SIM_MISCTRL_CMPWIN1SRC(x)                (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL_CMPWIN1SRC_SHIFT))&SIM_MISCTRL_CMPWIN1SRC_MASK) /*!< SIM_MISCTRL.CMPWIN1SRC Field            */
#define SIM_MISCTRL_CMPWIN2SRC_MASK              (0x3000U)                                           /*!< SIM_MISCTRL.CMPWIN2SRC Mask             */
#define SIM_MISCTRL_CMPWIN2SRC_SHIFT             (12U)                                               /*!< SIM_MISCTRL.CMPWIN2SRC Position         */
#define SIM_MISCTRL_CMPWIN2SRC(x)                (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL_CMPWIN2SRC_SHIFT))&SIM_MISCTRL_CMPWIN2SRC_MASK) /*!< SIM_MISCTRL.CMPWIN2SRC Field            */
#define SIM_MISCTRL_CMPWIN3SRC_MASK              (0xC000U)                                           /*!< SIM_MISCTRL.CMPWIN3SRC Mask             */
#define SIM_MISCTRL_CMPWIN3SRC_SHIFT             (14U)                                               /*!< SIM_MISCTRL.CMPWIN3SRC Position         */
#define SIM_MISCTRL_CMPWIN3SRC(x)                (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL_CMPWIN3SRC_SHIFT))&SIM_MISCTRL_CMPWIN3SRC_MASK) /*!< SIM_MISCTRL.CMPWIN3SRC Field            */
#define SIM_MISCTRL_EWMINSRC_MASK                (0x10000U)                                          /*!< SIM_MISCTRL.EWMINSRC Mask               */
#define SIM_MISCTRL_EWMINSRC_SHIFT               (16U)                                               /*!< SIM_MISCTRL.EWMINSRC Position           */
#define SIM_MISCTRL_EWMINSRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL_EWMINSRC_SHIFT))&SIM_MISCTRL_EWMINSRC_MASK) /*!< SIM_MISCTRL.EWMINSRC Field              */
#define SIM_MISCTRL_DACTRIGSRC_MASK              (0xC0000U)                                          /*!< SIM_MISCTRL.DACTRIGSRC Mask             */
#define SIM_MISCTRL_DACTRIGSRC_SHIFT             (18U)                                               /*!< SIM_MISCTRL.DACTRIGSRC Position         */
#define SIM_MISCTRL_DACTRIGSRC(x)                (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL_DACTRIGSRC_SHIFT))&SIM_MISCTRL_DACTRIGSRC_MASK) /*!< SIM_MISCTRL.DACTRIGSRC Field            */

/*! @name MISCTRL2 - Miscellaneous Control Register 2 */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG0_MASK      (0x100U)                                            /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG0 Mask     */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG0_SHIFT     (8U)                                                /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG0 Position */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG0(x)        (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCXBARAPITTRIG0_SHIFT))&SIM_MISCTRL2_SYNCXBARAPITTRIG0_MASK) /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG0 Field    */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG1_MASK      (0x200U)                                            /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG1 Mask     */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG1_SHIFT     (9U)                                                /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG1 Position */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG1(x)        (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCXBARAPITTRIG1_SHIFT))&SIM_MISCTRL2_SYNCXBARAPITTRIG1_MASK) /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG1 Field    */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG2_MASK      (0x400U)                                            /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG2 Mask     */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG2_SHIFT     (10U)                                               /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG2 Position */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG2(x)        (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCXBARAPITTRIG2_SHIFT))&SIM_MISCTRL2_SYNCXBARAPITTRIG2_MASK) /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG2 Field    */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG3_MASK      (0x800U)                                            /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG3 Mask     */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG3_SHIFT     (11U)                                               /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG3 Position */
#define SIM_MISCTRL2_SYNCXBARAPITTRIG3(x)        (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCXBARAPITTRIG3_SHIFT))&SIM_MISCTRL2_SYNCXBARAPITTRIG3_MASK) /*!< SIM_MISCTRL2.SYNCXBARAPITTRIG3 Field    */
#define SIM_MISCTRL2_SYNCXBARBPITTRIG0_MASK      (0x1000U)                                           /*!< SIM_MISCTRL2.SYNCXBARBPITTRIG0 Mask     */
#define SIM_MISCTRL2_SYNCXBARBPITTRIG0_SHIFT     (12U)                                               /*!< SIM_MISCTRL2.SYNCXBARBPITTRIG0 Position */
#define SIM_MISCTRL2_SYNCXBARBPITTRIG0(x)        (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCXBARBPITTRIG0_SHIFT))&SIM_MISCTRL2_SYNCXBARBPITTRIG0_MASK) /*!< SIM_MISCTRL2.SYNCXBARBPITTRIG0 Field    */
#define SIM_MISCTRL2_SYNCXBARBPITTRIG1_MASK      (0x2000U)                                           /*!< SIM_MISCTRL2.SYNCXBARBPITTRIG1 Mask     */
#define SIM_MISCTRL2_SYNCXBARBPITTRIG1_SHIFT     (13U)                                               /*!< SIM_MISCTRL2.SYNCXBARBPITTRIG1 Position */
#define SIM_MISCTRL2_SYNCXBARBPITTRIG1(x)        (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCXBARBPITTRIG1_SHIFT))&SIM_MISCTRL2_SYNCXBARBPITTRIG1_MASK) /*!< SIM_MISCTRL2.SYNCXBARBPITTRIG1 Field    */
#define SIM_MISCTRL2_SYNCDACHWTRIG_MASK          (0x10000U)                                          /*!< SIM_MISCTRL2.SYNCDACHWTRIG Mask         */
#define SIM_MISCTRL2_SYNCDACHWTRIG_SHIFT         (16U)                                               /*!< SIM_MISCTRL2.SYNCDACHWTRIG Position     */
#define SIM_MISCTRL2_SYNCDACHWTRIG(x)            (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCDACHWTRIG_SHIFT))&SIM_MISCTRL2_SYNCDACHWTRIG_MASK) /*!< SIM_MISCTRL2.SYNCDACHWTRIG Field        */
#define SIM_MISCTRL2_SYNCEWMIN_MASK              (0x20000U)                                          /*!< SIM_MISCTRL2.SYNCEWMIN Mask             */
#define SIM_MISCTRL2_SYNCEWMIN_SHIFT             (17U)                                               /*!< SIM_MISCTRL2.SYNCEWMIN Position         */
#define SIM_MISCTRL2_SYNCEWMIN(x)                (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCEWMIN_SHIFT))&SIM_MISCTRL2_SYNCEWMIN_MASK) /*!< SIM_MISCTRL2.SYNCEWMIN Field            */
#define SIM_MISCTRL2_SYNCCMP0SAMPLEWIN_MASK      (0x100000U)                                         /*!< SIM_MISCTRL2.SYNCCMP0SAMPLEWIN Mask     */
#define SIM_MISCTRL2_SYNCCMP0SAMPLEWIN_SHIFT     (20U)                                               /*!< SIM_MISCTRL2.SYNCCMP0SAMPLEWIN Position */
#define SIM_MISCTRL2_SYNCCMP0SAMPLEWIN(x)        (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCCMP0SAMPLEWIN_SHIFT))&SIM_MISCTRL2_SYNCCMP0SAMPLEWIN_MASK) /*!< SIM_MISCTRL2.SYNCCMP0SAMPLEWIN Field    */
#define SIM_MISCTRL2_SYNCCMP1SAMPLEWIN_MASK      (0x200000U)                                         /*!< SIM_MISCTRL2.SYNCCMP1SAMPLEWIN Mask     */
#define SIM_MISCTRL2_SYNCCMP1SAMPLEWIN_SHIFT     (21U)                                               /*!< SIM_MISCTRL2.SYNCCMP1SAMPLEWIN Position */
#define SIM_MISCTRL2_SYNCCMP1SAMPLEWIN(x)        (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCCMP1SAMPLEWIN_SHIFT))&SIM_MISCTRL2_SYNCCMP1SAMPLEWIN_MASK) /*!< SIM_MISCTRL2.SYNCCMP1SAMPLEWIN Field    */
#define SIM_MISCTRL2_SYNCCMP2SAMPLEWIN_MASK      (0x400000U)                                         /*!< SIM_MISCTRL2.SYNCCMP2SAMPLEWIN Mask     */
#define SIM_MISCTRL2_SYNCCMP2SAMPLEWIN_SHIFT     (22U)                                               /*!< SIM_MISCTRL2.SYNCCMP2SAMPLEWIN Position */
#define SIM_MISCTRL2_SYNCCMP2SAMPLEWIN(x)        (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCCMP2SAMPLEWIN_SHIFT))&SIM_MISCTRL2_SYNCCMP2SAMPLEWIN_MASK) /*!< SIM_MISCTRL2.SYNCCMP2SAMPLEWIN Field    */
#define SIM_MISCTRL2_SYNCCMP3SAMPLEWIN_MASK      (0x800000U)                                         /*!< SIM_MISCTRL2.SYNCCMP3SAMPLEWIN Mask     */
#define SIM_MISCTRL2_SYNCCMP3SAMPLEWIN_SHIFT     (23U)                                               /*!< SIM_MISCTRL2.SYNCCMP3SAMPLEWIN Position */
#define SIM_MISCTRL2_SYNCCMP3SAMPLEWIN(x)        (((uint32_t)(((uint32_t)(x))<<SIM_MISCTRL2_SYNCCMP3SAMPLEWIN_SHIFT))&SIM_MISCTRL2_SYNCCMP3SAMPLEWIN_MASK) /*!< SIM_MISCTRL2.SYNCCMP3SAMPLEWIN Field    */

/*! @name WDOGC - WDOG Control Register */
#define SIM_WDOGC_WDOGCLKS_MASK                  (0x2U)                                              /*!< SIM_WDOGC.WDOGCLKS Mask                 */
#define SIM_WDOGC_WDOGCLKS_SHIFT                 (1U)                                                /*!< SIM_WDOGC.WDOGCLKS Position             */
#define SIM_WDOGC_WDOGCLKS(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_WDOGC_WDOGCLKS_SHIFT))&SIM_WDOGC_WDOGCLKS_MASK) /*!< SIM_WDOGC.WDOGCLKS Field                */

/*! @name PWRC - Power Control Register */
#define SIM_PWRC_SRPDN_MASK                      (0x3U)                                              /*!< SIM_PWRC.SRPDN Mask                     */
#define SIM_PWRC_SRPDN_SHIFT                     (0U)                                                /*!< SIM_PWRC.SRPDN Position                 */
#define SIM_PWRC_SRPDN(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_PWRC_SRPDN_SHIFT))&SIM_PWRC_SRPDN_MASK) /*!< SIM_PWRC.SRPDN Field                    */
#define SIM_PWRC_SR27STDBY_MASK                  (0xCU)                                              /*!< SIM_PWRC.SR27STDBY Mask                 */
#define SIM_PWRC_SR27STDBY_SHIFT                 (2U)                                                /*!< SIM_PWRC.SR27STDBY Position             */
#define SIM_PWRC_SR27STDBY(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_PWRC_SR27STDBY_SHIFT))&SIM_PWRC_SR27STDBY_MASK) /*!< SIM_PWRC.SR27STDBY Field                */
#define SIM_PWRC_SR12STDBY_MASK                  (0xC0U)                                             /*!< SIM_PWRC.SR12STDBY Mask                 */
#define SIM_PWRC_SR12STDBY_SHIFT                 (6U)                                                /*!< SIM_PWRC.SR12STDBY Position             */
#define SIM_PWRC_SR12STDBY(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_PWRC_SR12STDBY_SHIFT))&SIM_PWRC_SR12STDBY_MASK) /*!< SIM_PWRC.SR12STDBY Field                */
#define SIM_PWRC_SRPWRDETEN_MASK                 (0x100U)                                            /*!< SIM_PWRC.SRPWRDETEN Mask                */
#define SIM_PWRC_SRPWRDETEN_SHIFT                (8U)                                                /*!< SIM_PWRC.SRPWRDETEN Position            */
#define SIM_PWRC_SRPWRDETEN(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_PWRC_SRPWRDETEN_SHIFT))&SIM_PWRC_SRPWRDETEN_MASK) /*!< SIM_PWRC.SRPWRDETEN Field               */
#define SIM_PWRC_SRPWRRDY_MASK                   (0x200U)                                            /*!< SIM_PWRC.SRPWRRDY Mask                  */
#define SIM_PWRC_SRPWRRDY_SHIFT                  (9U)                                                /*!< SIM_PWRC.SRPWRRDY Position              */
#define SIM_PWRC_SRPWRRDY(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_PWRC_SRPWRRDY_SHIFT))&SIM_PWRC_SRPWRRDY_MASK) /*!< SIM_PWRC.SRPWRRDY Field                 */
#define SIM_PWRC_SRPWROK_MASK                    (0x10000U)                                          /*!< SIM_PWRC.SRPWROK Mask                   */
#define SIM_PWRC_SRPWROK_SHIFT                   (16U)                                               /*!< SIM_PWRC.SRPWROK Position               */
#define SIM_PWRC_SRPWROK(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_PWRC_SRPWROK_SHIFT))&SIM_PWRC_SRPWROK_MASK) /*!< SIM_PWRC.SRPWROK Field                  */

/*! @name ADCOPT - ADC Channel 6/7 Mux Control Register */
#define SIM_ADCOPT_ADCACH6SEL_MASK               (0x7U)                                              /*!< SIM_ADCOPT.ADCACH6SEL Mask              */
#define SIM_ADCOPT_ADCACH6SEL_SHIFT              (0U)                                                /*!< SIM_ADCOPT.ADCACH6SEL Position          */
#define SIM_ADCOPT_ADCACH6SEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADCACH6SEL_SHIFT))&SIM_ADCOPT_ADCACH6SEL_MASK) /*!< SIM_ADCOPT.ADCACH6SEL Field             */
#define SIM_ADCOPT_ADCACH7SEL_MASK               (0x70U)                                             /*!< SIM_ADCOPT.ADCACH7SEL Mask              */
#define SIM_ADCOPT_ADCACH7SEL_SHIFT              (4U)                                                /*!< SIM_ADCOPT.ADCACH7SEL Position          */
#define SIM_ADCOPT_ADCACH7SEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADCACH7SEL_SHIFT))&SIM_ADCOPT_ADCACH7SEL_MASK) /*!< SIM_ADCOPT.ADCACH7SEL Field             */
#define SIM_ADCOPT_ADCBCH6SEL_MASK               (0x700U)                                            /*!< SIM_ADCOPT.ADCBCH6SEL Mask              */
#define SIM_ADCOPT_ADCBCH6SEL_SHIFT              (8U)                                                /*!< SIM_ADCOPT.ADCBCH6SEL Position          */
#define SIM_ADCOPT_ADCBCH6SEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADCBCH6SEL_SHIFT))&SIM_ADCOPT_ADCBCH6SEL_MASK) /*!< SIM_ADCOPT.ADCBCH6SEL Field             */
#define SIM_ADCOPT_ADCBCH7SEL_MASK               (0x7000U)                                           /*!< SIM_ADCOPT.ADCBCH7SEL Mask              */
#define SIM_ADCOPT_ADCBCH7SEL_SHIFT              (12U)                                               /*!< SIM_ADCOPT.ADCBCH7SEL Position          */
#define SIM_ADCOPT_ADCBCH7SEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADCBCH7SEL_SHIFT))&SIM_ADCOPT_ADCBCH7SEL_MASK) /*!< SIM_ADCOPT.ADCBCH7SEL Field             */
#define SIM_ADCOPT_ROSB_MASK                     (0x1000000U)                                        /*!< SIM_ADCOPT.ROSB Mask                    */
#define SIM_ADCOPT_ROSB_SHIFT                    (24U)                                               /*!< SIM_ADCOPT.ROSB Position                */
#define SIM_ADCOPT_ROSB(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ROSB_SHIFT))&SIM_ADCOPT_ROSB_MASK) /*!< SIM_ADCOPT.ROSB Field                   */
#define SIM_ADCOPT_ADCIRCLK_MASK                 (0x2000000U)                                        /*!< SIM_ADCOPT.ADCIRCLK Mask                */
#define SIM_ADCOPT_ADCIRCLK_SHIFT                (25U)                                               /*!< SIM_ADCOPT.ADCIRCLK Position            */
#define SIM_ADCOPT_ADCIRCLK(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_ADCOPT_ADCIRCLK_SHIFT))&SIM_ADCOPT_ADCIRCLK_MASK) /*!< SIM_ADCOPT.ADCIRCLK Field               */
/**
 * @} */ /* End group SIM_Register_Masks_GROUP 
 */

/* SIM - Peripheral instance base addresses */
#define SIM_BasePtr                    0x40047000UL //!< Peripheral base address
#define SIM                            ((SIM_Type *) SIM_BasePtr) //!< Freescale base pointer
#define SIM_BASE_PTR                   (SIM) //!< Freescale style base pointer
/**
 * @} */ /* End group SIM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup SMC_Peripheral_access_layer_GROUP SMC Peripheral Access Layer
* @brief C Struct for SMC
* @{
*/

/* ================================================================================ */
/* ================           SMC (file:SMC_MKV40F15)              ================ */
/* ================================================================================ */

/**
 * @brief System Mode Controller
 */
/**
* @addtogroup SMC_structs_GROUP SMC struct
* @brief Struct for SMC
* @{
*/
typedef struct SMC_Type {
   __IO uint8_t   PMPROT;                       /**< 0000: Power Mode Protection Register                               */
   __IO uint8_t   PMCTRL;                       /**< 0001: Power Mode Control Register                                  */
   __IO uint8_t   STOPCTRL;                     /**< 0002: Stop Control Register                                        */
   __I  uint8_t   PMSTAT;                       /**< 0003: Power Mode Status Register                                   */
} SMC_Type;

/**
 * @} */ /* End group SMC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'SMC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup SMC_Register_Masks_GROUP SMC Register Masks
* @brief Register Masks for SMC
* @{
*/

/*! @name PMPROT - Power Mode Protection Register */
#define SMC_PMPROT_AVLLS_MASK                    (0x2U)                                              /*!< SMC_PMPROT.AVLLS Mask                   */
#define SMC_PMPROT_AVLLS_SHIFT                   (1U)                                                /*!< SMC_PMPROT.AVLLS Position               */
#define SMC_PMPROT_AVLLS(x)                      (((uint8_t)(((uint8_t)(x))<<SMC_PMPROT_AVLLS_SHIFT))&SMC_PMPROT_AVLLS_MASK) /*!< SMC_PMPROT.AVLLS Field                  */
#define SMC_PMPROT_AVLP_MASK                     (0x20U)                                             /*!< SMC_PMPROT.AVLP Mask                    */
#define SMC_PMPROT_AVLP_SHIFT                    (5U)                                                /*!< SMC_PMPROT.AVLP Position                */
#define SMC_PMPROT_AVLP(x)                       (((uint8_t)(((uint8_t)(x))<<SMC_PMPROT_AVLP_SHIFT))&SMC_PMPROT_AVLP_MASK) /*!< SMC_PMPROT.AVLP Field                   */
#define SMC_PMPROT_AHSRUN_MASK                   (0x80U)                                             /*!< SMC_PMPROT.AHSRUN Mask                  */
#define SMC_PMPROT_AHSRUN_SHIFT                  (7U)                                                /*!< SMC_PMPROT.AHSRUN Position              */
#define SMC_PMPROT_AHSRUN(x)                     (((uint8_t)(((uint8_t)(x))<<SMC_PMPROT_AHSRUN_SHIFT))&SMC_PMPROT_AHSRUN_MASK) /*!< SMC_PMPROT.AHSRUN Field                 */

/*! @name PMCTRL - Power Mode Control Register */
#define SMC_PMCTRL_STOPM_MASK                    (0x7U)                                              /*!< SMC_PMCTRL.STOPM Mask                   */
#define SMC_PMCTRL_STOPM_SHIFT                   (0U)                                                /*!< SMC_PMCTRL.STOPM Position               */
#define SMC_PMCTRL_STOPM(x)                      (((uint8_t)(((uint8_t)(x))<<SMC_PMCTRL_STOPM_SHIFT))&SMC_PMCTRL_STOPM_MASK) /*!< SMC_PMCTRL.STOPM Field                  */
#define SMC_PMCTRL_STOPA_MASK                    (0x8U)                                              /*!< SMC_PMCTRL.STOPA Mask                   */
#define SMC_PMCTRL_STOPA_SHIFT                   (3U)                                                /*!< SMC_PMCTRL.STOPA Position               */
#define SMC_PMCTRL_STOPA(x)                      (((uint8_t)(((uint8_t)(x))<<SMC_PMCTRL_STOPA_SHIFT))&SMC_PMCTRL_STOPA_MASK) /*!< SMC_PMCTRL.STOPA Field                  */
#define SMC_PMCTRL_RUNM_MASK                     (0x60U)                                             /*!< SMC_PMCTRL.RUNM Mask                    */
#define SMC_PMCTRL_RUNM_SHIFT                    (5U)                                                /*!< SMC_PMCTRL.RUNM Position                */
#define SMC_PMCTRL_RUNM(x)                       (((uint8_t)(((uint8_t)(x))<<SMC_PMCTRL_RUNM_SHIFT))&SMC_PMCTRL_RUNM_MASK) /*!< SMC_PMCTRL.RUNM Field                   */

/*! @name STOPCTRL - Stop Control Register */
#define SMC_STOPCTRL_VLLSM_MASK                  (0x7U)                                              /*!< SMC_STOPCTRL.VLLSM Mask                 */
#define SMC_STOPCTRL_VLLSM_SHIFT                 (0U)                                                /*!< SMC_STOPCTRL.VLLSM Position             */
#define SMC_STOPCTRL_VLLSM(x)                    (((uint8_t)(((uint8_t)(x))<<SMC_STOPCTRL_VLLSM_SHIFT))&SMC_STOPCTRL_VLLSM_MASK) /*!< SMC_STOPCTRL.VLLSM Field                */
#define SMC_STOPCTRL_LPOPO_MASK                  (0x8U)                                              /*!< SMC_STOPCTRL.LPOPO Mask                 */
#define SMC_STOPCTRL_LPOPO_SHIFT                 (3U)                                                /*!< SMC_STOPCTRL.LPOPO Position             */
#define SMC_STOPCTRL_LPOPO(x)                    (((uint8_t)(((uint8_t)(x))<<SMC_STOPCTRL_LPOPO_SHIFT))&SMC_STOPCTRL_LPOPO_MASK) /*!< SMC_STOPCTRL.LPOPO Field                */
#define SMC_STOPCTRL_RAM2PO_MASK                 (0x10U)                                             /*!< SMC_STOPCTRL.RAM2PO Mask                */
#define SMC_STOPCTRL_RAM2PO_SHIFT                (4U)                                                /*!< SMC_STOPCTRL.RAM2PO Position            */
#define SMC_STOPCTRL_RAM2PO(x)                   (((uint8_t)(((uint8_t)(x))<<SMC_STOPCTRL_RAM2PO_SHIFT))&SMC_STOPCTRL_RAM2PO_MASK) /*!< SMC_STOPCTRL.RAM2PO Field               */
#define SMC_STOPCTRL_PORPO_MASK                  (0x20U)                                             /*!< SMC_STOPCTRL.PORPO Mask                 */
#define SMC_STOPCTRL_PORPO_SHIFT                 (5U)                                                /*!< SMC_STOPCTRL.PORPO Position             */
#define SMC_STOPCTRL_PORPO(x)                    (((uint8_t)(((uint8_t)(x))<<SMC_STOPCTRL_PORPO_SHIFT))&SMC_STOPCTRL_PORPO_MASK) /*!< SMC_STOPCTRL.PORPO Field                */
#define SMC_STOPCTRL_PSTOPO_MASK                 (0xC0U)                                             /*!< SMC_STOPCTRL.PSTOPO Mask                */
#define SMC_STOPCTRL_PSTOPO_SHIFT                (6U)                                                /*!< SMC_STOPCTRL.PSTOPO Position            */
#define SMC_STOPCTRL_PSTOPO(x)                   (((uint8_t)(((uint8_t)(x))<<SMC_STOPCTRL_PSTOPO_SHIFT))&SMC_STOPCTRL_PSTOPO_MASK) /*!< SMC_STOPCTRL.PSTOPO Field               */

/*! @name PMSTAT - Power Mode Status Register */
#define SMC_PMSTAT_PMSTAT_MASK                   (0xFFU)                                             /*!< SMC_PMSTAT.PMSTAT Mask                  */
#define SMC_PMSTAT_PMSTAT_SHIFT                  (0U)                                                /*!< SMC_PMSTAT.PMSTAT Position              */
#define SMC_PMSTAT_PMSTAT(x)                     (((uint8_t)(((uint8_t)(x))<<SMC_PMSTAT_PMSTAT_SHIFT))&SMC_PMSTAT_PMSTAT_MASK) /*!< SMC_PMSTAT.PMSTAT Field                 */
/**
 * @} */ /* End group SMC_Register_Masks_GROUP 
 */

/* SMC - Peripheral instance base addresses */
#define SMC_BasePtr                    0x4007E000UL //!< Peripheral base address
#define SMC                            ((SMC_Type *) SMC_BasePtr) //!< Freescale base pointer
#define SMC_BASE_PTR                   (SMC) //!< Freescale style base pointer
/**
 * @} */ /* End group SMC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup SPI_Peripheral_access_layer_GROUP SPI Peripheral Access Layer
* @brief C Struct for SPI
* @{
*/

/* ================================================================================ */
/* ================           SPI0 (file:SPI0_PCSIS6_SREX_PCSSE_MKV)       ================ */
/* ================================================================================ */

/**
 * @brief Serial Peripheral Interface
 */
/**
* @addtogroup SPI_structs_GROUP SPI struct
* @brief Struct for SPI
* @{
*/
typedef struct SPI_Type {
   __IO uint32_t  MCR;                          /**< 0000: Module Configuration Register                                */
        uint8_t   RESERVED_0[4];                /**< 0004: 0x4 bytes                                                    */
   __IO uint32_t  TCR;                          /**< 0008: Transfer Count Register                                      */
   union {                                      /**< 000C: (size=0008)                                                  */
      __IO uint32_t  CTAR[2];                   /**< 000C: Clock and Transfer Attributes Register (In Master Mode)      */
      __IO uint32_t  CTAR_SLAVE;                /**< 000C: Clock and Transfer Attributes Register (In Slave Mode)       */
   };
        uint8_t   RESERVED_1[24];               /**< 0014: 0x18 bytes                                                   */
   __IO uint32_t  SR;                           /**< 002C: Status register                                              */
   __IO uint32_t  RSER;                         /**< 0030: DMA/Interrupt Request Select and Enable Register             */
   union {                                      /**< 0034: (size=0004)                                                  */
      __IO uint32_t  PUSHR;                     /**< 0034: PUSH TX FIFO Register In Master Mode                         */
      __IO uint32_t  PUSHR_SLAVE;               /**< 0034: PUSH TX FIFO Register In Slave Mode                          */
   };
   __I  uint32_t  POPR;                         /**< 0038: POP RX FIFO Register                                         */
   __I  uint32_t  TXFR[4];                      /**< 003C: Transmit FIFO                                                */
        uint8_t   RESERVED_2[48];               /**< 004C: 0x30 bytes                                                   */
   __I  uint32_t  RXFR[4];                      /**< 007C: Receive FIFO                                                 */
        uint8_t   RESERVED_3[176];              /**< 008C: 0xB0 bytes                                                   */
   __IO uint32_t  SREX;                         /**< 013C: Status register Extended                                     */
} SPI_Type;

/**
 * @} */ /* End group SPI_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'SPI0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup SPI_Register_Masks_GROUP SPI Register Masks
* @brief Register Masks for SPI
* @{
*/

/*! @name MCR - Module Configuration Register */
#define SPI_MCR_HALT_MASK                        (0x1U)                                              /*!< SPI0_MCR.HALT Mask                      */
#define SPI_MCR_HALT_SHIFT                       (0U)                                                /*!< SPI0_MCR.HALT Position                  */
#define SPI_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_HALT_SHIFT))&SPI_MCR_HALT_MASK) /*!< SPI0_MCR.HALT Field                     */
#define SPI_MCR_SMPL_PT_MASK                     (0x300U)                                            /*!< SPI0_MCR.SMPL_PT Mask                   */
#define SPI_MCR_SMPL_PT_SHIFT                    (8U)                                                /*!< SPI0_MCR.SMPL_PT Position               */
#define SPI_MCR_SMPL_PT(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_SMPL_PT_SHIFT))&SPI_MCR_SMPL_PT_MASK) /*!< SPI0_MCR.SMPL_PT Field                  */
#define SPI_MCR_CLR_RXF_MASK                     (0x400U)                                            /*!< SPI0_MCR.CLR_RXF Mask                   */
#define SPI_MCR_CLR_RXF_SHIFT                    (10U)                                               /*!< SPI0_MCR.CLR_RXF Position               */
#define SPI_MCR_CLR_RXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CLR_RXF_SHIFT))&SPI_MCR_CLR_RXF_MASK) /*!< SPI0_MCR.CLR_RXF Field                  */
#define SPI_MCR_CLR_TXF_MASK                     (0x800U)                                            /*!< SPI0_MCR.CLR_TXF Mask                   */
#define SPI_MCR_CLR_TXF_SHIFT                    (11U)                                               /*!< SPI0_MCR.CLR_TXF Position               */
#define SPI_MCR_CLR_TXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CLR_TXF_SHIFT))&SPI_MCR_CLR_TXF_MASK) /*!< SPI0_MCR.CLR_TXF Field                  */
#define SPI_MCR_DIS_RXF_MASK                     (0x1000U)                                           /*!< SPI0_MCR.DIS_RXF Mask                   */
#define SPI_MCR_DIS_RXF_SHIFT                    (12U)                                               /*!< SPI0_MCR.DIS_RXF Position               */
#define SPI_MCR_DIS_RXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DIS_RXF_SHIFT))&SPI_MCR_DIS_RXF_MASK) /*!< SPI0_MCR.DIS_RXF Field                  */
#define SPI_MCR_DIS_TXF_MASK                     (0x2000U)                                           /*!< SPI0_MCR.DIS_TXF Mask                   */
#define SPI_MCR_DIS_TXF_SHIFT                    (13U)                                               /*!< SPI0_MCR.DIS_TXF Position               */
#define SPI_MCR_DIS_TXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DIS_TXF_SHIFT))&SPI_MCR_DIS_TXF_MASK) /*!< SPI0_MCR.DIS_TXF Field                  */
#define SPI_MCR_MDIS_MASK                        (0x4000U)                                           /*!< SPI0_MCR.MDIS Mask                      */
#define SPI_MCR_MDIS_SHIFT                       (14U)                                               /*!< SPI0_MCR.MDIS Position                  */
#define SPI_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MDIS_SHIFT))&SPI_MCR_MDIS_MASK) /*!< SPI0_MCR.MDIS Field                     */
#define SPI_MCR_DOZE_MASK                        (0x8000U)                                           /*!< SPI0_MCR.DOZE Mask                      */
#define SPI_MCR_DOZE_SHIFT                       (15U)                                               /*!< SPI0_MCR.DOZE Position                  */
#define SPI_MCR_DOZE(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DOZE_SHIFT))&SPI_MCR_DOZE_MASK) /*!< SPI0_MCR.DOZE Field                     */
#define SPI_MCR_PCSIS_MASK                       (0x3F0000U)                                         /*!< SPI0_MCR.PCSIS Mask                     */
#define SPI_MCR_PCSIS_SHIFT                      (16U)                                               /*!< SPI0_MCR.PCSIS Position                 */
#define SPI_MCR_PCSIS(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_PCSIS_SHIFT))&SPI_MCR_PCSIS_MASK) /*!< SPI0_MCR.PCSIS Field                    */
#define SPI_MCR_ROOE_MASK                        (0x1000000U)                                        /*!< SPI0_MCR.ROOE Mask                      */
#define SPI_MCR_ROOE_SHIFT                       (24U)                                               /*!< SPI0_MCR.ROOE Position                  */
#define SPI_MCR_ROOE(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_ROOE_SHIFT))&SPI_MCR_ROOE_MASK) /*!< SPI0_MCR.ROOE Field                     */
#define SPI_MCR_PCSSE_MASK                       (0x2000000U)                                        /*!< SPI0_MCR.PCSSE Mask                     */
#define SPI_MCR_PCSSE_SHIFT                      (25U)                                               /*!< SPI0_MCR.PCSSE Position                 */
#define SPI_MCR_PCSSE(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_PCSSE_SHIFT))&SPI_MCR_PCSSE_MASK) /*!< SPI0_MCR.PCSSE Field                    */
#define SPI_MCR_MTFE_MASK                        (0x4000000U)                                        /*!< SPI0_MCR.MTFE Mask                      */
#define SPI_MCR_MTFE_SHIFT                       (26U)                                               /*!< SPI0_MCR.MTFE Position                  */
#define SPI_MCR_MTFE(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MTFE_SHIFT))&SPI_MCR_MTFE_MASK) /*!< SPI0_MCR.MTFE Field                     */
#define SPI_MCR_FRZ_MASK                         (0x8000000U)                                        /*!< SPI0_MCR.FRZ Mask                       */
#define SPI_MCR_FRZ_SHIFT                        (27U)                                               /*!< SPI0_MCR.FRZ Position                   */
#define SPI_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_MCR_FRZ_SHIFT))&SPI_MCR_FRZ_MASK) /*!< SPI0_MCR.FRZ Field                      */
#define SPI_MCR_DCONF_MASK                       (0x30000000U)                                       /*!< SPI0_MCR.DCONF Mask                     */
#define SPI_MCR_DCONF_SHIFT                      (28U)                                               /*!< SPI0_MCR.DCONF Position                 */
#define SPI_MCR_DCONF(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DCONF_SHIFT))&SPI_MCR_DCONF_MASK) /*!< SPI0_MCR.DCONF Field                    */
#define SPI_MCR_CONT_SCKE_MASK                   (0x40000000U)                                       /*!< SPI0_MCR.CONT_SCKE Mask                 */
#define SPI_MCR_CONT_SCKE_SHIFT                  (30U)                                               /*!< SPI0_MCR.CONT_SCKE Position             */
#define SPI_MCR_CONT_SCKE(x)                     (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CONT_SCKE_SHIFT))&SPI_MCR_CONT_SCKE_MASK) /*!< SPI0_MCR.CONT_SCKE Field                */
#define SPI_MCR_MSTR_MASK                        (0x80000000U)                                       /*!< SPI0_MCR.MSTR Mask                      */
#define SPI_MCR_MSTR_SHIFT                       (31U)                                               /*!< SPI0_MCR.MSTR Position                  */
#define SPI_MCR_MSTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MSTR_SHIFT))&SPI_MCR_MSTR_MASK) /*!< SPI0_MCR.MSTR Field                     */

/*! @name TCR - Transfer Count Register */
#define SPI_TCR_SPI_TCNT_MASK                    (0xFFFF0000U)                                       /*!< SPI0_TCR.SPI_TCNT Mask                  */
#define SPI_TCR_SPI_TCNT_SHIFT                   (16U)                                               /*!< SPI0_TCR.SPI_TCNT Position              */
#define SPI_TCR_SPI_TCNT(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_TCR_SPI_TCNT_SHIFT))&SPI_TCR_SPI_TCNT_MASK) /*!< SPI0_TCR.SPI_TCNT Field                 */

/*! @name CTAR - Clock and Transfer Attributes Register (In Master Mode) */
#define SPI_CTAR_BR_MASK                         (0xFU)                                              /*!< SPI0_CTAR.BR Mask                       */
#define SPI_CTAR_BR_SHIFT                        (0U)                                                /*!< SPI0_CTAR.BR Position                   */
#define SPI_CTAR_BR(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_BR_SHIFT))&SPI_CTAR_BR_MASK) /*!< SPI0_CTAR.BR Field                      */
#define SPI_CTAR_DT_MASK                         (0xF0U)                                             /*!< SPI0_CTAR.DT Mask                       */
#define SPI_CTAR_DT_SHIFT                        (4U)                                                /*!< SPI0_CTAR.DT Position                   */
#define SPI_CTAR_DT(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_DT_SHIFT))&SPI_CTAR_DT_MASK) /*!< SPI0_CTAR.DT Field                      */
#define SPI_CTAR_ASC_MASK                        (0xF00U)                                            /*!< SPI0_CTAR.ASC Mask                      */
#define SPI_CTAR_ASC_SHIFT                       (8U)                                                /*!< SPI0_CTAR.ASC Position                  */
#define SPI_CTAR_ASC(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_ASC_SHIFT))&SPI_CTAR_ASC_MASK) /*!< SPI0_CTAR.ASC Field                     */
#define SPI_CTAR_CSSCK_MASK                      (0xF000U)                                           /*!< SPI0_CTAR.CSSCK Mask                    */
#define SPI_CTAR_CSSCK_SHIFT                     (12U)                                               /*!< SPI0_CTAR.CSSCK Position                */
#define SPI_CTAR_CSSCK(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CSSCK_SHIFT))&SPI_CTAR_CSSCK_MASK) /*!< SPI0_CTAR.CSSCK Field                   */
#define SPI_CTAR_PBR_MASK                        (0x30000U)                                          /*!< SPI0_CTAR.PBR Mask                      */
#define SPI_CTAR_PBR_SHIFT                       (16U)                                               /*!< SPI0_CTAR.PBR Position                  */
#define SPI_CTAR_PBR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PBR_SHIFT))&SPI_CTAR_PBR_MASK) /*!< SPI0_CTAR.PBR Field                     */
#define SPI_CTAR_PDT_MASK                        (0xC0000U)                                          /*!< SPI0_CTAR.PDT Mask                      */
#define SPI_CTAR_PDT_SHIFT                       (18U)                                               /*!< SPI0_CTAR.PDT Position                  */
#define SPI_CTAR_PDT(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PDT_SHIFT))&SPI_CTAR_PDT_MASK) /*!< SPI0_CTAR.PDT Field                     */
#define SPI_CTAR_PASC_MASK                       (0x300000U)                                         /*!< SPI0_CTAR.PASC Mask                     */
#define SPI_CTAR_PASC_SHIFT                      (20U)                                               /*!< SPI0_CTAR.PASC Position                 */
#define SPI_CTAR_PASC(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PASC_SHIFT))&SPI_CTAR_PASC_MASK) /*!< SPI0_CTAR.PASC Field                    */
#define SPI_CTAR_PCSSCK_MASK                     (0xC00000U)                                         /*!< SPI0_CTAR.PCSSCK Mask                   */
#define SPI_CTAR_PCSSCK_SHIFT                    (22U)                                               /*!< SPI0_CTAR.PCSSCK Position               */
#define SPI_CTAR_PCSSCK(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PCSSCK_SHIFT))&SPI_CTAR_PCSSCK_MASK) /*!< SPI0_CTAR.PCSSCK Field                  */
#define SPI_CTAR_LSBFE_MASK                      (0x1000000U)                                        /*!< SPI0_CTAR.LSBFE Mask                    */
#define SPI_CTAR_LSBFE_SHIFT                     (24U)                                               /*!< SPI0_CTAR.LSBFE Position                */
#define SPI_CTAR_LSBFE(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_LSBFE_SHIFT))&SPI_CTAR_LSBFE_MASK) /*!< SPI0_CTAR.LSBFE Field                   */
#define SPI_CTAR_MODE_MASK                       (0x6000000U)                                        /*!< SPI0_CTAR.MODE Mask                     */
#define SPI_CTAR_MODE_SHIFT                      (25U)                                               /*!< SPI0_CTAR.MODE Position                 */
#define SPI_CTAR_MODE(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_MODE_SHIFT))&SPI_CTAR_MODE_MASK) /*!< SPI0_CTAR.MODE Field                    */
#define SPI_CTAR_CPHA_MASK                       (0x2000000U)                                        /*!< SPI0_CTAR.CPHA Mask                     */
#define SPI_CTAR_CPHA_SHIFT                      (25U)                                               /*!< SPI0_CTAR.CPHA Position                 */
#define SPI_CTAR_CPHA(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CPHA_SHIFT))&SPI_CTAR_CPHA_MASK) /*!< SPI0_CTAR.CPHA Field                    */
#define SPI_CTAR_CPOL_MASK                       (0x4000000U)                                        /*!< SPI0_CTAR.CPOL Mask                     */
#define SPI_CTAR_CPOL_SHIFT                      (26U)                                               /*!< SPI0_CTAR.CPOL Position                 */
#define SPI_CTAR_CPOL(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CPOL_SHIFT))&SPI_CTAR_CPOL_MASK) /*!< SPI0_CTAR.CPOL Field                    */
#define SPI_CTAR_FMSZ_MASK                       (0x78000000U)                                       /*!< SPI0_CTAR.FMSZ Mask                     */
#define SPI_CTAR_FMSZ_SHIFT                      (27U)                                               /*!< SPI0_CTAR.FMSZ Position                 */
#define SPI_CTAR_FMSZ(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_FMSZ_SHIFT))&SPI_CTAR_FMSZ_MASK) /*!< SPI0_CTAR.FMSZ Field                    */
#define SPI_CTAR_DBR_MASK                        (0x80000000U)                                       /*!< SPI0_CTAR.DBR Mask                      */
#define SPI_CTAR_DBR_SHIFT                       (31U)                                               /*!< SPI0_CTAR.DBR Position                  */
#define SPI_CTAR_DBR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_DBR_SHIFT))&SPI_CTAR_DBR_MASK) /*!< SPI0_CTAR.DBR Field                     */

/*! @name CTAR_SLAVE - Clock and Transfer Attributes Register (In Slave Mode) */
#define SPI_CTAR_SLAVE_MODE_MASK                 (0x6000000U)                                        /*!< SPI0_CTAR_SLAVE.MODE Mask               */
#define SPI_CTAR_SLAVE_MODE_SHIFT                (25U)                                               /*!< SPI0_CTAR_SLAVE.MODE Position           */
#define SPI_CTAR_SLAVE_MODE(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_MODE_SHIFT))&SPI_CTAR_SLAVE_MODE_MASK) /*!< SPI0_CTAR_SLAVE.MODE Field              */
#define SPI_CTAR_SLAVE_CPHA_MASK                 (0x2000000U)                                        /*!< SPI0_CTAR_SLAVE.CPHA Mask               */
#define SPI_CTAR_SLAVE_CPHA_SHIFT                (25U)                                               /*!< SPI0_CTAR_SLAVE.CPHA Position           */
#define SPI_CTAR_SLAVE_CPHA(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_CPHA_SHIFT))&SPI_CTAR_SLAVE_CPHA_MASK) /*!< SPI0_CTAR_SLAVE.CPHA Field              */
#define SPI_CTAR_SLAVE_CPOL_MASK                 (0x4000000U)                                        /*!< SPI0_CTAR_SLAVE.CPOL Mask               */
#define SPI_CTAR_SLAVE_CPOL_SHIFT                (26U)                                               /*!< SPI0_CTAR_SLAVE.CPOL Position           */
#define SPI_CTAR_SLAVE_CPOL(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_CPOL_SHIFT))&SPI_CTAR_SLAVE_CPOL_MASK) /*!< SPI0_CTAR_SLAVE.CPOL Field              */
#define SPI_CTAR_SLAVE_FMSZ_MASK                 (0xF8000000U)                                       /*!< SPI0_CTAR_SLAVE.FMSZ Mask               */
#define SPI_CTAR_SLAVE_FMSZ_SHIFT                (27U)                                               /*!< SPI0_CTAR_SLAVE.FMSZ Position           */
#define SPI_CTAR_SLAVE_FMSZ(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_FMSZ_SHIFT))&SPI_CTAR_SLAVE_FMSZ_MASK) /*!< SPI0_CTAR_SLAVE.FMSZ Field              */

/*! @name SR - Status register */
#define SPI_SR_POPNXTPTR_MASK                    (0xFU)                                              /*!< SPI0_SR.POPNXTPTR Mask                  */
#define SPI_SR_POPNXTPTR_SHIFT                   (0U)                                                /*!< SPI0_SR.POPNXTPTR Position              */
#define SPI_SR_POPNXTPTR(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_SR_POPNXTPTR_SHIFT))&SPI_SR_POPNXTPTR_MASK) /*!< SPI0_SR.POPNXTPTR Field                 */
#define SPI_SR_RXCTR_MASK                        (0xF0U)                                             /*!< SPI0_SR.RXCTR Mask                      */
#define SPI_SR_RXCTR_SHIFT                       (4U)                                                /*!< SPI0_SR.RXCTR Position                  */
#define SPI_SR_RXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_RXCTR_SHIFT))&SPI_SR_RXCTR_MASK) /*!< SPI0_SR.RXCTR Field                     */
#define SPI_SR_TXNXTPTR_MASK                     (0xF00U)                                            /*!< SPI0_SR.TXNXTPTR Mask                   */
#define SPI_SR_TXNXTPTR_SHIFT                    (8U)                                                /*!< SPI0_SR.TXNXTPTR Position               */
#define SPI_SR_TXNXTPTR(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXNXTPTR_SHIFT))&SPI_SR_TXNXTPTR_MASK) /*!< SPI0_SR.TXNXTPTR Field                  */
#define SPI_SR_TXCTR_MASK                        (0xF000U)                                           /*!< SPI0_SR.TXCTR Mask                      */
#define SPI_SR_TXCTR_SHIFT                       (12U)                                               /*!< SPI0_SR.TXCTR Position                  */
#define SPI_SR_TXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXCTR_SHIFT))&SPI_SR_TXCTR_MASK) /*!< SPI0_SR.TXCTR Field                     */
#define SPI_SR_RFDF_MASK                         (0x20000U)                                          /*!< SPI0_SR.RFDF Mask                       */
#define SPI_SR_RFDF_SHIFT                        (17U)                                               /*!< SPI0_SR.RFDF Position                   */
#define SPI_SR_RFDF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_RFDF_SHIFT))&SPI_SR_RFDF_MASK) /*!< SPI0_SR.RFDF Field                      */
#define SPI_SR_RFOF_MASK                         (0x80000U)                                          /*!< SPI0_SR.RFOF Mask                       */
#define SPI_SR_RFOF_SHIFT                        (19U)                                               /*!< SPI0_SR.RFOF Position                   */
#define SPI_SR_RFOF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_RFOF_SHIFT))&SPI_SR_RFOF_MASK) /*!< SPI0_SR.RFOF Field                      */
#define SPI_SR_TFFF_MASK                         (0x2000000U)                                        /*!< SPI0_SR.TFFF Mask                       */
#define SPI_SR_TFFF_SHIFT                        (25U)                                               /*!< SPI0_SR.TFFF Position                   */
#define SPI_SR_TFFF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_TFFF_SHIFT))&SPI_SR_TFFF_MASK) /*!< SPI0_SR.TFFF Field                      */
#define SPI_SR_TFUF_MASK                         (0x8000000U)                                        /*!< SPI0_SR.TFUF Mask                       */
#define SPI_SR_TFUF_SHIFT                        (27U)                                               /*!< SPI0_SR.TFUF Position                   */
#define SPI_SR_TFUF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_TFUF_SHIFT))&SPI_SR_TFUF_MASK) /*!< SPI0_SR.TFUF Field                      */
#define SPI_SR_EOQF_MASK                         (0x10000000U)                                       /*!< SPI0_SR.EOQF Mask                       */
#define SPI_SR_EOQF_SHIFT                        (28U)                                               /*!< SPI0_SR.EOQF Position                   */
#define SPI_SR_EOQF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_EOQF_SHIFT))&SPI_SR_EOQF_MASK) /*!< SPI0_SR.EOQF Field                      */
#define SPI_SR_TXRXS_MASK                        (0x40000000U)                                       /*!< SPI0_SR.TXRXS Mask                      */
#define SPI_SR_TXRXS_SHIFT                       (30U)                                               /*!< SPI0_SR.TXRXS Position                  */
#define SPI_SR_TXRXS(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXRXS_SHIFT))&SPI_SR_TXRXS_MASK) /*!< SPI0_SR.TXRXS Field                     */
#define SPI_SR_TCF_MASK                          (0x80000000U)                                       /*!< SPI0_SR.TCF Mask                        */
#define SPI_SR_TCF_SHIFT                         (31U)                                               /*!< SPI0_SR.TCF Position                    */
#define SPI_SR_TCF(x)                            (((uint32_t)(((uint32_t)(x))<<SPI_SR_TCF_SHIFT))&SPI_SR_TCF_MASK) /*!< SPI0_SR.TCF Field                       */

/*! @name RSER - DMA/Interrupt Request Select and Enable Register */
#define SPI_RSER_RFDF_DIRS_MASK                  (0x10000U)                                          /*!< SPI0_RSER.RFDF_DIRS Mask                */
#define SPI_RSER_RFDF_DIRS_SHIFT                 (16U)                                               /*!< SPI0_RSER.RFDF_DIRS Position            */
#define SPI_RSER_RFDF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFDF_DIRS_SHIFT))&SPI_RSER_RFDF_DIRS_MASK) /*!< SPI0_RSER.RFDF_DIRS Field               */
#define SPI_RSER_RFDF_RE_MASK                    (0x20000U)                                          /*!< SPI0_RSER.RFDF_RE Mask                  */
#define SPI_RSER_RFDF_RE_SHIFT                   (17U)                                               /*!< SPI0_RSER.RFDF_RE Position              */
#define SPI_RSER_RFDF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFDF_RE_SHIFT))&SPI_RSER_RFDF_RE_MASK) /*!< SPI0_RSER.RFDF_RE Field                 */
#define SPI_RSER_RFOF_RE_MASK                    (0x80000U)                                          /*!< SPI0_RSER.RFOF_RE Mask                  */
#define SPI_RSER_RFOF_RE_SHIFT                   (19U)                                               /*!< SPI0_RSER.RFOF_RE Position              */
#define SPI_RSER_RFOF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFOF_RE_SHIFT))&SPI_RSER_RFOF_RE_MASK) /*!< SPI0_RSER.RFOF_RE Field                 */
#define SPI_RSER_TFFF_DIRS_MASK                  (0x1000000U)                                        /*!< SPI0_RSER.TFFF_DIRS Mask                */
#define SPI_RSER_TFFF_DIRS_SHIFT                 (24U)                                               /*!< SPI0_RSER.TFFF_DIRS Position            */
#define SPI_RSER_TFFF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFFF_DIRS_SHIFT))&SPI_RSER_TFFF_DIRS_MASK) /*!< SPI0_RSER.TFFF_DIRS Field               */
#define SPI_RSER_TFFF_RE_MASK                    (0x2000000U)                                        /*!< SPI0_RSER.TFFF_RE Mask                  */
#define SPI_RSER_TFFF_RE_SHIFT                   (25U)                                               /*!< SPI0_RSER.TFFF_RE Position              */
#define SPI_RSER_TFFF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFFF_RE_SHIFT))&SPI_RSER_TFFF_RE_MASK) /*!< SPI0_RSER.TFFF_RE Field                 */
#define SPI_RSER_TFUF_RE_MASK                    (0x8000000U)                                        /*!< SPI0_RSER.TFUF_RE Mask                  */
#define SPI_RSER_TFUF_RE_SHIFT                   (27U)                                               /*!< SPI0_RSER.TFUF_RE Position              */
#define SPI_RSER_TFUF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFUF_RE_SHIFT))&SPI_RSER_TFUF_RE_MASK) /*!< SPI0_RSER.TFUF_RE Field                 */
#define SPI_RSER_EOQF_RE_MASK                    (0x10000000U)                                       /*!< SPI0_RSER.EOQF_RE Mask                  */
#define SPI_RSER_EOQF_RE_SHIFT                   (28U)                                               /*!< SPI0_RSER.EOQF_RE Position              */
#define SPI_RSER_EOQF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_EOQF_RE_SHIFT))&SPI_RSER_EOQF_RE_MASK) /*!< SPI0_RSER.EOQF_RE Field                 */
#define SPI_RSER_TCF_RE_MASK                     (0x80000000U)                                       /*!< SPI0_RSER.TCF_RE Mask                   */
#define SPI_RSER_TCF_RE_SHIFT                    (31U)                                               /*!< SPI0_RSER.TCF_RE Position               */
#define SPI_RSER_TCF_RE(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TCF_RE_SHIFT))&SPI_RSER_TCF_RE_MASK) /*!< SPI0_RSER.TCF_RE Field                  */

/*! @name PUSHR - PUSH TX FIFO Register In Master Mode */
#define SPI_PUSHR_TXDATA_MASK                    (0xFFFFU)                                           /*!< SPI0_PUSHR.TXDATA Mask                  */
#define SPI_PUSHR_TXDATA_SHIFT                   (0U)                                                /*!< SPI0_PUSHR.TXDATA Position              */
#define SPI_PUSHR_TXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_TXDATA_SHIFT))&SPI_PUSHR_TXDATA_MASK) /*!< SPI0_PUSHR.TXDATA Field                 */
#define SPI_PUSHR_PCS_MASK                       (0x3F0000U)                                         /*!< SPI0_PUSHR.PCS Mask                     */
#define SPI_PUSHR_PCS_SHIFT                      (16U)                                               /*!< SPI0_PUSHR.PCS Position                 */
#define SPI_PUSHR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PCS_SHIFT))&SPI_PUSHR_PCS_MASK) /*!< SPI0_PUSHR.PCS Field                    */
#define SPI_PUSHR_CTCNT_MASK                     (0x4000000U)                                        /*!< SPI0_PUSHR.CTCNT Mask                   */
#define SPI_PUSHR_CTCNT_SHIFT                    (26U)                                               /*!< SPI0_PUSHR.CTCNT Position               */
#define SPI_PUSHR_CTCNT(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_CTCNT_SHIFT))&SPI_PUSHR_CTCNT_MASK) /*!< SPI0_PUSHR.CTCNT Field                  */
#define SPI_PUSHR_EOQ_MASK                       (0x8000000U)                                        /*!< SPI0_PUSHR.EOQ Mask                     */
#define SPI_PUSHR_EOQ_SHIFT                      (27U)                                               /*!< SPI0_PUSHR.EOQ Position                 */
#define SPI_PUSHR_EOQ(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_EOQ_SHIFT))&SPI_PUSHR_EOQ_MASK) /*!< SPI0_PUSHR.EOQ Field                    */
#define SPI_PUSHR_CTAS_MASK                      (0x70000000U)                                       /*!< SPI0_PUSHR.CTAS Mask                    */
#define SPI_PUSHR_CTAS_SHIFT                     (28U)                                               /*!< SPI0_PUSHR.CTAS Position                */
#define SPI_PUSHR_CTAS(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_CTAS_SHIFT))&SPI_PUSHR_CTAS_MASK) /*!< SPI0_PUSHR.CTAS Field                   */
#define SPI_PUSHR_CONT_MASK                      (0x80000000U)                                       /*!< SPI0_PUSHR.CONT Mask                    */
#define SPI_PUSHR_CONT_SHIFT                     (31U)                                               /*!< SPI0_PUSHR.CONT Position                */
#define SPI_PUSHR_CONT(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_CONT_SHIFT))&SPI_PUSHR_CONT_MASK) /*!< SPI0_PUSHR.CONT Field                   */

/*! @name PUSHR_SLAVE - PUSH TX FIFO Register In Slave Mode */
#define SPI_PUSHR_SLAVE_TXDATA_MASK              (0xFFFFU)                                           /*!< SPI0_PUSHR_SLAVE.TXDATA Mask            */
#define SPI_PUSHR_SLAVE_TXDATA_SHIFT             (0U)                                                /*!< SPI0_PUSHR_SLAVE.TXDATA Position        */
#define SPI_PUSHR_SLAVE_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_SLAVE_TXDATA_SHIFT))&SPI_PUSHR_SLAVE_TXDATA_MASK) /*!< SPI0_PUSHR_SLAVE.TXDATA Field           */

/*! @name POPR - POP RX FIFO Register */
#define SPI_POPR_RXDATA_MASK                     (0xFFFFFFFFU)                                       /*!< SPI0_POPR.RXDATA Mask                   */
#define SPI_POPR_RXDATA_SHIFT                    (0U)                                                /*!< SPI0_POPR.RXDATA Position               */
#define SPI_POPR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_POPR_RXDATA_SHIFT))&SPI_POPR_RXDATA_MASK) /*!< SPI0_POPR.RXDATA Field                  */

/*! @name TXFR - Transmit FIFO */
#define SPI_TXFR_TXDATA_MASK                     (0xFFFFU)                                           /*!< SPI0_TXFR.TXDATA Mask                   */
#define SPI_TXFR_TXDATA_SHIFT                    (0U)                                                /*!< SPI0_TXFR.TXDATA Position               */
#define SPI_TXFR_TXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TXFR_TXDATA_SHIFT))&SPI_TXFR_TXDATA_MASK) /*!< SPI0_TXFR.TXDATA Field                  */
#define SPI_TXFR_TXCMD_TXDATA_MASK               (0xFFFF0000U)                                       /*!< SPI0_TXFR.TXCMD_TXDATA Mask             */
#define SPI_TXFR_TXCMD_TXDATA_SHIFT              (16U)                                               /*!< SPI0_TXFR.TXCMD_TXDATA Position         */
#define SPI_TXFR_TXCMD_TXDATA(x)                 (((uint32_t)(((uint32_t)(x))<<SPI_TXFR_TXCMD_TXDATA_SHIFT))&SPI_TXFR_TXCMD_TXDATA_MASK) /*!< SPI0_TXFR.TXCMD_TXDATA Field            */

/*! @name RXFR - Receive FIFO */
#define SPI_RXFR_RXDATA_MASK                     (0xFFFFFFFFU)                                       /*!< SPI0_RXFR.RXDATA Mask                   */
#define SPI_RXFR_RXDATA_SHIFT                    (0U)                                                /*!< SPI0_RXFR.RXDATA Position               */
#define SPI_RXFR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_RXFR_RXDATA_SHIFT))&SPI_RXFR_RXDATA_MASK) /*!< SPI0_RXFR.RXDATA Field                  */

/*! @name SREX - Status register Extended */
#define SPI_SREX_CMDNXTPTR_MASK                  (0xFU)                                              /*!< SPI0_SREX.CMDNXTPTR Mask                */
#define SPI_SREX_CMDNXTPTR_SHIFT                 (0U)                                                /*!< SPI0_SREX.CMDNXTPTR Position            */
#define SPI_SREX_CMDNXTPTR(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_SREX_CMDNXTPTR_SHIFT))&SPI_SREX_CMDNXTPTR_MASK) /*!< SPI0_SREX.CMDNXTPTR Field               */
#define SPI_SREX_CMDCTR_MASK                     (0x1F0U)                                            /*!< SPI0_SREX.CMDCTR Mask                   */
#define SPI_SREX_CMDCTR_SHIFT                    (4U)                                                /*!< SPI0_SREX.CMDCTR Position               */
#define SPI_SREX_CMDCTR(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SREX_CMDCTR_SHIFT))&SPI_SREX_CMDCTR_MASK) /*!< SPI0_SREX.CMDCTR Field                  */
#define SPI_SREX_TXCTR4_MASK                     (0x800U)                                            /*!< SPI0_SREX.TXCTR4 Mask                   */
#define SPI_SREX_TXCTR4_SHIFT                    (11U)                                               /*!< SPI0_SREX.TXCTR4 Position               */
#define SPI_SREX_TXCTR4(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SREX_TXCTR4_SHIFT))&SPI_SREX_TXCTR4_MASK) /*!< SPI0_SREX.TXCTR4 Field                  */
#define SPI_SREX_RXCTR4_MASK                     (0x4000U)                                           /*!< SPI0_SREX.RXCTR4 Mask                   */
#define SPI_SREX_RXCTR4_SHIFT                    (14U)                                               /*!< SPI0_SREX.RXCTR4 Position               */
#define SPI_SREX_RXCTR4(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SREX_RXCTR4_SHIFT))&SPI_SREX_RXCTR4_MASK) /*!< SPI0_SREX.RXCTR4 Field                  */
/**
 * @} */ /* End group SPI_Register_Masks_GROUP 
 */

/* SPI0 - Peripheral instance base addresses */
#define SPI0_BasePtr                   0x4002C000UL //!< Peripheral base address
#define SPI0                           ((SPI_Type *) SPI0_BasePtr) //!< Freescale base pointer
#define SPI0_BASE_PTR                  (SPI0) //!< Freescale style base pointer
/**
 * @} */ /* End group SPI_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup SYST_Peripheral_access_layer_GROUP SYST Peripheral Access Layer
* @brief C Struct for SYST
* @{
*/

/* ================================================================================ */
/* ================           SYST (file:SYST)                     ================ */
/* ================================================================================ */

/**
 * @brief System timer
 */
/**
* @addtogroup SYST_structs_GROUP SYST struct
* @brief Struct for SYST
* @{
*/
typedef struct SYST_Type {
   __IO uint32_t  CSR;                          /**< 0000: Control and Status Register                                  */
   __IO uint32_t  RVR;                          /**< 0004: Reload Value Register                                        */
   __IO uint32_t  CVR;                          /**< 0008: Current Value Register                                       */
   __I  uint32_t  CALIB;                        /**< 000C: Calibration Value Register                                   */
} SYST_Type;

/**
 * @} */ /* End group SYST_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'SYST' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup SYST_Register_Masks_GROUP SYST Register Masks
* @brief Register Masks for SYST
* @{
*/

/*! @name CSR - Control and Status Register */
#define SYST_CSR_ENABLE_MASK                     (0x1U)                                              /*!< SYST_CSR.ENABLE Mask                    */
#define SYST_CSR_ENABLE_SHIFT                    (0U)                                                /*!< SYST_CSR.ENABLE Position                */
#define SYST_CSR_ENABLE(x)                       (((uint32_t)(((uint32_t)(x))<<SYST_CSR_ENABLE_SHIFT))&SYST_CSR_ENABLE_MASK) /*!< SYST_CSR.ENABLE Field                   */
#define SYST_CSR_TICKINT_MASK                    (0x2U)                                              /*!< SYST_CSR.TICKINT Mask                   */
#define SYST_CSR_TICKINT_SHIFT                   (1U)                                                /*!< SYST_CSR.TICKINT Position               */
#define SYST_CSR_TICKINT(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CSR_TICKINT_SHIFT))&SYST_CSR_TICKINT_MASK) /*!< SYST_CSR.TICKINT Field                  */
#define SYST_CSR_CLKSOURCE_MASK                  (0x4U)                                              /*!< SYST_CSR.CLKSOURCE Mask                 */
#define SYST_CSR_CLKSOURCE_SHIFT                 (2U)                                                /*!< SYST_CSR.CLKSOURCE Position             */
#define SYST_CSR_CLKSOURCE(x)                    (((uint32_t)(((uint32_t)(x))<<SYST_CSR_CLKSOURCE_SHIFT))&SYST_CSR_CLKSOURCE_MASK) /*!< SYST_CSR.CLKSOURCE Field                */
#define SYST_CSR_COUNTFLAG_MASK                  (0x10000U)                                          /*!< SYST_CSR.COUNTFLAG Mask                 */
#define SYST_CSR_COUNTFLAG_SHIFT                 (16U)                                               /*!< SYST_CSR.COUNTFLAG Position             */
#define SYST_CSR_COUNTFLAG(x)                    (((uint32_t)(((uint32_t)(x))<<SYST_CSR_COUNTFLAG_SHIFT))&SYST_CSR_COUNTFLAG_MASK) /*!< SYST_CSR.COUNTFLAG Field                */

/*! @name RVR - Reload Value Register */
#define SYST_RVR_RELOAD_MASK                     (0xFFFFFFU)                                         /*!< SYST_RVR.RELOAD Mask                    */
#define SYST_RVR_RELOAD_SHIFT                    (0U)                                                /*!< SYST_RVR.RELOAD Position                */
#define SYST_RVR_RELOAD(x)                       (((uint32_t)(((uint32_t)(x))<<SYST_RVR_RELOAD_SHIFT))&SYST_RVR_RELOAD_MASK) /*!< SYST_RVR.RELOAD Field                   */

/*! @name CVR - Current Value Register */
#define SYST_CVR_CURRENT_MASK                    (0xFFFFFFU)                                         /*!< SYST_CVR.CURRENT Mask                   */
#define SYST_CVR_CURRENT_SHIFT                   (0U)                                                /*!< SYST_CVR.CURRENT Position               */
#define SYST_CVR_CURRENT(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CVR_CURRENT_SHIFT))&SYST_CVR_CURRENT_MASK) /*!< SYST_CVR.CURRENT Field                  */

/*! @name CALIB - Calibration Value Register */
#define SYST_CALIB_TENMS_MASK                    (0xFFFFFFU)                                         /*!< SYST_CALIB.TENMS Mask                   */
#define SYST_CALIB_TENMS_SHIFT                   (0U)                                                /*!< SYST_CALIB.TENMS Position               */
#define SYST_CALIB_TENMS(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CALIB_TENMS_SHIFT))&SYST_CALIB_TENMS_MASK) /*!< SYST_CALIB.TENMS Field                  */
#define SYST_CALIB_SKEW_MASK                     (0x40000000U)                                       /*!< SYST_CALIB.SKEW Mask                    */
#define SYST_CALIB_SKEW_SHIFT                    (30U)                                               /*!< SYST_CALIB.SKEW Position                */
#define SYST_CALIB_SKEW(x)                       (((uint32_t)(((uint32_t)(x))<<SYST_CALIB_SKEW_SHIFT))&SYST_CALIB_SKEW_MASK) /*!< SYST_CALIB.SKEW Field                   */
#define SYST_CALIB_NOREF_MASK                    (0x80000000U)                                       /*!< SYST_CALIB.NOREF Mask                   */
#define SYST_CALIB_NOREF_SHIFT                   (31U)                                               /*!< SYST_CALIB.NOREF Position               */
#define SYST_CALIB_NOREF(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CALIB_NOREF_SHIFT))&SYST_CALIB_NOREF_MASK) /*!< SYST_CALIB.NOREF Field                  */
/**
 * @} */ /* End group SYST_Register_Masks_GROUP 
 */

/* SYST - Peripheral instance base addresses */
#define SYST_BasePtr                   0xE000E010UL //!< Peripheral base address
#define SYST                           ((SYST_Type *) SYST_BasePtr) //!< Freescale base pointer
#define SYST_BASE_PTR                  (SYST) //!< Freescale style base pointer
/**
 * @} */ /* End group SYST_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup UART_Peripheral_access_layer_GROUP UART Peripheral Access Layer
* @brief C Struct for UART
* @{
*/

/* ================================================================================ */
/* ================           UART0 (file:UART0_MKV40)             ================ */
/* ================================================================================ */

/**
 * @brief Universal Asynchronous Receiver/Transmitter
 */
/**
* @addtogroup UART_structs_GROUP UART struct
* @brief Struct for UART
* @{
*/
typedef struct UART_Type {
   __IO uint8_t   BDH;                          /**< 0000: Baud Rate Register: High                                     */
   __IO uint8_t   BDL;                          /**< 0001: Baud Rate Register: Low                                      */
   __IO uint8_t   C1;                           /**< 0002: Control Register 1                                           */
   __IO uint8_t   C2;                           /**< 0003: Control Register 2                                           */
   __I  uint8_t   S1;                           /**< 0004: Status Register 1                                            */
   __IO uint8_t   S2;                           /**< 0005: Status Register 2                                            */
   __IO uint8_t   C3;                           /**< 0006: Control Register 3                                           */
   __IO uint8_t   D;                            /**< 0007: Data Register                                                */
   __IO uint8_t   MA1;                          /**< 0008: Match Address Registers 1                                    */
   __IO uint8_t   MA2;                          /**< 0009: Match Address Registers 2                                    */
   __IO uint8_t   C4;                           /**< 000A: Control Register 4                                           */
   __IO uint8_t   C5;                           /**< 000B: Control Register 5                                           */
   __I  uint8_t   ED;                           /**< 000C: Extended Data Register                                       */
   __IO uint8_t   MODEM;                        /**< 000D: Modem Register                                               */
        uint8_t   RESERVED_0[2];                /**< 000E: 0x2 bytes                                                    */
   __IO uint8_t   PFIFO;                        /**< 0010: FIFO Parameters                                              */
   __IO uint8_t   CFIFO;                        /**< 0011: FIFO Control Register                                        */
   __IO uint8_t   SFIFO;                        /**< 0012: FIFO Status Register                                         */
   __IO uint8_t   TWFIFO;                       /**< 0013: FIFO Transmit Watermark                                      */
   __I  uint8_t   TCFIFO;                       /**< 0014: FIFO Transmit Count                                          */
   __IO uint8_t   RWFIFO;                       /**< 0015: FIFO Receive Watermark                                       */
   __I  uint8_t   RCFIFO;                       /**< 0016: FIFO Receive Count                                           */
} UART_Type;

/**
 * @} */ /* End group UART_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'UART0' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup UART_Register_Masks_GROUP UART Register Masks
* @brief Register Masks for UART
* @{
*/

/*! @name BDH - Baud Rate Register: High */
#define UART_BDH_SBR_MASK                        (0x1FU)                                             /*!< UART0_BDH.SBR Mask                      */
#define UART_BDH_SBR_SHIFT                       (0U)                                                /*!< UART0_BDH.SBR Position                  */
#define UART_BDH_SBR(x)                          (((uint8_t)(((uint8_t)(x))<<UART_BDH_SBR_SHIFT))&UART_BDH_SBR_MASK) /*!< UART0_BDH.SBR Field                     */
#define UART_BDH_SBNS_MASK                       (0x20U)                                             /*!< UART0_BDH.SBNS Mask                     */
#define UART_BDH_SBNS_SHIFT                      (5U)                                                /*!< UART0_BDH.SBNS Position                 */
#define UART_BDH_SBNS(x)                         (((uint8_t)(((uint8_t)(x))<<UART_BDH_SBNS_SHIFT))&UART_BDH_SBNS_MASK) /*!< UART0_BDH.SBNS Field                    */
#define UART_BDH_RXEDGIE_MASK                    (0x40U)                                             /*!< UART0_BDH.RXEDGIE Mask                  */
#define UART_BDH_RXEDGIE_SHIFT                   (6U)                                                /*!< UART0_BDH.RXEDGIE Position              */
#define UART_BDH_RXEDGIE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_BDH_RXEDGIE_SHIFT))&UART_BDH_RXEDGIE_MASK) /*!< UART0_BDH.RXEDGIE Field                 */
#define UART_BDH_LBKDIE_MASK                     (0x80U)                                             /*!< UART0_BDH.LBKDIE Mask                   */
#define UART_BDH_LBKDIE_SHIFT                    (7U)                                                /*!< UART0_BDH.LBKDIE Position               */
#define UART_BDH_LBKDIE(x)                       (((uint8_t)(((uint8_t)(x))<<UART_BDH_LBKDIE_SHIFT))&UART_BDH_LBKDIE_MASK) /*!< UART0_BDH.LBKDIE Field                  */

/*! @name BDL - Baud Rate Register: Low */
#define UART_BDL_SBR_MASK                        (0xFFU)                                             /*!< UART0_BDL.SBR Mask                      */
#define UART_BDL_SBR_SHIFT                       (0U)                                                /*!< UART0_BDL.SBR Position                  */
#define UART_BDL_SBR(x)                          (((uint8_t)(((uint8_t)(x))<<UART_BDL_SBR_SHIFT))&UART_BDL_SBR_MASK) /*!< UART0_BDL.SBR Field                     */

/*! @name C1 - Control Register 1 */
#define UART_C1_PT_MASK                          (0x1U)                                              /*!< UART0_C1.PT Mask                        */
#define UART_C1_PT_SHIFT                         (0U)                                                /*!< UART0_C1.PT Position                    */
#define UART_C1_PT(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C1_PT_SHIFT))&UART_C1_PT_MASK) /*!< UART0_C1.PT Field                       */
#define UART_C1_PE_MASK                          (0x2U)                                              /*!< UART0_C1.PE Mask                        */
#define UART_C1_PE_SHIFT                         (1U)                                                /*!< UART0_C1.PE Position                    */
#define UART_C1_PE(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C1_PE_SHIFT))&UART_C1_PE_MASK) /*!< UART0_C1.PE Field                       */
#define UART_C1_ILT_MASK                         (0x4U)                                              /*!< UART0_C1.ILT Mask                       */
#define UART_C1_ILT_SHIFT                        (2U)                                                /*!< UART0_C1.ILT Position                   */
#define UART_C1_ILT(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C1_ILT_SHIFT))&UART_C1_ILT_MASK) /*!< UART0_C1.ILT Field                      */
#define UART_C1_WAKE_MASK                        (0x8U)                                              /*!< UART0_C1.WAKE Mask                      */
#define UART_C1_WAKE_SHIFT                       (3U)                                                /*!< UART0_C1.WAKE Position                  */
#define UART_C1_WAKE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C1_WAKE_SHIFT))&UART_C1_WAKE_MASK) /*!< UART0_C1.WAKE Field                     */
#define UART_C1_M_MASK                           (0x10U)                                             /*!< UART0_C1.M Mask                         */
#define UART_C1_M_SHIFT                          (4U)                                                /*!< UART0_C1.M Position                     */
#define UART_C1_M(x)                             (((uint8_t)(((uint8_t)(x))<<UART_C1_M_SHIFT))&UART_C1_M_MASK) /*!< UART0_C1.M Field                        */
#define UART_C1_RSRC_MASK                        (0x20U)                                             /*!< UART0_C1.RSRC Mask                      */
#define UART_C1_RSRC_SHIFT                       (5U)                                                /*!< UART0_C1.RSRC Position                  */
#define UART_C1_RSRC(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C1_RSRC_SHIFT))&UART_C1_RSRC_MASK) /*!< UART0_C1.RSRC Field                     */
#define UART_C1_UARTSWAI_MASK                    (0x40U)                                             /*!< UART0_C1.UARTSWAI Mask                  */
#define UART_C1_UARTSWAI_SHIFT                   (6U)                                                /*!< UART0_C1.UARTSWAI Position              */
#define UART_C1_UARTSWAI(x)                      (((uint8_t)(((uint8_t)(x))<<UART_C1_UARTSWAI_SHIFT))&UART_C1_UARTSWAI_MASK) /*!< UART0_C1.UARTSWAI Field                 */
#define UART_C1_LOOPS_MASK                       (0x80U)                                             /*!< UART0_C1.LOOPS Mask                     */
#define UART_C1_LOOPS_SHIFT                      (7U)                                                /*!< UART0_C1.LOOPS Position                 */
#define UART_C1_LOOPS(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C1_LOOPS_SHIFT))&UART_C1_LOOPS_MASK) /*!< UART0_C1.LOOPS Field                    */

/*! @name C2 - Control Register 2 */
#define UART_C2_SBK_MASK                         (0x1U)                                              /*!< UART0_C2.SBK Mask                       */
#define UART_C2_SBK_SHIFT                        (0U)                                                /*!< UART0_C2.SBK Position                   */
#define UART_C2_SBK(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C2_SBK_SHIFT))&UART_C2_SBK_MASK) /*!< UART0_C2.SBK Field                      */
#define UART_C2_RWU_MASK                         (0x2U)                                              /*!< UART0_C2.RWU Mask                       */
#define UART_C2_RWU_SHIFT                        (1U)                                                /*!< UART0_C2.RWU Position                   */
#define UART_C2_RWU(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C2_RWU_SHIFT))&UART_C2_RWU_MASK) /*!< UART0_C2.RWU Field                      */
#define UART_C2_RE_MASK                          (0x4U)                                              /*!< UART0_C2.RE Mask                        */
#define UART_C2_RE_SHIFT                         (2U)                                                /*!< UART0_C2.RE Position                    */
#define UART_C2_RE(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C2_RE_SHIFT))&UART_C2_RE_MASK) /*!< UART0_C2.RE Field                       */
#define UART_C2_TE_MASK                          (0x8U)                                              /*!< UART0_C2.TE Mask                        */
#define UART_C2_TE_SHIFT                         (3U)                                                /*!< UART0_C2.TE Position                    */
#define UART_C2_TE(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C2_TE_SHIFT))&UART_C2_TE_MASK) /*!< UART0_C2.TE Field                       */
#define UART_C2_ILIE_MASK                        (0x10U)                                             /*!< UART0_C2.ILIE Mask                      */
#define UART_C2_ILIE_SHIFT                       (4U)                                                /*!< UART0_C2.ILIE Position                  */
#define UART_C2_ILIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C2_ILIE_SHIFT))&UART_C2_ILIE_MASK) /*!< UART0_C2.ILIE Field                     */
#define UART_C2_RIE_MASK                         (0x20U)                                             /*!< UART0_C2.RIE Mask                       */
#define UART_C2_RIE_SHIFT                        (5U)                                                /*!< UART0_C2.RIE Position                   */
#define UART_C2_RIE(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C2_RIE_SHIFT))&UART_C2_RIE_MASK) /*!< UART0_C2.RIE Field                      */
#define UART_C2_TCIE_MASK                        (0x40U)                                             /*!< UART0_C2.TCIE Mask                      */
#define UART_C2_TCIE_SHIFT                       (6U)                                                /*!< UART0_C2.TCIE Position                  */
#define UART_C2_TCIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C2_TCIE_SHIFT))&UART_C2_TCIE_MASK) /*!< UART0_C2.TCIE Field                     */
#define UART_C2_TIE_MASK                         (0x80U)                                             /*!< UART0_C2.TIE Mask                       */
#define UART_C2_TIE_SHIFT                        (7U)                                                /*!< UART0_C2.TIE Position                   */
#define UART_C2_TIE(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C2_TIE_SHIFT))&UART_C2_TIE_MASK) /*!< UART0_C2.TIE Field                      */

/*! @name S1 - Status Register 1 */
#define UART_S1_PF_MASK                          (0x1U)                                              /*!< UART0_S1.PF Mask                        */
#define UART_S1_PF_SHIFT                         (0U)                                                /*!< UART0_S1.PF Position                    */
#define UART_S1_PF(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S1_PF_SHIFT))&UART_S1_PF_MASK) /*!< UART0_S1.PF Field                       */
#define UART_S1_FE_MASK                          (0x2U)                                              /*!< UART0_S1.FE Mask                        */
#define UART_S1_FE_SHIFT                         (1U)                                                /*!< UART0_S1.FE Position                    */
#define UART_S1_FE(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S1_FE_SHIFT))&UART_S1_FE_MASK) /*!< UART0_S1.FE Field                       */
#define UART_S1_NF_MASK                          (0x4U)                                              /*!< UART0_S1.NF Mask                        */
#define UART_S1_NF_SHIFT                         (2U)                                                /*!< UART0_S1.NF Position                    */
#define UART_S1_NF(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S1_NF_SHIFT))&UART_S1_NF_MASK) /*!< UART0_S1.NF Field                       */
#define UART_S1_OR_MASK                          (0x8U)                                              /*!< UART0_S1.OR Mask                        */
#define UART_S1_OR_SHIFT                         (3U)                                                /*!< UART0_S1.OR Position                    */
#define UART_S1_OR(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S1_OR_SHIFT))&UART_S1_OR_MASK) /*!< UART0_S1.OR Field                       */
#define UART_S1_IDLE_MASK                        (0x10U)                                             /*!< UART0_S1.IDLE Mask                      */
#define UART_S1_IDLE_SHIFT                       (4U)                                                /*!< UART0_S1.IDLE Position                  */
#define UART_S1_IDLE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S1_IDLE_SHIFT))&UART_S1_IDLE_MASK) /*!< UART0_S1.IDLE Field                     */
#define UART_S1_RDRF_MASK                        (0x20U)                                             /*!< UART0_S1.RDRF Mask                      */
#define UART_S1_RDRF_SHIFT                       (5U)                                                /*!< UART0_S1.RDRF Position                  */
#define UART_S1_RDRF(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S1_RDRF_SHIFT))&UART_S1_RDRF_MASK) /*!< UART0_S1.RDRF Field                     */
#define UART_S1_TC_MASK                          (0x40U)                                             /*!< UART0_S1.TC Mask                        */
#define UART_S1_TC_SHIFT                         (6U)                                                /*!< UART0_S1.TC Position                    */
#define UART_S1_TC(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S1_TC_SHIFT))&UART_S1_TC_MASK) /*!< UART0_S1.TC Field                       */
#define UART_S1_TDRE_MASK                        (0x80U)                                             /*!< UART0_S1.TDRE Mask                      */
#define UART_S1_TDRE_SHIFT                       (7U)                                                /*!< UART0_S1.TDRE Position                  */
#define UART_S1_TDRE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S1_TDRE_SHIFT))&UART_S1_TDRE_MASK) /*!< UART0_S1.TDRE Field                     */

/*! @name S2 - Status Register 2 */
#define UART_S2_RAF_MASK                         (0x1U)                                              /*!< UART0_S2.RAF Mask                       */
#define UART_S2_RAF_SHIFT                        (0U)                                                /*!< UART0_S2.RAF Position                   */
#define UART_S2_RAF(x)                           (((uint8_t)(((uint8_t)(x))<<UART_S2_RAF_SHIFT))&UART_S2_RAF_MASK) /*!< UART0_S2.RAF Field                      */
#define UART_S2_LBKDE_MASK                       (0x2U)                                              /*!< UART0_S2.LBKDE Mask                     */
#define UART_S2_LBKDE_SHIFT                      (1U)                                                /*!< UART0_S2.LBKDE Position                 */
#define UART_S2_LBKDE(x)                         (((uint8_t)(((uint8_t)(x))<<UART_S2_LBKDE_SHIFT))&UART_S2_LBKDE_MASK) /*!< UART0_S2.LBKDE Field                    */
#define UART_S2_BRK13_MASK                       (0x4U)                                              /*!< UART0_S2.BRK13 Mask                     */
#define UART_S2_BRK13_SHIFT                      (2U)                                                /*!< UART0_S2.BRK13 Position                 */
#define UART_S2_BRK13(x)                         (((uint8_t)(((uint8_t)(x))<<UART_S2_BRK13_SHIFT))&UART_S2_BRK13_MASK) /*!< UART0_S2.BRK13 Field                    */
#define UART_S2_RWUID_MASK                       (0x8U)                                              /*!< UART0_S2.RWUID Mask                     */
#define UART_S2_RWUID_SHIFT                      (3U)                                                /*!< UART0_S2.RWUID Position                 */
#define UART_S2_RWUID(x)                         (((uint8_t)(((uint8_t)(x))<<UART_S2_RWUID_SHIFT))&UART_S2_RWUID_MASK) /*!< UART0_S2.RWUID Field                    */
#define UART_S2_RXINV_MASK                       (0x10U)                                             /*!< UART0_S2.RXINV Mask                     */
#define UART_S2_RXINV_SHIFT                      (4U)                                                /*!< UART0_S2.RXINV Position                 */
#define UART_S2_RXINV(x)                         (((uint8_t)(((uint8_t)(x))<<UART_S2_RXINV_SHIFT))&UART_S2_RXINV_MASK) /*!< UART0_S2.RXINV Field                    */
#define UART_S2_MSBF_MASK                        (0x20U)                                             /*!< UART0_S2.MSBF Mask                      */
#define UART_S2_MSBF_SHIFT                       (5U)                                                /*!< UART0_S2.MSBF Position                  */
#define UART_S2_MSBF(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S2_MSBF_SHIFT))&UART_S2_MSBF_MASK) /*!< UART0_S2.MSBF Field                     */
#define UART_S2_RXEDGIF_MASK                     (0x40U)                                             /*!< UART0_S2.RXEDGIF Mask                   */
#define UART_S2_RXEDGIF_SHIFT                    (6U)                                                /*!< UART0_S2.RXEDGIF Position               */
#define UART_S2_RXEDGIF(x)                       (((uint8_t)(((uint8_t)(x))<<UART_S2_RXEDGIF_SHIFT))&UART_S2_RXEDGIF_MASK) /*!< UART0_S2.RXEDGIF Field                  */
#define UART_S2_LBKDIF_MASK                      (0x80U)                                             /*!< UART0_S2.LBKDIF Mask                    */
#define UART_S2_LBKDIF_SHIFT                     (7U)                                                /*!< UART0_S2.LBKDIF Position                */
#define UART_S2_LBKDIF(x)                        (((uint8_t)(((uint8_t)(x))<<UART_S2_LBKDIF_SHIFT))&UART_S2_LBKDIF_MASK) /*!< UART0_S2.LBKDIF Field                   */

/*! @name C3 - Control Register 3 */
#define UART_C3_PEIE_MASK                        (0x1U)                                              /*!< UART0_C3.PEIE Mask                      */
#define UART_C3_PEIE_SHIFT                       (0U)                                                /*!< UART0_C3.PEIE Position                  */
#define UART_C3_PEIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C3_PEIE_SHIFT))&UART_C3_PEIE_MASK) /*!< UART0_C3.PEIE Field                     */
#define UART_C3_FEIE_MASK                        (0x2U)                                              /*!< UART0_C3.FEIE Mask                      */
#define UART_C3_FEIE_SHIFT                       (1U)                                                /*!< UART0_C3.FEIE Position                  */
#define UART_C3_FEIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C3_FEIE_SHIFT))&UART_C3_FEIE_MASK) /*!< UART0_C3.FEIE Field                     */
#define UART_C3_NEIE_MASK                        (0x4U)                                              /*!< UART0_C3.NEIE Mask                      */
#define UART_C3_NEIE_SHIFT                       (2U)                                                /*!< UART0_C3.NEIE Position                  */
#define UART_C3_NEIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C3_NEIE_SHIFT))&UART_C3_NEIE_MASK) /*!< UART0_C3.NEIE Field                     */
#define UART_C3_ORIE_MASK                        (0x8U)                                              /*!< UART0_C3.ORIE Mask                      */
#define UART_C3_ORIE_SHIFT                       (3U)                                                /*!< UART0_C3.ORIE Position                  */
#define UART_C3_ORIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C3_ORIE_SHIFT))&UART_C3_ORIE_MASK) /*!< UART0_C3.ORIE Field                     */
#define UART_C3_TXINV_MASK                       (0x10U)                                             /*!< UART0_C3.TXINV Mask                     */
#define UART_C3_TXINV_SHIFT                      (4U)                                                /*!< UART0_C3.TXINV Position                 */
#define UART_C3_TXINV(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C3_TXINV_SHIFT))&UART_C3_TXINV_MASK) /*!< UART0_C3.TXINV Field                    */
#define UART_C3_TXDIR_MASK                       (0x20U)                                             /*!< UART0_C3.TXDIR Mask                     */
#define UART_C3_TXDIR_SHIFT                      (5U)                                                /*!< UART0_C3.TXDIR Position                 */
#define UART_C3_TXDIR(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C3_TXDIR_SHIFT))&UART_C3_TXDIR_MASK) /*!< UART0_C3.TXDIR Field                    */
#define UART_C3_T8_MASK                          (0x40U)                                             /*!< UART0_C3.T8 Mask                        */
#define UART_C3_T8_SHIFT                         (6U)                                                /*!< UART0_C3.T8 Position                    */
#define UART_C3_T8(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C3_T8_SHIFT))&UART_C3_T8_MASK) /*!< UART0_C3.T8 Field                       */
#define UART_C3_R8_MASK                          (0x80U)                                             /*!< UART0_C3.R8 Mask                        */
#define UART_C3_R8_SHIFT                         (7U)                                                /*!< UART0_C3.R8 Position                    */
#define UART_C3_R8(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C3_R8_SHIFT))&UART_C3_R8_MASK) /*!< UART0_C3.R8 Field                       */

/*! @name D - Data Register */
#define UART_D_RT_MASK                           (0xFFU)                                             /*!< UART0_D.RT Mask                         */
#define UART_D_RT_SHIFT                          (0U)                                                /*!< UART0_D.RT Position                     */
#define UART_D_RT(x)                             (((uint8_t)(((uint8_t)(x))<<UART_D_RT_SHIFT))&UART_D_RT_MASK) /*!< UART0_D.RT Field                        */

/*! @name MA - Match Address Registers %s */
#define UART_MA_MA_MASK                          (0xFFU)                                             /*!< UART0_MA.MA Mask                        */
#define UART_MA_MA_SHIFT                         (0U)                                                /*!< UART0_MA.MA Position                    */
#define UART_MA_MA(x)                            (((uint8_t)(((uint8_t)(x))<<UART_MA_MA_SHIFT))&UART_MA_MA_MASK) /*!< UART0_MA.MA Field                       */

/*! @name C4 - Control Register 4 */
#define UART_C4_BRFA_MASK                        (0x1FU)                                             /*!< UART0_C4.BRFA Mask                      */
#define UART_C4_BRFA_SHIFT                       (0U)                                                /*!< UART0_C4.BRFA Position                  */
#define UART_C4_BRFA(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C4_BRFA_SHIFT))&UART_C4_BRFA_MASK) /*!< UART0_C4.BRFA Field                     */
#define UART_C4_M10_MASK                         (0x20U)                                             /*!< UART0_C4.M10 Mask                       */
#define UART_C4_M10_SHIFT                        (5U)                                                /*!< UART0_C4.M10 Position                   */
#define UART_C4_M10(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C4_M10_SHIFT))&UART_C4_M10_MASK) /*!< UART0_C4.M10 Field                      */
#define UART_C4_MAEN2_MASK                       (0x40U)                                             /*!< UART0_C4.MAEN2 Mask                     */
#define UART_C4_MAEN2_SHIFT                      (6U)                                                /*!< UART0_C4.MAEN2 Position                 */
#define UART_C4_MAEN2(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C4_MAEN2_SHIFT))&UART_C4_MAEN2_MASK) /*!< UART0_C4.MAEN2 Field                    */
#define UART_C4_MAEN1_MASK                       (0x80U)                                             /*!< UART0_C4.MAEN1 Mask                     */
#define UART_C4_MAEN1_SHIFT                      (7U)                                                /*!< UART0_C4.MAEN1 Position                 */
#define UART_C4_MAEN1(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C4_MAEN1_SHIFT))&UART_C4_MAEN1_MASK) /*!< UART0_C4.MAEN1 Field                    */

/*! @name C5 - Control Register 5 */
#define UART_C5_LBKDDMAS_MASK                    (0x8U)                                              /*!< UART0_C5.LBKDDMAS Mask                  */
#define UART_C5_LBKDDMAS_SHIFT                   (3U)                                                /*!< UART0_C5.LBKDDMAS Position              */
#define UART_C5_LBKDDMAS(x)                      (((uint8_t)(((uint8_t)(x))<<UART_C5_LBKDDMAS_SHIFT))&UART_C5_LBKDDMAS_MASK) /*!< UART0_C5.LBKDDMAS Field                 */
#define UART_C5_RDMAS_MASK                       (0x20U)                                             /*!< UART0_C5.RDMAS Mask                     */
#define UART_C5_RDMAS_SHIFT                      (5U)                                                /*!< UART0_C5.RDMAS Position                 */
#define UART_C5_RDMAS(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C5_RDMAS_SHIFT))&UART_C5_RDMAS_MASK) /*!< UART0_C5.RDMAS Field                    */
#define UART_C5_TDMAS_MASK                       (0x80U)                                             /*!< UART0_C5.TDMAS Mask                     */
#define UART_C5_TDMAS_SHIFT                      (7U)                                                /*!< UART0_C5.TDMAS Position                 */
#define UART_C5_TDMAS(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C5_TDMAS_SHIFT))&UART_C5_TDMAS_MASK) /*!< UART0_C5.TDMAS Field                    */

/*! @name ED - Extended Data Register */
#define UART_ED_PARITYE_MASK                     (0x40U)                                             /*!< UART0_ED.PARITYE Mask                   */
#define UART_ED_PARITYE_SHIFT                    (6U)                                                /*!< UART0_ED.PARITYE Position               */
#define UART_ED_PARITYE(x)                       (((uint8_t)(((uint8_t)(x))<<UART_ED_PARITYE_SHIFT))&UART_ED_PARITYE_MASK) /*!< UART0_ED.PARITYE Field                  */
#define UART_ED_NOISY_MASK                       (0x80U)                                             /*!< UART0_ED.NOISY Mask                     */
#define UART_ED_NOISY_SHIFT                      (7U)                                                /*!< UART0_ED.NOISY Position                 */
#define UART_ED_NOISY(x)                         (((uint8_t)(((uint8_t)(x))<<UART_ED_NOISY_SHIFT))&UART_ED_NOISY_MASK) /*!< UART0_ED.NOISY Field                    */

/*! @name MODEM - Modem Register */
#define UART_MODEM_TXCTSE_MASK                   (0x1U)                                              /*!< UART0_MODEM.TXCTSE Mask                 */
#define UART_MODEM_TXCTSE_SHIFT                  (0U)                                                /*!< UART0_MODEM.TXCTSE Position             */
#define UART_MODEM_TXCTSE(x)                     (((uint8_t)(((uint8_t)(x))<<UART_MODEM_TXCTSE_SHIFT))&UART_MODEM_TXCTSE_MASK) /*!< UART0_MODEM.TXCTSE Field                */
#define UART_MODEM_TXRTSE_MASK                   (0x2U)                                              /*!< UART0_MODEM.TXRTSE Mask                 */
#define UART_MODEM_TXRTSE_SHIFT                  (1U)                                                /*!< UART0_MODEM.TXRTSE Position             */
#define UART_MODEM_TXRTSE(x)                     (((uint8_t)(((uint8_t)(x))<<UART_MODEM_TXRTSE_SHIFT))&UART_MODEM_TXRTSE_MASK) /*!< UART0_MODEM.TXRTSE Field                */
#define UART_MODEM_TXRTSPOL_MASK                 (0x4U)                                              /*!< UART0_MODEM.TXRTSPOL Mask               */
#define UART_MODEM_TXRTSPOL_SHIFT                (2U)                                                /*!< UART0_MODEM.TXRTSPOL Position           */
#define UART_MODEM_TXRTSPOL(x)                   (((uint8_t)(((uint8_t)(x))<<UART_MODEM_TXRTSPOL_SHIFT))&UART_MODEM_TXRTSPOL_MASK) /*!< UART0_MODEM.TXRTSPOL Field              */
#define UART_MODEM_RXRTSE_MASK                   (0x8U)                                              /*!< UART0_MODEM.RXRTSE Mask                 */
#define UART_MODEM_RXRTSE_SHIFT                  (3U)                                                /*!< UART0_MODEM.RXRTSE Position             */
#define UART_MODEM_RXRTSE(x)                     (((uint8_t)(((uint8_t)(x))<<UART_MODEM_RXRTSE_SHIFT))&UART_MODEM_RXRTSE_MASK) /*!< UART0_MODEM.RXRTSE Field                */

/*! @name PFIFO - FIFO Parameters */
#define UART_PFIFO_RXFIFOSIZE_MASK               (0x7U)                                              /*!< UART0_PFIFO.RXFIFOSIZE Mask             */
#define UART_PFIFO_RXFIFOSIZE_SHIFT              (0U)                                                /*!< UART0_PFIFO.RXFIFOSIZE Position         */
#define UART_PFIFO_RXFIFOSIZE(x)                 (((uint8_t)(((uint8_t)(x))<<UART_PFIFO_RXFIFOSIZE_SHIFT))&UART_PFIFO_RXFIFOSIZE_MASK) /*!< UART0_PFIFO.RXFIFOSIZE Field            */
#define UART_PFIFO_RXFE_MASK                     (0x8U)                                              /*!< UART0_PFIFO.RXFE Mask                   */
#define UART_PFIFO_RXFE_SHIFT                    (3U)                                                /*!< UART0_PFIFO.RXFE Position               */
#define UART_PFIFO_RXFE(x)                       (((uint8_t)(((uint8_t)(x))<<UART_PFIFO_RXFE_SHIFT))&UART_PFIFO_RXFE_MASK) /*!< UART0_PFIFO.RXFE Field                  */
#define UART_PFIFO_TXFIFOSIZE_MASK               (0x70U)                                             /*!< UART0_PFIFO.TXFIFOSIZE Mask             */
#define UART_PFIFO_TXFIFOSIZE_SHIFT              (4U)                                                /*!< UART0_PFIFO.TXFIFOSIZE Position         */
#define UART_PFIFO_TXFIFOSIZE(x)                 (((uint8_t)(((uint8_t)(x))<<UART_PFIFO_TXFIFOSIZE_SHIFT))&UART_PFIFO_TXFIFOSIZE_MASK) /*!< UART0_PFIFO.TXFIFOSIZE Field            */
#define UART_PFIFO_TXFE_MASK                     (0x80U)                                             /*!< UART0_PFIFO.TXFE Mask                   */
#define UART_PFIFO_TXFE_SHIFT                    (7U)                                                /*!< UART0_PFIFO.TXFE Position               */
#define UART_PFIFO_TXFE(x)                       (((uint8_t)(((uint8_t)(x))<<UART_PFIFO_TXFE_SHIFT))&UART_PFIFO_TXFE_MASK) /*!< UART0_PFIFO.TXFE Field                  */

/*! @name CFIFO - FIFO Control Register */
#define UART_CFIFO_RXUFE_MASK                    (0x1U)                                              /*!< UART0_CFIFO.RXUFE Mask                  */
#define UART_CFIFO_RXUFE_SHIFT                   (0U)                                                /*!< UART0_CFIFO.RXUFE Position              */
#define UART_CFIFO_RXUFE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_CFIFO_RXUFE_SHIFT))&UART_CFIFO_RXUFE_MASK) /*!< UART0_CFIFO.RXUFE Field                 */
#define UART_CFIFO_TXOFE_MASK                    (0x2U)                                              /*!< UART0_CFIFO.TXOFE Mask                  */
#define UART_CFIFO_TXOFE_SHIFT                   (1U)                                                /*!< UART0_CFIFO.TXOFE Position              */
#define UART_CFIFO_TXOFE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_CFIFO_TXOFE_SHIFT))&UART_CFIFO_TXOFE_MASK) /*!< UART0_CFIFO.TXOFE Field                 */
#define UART_CFIFO_RXOFE_MASK                    (0x4U)                                              /*!< UART0_CFIFO.RXOFE Mask                  */
#define UART_CFIFO_RXOFE_SHIFT                   (2U)                                                /*!< UART0_CFIFO.RXOFE Position              */
#define UART_CFIFO_RXOFE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_CFIFO_RXOFE_SHIFT))&UART_CFIFO_RXOFE_MASK) /*!< UART0_CFIFO.RXOFE Field                 */
#define UART_CFIFO_RXFLUSH_MASK                  (0x40U)                                             /*!< UART0_CFIFO.RXFLUSH Mask                */
#define UART_CFIFO_RXFLUSH_SHIFT                 (6U)                                                /*!< UART0_CFIFO.RXFLUSH Position            */
#define UART_CFIFO_RXFLUSH(x)                    (((uint8_t)(((uint8_t)(x))<<UART_CFIFO_RXFLUSH_SHIFT))&UART_CFIFO_RXFLUSH_MASK) /*!< UART0_CFIFO.RXFLUSH Field               */
#define UART_CFIFO_TXFLUSH_MASK                  (0x80U)                                             /*!< UART0_CFIFO.TXFLUSH Mask                */
#define UART_CFIFO_TXFLUSH_SHIFT                 (7U)                                                /*!< UART0_CFIFO.TXFLUSH Position            */
#define UART_CFIFO_TXFLUSH(x)                    (((uint8_t)(((uint8_t)(x))<<UART_CFIFO_TXFLUSH_SHIFT))&UART_CFIFO_TXFLUSH_MASK) /*!< UART0_CFIFO.TXFLUSH Field               */

/*! @name SFIFO - FIFO Status Register */
#define UART_SFIFO_RXUF_MASK                     (0x1U)                                              /*!< UART0_SFIFO.RXUF Mask                   */
#define UART_SFIFO_RXUF_SHIFT                    (0U)                                                /*!< UART0_SFIFO.RXUF Position               */
#define UART_SFIFO_RXUF(x)                       (((uint8_t)(((uint8_t)(x))<<UART_SFIFO_RXUF_SHIFT))&UART_SFIFO_RXUF_MASK) /*!< UART0_SFIFO.RXUF Field                  */
#define UART_SFIFO_TXOF_MASK                     (0x2U)                                              /*!< UART0_SFIFO.TXOF Mask                   */
#define UART_SFIFO_TXOF_SHIFT                    (1U)                                                /*!< UART0_SFIFO.TXOF Position               */
#define UART_SFIFO_TXOF(x)                       (((uint8_t)(((uint8_t)(x))<<UART_SFIFO_TXOF_SHIFT))&UART_SFIFO_TXOF_MASK) /*!< UART0_SFIFO.TXOF Field                  */
#define UART_SFIFO_RXOF_MASK                     (0x4U)                                              /*!< UART0_SFIFO.RXOF Mask                   */
#define UART_SFIFO_RXOF_SHIFT                    (2U)                                                /*!< UART0_SFIFO.RXOF Position               */
#define UART_SFIFO_RXOF(x)                       (((uint8_t)(((uint8_t)(x))<<UART_SFIFO_RXOF_SHIFT))&UART_SFIFO_RXOF_MASK) /*!< UART0_SFIFO.RXOF Field                  */
#define UART_SFIFO_RXEMPT_MASK                   (0x40U)                                             /*!< UART0_SFIFO.RXEMPT Mask                 */
#define UART_SFIFO_RXEMPT_SHIFT                  (6U)                                                /*!< UART0_SFIFO.RXEMPT Position             */
#define UART_SFIFO_RXEMPT(x)                     (((uint8_t)(((uint8_t)(x))<<UART_SFIFO_RXEMPT_SHIFT))&UART_SFIFO_RXEMPT_MASK) /*!< UART0_SFIFO.RXEMPT Field                */
#define UART_SFIFO_TXEMPT_MASK                   (0x80U)                                             /*!< UART0_SFIFO.TXEMPT Mask                 */
#define UART_SFIFO_TXEMPT_SHIFT                  (7U)                                                /*!< UART0_SFIFO.TXEMPT Position             */
#define UART_SFIFO_TXEMPT(x)                     (((uint8_t)(((uint8_t)(x))<<UART_SFIFO_TXEMPT_SHIFT))&UART_SFIFO_TXEMPT_MASK) /*!< UART0_SFIFO.TXEMPT Field                */

/*! @name TWFIFO - FIFO Transmit Watermark */
#define UART_TWFIFO_TXWATER_MASK                 (0xFFU)                                             /*!< UART0_TWFIFO.TXWATER Mask               */
#define UART_TWFIFO_TXWATER_SHIFT                (0U)                                                /*!< UART0_TWFIFO.TXWATER Position           */
#define UART_TWFIFO_TXWATER(x)                   (((uint8_t)(((uint8_t)(x))<<UART_TWFIFO_TXWATER_SHIFT))&UART_TWFIFO_TXWATER_MASK) /*!< UART0_TWFIFO.TXWATER Field              */

/*! @name TCFIFO - FIFO Transmit Count */
#define UART_TCFIFO_TXCOUNT_MASK                 (0xFFU)                                             /*!< UART0_TCFIFO.TXCOUNT Mask               */
#define UART_TCFIFO_TXCOUNT_SHIFT                (0U)                                                /*!< UART0_TCFIFO.TXCOUNT Position           */
#define UART_TCFIFO_TXCOUNT(x)                   (((uint8_t)(((uint8_t)(x))<<UART_TCFIFO_TXCOUNT_SHIFT))&UART_TCFIFO_TXCOUNT_MASK) /*!< UART0_TCFIFO.TXCOUNT Field              */

/*! @name RWFIFO - FIFO Receive Watermark */
#define UART_RWFIFO_RXWATER_MASK                 (0xFFU)                                             /*!< UART0_RWFIFO.RXWATER Mask               */
#define UART_RWFIFO_RXWATER_SHIFT                (0U)                                                /*!< UART0_RWFIFO.RXWATER Position           */
#define UART_RWFIFO_RXWATER(x)                   (((uint8_t)(((uint8_t)(x))<<UART_RWFIFO_RXWATER_SHIFT))&UART_RWFIFO_RXWATER_MASK) /*!< UART0_RWFIFO.RXWATER Field              */

/*! @name RCFIFO - FIFO Receive Count */
#define UART_RCFIFO_RXCOUNT_MASK                 (0xFFU)                                             /*!< UART0_RCFIFO.RXCOUNT Mask               */
#define UART_RCFIFO_RXCOUNT_SHIFT                (0U)                                                /*!< UART0_RCFIFO.RXCOUNT Position           */
#define UART_RCFIFO_RXCOUNT(x)                   (((uint8_t)(((uint8_t)(x))<<UART_RCFIFO_RXCOUNT_SHIFT))&UART_RCFIFO_RXCOUNT_MASK) /*!< UART0_RCFIFO.RXCOUNT Field              */
/**
 * @} */ /* End group UART_Register_Masks_GROUP 
 */

/* UART0 - Peripheral instance base addresses */
#define UART0_BasePtr                  0x4006A000UL //!< Peripheral base address
#define UART0                          ((UART_Type *) UART0_BasePtr) //!< Freescale base pointer
#define UART0_BASE_PTR                 (UART0) //!< Freescale style base pointer
/**
 * @} */ /* End group UART_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup UART_Peripheral_access_layer_GROUP UART Peripheral Access Layer
* @brief C Struct for UART
* @{
*/

/* ================================================================================ */
/* ================           UART1 (derived from UART0)           ================ */
/* ================================================================================ */

/**
 * @brief Universal Asynchronous Receiver/Transmitter
 */

/* UART1 - Peripheral instance base addresses */
#define UART1_BasePtr                  0x4006B000UL //!< Peripheral base address
#define UART1                          ((UART_Type *) UART1_BasePtr) //!< Freescale base pointer
#define UART1_BASE_PTR                 (UART1) //!< Freescale style base pointer
/**
 * @} */ /* End group UART_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup WDOG_Peripheral_access_layer_GROUP WDOG Peripheral Access Layer
* @brief C Struct for WDOG
* @{
*/

/* ================================================================================ */
/* ================           WDOG (file:WDOG_MK)                  ================ */
/* ================================================================================ */

/**
 * @brief Watchdog Timer
 */
/**
* @addtogroup WDOG_structs_GROUP WDOG struct
* @brief Struct for WDOG
* @{
*/
typedef struct WDOG_Type {
   __IO uint16_t  STCTRLH;                      /**< 0000: Status and Control Register High                             */
   __IO uint16_t  STCTRLL;                      /**< 0002: Status and Control Register Low                              */
   __IO uint16_t  TOVALH;                       /**< 0004: Time-out Value Register High                                 */
   __IO uint16_t  TOVALL;                       /**< 0006: Time-out Value Register Low                                  */
   __IO uint16_t  WINH;                         /**< 0008: Window Register High                                         */
   __IO uint16_t  WINL;                         /**< 000A: Window Register Low                                          */
   __IO uint16_t  REFRESH;                      /**< 000C: Refresh Register                                             */
   __IO uint16_t  UNLOCK;                       /**< 000E: Unlock Register                                              */
   __IO uint16_t  TMROUTH;                      /**< 0010: Timer Output Register High                                   */
   __IO uint16_t  TMROUTL;                      /**< 0012: Timer Output Register Low                                    */
   __IO uint16_t  RSTCNT;                       /**< 0014: Reset Count Register                                         */
   __IO uint16_t  PRESC;                        /**< 0016: Prescaler Register                                           */
} WDOG_Type;

/**
 * @} */ /* End group WDOG_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'WDOG' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup WDOG_Register_Masks_GROUP WDOG Register Masks
* @brief Register Masks for WDOG
* @{
*/

/*! @name STCTRLH - Status and Control Register High */
#define WDOG_STCTRLH_WDOGEN_MASK                 (0x1U)                                              /*!< WDOG_STCTRLH.WDOGEN Mask                */
#define WDOG_STCTRLH_WDOGEN_SHIFT                (0U)                                                /*!< WDOG_STCTRLH.WDOGEN Position            */
#define WDOG_STCTRLH_WDOGEN(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_WDOGEN_SHIFT))&WDOG_STCTRLH_WDOGEN_MASK) /*!< WDOG_STCTRLH.WDOGEN Field               */
#define WDOG_STCTRLH_CLKSRC_MASK                 (0x2U)                                              /*!< WDOG_STCTRLH.CLKSRC Mask                */
#define WDOG_STCTRLH_CLKSRC_SHIFT                (1U)                                                /*!< WDOG_STCTRLH.CLKSRC Position            */
#define WDOG_STCTRLH_CLKSRC(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_CLKSRC_SHIFT))&WDOG_STCTRLH_CLKSRC_MASK) /*!< WDOG_STCTRLH.CLKSRC Field               */
#define WDOG_STCTRLH_IRQRSTEN_MASK               (0x4U)                                              /*!< WDOG_STCTRLH.IRQRSTEN Mask              */
#define WDOG_STCTRLH_IRQRSTEN_SHIFT              (2U)                                                /*!< WDOG_STCTRLH.IRQRSTEN Position          */
#define WDOG_STCTRLH_IRQRSTEN(x)                 (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_IRQRSTEN_SHIFT))&WDOG_STCTRLH_IRQRSTEN_MASK) /*!< WDOG_STCTRLH.IRQRSTEN Field             */
#define WDOG_STCTRLH_WINEN_MASK                  (0x8U)                                              /*!< WDOG_STCTRLH.WINEN Mask                 */
#define WDOG_STCTRLH_WINEN_SHIFT                 (3U)                                                /*!< WDOG_STCTRLH.WINEN Position             */
#define WDOG_STCTRLH_WINEN(x)                    (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_WINEN_SHIFT))&WDOG_STCTRLH_WINEN_MASK) /*!< WDOG_STCTRLH.WINEN Field                */
#define WDOG_STCTRLH_ALLOWUPDATE_MASK            (0x10U)                                             /*!< WDOG_STCTRLH.ALLOWUPDATE Mask           */
#define WDOG_STCTRLH_ALLOWUPDATE_SHIFT           (4U)                                                /*!< WDOG_STCTRLH.ALLOWUPDATE Position       */
#define WDOG_STCTRLH_ALLOWUPDATE(x)              (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_ALLOWUPDATE_SHIFT))&WDOG_STCTRLH_ALLOWUPDATE_MASK) /*!< WDOG_STCTRLH.ALLOWUPDATE Field          */
#define WDOG_STCTRLH_DBGEN_MASK                  (0x20U)                                             /*!< WDOG_STCTRLH.DBGEN Mask                 */
#define WDOG_STCTRLH_DBGEN_SHIFT                 (5U)                                                /*!< WDOG_STCTRLH.DBGEN Position             */
#define WDOG_STCTRLH_DBGEN(x)                    (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_DBGEN_SHIFT))&WDOG_STCTRLH_DBGEN_MASK) /*!< WDOG_STCTRLH.DBGEN Field                */
#define WDOG_STCTRLH_STOPEN_MASK                 (0x40U)                                             /*!< WDOG_STCTRLH.STOPEN Mask                */
#define WDOG_STCTRLH_STOPEN_SHIFT                (6U)                                                /*!< WDOG_STCTRLH.STOPEN Position            */
#define WDOG_STCTRLH_STOPEN(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_STOPEN_SHIFT))&WDOG_STCTRLH_STOPEN_MASK) /*!< WDOG_STCTRLH.STOPEN Field               */
#define WDOG_STCTRLH_WAITEN_MASK                 (0x80U)                                             /*!< WDOG_STCTRLH.WAITEN Mask                */
#define WDOG_STCTRLH_WAITEN_SHIFT                (7U)                                                /*!< WDOG_STCTRLH.WAITEN Position            */
#define WDOG_STCTRLH_WAITEN(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_WAITEN_SHIFT))&WDOG_STCTRLH_WAITEN_MASK) /*!< WDOG_STCTRLH.WAITEN Field               */
#define WDOG_STCTRLH_TESTWDOG_MASK               (0x400U)                                            /*!< WDOG_STCTRLH.TESTWDOG Mask              */
#define WDOG_STCTRLH_TESTWDOG_SHIFT              (10U)                                               /*!< WDOG_STCTRLH.TESTWDOG Position          */
#define WDOG_STCTRLH_TESTWDOG(x)                 (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_TESTWDOG_SHIFT))&WDOG_STCTRLH_TESTWDOG_MASK) /*!< WDOG_STCTRLH.TESTWDOG Field             */
#define WDOG_STCTRLH_TESTSEL_MASK                (0x800U)                                            /*!< WDOG_STCTRLH.TESTSEL Mask               */
#define WDOG_STCTRLH_TESTSEL_SHIFT               (11U)                                               /*!< WDOG_STCTRLH.TESTSEL Position           */
#define WDOG_STCTRLH_TESTSEL(x)                  (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_TESTSEL_SHIFT))&WDOG_STCTRLH_TESTSEL_MASK) /*!< WDOG_STCTRLH.TESTSEL Field              */
#define WDOG_STCTRLH_BYTESEL_MASK                (0x3000U)                                           /*!< WDOG_STCTRLH.BYTESEL Mask               */
#define WDOG_STCTRLH_BYTESEL_SHIFT               (12U)                                               /*!< WDOG_STCTRLH.BYTESEL Position           */
#define WDOG_STCTRLH_BYTESEL(x)                  (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_BYTESEL_SHIFT))&WDOG_STCTRLH_BYTESEL_MASK) /*!< WDOG_STCTRLH.BYTESEL Field              */
#define WDOG_STCTRLH_DISTESTWDOG_MASK            (0x4000U)                                           /*!< WDOG_STCTRLH.DISTESTWDOG Mask           */
#define WDOG_STCTRLH_DISTESTWDOG_SHIFT           (14U)                                               /*!< WDOG_STCTRLH.DISTESTWDOG Position       */
#define WDOG_STCTRLH_DISTESTWDOG(x)              (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_DISTESTWDOG_SHIFT))&WDOG_STCTRLH_DISTESTWDOG_MASK) /*!< WDOG_STCTRLH.DISTESTWDOG Field          */

/*! @name STCTRLL - Status and Control Register Low */
#define WDOG_STCTRLL_INTFLG_MASK                 (0x8000U)                                           /*!< WDOG_STCTRLL.INTFLG Mask                */
#define WDOG_STCTRLL_INTFLG_SHIFT                (15U)                                               /*!< WDOG_STCTRLL.INTFLG Position            */
#define WDOG_STCTRLL_INTFLG(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLL_INTFLG_SHIFT))&WDOG_STCTRLL_INTFLG_MASK) /*!< WDOG_STCTRLL.INTFLG Field               */

/*! @name TOVALH - Time-out Value Register High */
#define WDOG_TOVALH_TOVALHIGH_MASK               (0xFFFFU)                                           /*!< WDOG_TOVALH.TOVALHIGH Mask              */
#define WDOG_TOVALH_TOVALHIGH_SHIFT              (0U)                                                /*!< WDOG_TOVALH.TOVALHIGH Position          */
#define WDOG_TOVALH_TOVALHIGH(x)                 (((uint16_t)(((uint16_t)(x))<<WDOG_TOVALH_TOVALHIGH_SHIFT))&WDOG_TOVALH_TOVALHIGH_MASK) /*!< WDOG_TOVALH.TOVALHIGH Field             */

/*! @name TOVALL - Time-out Value Register Low */
#define WDOG_TOVALL_TOVALLOW_MASK                (0xFFFFU)                                           /*!< WDOG_TOVALL.TOVALLOW Mask               */
#define WDOG_TOVALL_TOVALLOW_SHIFT               (0U)                                                /*!< WDOG_TOVALL.TOVALLOW Position           */
#define WDOG_TOVALL_TOVALLOW(x)                  (((uint16_t)(((uint16_t)(x))<<WDOG_TOVALL_TOVALLOW_SHIFT))&WDOG_TOVALL_TOVALLOW_MASK) /*!< WDOG_TOVALL.TOVALLOW Field              */

/*! @name WINH - Window Register High */
#define WDOG_WINH_WINHIGH_MASK                   (0xFFFFU)                                           /*!< WDOG_WINH.WINHIGH Mask                  */
#define WDOG_WINH_WINHIGH_SHIFT                  (0U)                                                /*!< WDOG_WINH.WINHIGH Position              */
#define WDOG_WINH_WINHIGH(x)                     (((uint16_t)(((uint16_t)(x))<<WDOG_WINH_WINHIGH_SHIFT))&WDOG_WINH_WINHIGH_MASK) /*!< WDOG_WINH.WINHIGH Field                 */

/*! @name WINL - Window Register Low */
#define WDOG_WINL_WINLOW_MASK                    (0xFFFFU)                                           /*!< WDOG_WINL.WINLOW Mask                   */
#define WDOG_WINL_WINLOW_SHIFT                   (0U)                                                /*!< WDOG_WINL.WINLOW Position               */
#define WDOG_WINL_WINLOW(x)                      (((uint16_t)(((uint16_t)(x))<<WDOG_WINL_WINLOW_SHIFT))&WDOG_WINL_WINLOW_MASK) /*!< WDOG_WINL.WINLOW Field                  */

/*! @name REFRESH - Refresh Register */
#define WDOG_REFRESH_WDOGREFRESH_MASK            (0xFFFFU)                                           /*!< WDOG_REFRESH.WDOGREFRESH Mask           */
#define WDOG_REFRESH_WDOGREFRESH_SHIFT           (0U)                                                /*!< WDOG_REFRESH.WDOGREFRESH Position       */
#define WDOG_REFRESH_WDOGREFRESH(x)              (((uint16_t)(((uint16_t)(x))<<WDOG_REFRESH_WDOGREFRESH_SHIFT))&WDOG_REFRESH_WDOGREFRESH_MASK) /*!< WDOG_REFRESH.WDOGREFRESH Field          */

/*! @name UNLOCK - Unlock Register */
#define WDOG_UNLOCK_WDOGUNLOCK_MASK              (0xFFFFU)                                           /*!< WDOG_UNLOCK.WDOGUNLOCK Mask             */
#define WDOG_UNLOCK_WDOGUNLOCK_SHIFT             (0U)                                                /*!< WDOG_UNLOCK.WDOGUNLOCK Position         */
#define WDOG_UNLOCK_WDOGUNLOCK(x)                (((uint16_t)(((uint16_t)(x))<<WDOG_UNLOCK_WDOGUNLOCK_SHIFT))&WDOG_UNLOCK_WDOGUNLOCK_MASK) /*!< WDOG_UNLOCK.WDOGUNLOCK Field            */

/*! @name TMROUTH - Timer Output Register High */
#define WDOG_TMROUTH_TIMEROUTHIGH_MASK           (0xFFFFU)                                           /*!< WDOG_TMROUTH.TIMEROUTHIGH Mask          */
#define WDOG_TMROUTH_TIMEROUTHIGH_SHIFT          (0U)                                                /*!< WDOG_TMROUTH.TIMEROUTHIGH Position      */
#define WDOG_TMROUTH_TIMEROUTHIGH(x)             (((uint16_t)(((uint16_t)(x))<<WDOG_TMROUTH_TIMEROUTHIGH_SHIFT))&WDOG_TMROUTH_TIMEROUTHIGH_MASK) /*!< WDOG_TMROUTH.TIMEROUTHIGH Field         */

/*! @name TMROUTL - Timer Output Register Low */
#define WDOG_TMROUTL_TIMEROUTLOW_MASK            (0xFFFFU)                                           /*!< WDOG_TMROUTL.TIMEROUTLOW Mask           */
#define WDOG_TMROUTL_TIMEROUTLOW_SHIFT           (0U)                                                /*!< WDOG_TMROUTL.TIMEROUTLOW Position       */
#define WDOG_TMROUTL_TIMEROUTLOW(x)              (((uint16_t)(((uint16_t)(x))<<WDOG_TMROUTL_TIMEROUTLOW_SHIFT))&WDOG_TMROUTL_TIMEROUTLOW_MASK) /*!< WDOG_TMROUTL.TIMEROUTLOW Field          */

/*! @name RSTCNT - Reset Count Register */
#define WDOG_RSTCNT_RSTCNT_MASK                  (0xFFFFU)                                           /*!< WDOG_RSTCNT.RSTCNT Mask                 */
#define WDOG_RSTCNT_RSTCNT_SHIFT                 (0U)                                                /*!< WDOG_RSTCNT.RSTCNT Position             */
#define WDOG_RSTCNT_RSTCNT(x)                    (((uint16_t)(((uint16_t)(x))<<WDOG_RSTCNT_RSTCNT_SHIFT))&WDOG_RSTCNT_RSTCNT_MASK) /*!< WDOG_RSTCNT.RSTCNT Field                */

/*! @name PRESC - Prescaler Register */
#define WDOG_PRESC_PRESCVAL_MASK                 (0x700U)                                            /*!< WDOG_PRESC.PRESCVAL Mask                */
#define WDOG_PRESC_PRESCVAL_SHIFT                (8U)                                                /*!< WDOG_PRESC.PRESCVAL Position            */
#define WDOG_PRESC_PRESCVAL(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_PRESC_PRESCVAL_SHIFT))&WDOG_PRESC_PRESCVAL_MASK) /*!< WDOG_PRESC.PRESCVAL Field               */
/**
 * @} */ /* End group WDOG_Register_Masks_GROUP 
 */

/* WDOG - Peripheral instance base addresses */
#define WDOG_BasePtr                   0x40052000UL //!< Peripheral base address
#define WDOG                           ((WDOG_Type *) WDOG_BasePtr) //!< Freescale base pointer
#define WDOG_BASE_PTR                  (WDOG) //!< Freescale style base pointer
/**
 * @} */ /* End group WDOG_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XBARA_Peripheral_access_layer_GROUP XBARA Peripheral Access Layer
* @brief C Struct for XBARA
* @{
*/

/* ================================================================================ */
/* ================           XBARA (file:XBARA_MKV30)             ================ */
/* ================================================================================ */

/**
 * @brief Crossbar Switch
 */
/**
* @addtogroup XBARA_structs_GROUP XBARA struct
* @brief Struct for XBARA
* @{
*/
typedef struct XBARA_Type {
   __IO uint16_t  SEL[30];                      /**< 0000: Crossbar Select Register                                     */
   __IO uint16_t  CTRL0;                        /**< 003C: Crossbar A Control Register 0                                */
   __IO uint16_t  CTRL1;                        /**< 003E: Crossbar A Control Register 1                                */
} XBARA_Type;

/**
 * @} */ /* End group XBARA_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XBARA' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XBARA_Register_Masks_GROUP XBARA Register Masks
* @brief Register Masks for XBARA
* @{
*/

/*! @name SEL - Crossbar Select Register */
#define XBARA_SEL_SEL0_MASK                      (0x3FU)                                             /*!< XBARA_SEL.SEL0 Mask                     */
#define XBARA_SEL_SEL0_SHIFT                     (0U)                                                /*!< XBARA_SEL.SEL0 Position                 */
#define XBARA_SEL_SEL0(x)                        (((uint16_t)(((uint16_t)(x))<<XBARA_SEL_SEL0_SHIFT))&XBARA_SEL_SEL0_MASK) /*!< XBARA_SEL.SEL0 Field                    */
#define XBARA_SEL_SEL1_MASK                      (0x3F00U)                                           /*!< XBARA_SEL.SEL1 Mask                     */
#define XBARA_SEL_SEL1_SHIFT                     (8U)                                                /*!< XBARA_SEL.SEL1 Position                 */
#define XBARA_SEL_SEL1(x)                        (((uint16_t)(((uint16_t)(x))<<XBARA_SEL_SEL1_SHIFT))&XBARA_SEL_SEL1_MASK) /*!< XBARA_SEL.SEL1 Field                    */

/*! @name CTRL0 - Crossbar A Control Register 0 */
#define XBARA_CTRL0_DEN0_MASK                    (0x1U)                                              /*!< XBARA_CTRL0.DEN0 Mask                   */
#define XBARA_CTRL0_DEN0_SHIFT                   (0U)                                                /*!< XBARA_CTRL0.DEN0 Position               */
#define XBARA_CTRL0_DEN0(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL0_DEN0_SHIFT))&XBARA_CTRL0_DEN0_MASK) /*!< XBARA_CTRL0.DEN0 Field                  */
#define XBARA_CTRL0_IEN0_MASK                    (0x2U)                                              /*!< XBARA_CTRL0.IEN0 Mask                   */
#define XBARA_CTRL0_IEN0_SHIFT                   (1U)                                                /*!< XBARA_CTRL0.IEN0 Position               */
#define XBARA_CTRL0_IEN0(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL0_IEN0_SHIFT))&XBARA_CTRL0_IEN0_MASK) /*!< XBARA_CTRL0.IEN0 Field                  */
#define XBARA_CTRL0_EDGE0_MASK                   (0xCU)                                              /*!< XBARA_CTRL0.EDGE0 Mask                  */
#define XBARA_CTRL0_EDGE0_SHIFT                  (2U)                                                /*!< XBARA_CTRL0.EDGE0 Position              */
#define XBARA_CTRL0_EDGE0(x)                     (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL0_EDGE0_SHIFT))&XBARA_CTRL0_EDGE0_MASK) /*!< XBARA_CTRL0.EDGE0 Field                 */
#define XBARA_CTRL0_STS0_MASK                    (0x10U)                                             /*!< XBARA_CTRL0.STS0 Mask                   */
#define XBARA_CTRL0_STS0_SHIFT                   (4U)                                                /*!< XBARA_CTRL0.STS0 Position               */
#define XBARA_CTRL0_STS0(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL0_STS0_SHIFT))&XBARA_CTRL0_STS0_MASK) /*!< XBARA_CTRL0.STS0 Field                  */
#define XBARA_CTRL0_DEN1_MASK                    (0x100U)                                            /*!< XBARA_CTRL0.DEN1 Mask                   */
#define XBARA_CTRL0_DEN1_SHIFT                   (8U)                                                /*!< XBARA_CTRL0.DEN1 Position               */
#define XBARA_CTRL0_DEN1(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL0_DEN1_SHIFT))&XBARA_CTRL0_DEN1_MASK) /*!< XBARA_CTRL0.DEN1 Field                  */
#define XBARA_CTRL0_IEN1_MASK                    (0x200U)                                            /*!< XBARA_CTRL0.IEN1 Mask                   */
#define XBARA_CTRL0_IEN1_SHIFT                   (9U)                                                /*!< XBARA_CTRL0.IEN1 Position               */
#define XBARA_CTRL0_IEN1(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL0_IEN1_SHIFT))&XBARA_CTRL0_IEN1_MASK) /*!< XBARA_CTRL0.IEN1 Field                  */
#define XBARA_CTRL0_EDGE1_MASK                   (0xC00U)                                            /*!< XBARA_CTRL0.EDGE1 Mask                  */
#define XBARA_CTRL0_EDGE1_SHIFT                  (10U)                                               /*!< XBARA_CTRL0.EDGE1 Position              */
#define XBARA_CTRL0_EDGE1(x)                     (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL0_EDGE1_SHIFT))&XBARA_CTRL0_EDGE1_MASK) /*!< XBARA_CTRL0.EDGE1 Field                 */
#define XBARA_CTRL0_STS1_MASK                    (0x1000U)                                           /*!< XBARA_CTRL0.STS1 Mask                   */
#define XBARA_CTRL0_STS1_SHIFT                   (12U)                                               /*!< XBARA_CTRL0.STS1 Position               */
#define XBARA_CTRL0_STS1(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL0_STS1_SHIFT))&XBARA_CTRL0_STS1_MASK) /*!< XBARA_CTRL0.STS1 Field                  */

/*! @name CTRL1 - Crossbar A Control Register 1 */
#define XBARA_CTRL1_DEN2_MASK                    (0x1U)                                              /*!< XBARA_CTRL1.DEN2 Mask                   */
#define XBARA_CTRL1_DEN2_SHIFT                   (0U)                                                /*!< XBARA_CTRL1.DEN2 Position               */
#define XBARA_CTRL1_DEN2(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL1_DEN2_SHIFT))&XBARA_CTRL1_DEN2_MASK) /*!< XBARA_CTRL1.DEN2 Field                  */
#define XBARA_CTRL1_IEN2_MASK                    (0x2U)                                              /*!< XBARA_CTRL1.IEN2 Mask                   */
#define XBARA_CTRL1_IEN2_SHIFT                   (1U)                                                /*!< XBARA_CTRL1.IEN2 Position               */
#define XBARA_CTRL1_IEN2(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL1_IEN2_SHIFT))&XBARA_CTRL1_IEN2_MASK) /*!< XBARA_CTRL1.IEN2 Field                  */
#define XBARA_CTRL1_EDGE2_MASK                   (0xCU)                                              /*!< XBARA_CTRL1.EDGE2 Mask                  */
#define XBARA_CTRL1_EDGE2_SHIFT                  (2U)                                                /*!< XBARA_CTRL1.EDGE2 Position              */
#define XBARA_CTRL1_EDGE2(x)                     (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL1_EDGE2_SHIFT))&XBARA_CTRL1_EDGE2_MASK) /*!< XBARA_CTRL1.EDGE2 Field                 */
#define XBARA_CTRL1_STS2_MASK                    (0x10U)                                             /*!< XBARA_CTRL1.STS2 Mask                   */
#define XBARA_CTRL1_STS2_SHIFT                   (4U)                                                /*!< XBARA_CTRL1.STS2 Position               */
#define XBARA_CTRL1_STS2(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL1_STS2_SHIFT))&XBARA_CTRL1_STS2_MASK) /*!< XBARA_CTRL1.STS2 Field                  */
#define XBARA_CTRL1_DEN3_MASK                    (0x100U)                                            /*!< XBARA_CTRL1.DEN3 Mask                   */
#define XBARA_CTRL1_DEN3_SHIFT                   (8U)                                                /*!< XBARA_CTRL1.DEN3 Position               */
#define XBARA_CTRL1_DEN3(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL1_DEN3_SHIFT))&XBARA_CTRL1_DEN3_MASK) /*!< XBARA_CTRL1.DEN3 Field                  */
#define XBARA_CTRL1_IEN3_MASK                    (0x200U)                                            /*!< XBARA_CTRL1.IEN3 Mask                   */
#define XBARA_CTRL1_IEN3_SHIFT                   (9U)                                                /*!< XBARA_CTRL1.IEN3 Position               */
#define XBARA_CTRL1_IEN3(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL1_IEN3_SHIFT))&XBARA_CTRL1_IEN3_MASK) /*!< XBARA_CTRL1.IEN3 Field                  */
#define XBARA_CTRL1_EDGE3_MASK                   (0xC00U)                                            /*!< XBARA_CTRL1.EDGE3 Mask                  */
#define XBARA_CTRL1_EDGE3_SHIFT                  (10U)                                               /*!< XBARA_CTRL1.EDGE3 Position              */
#define XBARA_CTRL1_EDGE3(x)                     (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL1_EDGE3_SHIFT))&XBARA_CTRL1_EDGE3_MASK) /*!< XBARA_CTRL1.EDGE3 Field                 */
#define XBARA_CTRL1_STS3_MASK                    (0x1000U)                                           /*!< XBARA_CTRL1.STS3 Mask                   */
#define XBARA_CTRL1_STS3_SHIFT                   (12U)                                               /*!< XBARA_CTRL1.STS3 Position               */
#define XBARA_CTRL1_STS3(x)                      (((uint16_t)(((uint16_t)(x))<<XBARA_CTRL1_STS3_SHIFT))&XBARA_CTRL1_STS3_MASK) /*!< XBARA_CTRL1.STS3 Field                  */
/**
 * @} */ /* End group XBARA_Register_Masks_GROUP 
 */

/* XBARA - Peripheral instance base addresses */
#define XBARA_BasePtr                  0x40059000UL //!< Peripheral base address
#define XBARA                          ((XBARA_Type *) XBARA_BasePtr) //!< Freescale base pointer
#define XBARA_BASE_PTR                 (XBARA) //!< Freescale style base pointer
/**
 * @} */ /* End group XBARA_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XBARB_Peripheral_access_layer_GROUP XBARB Peripheral Access Layer
* @brief C Struct for XBARB
* @{
*/

/* ================================================================================ */
/* ================           XBARB (file:XBARB_MKV40)             ================ */
/* ================================================================================ */

/**
 * @brief Crossbar Switch
 */
/**
* @addtogroup XBARB_structs_GROUP XBARB struct
* @brief Struct for XBARB
* @{
*/
typedef struct XBARB_Type {
   __IO uint16_t  SEL[8];                       /**< 0000: Crossbar Select Register                                     */
} XBARB_Type;

/**
 * @} */ /* End group XBARB_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XBARB' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XBARB_Register_Masks_GROUP XBARB Register Masks
* @brief Register Masks for XBARB
* @{
*/

/*! @name SEL - Crossbar Select Register */
#define XBARB_SEL_SEL0_MASK                      (0x3FU)                                             /*!< XBARB_SEL.SEL0 Mask                     */
#define XBARB_SEL_SEL0_SHIFT                     (0U)                                                /*!< XBARB_SEL.SEL0 Position                 */
#define XBARB_SEL_SEL0(x)                        (((uint16_t)(((uint16_t)(x))<<XBARB_SEL_SEL0_SHIFT))&XBARB_SEL_SEL0_MASK) /*!< XBARB_SEL.SEL0 Field                    */
#define XBARB_SEL_SEL1_MASK                      (0x3F00U)                                           /*!< XBARB_SEL.SEL1 Mask                     */
#define XBARB_SEL_SEL1_SHIFT                     (8U)                                                /*!< XBARB_SEL.SEL1 Position                 */
#define XBARB_SEL_SEL1(x)                        (((uint16_t)(((uint16_t)(x))<<XBARB_SEL_SEL1_SHIFT))&XBARB_SEL_SEL1_MASK) /*!< XBARB_SEL.SEL1 Field                    */
/**
 * @} */ /* End group XBARB_Register_Masks_GROUP 
 */

/* XBARB - Peripheral instance base addresses */
#define XBARB_BasePtr                  0x4005A000UL //!< Peripheral base address
#define XBARB                          ((XBARB_Type *) XBARB_BasePtr) //!< Freescale base pointer
#define XBARB_BASE_PTR                 (XBARB) //!< Freescale style base pointer
/**
 * @} */ /* End group XBARB_Peripheral_access_layer_GROUP 
 */
/* --------------------  End of section using anonymous unions  ------------------- */
#if defined(__CC_ARM)
  #pragma pop
#elif defined(__ICCARM__)
  /* leave anonymous unions enabled */
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined(__TASKING__)
  #pragma warning restore
#else
  #warning Not supported compiler type
#endif
/**
 * @} */ /* End group Peripheral_access_layer_GROUP 
 */

#ifdef __cplusplus
}
#endif


#endif  /* MCU_MKV43F16 */

