/*!
 * @file     MK60D10.h
 *
 * @brief    CMSIS Cortex-M Peripheral Access Layer Header File for MK60D10.
 *           Equivalent: 
 *
 * @version  V1.6
 * @date     2022/10
 *
 */

#ifndef _MK60D10_H_
#define _MK60D10_H_

#define MCU_MK60D10

#include <stdint.h>
#ifdef __cplusplus
extern "C" {
#endif


/** @brief Vector numbers required for NVIC functions */
/** @addtogroup Interrupt_vector_numbers_GROUP Interrupt vector numbers */
/** @{ */
#define NUMBER_OF_INT_VECTORS 111 //<! Number of vector table entries
/* -------------------------  Interrupt Number Definitions  ------------------------ */

/**
 * Interrupt vector numbers
 */
typedef enum {
/* ------------------------  Processor Exceptions Numbers  ------------------------- */
  Reset_IRQn                    = -15,   /**<   1 Reset Vector, invoked on Power up and warm reset                                 */
  NonMaskableInt_IRQn           = -14,   /**<   2 Non maskable Interrupt, cannot be stopped or preempted                           */
  HardFault_IRQn                = -13,   /**<   3 Hard Fault, all classes of Fault                                                 */
  MemoryManagement_IRQn         = -12,   /**<   4 Memory Management, MPU mismatch, including Access Violation and No Match         */
  BusFault_IRQn                 = -11,   /**<   5 Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault   */
  UsageFault_IRQn               = -10,   /**<   6 Usage Fault, i.e. Undef Instruction, Illegal State Transition                    */
  SVCall_IRQn                   =  -5,   /**<  11 System Service Call via SVC instruction                                          */
  DebugMonitor_IRQn             =  -4,   /**<  12 Debug Monitor                                                                    */
  PendSV_IRQn                   =  -2,   /**<  14 Pendable request for system service                                              */
  SysTick_IRQn                  =  -1,   /**<  15 System Tick Timer                                                                */
/* ----------------------   MK60D10 VectorTable                      ---------------------- */
  DMA0_IRQn                     =   0,   /**<  16 Direct memory access controller                                                  */
  DMA1_IRQn                     =   1,   /**<  17 Direct memory access controller                                                  */
  DMA2_IRQn                     =   2,   /**<  18 Direct memory access controller                                                  */
  DMA3_IRQn                     =   3,   /**<  19 Direct memory access controller                                                  */
  DMA4_IRQn                     =   4,   /**<  20 Direct memory access controller                                                  */
  DMA5_IRQn                     =   5,   /**<  21 Direct memory access controller                                                  */
  DMA6_IRQn                     =   6,   /**<  22 Direct memory access controller                                                  */
  DMA7_IRQn                     =   7,   /**<  23 Direct memory access controller                                                  */
  DMA8_IRQn                     =   8,   /**<  24 Direct memory access controller                                                  */
  DMA9_IRQn                     =   9,   /**<  25 Direct memory access controller                                                  */
  DMA10_IRQn                    =  10,   /**<  26 Direct memory access controller                                                  */
  DMA11_IRQn                    =  11,   /**<  27 Direct memory access controller                                                  */
  DMA12_IRQn                    =  12,   /**<  28 Direct memory access controller                                                  */
  DMA13_IRQn                    =  13,   /**<  29 Direct memory access controller                                                  */
  DMA14_IRQn                    =  14,   /**<  30 Direct memory access controller                                                  */
  DMA15_IRQn                    =  15,   /**<  31 Direct memory access controller                                                  */
  DMA_Error_IRQn                =  16,   /**<  32 DMA error interrupt all channels                                                 */
  MCM_IRQn                      =  17,   /**<  33 Miscellaneous Control Module                                                     */
  FTF_Command_IRQn              =  18,   /**<  34 Flash Memory Interface                                                           */
  FTF_ReadCollision_IRQn        =  19,   /**<  35 Flash Memory Interface                                                           */
  PMC_IRQn                      =  20,   /**<  36 Power Management Controller                                                      */
  LLWU_IRQn                     =  21,   /**<  37 Low Leakage Wakeup                                                               */
  WDOG_IRQn                     =  22,   /**<  38 External Watchdog Monitor                                                        */
  RNGA_IRQn                     =  23,   /**<  39 Random Number Generator Accelerator                                              */
  I2C0_IRQn                     =  24,   /**<  40 Inter-Integrated Circuit                                                         */
  I2C1_IRQn                     =  25,   /**<  41 Inter-Integrated Circuit                                                         */
  SPI0_IRQn                     =  26,   /**<  42 Serial Peripheral Interface                                                      */
  SPI1_IRQn                     =  27,   /**<  43 Serial Peripheral Interface                                                      */
  SPI2_IRQn                     =  28,   /**<  44 Serial Peripheral Interface                                                      */
  CAN0_MessageBuffer_IRQn       =  29,   /**<  45 Flex Controller Area Network module                                              */
  CAN0_BusOff_IRQn              =  30,   /**<  46 Flex Controller Area Network module                                              */
  CAN0_Error_IRQn               =  31,   /**<  47 Flex Controller Area Network module                                              */
  CAN0_TxWarning_IRQn           =  32,   /**<  48 Flex Controller Area Network module                                              */
  CAN0_RxWarning_IRQn           =  33,   /**<  49 Flex Controller Area Network module                                              */
  CAN0_WakeUp_IRQn              =  34,   /**<  50 Flex Controller Area Network module                                              */
  I2S0_Tx_IRQn                  =  35,   /**<  51 Synchronous Serial Interface                                                     */
  I2S0_Rx_IRQn                  =  36,   /**<  52 Synchronous Serial Interface                                                     */
  CAN1_MessageBuffer_IRQn       =  37,   /**<  53 Flex Controller Area Network module                                              */
  CAN1_BusOff_IRQn              =  38,   /**<  54 Flex Controller Area Network module                                              */
  CAN1_Error_IRQn               =  39,   /**<  55 Flex Controller Area Network module                                              */
  CAN1_TxWarning_IRQn           =  40,   /**<  56 Flex Controller Area Network module                                              */
  CAN1_RxWarning_IRQn           =  41,   /**<  57 Flex Controller Area Network module                                              */
  CAN1_WakeUp_IRQn              =  42,   /**<  58 Flex Controller Area Network module                                              */
  UART0_Lon_IRQn                =  44,   /**<  60 Serial Communication Interface                                                   */
  UART0_RxTx_IRQn               =  45,   /**<  61 Serial Communication Interface                                                   */
  UART0_Error_IRQn              =  46,   /**<  62 Serial Communication Interface                                                   */
  UART1_RxTx_IRQn               =  47,   /**<  63 Serial Communication Interface                                                   */
  UART1_Error_IRQn              =  48,   /**<  64 Serial Communication Interface                                                   */
  UART2_RxTx_IRQn               =  49,   /**<  65 Serial Communication Interface                                                   */
  UART2_Error_IRQn              =  50,   /**<  66 Serial Communication Interface                                                   */
  UART3_RxTx_IRQn               =  51,   /**<  67 Serial Communication Interface                                                   */
  UART3_Error_IRQn              =  52,   /**<  68 Serial Communication Interface                                                   */
  UART4_RxTx_IRQn               =  53,   /**<  69 Serial Communication Interface                                                   */
  UART4_Error_IRQn              =  54,   /**<  70 Serial Communication Interface                                                   */
  UART5_RxTx_IRQn               =  55,   /**<  71 Serial Communication Interface                                                   */
  UART5_Error_IRQn              =  56,   /**<  72 Serial Communication Interface                                                   */
  ADC0_IRQn                     =  57,   /**<  73 Analogue to Digital Converter                                                    */
  ADC1_IRQn                     =  58,   /**<  74 Analogue to Digital Converter                                                    */
  CMP0_IRQn                     =  59,   /**<  75 High-Speed Comparator                                                            */
  CMP1_IRQn                     =  60,   /**<  76 High-Speed Comparator                                                            */
  CMP2_IRQn                     =  61,   /**<  77 High-Speed Comparator                                                            */
  FTM0_IRQn                     =  62,   /**<  78 FlexTimer Module                                                                 */
  FTM1_IRQn                     =  63,   /**<  79 FlexTimer Module                                                                 */
  FTM2_IRQn                     =  64,   /**<  80 FlexTimer Module                                                                 */
  CMT_IRQn                      =  65,   /**<  81 Carrier Modulator Transmitter                                                    */
  RTC_Alarm_IRQn                =  66,   /**<  82 Real Time Clock                                                                  */
  RTC_Seconds_IRQn              =  67,   /**<  83 Real Time Clock                                                                  */
  PIT0_IRQn                     =  68,   /**<  84 Periodic Interrupt Timer                                                         */
  PIT1_IRQn                     =  69,   /**<  85 Periodic Interrupt Timer                                                         */
  PIT2_IRQn                     =  70,   /**<  86 Periodic Interrupt Timer                                                         */
  PIT3_IRQn                     =  71,   /**<  87 Periodic Interrupt Timer                                                         */
  PDB0_IRQn                     =  72,   /**<  88 Programmable Delay Block                                                         */
  USB0_IRQn                     =  73,   /**<  89 Universal Serial Bus                                                             */
  USBDCD0_IRQn                  =  74,   /**<  90 USB Device Charger Detection                                                     */
  ENET_1588Timeout_IRQn         =  75,   /**<  91 Ethernet MAC-NET Core                                                            */
  ENET_Transmit_IRQn            =  76,   /**<  92 Ethernet MAC-NET Core                                                            */
  ENET_Receive_IRQn             =  77,   /**<  93 Ethernet MAC-NET Core                                                            */
  ENET_Error_IRQn               =  78,   /**<  94 Ethernet MAC-NET Core                                                            */
  SDHC0_IRQn                    =  80,   /**<  96 Secured Digital Host Controller                                                  */
  DAC0_IRQn                     =  81,   /**<  97 Digital to Analogue Converter                                                    */
  DAC1_IRQn                     =  82,   /**<  98 Digital to Analogue Converter                                                    */
  TSI0_IRQn                     =  83,   /**<  99 Touch Sense Interface                                                            */
  MCG_IRQn                      =  84,   /**< 100 Multipurpose Clock Generator                                                     */
  LPTMR0_IRQn                   =  85,   /**< 101 Low Power Timer                                                                  */
  PORTA_IRQn                    =  87,   /**< 103 General Purpose Input/Output                                                     */
  PORTB_IRQn                    =  88,   /**< 104 General Purpose Input/Output                                                     */
  PORTC_IRQn                    =  89,   /**< 105 General Purpose Input/Output                                                     */
  PORTD_IRQn                    =  90,   /**< 106 General Purpose Input/Output                                                     */
  PORTE_IRQn                    =  91,   /**< 107 General Purpose Input/Output                                                     */
  SWI_IRQn                      =  94,   /**< 110 Software interrupt                                                               */
} IRQn_Type;


/** @brief Prototypes for interrupt handlers */
/* -------------------------  Exception Handlers  ------------------------ */
extern void NMI_Handler(void);                       /**< Non maskable Interrupt, cannot be stopped or preempted                           */
extern void HardFault_Handler(void);                 /**< Hard Fault, all classes of Fault                                                 */
extern void MemManage_Handler(void);                 /**< Memory Management, MPU mismatch, including Access Violation and No Match         */
extern void BusFault_Handler(void);                  /**< Bus Fault, Pre-Fetch-, Memory Access Fault, other address/memory related Fault   */
extern void UsageFault_Handler(void);                /**< Usage Fault, i.e. Undef Instruction, Illegal State Transition                    */
extern void SVC_Handler(void);                       /**< System Service Call via SVC instruction                                          */
extern void DebugMon_Handler(void);                  /**< Debug Monitor                                                                    */
extern void PendSV_Handler(void);                    /**< Pendable request for system service                                              */
extern void SysTick_Handler(void);                   /**< System Tick Timer                                                                */
extern void DMA0_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA1_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA2_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA3_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA4_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA5_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA6_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA7_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA8_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA9_IRQHandler(void);                   /**< Direct memory access controller                                                  */
extern void DMA10_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA11_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA12_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA13_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA14_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA15_IRQHandler(void);                  /**< Direct memory access controller                                                  */
extern void DMA_Error_IRQHandler(void);              /**< DMA error interrupt all channels                                                 */
extern void MCM_IRQHandler(void);                    /**< Miscellaneous Control Module                                                     */
extern void FTF_Command_IRQHandler(void);            /**< Flash Memory Interface                                                           */
extern void FTF_ReadCollision_IRQHandler(void);      /**< Flash Memory Interface                                                           */
extern void PMC_IRQHandler(void);                    /**< Power Management Controller                                                      */
extern void LLWU_IRQHandler(void);                   /**< Low Leakage Wakeup                                                               */
extern void WDOG_IRQHandler(void);                   /**< External Watchdog Monitor                                                        */
extern void RNGA_IRQHandler(void);                   /**< Random Number Generator Accelerator                                              */
extern void I2C0_IRQHandler(void);                   /**< Inter-Integrated Circuit                                                         */
extern void I2C1_IRQHandler(void);                   /**< Inter-Integrated Circuit                                                         */
extern void SPI0_IRQHandler(void);                   /**< Serial Peripheral Interface                                                      */
extern void SPI1_IRQHandler(void);                   /**< Serial Peripheral Interface                                                      */
extern void SPI2_IRQHandler(void);                   /**< Serial Peripheral Interface                                                      */
extern void CAN0_MessageBuffer_IRQHandler(void);     /**< Flex Controller Area Network module                                              */
extern void CAN0_BusOff_IRQHandler(void);            /**< Flex Controller Area Network module                                              */
extern void CAN0_Error_IRQHandler(void);             /**< Flex Controller Area Network module                                              */
extern void CAN0_TxWarning_IRQHandler(void);         /**< Flex Controller Area Network module                                              */
extern void CAN0_RxWarning_IRQHandler(void);         /**< Flex Controller Area Network module                                              */
extern void CAN0_WakeUp_IRQHandler(void);            /**< Flex Controller Area Network module                                              */
extern void I2S0_Tx_IRQHandler(void);                /**< Synchronous Serial Interface                                                     */
extern void I2S0_Rx_IRQHandler(void);                /**< Synchronous Serial Interface                                                     */
extern void CAN1_MessageBuffer_IRQHandler(void);     /**< Flex Controller Area Network module                                              */
extern void CAN1_BusOff_IRQHandler(void);            /**< Flex Controller Area Network module                                              */
extern void CAN1_Error_IRQHandler(void);             /**< Flex Controller Area Network module                                              */
extern void CAN1_TxWarning_IRQHandler(void);         /**< Flex Controller Area Network module                                              */
extern void CAN1_RxWarning_IRQHandler(void);         /**< Flex Controller Area Network module                                              */
extern void CAN1_WakeUp_IRQHandler(void);            /**< Flex Controller Area Network module                                              */
extern void UART0_Lon_IRQHandler(void);              /**< Serial Communication Interface                                                   */
extern void UART0_RxTx_IRQHandler(void);             /**< Serial Communication Interface                                                   */
extern void UART0_Error_IRQHandler(void);            /**< Serial Communication Interface                                                   */
extern void UART1_RxTx_IRQHandler(void);             /**< Serial Communication Interface                                                   */
extern void UART1_Error_IRQHandler(void);            /**< Serial Communication Interface                                                   */
extern void UART2_RxTx_IRQHandler(void);             /**< Serial Communication Interface                                                   */
extern void UART2_Error_IRQHandler(void);            /**< Serial Communication Interface                                                   */
extern void UART3_RxTx_IRQHandler(void);             /**< Serial Communication Interface                                                   */
extern void UART3_Error_IRQHandler(void);            /**< Serial Communication Interface                                                   */
extern void UART4_RxTx_IRQHandler(void);             /**< Serial Communication Interface                                                   */
extern void UART4_Error_IRQHandler(void);            /**< Serial Communication Interface                                                   */
extern void UART5_RxTx_IRQHandler(void);             /**< Serial Communication Interface                                                   */
extern void UART5_Error_IRQHandler(void);            /**< Serial Communication Interface                                                   */
extern void ADC0_IRQHandler(void);                   /**< Analogue to Digital Converter                                                    */
extern void ADC1_IRQHandler(void);                   /**< Analogue to Digital Converter                                                    */
extern void CMP0_IRQHandler(void);                   /**< High-Speed Comparator                                                            */
extern void CMP1_IRQHandler(void);                   /**< High-Speed Comparator                                                            */
extern void CMP2_IRQHandler(void);                   /**< High-Speed Comparator                                                            */
extern void FTM0_IRQHandler(void);                   /**< FlexTimer Module                                                                 */
extern void FTM1_IRQHandler(void);                   /**< FlexTimer Module                                                                 */
extern void FTM2_IRQHandler(void);                   /**< FlexTimer Module                                                                 */
extern void CMT_IRQHandler(void);                    /**< Carrier Modulator Transmitter                                                    */
extern void RTC_Alarm_IRQHandler(void);              /**< Real Time Clock                                                                  */
extern void RTC_Seconds_IRQHandler(void);            /**< Real Time Clock                                                                  */
extern void PIT0_IRQHandler(void);                   /**< Periodic Interrupt Timer                                                         */
extern void PIT1_IRQHandler(void);                   /**< Periodic Interrupt Timer                                                         */
extern void PIT2_IRQHandler(void);                   /**< Periodic Interrupt Timer                                                         */
extern void PIT3_IRQHandler(void);                   /**< Periodic Interrupt Timer                                                         */
extern void PDB0_IRQHandler(void);                   /**< Programmable Delay Block                                                         */
extern void USB0_IRQHandler(void);                   /**< Universal Serial Bus                                                             */
extern void USBDCD0_IRQHandler(void);                /**< USB Device Charger Detection                                                     */
extern void ENET_1588Timeout_IRQHandler(void);       /**< Ethernet MAC-NET Core                                                            */
extern void ENET_Transmit_IRQHandler(void);          /**< Ethernet MAC-NET Core                                                            */
extern void ENET_Receive_IRQHandler(void);           /**< Ethernet MAC-NET Core                                                            */
extern void ENET_Error_IRQHandler(void);             /**< Ethernet MAC-NET Core                                                            */
extern void SDHC0_IRQHandler(void);                  /**< Secured Digital Host Controller                                                  */
extern void DAC0_IRQHandler(void);                   /**< Digital to Analogue Converter                                                    */
extern void DAC1_IRQHandler(void);                   /**< Digital to Analogue Converter                                                    */
extern void TSI0_IRQHandler(void);                   /**< Touch Sense Interface                                                            */
extern void MCG_IRQHandler(void);                    /**< Multipurpose Clock Generator                                                     */
extern void LPTMR0_IRQHandler(void);                 /**< Low Power Timer                                                                  */
extern void PORTA_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void PORTB_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void PORTC_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void PORTD_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void PORTE_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void SWI_IRQHandler(void);                    /**< Software interrupt                                                               */


/** @} */ /* End group Interrupt_vector_numbers_GROUP */

/** @addtogroup Interrupt_handler_prototypes_GROUP Interrupt handler prototypes */
/** @{ */

/** @} */ /* End group Interrupt_handler_prototypes_GROUP */

/* ================================================================================ */
/* ================      Processor and Core Peripheral Section     ================ */
/* ================================================================================ */


/** @brief Configuration of the cm4 Processor and Core Peripherals */
/** @addtogroup Cortex_Core_Configuration_GROUP Cortex Core Configuration */
/** @{ */
#define __CM4_REV                 0x0100     /**< CPU Revision                                        */
#define __MPU_PRESENT             0          /**< Whether MPU is present                              */
#define __NVIC_PRIO_BITS          4          /**< Number of implemented bits in NVIC PRIO register    */
#define __Vendor_SysTickConfig    0          /**< Whether Vendor implemented SYSTICK timer is present */
#define __FPU_PRESENT             0          /**< Whether FPU is present                              */
#define __VTOR_PRESENT            1          /**< Whether VTOR register is present                    */


/** @} */ /* End group Cortex_Core_Configuration_GROUP */

#include "core_cm4.h"           /* Processor and core peripherals     */
#include "system.h"             /* Device specific configuration file */

#ifndef __IO
#define __IO volatile 
#endif

#ifndef __I
#define __I volatile const
#endif

#ifndef __O
#define __O volatile
#endif


/* ================================================================================ */
/* ================       Device Specific Peripheral Section       ================ */
/* ================================================================================ */



/* -------------------  Start of section using anonymous unions  ------------------ */
#if defined(__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined(__ICCARM__)
  #pragma language=extended
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__TMS470__)
/* anonymous unions are enabled by default */
#elif defined(__TASKING__)
  #pragma warning 586
#else
  #warning Not supported compiler type
#endif
/**
 * @defgroup Peripheral_access_layer_GROUP  Device Peripheral Access Layer
 *
 * C structs allowing access to peripheral registers
 */

/** @brief C Struct for ADC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup ADC_Peripheral_access_layer_GROUP ADC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           ADC0 (file:ADC0_DIFF_PGA_A)          ================ */
/* ================================================================================ */

/**
 * @brief Analog-to-Digital Converter
 */
#define ADC_SC1_COUNT        2          /**< Number of ADC channels                             */
/**
 * @struct ADC_Type
 * @brief  C Struct allowing access to ADC registers
 */
typedef struct ADC_Type {
   __IO uint32_t  SC1[ADC_SC1_COUNT];           /**< 0000: Status and Control Register 1                                */
   __IO uint32_t  CFG1;                         /**< 0008: Configuration Register 1                                     */
   __IO uint32_t  CFG2;                         /**< 000C: Configuration Register 2                                     */
   __I  uint32_t  R[ADC_SC1_COUNT];             /**< 0010: Data Result Register                                         */
   __IO uint32_t  CV1;                          /**< 0018: Compare Value                                                */
   __IO uint32_t  CV2;                          /**< 001C: Compare Value                                                */
   __IO uint32_t  SC2;                          /**< 0020: Status and Control Register 2                                */
   __IO uint32_t  SC3;                          /**< 0024: Status and Control Register 3                                */
   __IO uint32_t  OFS;                          /**< 0028: Offset Correction Register                                   */
   __IO uint32_t  PG;                           /**< 002C: Plus-Side Gain Register                                      */
   __IO uint32_t  MG;                           /**< 0030: Minus-Side Gain Register                                     */
   __IO uint32_t  CLPD;                         /**< 0034: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLPS;                         /**< 0038: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLP4;                         /**< 003C: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLP3;                         /**< 0040: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLP2;                         /**< 0044: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLP1;                         /**< 0048: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLP0;                         /**< 004C: Plus-Side General Calibration Value                          */
   __IO uint32_t  PGA;                          /**< 0050: PGA Register                                                 */
   __IO uint32_t  CLMD;                         /**< 0054: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLMS;                         /**< 0058: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLM4;                         /**< 005C: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLM3;                         /**< 0060: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLM2;                         /**< 0064: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLM1;                         /**< 0068: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLM0;                         /**< 006C: Minus-Side General Calibration Value                         */
} ADC_Type;


/** @brief Register Masks for ADC */

/* -------------------------------------------------------------------------------- */
/* -----------     'ADC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup ADC_Register_Masks_GROUP ADC Register Masks */
/** @{ */

/** @name SC1 - Status and Control Register 1 */ /** @{ */
#define ADC_SC1_ADCH_MASK                        (0x1FU)                                             /**< ADC0_SC1.ADCH Mask                      */
#define ADC_SC1_ADCH_SHIFT                       (0U)                                                /**< ADC0_SC1.ADCH Position                  */
#define ADC_SC1_ADCH(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC1_ADCH_SHIFT))&ADC_SC1_ADCH_MASK) /**< ADC0_SC1.ADCH Field                     */
#define ADC_SC1_DIFF_MASK                        (0x20U)                                             /**< ADC0_SC1.DIFF Mask                      */
#define ADC_SC1_DIFF_SHIFT                       (5U)                                                /**< ADC0_SC1.DIFF Position                  */
#define ADC_SC1_DIFF(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC1_DIFF_SHIFT))&ADC_SC1_DIFF_MASK) /**< ADC0_SC1.DIFF Field                     */
#define ADC_SC1_AIEN_MASK                        (0x40U)                                             /**< ADC0_SC1.AIEN Mask                      */
#define ADC_SC1_AIEN_SHIFT                       (6U)                                                /**< ADC0_SC1.AIEN Position                  */
#define ADC_SC1_AIEN(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC1_AIEN_SHIFT))&ADC_SC1_AIEN_MASK) /**< ADC0_SC1.AIEN Field                     */
#define ADC_SC1_COCO_MASK                        (0x80U)                                             /**< ADC0_SC1.COCO Mask                      */
#define ADC_SC1_COCO_SHIFT                       (7U)                                                /**< ADC0_SC1.COCO Position                  */
#define ADC_SC1_COCO(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC1_COCO_SHIFT))&ADC_SC1_COCO_MASK) /**< ADC0_SC1.COCO Field                     */
/** @} */

/** @name CFG1 - Configuration Register 1 */ /** @{ */
#define ADC_CFG1_ADICLK_MASK                     (0x3U)                                              /**< ADC0_CFG1.ADICLK Mask                   */
#define ADC_CFG1_ADICLK_SHIFT                    (0U)                                                /**< ADC0_CFG1.ADICLK Position               */
#define ADC_CFG1_ADICLK(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CFG1_ADICLK_SHIFT))&ADC_CFG1_ADICLK_MASK) /**< ADC0_CFG1.ADICLK Field                  */
#define ADC_CFG1_MODE_MASK                       (0xCU)                                              /**< ADC0_CFG1.MODE Mask                     */
#define ADC_CFG1_MODE_SHIFT                      (2U)                                                /**< ADC0_CFG1.MODE Position                 */
#define ADC_CFG1_MODE(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CFG1_MODE_SHIFT))&ADC_CFG1_MODE_MASK) /**< ADC0_CFG1.MODE Field                    */
#define ADC_CFG1_ADLSMP_MASK                     (0x10U)                                             /**< ADC0_CFG1.ADLSMP Mask                   */
#define ADC_CFG1_ADLSMP_SHIFT                    (4U)                                                /**< ADC0_CFG1.ADLSMP Position               */
#define ADC_CFG1_ADLSMP(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CFG1_ADLSMP_SHIFT))&ADC_CFG1_ADLSMP_MASK) /**< ADC0_CFG1.ADLSMP Field                  */
#define ADC_CFG1_ADIV_MASK                       (0x60U)                                             /**< ADC0_CFG1.ADIV Mask                     */
#define ADC_CFG1_ADIV_SHIFT                      (5U)                                                /**< ADC0_CFG1.ADIV Position                 */
#define ADC_CFG1_ADIV(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CFG1_ADIV_SHIFT))&ADC_CFG1_ADIV_MASK) /**< ADC0_CFG1.ADIV Field                    */
#define ADC_CFG1_ADLPC_MASK                      (0x80U)                                             /**< ADC0_CFG1.ADLPC Mask                    */
#define ADC_CFG1_ADLPC_SHIFT                     (7U)                                                /**< ADC0_CFG1.ADLPC Position                */
#define ADC_CFG1_ADLPC(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CFG1_ADLPC_SHIFT))&ADC_CFG1_ADLPC_MASK) /**< ADC0_CFG1.ADLPC Field                   */
/** @} */

/** @name CFG2 - Configuration Register 2 */ /** @{ */
#define ADC_CFG2_ADLSTS_MASK                     (0x3U)                                              /**< ADC0_CFG2.ADLSTS Mask                   */
#define ADC_CFG2_ADLSTS_SHIFT                    (0U)                                                /**< ADC0_CFG2.ADLSTS Position               */
#define ADC_CFG2_ADLSTS(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CFG2_ADLSTS_SHIFT))&ADC_CFG2_ADLSTS_MASK) /**< ADC0_CFG2.ADLSTS Field                  */
#define ADC_CFG2_ADHSC_MASK                      (0x4U)                                              /**< ADC0_CFG2.ADHSC Mask                    */
#define ADC_CFG2_ADHSC_SHIFT                     (2U)                                                /**< ADC0_CFG2.ADHSC Position                */
#define ADC_CFG2_ADHSC(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_CFG2_ADHSC_SHIFT))&ADC_CFG2_ADHSC_MASK) /**< ADC0_CFG2.ADHSC Field                   */
#define ADC_CFG2_ADACKEN_MASK                    (0x8U)                                              /**< ADC0_CFG2.ADACKEN Mask                  */
#define ADC_CFG2_ADACKEN_SHIFT                   (3U)                                                /**< ADC0_CFG2.ADACKEN Position              */
#define ADC_CFG2_ADACKEN(x)                      (((uint32_t)(((uint32_t)(x))<<ADC_CFG2_ADACKEN_SHIFT))&ADC_CFG2_ADACKEN_MASK) /**< ADC0_CFG2.ADACKEN Field                 */
#define ADC_CFG2_MUXSEL_MASK                     (0x10U)                                             /**< ADC0_CFG2.MUXSEL Mask                   */
#define ADC_CFG2_MUXSEL_SHIFT                    (4U)                                                /**< ADC0_CFG2.MUXSEL Position               */
#define ADC_CFG2_MUXSEL(x)                       (((uint32_t)(((uint32_t)(x))<<ADC_CFG2_MUXSEL_SHIFT))&ADC_CFG2_MUXSEL_MASK) /**< ADC0_CFG2.MUXSEL Field                  */
/** @} */

/** @name R - Data Result Register */ /** @{ */
#define ADC_R_D_MASK                             (0xFFFFU)                                           /**< ADC0_R.D Mask                           */
#define ADC_R_D_SHIFT                            (0U)                                                /**< ADC0_R.D Position                       */
#define ADC_R_D(x)                               (((uint32_t)(((uint32_t)(x))<<ADC_R_D_SHIFT))&ADC_R_D_MASK) /**< ADC0_R.D Field                          */
/** @} */

/** @name CV - Compare Value */ /** @{ */
#define ADC_CV_CV_MASK                           (0xFFFFU)                                           /**< ADC0_CV.CV Mask                         */
#define ADC_CV_CV_SHIFT                          (0U)                                                /**< ADC0_CV.CV Position                     */
#define ADC_CV_CV(x)                             (((uint32_t)(((uint32_t)(x))<<ADC_CV_CV_SHIFT))&ADC_CV_CV_MASK) /**< ADC0_CV.CV Field                        */
/** @} */

/** @name SC2 - Status and Control Register 2 */ /** @{ */
#define ADC_SC2_REFSEL_MASK                      (0x3U)                                              /**< ADC0_SC2.REFSEL Mask                    */
#define ADC_SC2_REFSEL_SHIFT                     (0U)                                                /**< ADC0_SC2.REFSEL Position                */
#define ADC_SC2_REFSEL(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_SC2_REFSEL_SHIFT))&ADC_SC2_REFSEL_MASK) /**< ADC0_SC2.REFSEL Field                   */
#define ADC_SC2_DMAEN_MASK                       (0x4U)                                              /**< ADC0_SC2.DMAEN Mask                     */
#define ADC_SC2_DMAEN_SHIFT                      (2U)                                                /**< ADC0_SC2.DMAEN Position                 */
#define ADC_SC2_DMAEN(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_SC2_DMAEN_SHIFT))&ADC_SC2_DMAEN_MASK) /**< ADC0_SC2.DMAEN Field                    */
#define ADC_SC2_ACREN_MASK                       (0x8U)                                              /**< ADC0_SC2.ACREN Mask                     */
#define ADC_SC2_ACREN_SHIFT                      (3U)                                                /**< ADC0_SC2.ACREN Position                 */
#define ADC_SC2_ACREN(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_SC2_ACREN_SHIFT))&ADC_SC2_ACREN_MASK) /**< ADC0_SC2.ACREN Field                    */
#define ADC_SC2_ACFGT_MASK                       (0x10U)                                             /**< ADC0_SC2.ACFGT Mask                     */
#define ADC_SC2_ACFGT_SHIFT                      (4U)                                                /**< ADC0_SC2.ACFGT Position                 */
#define ADC_SC2_ACFGT(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_SC2_ACFGT_SHIFT))&ADC_SC2_ACFGT_MASK) /**< ADC0_SC2.ACFGT Field                    */
#define ADC_SC2_ACFE_MASK                        (0x20U)                                             /**< ADC0_SC2.ACFE Mask                      */
#define ADC_SC2_ACFE_SHIFT                       (5U)                                                /**< ADC0_SC2.ACFE Position                  */
#define ADC_SC2_ACFE(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC2_ACFE_SHIFT))&ADC_SC2_ACFE_MASK) /**< ADC0_SC2.ACFE Field                     */
#define ADC_SC2_ADTRG_MASK                       (0x40U)                                             /**< ADC0_SC2.ADTRG Mask                     */
#define ADC_SC2_ADTRG_SHIFT                      (6U)                                                /**< ADC0_SC2.ADTRG Position                 */
#define ADC_SC2_ADTRG(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_SC2_ADTRG_SHIFT))&ADC_SC2_ADTRG_MASK) /**< ADC0_SC2.ADTRG Field                    */
#define ADC_SC2_ADACT_MASK                       (0x80U)                                             /**< ADC0_SC2.ADACT Mask                     */
#define ADC_SC2_ADACT_SHIFT                      (7U)                                                /**< ADC0_SC2.ADACT Position                 */
#define ADC_SC2_ADACT(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_SC2_ADACT_SHIFT))&ADC_SC2_ADACT_MASK) /**< ADC0_SC2.ADACT Field                    */
/** @} */

/** @name SC3 - Status and Control Register 3 */ /** @{ */
#define ADC_SC3_AVGS_MASK                        (0x3U)                                              /**< ADC0_SC3.AVGS Mask                      */
#define ADC_SC3_AVGS_SHIFT                       (0U)                                                /**< ADC0_SC3.AVGS Position                  */
#define ADC_SC3_AVGS(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC3_AVGS_SHIFT))&ADC_SC3_AVGS_MASK) /**< ADC0_SC3.AVGS Field                     */
#define ADC_SC3_AVGE_MASK                        (0x4U)                                              /**< ADC0_SC3.AVGE Mask                      */
#define ADC_SC3_AVGE_SHIFT                       (2U)                                                /**< ADC0_SC3.AVGE Position                  */
#define ADC_SC3_AVGE(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC3_AVGE_SHIFT))&ADC_SC3_AVGE_MASK) /**< ADC0_SC3.AVGE Field                     */
#define ADC_SC3_ADCO_MASK                        (0x8U)                                              /**< ADC0_SC3.ADCO Mask                      */
#define ADC_SC3_ADCO_SHIFT                       (3U)                                                /**< ADC0_SC3.ADCO Position                  */
#define ADC_SC3_ADCO(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC3_ADCO_SHIFT))&ADC_SC3_ADCO_MASK) /**< ADC0_SC3.ADCO Field                     */
#define ADC_SC3_CALF_MASK                        (0x40U)                                             /**< ADC0_SC3.CALF Mask                      */
#define ADC_SC3_CALF_SHIFT                       (6U)                                                /**< ADC0_SC3.CALF Position                  */
#define ADC_SC3_CALF(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_SC3_CALF_SHIFT))&ADC_SC3_CALF_MASK) /**< ADC0_SC3.CALF Field                     */
#define ADC_SC3_CAL_MASK                         (0x80U)                                             /**< ADC0_SC3.CAL Mask                       */
#define ADC_SC3_CAL_SHIFT                        (7U)                                                /**< ADC0_SC3.CAL Position                   */
#define ADC_SC3_CAL(x)                           (((uint32_t)(((uint32_t)(x))<<ADC_SC3_CAL_SHIFT))&ADC_SC3_CAL_MASK) /**< ADC0_SC3.CAL Field                      */
/** @} */

/** @name OFS - Offset Correction Register */ /** @{ */
#define ADC_OFS_OFS_MASK                         (0xFFFFU)                                           /**< ADC0_OFS.OFS Mask                       */
#define ADC_OFS_OFS_SHIFT                        (0U)                                                /**< ADC0_OFS.OFS Position                   */
#define ADC_OFS_OFS(x)                           (((uint32_t)(((uint32_t)(x))<<ADC_OFS_OFS_SHIFT))&ADC_OFS_OFS_MASK) /**< ADC0_OFS.OFS Field                      */
/** @} */

/** @name PG - Plus-Side Gain Register */ /** @{ */
#define ADC_PG_PG_MASK                           (0xFFFFU)                                           /**< ADC0_PG.PG Mask                         */
#define ADC_PG_PG_SHIFT                          (0U)                                                /**< ADC0_PG.PG Position                     */
#define ADC_PG_PG(x)                             (((uint32_t)(((uint32_t)(x))<<ADC_PG_PG_SHIFT))&ADC_PG_PG_MASK) /**< ADC0_PG.PG Field                        */
/** @} */

/** @name MG - Minus-Side Gain Register */ /** @{ */
#define ADC_MG_MG_MASK                           (0xFFFFU)                                           /**< ADC0_MG.MG Mask                         */
#define ADC_MG_MG_SHIFT                          (0U)                                                /**< ADC0_MG.MG Position                     */
#define ADC_MG_MG(x)                             (((uint32_t)(((uint32_t)(x))<<ADC_MG_MG_SHIFT))&ADC_MG_MG_MASK) /**< ADC0_MG.MG Field                        */
/** @} */

/** @name CLPD - Plus-Side General Calibration Value */ /** @{ */
#define ADC_CLPD_CLPD_MASK                       (0x3FU)                                             /**< ADC0_CLPD.CLPD Mask                     */
#define ADC_CLPD_CLPD_SHIFT                      (0U)                                                /**< ADC0_CLPD.CLPD Position                 */
#define ADC_CLPD_CLPD(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLPD_CLPD_SHIFT))&ADC_CLPD_CLPD_MASK) /**< ADC0_CLPD.CLPD Field                    */
/** @} */

/** @name CLPS - Plus-Side General Calibration Value */ /** @{ */
#define ADC_CLPS_CLPS_MASK                       (0x3FU)                                             /**< ADC0_CLPS.CLPS Mask                     */
#define ADC_CLPS_CLPS_SHIFT                      (0U)                                                /**< ADC0_CLPS.CLPS Position                 */
#define ADC_CLPS_CLPS(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLPS_CLPS_SHIFT))&ADC_CLPS_CLPS_MASK) /**< ADC0_CLPS.CLPS Field                    */
/** @} */

/** @name CLP4 - Plus-Side General Calibration Value */ /** @{ */
#define ADC_CLP4_CLP4_MASK                       (0x3FFU)                                            /**< ADC0_CLP4.CLP4 Mask                     */
#define ADC_CLP4_CLP4_SHIFT                      (0U)                                                /**< ADC0_CLP4.CLP4 Position                 */
#define ADC_CLP4_CLP4(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLP4_CLP4_SHIFT))&ADC_CLP4_CLP4_MASK) /**< ADC0_CLP4.CLP4 Field                    */
/** @} */

/** @name CLP3 - Plus-Side General Calibration Value */ /** @{ */
#define ADC_CLP3_CLP3_MASK                       (0x1FFU)                                            /**< ADC0_CLP3.CLP3 Mask                     */
#define ADC_CLP3_CLP3_SHIFT                      (0U)                                                /**< ADC0_CLP3.CLP3 Position                 */
#define ADC_CLP3_CLP3(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLP3_CLP3_SHIFT))&ADC_CLP3_CLP3_MASK) /**< ADC0_CLP3.CLP3 Field                    */
/** @} */

/** @name CLP2 - Plus-Side General Calibration Value */ /** @{ */
#define ADC_CLP2_CLP2_MASK                       (0xFFU)                                             /**< ADC0_CLP2.CLP2 Mask                     */
#define ADC_CLP2_CLP2_SHIFT                      (0U)                                                /**< ADC0_CLP2.CLP2 Position                 */
#define ADC_CLP2_CLP2(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLP2_CLP2_SHIFT))&ADC_CLP2_CLP2_MASK) /**< ADC0_CLP2.CLP2 Field                    */
/** @} */

/** @name CLP1 - Plus-Side General Calibration Value */ /** @{ */
#define ADC_CLP1_CLP1_MASK                       (0x7FU)                                             /**< ADC0_CLP1.CLP1 Mask                     */
#define ADC_CLP1_CLP1_SHIFT                      (0U)                                                /**< ADC0_CLP1.CLP1 Position                 */
#define ADC_CLP1_CLP1(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLP1_CLP1_SHIFT))&ADC_CLP1_CLP1_MASK) /**< ADC0_CLP1.CLP1 Field                    */
/** @} */

/** @name CLP0 - Plus-Side General Calibration Value */ /** @{ */
#define ADC_CLP0_CLP0_MASK                       (0x3FU)                                             /**< ADC0_CLP0.CLP0 Mask                     */
#define ADC_CLP0_CLP0_SHIFT                      (0U)                                                /**< ADC0_CLP0.CLP0 Position                 */
#define ADC_CLP0_CLP0(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLP0_CLP0_SHIFT))&ADC_CLP0_CLP0_MASK) /**< ADC0_CLP0.CLP0 Field                    */
/** @} */

/** @name PGA - PGA Register */ /** @{ */
#define ADC_PGA_PGAG_MASK                        (0xF0000U)                                          /**< ADC0_PGA.PGAG Mask                      */
#define ADC_PGA_PGAG_SHIFT                       (16U)                                               /**< ADC0_PGA.PGAG Position                  */
#define ADC_PGA_PGAG(x)                          (((uint32_t)(((uint32_t)(x))<<ADC_PGA_PGAG_SHIFT))&ADC_PGA_PGAG_MASK) /**< ADC0_PGA.PGAG Field                     */
#define ADC_PGA_PGALPb_MASK                      (0x100000U)                                         /**< ADC0_PGA.PGALPb Mask                    */
#define ADC_PGA_PGALPb_SHIFT                     (20U)                                               /**< ADC0_PGA.PGALPb Position                */
#define ADC_PGA_PGALPb(x)                        (((uint32_t)(((uint32_t)(x))<<ADC_PGA_PGALPb_SHIFT))&ADC_PGA_PGALPb_MASK) /**< ADC0_PGA.PGALPb Field                   */
#define ADC_PGA_PGAEN_MASK                       (0x800000U)                                         /**< ADC0_PGA.PGAEN Mask                     */
#define ADC_PGA_PGAEN_SHIFT                      (23U)                                               /**< ADC0_PGA.PGAEN Position                 */
#define ADC_PGA_PGAEN(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_PGA_PGAEN_SHIFT))&ADC_PGA_PGAEN_MASK) /**< ADC0_PGA.PGAEN Field                    */
/** @} */

/** @name CLMD - Minus-Side General Calibration Value */ /** @{ */
#define ADC_CLMD_CLMD_MASK                       (0x3FU)                                             /**< ADC0_CLMD.CLMD Mask                     */
#define ADC_CLMD_CLMD_SHIFT                      (0U)                                                /**< ADC0_CLMD.CLMD Position                 */
#define ADC_CLMD_CLMD(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLMD_CLMD_SHIFT))&ADC_CLMD_CLMD_MASK) /**< ADC0_CLMD.CLMD Field                    */
/** @} */

/** @name CLMS - Minus-Side General Calibration Value */ /** @{ */
#define ADC_CLMS_CLMS_MASK                       (0x3FU)                                             /**< ADC0_CLMS.CLMS Mask                     */
#define ADC_CLMS_CLMS_SHIFT                      (0U)                                                /**< ADC0_CLMS.CLMS Position                 */
#define ADC_CLMS_CLMS(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLMS_CLMS_SHIFT))&ADC_CLMS_CLMS_MASK) /**< ADC0_CLMS.CLMS Field                    */
/** @} */

/** @name CLM4 - Minus-Side General Calibration Value */ /** @{ */
#define ADC_CLM4_CLM4_MASK                       (0x3FFU)                                            /**< ADC0_CLM4.CLM4 Mask                     */
#define ADC_CLM4_CLM4_SHIFT                      (0U)                                                /**< ADC0_CLM4.CLM4 Position                 */
#define ADC_CLM4_CLM4(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLM4_CLM4_SHIFT))&ADC_CLM4_CLM4_MASK) /**< ADC0_CLM4.CLM4 Field                    */
/** @} */

/** @name CLM3 - Minus-Side General Calibration Value */ /** @{ */
#define ADC_CLM3_CLM3_MASK                       (0x1FFU)                                            /**< ADC0_CLM3.CLM3 Mask                     */
#define ADC_CLM3_CLM3_SHIFT                      (0U)                                                /**< ADC0_CLM3.CLM3 Position                 */
#define ADC_CLM3_CLM3(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLM3_CLM3_SHIFT))&ADC_CLM3_CLM3_MASK) /**< ADC0_CLM3.CLM3 Field                    */
/** @} */

/** @name CLM2 - Minus-Side General Calibration Value */ /** @{ */
#define ADC_CLM2_CLM2_MASK                       (0xFFU)                                             /**< ADC0_CLM2.CLM2 Mask                     */
#define ADC_CLM2_CLM2_SHIFT                      (0U)                                                /**< ADC0_CLM2.CLM2 Position                 */
#define ADC_CLM2_CLM2(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLM2_CLM2_SHIFT))&ADC_CLM2_CLM2_MASK) /**< ADC0_CLM2.CLM2 Field                    */
/** @} */

/** @name CLM1 - Minus-Side General Calibration Value */ /** @{ */
#define ADC_CLM1_CLM1_MASK                       (0x7FU)                                             /**< ADC0_CLM1.CLM1 Mask                     */
#define ADC_CLM1_CLM1_SHIFT                      (0U)                                                /**< ADC0_CLM1.CLM1 Position                 */
#define ADC_CLM1_CLM1(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLM1_CLM1_SHIFT))&ADC_CLM1_CLM1_MASK) /**< ADC0_CLM1.CLM1 Field                    */
/** @} */

/** @name CLM0 - Minus-Side General Calibration Value */ /** @{ */
#define ADC_CLM0_CLM0_MASK                       (0x3FU)                                             /**< ADC0_CLM0.CLM0 Mask                     */
#define ADC_CLM0_CLM0_SHIFT                      (0U)                                                /**< ADC0_CLM0.CLM0 Position                 */
#define ADC_CLM0_CLM0(x)                         (((uint32_t)(((uint32_t)(x))<<ADC_CLM0_CLM0_SHIFT))&ADC_CLM0_CLM0_MASK) /**< ADC0_CLM0.CLM0 Field                    */
/** @} */

/** @} */ /* End group ADC_Register_Masks_GROUP */


/* ADC0 - Peripheral instance base addresses */
#define ADC0_BasePtr                   0x4003B000UL //!< Peripheral base address
#define ADC0                           ((ADC_Type *) ADC0_BasePtr) //!< Freescale base pointer
#define ADC0_BASE_PTR                  (ADC0) //!< Freescale style base pointer
#define ADC0_IRQS { ADC0_IRQn,  }


/** @} */ /* End group ADC_Peripheral_access_layer_GROUP */


/** @brief C Struct for ADC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup ADC_Peripheral_access_layer_GROUP ADC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           ADC1 (derived from ADC0)             ================ */
/* ================================================================================ */

/**
 * @brief Analog-to-Digital Converter
 */

/* ADC1 - Peripheral instance base addresses */
#define ADC1_BasePtr                   0x400BB000UL //!< Peripheral base address
#define ADC1                           ((ADC_Type *) ADC1_BasePtr) //!< Freescale base pointer
#define ADC1_BASE_PTR                  (ADC1) //!< Freescale style base pointer
#define ADC1_IRQS { ADC1_IRQn,  }


/** @} */ /* End group ADC_Peripheral_access_layer_GROUP */


/** @brief C Struct for AIPS */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup AIPS_Peripheral_access_layer_GROUP AIPS Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           AIPS0 (file:AIPS0_Lite_8Mx16P)       ================ */
/* ================================================================================ */

/**
 * @brief AIPS-Lite Bridge
 */
/**
 * @struct AIPS_Type
 * @brief  C Struct allowing access to AIPS registers
 */
typedef struct AIPS_Type {
   __IO uint32_t  MPRA;                         /**< 0000: Master Privilege Register A                                  */
        uint8_t   RESERVED_0[28];               /**< 0004: 0x1C bytes                                                   */
   __IO uint32_t  PACR[16];                     /**< 0020: Peripheral Access Control Register                           */
} AIPS_Type;


/** @brief Register Masks for AIPS */

/* -------------------------------------------------------------------------------- */
/* -----------     'AIPS0' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup AIPS_Register_Masks_GROUP AIPS Register Masks */
/** @{ */

/** @name MPRA - Master Privilege Register A */ /** @{ */
#define AIPS_MPRA_MPL7_MASK                      (0x1U)                                              /**< AIPS0_MPRA.MPL7 Mask                    */
#define AIPS_MPRA_MPL7_SHIFT                     (0U)                                                /**< AIPS0_MPRA.MPL7 Position                */
#define AIPS_MPRA_MPL7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL7_SHIFT))&AIPS_MPRA_MPL7_MASK) /**< AIPS0_MPRA.MPL7 Field                   */
#define AIPS_MPRA_MTW7_MASK                      (0x2U)                                              /**< AIPS0_MPRA.MTW7 Mask                    */
#define AIPS_MPRA_MTW7_SHIFT                     (1U)                                                /**< AIPS0_MPRA.MTW7 Position                */
#define AIPS_MPRA_MTW7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW7_SHIFT))&AIPS_MPRA_MTW7_MASK) /**< AIPS0_MPRA.MTW7 Field                   */
#define AIPS_MPRA_MTR7_MASK                      (0x4U)                                              /**< AIPS0_MPRA.MTR7 Mask                    */
#define AIPS_MPRA_MTR7_SHIFT                     (2U)                                                /**< AIPS0_MPRA.MTR7 Position                */
#define AIPS_MPRA_MTR7(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR7_SHIFT))&AIPS_MPRA_MTR7_MASK) /**< AIPS0_MPRA.MTR7 Field                   */
#define AIPS_MPRA_MPL6_MASK                      (0x10U)                                             /**< AIPS0_MPRA.MPL6 Mask                    */
#define AIPS_MPRA_MPL6_SHIFT                     (4U)                                                /**< AIPS0_MPRA.MPL6 Position                */
#define AIPS_MPRA_MPL6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL6_SHIFT))&AIPS_MPRA_MPL6_MASK) /**< AIPS0_MPRA.MPL6 Field                   */
#define AIPS_MPRA_MTW6_MASK                      (0x20U)                                             /**< AIPS0_MPRA.MTW6 Mask                    */
#define AIPS_MPRA_MTW6_SHIFT                     (5U)                                                /**< AIPS0_MPRA.MTW6 Position                */
#define AIPS_MPRA_MTW6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW6_SHIFT))&AIPS_MPRA_MTW6_MASK) /**< AIPS0_MPRA.MTW6 Field                   */
#define AIPS_MPRA_MTR6_MASK                      (0x40U)                                             /**< AIPS0_MPRA.MTR6 Mask                    */
#define AIPS_MPRA_MTR6_SHIFT                     (6U)                                                /**< AIPS0_MPRA.MTR6 Position                */
#define AIPS_MPRA_MTR6(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR6_SHIFT))&AIPS_MPRA_MTR6_MASK) /**< AIPS0_MPRA.MTR6 Field                   */
#define AIPS_MPRA_MPL5_MASK                      (0x100U)                                            /**< AIPS0_MPRA.MPL5 Mask                    */
#define AIPS_MPRA_MPL5_SHIFT                     (8U)                                                /**< AIPS0_MPRA.MPL5 Position                */
#define AIPS_MPRA_MPL5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL5_SHIFT))&AIPS_MPRA_MPL5_MASK) /**< AIPS0_MPRA.MPL5 Field                   */
#define AIPS_MPRA_MTW5_MASK                      (0x200U)                                            /**< AIPS0_MPRA.MTW5 Mask                    */
#define AIPS_MPRA_MTW5_SHIFT                     (9U)                                                /**< AIPS0_MPRA.MTW5 Position                */
#define AIPS_MPRA_MTW5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW5_SHIFT))&AIPS_MPRA_MTW5_MASK) /**< AIPS0_MPRA.MTW5 Field                   */
#define AIPS_MPRA_MTR5_MASK                      (0x400U)                                            /**< AIPS0_MPRA.MTR5 Mask                    */
#define AIPS_MPRA_MTR5_SHIFT                     (10U)                                               /**< AIPS0_MPRA.MTR5 Position                */
#define AIPS_MPRA_MTR5(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR5_SHIFT))&AIPS_MPRA_MTR5_MASK) /**< AIPS0_MPRA.MTR5 Field                   */
#define AIPS_MPRA_MPL4_MASK                      (0x1000U)                                           /**< AIPS0_MPRA.MPL4 Mask                    */
#define AIPS_MPRA_MPL4_SHIFT                     (12U)                                               /**< AIPS0_MPRA.MPL4 Position                */
#define AIPS_MPRA_MPL4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL4_SHIFT))&AIPS_MPRA_MPL4_MASK) /**< AIPS0_MPRA.MPL4 Field                   */
#define AIPS_MPRA_MTW4_MASK                      (0x2000U)                                           /**< AIPS0_MPRA.MTW4 Mask                    */
#define AIPS_MPRA_MTW4_SHIFT                     (13U)                                               /**< AIPS0_MPRA.MTW4 Position                */
#define AIPS_MPRA_MTW4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW4_SHIFT))&AIPS_MPRA_MTW4_MASK) /**< AIPS0_MPRA.MTW4 Field                   */
#define AIPS_MPRA_MTR4_MASK                      (0x4000U)                                           /**< AIPS0_MPRA.MTR4 Mask                    */
#define AIPS_MPRA_MTR4_SHIFT                     (14U)                                               /**< AIPS0_MPRA.MTR4 Position                */
#define AIPS_MPRA_MTR4(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR4_SHIFT))&AIPS_MPRA_MTR4_MASK) /**< AIPS0_MPRA.MTR4 Field                   */
#define AIPS_MPRA_MPL3_MASK                      (0x10000U)                                          /**< AIPS0_MPRA.MPL3 Mask                    */
#define AIPS_MPRA_MPL3_SHIFT                     (16U)                                               /**< AIPS0_MPRA.MPL3 Position                */
#define AIPS_MPRA_MPL3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL3_SHIFT))&AIPS_MPRA_MPL3_MASK) /**< AIPS0_MPRA.MPL3 Field                   */
#define AIPS_MPRA_MTW3_MASK                      (0x20000U)                                          /**< AIPS0_MPRA.MTW3 Mask                    */
#define AIPS_MPRA_MTW3_SHIFT                     (17U)                                               /**< AIPS0_MPRA.MTW3 Position                */
#define AIPS_MPRA_MTW3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW3_SHIFT))&AIPS_MPRA_MTW3_MASK) /**< AIPS0_MPRA.MTW3 Field                   */
#define AIPS_MPRA_MTR3_MASK                      (0x40000U)                                          /**< AIPS0_MPRA.MTR3 Mask                    */
#define AIPS_MPRA_MTR3_SHIFT                     (18U)                                               /**< AIPS0_MPRA.MTR3 Position                */
#define AIPS_MPRA_MTR3(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR3_SHIFT))&AIPS_MPRA_MTR3_MASK) /**< AIPS0_MPRA.MTR3 Field                   */
#define AIPS_MPRA_MPL2_MASK                      (0x100000U)                                         /**< AIPS0_MPRA.MPL2 Mask                    */
#define AIPS_MPRA_MPL2_SHIFT                     (20U)                                               /**< AIPS0_MPRA.MPL2 Position                */
#define AIPS_MPRA_MPL2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL2_SHIFT))&AIPS_MPRA_MPL2_MASK) /**< AIPS0_MPRA.MPL2 Field                   */
#define AIPS_MPRA_MTW2_MASK                      (0x200000U)                                         /**< AIPS0_MPRA.MTW2 Mask                    */
#define AIPS_MPRA_MTW2_SHIFT                     (21U)                                               /**< AIPS0_MPRA.MTW2 Position                */
#define AIPS_MPRA_MTW2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW2_SHIFT))&AIPS_MPRA_MTW2_MASK) /**< AIPS0_MPRA.MTW2 Field                   */
#define AIPS_MPRA_MTR2_MASK                      (0x400000U)                                         /**< AIPS0_MPRA.MTR2 Mask                    */
#define AIPS_MPRA_MTR2_SHIFT                     (22U)                                               /**< AIPS0_MPRA.MTR2 Position                */
#define AIPS_MPRA_MTR2(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR2_SHIFT))&AIPS_MPRA_MTR2_MASK) /**< AIPS0_MPRA.MTR2 Field                   */
#define AIPS_MPRA_MPL1_MASK                      (0x1000000U)                                        /**< AIPS0_MPRA.MPL1 Mask                    */
#define AIPS_MPRA_MPL1_SHIFT                     (24U)                                               /**< AIPS0_MPRA.MPL1 Position                */
#define AIPS_MPRA_MPL1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL1_SHIFT))&AIPS_MPRA_MPL1_MASK) /**< AIPS0_MPRA.MPL1 Field                   */
#define AIPS_MPRA_MTW1_MASK                      (0x2000000U)                                        /**< AIPS0_MPRA.MTW1 Mask                    */
#define AIPS_MPRA_MTW1_SHIFT                     (25U)                                               /**< AIPS0_MPRA.MTW1 Position                */
#define AIPS_MPRA_MTW1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW1_SHIFT))&AIPS_MPRA_MTW1_MASK) /**< AIPS0_MPRA.MTW1 Field                   */
#define AIPS_MPRA_MTR1_MASK                      (0x4000000U)                                        /**< AIPS0_MPRA.MTR1 Mask                    */
#define AIPS_MPRA_MTR1_SHIFT                     (26U)                                               /**< AIPS0_MPRA.MTR1 Position                */
#define AIPS_MPRA_MTR1(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR1_SHIFT))&AIPS_MPRA_MTR1_MASK) /**< AIPS0_MPRA.MTR1 Field                   */
#define AIPS_MPRA_MPL0_MASK                      (0x10000000U)                                       /**< AIPS0_MPRA.MPL0 Mask                    */
#define AIPS_MPRA_MPL0_SHIFT                     (28U)                                               /**< AIPS0_MPRA.MPL0 Position                */
#define AIPS_MPRA_MPL0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MPL0_SHIFT))&AIPS_MPRA_MPL0_MASK) /**< AIPS0_MPRA.MPL0 Field                   */
#define AIPS_MPRA_MTW0_MASK                      (0x20000000U)                                       /**< AIPS0_MPRA.MTW0 Mask                    */
#define AIPS_MPRA_MTW0_SHIFT                     (29U)                                               /**< AIPS0_MPRA.MTW0 Position                */
#define AIPS_MPRA_MTW0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTW0_SHIFT))&AIPS_MPRA_MTW0_MASK) /**< AIPS0_MPRA.MTW0 Field                   */
#define AIPS_MPRA_MTR0_MASK                      (0x40000000U)                                       /**< AIPS0_MPRA.MTR0 Mask                    */
#define AIPS_MPRA_MTR0_SHIFT                     (30U)                                               /**< AIPS0_MPRA.MTR0 Position                */
#define AIPS_MPRA_MTR0(x)                        (((uint32_t)(((uint32_t)(x))<<AIPS_MPRA_MTR0_SHIFT))&AIPS_MPRA_MTR0_MASK) /**< AIPS0_MPRA.MTR0 Field                   */
/** @} */

/** @name PACR - Peripheral Access Control Register %s */ /** @{ */
#define AIPS_PACR_TP7_MASK                       (0x1U)                                              /**< AIPS0_PACR.TP7 Mask                     */
#define AIPS_PACR_TP7_SHIFT                      (0U)                                                /**< AIPS0_PACR.TP7 Position                 */
#define AIPS_PACR_TP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP7_SHIFT))&AIPS_PACR_TP7_MASK) /**< AIPS0_PACR.TP7 Field                    */
#define AIPS_PACR_WP7_MASK                       (0x2U)                                              /**< AIPS0_PACR.WP7 Mask                     */
#define AIPS_PACR_WP7_SHIFT                      (1U)                                                /**< AIPS0_PACR.WP7 Position                 */
#define AIPS_PACR_WP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP7_SHIFT))&AIPS_PACR_WP7_MASK) /**< AIPS0_PACR.WP7 Field                    */
#define AIPS_PACR_SP7_MASK                       (0x4U)                                              /**< AIPS0_PACR.SP7 Mask                     */
#define AIPS_PACR_SP7_SHIFT                      (2U)                                                /**< AIPS0_PACR.SP7 Position                 */
#define AIPS_PACR_SP7(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP7_SHIFT))&AIPS_PACR_SP7_MASK) /**< AIPS0_PACR.SP7 Field                    */
#define AIPS_PACR_TP6_MASK                       (0x10U)                                             /**< AIPS0_PACR.TP6 Mask                     */
#define AIPS_PACR_TP6_SHIFT                      (4U)                                                /**< AIPS0_PACR.TP6 Position                 */
#define AIPS_PACR_TP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP6_SHIFT))&AIPS_PACR_TP6_MASK) /**< AIPS0_PACR.TP6 Field                    */
#define AIPS_PACR_WP6_MASK                       (0x20U)                                             /**< AIPS0_PACR.WP6 Mask                     */
#define AIPS_PACR_WP6_SHIFT                      (5U)                                                /**< AIPS0_PACR.WP6 Position                 */
#define AIPS_PACR_WP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP6_SHIFT))&AIPS_PACR_WP6_MASK) /**< AIPS0_PACR.WP6 Field                    */
#define AIPS_PACR_SP6_MASK                       (0x40U)                                             /**< AIPS0_PACR.SP6 Mask                     */
#define AIPS_PACR_SP6_SHIFT                      (6U)                                                /**< AIPS0_PACR.SP6 Position                 */
#define AIPS_PACR_SP6(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP6_SHIFT))&AIPS_PACR_SP6_MASK) /**< AIPS0_PACR.SP6 Field                    */
#define AIPS_PACR_TP5_MASK                       (0x100U)                                            /**< AIPS0_PACR.TP5 Mask                     */
#define AIPS_PACR_TP5_SHIFT                      (8U)                                                /**< AIPS0_PACR.TP5 Position                 */
#define AIPS_PACR_TP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP5_SHIFT))&AIPS_PACR_TP5_MASK) /**< AIPS0_PACR.TP5 Field                    */
#define AIPS_PACR_WP5_MASK                       (0x200U)                                            /**< AIPS0_PACR.WP5 Mask                     */
#define AIPS_PACR_WP5_SHIFT                      (9U)                                                /**< AIPS0_PACR.WP5 Position                 */
#define AIPS_PACR_WP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP5_SHIFT))&AIPS_PACR_WP5_MASK) /**< AIPS0_PACR.WP5 Field                    */
#define AIPS_PACR_SP5_MASK                       (0x400U)                                            /**< AIPS0_PACR.SP5 Mask                     */
#define AIPS_PACR_SP5_SHIFT                      (10U)                                               /**< AIPS0_PACR.SP5 Position                 */
#define AIPS_PACR_SP5(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP5_SHIFT))&AIPS_PACR_SP5_MASK) /**< AIPS0_PACR.SP5 Field                    */
#define AIPS_PACR_TP4_MASK                       (0x1000U)                                           /**< AIPS0_PACR.TP4 Mask                     */
#define AIPS_PACR_TP4_SHIFT                      (12U)                                               /**< AIPS0_PACR.TP4 Position                 */
#define AIPS_PACR_TP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP4_SHIFT))&AIPS_PACR_TP4_MASK) /**< AIPS0_PACR.TP4 Field                    */
#define AIPS_PACR_WP4_MASK                       (0x2000U)                                           /**< AIPS0_PACR.WP4 Mask                     */
#define AIPS_PACR_WP4_SHIFT                      (13U)                                               /**< AIPS0_PACR.WP4 Position                 */
#define AIPS_PACR_WP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP4_SHIFT))&AIPS_PACR_WP4_MASK) /**< AIPS0_PACR.WP4 Field                    */
#define AIPS_PACR_SP4_MASK                       (0x4000U)                                           /**< AIPS0_PACR.SP4 Mask                     */
#define AIPS_PACR_SP4_SHIFT                      (14U)                                               /**< AIPS0_PACR.SP4 Position                 */
#define AIPS_PACR_SP4(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP4_SHIFT))&AIPS_PACR_SP4_MASK) /**< AIPS0_PACR.SP4 Field                    */
#define AIPS_PACR_TP3_MASK                       (0x10000U)                                          /**< AIPS0_PACR.TP3 Mask                     */
#define AIPS_PACR_TP3_SHIFT                      (16U)                                               /**< AIPS0_PACR.TP3 Position                 */
#define AIPS_PACR_TP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP3_SHIFT))&AIPS_PACR_TP3_MASK) /**< AIPS0_PACR.TP3 Field                    */
#define AIPS_PACR_WP3_MASK                       (0x20000U)                                          /**< AIPS0_PACR.WP3 Mask                     */
#define AIPS_PACR_WP3_SHIFT                      (17U)                                               /**< AIPS0_PACR.WP3 Position                 */
#define AIPS_PACR_WP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP3_SHIFT))&AIPS_PACR_WP3_MASK) /**< AIPS0_PACR.WP3 Field                    */
#define AIPS_PACR_SP3_MASK                       (0x40000U)                                          /**< AIPS0_PACR.SP3 Mask                     */
#define AIPS_PACR_SP3_SHIFT                      (18U)                                               /**< AIPS0_PACR.SP3 Position                 */
#define AIPS_PACR_SP3(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP3_SHIFT))&AIPS_PACR_SP3_MASK) /**< AIPS0_PACR.SP3 Field                    */
#define AIPS_PACR_TP2_MASK                       (0x100000U)                                         /**< AIPS0_PACR.TP2 Mask                     */
#define AIPS_PACR_TP2_SHIFT                      (20U)                                               /**< AIPS0_PACR.TP2 Position                 */
#define AIPS_PACR_TP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP2_SHIFT))&AIPS_PACR_TP2_MASK) /**< AIPS0_PACR.TP2 Field                    */
#define AIPS_PACR_WP2_MASK                       (0x200000U)                                         /**< AIPS0_PACR.WP2 Mask                     */
#define AIPS_PACR_WP2_SHIFT                      (21U)                                               /**< AIPS0_PACR.WP2 Position                 */
#define AIPS_PACR_WP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP2_SHIFT))&AIPS_PACR_WP2_MASK) /**< AIPS0_PACR.WP2 Field                    */
#define AIPS_PACR_SP2_MASK                       (0x400000U)                                         /**< AIPS0_PACR.SP2 Mask                     */
#define AIPS_PACR_SP2_SHIFT                      (22U)                                               /**< AIPS0_PACR.SP2 Position                 */
#define AIPS_PACR_SP2(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP2_SHIFT))&AIPS_PACR_SP2_MASK) /**< AIPS0_PACR.SP2 Field                    */
#define AIPS_PACR_TP1_MASK                       (0x1000000U)                                        /**< AIPS0_PACR.TP1 Mask                     */
#define AIPS_PACR_TP1_SHIFT                      (24U)                                               /**< AIPS0_PACR.TP1 Position                 */
#define AIPS_PACR_TP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP1_SHIFT))&AIPS_PACR_TP1_MASK) /**< AIPS0_PACR.TP1 Field                    */
#define AIPS_PACR_WP1_MASK                       (0x2000000U)                                        /**< AIPS0_PACR.WP1 Mask                     */
#define AIPS_PACR_WP1_SHIFT                      (25U)                                               /**< AIPS0_PACR.WP1 Position                 */
#define AIPS_PACR_WP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP1_SHIFT))&AIPS_PACR_WP1_MASK) /**< AIPS0_PACR.WP1 Field                    */
#define AIPS_PACR_SP1_MASK                       (0x4000000U)                                        /**< AIPS0_PACR.SP1 Mask                     */
#define AIPS_PACR_SP1_SHIFT                      (26U)                                               /**< AIPS0_PACR.SP1 Position                 */
#define AIPS_PACR_SP1(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP1_SHIFT))&AIPS_PACR_SP1_MASK) /**< AIPS0_PACR.SP1 Field                    */
#define AIPS_PACR_TP0_MASK                       (0x10000000U)                                       /**< AIPS0_PACR.TP0 Mask                     */
#define AIPS_PACR_TP0_SHIFT                      (28U)                                               /**< AIPS0_PACR.TP0 Position                 */
#define AIPS_PACR_TP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_TP0_SHIFT))&AIPS_PACR_TP0_MASK) /**< AIPS0_PACR.TP0 Field                    */
#define AIPS_PACR_WP0_MASK                       (0x20000000U)                                       /**< AIPS0_PACR.WP0 Mask                     */
#define AIPS_PACR_WP0_SHIFT                      (29U)                                               /**< AIPS0_PACR.WP0 Position                 */
#define AIPS_PACR_WP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_WP0_SHIFT))&AIPS_PACR_WP0_MASK) /**< AIPS0_PACR.WP0 Field                    */
#define AIPS_PACR_SP0_MASK                       (0x40000000U)                                       /**< AIPS0_PACR.SP0 Mask                     */
#define AIPS_PACR_SP0_SHIFT                      (30U)                                               /**< AIPS0_PACR.SP0 Position                 */
#define AIPS_PACR_SP0(x)                         (((uint32_t)(((uint32_t)(x))<<AIPS_PACR_SP0_SHIFT))&AIPS_PACR_SP0_MASK) /**< AIPS0_PACR.SP0 Field                    */
/** @} */

/** @} */ /* End group AIPS_Register_Masks_GROUP */


/* AIPS0 - Peripheral instance base addresses */
#define AIPS0_BasePtr                  0x40000000UL //!< Peripheral base address
#define AIPS0                          ((AIPS_Type *) AIPS0_BasePtr) //!< Freescale base pointer
#define AIPS0_BASE_PTR                 (AIPS0) //!< Freescale style base pointer

/** @} */ /* End group AIPS_Peripheral_access_layer_GROUP */


/** @brief C Struct for AIPS */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup AIPS_Peripheral_access_layer_GROUP AIPS Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           AIPS1 (derived from AIPS0)           ================ */
/* ================================================================================ */

/**
 * @brief AIPS-Lite Bridge
 */

/* AIPS1 - Peripheral instance base addresses */
#define AIPS1_BasePtr                  0x40080000UL //!< Peripheral base address
#define AIPS1                          ((AIPS_Type *) AIPS1_BasePtr) //!< Freescale base pointer
#define AIPS1_BASE_PTR                 (AIPS1) //!< Freescale style base pointer

/** @} */ /* End group AIPS_Peripheral_access_layer_GROUP */


/** @brief C Struct for AXBS */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup AXBS_Peripheral_access_layer_GROUP AXBS Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           AXBS (file:AXBS_6M_5S)               ================ */
/* ================================================================================ */

/**
 * @brief Crossbar switch
 */
/**
 * @struct AXBS_Type
 * @brief  C Struct allowing access to AXBS registers
 */
typedef struct AXBS_Type {
   struct {
      __IO uint32_t  PRS;                       /**< 0000: Priority Registers Slave                                     */
           uint8_t   RESERVED_0[12];            /**< 0004: 0xC bytes                                                    */
      __IO uint32_t  CRS;                       /**< 0010: Control Register                                             */
           uint8_t   RESERVED_1[236];           /**< 0014: 0xEC bytes                                                   */
   } SLAVE[5];                                  /**< 0000: (cluster: size=0x0500, 1280)                                 */
        uint8_t   RESERVED_2[768];              /**< 0500: 0x300 bytes                                                  */
   __IO uint32_t  MGPCR0;                       /**< 0800: Master General Purpose Control Register                      */
        uint8_t   RESERVED_3[252];              /**< 0804: 0xFC bytes                                                   */
   __IO uint32_t  MGPCR1;                       /**< 0900: Master General Purpose Control Register                      */
        uint8_t   RESERVED_4[252];              /**< 0904: 0xFC bytes                                                   */
   __IO uint32_t  MGPCR2;                       /**< 0A00: Master General Purpose Control Register                      */
        uint8_t   RESERVED_5[252];              /**< 0A04: 0xFC bytes                                                   */
   __IO uint32_t  MGPCR3;                       /**< 0B00: Master General Purpose Control Register                      */
        uint8_t   RESERVED_6[252];              /**< 0B04: 0xFC bytes                                                   */
   __IO uint32_t  MGPCR4;                       /**< 0C00: Master General Purpose Control Register                      */
        uint8_t   RESERVED_7[252];              /**< 0C04: 0xFC bytes                                                   */
   __IO uint32_t  MGPCR5;                       /**< 0D00: Master General Purpose Control Register                      */
} AXBS_Type;


/** @brief Register Masks for AXBS */

/* -------------------------------------------------------------------------------- */
/* -----------     'AXBS' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup AXBS_Register_Masks_GROUP AXBS Register Masks */
/** @{ */

/** @name PRS - Priority Registers Slave */ /** @{ */
#define AXBS_PRS_M0_MASK                         (0x7U)                                              /**< AXBS_PRS.M0 Mask                        */
#define AXBS_PRS_M0_SHIFT                        (0U)                                                /**< AXBS_PRS.M0 Position                    */
#define AXBS_PRS_M0(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M0_SHIFT))&AXBS_PRS_M0_MASK) /**< AXBS_PRS.M0 Field                       */
#define AXBS_PRS_M1_MASK                         (0x70U)                                             /**< AXBS_PRS.M1 Mask                        */
#define AXBS_PRS_M1_SHIFT                        (4U)                                                /**< AXBS_PRS.M1 Position                    */
#define AXBS_PRS_M1(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M1_SHIFT))&AXBS_PRS_M1_MASK) /**< AXBS_PRS.M1 Field                       */
#define AXBS_PRS_M2_MASK                         (0x700U)                                            /**< AXBS_PRS.M2 Mask                        */
#define AXBS_PRS_M2_SHIFT                        (8U)                                                /**< AXBS_PRS.M2 Position                    */
#define AXBS_PRS_M2(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M2_SHIFT))&AXBS_PRS_M2_MASK) /**< AXBS_PRS.M2 Field                       */
#define AXBS_PRS_M3_MASK                         (0x7000U)                                           /**< AXBS_PRS.M3 Mask                        */
#define AXBS_PRS_M3_SHIFT                        (12U)                                               /**< AXBS_PRS.M3 Position                    */
#define AXBS_PRS_M3(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M3_SHIFT))&AXBS_PRS_M3_MASK) /**< AXBS_PRS.M3 Field                       */
#define AXBS_PRS_M4_MASK                         (0x70000U)                                          /**< AXBS_PRS.M4 Mask                        */
#define AXBS_PRS_M4_SHIFT                        (16U)                                               /**< AXBS_PRS.M4 Position                    */
#define AXBS_PRS_M4(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M4_SHIFT))&AXBS_PRS_M4_MASK) /**< AXBS_PRS.M4 Field                       */
#define AXBS_PRS_M5_MASK                         (0x700000U)                                         /**< AXBS_PRS.M5 Mask                        */
#define AXBS_PRS_M5_SHIFT                        (20U)                                               /**< AXBS_PRS.M5 Position                    */
#define AXBS_PRS_M5(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_PRS_M5_SHIFT))&AXBS_PRS_M5_MASK) /**< AXBS_PRS.M5 Field                       */
/** @} */

/** @name CRS - Control Register */ /** @{ */
#define AXBS_CRS_PARK_MASK                       (0x7U)                                              /**< AXBS_CRS.PARK Mask                      */
#define AXBS_CRS_PARK_SHIFT                      (0U)                                                /**< AXBS_CRS.PARK Position                  */
#define AXBS_CRS_PARK(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_PARK_SHIFT))&AXBS_CRS_PARK_MASK) /**< AXBS_CRS.PARK Field                     */
#define AXBS_CRS_PCTL_MASK                       (0x30U)                                             /**< AXBS_CRS.PCTL Mask                      */
#define AXBS_CRS_PCTL_SHIFT                      (4U)                                                /**< AXBS_CRS.PCTL Position                  */
#define AXBS_CRS_PCTL(x)                         (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_PCTL_SHIFT))&AXBS_CRS_PCTL_MASK) /**< AXBS_CRS.PCTL Field                     */
#define AXBS_CRS_ARB_MASK                        (0x300U)                                            /**< AXBS_CRS.ARB Mask                       */
#define AXBS_CRS_ARB_SHIFT                       (8U)                                                /**< AXBS_CRS.ARB Position                   */
#define AXBS_CRS_ARB(x)                          (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_ARB_SHIFT))&AXBS_CRS_ARB_MASK) /**< AXBS_CRS.ARB Field                      */
#define AXBS_CRS_HLP_MASK                        (0x40000000U)                                       /**< AXBS_CRS.HLP Mask                       */
#define AXBS_CRS_HLP_SHIFT                       (30U)                                               /**< AXBS_CRS.HLP Position                   */
#define AXBS_CRS_HLP(x)                          (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_HLP_SHIFT))&AXBS_CRS_HLP_MASK) /**< AXBS_CRS.HLP Field                      */
#define AXBS_CRS_RO_MASK                         (0x80000000U)                                       /**< AXBS_CRS.RO Mask                        */
#define AXBS_CRS_RO_SHIFT                        (31U)                                               /**< AXBS_CRS.RO Position                    */
#define AXBS_CRS_RO(x)                           (((uint32_t)(((uint32_t)(x))<<AXBS_CRS_RO_SHIFT))&AXBS_CRS_RO_MASK) /**< AXBS_CRS.RO Field                       */
/** @} */

/** @name MGPCR0 - Master General Purpose Control Register */ /** @{ */
#define AXBS_MGPCR0_AULB_MASK                    (0x7U)                                              /**< AXBS_MGPCR0.AULB Mask                   */
#define AXBS_MGPCR0_AULB_SHIFT                   (0U)                                                /**< AXBS_MGPCR0.AULB Position               */
#define AXBS_MGPCR0_AULB(x)                      (((uint32_t)(((uint32_t)(x))<<AXBS_MGPCR0_AULB_SHIFT))&AXBS_MGPCR0_AULB_MASK) /**< AXBS_MGPCR0.AULB Field                  */
/** @} */

/** @name MGPCR1 - Master General Purpose Control Register */ /** @{ */
#define AXBS_MGPCR1_AULB_MASK                    (0x7U)                                              /**< AXBS_MGPCR1.AULB Mask                   */
#define AXBS_MGPCR1_AULB_SHIFT                   (0U)                                                /**< AXBS_MGPCR1.AULB Position               */
#define AXBS_MGPCR1_AULB(x)                      (((uint32_t)(((uint32_t)(x))<<AXBS_MGPCR1_AULB_SHIFT))&AXBS_MGPCR1_AULB_MASK) /**< AXBS_MGPCR1.AULB Field                  */
/** @} */

/** @name MGPCR2 - Master General Purpose Control Register */ /** @{ */
#define AXBS_MGPCR2_AULB_MASK                    (0x7U)                                              /**< AXBS_MGPCR2.AULB Mask                   */
#define AXBS_MGPCR2_AULB_SHIFT                   (0U)                                                /**< AXBS_MGPCR2.AULB Position               */
#define AXBS_MGPCR2_AULB(x)                      (((uint32_t)(((uint32_t)(x))<<AXBS_MGPCR2_AULB_SHIFT))&AXBS_MGPCR2_AULB_MASK) /**< AXBS_MGPCR2.AULB Field                  */
/** @} */

/** @name MGPCR3 - Master General Purpose Control Register */ /** @{ */
#define AXBS_MGPCR3_AULB_MASK                    (0x7U)                                              /**< AXBS_MGPCR3.AULB Mask                   */
#define AXBS_MGPCR3_AULB_SHIFT                   (0U)                                                /**< AXBS_MGPCR3.AULB Position               */
#define AXBS_MGPCR3_AULB(x)                      (((uint32_t)(((uint32_t)(x))<<AXBS_MGPCR3_AULB_SHIFT))&AXBS_MGPCR3_AULB_MASK) /**< AXBS_MGPCR3.AULB Field                  */
/** @} */

/** @name MGPCR4 - Master General Purpose Control Register */ /** @{ */
#define AXBS_MGPCR4_AULB_MASK                    (0x7U)                                              /**< AXBS_MGPCR4.AULB Mask                   */
#define AXBS_MGPCR4_AULB_SHIFT                   (0U)                                                /**< AXBS_MGPCR4.AULB Position               */
#define AXBS_MGPCR4_AULB(x)                      (((uint32_t)(((uint32_t)(x))<<AXBS_MGPCR4_AULB_SHIFT))&AXBS_MGPCR4_AULB_MASK) /**< AXBS_MGPCR4.AULB Field                  */
/** @} */

/** @name MGPCR5 - Master General Purpose Control Register */ /** @{ */
#define AXBS_MGPCR5_AULB_MASK                    (0x7U)                                              /**< AXBS_MGPCR5.AULB Mask                   */
#define AXBS_MGPCR5_AULB_SHIFT                   (0U)                                                /**< AXBS_MGPCR5.AULB Position               */
#define AXBS_MGPCR5_AULB(x)                      (((uint32_t)(((uint32_t)(x))<<AXBS_MGPCR5_AULB_SHIFT))&AXBS_MGPCR5_AULB_MASK) /**< AXBS_MGPCR5.AULB Field                  */
/** @} */

/** @} */ /* End group AXBS_Register_Masks_GROUP */


/* AXBS - Peripheral instance base addresses */
#define AXBS_BasePtr                   0x40004000UL //!< Peripheral base address
#define AXBS                           ((AXBS_Type *) AXBS_BasePtr) //!< Freescale base pointer
#define AXBS_BASE_PTR                  (AXBS) //!< Freescale style base pointer

/** @} */ /* End group AXBS_Peripheral_access_layer_GROUP */


/** @brief C Struct for CAN */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CAN_Peripheral_access_layer_GROUP CAN Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CAN0 (file:CAN0_FLEX_MK)             ================ */
/* ================================================================================ */

/**
 * @brief Flex Controller Area Network module
 */
#define CAN_FIFO_FILTER_COUNT 40        /**< Number of Filter IDs                               */
#define CAN_MESSAGE_BUFFER_COUNT 16     /**< Number of message buffers                          */
/**
 * @struct CAN_Type
 * @brief  C Struct allowing access to CAN registers
 */
typedef struct CAN_Type {
   __IO uint32_t  MCR;                          /**< 0000: Module Configuration Register                                */
   __IO uint32_t  CTRL1;                        /**< 0004: Control 1 Register                                           */
   __IO uint32_t  TIMER;                        /**< 0008: Free Running Timer                                           */
        uint8_t   RESERVED_0[4];                /**< 000C: 0x4 bytes                                                    */
   __IO uint32_t  RXMGMASK;                     /**< 0010: Rx Mailboxes Global Mask Register                            */
   __IO uint32_t  RX14MASK;                     /**< 0014: Rx 14 Mask register                                          */
   __IO uint32_t  RX15MASK;                     /**< 0018: Rx 15 Mask register                                          */
   __IO uint32_t  ECR;                          /**< 001C: Error Counter                                                */
   __IO uint32_t  ESR1;                         /**< 0020: Error and Status 1 register                                  */
        uint8_t   RESERVED_1[4];                /**< 0024: 0x4 bytes                                                    */
   __IO uint32_t  IMASK1;                       /**< 0028: Interrupt Masks 1 register                                   */
        uint8_t   RESERVED_2[4];                /**< 002C: 0x4 bytes                                                    */
   __IO uint32_t  IFLAG1;                       /**< 0030: Interrupt Flags 1 register                                   */
   __IO uint32_t  CTRL2;                        /**< 0034: Control 2 Register                                           */
   __I  uint32_t  ESR2;                         /**< 0038: Error and Status 2 register                                  */
        uint8_t   RESERVED_3[8];                /**< 003C: 0x8 bytes                                                    */
   __I  uint32_t  CRCR;                         /**< 0044: CRC Register                                                 */
   union {                                      /**< 0048: (size=0004)                                                  */
      __IO uint32_t  RXFGMASK;                  /**< 0048: Rx FIFO Global Mask register                                 */
      __IO uint32_t  RXFGMASK_A;                /**< 0048: Rx FIFO Global Mask register (format A)                      */
      __IO uint32_t  RXFGMASK_B;                /**< 0048: Rx FIFO Global Mask register (format B)                      */
      __IO uint32_t  RXFGMASK_C;                /**< 0048: Rx FIFO Global Mask register (format C)                      */
   };
   __I  uint32_t  RXFIR;                        /**< 004C: Rx FIFO Information Register                                 */
        uint8_t   RESERVED_4[48];               /**< 0050: 0x30 bytes                                                   */
   union {                                      /**< 0080: (size=0100)                                                  */
      struct {
         __IO uint32_t  CS;                     /**< 0080: FIFO Message Buffer CS Register                              */
         __IO uint32_t  ID;                     /**< 0084: FIFO Message Buffer ID Register                              */
         __IO uint32_t  WORD0;                  /**< 0088: FIFO Message Buffer WORD0 Register                           */
         __IO uint32_t  WORD1;                  /**< 008C: FIFO Message Buffer WORD1 Register                           */
              uint8_t   RESERVED_5[80];         /**< 0090: 0x50 bytes                                                   */
         union {                                /**< 00E0: (size=00A0)                                                  */
            __IO uint32_t  FILTER_ID[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID                                       */
            __IO uint32_t  FILTER_ID_A[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format A)                            */
            __IO uint32_t  FILTER_ID_B[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format B)                            */
            __IO uint32_t  FILTER_ID_C[CAN_FIFO_FILTER_COUNT]; /**< 00E0: FIFO Message Filter ID (format C)                            */
         };
      } FIFO;                                   /**< 0080: (cluster: size=0x0100, 256)                                  */
      struct {
         __IO uint32_t  CS;                     /**< 0080: Message Buffer 0 CS Register                                 */
         __IO uint32_t  ID;                     /**< 0084: Message Buffer 0 ID Register                                 */
         __IO uint32_t  WORD0;                  /**< 0088: Message Buffer 0 WORD0 Register                              */
         __IO uint32_t  WORD1;                  /**< 008C: Message Buffer 0 WORD1 Register                              */
      } MB[CAN_MESSAGE_BUFFER_COUNT];           /**< 0080: (cluster: size=0x0100, 256)                                  */
   };
        uint8_t   RESERVED_7[1792];             /**< 0180: 0x700 bytes                                                  */
   __IO uint32_t  RXIMR[CAN_MESSAGE_BUFFER_COUNT]; /**< 0880: Rx Individual Mask                                           */
} CAN_Type;


/** @brief Register Masks for CAN */

/* -------------------------------------------------------------------------------- */
/* -----------     'CAN0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup CAN_Register_Masks_GROUP CAN Register Masks */
/** @{ */

/** @name MCR - Module Configuration Register */ /** @{ */
#define CAN_MCR_MAXMB_MASK                       (0x7FU)                                             /**< CAN0_MCR.MAXMB Mask                     */
#define CAN_MCR_MAXMB_SHIFT                      (0U)                                                /**< CAN0_MCR.MAXMB Position                 */
#define CAN_MCR_MAXMB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MAXMB_SHIFT))&CAN_MCR_MAXMB_MASK) /**< CAN0_MCR.MAXMB Field                    */
#define CAN_MCR_IDAM_MASK                        (0x300U)                                            /**< CAN0_MCR.IDAM Mask                      */
#define CAN_MCR_IDAM_SHIFT                       (8U)                                                /**< CAN0_MCR.IDAM Position                  */
#define CAN_MCR_IDAM(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IDAM_SHIFT))&CAN_MCR_IDAM_MASK) /**< CAN0_MCR.IDAM Field                     */
#define CAN_MCR_AEN_MASK                         (0x1000U)                                           /**< CAN0_MCR.AEN Mask                       */
#define CAN_MCR_AEN_SHIFT                        (12U)                                               /**< CAN0_MCR.AEN Position                   */
#define CAN_MCR_AEN(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_AEN_SHIFT))&CAN_MCR_AEN_MASK) /**< CAN0_MCR.AEN Field                      */
#define CAN_MCR_LPRIOEN_MASK                     (0x2000U)                                           /**< CAN0_MCR.LPRIOEN Mask                   */
#define CAN_MCR_LPRIOEN_SHIFT                    (13U)                                               /**< CAN0_MCR.LPRIOEN Position               */
#define CAN_MCR_LPRIOEN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_LPRIOEN_SHIFT))&CAN_MCR_LPRIOEN_MASK) /**< CAN0_MCR.LPRIOEN Field                  */
#define CAN_MCR_IRMQ_MASK                        (0x10000U)                                          /**< CAN0_MCR.IRMQ Mask                      */
#define CAN_MCR_IRMQ_SHIFT                       (16U)                                               /**< CAN0_MCR.IRMQ Position                  */
#define CAN_MCR_IRMQ(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_IRMQ_SHIFT))&CAN_MCR_IRMQ_MASK) /**< CAN0_MCR.IRMQ Field                     */
#define CAN_MCR_SRXDIS_MASK                      (0x20000U)                                          /**< CAN0_MCR.SRXDIS Mask                    */
#define CAN_MCR_SRXDIS_SHIFT                     (17U)                                               /**< CAN0_MCR.SRXDIS Position                */
#define CAN_MCR_SRXDIS(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SRXDIS_SHIFT))&CAN_MCR_SRXDIS_MASK) /**< CAN0_MCR.SRXDIS Field                   */
#define CAN_MCR_WAKSRC_MASK                      (0x80000U)                                          /**< CAN0_MCR.WAKSRC Mask                    */
#define CAN_MCR_WAKSRC_SHIFT                     (19U)                                               /**< CAN0_MCR.WAKSRC Position                */
#define CAN_MCR_WAKSRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WAKSRC_SHIFT))&CAN_MCR_WAKSRC_MASK) /**< CAN0_MCR.WAKSRC Field                   */
#define CAN_MCR_LPMACK_MASK                      (0x100000U)                                         /**< CAN0_MCR.LPMACK Mask                    */
#define CAN_MCR_LPMACK_SHIFT                     (20U)                                               /**< CAN0_MCR.LPMACK Position                */
#define CAN_MCR_LPMACK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_LPMACK_SHIFT))&CAN_MCR_LPMACK_MASK) /**< CAN0_MCR.LPMACK Field                   */
#define CAN_MCR_WRNEN_MASK                       (0x200000U)                                         /**< CAN0_MCR.WRNEN Mask                     */
#define CAN_MCR_WRNEN_SHIFT                      (21U)                                               /**< CAN0_MCR.WRNEN Position                 */
#define CAN_MCR_WRNEN(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WRNEN_SHIFT))&CAN_MCR_WRNEN_MASK) /**< CAN0_MCR.WRNEN Field                    */
#define CAN_MCR_SLFWAK_MASK                      (0x400000U)                                         /**< CAN0_MCR.SLFWAK Mask                    */
#define CAN_MCR_SLFWAK_SHIFT                     (22U)                                               /**< CAN0_MCR.SLFWAK Position                */
#define CAN_MCR_SLFWAK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SLFWAK_SHIFT))&CAN_MCR_SLFWAK_MASK) /**< CAN0_MCR.SLFWAK Field                   */
#define CAN_MCR_SUPV_MASK                        (0x800000U)                                         /**< CAN0_MCR.SUPV Mask                      */
#define CAN_MCR_SUPV_SHIFT                       (23U)                                               /**< CAN0_MCR.SUPV Position                  */
#define CAN_MCR_SUPV(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SUPV_SHIFT))&CAN_MCR_SUPV_MASK) /**< CAN0_MCR.SUPV Field                     */
#define CAN_MCR_FRZACK_MASK                      (0x1000000U)                                        /**< CAN0_MCR.FRZACK Mask                    */
#define CAN_MCR_FRZACK_SHIFT                     (24U)                                               /**< CAN0_MCR.FRZACK Position                */
#define CAN_MCR_FRZACK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FRZACK_SHIFT))&CAN_MCR_FRZACK_MASK) /**< CAN0_MCR.FRZACK Field                   */
#define CAN_MCR_SOFTRST_MASK                     (0x2000000U)                                        /**< CAN0_MCR.SOFTRST Mask                   */
#define CAN_MCR_SOFTRST_SHIFT                    (25U)                                               /**< CAN0_MCR.SOFTRST Position               */
#define CAN_MCR_SOFTRST(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_MCR_SOFTRST_SHIFT))&CAN_MCR_SOFTRST_MASK) /**< CAN0_MCR.SOFTRST Field                  */
#define CAN_MCR_WAKMSK_MASK                      (0x4000000U)                                        /**< CAN0_MCR.WAKMSK Mask                    */
#define CAN_MCR_WAKMSK_SHIFT                     (26U)                                               /**< CAN0_MCR.WAKMSK Position                */
#define CAN_MCR_WAKMSK(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_WAKMSK_SHIFT))&CAN_MCR_WAKMSK_MASK) /**< CAN0_MCR.WAKMSK Field                   */
#define CAN_MCR_NOTRDY_MASK                      (0x8000000U)                                        /**< CAN0_MCR.NOTRDY Mask                    */
#define CAN_MCR_NOTRDY_SHIFT                     (27U)                                               /**< CAN0_MCR.NOTRDY Position                */
#define CAN_MCR_NOTRDY(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_MCR_NOTRDY_SHIFT))&CAN_MCR_NOTRDY_MASK) /**< CAN0_MCR.NOTRDY Field                   */
#define CAN_MCR_HALT_MASK                        (0x10000000U)                                       /**< CAN0_MCR.HALT Mask                      */
#define CAN_MCR_HALT_SHIFT                       (28U)                                               /**< CAN0_MCR.HALT Position                  */
#define CAN_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_HALT_SHIFT))&CAN_MCR_HALT_MASK) /**< CAN0_MCR.HALT Field                     */
#define CAN_MCR_RFEN_MASK                        (0x20000000U)                                       /**< CAN0_MCR.RFEN Mask                      */
#define CAN_MCR_RFEN_SHIFT                       (29U)                                               /**< CAN0_MCR.RFEN Position                  */
#define CAN_MCR_RFEN(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_RFEN_SHIFT))&CAN_MCR_RFEN_MASK) /**< CAN0_MCR.RFEN Field                     */
#define CAN_MCR_FRZ_MASK                         (0x40000000U)                                       /**< CAN0_MCR.FRZ Mask                       */
#define CAN_MCR_FRZ_SHIFT                        (30U)                                               /**< CAN0_MCR.FRZ Position                   */
#define CAN_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_MCR_FRZ_SHIFT))&CAN_MCR_FRZ_MASK) /**< CAN0_MCR.FRZ Field                      */
#define CAN_MCR_MDIS_MASK                        (0x80000000U)                                       /**< CAN0_MCR.MDIS Mask                      */
#define CAN_MCR_MDIS_SHIFT                       (31U)                                               /**< CAN0_MCR.MDIS Position                  */
#define CAN_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_MCR_MDIS_SHIFT))&CAN_MCR_MDIS_MASK) /**< CAN0_MCR.MDIS Field                     */
/** @} */

/** @name CTRL1 - Control 1 Register */ /** @{ */
#define CAN_CTRL1_PROPSEG_MASK                   (0x7U)                                              /**< CAN0_CTRL1.PROPSEG Mask                 */
#define CAN_CTRL1_PROPSEG_SHIFT                  (0U)                                                /**< CAN0_CTRL1.PROPSEG Position             */
#define CAN_CTRL1_PROPSEG(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PROPSEG_SHIFT))&CAN_CTRL1_PROPSEG_MASK) /**< CAN0_CTRL1.PROPSEG Field                */
#define CAN_CTRL1_LOM_MASK                       (0x8U)                                              /**< CAN0_CTRL1.LOM Mask                     */
#define CAN_CTRL1_LOM_SHIFT                      (3U)                                                /**< CAN0_CTRL1.LOM Position                 */
#define CAN_CTRL1_LOM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LOM_SHIFT))&CAN_CTRL1_LOM_MASK) /**< CAN0_CTRL1.LOM Field                    */
#define CAN_CTRL1_LBUF_MASK                      (0x10U)                                             /**< CAN0_CTRL1.LBUF Mask                    */
#define CAN_CTRL1_LBUF_SHIFT                     (4U)                                                /**< CAN0_CTRL1.LBUF Position                */
#define CAN_CTRL1_LBUF(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LBUF_SHIFT))&CAN_CTRL1_LBUF_MASK) /**< CAN0_CTRL1.LBUF Field                   */
#define CAN_CTRL1_TSYN_MASK                      (0x20U)                                             /**< CAN0_CTRL1.TSYN Mask                    */
#define CAN_CTRL1_TSYN_SHIFT                     (5U)                                                /**< CAN0_CTRL1.TSYN Position                */
#define CAN_CTRL1_TSYN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_TSYN_SHIFT))&CAN_CTRL1_TSYN_MASK) /**< CAN0_CTRL1.TSYN Field                   */
#define CAN_CTRL1_BOFFREC_MASK                   (0x40U)                                             /**< CAN0_CTRL1.BOFFREC Mask                 */
#define CAN_CTRL1_BOFFREC_SHIFT                  (6U)                                                /**< CAN0_CTRL1.BOFFREC Position             */
#define CAN_CTRL1_BOFFREC(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_BOFFREC_SHIFT))&CAN_CTRL1_BOFFREC_MASK) /**< CAN0_CTRL1.BOFFREC Field                */
#define CAN_CTRL1_SMP_MASK                       (0x80U)                                             /**< CAN0_CTRL1.SMP Mask                     */
#define CAN_CTRL1_SMP_SHIFT                      (7U)                                                /**< CAN0_CTRL1.SMP Position                 */
#define CAN_CTRL1_SMP(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_SMP_SHIFT))&CAN_CTRL1_SMP_MASK) /**< CAN0_CTRL1.SMP Field                    */
#define CAN_CTRL1_RWRNMSK_MASK                   (0x400U)                                            /**< CAN0_CTRL1.RWRNMSK Mask                 */
#define CAN_CTRL1_RWRNMSK_SHIFT                  (10U)                                               /**< CAN0_CTRL1.RWRNMSK Position             */
#define CAN_CTRL1_RWRNMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RWRNMSK_SHIFT))&CAN_CTRL1_RWRNMSK_MASK) /**< CAN0_CTRL1.RWRNMSK Field                */
#define CAN_CTRL1_TWRNMSK_MASK                   (0x800U)                                            /**< CAN0_CTRL1.TWRNMSK Mask                 */
#define CAN_CTRL1_TWRNMSK_SHIFT                  (11U)                                               /**< CAN0_CTRL1.TWRNMSK Position             */
#define CAN_CTRL1_TWRNMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_TWRNMSK_SHIFT))&CAN_CTRL1_TWRNMSK_MASK) /**< CAN0_CTRL1.TWRNMSK Field                */
#define CAN_CTRL1_LPB_MASK                       (0x1000U)                                           /**< CAN0_CTRL1.LPB Mask                     */
#define CAN_CTRL1_LPB_SHIFT                      (12U)                                               /**< CAN0_CTRL1.LPB Position                 */
#define CAN_CTRL1_LPB(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_LPB_SHIFT))&CAN_CTRL1_LPB_MASK) /**< CAN0_CTRL1.LPB Field                    */
#define CAN_CTRL1_CLKSRC_MASK                    (0x2000U)                                           /**< CAN0_CTRL1.CLKSRC Mask                  */
#define CAN_CTRL1_CLKSRC_SHIFT                   (13U)                                               /**< CAN0_CTRL1.CLKSRC Position              */
#define CAN_CTRL1_CLKSRC(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_CLKSRC_SHIFT))&CAN_CTRL1_CLKSRC_MASK) /**< CAN0_CTRL1.CLKSRC Field                 */
#define CAN_CTRL1_ERRMSK_MASK                    (0x4000U)                                           /**< CAN0_CTRL1.ERRMSK Mask                  */
#define CAN_CTRL1_ERRMSK_SHIFT                   (14U)                                               /**< CAN0_CTRL1.ERRMSK Position              */
#define CAN_CTRL1_ERRMSK(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_ERRMSK_SHIFT))&CAN_CTRL1_ERRMSK_MASK) /**< CAN0_CTRL1.ERRMSK Field                 */
#define CAN_CTRL1_BOFFMSK_MASK                   (0x8000U)                                           /**< CAN0_CTRL1.BOFFMSK Mask                 */
#define CAN_CTRL1_BOFFMSK_SHIFT                  (15U)                                               /**< CAN0_CTRL1.BOFFMSK Position             */
#define CAN_CTRL1_BOFFMSK(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_BOFFMSK_SHIFT))&CAN_CTRL1_BOFFMSK_MASK) /**< CAN0_CTRL1.BOFFMSK Field                */
#define CAN_CTRL1_PSEG2_MASK                     (0x70000U)                                          /**< CAN0_CTRL1.PSEG2 Mask                   */
#define CAN_CTRL1_PSEG2_SHIFT                    (16U)                                               /**< CAN0_CTRL1.PSEG2 Position               */
#define CAN_CTRL1_PSEG2(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG2_SHIFT))&CAN_CTRL1_PSEG2_MASK) /**< CAN0_CTRL1.PSEG2 Field                  */
#define CAN_CTRL1_PSEG1_MASK                     (0x380000U)                                         /**< CAN0_CTRL1.PSEG1 Mask                   */
#define CAN_CTRL1_PSEG1_SHIFT                    (19U)                                               /**< CAN0_CTRL1.PSEG1 Position               */
#define CAN_CTRL1_PSEG1(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PSEG1_SHIFT))&CAN_CTRL1_PSEG1_MASK) /**< CAN0_CTRL1.PSEG1 Field                  */
#define CAN_CTRL1_RJW_MASK                       (0xC00000U)                                         /**< CAN0_CTRL1.RJW Mask                     */
#define CAN_CTRL1_RJW_SHIFT                      (22U)                                               /**< CAN0_CTRL1.RJW Position                 */
#define CAN_CTRL1_RJW(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_RJW_SHIFT))&CAN_CTRL1_RJW_MASK) /**< CAN0_CTRL1.RJW Field                    */
#define CAN_CTRL1_PRESDIV_MASK                   (0xFF000000U)                                       /**< CAN0_CTRL1.PRESDIV Mask                 */
#define CAN_CTRL1_PRESDIV_SHIFT                  (24U)                                               /**< CAN0_CTRL1.PRESDIV Position             */
#define CAN_CTRL1_PRESDIV(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CTRL1_PRESDIV_SHIFT))&CAN_CTRL1_PRESDIV_MASK) /**< CAN0_CTRL1.PRESDIV Field                */
/** @} */

/** @name TIMER - Free Running Timer */ /** @{ */
#define CAN_TIMER_TIMER_MASK                     (0xFFFFU)                                           /**< CAN0_TIMER.TIMER Mask                   */
#define CAN_TIMER_TIMER_SHIFT                    (0U)                                                /**< CAN0_TIMER.TIMER Position               */
#define CAN_TIMER_TIMER(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_TIMER_TIMER_SHIFT))&CAN_TIMER_TIMER_MASK) /**< CAN0_TIMER.TIMER Field                  */
/** @} */

/** @name RXMGMASK - Rx Mailboxes Global Mask Register */ /** @{ */
#define CAN_RXMGMASK_MG_MASK                     (0xFFFFFFFFU)                                       /**< CAN0_RXMGMASK.MG Mask                   */
#define CAN_RXMGMASK_MG_SHIFT                    (0U)                                                /**< CAN0_RXMGMASK.MG Position               */
#define CAN_RXMGMASK_MG(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXMGMASK_MG_SHIFT))&CAN_RXMGMASK_MG_MASK) /**< CAN0_RXMGMASK.MG Field                  */
/** @} */

/** @name RX14MASK - Rx 14 Mask register */ /** @{ */
#define CAN_RX14MASK_RX14M_MASK                  (0xFFFFFFFFU)                                       /**< CAN0_RX14MASK.RX14M Mask                */
#define CAN_RX14MASK_RX14M_SHIFT                 (0U)                                                /**< CAN0_RX14MASK.RX14M Position            */
#define CAN_RX14MASK_RX14M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX14MASK_RX14M_SHIFT))&CAN_RX14MASK_RX14M_MASK) /**< CAN0_RX14MASK.RX14M Field               */
/** @} */

/** @name RX15MASK - Rx 15 Mask register */ /** @{ */
#define CAN_RX15MASK_RX15M_MASK                  (0xFFFFFFFFU)                                       /**< CAN0_RX15MASK.RX15M Mask                */
#define CAN_RX15MASK_RX15M_SHIFT                 (0U)                                                /**< CAN0_RX15MASK.RX15M Position            */
#define CAN_RX15MASK_RX15M(x)                    (((uint32_t)(((uint32_t)(x))<<CAN_RX15MASK_RX15M_SHIFT))&CAN_RX15MASK_RX15M_MASK) /**< CAN0_RX15MASK.RX15M Field               */
/** @} */

/** @name ECR - Error Counter */ /** @{ */
#define CAN_ECR_TXERRCNT_MASK                    (0xFFU)                                             /**< CAN0_ECR.TXERRCNT Mask                  */
#define CAN_ECR_TXERRCNT_SHIFT                   (0U)                                                /**< CAN0_ECR.TXERRCNT Position              */
#define CAN_ECR_TXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_TXERRCNT_SHIFT))&CAN_ECR_TXERRCNT_MASK) /**< CAN0_ECR.TXERRCNT Field                 */
#define CAN_ECR_RXERRCNT_MASK                    (0xFF00U)                                           /**< CAN0_ECR.RXERRCNT Mask                  */
#define CAN_ECR_RXERRCNT_SHIFT                   (8U)                                                /**< CAN0_ECR.RXERRCNT Position              */
#define CAN_ECR_RXERRCNT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ECR_RXERRCNT_SHIFT))&CAN_ECR_RXERRCNT_MASK) /**< CAN0_ECR.RXERRCNT Field                 */
/** @} */

/** @name ESR1 - Error and Status 1 register */ /** @{ */
#define CAN_ESR1_WAKINT_MASK                     (0x1U)                                              /**< CAN0_ESR1.WAKINT Mask                   */
#define CAN_ESR1_WAKINT_SHIFT                    (0U)                                                /**< CAN0_ESR1.WAKINT Position               */
#define CAN_ESR1_WAKINT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_WAKINT_SHIFT))&CAN_ESR1_WAKINT_MASK) /**< CAN0_ESR1.WAKINT Field                  */
#define CAN_ESR1_ERRINT_MASK                     (0x2U)                                              /**< CAN0_ESR1.ERRINT Mask                   */
#define CAN_ESR1_ERRINT_SHIFT                    (1U)                                                /**< CAN0_ESR1.ERRINT Position               */
#define CAN_ESR1_ERRINT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ERRINT_SHIFT))&CAN_ESR1_ERRINT_MASK) /**< CAN0_ESR1.ERRINT Field                  */
#define CAN_ESR1_BOFFINT_MASK                    (0x4U)                                              /**< CAN0_ESR1.BOFFINT Mask                  */
#define CAN_ESR1_BOFFINT_SHIFT                   (2U)                                                /**< CAN0_ESR1.BOFFINT Position              */
#define CAN_ESR1_BOFFINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BOFFINT_SHIFT))&CAN_ESR1_BOFFINT_MASK) /**< CAN0_ESR1.BOFFINT Field                 */
#define CAN_ESR1_RX_MASK                         (0x8U)                                              /**< CAN0_ESR1.RX Mask                       */
#define CAN_ESR1_RX_SHIFT                        (3U)                                                /**< CAN0_ESR1.RX Position                   */
#define CAN_ESR1_RX(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RX_SHIFT))&CAN_ESR1_RX_MASK) /**< CAN0_ESR1.RX Field                      */
#define CAN_ESR1_FLTCONF_MASK                    (0x30U)                                             /**< CAN0_ESR1.FLTCONF Mask                  */
#define CAN_ESR1_FLTCONF_SHIFT                   (4U)                                                /**< CAN0_ESR1.FLTCONF Position              */
#define CAN_ESR1_FLTCONF(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FLTCONF_SHIFT))&CAN_ESR1_FLTCONF_MASK) /**< CAN0_ESR1.FLTCONF Field                 */
#define CAN_ESR1_TX_MASK                         (0x40U)                                             /**< CAN0_ESR1.TX Mask                       */
#define CAN_ESR1_TX_SHIFT                        (6U)                                                /**< CAN0_ESR1.TX Position                   */
#define CAN_ESR1_TX(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TX_SHIFT))&CAN_ESR1_TX_MASK) /**< CAN0_ESR1.TX Field                      */
#define CAN_ESR1_IDLE_MASK                       (0x80U)                                             /**< CAN0_ESR1.IDLE Mask                     */
#define CAN_ESR1_IDLE_SHIFT                      (7U)                                                /**< CAN0_ESR1.IDLE Position                 */
#define CAN_ESR1_IDLE(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_IDLE_SHIFT))&CAN_ESR1_IDLE_MASK) /**< CAN0_ESR1.IDLE Field                    */
#define CAN_ESR1_RXWRN_MASK                      (0x100U)                                            /**< CAN0_ESR1.RXWRN Mask                    */
#define CAN_ESR1_RXWRN_SHIFT                     (8U)                                                /**< CAN0_ESR1.RXWRN Position                */
#define CAN_ESR1_RXWRN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RXWRN_SHIFT))&CAN_ESR1_RXWRN_MASK) /**< CAN0_ESR1.RXWRN Field                   */
#define CAN_ESR1_TXWRN_MASK                      (0x200U)                                            /**< CAN0_ESR1.TXWRN Mask                    */
#define CAN_ESR1_TXWRN_SHIFT                     (9U)                                                /**< CAN0_ESR1.TXWRN Position                */
#define CAN_ESR1_TXWRN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TXWRN_SHIFT))&CAN_ESR1_TXWRN_MASK) /**< CAN0_ESR1.TXWRN Field                   */
#define CAN_ESR1_STFERR_MASK                     (0x400U)                                            /**< CAN0_ESR1.STFERR Mask                   */
#define CAN_ESR1_STFERR_SHIFT                    (10U)                                               /**< CAN0_ESR1.STFERR Position               */
#define CAN_ESR1_STFERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_STFERR_SHIFT))&CAN_ESR1_STFERR_MASK) /**< CAN0_ESR1.STFERR Field                  */
#define CAN_ESR1_FRMERR_MASK                     (0x800U)                                            /**< CAN0_ESR1.FRMERR Mask                   */
#define CAN_ESR1_FRMERR_SHIFT                    (11U)                                               /**< CAN0_ESR1.FRMERR Position               */
#define CAN_ESR1_FRMERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_FRMERR_SHIFT))&CAN_ESR1_FRMERR_MASK) /**< CAN0_ESR1.FRMERR Field                  */
#define CAN_ESR1_CRCERR_MASK                     (0x1000U)                                           /**< CAN0_ESR1.CRCERR Mask                   */
#define CAN_ESR1_CRCERR_SHIFT                    (12U)                                               /**< CAN0_ESR1.CRCERR Position               */
#define CAN_ESR1_CRCERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_CRCERR_SHIFT))&CAN_ESR1_CRCERR_MASK) /**< CAN0_ESR1.CRCERR Field                  */
#define CAN_ESR1_ACKERR_MASK                     (0x2000U)                                           /**< CAN0_ESR1.ACKERR Mask                   */
#define CAN_ESR1_ACKERR_SHIFT                    (13U)                                               /**< CAN0_ESR1.ACKERR Position               */
#define CAN_ESR1_ACKERR(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_ACKERR_SHIFT))&CAN_ESR1_ACKERR_MASK) /**< CAN0_ESR1.ACKERR Field                  */
#define CAN_ESR1_BIT0ERR_MASK                    (0x4000U)                                           /**< CAN0_ESR1.BIT0ERR Mask                  */
#define CAN_ESR1_BIT0ERR_SHIFT                   (14U)                                               /**< CAN0_ESR1.BIT0ERR Position              */
#define CAN_ESR1_BIT0ERR(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT0ERR_SHIFT))&CAN_ESR1_BIT0ERR_MASK) /**< CAN0_ESR1.BIT0ERR Field                 */
#define CAN_ESR1_BIT1ERR_MASK                    (0x8000U)                                           /**< CAN0_ESR1.BIT1ERR Mask                  */
#define CAN_ESR1_BIT1ERR_SHIFT                   (15U)                                               /**< CAN0_ESR1.BIT1ERR Position              */
#define CAN_ESR1_BIT1ERR(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_BIT1ERR_SHIFT))&CAN_ESR1_BIT1ERR_MASK) /**< CAN0_ESR1.BIT1ERR Field                 */
#define CAN_ESR1_RWRNINT_MASK                    (0x10000U)                                          /**< CAN0_ESR1.RWRNINT Mask                  */
#define CAN_ESR1_RWRNINT_SHIFT                   (16U)                                               /**< CAN0_ESR1.RWRNINT Position              */
#define CAN_ESR1_RWRNINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_RWRNINT_SHIFT))&CAN_ESR1_RWRNINT_MASK) /**< CAN0_ESR1.RWRNINT Field                 */
#define CAN_ESR1_TWRNINT_MASK                    (0x20000U)                                          /**< CAN0_ESR1.TWRNINT Mask                  */
#define CAN_ESR1_TWRNINT_SHIFT                   (17U)                                               /**< CAN0_ESR1.TWRNINT Position              */
#define CAN_ESR1_TWRNINT(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_TWRNINT_SHIFT))&CAN_ESR1_TWRNINT_MASK) /**< CAN0_ESR1.TWRNINT Field                 */
#define CAN_ESR1_SYNCH_MASK                      (0x40000U)                                          /**< CAN0_ESR1.SYNCH Mask                    */
#define CAN_ESR1_SYNCH_SHIFT                     (18U)                                               /**< CAN0_ESR1.SYNCH Position                */
#define CAN_ESR1_SYNCH(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_ESR1_SYNCH_SHIFT))&CAN_ESR1_SYNCH_MASK) /**< CAN0_ESR1.SYNCH Field                   */
/** @} */

/** @name IMASK1 - Interrupt Masks 1 register */ /** @{ */
#define CAN_IMASK1_BUFLM_MASK                    (0xFFFFFFFFU)                                       /**< CAN0_IMASK1.BUFLM Mask                  */
#define CAN_IMASK1_BUFLM_SHIFT                   (0U)                                                /**< CAN0_IMASK1.BUFLM Position              */
#define CAN_IMASK1_BUFLM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IMASK1_BUFLM_SHIFT))&CAN_IMASK1_BUFLM_MASK) /**< CAN0_IMASK1.BUFLM Field                 */
/** @} */

/** @name IFLAG1 - Interrupt Flags 1 register */ /** @{ */
#define CAN_IFLAG1_BUF4TO0I_MASK                 (0x1FU)                                             /**< CAN0_IFLAG1.BUF4TO0I Mask               */
#define CAN_IFLAG1_BUF4TO0I_SHIFT                (0U)                                                /**< CAN0_IFLAG1.BUF4TO0I Position           */
#define CAN_IFLAG1_BUF4TO0I(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF4TO0I_SHIFT))&CAN_IFLAG1_BUF4TO0I_MASK) /**< CAN0_IFLAG1.BUF4TO0I Field              */
#define CAN_IFLAG1_BUF5I_MASK                    (0x20U)                                             /**< CAN0_IFLAG1.BUF5I Mask                  */
#define CAN_IFLAG1_BUF5I_SHIFT                   (5U)                                                /**< CAN0_IFLAG1.BUF5I Position              */
#define CAN_IFLAG1_BUF5I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF5I_SHIFT))&CAN_IFLAG1_BUF5I_MASK) /**< CAN0_IFLAG1.BUF5I Field                 */
#define CAN_IFLAG1_BUF6I_MASK                    (0x40U)                                             /**< CAN0_IFLAG1.BUF6I Mask                  */
#define CAN_IFLAG1_BUF6I_SHIFT                   (6U)                                                /**< CAN0_IFLAG1.BUF6I Position              */
#define CAN_IFLAG1_BUF6I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF6I_SHIFT))&CAN_IFLAG1_BUF6I_MASK) /**< CAN0_IFLAG1.BUF6I Field                 */
#define CAN_IFLAG1_BUF7I_MASK                    (0x80U)                                             /**< CAN0_IFLAG1.BUF7I Mask                  */
#define CAN_IFLAG1_BUF7I_SHIFT                   (7U)                                                /**< CAN0_IFLAG1.BUF7I Position              */
#define CAN_IFLAG1_BUF7I(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF7I_SHIFT))&CAN_IFLAG1_BUF7I_MASK) /**< CAN0_IFLAG1.BUF7I Field                 */
#define CAN_IFLAG1_BUF31TO8I_MASK                (0xFFFFFF00U)                                       /**< CAN0_IFLAG1.BUF31TO8I Mask              */
#define CAN_IFLAG1_BUF31TO8I_SHIFT               (8U)                                                /**< CAN0_IFLAG1.BUF31TO8I Position          */
#define CAN_IFLAG1_BUF31TO8I(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_IFLAG1_BUF31TO8I_SHIFT))&CAN_IFLAG1_BUF31TO8I_MASK) /**< CAN0_IFLAG1.BUF31TO8I Field             */
/** @} */

/** @name CTRL2 - Control 2 Register */ /** @{ */
#define CAN_CTRL2_EACEN_MASK                     (0x10000U)                                          /**< CAN0_CTRL2.EACEN Mask                   */
#define CAN_CTRL2_EACEN_SHIFT                    (16U)                                               /**< CAN0_CTRL2.EACEN Position               */
#define CAN_CTRL2_EACEN(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_EACEN_SHIFT))&CAN_CTRL2_EACEN_MASK) /**< CAN0_CTRL2.EACEN Field                  */
#define CAN_CTRL2_RRS_MASK                       (0x20000U)                                          /**< CAN0_CTRL2.RRS Mask                     */
#define CAN_CTRL2_RRS_SHIFT                      (17U)                                               /**< CAN0_CTRL2.RRS Position                 */
#define CAN_CTRL2_RRS(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RRS_SHIFT))&CAN_CTRL2_RRS_MASK) /**< CAN0_CTRL2.RRS Field                    */
#define CAN_CTRL2_MRP_MASK                       (0x40000U)                                          /**< CAN0_CTRL2.MRP Mask                     */
#define CAN_CTRL2_MRP_SHIFT                      (18U)                                               /**< CAN0_CTRL2.MRP Position                 */
#define CAN_CTRL2_MRP(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_MRP_SHIFT))&CAN_CTRL2_MRP_MASK) /**< CAN0_CTRL2.MRP Field                    */
#define CAN_CTRL2_TASD_MASK                      (0xF80000U)                                         /**< CAN0_CTRL2.TASD Mask                    */
#define CAN_CTRL2_TASD_SHIFT                     (19U)                                               /**< CAN0_CTRL2.TASD Position                */
#define CAN_CTRL2_TASD(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_TASD_SHIFT))&CAN_CTRL2_TASD_MASK) /**< CAN0_CTRL2.TASD Field                   */
#define CAN_CTRL2_RFFN_MASK                      (0xF000000U)                                        /**< CAN0_CTRL2.RFFN Mask                    */
#define CAN_CTRL2_RFFN_SHIFT                     (24U)                                               /**< CAN0_CTRL2.RFFN Position                */
#define CAN_CTRL2_RFFN(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_RFFN_SHIFT))&CAN_CTRL2_RFFN_MASK) /**< CAN0_CTRL2.RFFN Field                   */
#define CAN_CTRL2_WRMFRZ_MASK                    (0x10000000U)                                       /**< CAN0_CTRL2.WRMFRZ Mask                  */
#define CAN_CTRL2_WRMFRZ_SHIFT                   (28U)                                               /**< CAN0_CTRL2.WRMFRZ Position              */
#define CAN_CTRL2_WRMFRZ(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_CTRL2_WRMFRZ_SHIFT))&CAN_CTRL2_WRMFRZ_MASK) /**< CAN0_CTRL2.WRMFRZ Field                 */
/** @} */

/** @name ESR2 - Error and Status 2 register */ /** @{ */
#define CAN_ESR2_IMB_MASK                        (0x2000U)                                           /**< CAN0_ESR2.IMB Mask                      */
#define CAN_ESR2_IMB_SHIFT                       (13U)                                               /**< CAN0_ESR2.IMB Position                  */
#define CAN_ESR2_IMB(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_IMB_SHIFT))&CAN_ESR2_IMB_MASK) /**< CAN0_ESR2.IMB Field                     */
#define CAN_ESR2_VPS_MASK                        (0x4000U)                                           /**< CAN0_ESR2.VPS Mask                      */
#define CAN_ESR2_VPS_SHIFT                       (14U)                                               /**< CAN0_ESR2.VPS Position                  */
#define CAN_ESR2_VPS(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_VPS_SHIFT))&CAN_ESR2_VPS_MASK) /**< CAN0_ESR2.VPS Field                     */
#define CAN_ESR2_LPTM_MASK                       (0x7F0000U)                                         /**< CAN0_ESR2.LPTM Mask                     */
#define CAN_ESR2_LPTM_SHIFT                      (16U)                                               /**< CAN0_ESR2.LPTM Position                 */
#define CAN_ESR2_LPTM(x)                         (((uint32_t)(((uint32_t)(x))<<CAN_ESR2_LPTM_SHIFT))&CAN_ESR2_LPTM_MASK) /**< CAN0_ESR2.LPTM Field                    */
/** @} */

/** @name CRCR - CRC Register */ /** @{ */
#define CAN_CRCR_TXCRC_MASK                      (0x7FFFU)                                           /**< CAN0_CRCR.TXCRC Mask                    */
#define CAN_CRCR_TXCRC_SHIFT                     (0U)                                                /**< CAN0_CRCR.TXCRC Position                */
#define CAN_CRCR_TXCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_TXCRC_SHIFT))&CAN_CRCR_TXCRC_MASK) /**< CAN0_CRCR.TXCRC Field                   */
#define CAN_CRCR_MBCRC_MASK                      (0x7F0000U)                                         /**< CAN0_CRCR.MBCRC Mask                    */
#define CAN_CRCR_MBCRC_SHIFT                     (16U)                                               /**< CAN0_CRCR.MBCRC Position                */
#define CAN_CRCR_MBCRC(x)                        (((uint32_t)(((uint32_t)(x))<<CAN_CRCR_MBCRC_SHIFT))&CAN_CRCR_MBCRC_MASK) /**< CAN0_CRCR.MBCRC Field                   */
/** @} */

/** @name RXFGMASK - Rx FIFO Global Mask register */ /** @{ */
#define CAN_RXFGMASK_FGM_MASK                    (0xFFFFFFFFU)                                       /**< CAN0_RXFGMASK.FGM Mask                  */
#define CAN_RXFGMASK_FGM_SHIFT                   (0U)                                                /**< CAN0_RXFGMASK.FGM Position              */
#define CAN_RXFGMASK_FGM(x)                      (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_FGM_SHIFT))&CAN_RXFGMASK_FGM_MASK) /**< CAN0_RXFGMASK.FGM Field                 */
/** @} */

/** @name RXFGMASK_A - Rx FIFO Global Mask register (format A) */ /** @{ */
#define CAN_RXFGMASK_A_RXIDA_EXT_MASK            (0x3FFFFFFEU)                                       /**< CAN0_RXFGMASK_A.RXIDA_EXT Mask          */
#define CAN_RXFGMASK_A_RXIDA_EXT_SHIFT           (1U)                                                /**< CAN0_RXFGMASK_A.RXIDA_EXT Position      */
#define CAN_RXFGMASK_A_RXIDA_EXT(x)              (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_RXIDA_EXT_SHIFT))&CAN_RXFGMASK_A_RXIDA_EXT_MASK) /**< CAN0_RXFGMASK_A.RXIDA_EXT Field         */
#define CAN_RXFGMASK_A_RXIDA_STD_MASK            (0x3FF80000U)                                       /**< CAN0_RXFGMASK_A.RXIDA_STD Mask          */
#define CAN_RXFGMASK_A_RXIDA_STD_SHIFT           (19U)                                               /**< CAN0_RXFGMASK_A.RXIDA_STD Position      */
#define CAN_RXFGMASK_A_RXIDA_STD(x)              (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_RXIDA_STD_SHIFT))&CAN_RXFGMASK_A_RXIDA_STD_MASK) /**< CAN0_RXFGMASK_A.RXIDA_STD Field         */
#define CAN_RXFGMASK_A_IDEA_MASK                 (0x40000000U)                                       /**< CAN0_RXFGMASK_A.IDEA Mask               */
#define CAN_RXFGMASK_A_IDEA_SHIFT                (30U)                                               /**< CAN0_RXFGMASK_A.IDEA Position           */
#define CAN_RXFGMASK_A_IDEA(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_IDEA_SHIFT))&CAN_RXFGMASK_A_IDEA_MASK) /**< CAN0_RXFGMASK_A.IDEA Field              */
#define CAN_RXFGMASK_A_RTRA_MASK                 (0x80000000U)                                       /**< CAN0_RXFGMASK_A.RTRA Mask               */
#define CAN_RXFGMASK_A_RTRA_SHIFT                (31U)                                               /**< CAN0_RXFGMASK_A.RTRA Position           */
#define CAN_RXFGMASK_A_RTRA(x)                   (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_A_RTRA_SHIFT))&CAN_RXFGMASK_A_RTRA_MASK) /**< CAN0_RXFGMASK_A.RTRA Field              */
/** @} */

/** @name RXFGMASK_B - Rx FIFO Global Mask register (format B) */ /** @{ */
#define CAN_RXFGMASK_B_RXIDB_EXT_1_MASK          (0x3FFFU)                                           /**< CAN0_RXFGMASK_B.RXIDB_EXT_1 Mask        */
#define CAN_RXFGMASK_B_RXIDB_EXT_1_SHIFT         (0U)                                                /**< CAN0_RXFGMASK_B.RXIDB_EXT_1 Position    */
#define CAN_RXFGMASK_B_RXIDB_EXT_1(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_EXT_1_SHIFT))&CAN_RXFGMASK_B_RXIDB_EXT_1_MASK) /**< CAN0_RXFGMASK_B.RXIDB_EXT_1 Field       */
#define CAN_RXFGMASK_B_RXIDB_STD_1_MASK          (0x3FF8U)                                           /**< CAN0_RXFGMASK_B.RXIDB_STD_1 Mask        */
#define CAN_RXFGMASK_B_RXIDB_STD_1_SHIFT         (3U)                                                /**< CAN0_RXFGMASK_B.RXIDB_STD_1 Position    */
#define CAN_RXFGMASK_B_RXIDB_STD_1(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_STD_1_SHIFT))&CAN_RXFGMASK_B_RXIDB_STD_1_MASK) /**< CAN0_RXFGMASK_B.RXIDB_STD_1 Field       */
#define CAN_RXFGMASK_B_IDEB_1_MASK               (0x4000U)                                           /**< CAN0_RXFGMASK_B.IDEB_1 Mask             */
#define CAN_RXFGMASK_B_IDEB_1_SHIFT              (14U)                                               /**< CAN0_RXFGMASK_B.IDEB_1 Position         */
#define CAN_RXFGMASK_B_IDEB_1(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_IDEB_1_SHIFT))&CAN_RXFGMASK_B_IDEB_1_MASK) /**< CAN0_RXFGMASK_B.IDEB_1 Field            */
#define CAN_RXFGMASK_B_RTRB_1_MASK               (0x8000U)                                           /**< CAN0_RXFGMASK_B.RTRB_1 Mask             */
#define CAN_RXFGMASK_B_RTRB_1_SHIFT              (15U)                                               /**< CAN0_RXFGMASK_B.RTRB_1 Position         */
#define CAN_RXFGMASK_B_RTRB_1(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RTRB_1_SHIFT))&CAN_RXFGMASK_B_RTRB_1_MASK) /**< CAN0_RXFGMASK_B.RTRB_1 Field            */
#define CAN_RXFGMASK_B_RXIDB_EXT_0_MASK          (0x3FFF0000U)                                       /**< CAN0_RXFGMASK_B.RXIDB_EXT_0 Mask        */
#define CAN_RXFGMASK_B_RXIDB_EXT_0_SHIFT         (16U)                                               /**< CAN0_RXFGMASK_B.RXIDB_EXT_0 Position    */
#define CAN_RXFGMASK_B_RXIDB_EXT_0(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_EXT_0_SHIFT))&CAN_RXFGMASK_B_RXIDB_EXT_0_MASK) /**< CAN0_RXFGMASK_B.RXIDB_EXT_0 Field       */
#define CAN_RXFGMASK_B_RXIDB_STD_0_MASK          (0x3FF80000U)                                       /**< CAN0_RXFGMASK_B.RXIDB_STD_0 Mask        */
#define CAN_RXFGMASK_B_RXIDB_STD_0_SHIFT         (19U)                                               /**< CAN0_RXFGMASK_B.RXIDB_STD_0 Position    */
#define CAN_RXFGMASK_B_RXIDB_STD_0(x)            (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RXIDB_STD_0_SHIFT))&CAN_RXFGMASK_B_RXIDB_STD_0_MASK) /**< CAN0_RXFGMASK_B.RXIDB_STD_0 Field       */
#define CAN_RXFGMASK_B_IDEB_0_MASK               (0x40000000U)                                       /**< CAN0_RXFGMASK_B.IDEB_0 Mask             */
#define CAN_RXFGMASK_B_IDEB_0_SHIFT              (30U)                                               /**< CAN0_RXFGMASK_B.IDEB_0 Position         */
#define CAN_RXFGMASK_B_IDEB_0(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_IDEB_0_SHIFT))&CAN_RXFGMASK_B_IDEB_0_MASK) /**< CAN0_RXFGMASK_B.IDEB_0 Field            */
#define CAN_RXFGMASK_B_RTRB_0_MASK               (0x80000000U)                                       /**< CAN0_RXFGMASK_B.RTRB_0 Mask             */
#define CAN_RXFGMASK_B_RTRB_0_SHIFT              (31U)                                               /**< CAN0_RXFGMASK_B.RTRB_0 Position         */
#define CAN_RXFGMASK_B_RTRB_0(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_B_RTRB_0_SHIFT))&CAN_RXFGMASK_B_RTRB_0_MASK) /**< CAN0_RXFGMASK_B.RTRB_0 Field            */
/** @} */

/** @name RXFGMASK_C - Rx FIFO Global Mask register (format C) */ /** @{ */
#define CAN_RXFGMASK_C_RXIDC_3_MASK              (0xFFU)                                             /**< CAN0_RXFGMASK_C.RXIDC_3 Mask            */
#define CAN_RXFGMASK_C_RXIDC_3_SHIFT             (0U)                                                /**< CAN0_RXFGMASK_C.RXIDC_3 Position        */
#define CAN_RXFGMASK_C_RXIDC_3(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_3_SHIFT))&CAN_RXFGMASK_C_RXIDC_3_MASK) /**< CAN0_RXFGMASK_C.RXIDC_3 Field           */
#define CAN_RXFGMASK_C_RXIDC_2_MASK              (0xFF00U)                                           /**< CAN0_RXFGMASK_C.RXIDC_2 Mask            */
#define CAN_RXFGMASK_C_RXIDC_2_SHIFT             (8U)                                                /**< CAN0_RXFGMASK_C.RXIDC_2 Position        */
#define CAN_RXFGMASK_C_RXIDC_2(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_2_SHIFT))&CAN_RXFGMASK_C_RXIDC_2_MASK) /**< CAN0_RXFGMASK_C.RXIDC_2 Field           */
#define CAN_RXFGMASK_C_RXIDC_1_MASK              (0xFF0000U)                                         /**< CAN0_RXFGMASK_C.RXIDC_1 Mask            */
#define CAN_RXFGMASK_C_RXIDC_1_SHIFT             (16U)                                               /**< CAN0_RXFGMASK_C.RXIDC_1 Position        */
#define CAN_RXFGMASK_C_RXIDC_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_1_SHIFT))&CAN_RXFGMASK_C_RXIDC_1_MASK) /**< CAN0_RXFGMASK_C.RXIDC_1 Field           */
#define CAN_RXFGMASK_C_RXIDC_0_MASK              (0xFF000000U)                                       /**< CAN0_RXFGMASK_C.RXIDC_0 Mask            */
#define CAN_RXFGMASK_C_RXIDC_0_SHIFT             (24U)                                               /**< CAN0_RXFGMASK_C.RXIDC_0 Position        */
#define CAN_RXFGMASK_C_RXIDC_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_RXFGMASK_C_RXIDC_0_SHIFT))&CAN_RXFGMASK_C_RXIDC_0_MASK) /**< CAN0_RXFGMASK_C.RXIDC_0 Field           */
/** @} */

/** @name RXFIR - Rx FIFO Information Register */ /** @{ */
#define CAN_RXFIR_IDHIT_MASK                     (0x1FFU)                                            /**< CAN0_RXFIR.IDHIT Mask                   */
#define CAN_RXFIR_IDHIT_SHIFT                    (0U)                                                /**< CAN0_RXFIR.IDHIT Position               */
#define CAN_RXFIR_IDHIT(x)                       (((uint32_t)(((uint32_t)(x))<<CAN_RXFIR_IDHIT_SHIFT))&CAN_RXFIR_IDHIT_MASK) /**< CAN0_RXFIR.IDHIT Field                  */
/** @} */

/** @name CS - FIFO Message Buffer CS Register */ /** @{ */
#define CAN_CS_TIME_STAMP_MASK                   (0xFFFFU)                                           /**< CAN0_CS.TIME_STAMP Mask                 */
#define CAN_CS_TIME_STAMP_SHIFT                  (0U)                                                /**< CAN0_CS.TIME_STAMP Position             */
#define CAN_CS_TIME_STAMP(x)                     (((uint32_t)(((uint32_t)(x))<<CAN_CS_TIME_STAMP_SHIFT))&CAN_CS_TIME_STAMP_MASK) /**< CAN0_CS.TIME_STAMP Field                */
#define CAN_CS_DLC_MASK                          (0xF0000U)                                          /**< CAN0_CS.DLC Mask                        */
#define CAN_CS_DLC_SHIFT                         (16U)                                               /**< CAN0_CS.DLC Position                    */
#define CAN_CS_DLC(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_DLC_SHIFT))&CAN_CS_DLC_MASK) /**< CAN0_CS.DLC Field                       */
#define CAN_CS_RTR_MASK                          (0x100000U)                                         /**< CAN0_CS.RTR Mask                        */
#define CAN_CS_RTR_SHIFT                         (20U)                                               /**< CAN0_CS.RTR Position                    */
#define CAN_CS_RTR(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_RTR_SHIFT))&CAN_CS_RTR_MASK) /**< CAN0_CS.RTR Field                       */
#define CAN_CS_IDE_MASK                          (0x200000U)                                         /**< CAN0_CS.IDE Mask                        */
#define CAN_CS_IDE_SHIFT                         (21U)                                               /**< CAN0_CS.IDE Position                    */
#define CAN_CS_IDE(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_IDE_SHIFT))&CAN_CS_IDE_MASK) /**< CAN0_CS.IDE Field                       */
#define CAN_CS_SRR_MASK                          (0x400000U)                                         /**< CAN0_CS.SRR Mask                        */
#define CAN_CS_SRR_SHIFT                         (22U)                                               /**< CAN0_CS.SRR Position                    */
#define CAN_CS_SRR(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_CS_SRR_SHIFT))&CAN_CS_SRR_MASK) /**< CAN0_CS.SRR Field                       */
#define CAN_CS_IDHIT_MASK                        (0xFF000000U)                                       /**< CAN0_CS.IDHIT Mask                      */
#define CAN_CS_IDHIT_SHIFT                       (24U)                                               /**< CAN0_CS.IDHIT Position                  */
#define CAN_CS_IDHIT(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_CS_IDHIT_SHIFT))&CAN_CS_IDHIT_MASK) /**< CAN0_CS.IDHIT Field                     */
/** @} */

/** @name ID - FIFO Message Buffer ID Register */ /** @{ */
#define CAN_ID_EXT_MASK                          (0x1FFFFFFFU)                                       /**< CAN0_ID.EXT Mask                        */
#define CAN_ID_EXT_SHIFT                         (0U)                                                /**< CAN0_ID.EXT Position                    */
#define CAN_ID_EXT(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_ID_EXT_SHIFT))&CAN_ID_EXT_MASK) /**< CAN0_ID.EXT Field                       */
#define CAN_ID_STD_MASK                          (0x1FFC0000U)                                       /**< CAN0_ID.STD Mask                        */
#define CAN_ID_STD_SHIFT                         (18U)                                               /**< CAN0_ID.STD Position                    */
#define CAN_ID_STD(x)                            (((uint32_t)(((uint32_t)(x))<<CAN_ID_STD_SHIFT))&CAN_ID_STD_MASK) /**< CAN0_ID.STD Field                       */
#define CAN_ID_PRIO_MASK                         (0xE0000000U)                                       /**< CAN0_ID.PRIO Mask                       */
#define CAN_ID_PRIO_SHIFT                        (29U)                                               /**< CAN0_ID.PRIO Position                   */
#define CAN_ID_PRIO(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_ID_PRIO_SHIFT))&CAN_ID_PRIO_MASK) /**< CAN0_ID.PRIO Field                      */
/** @} */

/** @name WORD0 - FIFO Message Buffer WORD0 Register */ /** @{ */
#define CAN_WORD0_DATA_BYTE_3_MASK               (0xFFU)                                             /**< CAN0_WORD0.DATA_BYTE_3 Mask             */
#define CAN_WORD0_DATA_BYTE_3_SHIFT              (0U)                                                /**< CAN0_WORD0.DATA_BYTE_3 Position         */
#define CAN_WORD0_DATA_BYTE_3(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_3_SHIFT))&CAN_WORD0_DATA_BYTE_3_MASK) /**< CAN0_WORD0.DATA_BYTE_3 Field            */
#define CAN_WORD0_DATA_BYTE_2_MASK               (0xFF00U)                                           /**< CAN0_WORD0.DATA_BYTE_2 Mask             */
#define CAN_WORD0_DATA_BYTE_2_SHIFT              (8U)                                                /**< CAN0_WORD0.DATA_BYTE_2 Position         */
#define CAN_WORD0_DATA_BYTE_2(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_2_SHIFT))&CAN_WORD0_DATA_BYTE_2_MASK) /**< CAN0_WORD0.DATA_BYTE_2 Field            */
#define CAN_WORD0_DATA_BYTE_1_MASK               (0xFF0000U)                                         /**< CAN0_WORD0.DATA_BYTE_1 Mask             */
#define CAN_WORD0_DATA_BYTE_1_SHIFT              (16U)                                               /**< CAN0_WORD0.DATA_BYTE_1 Position         */
#define CAN_WORD0_DATA_BYTE_1(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_1_SHIFT))&CAN_WORD0_DATA_BYTE_1_MASK) /**< CAN0_WORD0.DATA_BYTE_1 Field            */
#define CAN_WORD0_DATA_BYTE_0_MASK               (0xFF000000U)                                       /**< CAN0_WORD0.DATA_BYTE_0 Mask             */
#define CAN_WORD0_DATA_BYTE_0_SHIFT              (24U)                                               /**< CAN0_WORD0.DATA_BYTE_0 Position         */
#define CAN_WORD0_DATA_BYTE_0(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD0_DATA_BYTE_0_SHIFT))&CAN_WORD0_DATA_BYTE_0_MASK) /**< CAN0_WORD0.DATA_BYTE_0 Field            */
/** @} */

/** @name WORD1 - FIFO Message Buffer WORD1 Register */ /** @{ */
#define CAN_WORD1_DATA_BYTE_7_MASK               (0xFFU)                                             /**< CAN0_WORD1.DATA_BYTE_7 Mask             */
#define CAN_WORD1_DATA_BYTE_7_SHIFT              (0U)                                                /**< CAN0_WORD1.DATA_BYTE_7 Position         */
#define CAN_WORD1_DATA_BYTE_7(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_7_SHIFT))&CAN_WORD1_DATA_BYTE_7_MASK) /**< CAN0_WORD1.DATA_BYTE_7 Field            */
#define CAN_WORD1_DATA_BYTE_6_MASK               (0xFF00U)                                           /**< CAN0_WORD1.DATA_BYTE_6 Mask             */
#define CAN_WORD1_DATA_BYTE_6_SHIFT              (8U)                                                /**< CAN0_WORD1.DATA_BYTE_6 Position         */
#define CAN_WORD1_DATA_BYTE_6(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_6_SHIFT))&CAN_WORD1_DATA_BYTE_6_MASK) /**< CAN0_WORD1.DATA_BYTE_6 Field            */
#define CAN_WORD1_DATA_BYTE_5_MASK               (0xFF0000U)                                         /**< CAN0_WORD1.DATA_BYTE_5 Mask             */
#define CAN_WORD1_DATA_BYTE_5_SHIFT              (16U)                                               /**< CAN0_WORD1.DATA_BYTE_5 Position         */
#define CAN_WORD1_DATA_BYTE_5(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_5_SHIFT))&CAN_WORD1_DATA_BYTE_5_MASK) /**< CAN0_WORD1.DATA_BYTE_5 Field            */
#define CAN_WORD1_DATA_BYTE_4_MASK               (0xFF000000U)                                       /**< CAN0_WORD1.DATA_BYTE_4 Mask             */
#define CAN_WORD1_DATA_BYTE_4_SHIFT              (24U)                                               /**< CAN0_WORD1.DATA_BYTE_4 Position         */
#define CAN_WORD1_DATA_BYTE_4(x)                 (((uint32_t)(((uint32_t)(x))<<CAN_WORD1_DATA_BYTE_4_SHIFT))&CAN_WORD1_DATA_BYTE_4_MASK) /**< CAN0_WORD1.DATA_BYTE_4 Field            */
/** @} */

/** @name FILTER_ID_A - FIFO Message Filter ID (format A) */ /** @{ */
#define CAN_FILTER_ID_A_RXIDA_EXT_MASK           (0x3FFFFFFEU)                                       /**< CAN0_FILTER_ID_A.RXIDA_EXT Mask         */
#define CAN_FILTER_ID_A_RXIDA_EXT_SHIFT          (1U)                                                /**< CAN0_FILTER_ID_A.RXIDA_EXT Position     */
#define CAN_FILTER_ID_A_RXIDA_EXT(x)             (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_RXIDA_EXT_SHIFT))&CAN_FILTER_ID_A_RXIDA_EXT_MASK) /**< CAN0_FILTER_ID_A.RXIDA_EXT Field        */
#define CAN_FILTER_ID_A_RXIDA_STD_MASK           (0x3FF80000U)                                       /**< CAN0_FILTER_ID_A.RXIDA_STD Mask         */
#define CAN_FILTER_ID_A_RXIDA_STD_SHIFT          (19U)                                               /**< CAN0_FILTER_ID_A.RXIDA_STD Position     */
#define CAN_FILTER_ID_A_RXIDA_STD(x)             (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_RXIDA_STD_SHIFT))&CAN_FILTER_ID_A_RXIDA_STD_MASK) /**< CAN0_FILTER_ID_A.RXIDA_STD Field        */
#define CAN_FILTER_ID_A_IDEA_MASK                (0x40000000U)                                       /**< CAN0_FILTER_ID_A.IDEA Mask              */
#define CAN_FILTER_ID_A_IDEA_SHIFT               (30U)                                               /**< CAN0_FILTER_ID_A.IDEA Position          */
#define CAN_FILTER_ID_A_IDEA(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_IDEA_SHIFT))&CAN_FILTER_ID_A_IDEA_MASK) /**< CAN0_FILTER_ID_A.IDEA Field             */
#define CAN_FILTER_ID_A_RTRA_MASK                (0x80000000U)                                       /**< CAN0_FILTER_ID_A.RTRA Mask              */
#define CAN_FILTER_ID_A_RTRA_SHIFT               (31U)                                               /**< CAN0_FILTER_ID_A.RTRA Position          */
#define CAN_FILTER_ID_A_RTRA(x)                  (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_A_RTRA_SHIFT))&CAN_FILTER_ID_A_RTRA_MASK) /**< CAN0_FILTER_ID_A.RTRA Field             */
/** @} */

/** @name FILTER_ID_B - FIFO Message Filter ID (format B) */ /** @{ */
#define CAN_FILTER_ID_B_RXIDB_EXT_1_MASK         (0x3FFFU)                                           /**< CAN0_FILTER_ID_B.RXIDB_EXT_1 Mask       */
#define CAN_FILTER_ID_B_RXIDB_EXT_1_SHIFT        (0U)                                                /**< CAN0_FILTER_ID_B.RXIDB_EXT_1 Position   */
#define CAN_FILTER_ID_B_RXIDB_EXT_1(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_EXT_1_SHIFT))&CAN_FILTER_ID_B_RXIDB_EXT_1_MASK) /**< CAN0_FILTER_ID_B.RXIDB_EXT_1 Field      */
#define CAN_FILTER_ID_B_RXIDB_STD_1_MASK         (0x3FF8U)                                           /**< CAN0_FILTER_ID_B.RXIDB_STD_1 Mask       */
#define CAN_FILTER_ID_B_RXIDB_STD_1_SHIFT        (3U)                                                /**< CAN0_FILTER_ID_B.RXIDB_STD_1 Position   */
#define CAN_FILTER_ID_B_RXIDB_STD_1(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_STD_1_SHIFT))&CAN_FILTER_ID_B_RXIDB_STD_1_MASK) /**< CAN0_FILTER_ID_B.RXIDB_STD_1 Field      */
#define CAN_FILTER_ID_B_IDEB_1_MASK              (0x4000U)                                           /**< CAN0_FILTER_ID_B.IDEB_1 Mask            */
#define CAN_FILTER_ID_B_IDEB_1_SHIFT             (14U)                                               /**< CAN0_FILTER_ID_B.IDEB_1 Position        */
#define CAN_FILTER_ID_B_IDEB_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_IDEB_1_SHIFT))&CAN_FILTER_ID_B_IDEB_1_MASK) /**< CAN0_FILTER_ID_B.IDEB_1 Field           */
#define CAN_FILTER_ID_B_RTRB_1_MASK              (0x8000U)                                           /**< CAN0_FILTER_ID_B.RTRB_1 Mask            */
#define CAN_FILTER_ID_B_RTRB_1_SHIFT             (15U)                                               /**< CAN0_FILTER_ID_B.RTRB_1 Position        */
#define CAN_FILTER_ID_B_RTRB_1(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RTRB_1_SHIFT))&CAN_FILTER_ID_B_RTRB_1_MASK) /**< CAN0_FILTER_ID_B.RTRB_1 Field           */
#define CAN_FILTER_ID_B_RXIDB_EXT_0_MASK         (0x3FFF0000U)                                       /**< CAN0_FILTER_ID_B.RXIDB_EXT_0 Mask       */
#define CAN_FILTER_ID_B_RXIDB_EXT_0_SHIFT        (16U)                                               /**< CAN0_FILTER_ID_B.RXIDB_EXT_0 Position   */
#define CAN_FILTER_ID_B_RXIDB_EXT_0(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_EXT_0_SHIFT))&CAN_FILTER_ID_B_RXIDB_EXT_0_MASK) /**< CAN0_FILTER_ID_B.RXIDB_EXT_0 Field      */
#define CAN_FILTER_ID_B_RXIDB_STD_0_MASK         (0x3FF80000U)                                       /**< CAN0_FILTER_ID_B.RXIDB_STD_0 Mask       */
#define CAN_FILTER_ID_B_RXIDB_STD_0_SHIFT        (19U)                                               /**< CAN0_FILTER_ID_B.RXIDB_STD_0 Position   */
#define CAN_FILTER_ID_B_RXIDB_STD_0(x)           (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RXIDB_STD_0_SHIFT))&CAN_FILTER_ID_B_RXIDB_STD_0_MASK) /**< CAN0_FILTER_ID_B.RXIDB_STD_0 Field      */
#define CAN_FILTER_ID_B_IDEB_0_MASK              (0x40000000U)                                       /**< CAN0_FILTER_ID_B.IDEB_0 Mask            */
#define CAN_FILTER_ID_B_IDEB_0_SHIFT             (30U)                                               /**< CAN0_FILTER_ID_B.IDEB_0 Position        */
#define CAN_FILTER_ID_B_IDEB_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_IDEB_0_SHIFT))&CAN_FILTER_ID_B_IDEB_0_MASK) /**< CAN0_FILTER_ID_B.IDEB_0 Field           */
#define CAN_FILTER_ID_B_RTRB_0_MASK              (0x80000000U)                                       /**< CAN0_FILTER_ID_B.RTRB_0 Mask            */
#define CAN_FILTER_ID_B_RTRB_0_SHIFT             (31U)                                               /**< CAN0_FILTER_ID_B.RTRB_0 Position        */
#define CAN_FILTER_ID_B_RTRB_0(x)                (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_B_RTRB_0_SHIFT))&CAN_FILTER_ID_B_RTRB_0_MASK) /**< CAN0_FILTER_ID_B.RTRB_0 Field           */
/** @} */

/** @name FILTER_ID_C - FIFO Message Filter ID (format C) */ /** @{ */
#define CAN_FILTER_ID_C_RXIDC_3_MASK             (0xFFU)                                             /**< CAN0_FILTER_ID_C.RXIDC_3 Mask           */
#define CAN_FILTER_ID_C_RXIDC_3_SHIFT            (0U)                                                /**< CAN0_FILTER_ID_C.RXIDC_3 Position       */
#define CAN_FILTER_ID_C_RXIDC_3(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_3_SHIFT))&CAN_FILTER_ID_C_RXIDC_3_MASK) /**< CAN0_FILTER_ID_C.RXIDC_3 Field          */
#define CAN_FILTER_ID_C_RXIDC_2_MASK             (0xFF00U)                                           /**< CAN0_FILTER_ID_C.RXIDC_2 Mask           */
#define CAN_FILTER_ID_C_RXIDC_2_SHIFT            (8U)                                                /**< CAN0_FILTER_ID_C.RXIDC_2 Position       */
#define CAN_FILTER_ID_C_RXIDC_2(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_2_SHIFT))&CAN_FILTER_ID_C_RXIDC_2_MASK) /**< CAN0_FILTER_ID_C.RXIDC_2 Field          */
#define CAN_FILTER_ID_C_RXIDC_1_MASK             (0xFF0000U)                                         /**< CAN0_FILTER_ID_C.RXIDC_1 Mask           */
#define CAN_FILTER_ID_C_RXIDC_1_SHIFT            (16U)                                               /**< CAN0_FILTER_ID_C.RXIDC_1 Position       */
#define CAN_FILTER_ID_C_RXIDC_1(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_1_SHIFT))&CAN_FILTER_ID_C_RXIDC_1_MASK) /**< CAN0_FILTER_ID_C.RXIDC_1 Field          */
#define CAN_FILTER_ID_C_RXIDC_0_MASK             (0xFF000000U)                                       /**< CAN0_FILTER_ID_C.RXIDC_0 Mask           */
#define CAN_FILTER_ID_C_RXIDC_0_SHIFT            (24U)                                               /**< CAN0_FILTER_ID_C.RXIDC_0 Position       */
#define CAN_FILTER_ID_C_RXIDC_0(x)               (((uint32_t)(((uint32_t)(x))<<CAN_FILTER_ID_C_RXIDC_0_SHIFT))&CAN_FILTER_ID_C_RXIDC_0_MASK) /**< CAN0_FILTER_ID_C.RXIDC_0 Field          */
/** @} */

/** @name CS - Message Buffer 0 CS Register */ /** @{ */
#define CAN_CS_CODE_MASK                         (0xF000000U)                                        /**< CAN0_CS.CODE Mask                       */
#define CAN_CS_CODE_SHIFT                        (24U)                                               /**< CAN0_CS.CODE Position                   */
#define CAN_CS_CODE(x)                           (((uint32_t)(((uint32_t)(x))<<CAN_CS_CODE_SHIFT))&CAN_CS_CODE_MASK) /**< CAN0_CS.CODE Field                      */
/** @} */

/** @name RXIMR - Rx Individual Mask */ /** @{ */
#define CAN_RXIMR_MI_MASK                        (0xFFFFFFFFU)                                       /**< CAN0_RXIMR.MI Mask                      */
#define CAN_RXIMR_MI_SHIFT                       (0U)                                                /**< CAN0_RXIMR.MI Position                  */
#define CAN_RXIMR_MI(x)                          (((uint32_t)(((uint32_t)(x))<<CAN_RXIMR_MI_SHIFT))&CAN_RXIMR_MI_MASK) /**< CAN0_RXIMR.MI Field                     */
/** @} */

/** @} */ /* End group CAN_Register_Masks_GROUP */


/* CAN0 - Peripheral instance base addresses */
#define CAN0_BasePtr                   0x40024000UL //!< Peripheral base address
#define CAN0                           ((CAN_Type *) CAN0_BasePtr) //!< Freescale base pointer
#define CAN0_BASE_PTR                  (CAN0) //!< Freescale style base pointer
#define CAN0_IRQS { CAN0_MessageBuffer_IRQn, CAN0_BusOff_IRQn, CAN0_Error_IRQn, CAN0_TxWarning_IRQn, CAN0_RxWarning_IRQn, CAN0_WakeUp_IRQn,  }


/** @} */ /* End group CAN_Peripheral_access_layer_GROUP */


/** @brief C Struct for CAN */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CAN_Peripheral_access_layer_GROUP CAN Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CAN1 (derived from CAN0)             ================ */
/* ================================================================================ */

/**
 * @brief Flex Controller Area Network module
 */

/* CAN1 - Peripheral instance base addresses */
#define CAN1_BasePtr                   0x400A4000UL //!< Peripheral base address
#define CAN1                           ((CAN_Type *) CAN1_BasePtr) //!< Freescale base pointer
#define CAN1_BASE_PTR                  (CAN1) //!< Freescale style base pointer
#define CAN1_IRQS { CAN1_MessageBuffer_IRQn, CAN1_BusOff_IRQn, CAN1_Error_IRQn, CAN1_TxWarning_IRQn, CAN1_RxWarning_IRQn, CAN1_WakeUp_IRQn,  }


/** @} */ /* End group CAN_Peripheral_access_layer_GROUP */


/** @brief C Struct for CAU */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CAU_Peripheral_access_layer_GROUP CAU Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CAU (file:CAU_0)                     ================ */
/* ================================================================================ */

/**
 * @brief Memory Mapped Cryptographic Acceleration Unit
 */
/**
 * @struct CAU_Type
 * @brief  C Struct allowing access to CAU registers
 */
typedef struct CAU_Type {
   __O  uint32_t  DIRECT[16];                   /**< 0000: Direct access register                                       */
        uint8_t   RESERVED_0[2048];             /**< 0040: 0x800 bytes                                                  */
   __O  uint32_t  LDR_CASR;                     /**< 0840: Status register - Load Register command                      */
   __O  uint32_t  LDR_CAA;                      /**< 0844: Accumulator register - Load Register command                 */
   __O  uint32_t  LDR_CA[9];                    /**< 0848: General Purpose Register  - Load Register command            */
        uint8_t   RESERVED_1[20];               /**< 086C: 0x14 bytes                                                   */
   __I  uint32_t  STR_CASR;                     /**< 0880: Status register  - Store Register command                    */
   __I  uint32_t  STR_CAA;                      /**< 0884: Accumulator register - Store Register command                */
   __I  uint32_t  STR_CA[9];                    /**< 0888: General Purpose Register  - Store Register command           */
        uint8_t   RESERVED_2[20];               /**< 08AC: 0x14 bytes                                                   */
   __O  uint32_t  ADR_CASR;                     /**< 08C0: Status register  - Add Register command                      */
   __O  uint32_t  ADR_CAA;                      /**< 08C4: Accumulator register - Add to register command               */
   __O  uint32_t  ADR_CA[9];                    /**< 08C8: General Purpose Register  - Add to register command          */
        uint8_t   RESERVED_3[20];               /**< 08EC: 0x14 bytes                                                   */
   __O  uint32_t  RADR_CASR;                    /**< 0900: Status register  - Reverse and Add to Register command       */
   __O  uint32_t  RADR_CAA;                     /**< 0904: Accumulator register - Reverse and Add to Register command   */
   __O  uint32_t  RADR_CA[9];                   /**< 0908: General Purpose Register  - Reverse and Add to Register command */
        uint8_t   RESERVED_4[84];               /**< 092C: 0x54 bytes                                                   */
   __O  uint32_t  XOR_CASR;                     /**< 0980: Status register  - Exclusive Or command                      */
   __O  uint32_t  XOR_CAA;                      /**< 0984: Accumulator register - Exclusive Or command                  */
   __O  uint32_t  XOR_CA[9];                    /**< 0988: General Purpose Register  - Exclusive Or command             */
        uint8_t   RESERVED_5[20];               /**< 09AC: 0x14 bytes                                                   */
   __O  uint32_t  ROTL_CASR;                    /**< 09C0: Status register  - Rotate Left command                       */
   __O  uint32_t  ROTL_CAA;                     /**< 09C4: Accumulator register - Rotate Left command                   */
   __O  uint32_t  ROTL_CA[9];                   /**< 09C8: General Purpose Register  - Rotate Left command              */
        uint8_t   RESERVED_6[276];              /**< 09EC: 0x114 bytes                                                  */
   __O  uint32_t  AESC_CASR;                    /**< 0B00: Status register  - AES Column Operation command              */
   __O  uint32_t  AESC_CAA;                     /**< 0B04: Accumulator register - AES Column Operation command          */
   __O  uint32_t  AESC_CA[9];                   /**< 0B08: General Purpose Register  - AES Column Operation command     */
        uint8_t   RESERVED_7[20];               /**< 0B2C: 0x14 bytes                                                   */
   __O  uint32_t  AESIC_CASR;                   /**< 0B40: Status register  - AES Inverse Column Operation command      */
   __O  uint32_t  AESIC_CAA;                    /**< 0B44: Accumulator register - AES Inverse Column Operation command  */
   __O  uint32_t  AESIC_CA[9];                  /**< 0B48: General Purpose Register  - AES Inverse Column Operation command */
} CAU_Type;


/** @brief Register Masks for CAU */

/* -------------------------------------------------------------------------------- */
/* -----------     'CAU' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup CAU_Register_Masks_GROUP CAU Register Masks */
/** @{ */

/** @name LDR_CASR - Status register - Load Register command */ /** @{ */
#define CAU_LDR_CASR_IC_MASK                     (0x1U)                                              /**< CAU_LDR_CASR.IC Mask                    */
#define CAU_LDR_CASR_IC_SHIFT                    (0U)                                                /**< CAU_LDR_CASR.IC Position                */
#define CAU_LDR_CASR_IC(x)                       (((uint32_t)(((uint32_t)(x))<<CAU_LDR_CASR_IC_SHIFT))&CAU_LDR_CASR_IC_MASK) /**< CAU_LDR_CASR.IC Field                   */
#define CAU_LDR_CASR_DPE_MASK                    (0x2U)                                              /**< CAU_LDR_CASR.DPE Mask                   */
#define CAU_LDR_CASR_DPE_SHIFT                   (1U)                                                /**< CAU_LDR_CASR.DPE Position               */
#define CAU_LDR_CASR_DPE(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_LDR_CASR_DPE_SHIFT))&CAU_LDR_CASR_DPE_MASK) /**< CAU_LDR_CASR.DPE Field                  */
#define CAU_LDR_CASR_VER_MASK                    (0xF0000000U)                                       /**< CAU_LDR_CASR.VER Mask                   */
#define CAU_LDR_CASR_VER_SHIFT                   (28U)                                               /**< CAU_LDR_CASR.VER Position               */
#define CAU_LDR_CASR_VER(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_LDR_CASR_VER_SHIFT))&CAU_LDR_CASR_VER_MASK) /**< CAU_LDR_CASR.VER Field                  */
/** @} */

/** @name STR_CASR - Status register  - Store Register command */ /** @{ */
#define CAU_STR_CASR_IC_MASK                     (0x1U)                                              /**< CAU_STR_CASR.IC Mask                    */
#define CAU_STR_CASR_IC_SHIFT                    (0U)                                                /**< CAU_STR_CASR.IC Position                */
#define CAU_STR_CASR_IC(x)                       (((uint32_t)(((uint32_t)(x))<<CAU_STR_CASR_IC_SHIFT))&CAU_STR_CASR_IC_MASK) /**< CAU_STR_CASR.IC Field                   */
#define CAU_STR_CASR_DPE_MASK                    (0x2U)                                              /**< CAU_STR_CASR.DPE Mask                   */
#define CAU_STR_CASR_DPE_SHIFT                   (1U)                                                /**< CAU_STR_CASR.DPE Position               */
#define CAU_STR_CASR_DPE(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_STR_CASR_DPE_SHIFT))&CAU_STR_CASR_DPE_MASK) /**< CAU_STR_CASR.DPE Field                  */
#define CAU_STR_CASR_VER_MASK                    (0xF0000000U)                                       /**< CAU_STR_CASR.VER Mask                   */
#define CAU_STR_CASR_VER_SHIFT                   (28U)                                               /**< CAU_STR_CASR.VER Position               */
#define CAU_STR_CASR_VER(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_STR_CASR_VER_SHIFT))&CAU_STR_CASR_VER_MASK) /**< CAU_STR_CASR.VER Field                  */
/** @} */

/** @name ADR_CASR - Status register  - Add Register command */ /** @{ */
#define CAU_ADR_CASR_IC_MASK                     (0x1U)                                              /**< CAU_ADR_CASR.IC Mask                    */
#define CAU_ADR_CASR_IC_SHIFT                    (0U)                                                /**< CAU_ADR_CASR.IC Position                */
#define CAU_ADR_CASR_IC(x)                       (((uint32_t)(((uint32_t)(x))<<CAU_ADR_CASR_IC_SHIFT))&CAU_ADR_CASR_IC_MASK) /**< CAU_ADR_CASR.IC Field                   */
#define CAU_ADR_CASR_DPE_MASK                    (0x2U)                                              /**< CAU_ADR_CASR.DPE Mask                   */
#define CAU_ADR_CASR_DPE_SHIFT                   (1U)                                                /**< CAU_ADR_CASR.DPE Position               */
#define CAU_ADR_CASR_DPE(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_ADR_CASR_DPE_SHIFT))&CAU_ADR_CASR_DPE_MASK) /**< CAU_ADR_CASR.DPE Field                  */
#define CAU_ADR_CASR_VER_MASK                    (0xF0000000U)                                       /**< CAU_ADR_CASR.VER Mask                   */
#define CAU_ADR_CASR_VER_SHIFT                   (28U)                                               /**< CAU_ADR_CASR.VER Position               */
#define CAU_ADR_CASR_VER(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_ADR_CASR_VER_SHIFT))&CAU_ADR_CASR_VER_MASK) /**< CAU_ADR_CASR.VER Field                  */
/** @} */

/** @name RADR_CASR - Status register  - Reverse and Add to Register command */ /** @{ */
#define CAU_RADR_CASR_IC_MASK                    (0x1U)                                              /**< CAU_RADR_CASR.IC Mask                   */
#define CAU_RADR_CASR_IC_SHIFT                   (0U)                                                /**< CAU_RADR_CASR.IC Position               */
#define CAU_RADR_CASR_IC(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_RADR_CASR_IC_SHIFT))&CAU_RADR_CASR_IC_MASK) /**< CAU_RADR_CASR.IC Field                  */
#define CAU_RADR_CASR_DPE_MASK                   (0x2U)                                              /**< CAU_RADR_CASR.DPE Mask                  */
#define CAU_RADR_CASR_DPE_SHIFT                  (1U)                                                /**< CAU_RADR_CASR.DPE Position              */
#define CAU_RADR_CASR_DPE(x)                     (((uint32_t)(((uint32_t)(x))<<CAU_RADR_CASR_DPE_SHIFT))&CAU_RADR_CASR_DPE_MASK) /**< CAU_RADR_CASR.DPE Field                 */
#define CAU_RADR_CASR_VER_MASK                   (0xF0000000U)                                       /**< CAU_RADR_CASR.VER Mask                  */
#define CAU_RADR_CASR_VER_SHIFT                  (28U)                                               /**< CAU_RADR_CASR.VER Position              */
#define CAU_RADR_CASR_VER(x)                     (((uint32_t)(((uint32_t)(x))<<CAU_RADR_CASR_VER_SHIFT))&CAU_RADR_CASR_VER_MASK) /**< CAU_RADR_CASR.VER Field                 */
/** @} */

/** @name XOR_CASR - Status register  - Exclusive Or command */ /** @{ */
#define CAU_XOR_CASR_IC_MASK                     (0x1U)                                              /**< CAU_XOR_CASR.IC Mask                    */
#define CAU_XOR_CASR_IC_SHIFT                    (0U)                                                /**< CAU_XOR_CASR.IC Position                */
#define CAU_XOR_CASR_IC(x)                       (((uint32_t)(((uint32_t)(x))<<CAU_XOR_CASR_IC_SHIFT))&CAU_XOR_CASR_IC_MASK) /**< CAU_XOR_CASR.IC Field                   */
#define CAU_XOR_CASR_DPE_MASK                    (0x2U)                                              /**< CAU_XOR_CASR.DPE Mask                   */
#define CAU_XOR_CASR_DPE_SHIFT                   (1U)                                                /**< CAU_XOR_CASR.DPE Position               */
#define CAU_XOR_CASR_DPE(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_XOR_CASR_DPE_SHIFT))&CAU_XOR_CASR_DPE_MASK) /**< CAU_XOR_CASR.DPE Field                  */
#define CAU_XOR_CASR_VER_MASK                    (0xF0000000U)                                       /**< CAU_XOR_CASR.VER Mask                   */
#define CAU_XOR_CASR_VER_SHIFT                   (28U)                                               /**< CAU_XOR_CASR.VER Position               */
#define CAU_XOR_CASR_VER(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_XOR_CASR_VER_SHIFT))&CAU_XOR_CASR_VER_MASK) /**< CAU_XOR_CASR.VER Field                  */
/** @} */

/** @name ROTL_CASR - Status register  - Rotate Left command */ /** @{ */
#define CAU_ROTL_CASR_IC_MASK                    (0x1U)                                              /**< CAU_ROTL_CASR.IC Mask                   */
#define CAU_ROTL_CASR_IC_SHIFT                   (0U)                                                /**< CAU_ROTL_CASR.IC Position               */
#define CAU_ROTL_CASR_IC(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_ROTL_CASR_IC_SHIFT))&CAU_ROTL_CASR_IC_MASK) /**< CAU_ROTL_CASR.IC Field                  */
#define CAU_ROTL_CASR_DPE_MASK                   (0x2U)                                              /**< CAU_ROTL_CASR.DPE Mask                  */
#define CAU_ROTL_CASR_DPE_SHIFT                  (1U)                                                /**< CAU_ROTL_CASR.DPE Position              */
#define CAU_ROTL_CASR_DPE(x)                     (((uint32_t)(((uint32_t)(x))<<CAU_ROTL_CASR_DPE_SHIFT))&CAU_ROTL_CASR_DPE_MASK) /**< CAU_ROTL_CASR.DPE Field                 */
#define CAU_ROTL_CASR_VER_MASK                   (0xF0000000U)                                       /**< CAU_ROTL_CASR.VER Mask                  */
#define CAU_ROTL_CASR_VER_SHIFT                  (28U)                                               /**< CAU_ROTL_CASR.VER Position              */
#define CAU_ROTL_CASR_VER(x)                     (((uint32_t)(((uint32_t)(x))<<CAU_ROTL_CASR_VER_SHIFT))&CAU_ROTL_CASR_VER_MASK) /**< CAU_ROTL_CASR.VER Field                 */
/** @} */

/** @name AESC_CASR - Status register  - AES Column Operation command */ /** @{ */
#define CAU_AESC_CASR_IC_MASK                    (0x1U)                                              /**< CAU_AESC_CASR.IC Mask                   */
#define CAU_AESC_CASR_IC_SHIFT                   (0U)                                                /**< CAU_AESC_CASR.IC Position               */
#define CAU_AESC_CASR_IC(x)                      (((uint32_t)(((uint32_t)(x))<<CAU_AESC_CASR_IC_SHIFT))&CAU_AESC_CASR_IC_MASK) /**< CAU_AESC_CASR.IC Field                  */
#define CAU_AESC_CASR_DPE_MASK                   (0x2U)                                              /**< CAU_AESC_CASR.DPE Mask                  */
#define CAU_AESC_CASR_DPE_SHIFT                  (1U)                                                /**< CAU_AESC_CASR.DPE Position              */
#define CAU_AESC_CASR_DPE(x)                     (((uint32_t)(((uint32_t)(x))<<CAU_AESC_CASR_DPE_SHIFT))&CAU_AESC_CASR_DPE_MASK) /**< CAU_AESC_CASR.DPE Field                 */
#define CAU_AESC_CASR_VER_MASK                   (0xF0000000U)                                       /**< CAU_AESC_CASR.VER Mask                  */
#define CAU_AESC_CASR_VER_SHIFT                  (28U)                                               /**< CAU_AESC_CASR.VER Position              */
#define CAU_AESC_CASR_VER(x)                     (((uint32_t)(((uint32_t)(x))<<CAU_AESC_CASR_VER_SHIFT))&CAU_AESC_CASR_VER_MASK) /**< CAU_AESC_CASR.VER Field                 */
/** @} */

/** @name AESIC_CASR - Status register  - AES Inverse Column Operation command */ /** @{ */
#define CAU_AESIC_CASR_IC_MASK                   (0x1U)                                              /**< CAU_AESIC_CASR.IC Mask                  */
#define CAU_AESIC_CASR_IC_SHIFT                  (0U)                                                /**< CAU_AESIC_CASR.IC Position              */
#define CAU_AESIC_CASR_IC(x)                     (((uint32_t)(((uint32_t)(x))<<CAU_AESIC_CASR_IC_SHIFT))&CAU_AESIC_CASR_IC_MASK) /**< CAU_AESIC_CASR.IC Field                 */
#define CAU_AESIC_CASR_DPE_MASK                  (0x2U)                                              /**< CAU_AESIC_CASR.DPE Mask                 */
#define CAU_AESIC_CASR_DPE_SHIFT                 (1U)                                                /**< CAU_AESIC_CASR.DPE Position             */
#define CAU_AESIC_CASR_DPE(x)                    (((uint32_t)(((uint32_t)(x))<<CAU_AESIC_CASR_DPE_SHIFT))&CAU_AESIC_CASR_DPE_MASK) /**< CAU_AESIC_CASR.DPE Field                */
#define CAU_AESIC_CASR_VER_MASK                  (0xF0000000U)                                       /**< CAU_AESIC_CASR.VER Mask                 */
#define CAU_AESIC_CASR_VER_SHIFT                 (28U)                                               /**< CAU_AESIC_CASR.VER Position             */
#define CAU_AESIC_CASR_VER(x)                    (((uint32_t)(((uint32_t)(x))<<CAU_AESIC_CASR_VER_SHIFT))&CAU_AESIC_CASR_VER_MASK) /**< CAU_AESIC_CASR.VER Field                */
/** @} */

/** @} */ /* End group CAU_Register_Masks_GROUP */


/* CAU - Peripheral instance base addresses */
#define CAU_BasePtr                    0xE0081000UL //!< Peripheral base address
#define CAU                            ((CAU_Type *) CAU_BasePtr) //!< Freescale base pointer
#define CAU_BASE_PTR                   (CAU) //!< Freescale style base pointer

/** @} */ /* End group CAU_Peripheral_access_layer_GROUP */


/** @brief C Struct for CMP */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CMP_Peripheral_access_layer_GROUP CMP Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CMP0 (file:CMP0_PSTM6)               ================ */
/* ================================================================================ */

/**
 * @brief Comparator, Voltage Ref, D-to-A Converter and Analog Mux
 */
/**
 * @struct CMP_Type
 * @brief  C Struct allowing access to CMP registers
 */
typedef struct CMP_Type {
   __IO uint8_t   CR0;                          /**< 0000: CMP Control Register 0                                       */
   __IO uint8_t   CR1;                          /**< 0001: CMP Control Register 1                                       */
   __IO uint8_t   FPR;                          /**< 0002: CMP Filter Period Register                                   */
   __IO uint8_t   SCR;                          /**< 0003: CMP Status and Control Register                              */
   __IO uint8_t   DACCR;                        /**< 0004: DAC Control Register                                         */
   __IO uint8_t   MUXCR;                        /**< 0005: MUX Control Register                                         */
} CMP_Type;


/** @brief Register Masks for CMP */

/* -------------------------------------------------------------------------------- */
/* -----------     'CMP0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup CMP_Register_Masks_GROUP CMP Register Masks */
/** @{ */

/** @name CR0 - CMP Control Register 0 */ /** @{ */
#define CMP_CR0_HYSTCTR_MASK                     (0x3U)                                              /**< CMP0_CR0.HYSTCTR Mask                   */
#define CMP_CR0_HYSTCTR_SHIFT                    (0U)                                                /**< CMP0_CR0.HYSTCTR Position               */
#define CMP_CR0_HYSTCTR(x)                       (((uint8_t)(((uint8_t)(x))<<CMP_CR0_HYSTCTR_SHIFT))&CMP_CR0_HYSTCTR_MASK) /**< CMP0_CR0.HYSTCTR Field                  */
#define CMP_CR0_FILTER_CNT_MASK                  (0x70U)                                             /**< CMP0_CR0.FILTER_CNT Mask                */
#define CMP_CR0_FILTER_CNT_SHIFT                 (4U)                                                /**< CMP0_CR0.FILTER_CNT Position            */
#define CMP_CR0_FILTER_CNT(x)                    (((uint8_t)(((uint8_t)(x))<<CMP_CR0_FILTER_CNT_SHIFT))&CMP_CR0_FILTER_CNT_MASK) /**< CMP0_CR0.FILTER_CNT Field               */
/** @} */

/** @name CR1 - CMP Control Register 1 */ /** @{ */
#define CMP_CR1_EN_MASK                          (0x1U)                                              /**< CMP0_CR1.EN Mask                        */
#define CMP_CR1_EN_SHIFT                         (0U)                                                /**< CMP0_CR1.EN Position                    */
#define CMP_CR1_EN(x)                            (((uint8_t)(((uint8_t)(x))<<CMP_CR1_EN_SHIFT))&CMP_CR1_EN_MASK) /**< CMP0_CR1.EN Field                       */
#define CMP_CR1_OPE_MASK                         (0x2U)                                              /**< CMP0_CR1.OPE Mask                       */
#define CMP_CR1_OPE_SHIFT                        (1U)                                                /**< CMP0_CR1.OPE Position                   */
#define CMP_CR1_OPE(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_CR1_OPE_SHIFT))&CMP_CR1_OPE_MASK) /**< CMP0_CR1.OPE Field                      */
#define CMP_CR1_COS_MASK                         (0x4U)                                              /**< CMP0_CR1.COS Mask                       */
#define CMP_CR1_COS_SHIFT                        (2U)                                                /**< CMP0_CR1.COS Position                   */
#define CMP_CR1_COS(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_CR1_COS_SHIFT))&CMP_CR1_COS_MASK) /**< CMP0_CR1.COS Field                      */
#define CMP_CR1_INV_MASK                         (0x8U)                                              /**< CMP0_CR1.INV Mask                       */
#define CMP_CR1_INV_SHIFT                        (3U)                                                /**< CMP0_CR1.INV Position                   */
#define CMP_CR1_INV(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_CR1_INV_SHIFT))&CMP_CR1_INV_MASK) /**< CMP0_CR1.INV Field                      */
#define CMP_CR1_PMODE_MASK                       (0x10U)                                             /**< CMP0_CR1.PMODE Mask                     */
#define CMP_CR1_PMODE_SHIFT                      (4U)                                                /**< CMP0_CR1.PMODE Position                 */
#define CMP_CR1_PMODE(x)                         (((uint8_t)(((uint8_t)(x))<<CMP_CR1_PMODE_SHIFT))&CMP_CR1_PMODE_MASK) /**< CMP0_CR1.PMODE Field                    */
#define CMP_CR1_WE_MASK                          (0x40U)                                             /**< CMP0_CR1.WE Mask                        */
#define CMP_CR1_WE_SHIFT                         (6U)                                                /**< CMP0_CR1.WE Position                    */
#define CMP_CR1_WE(x)                            (((uint8_t)(((uint8_t)(x))<<CMP_CR1_WE_SHIFT))&CMP_CR1_WE_MASK) /**< CMP0_CR1.WE Field                       */
#define CMP_CR1_SE_MASK                          (0x80U)                                             /**< CMP0_CR1.SE Mask                        */
#define CMP_CR1_SE_SHIFT                         (7U)                                                /**< CMP0_CR1.SE Position                    */
#define CMP_CR1_SE(x)                            (((uint8_t)(((uint8_t)(x))<<CMP_CR1_SE_SHIFT))&CMP_CR1_SE_MASK) /**< CMP0_CR1.SE Field                       */
/** @} */

/** @name FPR - CMP Filter Period Register */ /** @{ */
#define CMP_FPR_FILT_PER_MASK                    (0xFFU)                                             /**< CMP0_FPR.FILT_PER Mask                  */
#define CMP_FPR_FILT_PER_SHIFT                   (0U)                                                /**< CMP0_FPR.FILT_PER Position              */
#define CMP_FPR_FILT_PER(x)                      (((uint8_t)(((uint8_t)(x))<<CMP_FPR_FILT_PER_SHIFT))&CMP_FPR_FILT_PER_MASK) /**< CMP0_FPR.FILT_PER Field                 */
/** @} */

/** @name SCR - CMP Status and Control Register */ /** @{ */
#define CMP_SCR_COUT_MASK                        (0x1U)                                              /**< CMP0_SCR.COUT Mask                      */
#define CMP_SCR_COUT_SHIFT                       (0U)                                                /**< CMP0_SCR.COUT Position                  */
#define CMP_SCR_COUT(x)                          (((uint8_t)(((uint8_t)(x))<<CMP_SCR_COUT_SHIFT))&CMP_SCR_COUT_MASK) /**< CMP0_SCR.COUT Field                     */
#define CMP_SCR_CFF_MASK                         (0x2U)                                              /**< CMP0_SCR.CFF Mask                       */
#define CMP_SCR_CFF_SHIFT                        (1U)                                                /**< CMP0_SCR.CFF Position                   */
#define CMP_SCR_CFF(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_SCR_CFF_SHIFT))&CMP_SCR_CFF_MASK) /**< CMP0_SCR.CFF Field                      */
#define CMP_SCR_CFR_MASK                         (0x4U)                                              /**< CMP0_SCR.CFR Mask                       */
#define CMP_SCR_CFR_SHIFT                        (2U)                                                /**< CMP0_SCR.CFR Position                   */
#define CMP_SCR_CFR(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_SCR_CFR_SHIFT))&CMP_SCR_CFR_MASK) /**< CMP0_SCR.CFR Field                      */
#define CMP_SCR_IEF_MASK                         (0x8U)                                              /**< CMP0_SCR.IEF Mask                       */
#define CMP_SCR_IEF_SHIFT                        (3U)                                                /**< CMP0_SCR.IEF Position                   */
#define CMP_SCR_IEF(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_SCR_IEF_SHIFT))&CMP_SCR_IEF_MASK) /**< CMP0_SCR.IEF Field                      */
#define CMP_SCR_IER_MASK                         (0x10U)                                             /**< CMP0_SCR.IER Mask                       */
#define CMP_SCR_IER_SHIFT                        (4U)                                                /**< CMP0_SCR.IER Position                   */
#define CMP_SCR_IER(x)                           (((uint8_t)(((uint8_t)(x))<<CMP_SCR_IER_SHIFT))&CMP_SCR_IER_MASK) /**< CMP0_SCR.IER Field                      */
#define CMP_SCR_DMAEN_MASK                       (0x40U)                                             /**< CMP0_SCR.DMAEN Mask                     */
#define CMP_SCR_DMAEN_SHIFT                      (6U)                                                /**< CMP0_SCR.DMAEN Position                 */
#define CMP_SCR_DMAEN(x)                         (((uint8_t)(((uint8_t)(x))<<CMP_SCR_DMAEN_SHIFT))&CMP_SCR_DMAEN_MASK) /**< CMP0_SCR.DMAEN Field                    */
/** @} */

/** @name DACCR - DAC Control Register */ /** @{ */
#define CMP_DACCR_VOSEL_MASK                     (0x3FU)                                             /**< CMP0_DACCR.VOSEL Mask                   */
#define CMP_DACCR_VOSEL_SHIFT                    (0U)                                                /**< CMP0_DACCR.VOSEL Position               */
#define CMP_DACCR_VOSEL(x)                       (((uint8_t)(((uint8_t)(x))<<CMP_DACCR_VOSEL_SHIFT))&CMP_DACCR_VOSEL_MASK) /**< CMP0_DACCR.VOSEL Field                  */
#define CMP_DACCR_VRSEL_MASK                     (0x40U)                                             /**< CMP0_DACCR.VRSEL Mask                   */
#define CMP_DACCR_VRSEL_SHIFT                    (6U)                                                /**< CMP0_DACCR.VRSEL Position               */
#define CMP_DACCR_VRSEL(x)                       (((uint8_t)(((uint8_t)(x))<<CMP_DACCR_VRSEL_SHIFT))&CMP_DACCR_VRSEL_MASK) /**< CMP0_DACCR.VRSEL Field                  */
#define CMP_DACCR_DACEN_MASK                     (0x80U)                                             /**< CMP0_DACCR.DACEN Mask                   */
#define CMP_DACCR_DACEN_SHIFT                    (7U)                                                /**< CMP0_DACCR.DACEN Position               */
#define CMP_DACCR_DACEN(x)                       (((uint8_t)(((uint8_t)(x))<<CMP_DACCR_DACEN_SHIFT))&CMP_DACCR_DACEN_MASK) /**< CMP0_DACCR.DACEN Field                  */
/** @} */

/** @name MUXCR - MUX Control Register */ /** @{ */
#define CMP_MUXCR_MSEL_MASK                      (0x7U)                                              /**< CMP0_MUXCR.MSEL Mask                    */
#define CMP_MUXCR_MSEL_SHIFT                     (0U)                                                /**< CMP0_MUXCR.MSEL Position                */
#define CMP_MUXCR_MSEL(x)                        (((uint8_t)(((uint8_t)(x))<<CMP_MUXCR_MSEL_SHIFT))&CMP_MUXCR_MSEL_MASK) /**< CMP0_MUXCR.MSEL Field                   */
#define CMP_MUXCR_PSEL_MASK                      (0x38U)                                             /**< CMP0_MUXCR.PSEL Mask                    */
#define CMP_MUXCR_PSEL_SHIFT                     (3U)                                                /**< CMP0_MUXCR.PSEL Position                */
#define CMP_MUXCR_PSEL(x)                        (((uint8_t)(((uint8_t)(x))<<CMP_MUXCR_PSEL_SHIFT))&CMP_MUXCR_PSEL_MASK) /**< CMP0_MUXCR.PSEL Field                   */
#define CMP_MUXCR_PSTM_MASK                      (0x40U)                                             /**< CMP0_MUXCR.PSTM Mask                    */
#define CMP_MUXCR_PSTM_SHIFT                     (6U)                                                /**< CMP0_MUXCR.PSTM Position                */
#define CMP_MUXCR_PSTM(x)                        (((uint8_t)(((uint8_t)(x))<<CMP_MUXCR_PSTM_SHIFT))&CMP_MUXCR_PSTM_MASK) /**< CMP0_MUXCR.PSTM Field                   */
/** @} */

/** @} */ /* End group CMP_Register_Masks_GROUP */


/* CMP0 - Peripheral instance base addresses */
#define CMP0_BasePtr                   0x40073000UL //!< Peripheral base address
#define CMP0                           ((CMP_Type *) CMP0_BasePtr) //!< Freescale base pointer
#define CMP0_BASE_PTR                  (CMP0) //!< Freescale style base pointer
#define CMP0_IRQS { CMP0_IRQn,  }


/** @} */ /* End group CMP_Peripheral_access_layer_GROUP */


/** @brief C Struct for CMP */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CMP_Peripheral_access_layer_GROUP CMP Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CMP1 (derived from CMP0)             ================ */
/* ================================================================================ */

/**
 * @brief Comparator, Voltage Ref, D-to-A Converter and Analog Mux
 */

/* CMP1 - Peripheral instance base addresses */
#define CMP1_BasePtr                   0x40073008UL //!< Peripheral base address
#define CMP1                           ((CMP_Type *) CMP1_BasePtr) //!< Freescale base pointer
#define CMP1_BASE_PTR                  (CMP1) //!< Freescale style base pointer
#define CMP1_IRQS { CMP1_IRQn,  }


/** @} */ /* End group CMP_Peripheral_access_layer_GROUP */


/** @brief C Struct for CMP */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CMP_Peripheral_access_layer_GROUP CMP Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CMP2 (derived from CMP0)             ================ */
/* ================================================================================ */

/**
 * @brief Comparator, Voltage Ref, D-to-A Converter and Analog Mux
 */

/* CMP2 - Peripheral instance base addresses */
#define CMP2_BasePtr                   0x40073010UL //!< Peripheral base address
#define CMP2                           ((CMP_Type *) CMP2_BasePtr) //!< Freescale base pointer
#define CMP2_BASE_PTR                  (CMP2) //!< Freescale style base pointer
#define CMP2_IRQS { CMP2_IRQn,  }


/** @} */ /* End group CMP_Peripheral_access_layer_GROUP */


/** @brief C Struct for CMT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CMT_Peripheral_access_layer_GROUP CMT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CMT (file:CMT_0)                     ================ */
/* ================================================================================ */

/**
 * @brief Carrier Modulator Transmitter
 */
/**
 * @struct CMT_Type
 * @brief  C Struct allowing access to CMT registers
 */
typedef struct CMT_Type {
   __IO uint8_t   CGH1;                         /**< 0000: Carrier Generator High Data Register 1                       */
   __IO uint8_t   CGL1;                         /**< 0001: Carrier Generator Low Data Register 1                        */
   __IO uint8_t   CGH2;                         /**< 0002: Carrier Generator High Data Register 2                       */
   __IO uint8_t   CGL2;                         /**< 0003: Carrier Generator Low Data Register 2                        */
   __IO uint8_t   OC;                           /**< 0004: Output Control Register                                      */
   __IO uint8_t   MSC;                          /**< 0005: Modulator Status and Control Register                        */
   __IO uint8_t   CMD1;                         /**< 0006: Modulator Data Register Mark High                            */
   __IO uint8_t   CMD2;                         /**< 0007: Modulator Data Register Mark Low                             */
   __IO uint8_t   CMD3;                         /**< 0008: Modulator Data Register Space High                           */
   __IO uint8_t   CMD4;                         /**< 0009: Modulator Data Register Space Low                            */
   __IO uint8_t   PPS;                          /**< 000A: Primary Prescaler Register                                   */
   __IO uint8_t   DMA;                          /**< 000B: Direct Memory Access                                         */
} CMT_Type;


/** @brief Register Masks for CMT */

/* -------------------------------------------------------------------------------- */
/* -----------     'CMT' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup CMT_Register_Masks_GROUP CMT Register Masks */
/** @{ */

/** @name CGH1 - Carrier Generator High Data Register 1 */ /** @{ */
#define CMT_CGH1_PH_MASK                         (0xFFU)                                             /**< CMT_CGH1.PH Mask                        */
#define CMT_CGH1_PH_SHIFT                        (0U)                                                /**< CMT_CGH1.PH Position                    */
#define CMT_CGH1_PH(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_CGH1_PH_SHIFT))&CMT_CGH1_PH_MASK) /**< CMT_CGH1.PH Field                       */
/** @} */

/** @name CGL1 - Carrier Generator Low Data Register 1 */ /** @{ */
#define CMT_CGL1_PL_MASK                         (0xFFU)                                             /**< CMT_CGL1.PL Mask                        */
#define CMT_CGL1_PL_SHIFT                        (0U)                                                /**< CMT_CGL1.PL Position                    */
#define CMT_CGL1_PL(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_CGL1_PL_SHIFT))&CMT_CGL1_PL_MASK) /**< CMT_CGL1.PL Field                       */
/** @} */

/** @name CGH2 - Carrier Generator High Data Register 2 */ /** @{ */
#define CMT_CGH2_SH_MASK                         (0xFFU)                                             /**< CMT_CGH2.SH Mask                        */
#define CMT_CGH2_SH_SHIFT                        (0U)                                                /**< CMT_CGH2.SH Position                    */
#define CMT_CGH2_SH(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_CGH2_SH_SHIFT))&CMT_CGH2_SH_MASK) /**< CMT_CGH2.SH Field                       */
/** @} */

/** @name CGL2 - Carrier Generator Low Data Register 2 */ /** @{ */
#define CMT_CGL2_SL_MASK                         (0xFFU)                                             /**< CMT_CGL2.SL Mask                        */
#define CMT_CGL2_SL_SHIFT                        (0U)                                                /**< CMT_CGL2.SL Position                    */
#define CMT_CGL2_SL(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_CGL2_SL_SHIFT))&CMT_CGL2_SL_MASK) /**< CMT_CGL2.SL Field                       */
/** @} */

/** @name OC - Output Control Register */ /** @{ */
#define CMT_OC_IROPEN_MASK                       (0x20U)                                             /**< CMT_OC.IROPEN Mask                      */
#define CMT_OC_IROPEN_SHIFT                      (5U)                                                /**< CMT_OC.IROPEN Position                  */
#define CMT_OC_IROPEN(x)                         (((uint8_t)(((uint8_t)(x))<<CMT_OC_IROPEN_SHIFT))&CMT_OC_IROPEN_MASK) /**< CMT_OC.IROPEN Field                     */
#define CMT_OC_CMTPOL_MASK                       (0x40U)                                             /**< CMT_OC.CMTPOL Mask                      */
#define CMT_OC_CMTPOL_SHIFT                      (6U)                                                /**< CMT_OC.CMTPOL Position                  */
#define CMT_OC_CMTPOL(x)                         (((uint8_t)(((uint8_t)(x))<<CMT_OC_CMTPOL_SHIFT))&CMT_OC_CMTPOL_MASK) /**< CMT_OC.CMTPOL Field                     */
#define CMT_OC_IROL_MASK                         (0x80U)                                             /**< CMT_OC.IROL Mask                        */
#define CMT_OC_IROL_SHIFT                        (7U)                                                /**< CMT_OC.IROL Position                    */
#define CMT_OC_IROL(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_OC_IROL_SHIFT))&CMT_OC_IROL_MASK) /**< CMT_OC.IROL Field                       */
/** @} */

/** @name MSC - Modulator Status and Control Register */ /** @{ */
#define CMT_MSC_MCGEN_MASK                       (0x1U)                                              /**< CMT_MSC.MCGEN Mask                      */
#define CMT_MSC_MCGEN_SHIFT                      (0U)                                                /**< CMT_MSC.MCGEN Position                  */
#define CMT_MSC_MCGEN(x)                         (((uint8_t)(((uint8_t)(x))<<CMT_MSC_MCGEN_SHIFT))&CMT_MSC_MCGEN_MASK) /**< CMT_MSC.MCGEN Field                     */
#define CMT_MSC_EOCIE_MASK                       (0x2U)                                              /**< CMT_MSC.EOCIE Mask                      */
#define CMT_MSC_EOCIE_SHIFT                      (1U)                                                /**< CMT_MSC.EOCIE Position                  */
#define CMT_MSC_EOCIE(x)                         (((uint8_t)(((uint8_t)(x))<<CMT_MSC_EOCIE_SHIFT))&CMT_MSC_EOCIE_MASK) /**< CMT_MSC.EOCIE Field                     */
#define CMT_MSC_FSK_MASK                         (0x4U)                                              /**< CMT_MSC.FSK Mask                        */
#define CMT_MSC_FSK_SHIFT                        (2U)                                                /**< CMT_MSC.FSK Position                    */
#define CMT_MSC_FSK(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_MSC_FSK_SHIFT))&CMT_MSC_FSK_MASK) /**< CMT_MSC.FSK Field                       */
#define CMT_MSC_BASE_MASK                        (0x8U)                                              /**< CMT_MSC.BASE Mask                       */
#define CMT_MSC_BASE_SHIFT                       (3U)                                                /**< CMT_MSC.BASE Position                   */
#define CMT_MSC_BASE(x)                          (((uint8_t)(((uint8_t)(x))<<CMT_MSC_BASE_SHIFT))&CMT_MSC_BASE_MASK) /**< CMT_MSC.BASE Field                      */
#define CMT_MSC_EXSPC_MASK                       (0x10U)                                             /**< CMT_MSC.EXSPC Mask                      */
#define CMT_MSC_EXSPC_SHIFT                      (4U)                                                /**< CMT_MSC.EXSPC Position                  */
#define CMT_MSC_EXSPC(x)                         (((uint8_t)(((uint8_t)(x))<<CMT_MSC_EXSPC_SHIFT))&CMT_MSC_EXSPC_MASK) /**< CMT_MSC.EXSPC Field                     */
#define CMT_MSC_CMTDIV_MASK                      (0x60U)                                             /**< CMT_MSC.CMTDIV Mask                     */
#define CMT_MSC_CMTDIV_SHIFT                     (5U)                                                /**< CMT_MSC.CMTDIV Position                 */
#define CMT_MSC_CMTDIV(x)                        (((uint8_t)(((uint8_t)(x))<<CMT_MSC_CMTDIV_SHIFT))&CMT_MSC_CMTDIV_MASK) /**< CMT_MSC.CMTDIV Field                    */
#define CMT_MSC_EOCF_MASK                        (0x80U)                                             /**< CMT_MSC.EOCF Mask                       */
#define CMT_MSC_EOCF_SHIFT                       (7U)                                                /**< CMT_MSC.EOCF Position                   */
#define CMT_MSC_EOCF(x)                          (((uint8_t)(((uint8_t)(x))<<CMT_MSC_EOCF_SHIFT))&CMT_MSC_EOCF_MASK) /**< CMT_MSC.EOCF Field                      */
/** @} */

/** @name CMD1 - Modulator Data Register Mark High */ /** @{ */
#define CMT_CMD1_MB_MASK                         (0xFFU)                                             /**< CMT_CMD1.MB Mask                        */
#define CMT_CMD1_MB_SHIFT                        (0U)                                                /**< CMT_CMD1.MB Position                    */
#define CMT_CMD1_MB(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_CMD1_MB_SHIFT))&CMT_CMD1_MB_MASK) /**< CMT_CMD1.MB Field                       */
/** @} */

/** @name CMD2 - Modulator Data Register Mark Low */ /** @{ */
#define CMT_CMD2_MB_MASK                         (0xFFU)                                             /**< CMT_CMD2.MB Mask                        */
#define CMT_CMD2_MB_SHIFT                        (0U)                                                /**< CMT_CMD2.MB Position                    */
#define CMT_CMD2_MB(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_CMD2_MB_SHIFT))&CMT_CMD2_MB_MASK) /**< CMT_CMD2.MB Field                       */
/** @} */

/** @name CMD3 - Modulator Data Register Space High */ /** @{ */
#define CMT_CMD3_SB_MASK                         (0xFFU)                                             /**< CMT_CMD3.SB Mask                        */
#define CMT_CMD3_SB_SHIFT                        (0U)                                                /**< CMT_CMD3.SB Position                    */
#define CMT_CMD3_SB(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_CMD3_SB_SHIFT))&CMT_CMD3_SB_MASK) /**< CMT_CMD3.SB Field                       */
/** @} */

/** @name CMD4 - Modulator Data Register Space Low */ /** @{ */
#define CMT_CMD4_SB_MASK                         (0xFFU)                                             /**< CMT_CMD4.SB Mask                        */
#define CMT_CMD4_SB_SHIFT                        (0U)                                                /**< CMT_CMD4.SB Position                    */
#define CMT_CMD4_SB(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_CMD4_SB_SHIFT))&CMT_CMD4_SB_MASK) /**< CMT_CMD4.SB Field                       */
/** @} */

/** @name PPS - Primary Prescaler Register */ /** @{ */
#define CMT_PPS_PPSDIV_MASK                      (0xFU)                                              /**< CMT_PPS.PPSDIV Mask                     */
#define CMT_PPS_PPSDIV_SHIFT                     (0U)                                                /**< CMT_PPS.PPSDIV Position                 */
#define CMT_PPS_PPSDIV(x)                        (((uint8_t)(((uint8_t)(x))<<CMT_PPS_PPSDIV_SHIFT))&CMT_PPS_PPSDIV_MASK) /**< CMT_PPS.PPSDIV Field                    */
/** @} */

/** @name DMA - Direct Memory Access */ /** @{ */
#define CMT_DMA_DMA_MASK                         (0x1U)                                              /**< CMT_DMA.DMA Mask                        */
#define CMT_DMA_DMA_SHIFT                        (0U)                                                /**< CMT_DMA.DMA Position                    */
#define CMT_DMA_DMA(x)                           (((uint8_t)(((uint8_t)(x))<<CMT_DMA_DMA_SHIFT))&CMT_DMA_DMA_MASK) /**< CMT_DMA.DMA Field                       */
/** @} */

/** @} */ /* End group CMT_Register_Masks_GROUP */


/* CMT - Peripheral instance base addresses */
#define CMT_BasePtr                    0x40062000UL //!< Peripheral base address
#define CMT                            ((CMT_Type *) CMT_BasePtr) //!< Freescale base pointer
#define CMT_BASE_PTR                   (CMT) //!< Freescale style base pointer
#define CMT_IRQS { CMT_IRQn,  }


/** @} */ /* End group CMT_Peripheral_access_layer_GROUP */


/** @brief C Struct for CRC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup CRC_Peripheral_access_layer_GROUP CRC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           CRC0 (file:CRC0_0x40032000)          ================ */
/* ================================================================================ */

/**
 * @brief Cyclic Redundancy Check
 */
/**
 * @struct CRC_Type
 * @brief  C Struct allowing access to CRC registers
 */
typedef struct CRC_Type {
   union {                                      /**< 0000: (size=0004)                                                  */
      __IO uint32_t  DATA;                      /**< 0000: Data register                                                */
      struct {                                  /**< 0000: (size=0004)                                                  */
         union {                                /**< 0000: (size=0002)                                                  */
            __IO uint16_t  DATAL;               /**< 0000: DATAL register                                               */
            struct {                            /**< 0000: (size=0002)                                                  */
               __IO uint8_t   DATALL;           /**< 0000: DATALL register                                              */
               __IO uint8_t   DATALU;           /**< 0001: DATALU register                                              */
            };
         };
         union {                                /**< 0002: (size=0002)                                                  */
            __IO uint16_t  DATAH;               /**< 0002: DATAH register                                               */
            struct {                            /**< 0002: (size=0002)                                                  */
               __IO uint8_t   DATAHL;           /**< 0002: DATAHL register                                              */
               __IO uint8_t   DATAHU;           /**< 0003: DATAHU register                                              */
            };
         };
      };
   };
   union {                                      /**< 0004: (size=0004)                                                  */
      __IO uint32_t  GPOLY;                     /**< 0004: Polynomial register                                          */
      struct {                                  /**< 0004: (size=0004)                                                  */
         __IO uint16_t  GPOLYL;                 /**< 0004: GPOLYL register                                              */
         __IO uint16_t  GPOLYH;                 /**< 0006: GPOLYH register                                              */
      };
   };
   union {                                      /**< 0008: (size=0004)                                                  */
      __IO uint32_t  CTRL;                      /**< 0008: Control register                                             */
      struct {                                  /**< 0008: (size=0004)                                                  */
              uint8_t   RESERVED_4[3];          /**< 0008: 0x3 bytes                                                    */
         __IO uint8_t   CTRLHU;                 /**< 000B: Control register (byte access)                               */
      };
   };
} CRC_Type;


/** @brief Register Masks for CRC */

/* -------------------------------------------------------------------------------- */
/* -----------     'CRC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup CRC_Register_Masks_GROUP CRC Register Masks */
/** @{ */

/** @name DATA - Data register */ /** @{ */
#define CRC_DATA_LL_MASK                         (0xFFU)                                             /**< CRC0_DATA.LL Mask                       */
#define CRC_DATA_LL_SHIFT                        (0U)                                                /**< CRC0_DATA.LL Position                   */
#define CRC_DATA_LL(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_LL_SHIFT))&CRC_DATA_LL_MASK) /**< CRC0_DATA.LL Field                      */
#define CRC_DATA_LU_MASK                         (0xFF00U)                                           /**< CRC0_DATA.LU Mask                       */
#define CRC_DATA_LU_SHIFT                        (8U)                                                /**< CRC0_DATA.LU Position                   */
#define CRC_DATA_LU(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_LU_SHIFT))&CRC_DATA_LU_MASK) /**< CRC0_DATA.LU Field                      */
#define CRC_DATA_HL_MASK                         (0xFF0000U)                                         /**< CRC0_DATA.HL Mask                       */
#define CRC_DATA_HL_SHIFT                        (16U)                                               /**< CRC0_DATA.HL Position                   */
#define CRC_DATA_HL(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_HL_SHIFT))&CRC_DATA_HL_MASK) /**< CRC0_DATA.HL Field                      */
#define CRC_DATA_HU_MASK                         (0xFF000000U)                                       /**< CRC0_DATA.HU Mask                       */
#define CRC_DATA_HU_SHIFT                        (24U)                                               /**< CRC0_DATA.HU Position                   */
#define CRC_DATA_HU(x)                           (((uint32_t)(((uint32_t)(x))<<CRC_DATA_HU_SHIFT))&CRC_DATA_HU_MASK) /**< CRC0_DATA.HU Field                      */
/** @} */

/** @name DATAL - DATAL register */ /** @{ */
#define CRC_DATAL_DATAL_MASK                     (0xFFFFU)                                           /**< CRC0_DATAL.DATAL Mask                   */
#define CRC_DATAL_DATAL_SHIFT                    (0U)                                                /**< CRC0_DATAL.DATAL Position               */
#define CRC_DATAL_DATAL(x)                       (((uint16_t)(((uint16_t)(x))<<CRC_DATAL_DATAL_SHIFT))&CRC_DATAL_DATAL_MASK) /**< CRC0_DATAL.DATAL Field                  */
/** @} */

/** @name DATALL - DATALL register */ /** @{ */
#define CRC_DATALL_DATALL_MASK                   (0xFFU)                                             /**< CRC0_DATALL.DATALL Mask                 */
#define CRC_DATALL_DATALL_SHIFT                  (0U)                                                /**< CRC0_DATALL.DATALL Position             */
#define CRC_DATALL_DATALL(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATALL_DATALL_SHIFT))&CRC_DATALL_DATALL_MASK) /**< CRC0_DATALL.DATALL Field                */
/** @} */

/** @name DATALU - DATALU register */ /** @{ */
#define CRC_DATALU_DATALU_MASK                   (0xFFU)                                             /**< CRC0_DATALU.DATALU Mask                 */
#define CRC_DATALU_DATALU_SHIFT                  (0U)                                                /**< CRC0_DATALU.DATALU Position             */
#define CRC_DATALU_DATALU(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATALU_DATALU_SHIFT))&CRC_DATALU_DATALU_MASK) /**< CRC0_DATALU.DATALU Field                */
/** @} */

/** @name DATAH - DATAH register */ /** @{ */
#define CRC_DATAH_DATAH_MASK                     (0xFFFFU)                                           /**< CRC0_DATAH.DATAH Mask                   */
#define CRC_DATAH_DATAH_SHIFT                    (0U)                                                /**< CRC0_DATAH.DATAH Position               */
#define CRC_DATAH_DATAH(x)                       (((uint16_t)(((uint16_t)(x))<<CRC_DATAH_DATAH_SHIFT))&CRC_DATAH_DATAH_MASK) /**< CRC0_DATAH.DATAH Field                  */
/** @} */

/** @name DATAHL - DATAHL register */ /** @{ */
#define CRC_DATAHL_DATAHL_MASK                   (0xFFU)                                             /**< CRC0_DATAHL.DATAHL Mask                 */
#define CRC_DATAHL_DATAHL_SHIFT                  (0U)                                                /**< CRC0_DATAHL.DATAHL Position             */
#define CRC_DATAHL_DATAHL(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATAHL_DATAHL_SHIFT))&CRC_DATAHL_DATAHL_MASK) /**< CRC0_DATAHL.DATAHL Field                */
/** @} */

/** @name DATAHU - DATAHU register */ /** @{ */
#define CRC_DATAHU_DATAHU_MASK                   (0xFFU)                                             /**< CRC0_DATAHU.DATAHU Mask                 */
#define CRC_DATAHU_DATAHU_SHIFT                  (0U)                                                /**< CRC0_DATAHU.DATAHU Position             */
#define CRC_DATAHU_DATAHU(x)                     (((uint8_t)(((uint8_t)(x))<<CRC_DATAHU_DATAHU_SHIFT))&CRC_DATAHU_DATAHU_MASK) /**< CRC0_DATAHU.DATAHU Field                */
/** @} */

/** @name GPOLY - Polynomial register */ /** @{ */
#define CRC_GPOLY_LOW_MASK                       (0xFFFFU)                                           /**< CRC0_GPOLY.LOW Mask                     */
#define CRC_GPOLY_LOW_SHIFT                      (0U)                                                /**< CRC0_GPOLY.LOW Position                 */
#define CRC_GPOLY_LOW(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_GPOLY_LOW_SHIFT))&CRC_GPOLY_LOW_MASK) /**< CRC0_GPOLY.LOW Field                    */
#define CRC_GPOLY_HIGH_MASK                      (0xFFFF0000U)                                       /**< CRC0_GPOLY.HIGH Mask                    */
#define CRC_GPOLY_HIGH_SHIFT                     (16U)                                               /**< CRC0_GPOLY.HIGH Position                */
#define CRC_GPOLY_HIGH(x)                        (((uint32_t)(((uint32_t)(x))<<CRC_GPOLY_HIGH_SHIFT))&CRC_GPOLY_HIGH_MASK) /**< CRC0_GPOLY.HIGH Field                   */
/** @} */

/** @name GPOLYL - GPOLYL register */ /** @{ */
#define CRC_GPOLYL_GPOLYL_MASK                   (0xFFFFU)                                           /**< CRC0_GPOLYL.GPOLYL Mask                 */
#define CRC_GPOLYL_GPOLYL_SHIFT                  (0U)                                                /**< CRC0_GPOLYL.GPOLYL Position             */
#define CRC_GPOLYL_GPOLYL(x)                     (((uint16_t)(((uint16_t)(x))<<CRC_GPOLYL_GPOLYL_SHIFT))&CRC_GPOLYL_GPOLYL_MASK) /**< CRC0_GPOLYL.GPOLYL Field                */
/** @} */

/** @name GPOLYH - GPOLYH register */ /** @{ */
#define CRC_GPOLYH_GPOLYH_MASK                   (0xFFFFU)                                           /**< CRC0_GPOLYH.GPOLYH Mask                 */
#define CRC_GPOLYH_GPOLYH_SHIFT                  (0U)                                                /**< CRC0_GPOLYH.GPOLYH Position             */
#define CRC_GPOLYH_GPOLYH(x)                     (((uint16_t)(((uint16_t)(x))<<CRC_GPOLYH_GPOLYH_SHIFT))&CRC_GPOLYH_GPOLYH_MASK) /**< CRC0_GPOLYH.GPOLYH Field                */
/** @} */

/** @name CTRL - Control register */ /** @{ */
#define CRC_CTRL_TCRC_MASK                       (0x1000000U)                                        /**< CRC0_CTRL.TCRC Mask                     */
#define CRC_CTRL_TCRC_SHIFT                      (24U)                                               /**< CRC0_CTRL.TCRC Position                 */
#define CRC_CTRL_TCRC(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TCRC_SHIFT))&CRC_CTRL_TCRC_MASK) /**< CRC0_CTRL.TCRC Field                    */
#define CRC_CTRL_WAS_MASK                        (0x2000000U)                                        /**< CRC0_CTRL.WAS Mask                      */
#define CRC_CTRL_WAS_SHIFT                       (25U)                                               /**< CRC0_CTRL.WAS Position                  */
#define CRC_CTRL_WAS(x)                          (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_WAS_SHIFT))&CRC_CTRL_WAS_MASK) /**< CRC0_CTRL.WAS Field                     */
#define CRC_CTRL_FXOR_MASK                       (0x4000000U)                                        /**< CRC0_CTRL.FXOR Mask                     */
#define CRC_CTRL_FXOR_SHIFT                      (26U)                                               /**< CRC0_CTRL.FXOR Position                 */
#define CRC_CTRL_FXOR(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_FXOR_SHIFT))&CRC_CTRL_FXOR_MASK) /**< CRC0_CTRL.FXOR Field                    */
#define CRC_CTRL_TOTR_MASK                       (0x30000000U)                                       /**< CRC0_CTRL.TOTR Mask                     */
#define CRC_CTRL_TOTR_SHIFT                      (28U)                                               /**< CRC0_CTRL.TOTR Position                 */
#define CRC_CTRL_TOTR(x)                         (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TOTR_SHIFT))&CRC_CTRL_TOTR_MASK) /**< CRC0_CTRL.TOTR Field                    */
#define CRC_CTRL_TOT_MASK                        (0xC0000000U)                                       /**< CRC0_CTRL.TOT Mask                      */
#define CRC_CTRL_TOT_SHIFT                       (30U)                                               /**< CRC0_CTRL.TOT Position                  */
#define CRC_CTRL_TOT(x)                          (((uint32_t)(((uint32_t)(x))<<CRC_CTRL_TOT_SHIFT))&CRC_CTRL_TOT_MASK) /**< CRC0_CTRL.TOT Field                     */
/** @} */

/** @name CTRLHU - Control register (byte access) */ /** @{ */
#define CRC_CTRLHU_TCRC_MASK                     (0x1U)                                              /**< CRC0_CTRLHU.TCRC Mask                   */
#define CRC_CTRLHU_TCRC_SHIFT                    (0U)                                                /**< CRC0_CTRLHU.TCRC Position               */
#define CRC_CTRLHU_TCRC(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TCRC_SHIFT))&CRC_CTRLHU_TCRC_MASK) /**< CRC0_CTRLHU.TCRC Field                  */
#define CRC_CTRLHU_WAS_MASK                      (0x2U)                                              /**< CRC0_CTRLHU.WAS Mask                    */
#define CRC_CTRLHU_WAS_SHIFT                     (1U)                                                /**< CRC0_CTRLHU.WAS Position                */
#define CRC_CTRLHU_WAS(x)                        (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_WAS_SHIFT))&CRC_CTRLHU_WAS_MASK) /**< CRC0_CTRLHU.WAS Field                   */
#define CRC_CTRLHU_FXOR_MASK                     (0x4U)                                              /**< CRC0_CTRLHU.FXOR Mask                   */
#define CRC_CTRLHU_FXOR_SHIFT                    (2U)                                                /**< CRC0_CTRLHU.FXOR Position               */
#define CRC_CTRLHU_FXOR(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_FXOR_SHIFT))&CRC_CTRLHU_FXOR_MASK) /**< CRC0_CTRLHU.FXOR Field                  */
#define CRC_CTRLHU_TOTR_MASK                     (0x30U)                                             /**< CRC0_CTRLHU.TOTR Mask                   */
#define CRC_CTRLHU_TOTR_SHIFT                    (4U)                                                /**< CRC0_CTRLHU.TOTR Position               */
#define CRC_CTRLHU_TOTR(x)                       (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TOTR_SHIFT))&CRC_CTRLHU_TOTR_MASK) /**< CRC0_CTRLHU.TOTR Field                  */
#define CRC_CTRLHU_TOT_MASK                      (0xC0U)                                             /**< CRC0_CTRLHU.TOT Mask                    */
#define CRC_CTRLHU_TOT_SHIFT                     (6U)                                                /**< CRC0_CTRLHU.TOT Position                */
#define CRC_CTRLHU_TOT(x)                        (((uint8_t)(((uint8_t)(x))<<CRC_CTRLHU_TOT_SHIFT))&CRC_CTRLHU_TOT_MASK) /**< CRC0_CTRLHU.TOT Field                   */
/** @} */

/** @} */ /* End group CRC_Register_Masks_GROUP */


/* CRC0 - Peripheral instance base addresses */
#define CRC0_BasePtr                   0x40032000UL //!< Peripheral base address
#define CRC0                           ((CRC_Type *) CRC0_BasePtr) //!< Freescale base pointer
#define CRC0_BASE_PTR                  (CRC0) //!< Freescale style base pointer

/** @} */ /* End group CRC_Peripheral_access_layer_GROUP */


/** @brief C Struct for DAC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup DAC_Peripheral_access_layer_GROUP DAC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           DAC0 (file:DAC0_16DAT_FIFO16_0x400CC000)       ================ */
/* ================================================================================ */

/**
 * @brief 12-Bit Digital-to-Analog Converter
 */
#define DAC_DAT_COUNT        16         /**< Number of Data registers                           */
/**
 * @struct DAC_Type
 * @brief  C Struct allowing access to DAC registers
 */
typedef struct DAC_Type {
   union {                                      /**< 0000: (size=0020)                                                  */
      struct {
         __IO uint8_t   DATL;                   /**< 0000: Data Low Register                                            */
         __IO uint8_t   DATH;                   /**< 0001: Data High Register                                           */
      } DAT[DAC_DAT_COUNT];                     /**< 0000: (cluster: size=0x0020, 32)                                   */
      __IO uint16_t  DATA[DAC_DAT_COUNT];       /**< 0000: Data Register                                                */
   };
   __IO uint8_t   SR;                           /**< 0020: Status Register                                              */
   __IO uint8_t   C0;                           /**< 0021: Control Register 0                                           */
   __IO uint8_t   C1;                           /**< 0022: Control Register 1                                           */
   __IO uint8_t   C2;                           /**< 0023: Control Register 2                                           */
} DAC_Type;


/** @brief Register Masks for DAC */

/* -------------------------------------------------------------------------------- */
/* -----------     'DAC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup DAC_Register_Masks_GROUP DAC Register Masks */
/** @{ */

/** @name DATL - Data Low Register */ /** @{ */
#define DAC_DATL_DATA_MASK                       (0xFFU)                                             /**< DAC0_DATL.DATA Mask                     */
#define DAC_DATL_DATA_SHIFT                      (0U)                                                /**< DAC0_DATL.DATA Position                 */
#define DAC_DATL_DATA(x)                         (((uint8_t)(((uint8_t)(x))<<DAC_DATL_DATA_SHIFT))&DAC_DATL_DATA_MASK) /**< DAC0_DATL.DATA Field                    */
/** @} */

/** @name DATH - Data High Register */ /** @{ */
#define DAC_DATH_DATA_MASK                       (0xFU)                                              /**< DAC0_DATH.DATA Mask                     */
#define DAC_DATH_DATA_SHIFT                      (0U)                                                /**< DAC0_DATH.DATA Position                 */
#define DAC_DATH_DATA(x)                         (((uint8_t)(((uint8_t)(x))<<DAC_DATH_DATA_SHIFT))&DAC_DATH_DATA_MASK) /**< DAC0_DATH.DATA Field                    */
/** @} */

/** @name DATA - Data Register */ /** @{ */
#define DAC_DATA_DATA_MASK                       (0xFFFU)                                            /**< DAC0_DATA.DATA Mask                     */
#define DAC_DATA_DATA_SHIFT                      (0U)                                                /**< DAC0_DATA.DATA Position                 */
#define DAC_DATA_DATA(x)                         (((uint16_t)(((uint16_t)(x))<<DAC_DATA_DATA_SHIFT))&DAC_DATA_DATA_MASK) /**< DAC0_DATA.DATA Field                    */
/** @} */

/** @name SR - Status Register */ /** @{ */
#define DAC_SR_DACBFRPBF_MASK                    (0x1U)                                              /**< DAC0_SR.DACBFRPBF Mask                  */
#define DAC_SR_DACBFRPBF_SHIFT                   (0U)                                                /**< DAC0_SR.DACBFRPBF Position              */
#define DAC_SR_DACBFRPBF(x)                      (((uint8_t)(((uint8_t)(x))<<DAC_SR_DACBFRPBF_SHIFT))&DAC_SR_DACBFRPBF_MASK) /**< DAC0_SR.DACBFRPBF Field                 */
#define DAC_SR_DACBFRPTF_MASK                    (0x2U)                                              /**< DAC0_SR.DACBFRPTF Mask                  */
#define DAC_SR_DACBFRPTF_SHIFT                   (1U)                                                /**< DAC0_SR.DACBFRPTF Position              */
#define DAC_SR_DACBFRPTF(x)                      (((uint8_t)(((uint8_t)(x))<<DAC_SR_DACBFRPTF_SHIFT))&DAC_SR_DACBFRPTF_MASK) /**< DAC0_SR.DACBFRPTF Field                 */
#define DAC_SR_DACBFWMF_MASK                     (0x4U)                                              /**< DAC0_SR.DACBFWMF Mask                   */
#define DAC_SR_DACBFWMF_SHIFT                    (2U)                                                /**< DAC0_SR.DACBFWMF Position               */
#define DAC_SR_DACBFWMF(x)                       (((uint8_t)(((uint8_t)(x))<<DAC_SR_DACBFWMF_SHIFT))&DAC_SR_DACBFWMF_MASK) /**< DAC0_SR.DACBFWMF Field                  */
/** @} */

/** @name C0 - Control Register 0 */ /** @{ */
#define DAC_C0_DACBBIEN_MASK                     (0x1U)                                              /**< DAC0_C0.DACBBIEN Mask                   */
#define DAC_C0_DACBBIEN_SHIFT                    (0U)                                                /**< DAC0_C0.DACBBIEN Position               */
#define DAC_C0_DACBBIEN(x)                       (((uint8_t)(((uint8_t)(x))<<DAC_C0_DACBBIEN_SHIFT))&DAC_C0_DACBBIEN_MASK) /**< DAC0_C0.DACBBIEN Field                  */
#define DAC_C0_DACBTIEN_MASK                     (0x2U)                                              /**< DAC0_C0.DACBTIEN Mask                   */
#define DAC_C0_DACBTIEN_SHIFT                    (1U)                                                /**< DAC0_C0.DACBTIEN Position               */
#define DAC_C0_DACBTIEN(x)                       (((uint8_t)(((uint8_t)(x))<<DAC_C0_DACBTIEN_SHIFT))&DAC_C0_DACBTIEN_MASK) /**< DAC0_C0.DACBTIEN Field                  */
#define DAC_C0_DACBWIEN_MASK                     (0x4U)                                              /**< DAC0_C0.DACBWIEN Mask                   */
#define DAC_C0_DACBWIEN_SHIFT                    (2U)                                                /**< DAC0_C0.DACBWIEN Position               */
#define DAC_C0_DACBWIEN(x)                       (((uint8_t)(((uint8_t)(x))<<DAC_C0_DACBWIEN_SHIFT))&DAC_C0_DACBWIEN_MASK) /**< DAC0_C0.DACBWIEN Field                  */
#define DAC_C0_LPEN_MASK                         (0x8U)                                              /**< DAC0_C0.LPEN Mask                       */
#define DAC_C0_LPEN_SHIFT                        (3U)                                                /**< DAC0_C0.LPEN Position                   */
#define DAC_C0_LPEN(x)                           (((uint8_t)(((uint8_t)(x))<<DAC_C0_LPEN_SHIFT))&DAC_C0_LPEN_MASK) /**< DAC0_C0.LPEN Field                      */
#define DAC_C0_DACSWTRG_MASK                     (0x10U)                                             /**< DAC0_C0.DACSWTRG Mask                   */
#define DAC_C0_DACSWTRG_SHIFT                    (4U)                                                /**< DAC0_C0.DACSWTRG Position               */
#define DAC_C0_DACSWTRG(x)                       (((uint8_t)(((uint8_t)(x))<<DAC_C0_DACSWTRG_SHIFT))&DAC_C0_DACSWTRG_MASK) /**< DAC0_C0.DACSWTRG Field                  */
#define DAC_C0_DACTRGSEL_MASK                    (0x20U)                                             /**< DAC0_C0.DACTRGSEL Mask                  */
#define DAC_C0_DACTRGSEL_SHIFT                   (5U)                                                /**< DAC0_C0.DACTRGSEL Position              */
#define DAC_C0_DACTRGSEL(x)                      (((uint8_t)(((uint8_t)(x))<<DAC_C0_DACTRGSEL_SHIFT))&DAC_C0_DACTRGSEL_MASK) /**< DAC0_C0.DACTRGSEL Field                 */
#define DAC_C0_DACRFS_MASK                       (0x40U)                                             /**< DAC0_C0.DACRFS Mask                     */
#define DAC_C0_DACRFS_SHIFT                      (6U)                                                /**< DAC0_C0.DACRFS Position                 */
#define DAC_C0_DACRFS(x)                         (((uint8_t)(((uint8_t)(x))<<DAC_C0_DACRFS_SHIFT))&DAC_C0_DACRFS_MASK) /**< DAC0_C0.DACRFS Field                    */
#define DAC_C0_DACEN_MASK                        (0x80U)                                             /**< DAC0_C0.DACEN Mask                      */
#define DAC_C0_DACEN_SHIFT                       (7U)                                                /**< DAC0_C0.DACEN Position                  */
#define DAC_C0_DACEN(x)                          (((uint8_t)(((uint8_t)(x))<<DAC_C0_DACEN_SHIFT))&DAC_C0_DACEN_MASK) /**< DAC0_C0.DACEN Field                     */
/** @} */

/** @name C1 - Control Register 1 */ /** @{ */
#define DAC_C1_DACBFEN_MASK                      (0x1U)                                              /**< DAC0_C1.DACBFEN Mask                    */
#define DAC_C1_DACBFEN_SHIFT                     (0U)                                                /**< DAC0_C1.DACBFEN Position                */
#define DAC_C1_DACBFEN(x)                        (((uint8_t)(((uint8_t)(x))<<DAC_C1_DACBFEN_SHIFT))&DAC_C1_DACBFEN_MASK) /**< DAC0_C1.DACBFEN Field                   */
#define DAC_C1_DACBFMD_MASK                      (0x6U)                                              /**< DAC0_C1.DACBFMD Mask                    */
#define DAC_C1_DACBFMD_SHIFT                     (1U)                                                /**< DAC0_C1.DACBFMD Position                */
#define DAC_C1_DACBFMD(x)                        (((uint8_t)(((uint8_t)(x))<<DAC_C1_DACBFMD_SHIFT))&DAC_C1_DACBFMD_MASK) /**< DAC0_C1.DACBFMD Field                   */
#define DAC_C1_DACBFWM_MASK                      (0x18U)                                             /**< DAC0_C1.DACBFWM Mask                    */
#define DAC_C1_DACBFWM_SHIFT                     (3U)                                                /**< DAC0_C1.DACBFWM Position                */
#define DAC_C1_DACBFWM(x)                        (((uint8_t)(((uint8_t)(x))<<DAC_C1_DACBFWM_SHIFT))&DAC_C1_DACBFWM_MASK) /**< DAC0_C1.DACBFWM Field                   */
#define DAC_C1_DMAEN_MASK                        (0x80U)                                             /**< DAC0_C1.DMAEN Mask                      */
#define DAC_C1_DMAEN_SHIFT                       (7U)                                                /**< DAC0_C1.DMAEN Position                  */
#define DAC_C1_DMAEN(x)                          (((uint8_t)(((uint8_t)(x))<<DAC_C1_DMAEN_SHIFT))&DAC_C1_DMAEN_MASK) /**< DAC0_C1.DMAEN Field                     */
/** @} */

/** @name C2 - Control Register 2 */ /** @{ */
#define DAC_C2_DACBFUP_MASK                      (0xFU)                                              /**< DAC0_C2.DACBFUP Mask                    */
#define DAC_C2_DACBFUP_SHIFT                     (0U)                                                /**< DAC0_C2.DACBFUP Position                */
#define DAC_C2_DACBFUP(x)                        (((uint8_t)(((uint8_t)(x))<<DAC_C2_DACBFUP_SHIFT))&DAC_C2_DACBFUP_MASK) /**< DAC0_C2.DACBFUP Field                   */
#define DAC_C2_DACBFRP_MASK                      (0xF0U)                                             /**< DAC0_C2.DACBFRP Mask                    */
#define DAC_C2_DACBFRP_SHIFT                     (4U)                                                /**< DAC0_C2.DACBFRP Position                */
#define DAC_C2_DACBFRP(x)                        (((uint8_t)(((uint8_t)(x))<<DAC_C2_DACBFRP_SHIFT))&DAC_C2_DACBFRP_MASK) /**< DAC0_C2.DACBFRP Field                   */
/** @} */

/** @} */ /* End group DAC_Register_Masks_GROUP */


/* DAC0 - Peripheral instance base addresses */
#define DAC0_BasePtr                   0x400CC000UL //!< Peripheral base address
#define DAC0                           ((DAC_Type *) DAC0_BasePtr) //!< Freescale base pointer
#define DAC0_BASE_PTR                  (DAC0) //!< Freescale style base pointer
#define DAC0_IRQS { DAC0_IRQn,  }


/** @} */ /* End group DAC_Peripheral_access_layer_GROUP */


/** @brief C Struct for DAC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup DAC_Peripheral_access_layer_GROUP DAC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           DAC1 (derived from DAC0)             ================ */
/* ================================================================================ */

/**
 * @brief 12-Bit Digital-to-Analog Converter
 */

/* DAC1 - Peripheral instance base addresses */
#define DAC1_BasePtr                   0x400CD000UL //!< Peripheral base address
#define DAC1                           ((DAC_Type *) DAC1_BasePtr) //!< Freescale base pointer
#define DAC1_BASE_PTR                  (DAC1) //!< Freescale style base pointer
#define DAC1_IRQS { DAC1_IRQn,  }


/** @} */ /* End group DAC_Peripheral_access_layer_GROUP */


/** @brief C Struct for DMA0 */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup DMA0_Peripheral_access_layer_GROUP DMA0 Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           DMA0 (file:DMA0_16CH)                ================ */
/* ================================================================================ */

/**
 * @brief Enhanced direct memory access controller
 */
/**
 * @struct DMA_Type
 * @brief  C Struct allowing access to DMA0 registers
 */
typedef struct DMA_Type {
   __IO uint32_t  CR;                           /**< 0000: Control Register                                             */
   __I  uint32_t  ES;                           /**< 0004: Error Status Register                                        */
        uint8_t   RESERVED_0[4];                /**< 0008: 0x4 bytes                                                    */
   __IO uint32_t  ERQ;                          /**< 000C: Enable Request Register                                      */
        uint8_t   RESERVED_1[4];                /**< 0010: 0x4 bytes                                                    */
   __IO uint32_t  EEI;                          /**< 0014: Enable Error Interrupt Register                              */
   __O  uint8_t   CEEI;                         /**< 0018: Clear Enable Error Interrupt Register                        */
   __O  uint8_t   SEEI;                         /**< 0019: Set Enable Error Interrupt Register                          */
   __O  uint8_t   CERQ;                         /**< 001A: Clear Enable Request Register                                */
   __O  uint8_t   SERQ;                         /**< 001B: Set Enable Request Register                                  */
   __O  uint8_t   CDNE;                         /**< 001C: Clear DONE Status Bit Register                               */
   __O  uint8_t   SSRT;                         /**< 001D: Set START Bit Register                                       */
   __O  uint8_t   CERR;                         /**< 001E: Clear Error Register                                         */
   __O  uint8_t   CINT;                         /**< 001F: Clear Interrupt Request Register                             */
        uint8_t   RESERVED_2[4];                /**< 0020: 0x4 bytes                                                    */
   __IO uint32_t  INT;                          /**< 0024: Interrupt Request Register                                   */
        uint8_t   RESERVED_3[4];                /**< 0028: 0x4 bytes                                                    */
   __IO uint32_t  ERR;                          /**< 002C: Error Register                                               */
        uint8_t   RESERVED_4[4];                /**< 0030: 0x4 bytes                                                    */
   __I  uint32_t  HRS;                          /**< 0034: Hardware Request Status Register                             */
        uint8_t   RESERVED_5[200];              /**< 0038: 0xC8 bytes                                                   */
   union {                                      /**< 0100: (size=0010)                                                  */
      struct {                                  /**< 0100: (size=0010)                                                  */
      __IO uint8_t   DCHPRI3;                   /**< 0100: Channel 3 Priority Register                                  */
      __IO uint8_t   DCHPRI2;                   /**< 0101: Channel 2 Priority Register                                  */
      __IO uint8_t   DCHPRI1;                   /**< 0102: Channel 1 Priority Register                                  */
      __IO uint8_t   DCHPRI0;                   /**< 0103: Channel 0 Priority Register                                  */
      __IO uint8_t   DCHPRI7;                   /**< 0104: Channel 7 Priority Register                                  */
      __IO uint8_t   DCHPRI6;                   /**< 0105: Channel 6 Priority Register                                  */
      __IO uint8_t   DCHPRI5;                   /**< 0106: Channel 5 Priority Register                                  */
      __IO uint8_t   DCHPRI4;                   /**< 0107: Channel 4 Priority Register                                  */
      __IO uint8_t   DCHPRI11;                  /**< 0108: Channel 11 Priority Register                                 */
      __IO uint8_t   DCHPRI10;                  /**< 0109: Channel 10 Priority Register                                 */
      __IO uint8_t   DCHPRI9;                   /**< 010A: Channel 9 Priority Register                                  */
      __IO uint8_t   DCHPRI8;                   /**< 010B: Channel 8 Priority Register                                  */
      __IO uint8_t   DCHPRI15;                  /**< 010C: Channel 15 Priority Register                                 */
      __IO uint8_t   DCHPRI14;                  /**< 010D: Channel 14 Priority Register                                 */
      __IO uint8_t   DCHPRI13;                  /**< 010E: Channel 13 Priority Register                                 */
      __IO uint8_t   DCHPRI12;                  /**< 010F: Channel 12 Priority Register                                 */
      };
      __IO uint8_t   DCHPRI[16];                /**< 0100: Channel  Priority Register                                   */
   };
        uint8_t   RESERVED_6[3824];             /**< 0110: 0xEF0 bytes                                                  */
   struct {
      __IO uint32_t  SADDR;                     /**< 1000: Source Address                                               */
      __IO uint16_t  SOFF;                      /**< 1004: Signed Source Address Offset                                 */
      __IO uint16_t  ATTR;                      /**< 1006: Transfer Attributes                                          */
      union {                                   /**< 1008: (size=0004)                                                  */
         __IO uint32_t  NBYTES_MLNO;            /**< 1008: Minor Byte Count (Minor Loop Disabled)                       */
         __IO uint32_t  NBYTES_MLOFFNO;         /**< 1008: Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled) */
         __IO uint32_t  NBYTES_MLOFFYES;        /**< 1008: Signed Minor Loop Offset (Minor Loop and Offset Enabled)     */
      };
      __IO uint32_t  SLAST;                     /**< 100C: Last Source Address Adjustment                               */
      __IO uint32_t  DADDR;                     /**< 1010: Destination Address                                          */
      __IO uint16_t  DOFF;                      /**< 1014: Signed Destination Address Offset                            */
      union {                                   /**< 1016: (size=0002)                                                  */
         __IO uint16_t  CITER_ELINKNO;          /**< 1016: Current Minor Loop Link, Major Loop Count (Channel Linking Disabled) */
         __IO uint16_t  CITER_ELINKYES;         /**< 1016: Current Minor Loop Link, Major Loop Count (Channel Linking Enabled) */
      };
      __IO uint32_t  DLASTSGA;                  /**< 1018: Last Destination Address Adjustment/Scatter Gather Address   */
      __IO uint16_t  CSR;                       /**< 101C: Control and Status                                           */
      union {                                   /**< 101E: (size=0002)                                                  */
         __IO uint16_t  BITER_ELINKNO;          /**< 101E: Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled) */
         __IO uint16_t  BITER_ELINKYES;         /**< 101E: Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled) */
      };
   } TCD[16];                                   /**< 1000: (cluster: size=0x0200, 512)                                  */
} DMA_Type;


/** @brief Register Masks for DMA0 */

/* -------------------------------------------------------------------------------- */
/* -----------     'DMA0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup DMA0_Register_Masks_GROUP DMA0 Register Masks */
/** @{ */

/** @name CR - Control Register */ /** @{ */
#define DMA_CR_EDBG_MASK                         (0x2U)                                              /**< DMA0_CR.EDBG Mask                       */
#define DMA_CR_EDBG_SHIFT                        (1U)                                                /**< DMA0_CR.EDBG Position                   */
#define DMA_CR_EDBG(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_EDBG_SHIFT))&DMA_CR_EDBG_MASK) /**< DMA0_CR.EDBG Field                      */
#define DMA_CR_ERCA_MASK                         (0x4U)                                              /**< DMA0_CR.ERCA Mask                       */
#define DMA_CR_ERCA_SHIFT                        (2U)                                                /**< DMA0_CR.ERCA Position                   */
#define DMA_CR_ERCA(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_ERCA_SHIFT))&DMA_CR_ERCA_MASK) /**< DMA0_CR.ERCA Field                      */
#define DMA_CR_HOE_MASK                          (0x10U)                                             /**< DMA0_CR.HOE Mask                        */
#define DMA_CR_HOE_SHIFT                         (4U)                                                /**< DMA0_CR.HOE Position                    */
#define DMA_CR_HOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_HOE_SHIFT))&DMA_CR_HOE_MASK) /**< DMA0_CR.HOE Field                       */
#define DMA_CR_HALT_MASK                         (0x20U)                                             /**< DMA0_CR.HALT Mask                       */
#define DMA_CR_HALT_SHIFT                        (5U)                                                /**< DMA0_CR.HALT Position                   */
#define DMA_CR_HALT(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_HALT_SHIFT))&DMA_CR_HALT_MASK) /**< DMA0_CR.HALT Field                      */
#define DMA_CR_CLM_MASK                          (0x40U)                                             /**< DMA0_CR.CLM Mask                        */
#define DMA_CR_CLM_SHIFT                         (6U)                                                /**< DMA0_CR.CLM Position                    */
#define DMA_CR_CLM(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_CLM_SHIFT))&DMA_CR_CLM_MASK) /**< DMA0_CR.CLM Field                       */
#define DMA_CR_EMLM_MASK                         (0x80U)                                             /**< DMA0_CR.EMLM Mask                       */
#define DMA_CR_EMLM_SHIFT                        (7U)                                                /**< DMA0_CR.EMLM Position                   */
#define DMA_CR_EMLM(x)                           (((uint32_t)(((uint32_t)(x))<<DMA_CR_EMLM_SHIFT))&DMA_CR_EMLM_MASK) /**< DMA0_CR.EMLM Field                      */
#define DMA_CR_ECX_MASK                          (0x10000U)                                          /**< DMA0_CR.ECX Mask                        */
#define DMA_CR_ECX_SHIFT                         (16U)                                               /**< DMA0_CR.ECX Position                    */
#define DMA_CR_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_CR_ECX_SHIFT))&DMA_CR_ECX_MASK) /**< DMA0_CR.ECX Field                       */
#define DMA_CR_CX_MASK                           (0x20000U)                                          /**< DMA0_CR.CX Mask                         */
#define DMA_CR_CX_SHIFT                          (17U)                                               /**< DMA0_CR.CX Position                     */
#define DMA_CR_CX(x)                             (((uint32_t)(((uint32_t)(x))<<DMA_CR_CX_SHIFT))&DMA_CR_CX_MASK) /**< DMA0_CR.CX Field                        */
/** @} */

/** @name ES - Error Status Register */ /** @{ */
#define DMA_ES_DBE_MASK                          (0x1U)                                              /**< DMA0_ES.DBE Mask                        */
#define DMA_ES_DBE_SHIFT                         (0U)                                                /**< DMA0_ES.DBE Position                    */
#define DMA_ES_DBE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DBE_SHIFT))&DMA_ES_DBE_MASK) /**< DMA0_ES.DBE Field                       */
#define DMA_ES_SBE_MASK                          (0x2U)                                              /**< DMA0_ES.SBE Mask                        */
#define DMA_ES_SBE_SHIFT                         (1U)                                                /**< DMA0_ES.SBE Position                    */
#define DMA_ES_SBE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SBE_SHIFT))&DMA_ES_SBE_MASK) /**< DMA0_ES.SBE Field                       */
#define DMA_ES_SGE_MASK                          (0x4U)                                              /**< DMA0_ES.SGE Mask                        */
#define DMA_ES_SGE_SHIFT                         (2U)                                                /**< DMA0_ES.SGE Position                    */
#define DMA_ES_SGE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SGE_SHIFT))&DMA_ES_SGE_MASK) /**< DMA0_ES.SGE Field                       */
#define DMA_ES_NCE_MASK                          (0x8U)                                              /**< DMA0_ES.NCE Mask                        */
#define DMA_ES_NCE_SHIFT                         (3U)                                                /**< DMA0_ES.NCE Position                    */
#define DMA_ES_NCE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_NCE_SHIFT))&DMA_ES_NCE_MASK) /**< DMA0_ES.NCE Field                       */
#define DMA_ES_DOE_MASK                          (0x10U)                                             /**< DMA0_ES.DOE Mask                        */
#define DMA_ES_DOE_SHIFT                         (4U)                                                /**< DMA0_ES.DOE Position                    */
#define DMA_ES_DOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DOE_SHIFT))&DMA_ES_DOE_MASK) /**< DMA0_ES.DOE Field                       */
#define DMA_ES_DAE_MASK                          (0x20U)                                             /**< DMA0_ES.DAE Mask                        */
#define DMA_ES_DAE_SHIFT                         (5U)                                                /**< DMA0_ES.DAE Position                    */
#define DMA_ES_DAE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_DAE_SHIFT))&DMA_ES_DAE_MASK) /**< DMA0_ES.DAE Field                       */
#define DMA_ES_SOE_MASK                          (0x40U)                                             /**< DMA0_ES.SOE Mask                        */
#define DMA_ES_SOE_SHIFT                         (6U)                                                /**< DMA0_ES.SOE Position                    */
#define DMA_ES_SOE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SOE_SHIFT))&DMA_ES_SOE_MASK) /**< DMA0_ES.SOE Field                       */
#define DMA_ES_SAE_MASK                          (0x80U)                                             /**< DMA0_ES.SAE Mask                        */
#define DMA_ES_SAE_SHIFT                         (7U)                                                /**< DMA0_ES.SAE Position                    */
#define DMA_ES_SAE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_SAE_SHIFT))&DMA_ES_SAE_MASK) /**< DMA0_ES.SAE Field                       */
#define DMA_ES_ERRCHN_MASK                       (0xF00U)                                            /**< DMA0_ES.ERRCHN Mask                     */
#define DMA_ES_ERRCHN_SHIFT                      (8U)                                                /**< DMA0_ES.ERRCHN Position                 */
#define DMA_ES_ERRCHN(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ES_ERRCHN_SHIFT))&DMA_ES_ERRCHN_MASK) /**< DMA0_ES.ERRCHN Field                    */
#define DMA_ES_CPE_MASK                          (0x4000U)                                           /**< DMA0_ES.CPE Mask                        */
#define DMA_ES_CPE_SHIFT                         (14U)                                               /**< DMA0_ES.CPE Position                    */
#define DMA_ES_CPE(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_CPE_SHIFT))&DMA_ES_CPE_MASK) /**< DMA0_ES.CPE Field                       */
#define DMA_ES_ECX_MASK                          (0x10000U)                                          /**< DMA0_ES.ECX Mask                        */
#define DMA_ES_ECX_SHIFT                         (16U)                                               /**< DMA0_ES.ECX Position                    */
#define DMA_ES_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_ECX_SHIFT))&DMA_ES_ECX_MASK) /**< DMA0_ES.ECX Field                       */
#define DMA_ES_VLD_MASK                          (0x80000000U)                                       /**< DMA0_ES.VLD Mask                        */
#define DMA_ES_VLD_SHIFT                         (31U)                                               /**< DMA0_ES.VLD Position                    */
#define DMA_ES_VLD(x)                            (((uint32_t)(((uint32_t)(x))<<DMA_ES_VLD_SHIFT))&DMA_ES_VLD_MASK) /**< DMA0_ES.VLD Field                       */
/** @} */

/** @name ERQ - Enable Request Register */ /** @{ */
#define DMA_ERQ_ERQ0_MASK                        (0x1U)                                              /**< DMA0_ERQ.ERQ0 Mask                      */
#define DMA_ERQ_ERQ0_SHIFT                       (0U)                                                /**< DMA0_ERQ.ERQ0 Position                  */
#define DMA_ERQ_ERQ0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ0_SHIFT))&DMA_ERQ_ERQ0_MASK) /**< DMA0_ERQ.ERQ0 Field                     */
#define DMA_ERQ_ERQ1_MASK                        (0x2U)                                              /**< DMA0_ERQ.ERQ1 Mask                      */
#define DMA_ERQ_ERQ1_SHIFT                       (1U)                                                /**< DMA0_ERQ.ERQ1 Position                  */
#define DMA_ERQ_ERQ1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ1_SHIFT))&DMA_ERQ_ERQ1_MASK) /**< DMA0_ERQ.ERQ1 Field                     */
#define DMA_ERQ_ERQ2_MASK                        (0x4U)                                              /**< DMA0_ERQ.ERQ2 Mask                      */
#define DMA_ERQ_ERQ2_SHIFT                       (2U)                                                /**< DMA0_ERQ.ERQ2 Position                  */
#define DMA_ERQ_ERQ2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ2_SHIFT))&DMA_ERQ_ERQ2_MASK) /**< DMA0_ERQ.ERQ2 Field                     */
#define DMA_ERQ_ERQ3_MASK                        (0x8U)                                              /**< DMA0_ERQ.ERQ3 Mask                      */
#define DMA_ERQ_ERQ3_SHIFT                       (3U)                                                /**< DMA0_ERQ.ERQ3 Position                  */
#define DMA_ERQ_ERQ3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ3_SHIFT))&DMA_ERQ_ERQ3_MASK) /**< DMA0_ERQ.ERQ3 Field                     */
#define DMA_ERQ_ERQ4_MASK                        (0x10U)                                             /**< DMA0_ERQ.ERQ4 Mask                      */
#define DMA_ERQ_ERQ4_SHIFT                       (4U)                                                /**< DMA0_ERQ.ERQ4 Position                  */
#define DMA_ERQ_ERQ4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ4_SHIFT))&DMA_ERQ_ERQ4_MASK) /**< DMA0_ERQ.ERQ4 Field                     */
#define DMA_ERQ_ERQ5_MASK                        (0x20U)                                             /**< DMA0_ERQ.ERQ5 Mask                      */
#define DMA_ERQ_ERQ5_SHIFT                       (5U)                                                /**< DMA0_ERQ.ERQ5 Position                  */
#define DMA_ERQ_ERQ5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ5_SHIFT))&DMA_ERQ_ERQ5_MASK) /**< DMA0_ERQ.ERQ5 Field                     */
#define DMA_ERQ_ERQ6_MASK                        (0x40U)                                             /**< DMA0_ERQ.ERQ6 Mask                      */
#define DMA_ERQ_ERQ6_SHIFT                       (6U)                                                /**< DMA0_ERQ.ERQ6 Position                  */
#define DMA_ERQ_ERQ6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ6_SHIFT))&DMA_ERQ_ERQ6_MASK) /**< DMA0_ERQ.ERQ6 Field                     */
#define DMA_ERQ_ERQ7_MASK                        (0x80U)                                             /**< DMA0_ERQ.ERQ7 Mask                      */
#define DMA_ERQ_ERQ7_SHIFT                       (7U)                                                /**< DMA0_ERQ.ERQ7 Position                  */
#define DMA_ERQ_ERQ7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ7_SHIFT))&DMA_ERQ_ERQ7_MASK) /**< DMA0_ERQ.ERQ7 Field                     */
#define DMA_ERQ_ERQ8_MASK                        (0x100U)                                            /**< DMA0_ERQ.ERQ8 Mask                      */
#define DMA_ERQ_ERQ8_SHIFT                       (8U)                                                /**< DMA0_ERQ.ERQ8 Position                  */
#define DMA_ERQ_ERQ8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ8_SHIFT))&DMA_ERQ_ERQ8_MASK) /**< DMA0_ERQ.ERQ8 Field                     */
#define DMA_ERQ_ERQ9_MASK                        (0x200U)                                            /**< DMA0_ERQ.ERQ9 Mask                      */
#define DMA_ERQ_ERQ9_SHIFT                       (9U)                                                /**< DMA0_ERQ.ERQ9 Position                  */
#define DMA_ERQ_ERQ9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ9_SHIFT))&DMA_ERQ_ERQ9_MASK) /**< DMA0_ERQ.ERQ9 Field                     */
#define DMA_ERQ_ERQ10_MASK                       (0x400U)                                            /**< DMA0_ERQ.ERQ10 Mask                     */
#define DMA_ERQ_ERQ10_SHIFT                      (10U)                                               /**< DMA0_ERQ.ERQ10 Position                 */
#define DMA_ERQ_ERQ10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ10_SHIFT))&DMA_ERQ_ERQ10_MASK) /**< DMA0_ERQ.ERQ10 Field                    */
#define DMA_ERQ_ERQ11_MASK                       (0x800U)                                            /**< DMA0_ERQ.ERQ11 Mask                     */
#define DMA_ERQ_ERQ11_SHIFT                      (11U)                                               /**< DMA0_ERQ.ERQ11 Position                 */
#define DMA_ERQ_ERQ11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ11_SHIFT))&DMA_ERQ_ERQ11_MASK) /**< DMA0_ERQ.ERQ11 Field                    */
#define DMA_ERQ_ERQ12_MASK                       (0x1000U)                                           /**< DMA0_ERQ.ERQ12 Mask                     */
#define DMA_ERQ_ERQ12_SHIFT                      (12U)                                               /**< DMA0_ERQ.ERQ12 Position                 */
#define DMA_ERQ_ERQ12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ12_SHIFT))&DMA_ERQ_ERQ12_MASK) /**< DMA0_ERQ.ERQ12 Field                    */
#define DMA_ERQ_ERQ13_MASK                       (0x2000U)                                           /**< DMA0_ERQ.ERQ13 Mask                     */
#define DMA_ERQ_ERQ13_SHIFT                      (13U)                                               /**< DMA0_ERQ.ERQ13 Position                 */
#define DMA_ERQ_ERQ13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ13_SHIFT))&DMA_ERQ_ERQ13_MASK) /**< DMA0_ERQ.ERQ13 Field                    */
#define DMA_ERQ_ERQ14_MASK                       (0x4000U)                                           /**< DMA0_ERQ.ERQ14 Mask                     */
#define DMA_ERQ_ERQ14_SHIFT                      (14U)                                               /**< DMA0_ERQ.ERQ14 Position                 */
#define DMA_ERQ_ERQ14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ14_SHIFT))&DMA_ERQ_ERQ14_MASK) /**< DMA0_ERQ.ERQ14 Field                    */
#define DMA_ERQ_ERQ15_MASK                       (0x8000U)                                           /**< DMA0_ERQ.ERQ15 Mask                     */
#define DMA_ERQ_ERQ15_SHIFT                      (15U)                                               /**< DMA0_ERQ.ERQ15 Position                 */
#define DMA_ERQ_ERQ15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERQ_ERQ15_SHIFT))&DMA_ERQ_ERQ15_MASK) /**< DMA0_ERQ.ERQ15 Field                    */
/** @} */

/** @name EEI - Enable Error Interrupt Register */ /** @{ */
#define DMA_EEI_EEI0_MASK                        (0x1U)                                              /**< DMA0_EEI.EEI0 Mask                      */
#define DMA_EEI_EEI0_SHIFT                       (0U)                                                /**< DMA0_EEI.EEI0 Position                  */
#define DMA_EEI_EEI0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI0_SHIFT))&DMA_EEI_EEI0_MASK) /**< DMA0_EEI.EEI0 Field                     */
#define DMA_EEI_EEI1_MASK                        (0x2U)                                              /**< DMA0_EEI.EEI1 Mask                      */
#define DMA_EEI_EEI1_SHIFT                       (1U)                                                /**< DMA0_EEI.EEI1 Position                  */
#define DMA_EEI_EEI1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI1_SHIFT))&DMA_EEI_EEI1_MASK) /**< DMA0_EEI.EEI1 Field                     */
#define DMA_EEI_EEI2_MASK                        (0x4U)                                              /**< DMA0_EEI.EEI2 Mask                      */
#define DMA_EEI_EEI2_SHIFT                       (2U)                                                /**< DMA0_EEI.EEI2 Position                  */
#define DMA_EEI_EEI2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI2_SHIFT))&DMA_EEI_EEI2_MASK) /**< DMA0_EEI.EEI2 Field                     */
#define DMA_EEI_EEI3_MASK                        (0x8U)                                              /**< DMA0_EEI.EEI3 Mask                      */
#define DMA_EEI_EEI3_SHIFT                       (3U)                                                /**< DMA0_EEI.EEI3 Position                  */
#define DMA_EEI_EEI3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI3_SHIFT))&DMA_EEI_EEI3_MASK) /**< DMA0_EEI.EEI3 Field                     */
#define DMA_EEI_EEI4_MASK                        (0x10U)                                             /**< DMA0_EEI.EEI4 Mask                      */
#define DMA_EEI_EEI4_SHIFT                       (4U)                                                /**< DMA0_EEI.EEI4 Position                  */
#define DMA_EEI_EEI4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI4_SHIFT))&DMA_EEI_EEI4_MASK) /**< DMA0_EEI.EEI4 Field                     */
#define DMA_EEI_EEI5_MASK                        (0x20U)                                             /**< DMA0_EEI.EEI5 Mask                      */
#define DMA_EEI_EEI5_SHIFT                       (5U)                                                /**< DMA0_EEI.EEI5 Position                  */
#define DMA_EEI_EEI5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI5_SHIFT))&DMA_EEI_EEI5_MASK) /**< DMA0_EEI.EEI5 Field                     */
#define DMA_EEI_EEI6_MASK                        (0x40U)                                             /**< DMA0_EEI.EEI6 Mask                      */
#define DMA_EEI_EEI6_SHIFT                       (6U)                                                /**< DMA0_EEI.EEI6 Position                  */
#define DMA_EEI_EEI6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI6_SHIFT))&DMA_EEI_EEI6_MASK) /**< DMA0_EEI.EEI6 Field                     */
#define DMA_EEI_EEI7_MASK                        (0x80U)                                             /**< DMA0_EEI.EEI7 Mask                      */
#define DMA_EEI_EEI7_SHIFT                       (7U)                                                /**< DMA0_EEI.EEI7 Position                  */
#define DMA_EEI_EEI7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI7_SHIFT))&DMA_EEI_EEI7_MASK) /**< DMA0_EEI.EEI7 Field                     */
#define DMA_EEI_EEI8_MASK                        (0x100U)                                            /**< DMA0_EEI.EEI8 Mask                      */
#define DMA_EEI_EEI8_SHIFT                       (8U)                                                /**< DMA0_EEI.EEI8 Position                  */
#define DMA_EEI_EEI8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI8_SHIFT))&DMA_EEI_EEI8_MASK) /**< DMA0_EEI.EEI8 Field                     */
#define DMA_EEI_EEI9_MASK                        (0x200U)                                            /**< DMA0_EEI.EEI9 Mask                      */
#define DMA_EEI_EEI9_SHIFT                       (9U)                                                /**< DMA0_EEI.EEI9 Position                  */
#define DMA_EEI_EEI9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI9_SHIFT))&DMA_EEI_EEI9_MASK) /**< DMA0_EEI.EEI9 Field                     */
#define DMA_EEI_EEI10_MASK                       (0x400U)                                            /**< DMA0_EEI.EEI10 Mask                     */
#define DMA_EEI_EEI10_SHIFT                      (10U)                                               /**< DMA0_EEI.EEI10 Position                 */
#define DMA_EEI_EEI10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI10_SHIFT))&DMA_EEI_EEI10_MASK) /**< DMA0_EEI.EEI10 Field                    */
#define DMA_EEI_EEI11_MASK                       (0x800U)                                            /**< DMA0_EEI.EEI11 Mask                     */
#define DMA_EEI_EEI11_SHIFT                      (11U)                                               /**< DMA0_EEI.EEI11 Position                 */
#define DMA_EEI_EEI11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI11_SHIFT))&DMA_EEI_EEI11_MASK) /**< DMA0_EEI.EEI11 Field                    */
#define DMA_EEI_EEI12_MASK                       (0x1000U)                                           /**< DMA0_EEI.EEI12 Mask                     */
#define DMA_EEI_EEI12_SHIFT                      (12U)                                               /**< DMA0_EEI.EEI12 Position                 */
#define DMA_EEI_EEI12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI12_SHIFT))&DMA_EEI_EEI12_MASK) /**< DMA0_EEI.EEI12 Field                    */
#define DMA_EEI_EEI13_MASK                       (0x2000U)                                           /**< DMA0_EEI.EEI13 Mask                     */
#define DMA_EEI_EEI13_SHIFT                      (13U)                                               /**< DMA0_EEI.EEI13 Position                 */
#define DMA_EEI_EEI13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI13_SHIFT))&DMA_EEI_EEI13_MASK) /**< DMA0_EEI.EEI13 Field                    */
#define DMA_EEI_EEI14_MASK                       (0x4000U)                                           /**< DMA0_EEI.EEI14 Mask                     */
#define DMA_EEI_EEI14_SHIFT                      (14U)                                               /**< DMA0_EEI.EEI14 Position                 */
#define DMA_EEI_EEI14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI14_SHIFT))&DMA_EEI_EEI14_MASK) /**< DMA0_EEI.EEI14 Field                    */
#define DMA_EEI_EEI15_MASK                       (0x8000U)                                           /**< DMA0_EEI.EEI15 Mask                     */
#define DMA_EEI_EEI15_SHIFT                      (15U)                                               /**< DMA0_EEI.EEI15 Position                 */
#define DMA_EEI_EEI15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_EEI_EEI15_SHIFT))&DMA_EEI_EEI15_MASK) /**< DMA0_EEI.EEI15 Field                    */
/** @} */

/** @name CEEI - Clear Enable Error Interrupt Register */ /** @{ */
#define DMA_CEEI_CEEI_MASK                       (0xFU)                                              /**< DMA0_CEEI.CEEI Mask                     */
#define DMA_CEEI_CEEI_SHIFT                      (0U)                                                /**< DMA0_CEEI.CEEI Position                 */
#define DMA_CEEI_CEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CEEI_SHIFT))&DMA_CEEI_CEEI_MASK) /**< DMA0_CEEI.CEEI Field                    */
#define DMA_CEEI_CAEE_MASK                       (0x40U)                                             /**< DMA0_CEEI.CAEE Mask                     */
#define DMA_CEEI_CAEE_SHIFT                      (6U)                                                /**< DMA0_CEEI.CAEE Position                 */
#define DMA_CEEI_CAEE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_CAEE_SHIFT))&DMA_CEEI_CAEE_MASK) /**< DMA0_CEEI.CAEE Field                    */
#define DMA_CEEI_NOP_MASK                        (0x80U)                                             /**< DMA0_CEEI.NOP Mask                      */
#define DMA_CEEI_NOP_SHIFT                       (7U)                                                /**< DMA0_CEEI.NOP Position                  */
#define DMA_CEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CEEI_NOP_SHIFT))&DMA_CEEI_NOP_MASK) /**< DMA0_CEEI.NOP Field                     */
/** @} */

/** @name SEEI - Set Enable Error Interrupt Register */ /** @{ */
#define DMA_SEEI_SEEI_MASK                       (0xFU)                                              /**< DMA0_SEEI.SEEI Mask                     */
#define DMA_SEEI_SEEI_SHIFT                      (0U)                                                /**< DMA0_SEEI.SEEI Position                 */
#define DMA_SEEI_SEEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SEEI_SHIFT))&DMA_SEEI_SEEI_MASK) /**< DMA0_SEEI.SEEI Field                    */
#define DMA_SEEI_SAEE_MASK                       (0x40U)                                             /**< DMA0_SEEI.SAEE Mask                     */
#define DMA_SEEI_SAEE_SHIFT                      (6U)                                                /**< DMA0_SEEI.SAEE Position                 */
#define DMA_SEEI_SAEE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_SAEE_SHIFT))&DMA_SEEI_SAEE_MASK) /**< DMA0_SEEI.SAEE Field                    */
#define DMA_SEEI_NOP_MASK                        (0x80U)                                             /**< DMA0_SEEI.NOP Mask                      */
#define DMA_SEEI_NOP_SHIFT                       (7U)                                                /**< DMA0_SEEI.NOP Position                  */
#define DMA_SEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SEEI_NOP_SHIFT))&DMA_SEEI_NOP_MASK) /**< DMA0_SEEI.NOP Field                     */
/** @} */

/** @name CERQ - Clear Enable Request Register */ /** @{ */
#define DMA_CERQ_CERQ_MASK                       (0xFU)                                              /**< DMA0_CERQ.CERQ Mask                     */
#define DMA_CERQ_CERQ_SHIFT                      (0U)                                                /**< DMA0_CERQ.CERQ Position                 */
#define DMA_CERQ_CERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CERQ_SHIFT))&DMA_CERQ_CERQ_MASK) /**< DMA0_CERQ.CERQ Field                    */
#define DMA_CERQ_CAER_MASK                       (0x40U)                                             /**< DMA0_CERQ.CAER Mask                     */
#define DMA_CERQ_CAER_SHIFT                      (6U)                                                /**< DMA0_CERQ.CAER Position                 */
#define DMA_CERQ_CAER(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_CAER_SHIFT))&DMA_CERQ_CAER_MASK) /**< DMA0_CERQ.CAER Field                    */
#define DMA_CERQ_NOP_MASK                        (0x80U)                                             /**< DMA0_CERQ.NOP Mask                      */
#define DMA_CERQ_NOP_SHIFT                       (7U)                                                /**< DMA0_CERQ.NOP Position                  */
#define DMA_CERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CERQ_NOP_SHIFT))&DMA_CERQ_NOP_MASK) /**< DMA0_CERQ.NOP Field                     */
/** @} */

/** @name SERQ - Set Enable Request Register */ /** @{ */
#define DMA_SERQ_SERQ_MASK                       (0xFU)                                              /**< DMA0_SERQ.SERQ Mask                     */
#define DMA_SERQ_SERQ_SHIFT                      (0U)                                                /**< DMA0_SERQ.SERQ Position                 */
#define DMA_SERQ_SERQ(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SERQ_SHIFT))&DMA_SERQ_SERQ_MASK) /**< DMA0_SERQ.SERQ Field                    */
#define DMA_SERQ_SAER_MASK                       (0x40U)                                             /**< DMA0_SERQ.SAER Mask                     */
#define DMA_SERQ_SAER_SHIFT                      (6U)                                                /**< DMA0_SERQ.SAER Position                 */
#define DMA_SERQ_SAER(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_SAER_SHIFT))&DMA_SERQ_SAER_MASK) /**< DMA0_SERQ.SAER Field                    */
#define DMA_SERQ_NOP_MASK                        (0x80U)                                             /**< DMA0_SERQ.NOP Mask                      */
#define DMA_SERQ_NOP_SHIFT                       (7U)                                                /**< DMA0_SERQ.NOP Position                  */
#define DMA_SERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SERQ_NOP_SHIFT))&DMA_SERQ_NOP_MASK) /**< DMA0_SERQ.NOP Field                     */
/** @} */

/** @name CDNE - Clear DONE Status Bit Register */ /** @{ */
#define DMA_CDNE_CDNE_MASK                       (0xFU)                                              /**< DMA0_CDNE.CDNE Mask                     */
#define DMA_CDNE_CDNE_SHIFT                      (0U)                                                /**< DMA0_CDNE.CDNE Position                 */
#define DMA_CDNE_CDNE(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CDNE_SHIFT))&DMA_CDNE_CDNE_MASK) /**< DMA0_CDNE.CDNE Field                    */
#define DMA_CDNE_CADN_MASK                       (0x40U)                                             /**< DMA0_CDNE.CADN Mask                     */
#define DMA_CDNE_CADN_SHIFT                      (6U)                                                /**< DMA0_CDNE.CADN Position                 */
#define DMA_CDNE_CADN(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_CADN_SHIFT))&DMA_CDNE_CADN_MASK) /**< DMA0_CDNE.CADN Field                    */
#define DMA_CDNE_NOP_MASK                        (0x80U)                                             /**< DMA0_CDNE.NOP Mask                      */
#define DMA_CDNE_NOP_SHIFT                       (7U)                                                /**< DMA0_CDNE.NOP Position                  */
#define DMA_CDNE_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CDNE_NOP_SHIFT))&DMA_CDNE_NOP_MASK) /**< DMA0_CDNE.NOP Field                     */
/** @} */

/** @name SSRT - Set START Bit Register */ /** @{ */
#define DMA_SSRT_SSRT_MASK                       (0xFU)                                              /**< DMA0_SSRT.SSRT Mask                     */
#define DMA_SSRT_SSRT_SHIFT                      (0U)                                                /**< DMA0_SSRT.SSRT Position                 */
#define DMA_SSRT_SSRT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SSRT_SHIFT))&DMA_SSRT_SSRT_MASK) /**< DMA0_SSRT.SSRT Field                    */
#define DMA_SSRT_SAST_MASK                       (0x40U)                                             /**< DMA0_SSRT.SAST Mask                     */
#define DMA_SSRT_SAST_SHIFT                      (6U)                                                /**< DMA0_SSRT.SAST Position                 */
#define DMA_SSRT_SAST(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_SAST_SHIFT))&DMA_SSRT_SAST_MASK) /**< DMA0_SSRT.SAST Field                    */
#define DMA_SSRT_NOP_MASK                        (0x80U)                                             /**< DMA0_SSRT.NOP Mask                      */
#define DMA_SSRT_NOP_SHIFT                       (7U)                                                /**< DMA0_SSRT.NOP Position                  */
#define DMA_SSRT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_SSRT_NOP_SHIFT))&DMA_SSRT_NOP_MASK) /**< DMA0_SSRT.NOP Field                     */
/** @} */

/** @name CERR - Clear Error Register */ /** @{ */
#define DMA_CERR_CERR_MASK                       (0xFU)                                              /**< DMA0_CERR.CERR Mask                     */
#define DMA_CERR_CERR_SHIFT                      (0U)                                                /**< DMA0_CERR.CERR Position                 */
#define DMA_CERR_CERR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CERR_SHIFT))&DMA_CERR_CERR_MASK) /**< DMA0_CERR.CERR Field                    */
#define DMA_CERR_CAEI_MASK                       (0x40U)                                             /**< DMA0_CERR.CAEI Mask                     */
#define DMA_CERR_CAEI_SHIFT                      (6U)                                                /**< DMA0_CERR.CAEI Position                 */
#define DMA_CERR_CAEI(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CERR_CAEI_SHIFT))&DMA_CERR_CAEI_MASK) /**< DMA0_CERR.CAEI Field                    */
#define DMA_CERR_NOP_MASK                        (0x80U)                                             /**< DMA0_CERR.NOP Mask                      */
#define DMA_CERR_NOP_SHIFT                       (7U)                                                /**< DMA0_CERR.NOP Position                  */
#define DMA_CERR_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CERR_NOP_SHIFT))&DMA_CERR_NOP_MASK) /**< DMA0_CERR.NOP Field                     */
/** @} */

/** @name CINT - Clear Interrupt Request Register */ /** @{ */
#define DMA_CINT_CINT_MASK                       (0xFU)                                              /**< DMA0_CINT.CINT Mask                     */
#define DMA_CINT_CINT_SHIFT                      (0U)                                                /**< DMA0_CINT.CINT Position                 */
#define DMA_CINT_CINT(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CINT_SHIFT))&DMA_CINT_CINT_MASK) /**< DMA0_CINT.CINT Field                    */
#define DMA_CINT_CAIR_MASK                       (0x40U)                                             /**< DMA0_CINT.CAIR Mask                     */
#define DMA_CINT_CAIR_SHIFT                      (6U)                                                /**< DMA0_CINT.CAIR Position                 */
#define DMA_CINT_CAIR(x)                         (((uint8_t)(((uint8_t)(x))<<DMA_CINT_CAIR_SHIFT))&DMA_CINT_CAIR_MASK) /**< DMA0_CINT.CAIR Field                    */
#define DMA_CINT_NOP_MASK                        (0x80U)                                             /**< DMA0_CINT.NOP Mask                      */
#define DMA_CINT_NOP_SHIFT                       (7U)                                                /**< DMA0_CINT.NOP Position                  */
#define DMA_CINT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<DMA_CINT_NOP_SHIFT))&DMA_CINT_NOP_MASK) /**< DMA0_CINT.NOP Field                     */
/** @} */

/** @name INT - Interrupt Request Register */ /** @{ */
#define DMA_INT_INT0_MASK                        (0x1U)                                              /**< DMA0_INT.INT0 Mask                      */
#define DMA_INT_INT0_SHIFT                       (0U)                                                /**< DMA0_INT.INT0 Position                  */
#define DMA_INT_INT0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT0_SHIFT))&DMA_INT_INT0_MASK) /**< DMA0_INT.INT0 Field                     */
#define DMA_INT_INT1_MASK                        (0x2U)                                              /**< DMA0_INT.INT1 Mask                      */
#define DMA_INT_INT1_SHIFT                       (1U)                                                /**< DMA0_INT.INT1 Position                  */
#define DMA_INT_INT1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT1_SHIFT))&DMA_INT_INT1_MASK) /**< DMA0_INT.INT1 Field                     */
#define DMA_INT_INT2_MASK                        (0x4U)                                              /**< DMA0_INT.INT2 Mask                      */
#define DMA_INT_INT2_SHIFT                       (2U)                                                /**< DMA0_INT.INT2 Position                  */
#define DMA_INT_INT2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT2_SHIFT))&DMA_INT_INT2_MASK) /**< DMA0_INT.INT2 Field                     */
#define DMA_INT_INT3_MASK                        (0x8U)                                              /**< DMA0_INT.INT3 Mask                      */
#define DMA_INT_INT3_SHIFT                       (3U)                                                /**< DMA0_INT.INT3 Position                  */
#define DMA_INT_INT3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT3_SHIFT))&DMA_INT_INT3_MASK) /**< DMA0_INT.INT3 Field                     */
#define DMA_INT_INT4_MASK                        (0x10U)                                             /**< DMA0_INT.INT4 Mask                      */
#define DMA_INT_INT4_SHIFT                       (4U)                                                /**< DMA0_INT.INT4 Position                  */
#define DMA_INT_INT4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT4_SHIFT))&DMA_INT_INT4_MASK) /**< DMA0_INT.INT4 Field                     */
#define DMA_INT_INT5_MASK                        (0x20U)                                             /**< DMA0_INT.INT5 Mask                      */
#define DMA_INT_INT5_SHIFT                       (5U)                                                /**< DMA0_INT.INT5 Position                  */
#define DMA_INT_INT5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT5_SHIFT))&DMA_INT_INT5_MASK) /**< DMA0_INT.INT5 Field                     */
#define DMA_INT_INT6_MASK                        (0x40U)                                             /**< DMA0_INT.INT6 Mask                      */
#define DMA_INT_INT6_SHIFT                       (6U)                                                /**< DMA0_INT.INT6 Position                  */
#define DMA_INT_INT6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT6_SHIFT))&DMA_INT_INT6_MASK) /**< DMA0_INT.INT6 Field                     */
#define DMA_INT_INT7_MASK                        (0x80U)                                             /**< DMA0_INT.INT7 Mask                      */
#define DMA_INT_INT7_SHIFT                       (7U)                                                /**< DMA0_INT.INT7 Position                  */
#define DMA_INT_INT7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT7_SHIFT))&DMA_INT_INT7_MASK) /**< DMA0_INT.INT7 Field                     */
#define DMA_INT_INT8_MASK                        (0x100U)                                            /**< DMA0_INT.INT8 Mask                      */
#define DMA_INT_INT8_SHIFT                       (8U)                                                /**< DMA0_INT.INT8 Position                  */
#define DMA_INT_INT8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT8_SHIFT))&DMA_INT_INT8_MASK) /**< DMA0_INT.INT8 Field                     */
#define DMA_INT_INT9_MASK                        (0x200U)                                            /**< DMA0_INT.INT9 Mask                      */
#define DMA_INT_INT9_SHIFT                       (9U)                                                /**< DMA0_INT.INT9 Position                  */
#define DMA_INT_INT9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT9_SHIFT))&DMA_INT_INT9_MASK) /**< DMA0_INT.INT9 Field                     */
#define DMA_INT_INT10_MASK                       (0x400U)                                            /**< DMA0_INT.INT10 Mask                     */
#define DMA_INT_INT10_SHIFT                      (10U)                                               /**< DMA0_INT.INT10 Position                 */
#define DMA_INT_INT10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT10_SHIFT))&DMA_INT_INT10_MASK) /**< DMA0_INT.INT10 Field                    */
#define DMA_INT_INT11_MASK                       (0x800U)                                            /**< DMA0_INT.INT11 Mask                     */
#define DMA_INT_INT11_SHIFT                      (11U)                                               /**< DMA0_INT.INT11 Position                 */
#define DMA_INT_INT11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT11_SHIFT))&DMA_INT_INT11_MASK) /**< DMA0_INT.INT11 Field                    */
#define DMA_INT_INT12_MASK                       (0x1000U)                                           /**< DMA0_INT.INT12 Mask                     */
#define DMA_INT_INT12_SHIFT                      (12U)                                               /**< DMA0_INT.INT12 Position                 */
#define DMA_INT_INT12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT12_SHIFT))&DMA_INT_INT12_MASK) /**< DMA0_INT.INT12 Field                    */
#define DMA_INT_INT13_MASK                       (0x2000U)                                           /**< DMA0_INT.INT13 Mask                     */
#define DMA_INT_INT13_SHIFT                      (13U)                                               /**< DMA0_INT.INT13 Position                 */
#define DMA_INT_INT13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT13_SHIFT))&DMA_INT_INT13_MASK) /**< DMA0_INT.INT13 Field                    */
#define DMA_INT_INT14_MASK                       (0x4000U)                                           /**< DMA0_INT.INT14 Mask                     */
#define DMA_INT_INT14_SHIFT                      (14U)                                               /**< DMA0_INT.INT14 Position                 */
#define DMA_INT_INT14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT14_SHIFT))&DMA_INT_INT14_MASK) /**< DMA0_INT.INT14 Field                    */
#define DMA_INT_INT15_MASK                       (0x8000U)                                           /**< DMA0_INT.INT15 Mask                     */
#define DMA_INT_INT15_SHIFT                      (15U)                                               /**< DMA0_INT.INT15 Position                 */
#define DMA_INT_INT15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_INT_INT15_SHIFT))&DMA_INT_INT15_MASK) /**< DMA0_INT.INT15 Field                    */
/** @} */

/** @name ERR - Error Register */ /** @{ */
#define DMA_ERR_ERR0_MASK                        (0x1U)                                              /**< DMA0_ERR.ERR0 Mask                      */
#define DMA_ERR_ERR0_SHIFT                       (0U)                                                /**< DMA0_ERR.ERR0 Position                  */
#define DMA_ERR_ERR0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR0_SHIFT))&DMA_ERR_ERR0_MASK) /**< DMA0_ERR.ERR0 Field                     */
#define DMA_ERR_ERR1_MASK                        (0x2U)                                              /**< DMA0_ERR.ERR1 Mask                      */
#define DMA_ERR_ERR1_SHIFT                       (1U)                                                /**< DMA0_ERR.ERR1 Position                  */
#define DMA_ERR_ERR1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR1_SHIFT))&DMA_ERR_ERR1_MASK) /**< DMA0_ERR.ERR1 Field                     */
#define DMA_ERR_ERR2_MASK                        (0x4U)                                              /**< DMA0_ERR.ERR2 Mask                      */
#define DMA_ERR_ERR2_SHIFT                       (2U)                                                /**< DMA0_ERR.ERR2 Position                  */
#define DMA_ERR_ERR2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR2_SHIFT))&DMA_ERR_ERR2_MASK) /**< DMA0_ERR.ERR2 Field                     */
#define DMA_ERR_ERR3_MASK                        (0x8U)                                              /**< DMA0_ERR.ERR3 Mask                      */
#define DMA_ERR_ERR3_SHIFT                       (3U)                                                /**< DMA0_ERR.ERR3 Position                  */
#define DMA_ERR_ERR3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR3_SHIFT))&DMA_ERR_ERR3_MASK) /**< DMA0_ERR.ERR3 Field                     */
#define DMA_ERR_ERR4_MASK                        (0x10U)                                             /**< DMA0_ERR.ERR4 Mask                      */
#define DMA_ERR_ERR4_SHIFT                       (4U)                                                /**< DMA0_ERR.ERR4 Position                  */
#define DMA_ERR_ERR4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR4_SHIFT))&DMA_ERR_ERR4_MASK) /**< DMA0_ERR.ERR4 Field                     */
#define DMA_ERR_ERR5_MASK                        (0x20U)                                             /**< DMA0_ERR.ERR5 Mask                      */
#define DMA_ERR_ERR5_SHIFT                       (5U)                                                /**< DMA0_ERR.ERR5 Position                  */
#define DMA_ERR_ERR5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR5_SHIFT))&DMA_ERR_ERR5_MASK) /**< DMA0_ERR.ERR5 Field                     */
#define DMA_ERR_ERR6_MASK                        (0x40U)                                             /**< DMA0_ERR.ERR6 Mask                      */
#define DMA_ERR_ERR6_SHIFT                       (6U)                                                /**< DMA0_ERR.ERR6 Position                  */
#define DMA_ERR_ERR6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR6_SHIFT))&DMA_ERR_ERR6_MASK) /**< DMA0_ERR.ERR6 Field                     */
#define DMA_ERR_ERR7_MASK                        (0x80U)                                             /**< DMA0_ERR.ERR7 Mask                      */
#define DMA_ERR_ERR7_SHIFT                       (7U)                                                /**< DMA0_ERR.ERR7 Position                  */
#define DMA_ERR_ERR7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR7_SHIFT))&DMA_ERR_ERR7_MASK) /**< DMA0_ERR.ERR7 Field                     */
#define DMA_ERR_ERR8_MASK                        (0x100U)                                            /**< DMA0_ERR.ERR8 Mask                      */
#define DMA_ERR_ERR8_SHIFT                       (8U)                                                /**< DMA0_ERR.ERR8 Position                  */
#define DMA_ERR_ERR8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR8_SHIFT))&DMA_ERR_ERR8_MASK) /**< DMA0_ERR.ERR8 Field                     */
#define DMA_ERR_ERR9_MASK                        (0x200U)                                            /**< DMA0_ERR.ERR9 Mask                      */
#define DMA_ERR_ERR9_SHIFT                       (9U)                                                /**< DMA0_ERR.ERR9 Position                  */
#define DMA_ERR_ERR9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR9_SHIFT))&DMA_ERR_ERR9_MASK) /**< DMA0_ERR.ERR9 Field                     */
#define DMA_ERR_ERR10_MASK                       (0x400U)                                            /**< DMA0_ERR.ERR10 Mask                     */
#define DMA_ERR_ERR10_SHIFT                      (10U)                                               /**< DMA0_ERR.ERR10 Position                 */
#define DMA_ERR_ERR10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR10_SHIFT))&DMA_ERR_ERR10_MASK) /**< DMA0_ERR.ERR10 Field                    */
#define DMA_ERR_ERR11_MASK                       (0x800U)                                            /**< DMA0_ERR.ERR11 Mask                     */
#define DMA_ERR_ERR11_SHIFT                      (11U)                                               /**< DMA0_ERR.ERR11 Position                 */
#define DMA_ERR_ERR11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR11_SHIFT))&DMA_ERR_ERR11_MASK) /**< DMA0_ERR.ERR11 Field                    */
#define DMA_ERR_ERR12_MASK                       (0x1000U)                                           /**< DMA0_ERR.ERR12 Mask                     */
#define DMA_ERR_ERR12_SHIFT                      (12U)                                               /**< DMA0_ERR.ERR12 Position                 */
#define DMA_ERR_ERR12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR12_SHIFT))&DMA_ERR_ERR12_MASK) /**< DMA0_ERR.ERR12 Field                    */
#define DMA_ERR_ERR13_MASK                       (0x2000U)                                           /**< DMA0_ERR.ERR13 Mask                     */
#define DMA_ERR_ERR13_SHIFT                      (13U)                                               /**< DMA0_ERR.ERR13 Position                 */
#define DMA_ERR_ERR13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR13_SHIFT))&DMA_ERR_ERR13_MASK) /**< DMA0_ERR.ERR13 Field                    */
#define DMA_ERR_ERR14_MASK                       (0x4000U)                                           /**< DMA0_ERR.ERR14 Mask                     */
#define DMA_ERR_ERR14_SHIFT                      (14U)                                               /**< DMA0_ERR.ERR14 Position                 */
#define DMA_ERR_ERR14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR14_SHIFT))&DMA_ERR_ERR14_MASK) /**< DMA0_ERR.ERR14 Field                    */
#define DMA_ERR_ERR15_MASK                       (0x8000U)                                           /**< DMA0_ERR.ERR15 Mask                     */
#define DMA_ERR_ERR15_SHIFT                      (15U)                                               /**< DMA0_ERR.ERR15 Position                 */
#define DMA_ERR_ERR15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_ERR_ERR15_SHIFT))&DMA_ERR_ERR15_MASK) /**< DMA0_ERR.ERR15 Field                    */
/** @} */

/** @name HRS - Hardware Request Status Register */ /** @{ */
#define DMA_HRS_HRS0_MASK                        (0x1U)                                              /**< DMA0_HRS.HRS0 Mask                      */
#define DMA_HRS_HRS0_SHIFT                       (0U)                                                /**< DMA0_HRS.HRS0 Position                  */
#define DMA_HRS_HRS0(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS0_SHIFT))&DMA_HRS_HRS0_MASK) /**< DMA0_HRS.HRS0 Field                     */
#define DMA_HRS_HRS1_MASK                        (0x2U)                                              /**< DMA0_HRS.HRS1 Mask                      */
#define DMA_HRS_HRS1_SHIFT                       (1U)                                                /**< DMA0_HRS.HRS1 Position                  */
#define DMA_HRS_HRS1(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS1_SHIFT))&DMA_HRS_HRS1_MASK) /**< DMA0_HRS.HRS1 Field                     */
#define DMA_HRS_HRS2_MASK                        (0x4U)                                              /**< DMA0_HRS.HRS2 Mask                      */
#define DMA_HRS_HRS2_SHIFT                       (2U)                                                /**< DMA0_HRS.HRS2 Position                  */
#define DMA_HRS_HRS2(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS2_SHIFT))&DMA_HRS_HRS2_MASK) /**< DMA0_HRS.HRS2 Field                     */
#define DMA_HRS_HRS3_MASK                        (0x8U)                                              /**< DMA0_HRS.HRS3 Mask                      */
#define DMA_HRS_HRS3_SHIFT                       (3U)                                                /**< DMA0_HRS.HRS3 Position                  */
#define DMA_HRS_HRS3(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS3_SHIFT))&DMA_HRS_HRS3_MASK) /**< DMA0_HRS.HRS3 Field                     */
#define DMA_HRS_HRS4_MASK                        (0x10U)                                             /**< DMA0_HRS.HRS4 Mask                      */
#define DMA_HRS_HRS4_SHIFT                       (4U)                                                /**< DMA0_HRS.HRS4 Position                  */
#define DMA_HRS_HRS4(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS4_SHIFT))&DMA_HRS_HRS4_MASK) /**< DMA0_HRS.HRS4 Field                     */
#define DMA_HRS_HRS5_MASK                        (0x20U)                                             /**< DMA0_HRS.HRS5 Mask                      */
#define DMA_HRS_HRS5_SHIFT                       (5U)                                                /**< DMA0_HRS.HRS5 Position                  */
#define DMA_HRS_HRS5(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS5_SHIFT))&DMA_HRS_HRS5_MASK) /**< DMA0_HRS.HRS5 Field                     */
#define DMA_HRS_HRS6_MASK                        (0x40U)                                             /**< DMA0_HRS.HRS6 Mask                      */
#define DMA_HRS_HRS6_SHIFT                       (6U)                                                /**< DMA0_HRS.HRS6 Position                  */
#define DMA_HRS_HRS6(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS6_SHIFT))&DMA_HRS_HRS6_MASK) /**< DMA0_HRS.HRS6 Field                     */
#define DMA_HRS_HRS7_MASK                        (0x80U)                                             /**< DMA0_HRS.HRS7 Mask                      */
#define DMA_HRS_HRS7_SHIFT                       (7U)                                                /**< DMA0_HRS.HRS7 Position                  */
#define DMA_HRS_HRS7(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS7_SHIFT))&DMA_HRS_HRS7_MASK) /**< DMA0_HRS.HRS7 Field                     */
#define DMA_HRS_HRS8_MASK                        (0x100U)                                            /**< DMA0_HRS.HRS8 Mask                      */
#define DMA_HRS_HRS8_SHIFT                       (8U)                                                /**< DMA0_HRS.HRS8 Position                  */
#define DMA_HRS_HRS8(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS8_SHIFT))&DMA_HRS_HRS8_MASK) /**< DMA0_HRS.HRS8 Field                     */
#define DMA_HRS_HRS9_MASK                        (0x200U)                                            /**< DMA0_HRS.HRS9 Mask                      */
#define DMA_HRS_HRS9_SHIFT                       (9U)                                                /**< DMA0_HRS.HRS9 Position                  */
#define DMA_HRS_HRS9(x)                          (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS9_SHIFT))&DMA_HRS_HRS9_MASK) /**< DMA0_HRS.HRS9 Field                     */
#define DMA_HRS_HRS10_MASK                       (0x400U)                                            /**< DMA0_HRS.HRS10 Mask                     */
#define DMA_HRS_HRS10_SHIFT                      (10U)                                               /**< DMA0_HRS.HRS10 Position                 */
#define DMA_HRS_HRS10(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS10_SHIFT))&DMA_HRS_HRS10_MASK) /**< DMA0_HRS.HRS10 Field                    */
#define DMA_HRS_HRS11_MASK                       (0x800U)                                            /**< DMA0_HRS.HRS11 Mask                     */
#define DMA_HRS_HRS11_SHIFT                      (11U)                                               /**< DMA0_HRS.HRS11 Position                 */
#define DMA_HRS_HRS11(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS11_SHIFT))&DMA_HRS_HRS11_MASK) /**< DMA0_HRS.HRS11 Field                    */
#define DMA_HRS_HRS12_MASK                       (0x1000U)                                           /**< DMA0_HRS.HRS12 Mask                     */
#define DMA_HRS_HRS12_SHIFT                      (12U)                                               /**< DMA0_HRS.HRS12 Position                 */
#define DMA_HRS_HRS12(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS12_SHIFT))&DMA_HRS_HRS12_MASK) /**< DMA0_HRS.HRS12 Field                    */
#define DMA_HRS_HRS13_MASK                       (0x2000U)                                           /**< DMA0_HRS.HRS13 Mask                     */
#define DMA_HRS_HRS13_SHIFT                      (13U)                                               /**< DMA0_HRS.HRS13 Position                 */
#define DMA_HRS_HRS13(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS13_SHIFT))&DMA_HRS_HRS13_MASK) /**< DMA0_HRS.HRS13 Field                    */
#define DMA_HRS_HRS14_MASK                       (0x4000U)                                           /**< DMA0_HRS.HRS14 Mask                     */
#define DMA_HRS_HRS14_SHIFT                      (14U)                                               /**< DMA0_HRS.HRS14 Position                 */
#define DMA_HRS_HRS14(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS14_SHIFT))&DMA_HRS_HRS14_MASK) /**< DMA0_HRS.HRS14 Field                    */
#define DMA_HRS_HRS15_MASK                       (0x8000U)                                           /**< DMA0_HRS.HRS15 Mask                     */
#define DMA_HRS_HRS15_SHIFT                      (15U)                                               /**< DMA0_HRS.HRS15 Position                 */
#define DMA_HRS_HRS15(x)                         (((uint32_t)(((uint32_t)(x))<<DMA_HRS_HRS15_SHIFT))&DMA_HRS_HRS15_MASK) /**< DMA0_HRS.HRS15 Field                    */
/** @} */

/** @name DCHPRI - Channel %s Priority Register */ /** @{ */
#define DMA_DCHPRI_CHPRI_MASK                    (0xFU)                                              /**< DMA0_DCHPRI.CHPRI Mask                  */
#define DMA_DCHPRI_CHPRI_SHIFT                   (0U)                                                /**< DMA0_DCHPRI.CHPRI Position              */
#define DMA_DCHPRI_CHPRI(x)                      (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_CHPRI_SHIFT))&DMA_DCHPRI_CHPRI_MASK) /**< DMA0_DCHPRI.CHPRI Field                 */
#define DMA_DCHPRI_DPA_MASK                      (0x40U)                                             /**< DMA0_DCHPRI.DPA Mask                    */
#define DMA_DCHPRI_DPA_SHIFT                     (6U)                                                /**< DMA0_DCHPRI.DPA Position                */
#define DMA_DCHPRI_DPA(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_DPA_SHIFT))&DMA_DCHPRI_DPA_MASK) /**< DMA0_DCHPRI.DPA Field                   */
#define DMA_DCHPRI_ECP_MASK                      (0x80U)                                             /**< DMA0_DCHPRI.ECP Mask                    */
#define DMA_DCHPRI_ECP_SHIFT                     (7U)                                                /**< DMA0_DCHPRI.ECP Position                */
#define DMA_DCHPRI_ECP(x)                        (((uint8_t)(((uint8_t)(x))<<DMA_DCHPRI_ECP_SHIFT))&DMA_DCHPRI_ECP_MASK) /**< DMA0_DCHPRI.ECP Field                   */
/** @} */

/** @name SADDR - Source Address */ /** @{ */
#define DMA_SADDR_SADDR_MASK                     (0xFFFFFFFFU)                                       /**< DMA0_SADDR.SADDR Mask                   */
#define DMA_SADDR_SADDR_SHIFT                    (0U)                                                /**< DMA0_SADDR.SADDR Position               */
#define DMA_SADDR_SADDR(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_SADDR_SADDR_SHIFT))&DMA_SADDR_SADDR_MASK) /**< DMA0_SADDR.SADDR Field                  */
/** @} */

/** @name SOFF - Signed Source Address Offset */ /** @{ */
#define DMA_SOFF_SOFF_MASK                       (0xFFFFU)                                           /**< DMA0_SOFF.SOFF Mask                     */
#define DMA_SOFF_SOFF_SHIFT                      (0U)                                                /**< DMA0_SOFF.SOFF Position                 */
#define DMA_SOFF_SOFF(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_SOFF_SOFF_SHIFT))&DMA_SOFF_SOFF_MASK) /**< DMA0_SOFF.SOFF Field                    */
/** @} */

/** @name ATTR - Transfer Attributes */ /** @{ */
#define DMA_ATTR_DSIZE_MASK                      (0x7U)                                              /**< DMA0_ATTR.DSIZE Mask                    */
#define DMA_ATTR_DSIZE_SHIFT                     (0U)                                                /**< DMA0_ATTR.DSIZE Position                */
#define DMA_ATTR_DSIZE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_DSIZE_SHIFT))&DMA_ATTR_DSIZE_MASK) /**< DMA0_ATTR.DSIZE Field                   */
#define DMA_ATTR_DMOD_MASK                       (0xF8U)                                             /**< DMA0_ATTR.DMOD Mask                     */
#define DMA_ATTR_DMOD_SHIFT                      (3U)                                                /**< DMA0_ATTR.DMOD Position                 */
#define DMA_ATTR_DMOD(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_DMOD_SHIFT))&DMA_ATTR_DMOD_MASK) /**< DMA0_ATTR.DMOD Field                    */
#define DMA_ATTR_SSIZE_MASK                      (0x700U)                                            /**< DMA0_ATTR.SSIZE Mask                    */
#define DMA_ATTR_SSIZE_SHIFT                     (8U)                                                /**< DMA0_ATTR.SSIZE Position                */
#define DMA_ATTR_SSIZE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_SSIZE_SHIFT))&DMA_ATTR_SSIZE_MASK) /**< DMA0_ATTR.SSIZE Field                   */
#define DMA_ATTR_SMOD_MASK                       (0xF800U)                                           /**< DMA0_ATTR.SMOD Mask                     */
#define DMA_ATTR_SMOD_SHIFT                      (11U)                                               /**< DMA0_ATTR.SMOD Position                 */
#define DMA_ATTR_SMOD(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_ATTR_SMOD_SHIFT))&DMA_ATTR_SMOD_MASK) /**< DMA0_ATTR.SMOD Field                    */
/** @} */

/** @name NBYTES_MLNO - Minor Byte Count (Minor Loop Disabled) */ /** @{ */
#define DMA_NBYTES_MLNO_NBYTES_MASK              (0xFFFFFFFFU)                                       /**< DMA0_NBYTES_MLNO.NBYTES Mask            */
#define DMA_NBYTES_MLNO_NBYTES_SHIFT             (0U)                                                /**< DMA0_NBYTES_MLNO.NBYTES Position        */
#define DMA_NBYTES_MLNO_NBYTES(x)                (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLNO_NBYTES_SHIFT))&DMA_NBYTES_MLNO_NBYTES_MASK) /**< DMA0_NBYTES_MLNO.NBYTES Field           */
/** @} */

/** @name NBYTES_MLOFFNO - Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled) */ /** @{ */
#define DMA_NBYTES_MLOFFNO_NBYTES_MASK           (0x3FFFFFFFU)                                       /**< DMA0_NBYTES_MLOFFNO.NBYTES Mask         */
#define DMA_NBYTES_MLOFFNO_NBYTES_SHIFT          (0U)                                                /**< DMA0_NBYTES_MLOFFNO.NBYTES Position     */
#define DMA_NBYTES_MLOFFNO_NBYTES(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFNO_NBYTES_SHIFT))&DMA_NBYTES_MLOFFNO_NBYTES_MASK) /**< DMA0_NBYTES_MLOFFNO.NBYTES Field        */
#define DMA_NBYTES_MLOFFNO_DMLOE_MASK            (0x40000000U)                                       /**< DMA0_NBYTES_MLOFFNO.DMLOE Mask          */
#define DMA_NBYTES_MLOFFNO_DMLOE_SHIFT           (30U)                                               /**< DMA0_NBYTES_MLOFFNO.DMLOE Position      */
#define DMA_NBYTES_MLOFFNO_DMLOE(x)              (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFNO_DMLOE_SHIFT))&DMA_NBYTES_MLOFFNO_DMLOE_MASK) /**< DMA0_NBYTES_MLOFFNO.DMLOE Field         */
#define DMA_NBYTES_MLOFFNO_SMLOE_MASK            (0x80000000U)                                       /**< DMA0_NBYTES_MLOFFNO.SMLOE Mask          */
#define DMA_NBYTES_MLOFFNO_SMLOE_SHIFT           (31U)                                               /**< DMA0_NBYTES_MLOFFNO.SMLOE Position      */
#define DMA_NBYTES_MLOFFNO_SMLOE(x)              (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFNO_SMLOE_SHIFT))&DMA_NBYTES_MLOFFNO_SMLOE_MASK) /**< DMA0_NBYTES_MLOFFNO.SMLOE Field         */
/** @} */

/** @name NBYTES_MLOFFYES - Signed Minor Loop Offset (Minor Loop and Offset Enabled) */ /** @{ */
#define DMA_NBYTES_MLOFFYES_NBYTES_MASK          (0x3FFU)                                            /**< DMA0_NBYTES_MLOFFYES.NBYTES Mask        */
#define DMA_NBYTES_MLOFFYES_NBYTES_SHIFT         (0U)                                                /**< DMA0_NBYTES_MLOFFYES.NBYTES Position    */
#define DMA_NBYTES_MLOFFYES_NBYTES(x)            (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_NBYTES_SHIFT))&DMA_NBYTES_MLOFFYES_NBYTES_MASK) /**< DMA0_NBYTES_MLOFFYES.NBYTES Field       */
#define DMA_NBYTES_MLOFFYES_MLOFF_MASK           (0x3FFFFC00U)                                       /**< DMA0_NBYTES_MLOFFYES.MLOFF Mask         */
#define DMA_NBYTES_MLOFFYES_MLOFF_SHIFT          (10U)                                               /**< DMA0_NBYTES_MLOFFYES.MLOFF Position     */
#define DMA_NBYTES_MLOFFYES_MLOFF(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_MLOFF_SHIFT))&DMA_NBYTES_MLOFFYES_MLOFF_MASK) /**< DMA0_NBYTES_MLOFFYES.MLOFF Field        */
#define DMA_NBYTES_MLOFFYES_DMLOE_MASK           (0x40000000U)                                       /**< DMA0_NBYTES_MLOFFYES.DMLOE Mask         */
#define DMA_NBYTES_MLOFFYES_DMLOE_SHIFT          (30U)                                               /**< DMA0_NBYTES_MLOFFYES.DMLOE Position     */
#define DMA_NBYTES_MLOFFYES_DMLOE(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_DMLOE_SHIFT))&DMA_NBYTES_MLOFFYES_DMLOE_MASK) /**< DMA0_NBYTES_MLOFFYES.DMLOE Field        */
#define DMA_NBYTES_MLOFFYES_SMLOE_MASK           (0x80000000U)                                       /**< DMA0_NBYTES_MLOFFYES.SMLOE Mask         */
#define DMA_NBYTES_MLOFFYES_SMLOE_SHIFT          (31U)                                               /**< DMA0_NBYTES_MLOFFYES.SMLOE Position     */
#define DMA_NBYTES_MLOFFYES_SMLOE(x)             (((uint32_t)(((uint32_t)(x))<<DMA_NBYTES_MLOFFYES_SMLOE_SHIFT))&DMA_NBYTES_MLOFFYES_SMLOE_MASK) /**< DMA0_NBYTES_MLOFFYES.SMLOE Field        */
/** @} */

/** @name SLAST - Last Source Address Adjustment */ /** @{ */
#define DMA_SLAST_SLAST_MASK                     (0xFFFFFFFFU)                                       /**< DMA0_SLAST.SLAST Mask                   */
#define DMA_SLAST_SLAST_SHIFT                    (0U)                                                /**< DMA0_SLAST.SLAST Position               */
#define DMA_SLAST_SLAST(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_SLAST_SLAST_SHIFT))&DMA_SLAST_SLAST_MASK) /**< DMA0_SLAST.SLAST Field                  */
/** @} */

/** @name DADDR - Destination Address */ /** @{ */
#define DMA_DADDR_DADDR_MASK                     (0xFFFFFFFFU)                                       /**< DMA0_DADDR.DADDR Mask                   */
#define DMA_DADDR_DADDR_SHIFT                    (0U)                                                /**< DMA0_DADDR.DADDR Position               */
#define DMA_DADDR_DADDR(x)                       (((uint32_t)(((uint32_t)(x))<<DMA_DADDR_DADDR_SHIFT))&DMA_DADDR_DADDR_MASK) /**< DMA0_DADDR.DADDR Field                  */
/** @} */

/** @name DOFF - Signed Destination Address Offset */ /** @{ */
#define DMA_DOFF_DOFF_MASK                       (0xFFFFU)                                           /**< DMA0_DOFF.DOFF Mask                     */
#define DMA_DOFF_DOFF_SHIFT                      (0U)                                                /**< DMA0_DOFF.DOFF Position                 */
#define DMA_DOFF_DOFF(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_DOFF_DOFF_SHIFT))&DMA_DOFF_DOFF_MASK) /**< DMA0_DOFF.DOFF Field                    */
/** @} */

/** @name CITER_ELINKNO - Current Minor Loop Link, Major Loop Count (Channel Linking Disabled) */ /** @{ */
#define DMA_CITER_ELINKNO_CITER_MASK             (0x7FFFU)                                           /**< DMA0_CITER_ELINKNO.CITER Mask           */
#define DMA_CITER_ELINKNO_CITER_SHIFT            (0U)                                                /**< DMA0_CITER_ELINKNO.CITER Position       */
#define DMA_CITER_ELINKNO_CITER(x)               (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKNO_CITER_SHIFT))&DMA_CITER_ELINKNO_CITER_MASK) /**< DMA0_CITER_ELINKNO.CITER Field          */
#define DMA_CITER_ELINKNO_ELINK_MASK             (0x8000U)                                           /**< DMA0_CITER_ELINKNO.ELINK Mask           */
#define DMA_CITER_ELINKNO_ELINK_SHIFT            (15U)                                               /**< DMA0_CITER_ELINKNO.ELINK Position       */
#define DMA_CITER_ELINKNO_ELINK(x)               (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKNO_ELINK_SHIFT))&DMA_CITER_ELINKNO_ELINK_MASK) /**< DMA0_CITER_ELINKNO.ELINK Field          */
/** @} */

/** @name CITER_ELINKYES - Current Minor Loop Link, Major Loop Count (Channel Linking Enabled) */ /** @{ */
#define DMA_CITER_ELINKYES_CITER_MASK            (0x1FFU)                                            /**< DMA0_CITER_ELINKYES.CITER Mask          */
#define DMA_CITER_ELINKYES_CITER_SHIFT           (0U)                                                /**< DMA0_CITER_ELINKYES.CITER Position      */
#define DMA_CITER_ELINKYES_CITER(x)              (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_CITER_SHIFT))&DMA_CITER_ELINKYES_CITER_MASK) /**< DMA0_CITER_ELINKYES.CITER Field         */
#define DMA_CITER_ELINKYES_LINKCH_MASK           (0x1E00U)                                           /**< DMA0_CITER_ELINKYES.LINKCH Mask         */
#define DMA_CITER_ELINKYES_LINKCH_SHIFT          (9U)                                                /**< DMA0_CITER_ELINKYES.LINKCH Position     */
#define DMA_CITER_ELINKYES_LINKCH(x)             (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_LINKCH_SHIFT))&DMA_CITER_ELINKYES_LINKCH_MASK) /**< DMA0_CITER_ELINKYES.LINKCH Field        */
#define DMA_CITER_ELINKYES_ELINK_MASK            (0x8000U)                                           /**< DMA0_CITER_ELINKYES.ELINK Mask          */
#define DMA_CITER_ELINKYES_ELINK_SHIFT           (15U)                                               /**< DMA0_CITER_ELINKYES.ELINK Position      */
#define DMA_CITER_ELINKYES_ELINK(x)              (((uint16_t)(((uint16_t)(x))<<DMA_CITER_ELINKYES_ELINK_SHIFT))&DMA_CITER_ELINKYES_ELINK_MASK) /**< DMA0_CITER_ELINKYES.ELINK Field         */
/** @} */

/** @name DLASTSGA - Last Destination Address Adjustment/Scatter Gather Address */ /** @{ */
#define DMA_DLASTSGA_DLASTSGA_MASK               (0xFFFFFFFFU)                                       /**< DMA0_DLASTSGA.DLASTSGA Mask             */
#define DMA_DLASTSGA_DLASTSGA_SHIFT              (0U)                                                /**< DMA0_DLASTSGA.DLASTSGA Position         */
#define DMA_DLASTSGA_DLASTSGA(x)                 (((uint32_t)(((uint32_t)(x))<<DMA_DLASTSGA_DLASTSGA_SHIFT))&DMA_DLASTSGA_DLASTSGA_MASK) /**< DMA0_DLASTSGA.DLASTSGA Field            */
/** @} */

/** @name CSR - Control and Status */ /** @{ */
#define DMA_CSR_START_MASK                       (0x1U)                                              /**< DMA0_CSR.START Mask                     */
#define DMA_CSR_START_SHIFT                      (0U)                                                /**< DMA0_CSR.START Position                 */
#define DMA_CSR_START(x)                         (((uint16_t)(((uint16_t)(x))<<DMA_CSR_START_SHIFT))&DMA_CSR_START_MASK) /**< DMA0_CSR.START Field                    */
#define DMA_CSR_INTMAJOR_MASK                    (0x2U)                                              /**< DMA0_CSR.INTMAJOR Mask                  */
#define DMA_CSR_INTMAJOR_SHIFT                   (1U)                                                /**< DMA0_CSR.INTMAJOR Position              */
#define DMA_CSR_INTMAJOR(x)                      (((uint16_t)(((uint16_t)(x))<<DMA_CSR_INTMAJOR_SHIFT))&DMA_CSR_INTMAJOR_MASK) /**< DMA0_CSR.INTMAJOR Field                 */
#define DMA_CSR_INTHALF_MASK                     (0x4U)                                              /**< DMA0_CSR.INTHALF Mask                   */
#define DMA_CSR_INTHALF_SHIFT                    (2U)                                                /**< DMA0_CSR.INTHALF Position               */
#define DMA_CSR_INTHALF(x)                       (((uint16_t)(((uint16_t)(x))<<DMA_CSR_INTHALF_SHIFT))&DMA_CSR_INTHALF_MASK) /**< DMA0_CSR.INTHALF Field                  */
#define DMA_CSR_DREQ_MASK                        (0x8U)                                              /**< DMA0_CSR.DREQ Mask                      */
#define DMA_CSR_DREQ_SHIFT                       (3U)                                                /**< DMA0_CSR.DREQ Position                  */
#define DMA_CSR_DREQ(x)                          (((uint16_t)(((uint16_t)(x))<<DMA_CSR_DREQ_SHIFT))&DMA_CSR_DREQ_MASK) /**< DMA0_CSR.DREQ Field                     */
#define DMA_CSR_ESG_MASK                         (0x10U)                                             /**< DMA0_CSR.ESG Mask                       */
#define DMA_CSR_ESG_SHIFT                        (4U)                                                /**< DMA0_CSR.ESG Position                   */
#define DMA_CSR_ESG(x)                           (((uint16_t)(((uint16_t)(x))<<DMA_CSR_ESG_SHIFT))&DMA_CSR_ESG_MASK) /**< DMA0_CSR.ESG Field                      */
#define DMA_CSR_MAJORELINK_MASK                  (0x20U)                                             /**< DMA0_CSR.MAJORELINK Mask                */
#define DMA_CSR_MAJORELINK_SHIFT                 (5U)                                                /**< DMA0_CSR.MAJORELINK Position            */
#define DMA_CSR_MAJORELINK(x)                    (((uint16_t)(((uint16_t)(x))<<DMA_CSR_MAJORELINK_SHIFT))&DMA_CSR_MAJORELINK_MASK) /**< DMA0_CSR.MAJORELINK Field               */
#define DMA_CSR_ACTIVE_MASK                      (0x40U)                                             /**< DMA0_CSR.ACTIVE Mask                    */
#define DMA_CSR_ACTIVE_SHIFT                     (6U)                                                /**< DMA0_CSR.ACTIVE Position                */
#define DMA_CSR_ACTIVE(x)                        (((uint16_t)(((uint16_t)(x))<<DMA_CSR_ACTIVE_SHIFT))&DMA_CSR_ACTIVE_MASK) /**< DMA0_CSR.ACTIVE Field                   */
#define DMA_CSR_DONE_MASK                        (0x80U)                                             /**< DMA0_CSR.DONE Mask                      */
#define DMA_CSR_DONE_SHIFT                       (7U)                                                /**< DMA0_CSR.DONE Position                  */
#define DMA_CSR_DONE(x)                          (((uint16_t)(((uint16_t)(x))<<DMA_CSR_DONE_SHIFT))&DMA_CSR_DONE_MASK) /**< DMA0_CSR.DONE Field                     */
#define DMA_CSR_MAJORLINKCH_MASK                 (0xF00U)                                            /**< DMA0_CSR.MAJORLINKCH Mask               */
#define DMA_CSR_MAJORLINKCH_SHIFT                (8U)                                                /**< DMA0_CSR.MAJORLINKCH Position           */
#define DMA_CSR_MAJORLINKCH(x)                   (((uint16_t)(((uint16_t)(x))<<DMA_CSR_MAJORLINKCH_SHIFT))&DMA_CSR_MAJORLINKCH_MASK) /**< DMA0_CSR.MAJORLINKCH Field              */
#define DMA_CSR_BWC_MASK                         (0xC000U)                                           /**< DMA0_CSR.BWC Mask                       */
#define DMA_CSR_BWC_SHIFT                        (14U)                                               /**< DMA0_CSR.BWC Position                   */
#define DMA_CSR_BWC(x)                           (((uint16_t)(((uint16_t)(x))<<DMA_CSR_BWC_SHIFT))&DMA_CSR_BWC_MASK) /**< DMA0_CSR.BWC Field                      */
/** @} */

/** @name BITER_ELINKNO - Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled) */ /** @{ */
#define DMA_BITER_ELINKNO_BITER_MASK             (0x7FFFU)                                           /**< DMA0_BITER_ELINKNO.BITER Mask           */
#define DMA_BITER_ELINKNO_BITER_SHIFT            (0U)                                                /**< DMA0_BITER_ELINKNO.BITER Position       */
#define DMA_BITER_ELINKNO_BITER(x)               (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKNO_BITER_SHIFT))&DMA_BITER_ELINKNO_BITER_MASK) /**< DMA0_BITER_ELINKNO.BITER Field          */
#define DMA_BITER_ELINKNO_ELINK_MASK             (0x8000U)                                           /**< DMA0_BITER_ELINKNO.ELINK Mask           */
#define DMA_BITER_ELINKNO_ELINK_SHIFT            (15U)                                               /**< DMA0_BITER_ELINKNO.ELINK Position       */
#define DMA_BITER_ELINKNO_ELINK(x)               (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKNO_ELINK_SHIFT))&DMA_BITER_ELINKNO_ELINK_MASK) /**< DMA0_BITER_ELINKNO.ELINK Field          */
/** @} */

/** @name BITER_ELINKYES - Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled) */ /** @{ */
#define DMA_BITER_ELINKYES_BITER_MASK            (0x1FFU)                                            /**< DMA0_BITER_ELINKYES.BITER Mask          */
#define DMA_BITER_ELINKYES_BITER_SHIFT           (0U)                                                /**< DMA0_BITER_ELINKYES.BITER Position      */
#define DMA_BITER_ELINKYES_BITER(x)              (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_BITER_SHIFT))&DMA_BITER_ELINKYES_BITER_MASK) /**< DMA0_BITER_ELINKYES.BITER Field         */
#define DMA_BITER_ELINKYES_LINKCH_MASK           (0x1E00U)                                           /**< DMA0_BITER_ELINKYES.LINKCH Mask         */
#define DMA_BITER_ELINKYES_LINKCH_SHIFT          (9U)                                                /**< DMA0_BITER_ELINKYES.LINKCH Position     */
#define DMA_BITER_ELINKYES_LINKCH(x)             (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_LINKCH_SHIFT))&DMA_BITER_ELINKYES_LINKCH_MASK) /**< DMA0_BITER_ELINKYES.LINKCH Field        */
#define DMA_BITER_ELINKYES_ELINK_MASK            (0x8000U)                                           /**< DMA0_BITER_ELINKYES.ELINK Mask          */
#define DMA_BITER_ELINKYES_ELINK_SHIFT           (15U)                                               /**< DMA0_BITER_ELINKYES.ELINK Position      */
#define DMA_BITER_ELINKYES_ELINK(x)              (((uint16_t)(((uint16_t)(x))<<DMA_BITER_ELINKYES_ELINK_SHIFT))&DMA_BITER_ELINKYES_ELINK_MASK) /**< DMA0_BITER_ELINKYES.ELINK Field         */
/** @} */

/** @} */ /* End group DMA0_Register_Masks_GROUP */


/* DMA0 - Peripheral instance base addresses */
#define DMA0_BasePtr                   0x40008000UL //!< Peripheral base address
#define DMA0                           ((DMA_Type *) DMA0_BasePtr) //!< Freescale base pointer
#define DMA0_BASE_PTR                  (DMA0) //!< Freescale style base pointer
#define DMA0_IRQS { DMA0_IRQn, DMA1_IRQn, DMA2_IRQn, DMA3_IRQn, DMA4_IRQn, DMA5_IRQn, DMA6_IRQn, DMA7_IRQn, DMA8_IRQn, DMA9_IRQn, DMA10_IRQn, DMA11_IRQn, DMA12_IRQn, DMA13_IRQn, DMA14_IRQn, DMA15_IRQn, DMA_Error_IRQn,  }


/** @} */ /* End group DMA0_Peripheral_access_layer_GROUP */


/** @brief C Struct for DMAMUX */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup DMAMUX_Peripheral_access_layer_GROUP DMAMUX Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           DMAMUX0 (file:DMAMUX0_16CH_TRIG)       ================ */
/* ================================================================================ */

/**
 * @brief DMA channel multiplexor
 */
/**
 * @struct DMAMUX_Type
 * @brief  C Struct allowing access to DMAMUX registers
 */
typedef struct DMAMUX_Type {
   __IO uint8_t   CHCFG[16];                    /**< 0000: Channel Configuration Register                               */
} DMAMUX_Type;


/** @brief Register Masks for DMAMUX */

/* -------------------------------------------------------------------------------- */
/* -----------     'DMAMUX0' Position & Mask macros                     ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup DMAMUX_Register_Masks_GROUP DMAMUX Register Masks */
/** @{ */

/** @name CHCFG - Channel Configuration Register */ /** @{ */
#define DMAMUX_CHCFG_SOURCE_MASK                 (0x3FU)                                             /**< DMAMUX0_CHCFG.SOURCE Mask               */
#define DMAMUX_CHCFG_SOURCE_SHIFT                (0U)                                                /**< DMAMUX0_CHCFG.SOURCE Position           */
#define DMAMUX_CHCFG_SOURCE(x)                   (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_SOURCE_SHIFT))&DMAMUX_CHCFG_SOURCE_MASK) /**< DMAMUX0_CHCFG.SOURCE Field              */
#define DMAMUX_CHCFG_TRIG_MASK                   (0x40U)                                             /**< DMAMUX0_CHCFG.TRIG Mask                 */
#define DMAMUX_CHCFG_TRIG_SHIFT                  (6U)                                                /**< DMAMUX0_CHCFG.TRIG Position             */
#define DMAMUX_CHCFG_TRIG(x)                     (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_TRIG_SHIFT))&DMAMUX_CHCFG_TRIG_MASK) /**< DMAMUX0_CHCFG.TRIG Field                */
#define DMAMUX_CHCFG_ENBL_MASK                   (0x80U)                                             /**< DMAMUX0_CHCFG.ENBL Mask                 */
#define DMAMUX_CHCFG_ENBL_SHIFT                  (7U)                                                /**< DMAMUX0_CHCFG.ENBL Position             */
#define DMAMUX_CHCFG_ENBL(x)                     (((uint8_t)(((uint8_t)(x))<<DMAMUX_CHCFG_ENBL_SHIFT))&DMAMUX_CHCFG_ENBL_MASK) /**< DMAMUX0_CHCFG.ENBL Field                */
/** @} */

/** @} */ /* End group DMAMUX_Register_Masks_GROUP */


/* DMAMUX0 - Peripheral instance base addresses */
#define DMAMUX0_BasePtr                0x40021000UL //!< Peripheral base address
#define DMAMUX0                        ((DMAMUX_Type *) DMAMUX0_BasePtr) //!< Freescale base pointer
#define DMAMUX0_BASE_PTR               (DMAMUX0) //!< Freescale style base pointer

/**
 * DMA multiplexor slot (source) numbers
 */
typedef enum DmaSlot {
   Dma0Slot_Disabled                   =        0, //!<  Disabled
   Dma0Slot_Slot1                      =        1, //!<  Slot1
   Dma0Slot_Slot2                      =        2, //!<  Slot2
   Dma0Slot_Slot3                      =        3, //!<  Slot3
   Dma0Slot_Slot4                      =        4, //!<  Slot4
   Dma0Slot_Slot5                      =        5, //!<  Slot5
   Dma0Slot_Slot6                      =        6, //!<  Slot6
   Dma0Slot_Slot7                      =        7, //!<  Slot7
   Dma0Slot_Slot8                      =        8, //!<  Slot8
   Dma0Slot_Slot9                      =        9, //!<  Slot9
   Dma0Slot_Slot10                     =       10, //!<  Slot10
   Dma0Slot_Slot11                     =       11, //!<  Slot11
   Dma0Slot_Slot12                     =       12, //!<  Slot12
   Dma0Slot_Slot13                     =       13, //!<  Slot13
   Dma0Slot_Slot14                     =       14, //!<  Slot14
   Dma0Slot_Slot15                     =       15, //!<  Slot15
   Dma0Slot_Slot16                     =       16, //!<  Slot16
   Dma0Slot_Slot17                     =       17, //!<  Slot17
   Dma0Slot_Slot18                     =       18, //!<  Slot18
   Dma0Slot_Slot19                     =       19, //!<  Slot19
   Dma0Slot_Slot20                     =       20, //!<  Slot20
   Dma0Slot_Slot21                     =       21, //!<  Slot21
   Dma0Slot_Slot22                     =       22, //!<  Slot22
   Dma0Slot_Slot23                     =       23, //!<  Slot23
   Dma0Slot_Slot24                     =       24, //!<  Slot24
   Dma0Slot_Slot25                     =       25, //!<  Slot25
   Dma0Slot_Slot26                     =       26, //!<  Slot26
   Dma0Slot_Slot27                     =       27, //!<  Slot27
   Dma0Slot_Slot28                     =       28, //!<  Slot28
   Dma0Slot_Slot29                     =       29, //!<  Slot29
   Dma0Slot_Slot30                     =       30, //!<  Slot30
   Dma0Slot_Slot31                     =       31, //!<  Slot31
   Dma0Slot_Slot32                     =       32, //!<  Slot32
   Dma0Slot_Slot33                     =       33, //!<  Slot33
   Dma0Slot_Slot34                     =       34, //!<  Slot34
   Dma0Slot_Slot35                     =       35, //!<  Slot35
   Dma0Slot_Slot36                     =       36, //!<  Slot36
   Dma0Slot_Slot37                     =       37, //!<  Slot37
   Dma0Slot_Slot38                     =       38, //!<  Slot38
   Dma0Slot_Slot39                     =       39, //!<  Slot39
   Dma0Slot_Slot40                     =       40, //!<  Slot40
   Dma0Slot_Slot41                     =       41, //!<  Slot41
   Dma0Slot_Slot42                     =       42, //!<  Slot42
   Dma0Slot_Slot43                     =       43, //!<  Slot43
   Dma0Slot_Slot44                     =       44, //!<  Slot44
   Dma0Slot_Slot45                     =       45, //!<  Slot45
   Dma0Slot_Slot46                     =       46, //!<  Slot46
   Dma0Slot_Slot47                     =       47, //!<  Slot47
   Dma0Slot_Slot48                     =       48, //!<  Slot48
   Dma0Slot_Slot49                     =       49, //!<  Slot49
   Dma0Slot_Slot50                     =       50, //!<  Slot50
   Dma0Slot_Slot51                     =       51, //!<  Slot51
   Dma0Slot_Slot52                     =       52, //!<  Slot52
   Dma0Slot_Slot53                     =       53, //!<  Slot53
   Dma0Slot_Slot54                     =       54, //!<  Slot54
   Dma0Slot_Slot55                     =       55, //!<  Slot55
   Dma0Slot_Slot56                     =       56, //!<  Slot56
   Dma0Slot_Slot57                     =       57, //!<  Slot57
   Dma0Slot_Slot58                     =       58, //!<  Slot58
   Dma0Slot_Slot59                     =       59, //!<  Slot59
   Dma0Slot_AlwaysEnabled60            =       60, //!<  AlwaysEnabled60
   Dma0Slot_AlwaysEnabled61            =       61, //!<  AlwaysEnabled61
   Dma0Slot_AlwaysEnabled62            =       62, //!<  AlwaysEnabled62
   Dma0Slot_AlwaysEnabled63            =       63, //!<  AlwaysEnabled63
} DmaSlot;


/** @} */ /* End group DMAMUX_Peripheral_access_layer_GROUP */


/** @brief C Struct for ENET */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup ENET_Peripheral_access_layer_GROUP ENET Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           ENET (file:ENET_B)                   ================ */
/* ================================================================================ */

/**
 * @brief Ethernet MAC-NET Core
 */
/**
 * @struct ENET_Type
 * @brief  C Struct allowing access to ENET registers
 */
typedef struct ENET_Type {
        uint8_t   RESERVED_0[4];                /**< 0000: 0x4 bytes                                                    */
   __IO uint32_t  EIR;                          /**< 0004: Interrupt Event Register                                     */
   __IO uint32_t  EIMR;                         /**< 0008: Interrupt Mask Register                                      */
        uint8_t   RESERVED_1[4];                /**< 000C: 0x4 bytes                                                    */
   __IO uint32_t  RDAR;                         /**< 0010: Receive Descriptor Active Register                           */
   __IO uint32_t  TDAR;                         /**< 0014: Transmit Descriptor Active Register                          */
        uint8_t   RESERVED_2[12];               /**< 0018: 0xC bytes                                                    */
   __IO uint32_t  ECR;                          /**< 0024: Ethernet Control Register                                    */
        uint8_t   RESERVED_3[24];               /**< 0028: 0x18 bytes                                                   */
   __IO uint32_t  MMFR;                         /**< 0040: MII Management Frame Register                                */
   __IO uint32_t  MSCR;                         /**< 0044: MII Speed Control Register                                   */
        uint8_t   RESERVED_4[28];               /**< 0048: 0x1C bytes                                                   */
   __IO uint32_t  MIBC;                         /**< 0064: MIB Control Register                                         */
        uint8_t   RESERVED_5[28];               /**< 0068: 0x1C bytes                                                   */
   __IO uint32_t  RCR;                          /**< 0084: Receive Control Register                                     */
        uint8_t   RESERVED_6[60];               /**< 0088: 0x3C bytes                                                   */
   __IO uint32_t  TCR;                          /**< 00C4: Transmit Control Register                                    */
        uint8_t   RESERVED_7[28];               /**< 00C8: 0x1C bytes                                                   */
   __IO uint32_t  PALR;                         /**< 00E4: Physical Address Lower Register                              */
   __IO uint32_t  PAUR;                         /**< 00E8: Physical Address Upper Register                              */
   __IO uint32_t  OPD;                          /**< 00EC: Opcode/Pause Duration Register                               */
        uint8_t   RESERVED_8[40];               /**< 00F0: 0x28 bytes                                                   */
   __IO uint32_t  IAUR;                         /**< 0118: Descriptor Individual Upper Address Register                 */
   __IO uint32_t  IALR;                         /**< 011C: Descriptor Individual Lower Address Register                 */
   __IO uint32_t  GAUR;                         /**< 0120: Descriptor Group Upper Address Register                      */
   __IO uint32_t  GALR;                         /**< 0124: Descriptor Group Lower Address Register                      */
        uint8_t   RESERVED_9[28];               /**< 0128: 0x1C bytes                                                   */
   __IO uint32_t  TFWR;                         /**< 0144: Transmit FIFO Watermark Register                             */
        uint8_t   RESERVED_10[56];              /**< 0148: 0x38 bytes                                                   */
   __IO uint32_t  RDSR;                         /**< 0180: Receive Descriptor Ring Start Register                       */
   __IO uint32_t  TDSR;                         /**< 0184: Transmit Buffer Descriptor Ring Start Register               */
   __IO uint32_t  MRBR;                         /**< 0188: Maximum Receive Buffer Size Register                         */
        uint8_t   RESERVED_11[4];               /**< 018C: 0x4 bytes                                                    */
   __IO uint32_t  RSFL;                         /**< 0190: Receive FIFO Section Full Threshold                          */
   __IO uint32_t  RSEM;                         /**< 0194: Receive FIFO Section Empty Threshold                         */
   __IO uint32_t  RAEM;                         /**< 0198: Receive FIFO Almost Empty Threshold                          */
   __IO uint32_t  RAFL;                         /**< 019C: Receive FIFO Almost Full Threshold                           */
   __IO uint32_t  TSEM;                         /**< 01A0: Transmit FIFO Section Empty Threshold                        */
   __IO uint32_t  TAEM;                         /**< 01A4: Transmit FIFO Almost Empty Threshold                         */
   __IO uint32_t  TAFL;                         /**< 01A8: Transmit FIFO Almost Full Threshold                          */
   __IO uint32_t  TIPG;                         /**< 01AC: Transmit Inter-Packet Gap                                    */
   __IO uint32_t  FTRL;                         /**< 01B0: Frame Truncation Length                                      */
        uint8_t   RESERVED_12[12];              /**< 01B4: 0xC bytes                                                    */
   __IO uint32_t  TACC;                         /**< 01C0: Transmit Accelerator Function Configuration                  */
   __IO uint32_t  RACC;                         /**< 01C4: Receive Accelerator Function Configuration                   */
        uint8_t   RESERVED_13[56];              /**< 01C8: 0x38 bytes                                                   */
   __I  uint32_t  RMON_T_DROP;                  /**< 0200: Reserved Statistic Register                                  */
   __I  uint32_t  RMON_T_PACKETS;               /**< 0204: RMON Tx packet count                                         */
   __I  uint32_t  RMON_T_BC_PKT;                /**< 0208: Tx Broadcast Packets Statistic Register                      */
   __I  uint32_t  RMON_T_MC_PKT;                /**< 020C: Tx Multicast Packets Statistic Register                      */
   __I  uint32_t  RMON_T_CRC_ALIGN;             /**< 0210: Tx Packets with CRC/Align Error Statistic Register           */
   __I  uint32_t  RMON_T_UNDERSIZE;             /**< 0214: Tx Packets Less Than Bytes and Good CRC Statistic Register   */
   __I  uint32_t  RMON_T_OVERSIZE;              /**< 0218: Tx Packets GT MAX_FL bytes and Good CRC Statistic Register   */
   __I  uint32_t  RMON_T_FRAG;                  /**< 021C: Tx Packets Less Than 64 Bytes and Bad CRC Statistic Register */
   __I  uint32_t  RMON_T_JAB;                   /**< 0220: Tx Packets Greater Than MAX_FL bytes and Bad CRC Statistic Register */
   __I  uint32_t  RMON_T_COL;                   /**< 0224: Tx Collision Count Statistic Register                        */
   __I  uint32_t  RMON_T_P64;                   /**< 0228: Tx 64-Byte Packets Statistic Register                        */
   __I  uint32_t  RMON_T_P65TO127;              /**< 022C: Tx 65- to 127-byte Packets Statistic Register                */
   __I  uint32_t  RMON_T_P128TO255;             /**< 0230: Tx 128- to 255-byte Packets Statistic Register               */
   __I  uint32_t  RMON_T_P256TO511;             /**< 0234: Tx 256- to 511-byte Packets Statistic Register               */
   __I  uint32_t  RMON_T_P512TO1023;            /**< 0238: Tx 512- to 1023-byte Packets Statistic Register              */
   __I  uint32_t  RMON_T_P1024TO2047;           /**< 023C: Tx 1024- to 2047-byte Packets Statistic Register             */
   __I  uint32_t  RMON_T_P_GTE2048;             /**< 0240: Tx Packets Greater Than 2048 Bytes Statistic Register        */
   __I  uint32_t  RMON_T_OCTETS;                /**< 0244: Tx Octets Statistic Register                                 */
   __I  uint32_t  IEEE_T_DROP;                  /**< 0248: Reserved Statistic Register                                  */
   __I  uint32_t  IEEE_T_FRAME_OK;              /**< 024C: Frames Transmitted OK Statistic Register                     */
   __I  uint32_t  IEEE_T_1COL;                  /**< 0250: Frames Transmitted with Single Collision Statistic Register  */
   __I  uint32_t  IEEE_T_MCOL;                  /**< 0254: Frames Transmitted with Multiple Collisions Statistic Register */
   __I  uint32_t  IEEE_T_DEF;                   /**< 0258: Frames Transmitted after Deferral Delay Statistic Register   */
   __I  uint32_t  IEEE_T_LCOL;                  /**< 025C: Frames Transmitted with Late Collision Statistic Register    */
   __I  uint32_t  IEEE_T_EXCOL;                 /**< 0260: Frames Transmitted with Excessive Collisions Statistic Register */
   __I  uint32_t  IEEE_T_MACERR;                /**< 0264: Frames Transmitted with Tx FIFO Underrun Statistic Register  */
   __I  uint32_t  IEEE_T_CSERR;                 /**< 0268: Frames Transmitted with Carrier Sense Error Statistic Register */
   __I  uint32_t  IEEE_T_SQE;                   /**< 026C: Reserved Statistic Register                                  */
   __I  uint32_t  IEEE_T_FDXFC;                 /**< 0270: Flow Control Pause Frames Transmitted Statistic Register     */
   __I  uint32_t  IEEE_T_OCTETS_OK;             /**< 0274: Octet Count for Frames Transmitted w/o Error Statistic Register */
        uint8_t   RESERVED_14[12];              /**< 0278: 0xC bytes                                                    */
   __I  uint32_t  RMON_R_PACKETS;               /**< 0284: Rx Packet Count Statistic Register                           */
   __I  uint32_t  RMON_R_BC_PKT;                /**< 0288: Rx Broadcast Packets Statistic Register                      */
   __I  uint32_t  RMON_R_MC_PKT;                /**< 028C: Rx Multicast Packets Statistic Register                      */
   __I  uint32_t  RMON_R_CRC_ALIGN;             /**< 0290: Rx Packets with CRC/Align Error Statistic Register           */
   __I  uint32_t  RMON_R_UNDERSIZE;             /**< 0294: Rx Packets with Less Than 64 Bytes and Good CRC Statistic Register */
   __I  uint32_t  RMON_R_OVERSIZE;              /**< 0298: Rx Packets Greater Than MAX_FL and Good CRC Statistic Register */
   __I  uint32_t  RMON_R_FRAG;                  /**< 029C: Rx Packets Less Than 64 Bytes and Bad CRC Statistic Register */
   __I  uint32_t  RMON_R_JAB;                   /**< 02A0: Rx Packets Greater Than MAX_FL Bytes and Bad CRC Statistic Register */
   __I  uint32_t  RMON_R_RESVD_0;               /**< 02A4: Reserved Statistic Register                                  */
   __I  uint32_t  RMON_R_P64;                   /**< 02A8: Rx 64-Byte Packets Statistic Register                        */
   __I  uint32_t  RMON_R_P65TO127;              /**< 02AC: Rx 65- to 127-Byte Packets Statistic Register                */
   __I  uint32_t  RMON_R_P128TO255;             /**< 02B0: Rx 128- to 255-Byte Packets Statistic Register               */
   __I  uint32_t  RMON_R_P256TO511;             /**< 02B4: Rx 256- to 511-Byte Packets Statistic Register               */
   __I  uint32_t  RMON_R_P512TO1023;            /**< 02B8: Rx 512- to 1023-Byte Packets Statistic Register              */
   __I  uint32_t  RMON_R_P1024TO2047;           /**< 02BC: Rx 1024- to 2047-Byte Packets Statistic Register             */
   __I  uint32_t  RMON_R_P_GTE2048;             /**< 02C0: Rx Packets Greater than 2048 Bytes Statistic Register        */
   __I  uint32_t  RMON_R_OCTETS;                /**< 02C4: Rx Octets Statistic Register                                 */
   __I  uint32_t  IEEE_R_DROP;                  /**< 02C8: Frames not Counted Correctly Statistic Register              */
   __I  uint32_t  IEEE_R_FRAME_OK;              /**< 02CC: Frames Received OK Statistic Register                        */
   __I  uint32_t  IEEE_R_CRC;                   /**< 02D0: Frames Received with CRC Error Statistic Register            */
   __I  uint32_t  IEEE_R_ALIGN;                 /**< 02D4: Frames Received with Alignment Error Statistic Register      */
   __I  uint32_t  IEEE_R_MACERR;                /**< 02D8: Receive FIFO Overflow Count Statistic Register               */
   __I  uint32_t  IEEE_R_FDXFC;                 /**< 02DC: Flow Control Pause Frames Received Statistic Register        */
   __I  uint32_t  IEEE_R_OCTETS_OK;             /**< 02E0: Octet Count for Frames Received without Error Statistic Register */
        uint8_t   RESERVED_15[284];             /**< 02E4: 0x11C bytes                                                  */
   __IO uint32_t  ATCR;                         /**< 0400: Adjustable Timer Control Register                            */
   __IO uint32_t  ATVR;                         /**< 0404: Timer Value Register                                         */
   __IO uint32_t  ATOFF;                        /**< 0408: Timer Offset Register                                        */
   __IO uint32_t  ATPER;                        /**< 040C: Timer Period Register                                        */
   __IO uint32_t  ATCOR;                        /**< 0410: Timer Correction Register                                    */
   __IO uint32_t  ATINC;                        /**< 0414: Time-Stamping Clock Period Register                          */
   __I  uint32_t  ATSTMP;                       /**< 0418: Timestamp of Last Transmitted Frame                          */
        uint8_t   RESERVED_16[488];             /**< 041C: 0x1E8 bytes                                                  */
   __IO uint32_t  TGSR;                         /**< 0604: Timer Global Status Register                                 */
   __IO uint32_t  TCSR0;                        /**< 0608: Timer Control Status Register                                */
   __IO uint32_t  TCCR0;                        /**< 060C: Timer Compare Capture Register                               */
   __IO uint32_t  TCSR1;                        /**< 0610: Timer Control Status Register                                */
   __IO uint32_t  TCCR1;                        /**< 0614: Timer Compare Capture Register                               */
   __IO uint32_t  TCSR2;                        /**< 0618: Timer Control Status Register                                */
   __IO uint32_t  TCCR2;                        /**< 061C: Timer Compare Capture Register                               */
   __IO uint32_t  TCSR3;                        /**< 0620: Timer Control Status Register                                */
   __IO uint32_t  TCCR3;                        /**< 0624: Timer Compare Capture Register                               */
} ENET_Type;


/** @brief Register Masks for ENET */

/* -------------------------------------------------------------------------------- */
/* -----------     'ENET' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup ENET_Register_Masks_GROUP ENET Register Masks */
/** @{ */

/** @name EIR - Interrupt Event Register */ /** @{ */
#define ENET_EIR_TS_TIMER_MASK                   (0x8000U)                                           /**< ENET_EIR.TS_TIMER Mask                  */
#define ENET_EIR_TS_TIMER_SHIFT                  (15U)                                               /**< ENET_EIR.TS_TIMER Position              */
#define ENET_EIR_TS_TIMER(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TS_TIMER_SHIFT))&ENET_EIR_TS_TIMER_MASK) /**< ENET_EIR.TS_TIMER Field                 */
#define ENET_EIR_TS_AVAIL_MASK                   (0x10000U)                                          /**< ENET_EIR.TS_AVAIL Mask                  */
#define ENET_EIR_TS_AVAIL_SHIFT                  (16U)                                               /**< ENET_EIR.TS_AVAIL Position              */
#define ENET_EIR_TS_AVAIL(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TS_AVAIL_SHIFT))&ENET_EIR_TS_AVAIL_MASK) /**< ENET_EIR.TS_AVAIL Field                 */
#define ENET_EIR_WAKEUP_MASK                     (0x20000U)                                          /**< ENET_EIR.WAKEUP Mask                    */
#define ENET_EIR_WAKEUP_SHIFT                    (17U)                                               /**< ENET_EIR.WAKEUP Position                */
#define ENET_EIR_WAKEUP(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_EIR_WAKEUP_SHIFT))&ENET_EIR_WAKEUP_MASK) /**< ENET_EIR.WAKEUP Field                   */
#define ENET_EIR_PLR_MASK                        (0x40000U)                                          /**< ENET_EIR.PLR Mask                       */
#define ENET_EIR_PLR_SHIFT                       (18U)                                               /**< ENET_EIR.PLR Position                   */
#define ENET_EIR_PLR(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_PLR_SHIFT))&ENET_EIR_PLR_MASK) /**< ENET_EIR.PLR Field                      */
#define ENET_EIR_UN_MASK                         (0x80000U)                                          /**< ENET_EIR.UN Mask                        */
#define ENET_EIR_UN_SHIFT                        (19U)                                               /**< ENET_EIR.UN Position                    */
#define ENET_EIR_UN(x)                           (((uint32_t)(((uint32_t)(x))<<ENET_EIR_UN_SHIFT))&ENET_EIR_UN_MASK) /**< ENET_EIR.UN Field                       */
#define ENET_EIR_RL_MASK                         (0x100000U)                                         /**< ENET_EIR.RL Mask                        */
#define ENET_EIR_RL_SHIFT                        (20U)                                               /**< ENET_EIR.RL Position                    */
#define ENET_EIR_RL(x)                           (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RL_SHIFT))&ENET_EIR_RL_MASK) /**< ENET_EIR.RL Field                       */
#define ENET_EIR_LC_MASK                         (0x200000U)                                         /**< ENET_EIR.LC Mask                        */
#define ENET_EIR_LC_SHIFT                        (21U)                                               /**< ENET_EIR.LC Position                    */
#define ENET_EIR_LC(x)                           (((uint32_t)(((uint32_t)(x))<<ENET_EIR_LC_SHIFT))&ENET_EIR_LC_MASK) /**< ENET_EIR.LC Field                       */
#define ENET_EIR_EBERR_MASK                      (0x400000U)                                         /**< ENET_EIR.EBERR Mask                     */
#define ENET_EIR_EBERR_SHIFT                     (22U)                                               /**< ENET_EIR.EBERR Position                 */
#define ENET_EIR_EBERR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIR_EBERR_SHIFT))&ENET_EIR_EBERR_MASK) /**< ENET_EIR.EBERR Field                    */
#define ENET_EIR_MII_MASK                        (0x800000U)                                         /**< ENET_EIR.MII Mask                       */
#define ENET_EIR_MII_SHIFT                       (23U)                                               /**< ENET_EIR.MII Position                   */
#define ENET_EIR_MII(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_MII_SHIFT))&ENET_EIR_MII_MASK) /**< ENET_EIR.MII Field                      */
#define ENET_EIR_RXB_MASK                        (0x1000000U)                                        /**< ENET_EIR.RXB Mask                       */
#define ENET_EIR_RXB_SHIFT                       (24U)                                               /**< ENET_EIR.RXB Position                   */
#define ENET_EIR_RXB(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXB_SHIFT))&ENET_EIR_RXB_MASK) /**< ENET_EIR.RXB Field                      */
#define ENET_EIR_RXF_MASK                        (0x2000000U)                                        /**< ENET_EIR.RXF Mask                       */
#define ENET_EIR_RXF_SHIFT                       (25U)                                               /**< ENET_EIR.RXF Position                   */
#define ENET_EIR_RXF(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_RXF_SHIFT))&ENET_EIR_RXF_MASK) /**< ENET_EIR.RXF Field                      */
#define ENET_EIR_TXB_MASK                        (0x4000000U)                                        /**< ENET_EIR.TXB Mask                       */
#define ENET_EIR_TXB_SHIFT                       (26U)                                               /**< ENET_EIR.TXB Position                   */
#define ENET_EIR_TXB(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TXB_SHIFT))&ENET_EIR_TXB_MASK) /**< ENET_EIR.TXB Field                      */
#define ENET_EIR_TXF_MASK                        (0x8000000U)                                        /**< ENET_EIR.TXF Mask                       */
#define ENET_EIR_TXF_SHIFT                       (27U)                                               /**< ENET_EIR.TXF Position                   */
#define ENET_EIR_TXF(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_TXF_SHIFT))&ENET_EIR_TXF_MASK) /**< ENET_EIR.TXF Field                      */
#define ENET_EIR_GRA_MASK                        (0x10000000U)                                       /**< ENET_EIR.GRA Mask                       */
#define ENET_EIR_GRA_SHIFT                       (28U)                                               /**< ENET_EIR.GRA Position                   */
#define ENET_EIR_GRA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIR_GRA_SHIFT))&ENET_EIR_GRA_MASK) /**< ENET_EIR.GRA Field                      */
#define ENET_EIR_BABT_MASK                       (0x20000000U)                                       /**< ENET_EIR.BABT Mask                      */
#define ENET_EIR_BABT_SHIFT                      (29U)                                               /**< ENET_EIR.BABT Position                  */
#define ENET_EIR_BABT(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_BABT_SHIFT))&ENET_EIR_BABT_MASK) /**< ENET_EIR.BABT Field                     */
#define ENET_EIR_BABR_MASK                       (0x40000000U)                                       /**< ENET_EIR.BABR Mask                      */
#define ENET_EIR_BABR_SHIFT                      (30U)                                               /**< ENET_EIR.BABR Position                  */
#define ENET_EIR_BABR(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIR_BABR_SHIFT))&ENET_EIR_BABR_MASK) /**< ENET_EIR.BABR Field                     */
/** @} */

/** @name EIMR - Interrupt Mask Register */ /** @{ */
#define ENET_EIMR_TS_TIMER_MASK                  (0x8000U)                                           /**< ENET_EIMR.TS_TIMER Mask                 */
#define ENET_EIMR_TS_TIMER_SHIFT                 (15U)                                               /**< ENET_EIMR.TS_TIMER Position             */
#define ENET_EIMR_TS_TIMER(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TS_TIMER_SHIFT))&ENET_EIMR_TS_TIMER_MASK) /**< ENET_EIMR.TS_TIMER Field                */
#define ENET_EIMR_TS_AVAIL_MASK                  (0x10000U)                                          /**< ENET_EIMR.TS_AVAIL Mask                 */
#define ENET_EIMR_TS_AVAIL_SHIFT                 (16U)                                               /**< ENET_EIMR.TS_AVAIL Position             */
#define ENET_EIMR_TS_AVAIL(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TS_AVAIL_SHIFT))&ENET_EIMR_TS_AVAIL_MASK) /**< ENET_EIMR.TS_AVAIL Field                */
#define ENET_EIMR_WAKEUP_MASK                    (0x20000U)                                          /**< ENET_EIMR.WAKEUP Mask                   */
#define ENET_EIMR_WAKEUP_SHIFT                   (17U)                                               /**< ENET_EIMR.WAKEUP Position               */
#define ENET_EIMR_WAKEUP(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_WAKEUP_SHIFT))&ENET_EIMR_WAKEUP_MASK) /**< ENET_EIMR.WAKEUP Field                  */
#define ENET_EIMR_PLR_MASK                       (0x40000U)                                          /**< ENET_EIMR.PLR Mask                      */
#define ENET_EIMR_PLR_SHIFT                      (18U)                                               /**< ENET_EIMR.PLR Position                  */
#define ENET_EIMR_PLR(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_PLR_SHIFT))&ENET_EIMR_PLR_MASK) /**< ENET_EIMR.PLR Field                     */
#define ENET_EIMR_UN_MASK                        (0x80000U)                                          /**< ENET_EIMR.UN Mask                       */
#define ENET_EIMR_UN_SHIFT                       (19U)                                               /**< ENET_EIMR.UN Position                   */
#define ENET_EIMR_UN(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_UN_SHIFT))&ENET_EIMR_UN_MASK) /**< ENET_EIMR.UN Field                      */
#define ENET_EIMR_RL_MASK                        (0x100000U)                                         /**< ENET_EIMR.RL Mask                       */
#define ENET_EIMR_RL_SHIFT                       (20U)                                               /**< ENET_EIMR.RL Position                   */
#define ENET_EIMR_RL(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RL_SHIFT))&ENET_EIMR_RL_MASK) /**< ENET_EIMR.RL Field                      */
#define ENET_EIMR_LC_MASK                        (0x200000U)                                         /**< ENET_EIMR.LC Mask                       */
#define ENET_EIMR_LC_SHIFT                       (21U)                                               /**< ENET_EIMR.LC Position                   */
#define ENET_EIMR_LC(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_LC_SHIFT))&ENET_EIMR_LC_MASK) /**< ENET_EIMR.LC Field                      */
#define ENET_EIMR_EBERR_MASK                     (0x400000U)                                         /**< ENET_EIMR.EBERR Mask                    */
#define ENET_EIMR_EBERR_SHIFT                    (22U)                                               /**< ENET_EIMR.EBERR Position                */
#define ENET_EIMR_EBERR(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_EBERR_SHIFT))&ENET_EIMR_EBERR_MASK) /**< ENET_EIMR.EBERR Field                   */
#define ENET_EIMR_MII_MASK                       (0x800000U)                                         /**< ENET_EIMR.MII Mask                      */
#define ENET_EIMR_MII_SHIFT                      (23U)                                               /**< ENET_EIMR.MII Position                  */
#define ENET_EIMR_MII(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_MII_SHIFT))&ENET_EIMR_MII_MASK) /**< ENET_EIMR.MII Field                     */
#define ENET_EIMR_RXB_MASK                       (0x1000000U)                                        /**< ENET_EIMR.RXB Mask                      */
#define ENET_EIMR_RXB_SHIFT                      (24U)                                               /**< ENET_EIMR.RXB Position                  */
#define ENET_EIMR_RXB(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXB_SHIFT))&ENET_EIMR_RXB_MASK) /**< ENET_EIMR.RXB Field                     */
#define ENET_EIMR_RXF_MASK                       (0x2000000U)                                        /**< ENET_EIMR.RXF Mask                      */
#define ENET_EIMR_RXF_SHIFT                      (25U)                                               /**< ENET_EIMR.RXF Position                  */
#define ENET_EIMR_RXF(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_RXF_SHIFT))&ENET_EIMR_RXF_MASK) /**< ENET_EIMR.RXF Field                     */
#define ENET_EIMR_TXB_MASK                       (0x4000000U)                                        /**< ENET_EIMR.TXB Mask                      */
#define ENET_EIMR_TXB_SHIFT                      (26U)                                               /**< ENET_EIMR.TXB Position                  */
#define ENET_EIMR_TXB(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TXB_SHIFT))&ENET_EIMR_TXB_MASK) /**< ENET_EIMR.TXB Field                     */
#define ENET_EIMR_TXF_MASK                       (0x8000000U)                                        /**< ENET_EIMR.TXF Mask                      */
#define ENET_EIMR_TXF_SHIFT                      (27U)                                               /**< ENET_EIMR.TXF Position                  */
#define ENET_EIMR_TXF(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_TXF_SHIFT))&ENET_EIMR_TXF_MASK) /**< ENET_EIMR.TXF Field                     */
#define ENET_EIMR_GRA_MASK                       (0x10000000U)                                       /**< ENET_EIMR.GRA Mask                      */
#define ENET_EIMR_GRA_SHIFT                      (28U)                                               /**< ENET_EIMR.GRA Position                  */
#define ENET_EIMR_GRA(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_GRA_SHIFT))&ENET_EIMR_GRA_MASK) /**< ENET_EIMR.GRA Field                     */
#define ENET_EIMR_BABT_MASK                      (0x20000000U)                                       /**< ENET_EIMR.BABT Mask                     */
#define ENET_EIMR_BABT_SHIFT                     (29U)                                               /**< ENET_EIMR.BABT Position                 */
#define ENET_EIMR_BABT(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_BABT_SHIFT))&ENET_EIMR_BABT_MASK) /**< ENET_EIMR.BABT Field                    */
#define ENET_EIMR_BABR_MASK                      (0x40000000U)                                       /**< ENET_EIMR.BABR Mask                     */
#define ENET_EIMR_BABR_SHIFT                     (30U)                                               /**< ENET_EIMR.BABR Position                 */
#define ENET_EIMR_BABR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_EIMR_BABR_SHIFT))&ENET_EIMR_BABR_MASK) /**< ENET_EIMR.BABR Field                    */
/** @} */

/** @name RDAR - Receive Descriptor Active Register */ /** @{ */
#define ENET_RDAR_RDAR_MASK                      (0x1000000U)                                        /**< ENET_RDAR.RDAR Mask                     */
#define ENET_RDAR_RDAR_SHIFT                     (24U)                                               /**< ENET_RDAR.RDAR Position                 */
#define ENET_RDAR_RDAR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RDAR_RDAR_SHIFT))&ENET_RDAR_RDAR_MASK) /**< ENET_RDAR.RDAR Field                    */
/** @} */

/** @name TDAR - Transmit Descriptor Active Register */ /** @{ */
#define ENET_TDAR_TDAR_MASK                      (0x1000000U)                                        /**< ENET_TDAR.TDAR Mask                     */
#define ENET_TDAR_TDAR_SHIFT                     (24U)                                               /**< ENET_TDAR.TDAR Position                 */
#define ENET_TDAR_TDAR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TDAR_TDAR_SHIFT))&ENET_TDAR_TDAR_MASK) /**< ENET_TDAR.TDAR Field                    */
/** @} */

/** @name ECR - Ethernet Control Register */ /** @{ */
#define ENET_ECR_RESET_MASK                      (0x1U)                                              /**< ENET_ECR.RESET Mask                     */
#define ENET_ECR_RESET_SHIFT                     (0U)                                                /**< ENET_ECR.RESET Position                 */
#define ENET_ECR_RESET(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_RESET_SHIFT))&ENET_ECR_RESET_MASK) /**< ENET_ECR.RESET Field                    */
#define ENET_ECR_ETHEREN_MASK                    (0x2U)                                              /**< ENET_ECR.ETHEREN Mask                   */
#define ENET_ECR_ETHEREN_SHIFT                   (1U)                                                /**< ENET_ECR.ETHEREN Position               */
#define ENET_ECR_ETHEREN(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ECR_ETHEREN_SHIFT))&ENET_ECR_ETHEREN_MASK) /**< ENET_ECR.ETHEREN Field                  */
#define ENET_ECR_MAGICEN_MASK                    (0x4U)                                              /**< ENET_ECR.MAGICEN Mask                   */
#define ENET_ECR_MAGICEN_SHIFT                   (2U)                                                /**< ENET_ECR.MAGICEN Position               */
#define ENET_ECR_MAGICEN(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ECR_MAGICEN_SHIFT))&ENET_ECR_MAGICEN_MASK) /**< ENET_ECR.MAGICEN Field                  */
#define ENET_ECR_SLEEP_MASK                      (0x8U)                                              /**< ENET_ECR.SLEEP Mask                     */
#define ENET_ECR_SLEEP_SHIFT                     (3U)                                                /**< ENET_ECR.SLEEP Position                 */
#define ENET_ECR_SLEEP(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_SLEEP_SHIFT))&ENET_ECR_SLEEP_MASK) /**< ENET_ECR.SLEEP Field                    */
#define ENET_ECR_EN1588_MASK                     (0x10U)                                             /**< ENET_ECR.EN1588 Mask                    */
#define ENET_ECR_EN1588_SHIFT                    (4U)                                                /**< ENET_ECR.EN1588 Position                */
#define ENET_ECR_EN1588(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ECR_EN1588_SHIFT))&ENET_ECR_EN1588_MASK) /**< ENET_ECR.EN1588 Field                   */
#define ENET_ECR_DBGEN_MASK                      (0x40U)                                             /**< ENET_ECR.DBGEN Mask                     */
#define ENET_ECR_DBGEN_SHIFT                     (6U)                                                /**< ENET_ECR.DBGEN Position                 */
#define ENET_ECR_DBGEN(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_DBGEN_SHIFT))&ENET_ECR_DBGEN_MASK) /**< ENET_ECR.DBGEN Field                    */
#define ENET_ECR_STOPEN_MASK                     (0x80U)                                             /**< ENET_ECR.STOPEN Mask                    */
#define ENET_ECR_STOPEN_SHIFT                    (7U)                                                /**< ENET_ECR.STOPEN Position                */
#define ENET_ECR_STOPEN(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ECR_STOPEN_SHIFT))&ENET_ECR_STOPEN_MASK) /**< ENET_ECR.STOPEN Field                   */
#define ENET_ECR_DBSWP_MASK                      (0x100U)                                            /**< ENET_ECR.DBSWP Mask                     */
#define ENET_ECR_DBSWP_SHIFT                     (8U)                                                /**< ENET_ECR.DBSWP Position                 */
#define ENET_ECR_DBSWP(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ECR_DBSWP_SHIFT))&ENET_ECR_DBSWP_MASK) /**< ENET_ECR.DBSWP Field                    */
/** @} */

/** @name MMFR - MII Management Frame Register */ /** @{ */
#define ENET_MMFR_DATA_MASK                      (0xFFFFU)                                           /**< ENET_MMFR.DATA Mask                     */
#define ENET_MMFR_DATA_SHIFT                     (0U)                                                /**< ENET_MMFR.DATA Position                 */
#define ENET_MMFR_DATA(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_DATA_SHIFT))&ENET_MMFR_DATA_MASK) /**< ENET_MMFR.DATA Field                    */
#define ENET_MMFR_TA_MASK                        (0x30000U)                                          /**< ENET_MMFR.TA Mask                       */
#define ENET_MMFR_TA_SHIFT                       (16U)                                               /**< ENET_MMFR.TA Position                   */
#define ENET_MMFR_TA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_TA_SHIFT))&ENET_MMFR_TA_MASK) /**< ENET_MMFR.TA Field                      */
#define ENET_MMFR_RA_MASK                        (0x7C0000U)                                         /**< ENET_MMFR.RA Mask                       */
#define ENET_MMFR_RA_SHIFT                       (18U)                                               /**< ENET_MMFR.RA Position                   */
#define ENET_MMFR_RA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_RA_SHIFT))&ENET_MMFR_RA_MASK) /**< ENET_MMFR.RA Field                      */
#define ENET_MMFR_PA_MASK                        (0xF800000U)                                        /**< ENET_MMFR.PA Mask                       */
#define ENET_MMFR_PA_SHIFT                       (23U)                                               /**< ENET_MMFR.PA Position                   */
#define ENET_MMFR_PA(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_PA_SHIFT))&ENET_MMFR_PA_MASK) /**< ENET_MMFR.PA Field                      */
#define ENET_MMFR_OP_MASK                        (0x30000000U)                                       /**< ENET_MMFR.OP Mask                       */
#define ENET_MMFR_OP_SHIFT                       (28U)                                               /**< ENET_MMFR.OP Position                   */
#define ENET_MMFR_OP(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_OP_SHIFT))&ENET_MMFR_OP_MASK) /**< ENET_MMFR.OP Field                      */
#define ENET_MMFR_ST_MASK                        (0xC0000000U)                                       /**< ENET_MMFR.ST Mask                       */
#define ENET_MMFR_ST_SHIFT                       (30U)                                               /**< ENET_MMFR.ST Position                   */
#define ENET_MMFR_ST(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_MMFR_ST_SHIFT))&ENET_MMFR_ST_MASK) /**< ENET_MMFR.ST Field                      */
/** @} */

/** @name MSCR - MII Speed Control Register */ /** @{ */
#define ENET_MSCR_MII_SPEED_MASK                 (0x7EU)                                             /**< ENET_MSCR.MII_SPEED Mask                */
#define ENET_MSCR_MII_SPEED_SHIFT                (1U)                                                /**< ENET_MSCR.MII_SPEED Position            */
#define ENET_MSCR_MII_SPEED(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_MII_SPEED_SHIFT))&ENET_MSCR_MII_SPEED_MASK) /**< ENET_MSCR.MII_SPEED Field               */
#define ENET_MSCR_DIS_PRE_MASK                   (0x80U)                                             /**< ENET_MSCR.DIS_PRE Mask                  */
#define ENET_MSCR_DIS_PRE_SHIFT                  (7U)                                                /**< ENET_MSCR.DIS_PRE Position              */
#define ENET_MSCR_DIS_PRE(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_DIS_PRE_SHIFT))&ENET_MSCR_DIS_PRE_MASK) /**< ENET_MSCR.DIS_PRE Field                 */
#define ENET_MSCR_HOLDTIME_MASK                  (0x700U)                                            /**< ENET_MSCR.HOLDTIME Mask                 */
#define ENET_MSCR_HOLDTIME_SHIFT                 (8U)                                                /**< ENET_MSCR.HOLDTIME Position             */
#define ENET_MSCR_HOLDTIME(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_MSCR_HOLDTIME_SHIFT))&ENET_MSCR_HOLDTIME_MASK) /**< ENET_MSCR.HOLDTIME Field                */
/** @} */

/** @name MIBC - MIB Control Register */ /** @{ */
#define ENET_MIBC_MIB_CLEAR_MASK                 (0x20000000U)                                       /**< ENET_MIBC.MIB_CLEAR Mask                */
#define ENET_MIBC_MIB_CLEAR_SHIFT                (29U)                                               /**< ENET_MIBC.MIB_CLEAR Position            */
#define ENET_MIBC_MIB_CLEAR(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_MIBC_MIB_CLEAR_SHIFT))&ENET_MIBC_MIB_CLEAR_MASK) /**< ENET_MIBC.MIB_CLEAR Field               */
#define ENET_MIBC_MIB_IDLE_MASK                  (0x40000000U)                                       /**< ENET_MIBC.MIB_IDLE Mask                 */
#define ENET_MIBC_MIB_IDLE_SHIFT                 (30U)                                               /**< ENET_MIBC.MIB_IDLE Position             */
#define ENET_MIBC_MIB_IDLE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_MIBC_MIB_IDLE_SHIFT))&ENET_MIBC_MIB_IDLE_MASK) /**< ENET_MIBC.MIB_IDLE Field                */
#define ENET_MIBC_MIB_DIS_MASK                   (0x80000000U)                                       /**< ENET_MIBC.MIB_DIS Mask                  */
#define ENET_MIBC_MIB_DIS_SHIFT                  (31U)                                               /**< ENET_MIBC.MIB_DIS Position              */
#define ENET_MIBC_MIB_DIS(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_MIBC_MIB_DIS_SHIFT))&ENET_MIBC_MIB_DIS_MASK) /**< ENET_MIBC.MIB_DIS Field                 */
/** @} */

/** @name RCR - Receive Control Register */ /** @{ */
#define ENET_RCR_LOOP_MASK                       (0x1U)                                              /**< ENET_RCR.LOOP Mask                      */
#define ENET_RCR_LOOP_SHIFT                      (0U)                                                /**< ENET_RCR.LOOP Position                  */
#define ENET_RCR_LOOP(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_RCR_LOOP_SHIFT))&ENET_RCR_LOOP_MASK) /**< ENET_RCR.LOOP Field                     */
#define ENET_RCR_DRT_MASK                        (0x2U)                                              /**< ENET_RCR.DRT Mask                       */
#define ENET_RCR_DRT_SHIFT                       (1U)                                                /**< ENET_RCR.DRT Position                   */
#define ENET_RCR_DRT(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_DRT_SHIFT))&ENET_RCR_DRT_MASK) /**< ENET_RCR.DRT Field                      */
#define ENET_RCR_MII_MODE_MASK                   (0x4U)                                              /**< ENET_RCR.MII_MODE Mask                  */
#define ENET_RCR_MII_MODE_SHIFT                  (2U)                                                /**< ENET_RCR.MII_MODE Position              */
#define ENET_RCR_MII_MODE(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RCR_MII_MODE_SHIFT))&ENET_RCR_MII_MODE_MASK) /**< ENET_RCR.MII_MODE Field                 */
#define ENET_RCR_PROM_MASK                       (0x8U)                                              /**< ENET_RCR.PROM Mask                      */
#define ENET_RCR_PROM_SHIFT                      (3U)                                                /**< ENET_RCR.PROM Position                  */
#define ENET_RCR_PROM(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_RCR_PROM_SHIFT))&ENET_RCR_PROM_MASK) /**< ENET_RCR.PROM Field                     */
#define ENET_RCR_BC_REJ_MASK                     (0x10U)                                             /**< ENET_RCR.BC_REJ Mask                    */
#define ENET_RCR_BC_REJ_SHIFT                    (4U)                                                /**< ENET_RCR.BC_REJ Position                */
#define ENET_RCR_BC_REJ(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_BC_REJ_SHIFT))&ENET_RCR_BC_REJ_MASK) /**< ENET_RCR.BC_REJ Field                   */
#define ENET_RCR_FCE_MASK                        (0x20U)                                             /**< ENET_RCR.FCE Mask                       */
#define ENET_RCR_FCE_SHIFT                       (5U)                                                /**< ENET_RCR.FCE Position                   */
#define ENET_RCR_FCE(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_FCE_SHIFT))&ENET_RCR_FCE_MASK) /**< ENET_RCR.FCE Field                      */
#define ENET_RCR_RMII_MODE_MASK                  (0x100U)                                            /**< ENET_RCR.RMII_MODE Mask                 */
#define ENET_RCR_RMII_MODE_SHIFT                 (8U)                                                /**< ENET_RCR.RMII_MODE Position             */
#define ENET_RCR_RMII_MODE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_RCR_RMII_MODE_SHIFT))&ENET_RCR_RMII_MODE_MASK) /**< ENET_RCR.RMII_MODE Field                */
#define ENET_RCR_RMII_10T_MASK                   (0x200U)                                            /**< ENET_RCR.RMII_10T Mask                  */
#define ENET_RCR_RMII_10T_SHIFT                  (9U)                                                /**< ENET_RCR.RMII_10T Position              */
#define ENET_RCR_RMII_10T(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RCR_RMII_10T_SHIFT))&ENET_RCR_RMII_10T_MASK) /**< ENET_RCR.RMII_10T Field                 */
#define ENET_RCR_PADEN_MASK                      (0x1000U)                                           /**< ENET_RCR.PADEN Mask                     */
#define ENET_RCR_PADEN_SHIFT                     (12U)                                               /**< ENET_RCR.PADEN Position                 */
#define ENET_RCR_PADEN(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_RCR_PADEN_SHIFT))&ENET_RCR_PADEN_MASK) /**< ENET_RCR.PADEN Field                    */
#define ENET_RCR_PAUFWD_MASK                     (0x2000U)                                           /**< ENET_RCR.PAUFWD Mask                    */
#define ENET_RCR_PAUFWD_SHIFT                    (13U)                                               /**< ENET_RCR.PAUFWD Position                */
#define ENET_RCR_PAUFWD(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_PAUFWD_SHIFT))&ENET_RCR_PAUFWD_MASK) /**< ENET_RCR.PAUFWD Field                   */
#define ENET_RCR_CRCFWD_MASK                     (0x4000U)                                           /**< ENET_RCR.CRCFWD Mask                    */
#define ENET_RCR_CRCFWD_SHIFT                    (14U)                                               /**< ENET_RCR.CRCFWD Position                */
#define ENET_RCR_CRCFWD(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_CRCFWD_SHIFT))&ENET_RCR_CRCFWD_MASK) /**< ENET_RCR.CRCFWD Field                   */
#define ENET_RCR_CFEN_MASK                       (0x8000U)                                           /**< ENET_RCR.CFEN Mask                      */
#define ENET_RCR_CFEN_SHIFT                      (15U)                                               /**< ENET_RCR.CFEN Position                  */
#define ENET_RCR_CFEN(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_RCR_CFEN_SHIFT))&ENET_RCR_CFEN_MASK) /**< ENET_RCR.CFEN Field                     */
#define ENET_RCR_MAX_FL_MASK                     (0x3FFF0000U)                                       /**< ENET_RCR.MAX_FL Mask                    */
#define ENET_RCR_MAX_FL_SHIFT                    (16U)                                               /**< ENET_RCR.MAX_FL Position                */
#define ENET_RCR_MAX_FL(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RCR_MAX_FL_SHIFT))&ENET_RCR_MAX_FL_MASK) /**< ENET_RCR.MAX_FL Field                   */
#define ENET_RCR_NLC_MASK                        (0x40000000U)                                       /**< ENET_RCR.NLC Mask                       */
#define ENET_RCR_NLC_SHIFT                       (30U)                                               /**< ENET_RCR.NLC Position                   */
#define ENET_RCR_NLC(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_NLC_SHIFT))&ENET_RCR_NLC_MASK) /**< ENET_RCR.NLC Field                      */
#define ENET_RCR_GRS_MASK                        (0x80000000U)                                       /**< ENET_RCR.GRS Mask                       */
#define ENET_RCR_GRS_SHIFT                       (31U)                                               /**< ENET_RCR.GRS Position                   */
#define ENET_RCR_GRS(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_RCR_GRS_SHIFT))&ENET_RCR_GRS_MASK) /**< ENET_RCR.GRS Field                      */
/** @} */

/** @name TCR - Transmit Control Register */ /** @{ */
#define ENET_TCR_GTS_MASK                        (0x1U)                                              /**< ENET_TCR.GTS Mask                       */
#define ENET_TCR_GTS_SHIFT                       (0U)                                                /**< ENET_TCR.GTS Position                   */
#define ENET_TCR_GTS(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_TCR_GTS_SHIFT))&ENET_TCR_GTS_MASK) /**< ENET_TCR.GTS Field                      */
#define ENET_TCR_FDEN_MASK                       (0x4U)                                              /**< ENET_TCR.FDEN Mask                      */
#define ENET_TCR_FDEN_SHIFT                      (2U)                                                /**< ENET_TCR.FDEN Position                  */
#define ENET_TCR_FDEN(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCR_FDEN_SHIFT))&ENET_TCR_FDEN_MASK) /**< ENET_TCR.FDEN Field                     */
#define ENET_TCR_TFC_PAUSE_MASK                  (0x8U)                                              /**< ENET_TCR.TFC_PAUSE Mask                 */
#define ENET_TCR_TFC_PAUSE_SHIFT                 (3U)                                                /**< ENET_TCR.TFC_PAUSE Position             */
#define ENET_TCR_TFC_PAUSE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_TCR_TFC_PAUSE_SHIFT))&ENET_TCR_TFC_PAUSE_MASK) /**< ENET_TCR.TFC_PAUSE Field                */
#define ENET_TCR_RFC_PAUSE_MASK                  (0x10U)                                             /**< ENET_TCR.RFC_PAUSE Mask                 */
#define ENET_TCR_RFC_PAUSE_SHIFT                 (4U)                                                /**< ENET_TCR.RFC_PAUSE Position             */
#define ENET_TCR_RFC_PAUSE(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_TCR_RFC_PAUSE_SHIFT))&ENET_TCR_RFC_PAUSE_MASK) /**< ENET_TCR.RFC_PAUSE Field                */
#define ENET_TCR_ADDSEL_MASK                     (0xE0U)                                             /**< ENET_TCR.ADDSEL Mask                    */
#define ENET_TCR_ADDSEL_SHIFT                    (5U)                                                /**< ENET_TCR.ADDSEL Position                */
#define ENET_TCR_ADDSEL(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCR_ADDSEL_SHIFT))&ENET_TCR_ADDSEL_MASK) /**< ENET_TCR.ADDSEL Field                   */
#define ENET_TCR_ADDINS_MASK                     (0x100U)                                            /**< ENET_TCR.ADDINS Mask                    */
#define ENET_TCR_ADDINS_SHIFT                    (8U)                                                /**< ENET_TCR.ADDINS Position                */
#define ENET_TCR_ADDINS(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCR_ADDINS_SHIFT))&ENET_TCR_ADDINS_MASK) /**< ENET_TCR.ADDINS Field                   */
#define ENET_TCR_CRCFWD_MASK                     (0x200U)                                            /**< ENET_TCR.CRCFWD Mask                    */
#define ENET_TCR_CRCFWD_SHIFT                    (9U)                                                /**< ENET_TCR.CRCFWD Position                */
#define ENET_TCR_CRCFWD(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCR_CRCFWD_SHIFT))&ENET_TCR_CRCFWD_MASK) /**< ENET_TCR.CRCFWD Field                   */
/** @} */

/** @name PALR - Physical Address Lower Register */ /** @{ */
#define ENET_PALR_PADDR1_MASK                    (0xFFFFFFFFU)                                       /**< ENET_PALR.PADDR1 Mask                   */
#define ENET_PALR_PADDR1_SHIFT                   (0U)                                                /**< ENET_PALR.PADDR1 Position               */
#define ENET_PALR_PADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_PALR_PADDR1_SHIFT))&ENET_PALR_PADDR1_MASK) /**< ENET_PALR.PADDR1 Field                  */
/** @} */

/** @name PAUR - Physical Address Upper Register */ /** @{ */
#define ENET_PAUR_TYPE_MASK                      (0xFFFFU)                                           /**< ENET_PAUR.TYPE Mask                     */
#define ENET_PAUR_TYPE_SHIFT                     (0U)                                                /**< ENET_PAUR.TYPE Position                 */
#define ENET_PAUR_TYPE(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_PAUR_TYPE_SHIFT))&ENET_PAUR_TYPE_MASK) /**< ENET_PAUR.TYPE Field                    */
#define ENET_PAUR_PADDR2_MASK                    (0xFFFF0000U)                                       /**< ENET_PAUR.PADDR2 Mask                   */
#define ENET_PAUR_PADDR2_SHIFT                   (16U)                                               /**< ENET_PAUR.PADDR2 Position               */
#define ENET_PAUR_PADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_PAUR_PADDR2_SHIFT))&ENET_PAUR_PADDR2_MASK) /**< ENET_PAUR.PADDR2 Field                  */
/** @} */

/** @name OPD - Opcode/Pause Duration Register */ /** @{ */
#define ENET_OPD_PAUSE_DUR_MASK                  (0xFFFFU)                                           /**< ENET_OPD.PAUSE_DUR Mask                 */
#define ENET_OPD_PAUSE_DUR_SHIFT                 (0U)                                                /**< ENET_OPD.PAUSE_DUR Position             */
#define ENET_OPD_PAUSE_DUR(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_OPD_PAUSE_DUR_SHIFT))&ENET_OPD_PAUSE_DUR_MASK) /**< ENET_OPD.PAUSE_DUR Field                */
#define ENET_OPD_OPCODE_MASK                     (0xFFFF0000U)                                       /**< ENET_OPD.OPCODE Mask                    */
#define ENET_OPD_OPCODE_SHIFT                    (16U)                                               /**< ENET_OPD.OPCODE Position                */
#define ENET_OPD_OPCODE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_OPD_OPCODE_SHIFT))&ENET_OPD_OPCODE_MASK) /**< ENET_OPD.OPCODE Field                   */
/** @} */

/** @name IAUR - Descriptor Individual Upper Address Register */ /** @{ */
#define ENET_IAUR_IADDR1_MASK                    (0xFFFFFFFFU)                                       /**< ENET_IAUR.IADDR1 Mask                   */
#define ENET_IAUR_IADDR1_SHIFT                   (0U)                                                /**< ENET_IAUR.IADDR1 Position               */
#define ENET_IAUR_IADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_IAUR_IADDR1_SHIFT))&ENET_IAUR_IADDR1_MASK) /**< ENET_IAUR.IADDR1 Field                  */
/** @} */

/** @name IALR - Descriptor Individual Lower Address Register */ /** @{ */
#define ENET_IALR_IADDR2_MASK                    (0xFFFFFFFFU)                                       /**< ENET_IALR.IADDR2 Mask                   */
#define ENET_IALR_IADDR2_SHIFT                   (0U)                                                /**< ENET_IALR.IADDR2 Position               */
#define ENET_IALR_IADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_IALR_IADDR2_SHIFT))&ENET_IALR_IADDR2_MASK) /**< ENET_IALR.IADDR2 Field                  */
/** @} */

/** @name GAUR - Descriptor Group Upper Address Register */ /** @{ */
#define ENET_GAUR_GADDR1_MASK                    (0xFFFFFFFFU)                                       /**< ENET_GAUR.GADDR1 Mask                   */
#define ENET_GAUR_GADDR1_SHIFT                   (0U)                                                /**< ENET_GAUR.GADDR1 Position               */
#define ENET_GAUR_GADDR1(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_GAUR_GADDR1_SHIFT))&ENET_GAUR_GADDR1_MASK) /**< ENET_GAUR.GADDR1 Field                  */
/** @} */

/** @name GALR - Descriptor Group Lower Address Register */ /** @{ */
#define ENET_GALR_GADDR2_MASK                    (0xFFFFFFFFU)                                       /**< ENET_GALR.GADDR2 Mask                   */
#define ENET_GALR_GADDR2_SHIFT                   (0U)                                                /**< ENET_GALR.GADDR2 Position               */
#define ENET_GALR_GADDR2(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_GALR_GADDR2_SHIFT))&ENET_GALR_GADDR2_MASK) /**< ENET_GALR.GADDR2 Field                  */
/** @} */

/** @name TFWR - Transmit FIFO Watermark Register */ /** @{ */
#define ENET_TFWR_TFWR_MASK                      (0x3FU)                                             /**< ENET_TFWR.TFWR Mask                     */
#define ENET_TFWR_TFWR_SHIFT                     (0U)                                                /**< ENET_TFWR.TFWR Position                 */
#define ENET_TFWR_TFWR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TFWR_TFWR_SHIFT))&ENET_TFWR_TFWR_MASK) /**< ENET_TFWR.TFWR Field                    */
#define ENET_TFWR_STRFWD_MASK                    (0x100U)                                            /**< ENET_TFWR.STRFWD Mask                   */
#define ENET_TFWR_STRFWD_SHIFT                   (8U)                                                /**< ENET_TFWR.STRFWD Position               */
#define ENET_TFWR_STRFWD(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_TFWR_STRFWD_SHIFT))&ENET_TFWR_STRFWD_MASK) /**< ENET_TFWR.STRFWD Field                  */
/** @} */

/** @name RDSR - Receive Descriptor Ring Start Register */ /** @{ */
#define ENET_RDSR_R_DES_START_MASK               (0xFFFFFFF8U)                                       /**< ENET_RDSR.R_DES_START Mask              */
#define ENET_RDSR_R_DES_START_SHIFT              (3U)                                                /**< ENET_RDSR.R_DES_START Position          */
#define ENET_RDSR_R_DES_START(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RDSR_R_DES_START_SHIFT))&ENET_RDSR_R_DES_START_MASK) /**< ENET_RDSR.R_DES_START Field             */
/** @} */

/** @name TDSR - Transmit Buffer Descriptor Ring Start Register */ /** @{ */
#define ENET_TDSR_X_DES_START_MASK               (0xFFFFFFF8U)                                       /**< ENET_TDSR.X_DES_START Mask              */
#define ENET_TDSR_X_DES_START_SHIFT              (3U)                                                /**< ENET_TDSR.X_DES_START Position          */
#define ENET_TDSR_X_DES_START(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_TDSR_X_DES_START_SHIFT))&ENET_TDSR_X_DES_START_MASK) /**< ENET_TDSR.X_DES_START Field             */
/** @} */

/** @name MRBR - Maximum Receive Buffer Size Register */ /** @{ */
#define ENET_MRBR_R_BUF_SIZE_MASK                (0x3FF0U)                                           /**< ENET_MRBR.R_BUF_SIZE Mask               */
#define ENET_MRBR_R_BUF_SIZE_SHIFT               (4U)                                                /**< ENET_MRBR.R_BUF_SIZE Position           */
#define ENET_MRBR_R_BUF_SIZE(x)                  (((uint32_t)(((uint32_t)(x))<<ENET_MRBR_R_BUF_SIZE_SHIFT))&ENET_MRBR_R_BUF_SIZE_MASK) /**< ENET_MRBR.R_BUF_SIZE Field              */
/** @} */

/** @name RSFL - Receive FIFO Section Full Threshold */ /** @{ */
#define ENET_RSFL_RX_SECTION_FULL_MASK           (0xFFU)                                             /**< ENET_RSFL.RX_SECTION_FULL Mask          */
#define ENET_RSFL_RX_SECTION_FULL_SHIFT          (0U)                                                /**< ENET_RSFL.RX_SECTION_FULL Position      */
#define ENET_RSFL_RX_SECTION_FULL(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RSFL_RX_SECTION_FULL_SHIFT))&ENET_RSFL_RX_SECTION_FULL_MASK) /**< ENET_RSFL.RX_SECTION_FULL Field         */
/** @} */

/** @name RSEM - Receive FIFO Section Empty Threshold */ /** @{ */
#define ENET_RSEM_RX_SECTION_EMPTY_MASK          (0xFFU)                                             /**< ENET_RSEM.RX_SECTION_EMPTY Mask         */
#define ENET_RSEM_RX_SECTION_EMPTY_SHIFT         (0U)                                                /**< ENET_RSEM.RX_SECTION_EMPTY Position     */
#define ENET_RSEM_RX_SECTION_EMPTY(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RSEM_RX_SECTION_EMPTY_SHIFT))&ENET_RSEM_RX_SECTION_EMPTY_MASK) /**< ENET_RSEM.RX_SECTION_EMPTY Field        */
/** @} */

/** @name RAEM - Receive FIFO Almost Empty Threshold */ /** @{ */
#define ENET_RAEM_RX_ALMOST_EMPTY_MASK           (0xFFU)                                             /**< ENET_RAEM.RX_ALMOST_EMPTY Mask          */
#define ENET_RAEM_RX_ALMOST_EMPTY_SHIFT          (0U)                                                /**< ENET_RAEM.RX_ALMOST_EMPTY Position      */
#define ENET_RAEM_RX_ALMOST_EMPTY(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RAEM_RX_ALMOST_EMPTY_SHIFT))&ENET_RAEM_RX_ALMOST_EMPTY_MASK) /**< ENET_RAEM.RX_ALMOST_EMPTY Field         */
/** @} */

/** @name RAFL - Receive FIFO Almost Full Threshold */ /** @{ */
#define ENET_RAFL_RX_ALMOST_FULL_MASK            (0xFFU)                                             /**< ENET_RAFL.RX_ALMOST_FULL Mask           */
#define ENET_RAFL_RX_ALMOST_FULL_SHIFT           (0U)                                                /**< ENET_RAFL.RX_ALMOST_FULL Position       */
#define ENET_RAFL_RX_ALMOST_FULL(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RAFL_RX_ALMOST_FULL_SHIFT))&ENET_RAFL_RX_ALMOST_FULL_MASK) /**< ENET_RAFL.RX_ALMOST_FULL Field          */
/** @} */

/** @name TSEM - Transmit FIFO Section Empty Threshold */ /** @{ */
#define ENET_TSEM_TX_SECTION_EMPTY_MASK          (0xFFU)                                             /**< ENET_TSEM.TX_SECTION_EMPTY Mask         */
#define ENET_TSEM_TX_SECTION_EMPTY_SHIFT         (0U)                                                /**< ENET_TSEM.TX_SECTION_EMPTY Position     */
#define ENET_TSEM_TX_SECTION_EMPTY(x)            (((uint32_t)(((uint32_t)(x))<<ENET_TSEM_TX_SECTION_EMPTY_SHIFT))&ENET_TSEM_TX_SECTION_EMPTY_MASK) /**< ENET_TSEM.TX_SECTION_EMPTY Field        */
/** @} */

/** @name TAEM - Transmit FIFO Almost Empty Threshold */ /** @{ */
#define ENET_TAEM_TX_ALMOST_EMPTY_MASK           (0xFFU)                                             /**< ENET_TAEM.TX_ALMOST_EMPTY Mask          */
#define ENET_TAEM_TX_ALMOST_EMPTY_SHIFT          (0U)                                                /**< ENET_TAEM.TX_ALMOST_EMPTY Position      */
#define ENET_TAEM_TX_ALMOST_EMPTY(x)             (((uint32_t)(((uint32_t)(x))<<ENET_TAEM_TX_ALMOST_EMPTY_SHIFT))&ENET_TAEM_TX_ALMOST_EMPTY_MASK) /**< ENET_TAEM.TX_ALMOST_EMPTY Field         */
/** @} */

/** @name TAFL - Transmit FIFO Almost Full Threshold */ /** @{ */
#define ENET_TAFL_TX_ALMOST_FULL_MASK            (0xFFU)                                             /**< ENET_TAFL.TX_ALMOST_FULL Mask           */
#define ENET_TAFL_TX_ALMOST_FULL_SHIFT           (0U)                                                /**< ENET_TAFL.TX_ALMOST_FULL Position       */
#define ENET_TAFL_TX_ALMOST_FULL(x)              (((uint32_t)(((uint32_t)(x))<<ENET_TAFL_TX_ALMOST_FULL_SHIFT))&ENET_TAFL_TX_ALMOST_FULL_MASK) /**< ENET_TAFL.TX_ALMOST_FULL Field          */
/** @} */

/** @name TIPG - Transmit Inter-Packet Gap */ /** @{ */
#define ENET_TIPG_IPG_MASK                       (0x1FU)                                             /**< ENET_TIPG.IPG Mask                      */
#define ENET_TIPG_IPG_SHIFT                      (0U)                                                /**< ENET_TIPG.IPG Position                  */
#define ENET_TIPG_IPG(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TIPG_IPG_SHIFT))&ENET_TIPG_IPG_MASK) /**< ENET_TIPG.IPG Field                     */
/** @} */

/** @name FTRL - Frame Truncation Length */ /** @{ */
#define ENET_FTRL_TRUNC_FL_MASK                  (0x3FFFU)                                           /**< ENET_FTRL.TRUNC_FL Mask                 */
#define ENET_FTRL_TRUNC_FL_SHIFT                 (0U)                                                /**< ENET_FTRL.TRUNC_FL Position             */
#define ENET_FTRL_TRUNC_FL(x)                    (((uint32_t)(((uint32_t)(x))<<ENET_FTRL_TRUNC_FL_SHIFT))&ENET_FTRL_TRUNC_FL_MASK) /**< ENET_FTRL.TRUNC_FL Field                */
/** @} */

/** @name TACC - Transmit Accelerator Function Configuration */ /** @{ */
#define ENET_TACC_SHIFT16_MASK                   (0x1U)                                              /**< ENET_TACC.SHIFT16 Mask                  */
#define ENET_TACC_SHIFT16_SHIFT                  (0U)                                                /**< ENET_TACC.SHIFT16 Position              */
#define ENET_TACC_SHIFT16(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_TACC_SHIFT16_SHIFT))&ENET_TACC_SHIFT16_MASK) /**< ENET_TACC.SHIFT16 Field                 */
#define ENET_TACC_IPCHK_MASK                     (0x8U)                                              /**< ENET_TACC.IPCHK Mask                    */
#define ENET_TACC_IPCHK_SHIFT                    (3U)                                                /**< ENET_TACC.IPCHK Position                */
#define ENET_TACC_IPCHK(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TACC_IPCHK_SHIFT))&ENET_TACC_IPCHK_MASK) /**< ENET_TACC.IPCHK Field                   */
#define ENET_TACC_PROCHK_MASK                    (0x10U)                                             /**< ENET_TACC.PROCHK Mask                   */
#define ENET_TACC_PROCHK_SHIFT                   (4U)                                                /**< ENET_TACC.PROCHK Position               */
#define ENET_TACC_PROCHK(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_TACC_PROCHK_SHIFT))&ENET_TACC_PROCHK_MASK) /**< ENET_TACC.PROCHK Field                  */
/** @} */

/** @name RACC - Receive Accelerator Function Configuration */ /** @{ */
#define ENET_RACC_PADREM_MASK                    (0x1U)                                              /**< ENET_RACC.PADREM Mask                   */
#define ENET_RACC_PADREM_SHIFT                   (0U)                                                /**< ENET_RACC.PADREM Position               */
#define ENET_RACC_PADREM(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_RACC_PADREM_SHIFT))&ENET_RACC_PADREM_MASK) /**< ENET_RACC.PADREM Field                  */
#define ENET_RACC_IPDIS_MASK                     (0x2U)                                              /**< ENET_RACC.IPDIS Mask                    */
#define ENET_RACC_IPDIS_SHIFT                    (1U)                                                /**< ENET_RACC.IPDIS Position                */
#define ENET_RACC_IPDIS(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_RACC_IPDIS_SHIFT))&ENET_RACC_IPDIS_MASK) /**< ENET_RACC.IPDIS Field                   */
#define ENET_RACC_PRODIS_MASK                    (0x4U)                                              /**< ENET_RACC.PRODIS Mask                   */
#define ENET_RACC_PRODIS_SHIFT                   (2U)                                                /**< ENET_RACC.PRODIS Position               */
#define ENET_RACC_PRODIS(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_RACC_PRODIS_SHIFT))&ENET_RACC_PRODIS_MASK) /**< ENET_RACC.PRODIS Field                  */
#define ENET_RACC_LINEDIS_MASK                   (0x40U)                                             /**< ENET_RACC.LINEDIS Mask                  */
#define ENET_RACC_LINEDIS_SHIFT                  (6U)                                                /**< ENET_RACC.LINEDIS Position              */
#define ENET_RACC_LINEDIS(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RACC_LINEDIS_SHIFT))&ENET_RACC_LINEDIS_MASK) /**< ENET_RACC.LINEDIS Field                 */
#define ENET_RACC_SHIFT16_MASK                   (0x80U)                                             /**< ENET_RACC.SHIFT16 Mask                  */
#define ENET_RACC_SHIFT16_SHIFT                  (7U)                                                /**< ENET_RACC.SHIFT16 Position              */
#define ENET_RACC_SHIFT16(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_RACC_SHIFT16_SHIFT))&ENET_RACC_SHIFT16_MASK) /**< ENET_RACC.SHIFT16 Field                 */
/** @} */

/** @name RMON_T_PACKETS - RMON Tx packet count */ /** @{ */
#define ENET_RMON_T_PACKETS_TXPKTS_MASK          (0xFFFFU)                                           /**< ENET_RMON_T_PACKETS.TXPKTS Mask         */
#define ENET_RMON_T_PACKETS_TXPKTS_SHIFT         (0U)                                                /**< ENET_RMON_T_PACKETS.TXPKTS Position     */
#define ENET_RMON_T_PACKETS_TXPKTS(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_PACKETS_TXPKTS_SHIFT))&ENET_RMON_T_PACKETS_TXPKTS_MASK) /**< ENET_RMON_T_PACKETS.TXPKTS Field        */
/** @} */

/** @name RMON_T_BC_PKT - Tx Broadcast Packets Statistic Register */ /** @{ */
#define ENET_RMON_T_BC_PKT_TXPKTS_MASK           (0xFFFFU)                                           /**< ENET_RMON_T_BC_PKT.TXPKTS Mask          */
#define ENET_RMON_T_BC_PKT_TXPKTS_SHIFT          (0U)                                                /**< ENET_RMON_T_BC_PKT.TXPKTS Position      */
#define ENET_RMON_T_BC_PKT_TXPKTS(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_BC_PKT_TXPKTS_SHIFT))&ENET_RMON_T_BC_PKT_TXPKTS_MASK) /**< ENET_RMON_T_BC_PKT.TXPKTS Field         */
/** @} */

/** @name RMON_T_MC_PKT - Tx Multicast Packets Statistic Register */ /** @{ */
#define ENET_RMON_T_MC_PKT_TXPKTS_MASK           (0xFFFFU)                                           /**< ENET_RMON_T_MC_PKT.TXPKTS Mask          */
#define ENET_RMON_T_MC_PKT_TXPKTS_SHIFT          (0U)                                                /**< ENET_RMON_T_MC_PKT.TXPKTS Position      */
#define ENET_RMON_T_MC_PKT_TXPKTS(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_MC_PKT_TXPKTS_SHIFT))&ENET_RMON_T_MC_PKT_TXPKTS_MASK) /**< ENET_RMON_T_MC_PKT.TXPKTS Field         */
/** @} */

/** @name RMON_T_CRC_ALIGN - Tx Packets with CRC/Align Error Statistic Register */ /** @{ */
#define ENET_RMON_T_CRC_ALIGN_TXPKTS_MASK        (0xFFFFU)                                           /**< ENET_RMON_T_CRC_ALIGN.TXPKTS Mask       */
#define ENET_RMON_T_CRC_ALIGN_TXPKTS_SHIFT       (0U)                                                /**< ENET_RMON_T_CRC_ALIGN.TXPKTS Position   */
#define ENET_RMON_T_CRC_ALIGN_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_CRC_ALIGN_TXPKTS_SHIFT))&ENET_RMON_T_CRC_ALIGN_TXPKTS_MASK) /**< ENET_RMON_T_CRC_ALIGN.TXPKTS Field      */
/** @} */

/** @name RMON_T_UNDERSIZE - Tx Packets Less Than Bytes and Good CRC Statistic Register */ /** @{ */
#define ENET_RMON_T_UNDERSIZE_TXPKTS_MASK        (0xFFFFU)                                           /**< ENET_RMON_T_UNDERSIZE.TXPKTS Mask       */
#define ENET_RMON_T_UNDERSIZE_TXPKTS_SHIFT       (0U)                                                /**< ENET_RMON_T_UNDERSIZE.TXPKTS Position   */
#define ENET_RMON_T_UNDERSIZE_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_UNDERSIZE_TXPKTS_SHIFT))&ENET_RMON_T_UNDERSIZE_TXPKTS_MASK) /**< ENET_RMON_T_UNDERSIZE.TXPKTS Field      */
/** @} */

/** @name RMON_T_OVERSIZE - Tx Packets GT MAX_FL bytes and Good CRC Statistic Register */ /** @{ */
#define ENET_RMON_T_OVERSIZE_TXPKTS_MASK         (0xFFFFU)                                           /**< ENET_RMON_T_OVERSIZE.TXPKTS Mask        */
#define ENET_RMON_T_OVERSIZE_TXPKTS_SHIFT        (0U)                                                /**< ENET_RMON_T_OVERSIZE.TXPKTS Position    */
#define ENET_RMON_T_OVERSIZE_TXPKTS(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_OVERSIZE_TXPKTS_SHIFT))&ENET_RMON_T_OVERSIZE_TXPKTS_MASK) /**< ENET_RMON_T_OVERSIZE.TXPKTS Field       */
/** @} */

/** @name RMON_T_FRAG - Tx Packets Less Than 64 Bytes and Bad CRC Statistic Register */ /** @{ */
#define ENET_RMON_T_FRAG_TXPKTS_MASK             (0xFFFFU)                                           /**< ENET_RMON_T_FRAG.TXPKTS Mask            */
#define ENET_RMON_T_FRAG_TXPKTS_SHIFT            (0U)                                                /**< ENET_RMON_T_FRAG.TXPKTS Position        */
#define ENET_RMON_T_FRAG_TXPKTS(x)               (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_FRAG_TXPKTS_SHIFT))&ENET_RMON_T_FRAG_TXPKTS_MASK) /**< ENET_RMON_T_FRAG.TXPKTS Field           */
/** @} */

/** @name RMON_T_JAB - Tx Packets Greater Than MAX_FL bytes and Bad CRC Statistic Register */ /** @{ */
#define ENET_RMON_T_JAB_TXPKTS_MASK              (0xFFFFU)                                           /**< ENET_RMON_T_JAB.TXPKTS Mask             */
#define ENET_RMON_T_JAB_TXPKTS_SHIFT             (0U)                                                /**< ENET_RMON_T_JAB.TXPKTS Position         */
#define ENET_RMON_T_JAB_TXPKTS(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_JAB_TXPKTS_SHIFT))&ENET_RMON_T_JAB_TXPKTS_MASK) /**< ENET_RMON_T_JAB.TXPKTS Field            */
/** @} */

/** @name RMON_T_COL - Tx Collision Count Statistic Register */ /** @{ */
#define ENET_RMON_T_COL_TXPKTS_MASK              (0xFFFFU)                                           /**< ENET_RMON_T_COL.TXPKTS Mask             */
#define ENET_RMON_T_COL_TXPKTS_SHIFT             (0U)                                                /**< ENET_RMON_T_COL.TXPKTS Position         */
#define ENET_RMON_T_COL_TXPKTS(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_COL_TXPKTS_SHIFT))&ENET_RMON_T_COL_TXPKTS_MASK) /**< ENET_RMON_T_COL.TXPKTS Field            */
/** @} */

/** @name RMON_T_P64 - Tx 64-Byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_T_P64_TXPKTS_MASK              (0xFFFFU)                                           /**< ENET_RMON_T_P64.TXPKTS Mask             */
#define ENET_RMON_T_P64_TXPKTS_SHIFT             (0U)                                                /**< ENET_RMON_T_P64.TXPKTS Position         */
#define ENET_RMON_T_P64_TXPKTS(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P64_TXPKTS_SHIFT))&ENET_RMON_T_P64_TXPKTS_MASK) /**< ENET_RMON_T_P64.TXPKTS Field            */
/** @} */

/** @name RMON_T_P65TO127 - Tx 65- to 127-byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_T_P65TO127_TXPKTS_MASK         (0xFFFFU)                                           /**< ENET_RMON_T_P65TO127.TXPKTS Mask        */
#define ENET_RMON_T_P65TO127_TXPKTS_SHIFT        (0U)                                                /**< ENET_RMON_T_P65TO127.TXPKTS Position    */
#define ENET_RMON_T_P65TO127_TXPKTS(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P65TO127_TXPKTS_SHIFT))&ENET_RMON_T_P65TO127_TXPKTS_MASK) /**< ENET_RMON_T_P65TO127.TXPKTS Field       */
/** @} */

/** @name RMON_T_P128TO255 - Tx 128- to 255-byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_T_P128TO255_TXPKTS_MASK        (0xFFFFU)                                           /**< ENET_RMON_T_P128TO255.TXPKTS Mask       */
#define ENET_RMON_T_P128TO255_TXPKTS_SHIFT       (0U)                                                /**< ENET_RMON_T_P128TO255.TXPKTS Position   */
#define ENET_RMON_T_P128TO255_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P128TO255_TXPKTS_SHIFT))&ENET_RMON_T_P128TO255_TXPKTS_MASK) /**< ENET_RMON_T_P128TO255.TXPKTS Field      */
/** @} */

/** @name RMON_T_P256TO511 - Tx 256- to 511-byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_T_P256TO511_TXPKTS_MASK        (0xFFFFU)                                           /**< ENET_RMON_T_P256TO511.TXPKTS Mask       */
#define ENET_RMON_T_P256TO511_TXPKTS_SHIFT       (0U)                                                /**< ENET_RMON_T_P256TO511.TXPKTS Position   */
#define ENET_RMON_T_P256TO511_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P256TO511_TXPKTS_SHIFT))&ENET_RMON_T_P256TO511_TXPKTS_MASK) /**< ENET_RMON_T_P256TO511.TXPKTS Field      */
/** @} */

/** @name RMON_T_P512TO1023 - Tx 512- to 1023-byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_T_P512TO1023_TXPKTS_MASK       (0xFFFFU)                                           /**< ENET_RMON_T_P512TO1023.TXPKTS Mask      */
#define ENET_RMON_T_P512TO1023_TXPKTS_SHIFT      (0U)                                                /**< ENET_RMON_T_P512TO1023.TXPKTS Position  */
#define ENET_RMON_T_P512TO1023_TXPKTS(x)         (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P512TO1023_TXPKTS_SHIFT))&ENET_RMON_T_P512TO1023_TXPKTS_MASK) /**< ENET_RMON_T_P512TO1023.TXPKTS Field     */
/** @} */

/** @name RMON_T_P1024TO2047 - Tx 1024- to 2047-byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_T_P1024TO2047_TXPKTS_MASK      (0xFFFFU)                                           /**< ENET_RMON_T_P1024TO2047.TXPKTS Mask     */
#define ENET_RMON_T_P1024TO2047_TXPKTS_SHIFT     (0U)                                                /**< ENET_RMON_T_P1024TO2047.TXPKTS Position */
#define ENET_RMON_T_P1024TO2047_TXPKTS(x)        (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P1024TO2047_TXPKTS_SHIFT))&ENET_RMON_T_P1024TO2047_TXPKTS_MASK) /**< ENET_RMON_T_P1024TO2047.TXPKTS Field    */
/** @} */

/** @name RMON_T_P_GTE2048 - Tx Packets Greater Than 2048 Bytes Statistic Register */ /** @{ */
#define ENET_RMON_T_P_GTE2048_TXPKTS_MASK        (0xFFFFU)                                           /**< ENET_RMON_T_P_GTE2048.TXPKTS Mask       */
#define ENET_RMON_T_P_GTE2048_TXPKTS_SHIFT       (0U)                                                /**< ENET_RMON_T_P_GTE2048.TXPKTS Position   */
#define ENET_RMON_T_P_GTE2048_TXPKTS(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_P_GTE2048_TXPKTS_SHIFT))&ENET_RMON_T_P_GTE2048_TXPKTS_MASK) /**< ENET_RMON_T_P_GTE2048.TXPKTS Field      */
/** @} */

/** @name RMON_T_OCTETS - Tx Octets Statistic Register */ /** @{ */
#define ENET_RMON_T_OCTETS_TXOCTS_MASK           (0xFFFFFFFFU)                                       /**< ENET_RMON_T_OCTETS.TXOCTS Mask          */
#define ENET_RMON_T_OCTETS_TXOCTS_SHIFT          (0U)                                                /**< ENET_RMON_T_OCTETS.TXOCTS Position      */
#define ENET_RMON_T_OCTETS_TXOCTS(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_T_OCTETS_TXOCTS_SHIFT))&ENET_RMON_T_OCTETS_TXOCTS_MASK) /**< ENET_RMON_T_OCTETS.TXOCTS Field         */
/** @} */

/** @name IEEE_T_FRAME_OK - Frames Transmitted OK Statistic Register */ /** @{ */
#define ENET_IEEE_T_FRAME_OK_COUNT_MASK          (0xFFFFU)                                           /**< ENET_IEEE_T_FRAME_OK.COUNT Mask         */
#define ENET_IEEE_T_FRAME_OK_COUNT_SHIFT         (0U)                                                /**< ENET_IEEE_T_FRAME_OK.COUNT Position     */
#define ENET_IEEE_T_FRAME_OK_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_FRAME_OK_COUNT_SHIFT))&ENET_IEEE_T_FRAME_OK_COUNT_MASK) /**< ENET_IEEE_T_FRAME_OK.COUNT Field        */
/** @} */

/** @name IEEE_T_1COL - Frames Transmitted with Single Collision Statistic Register */ /** @{ */
#define ENET_IEEE_T_1COL_COUNT_MASK              (0xFFFFU)                                           /**< ENET_IEEE_T_1COL.COUNT Mask             */
#define ENET_IEEE_T_1COL_COUNT_SHIFT             (0U)                                                /**< ENET_IEEE_T_1COL.COUNT Position         */
#define ENET_IEEE_T_1COL_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_1COL_COUNT_SHIFT))&ENET_IEEE_T_1COL_COUNT_MASK) /**< ENET_IEEE_T_1COL.COUNT Field            */
/** @} */

/** @name IEEE_T_MCOL - Frames Transmitted with Multiple Collisions Statistic Register */ /** @{ */
#define ENET_IEEE_T_MCOL_COUNT_MASK              (0xFFFFU)                                           /**< ENET_IEEE_T_MCOL.COUNT Mask             */
#define ENET_IEEE_T_MCOL_COUNT_SHIFT             (0U)                                                /**< ENET_IEEE_T_MCOL.COUNT Position         */
#define ENET_IEEE_T_MCOL_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_MCOL_COUNT_SHIFT))&ENET_IEEE_T_MCOL_COUNT_MASK) /**< ENET_IEEE_T_MCOL.COUNT Field            */
/** @} */

/** @name IEEE_T_DEF - Frames Transmitted after Deferral Delay Statistic Register */ /** @{ */
#define ENET_IEEE_T_DEF_COUNT_MASK               (0xFFFFU)                                           /**< ENET_IEEE_T_DEF.COUNT Mask              */
#define ENET_IEEE_T_DEF_COUNT_SHIFT              (0U)                                                /**< ENET_IEEE_T_DEF.COUNT Position          */
#define ENET_IEEE_T_DEF_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_DEF_COUNT_SHIFT))&ENET_IEEE_T_DEF_COUNT_MASK) /**< ENET_IEEE_T_DEF.COUNT Field             */
/** @} */

/** @name IEEE_T_LCOL - Frames Transmitted with Late Collision Statistic Register */ /** @{ */
#define ENET_IEEE_T_LCOL_COUNT_MASK              (0xFFFFU)                                           /**< ENET_IEEE_T_LCOL.COUNT Mask             */
#define ENET_IEEE_T_LCOL_COUNT_SHIFT             (0U)                                                /**< ENET_IEEE_T_LCOL.COUNT Position         */
#define ENET_IEEE_T_LCOL_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_LCOL_COUNT_SHIFT))&ENET_IEEE_T_LCOL_COUNT_MASK) /**< ENET_IEEE_T_LCOL.COUNT Field            */
/** @} */

/** @name IEEE_T_EXCOL - Frames Transmitted with Excessive Collisions Statistic Register */ /** @{ */
#define ENET_IEEE_T_EXCOL_COUNT_MASK             (0xFFFFU)                                           /**< ENET_IEEE_T_EXCOL.COUNT Mask            */
#define ENET_IEEE_T_EXCOL_COUNT_SHIFT            (0U)                                                /**< ENET_IEEE_T_EXCOL.COUNT Position        */
#define ENET_IEEE_T_EXCOL_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_EXCOL_COUNT_SHIFT))&ENET_IEEE_T_EXCOL_COUNT_MASK) /**< ENET_IEEE_T_EXCOL.COUNT Field           */
/** @} */

/** @name IEEE_T_MACERR - Frames Transmitted with Tx FIFO Underrun Statistic Register */ /** @{ */
#define ENET_IEEE_T_MACERR_COUNT_MASK            (0xFFFFU)                                           /**< ENET_IEEE_T_MACERR.COUNT Mask           */
#define ENET_IEEE_T_MACERR_COUNT_SHIFT           (0U)                                                /**< ENET_IEEE_T_MACERR.COUNT Position       */
#define ENET_IEEE_T_MACERR_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_MACERR_COUNT_SHIFT))&ENET_IEEE_T_MACERR_COUNT_MASK) /**< ENET_IEEE_T_MACERR.COUNT Field          */
/** @} */

/** @name IEEE_T_CSERR - Frames Transmitted with Carrier Sense Error Statistic Register */ /** @{ */
#define ENET_IEEE_T_CSERR_COUNT_MASK             (0xFFFFU)                                           /**< ENET_IEEE_T_CSERR.COUNT Mask            */
#define ENET_IEEE_T_CSERR_COUNT_SHIFT            (0U)                                                /**< ENET_IEEE_T_CSERR.COUNT Position        */
#define ENET_IEEE_T_CSERR_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_CSERR_COUNT_SHIFT))&ENET_IEEE_T_CSERR_COUNT_MASK) /**< ENET_IEEE_T_CSERR.COUNT Field           */
/** @} */

/** @name IEEE_T_SQE - Reserved Statistic Register */ /** @{ */
#define ENET_IEEE_T_SQE_COUNT_MASK               (0xFFFFU)                                           /**< ENET_IEEE_T_SQE.COUNT Mask              */
#define ENET_IEEE_T_SQE_COUNT_SHIFT              (0U)                                                /**< ENET_IEEE_T_SQE.COUNT Position          */
#define ENET_IEEE_T_SQE_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_SQE_COUNT_SHIFT))&ENET_IEEE_T_SQE_COUNT_MASK) /**< ENET_IEEE_T_SQE.COUNT Field             */
/** @} */

/** @name IEEE_T_FDXFC - Flow Control Pause Frames Transmitted Statistic Register */ /** @{ */
#define ENET_IEEE_T_FDXFC_COUNT_MASK             (0xFFFFU)                                           /**< ENET_IEEE_T_FDXFC.COUNT Mask            */
#define ENET_IEEE_T_FDXFC_COUNT_SHIFT            (0U)                                                /**< ENET_IEEE_T_FDXFC.COUNT Position        */
#define ENET_IEEE_T_FDXFC_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_FDXFC_COUNT_SHIFT))&ENET_IEEE_T_FDXFC_COUNT_MASK) /**< ENET_IEEE_T_FDXFC.COUNT Field           */
/** @} */

/** @name IEEE_T_OCTETS_OK - Octet Count for Frames Transmitted w/o Error Statistic Register */ /** @{ */
#define ENET_IEEE_T_OCTETS_OK_COUNT_MASK         (0xFFFFFFFFU)                                       /**< ENET_IEEE_T_OCTETS_OK.COUNT Mask        */
#define ENET_IEEE_T_OCTETS_OK_COUNT_SHIFT        (0U)                                                /**< ENET_IEEE_T_OCTETS_OK.COUNT Position    */
#define ENET_IEEE_T_OCTETS_OK_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_T_OCTETS_OK_COUNT_SHIFT))&ENET_IEEE_T_OCTETS_OK_COUNT_MASK) /**< ENET_IEEE_T_OCTETS_OK.COUNT Field       */
/** @} */

/** @name RMON_R_PACKETS - Rx Packet Count Statistic Register */ /** @{ */
#define ENET_RMON_R_PACKETS_COUNT_MASK           (0xFFFFU)                                           /**< ENET_RMON_R_PACKETS.COUNT Mask          */
#define ENET_RMON_R_PACKETS_COUNT_SHIFT          (0U)                                                /**< ENET_RMON_R_PACKETS.COUNT Position      */
#define ENET_RMON_R_PACKETS_COUNT(x)             (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_PACKETS_COUNT_SHIFT))&ENET_RMON_R_PACKETS_COUNT_MASK) /**< ENET_RMON_R_PACKETS.COUNT Field         */
/** @} */

/** @name RMON_R_BC_PKT - Rx Broadcast Packets Statistic Register */ /** @{ */
#define ENET_RMON_R_BC_PKT_COUNT_MASK            (0xFFFFU)                                           /**< ENET_RMON_R_BC_PKT.COUNT Mask           */
#define ENET_RMON_R_BC_PKT_COUNT_SHIFT           (0U)                                                /**< ENET_RMON_R_BC_PKT.COUNT Position       */
#define ENET_RMON_R_BC_PKT_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_BC_PKT_COUNT_SHIFT))&ENET_RMON_R_BC_PKT_COUNT_MASK) /**< ENET_RMON_R_BC_PKT.COUNT Field          */
/** @} */

/** @name RMON_R_MC_PKT - Rx Multicast Packets Statistic Register */ /** @{ */
#define ENET_RMON_R_MC_PKT_COUNT_MASK            (0xFFFFU)                                           /**< ENET_RMON_R_MC_PKT.COUNT Mask           */
#define ENET_RMON_R_MC_PKT_COUNT_SHIFT           (0U)                                                /**< ENET_RMON_R_MC_PKT.COUNT Position       */
#define ENET_RMON_R_MC_PKT_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_MC_PKT_COUNT_SHIFT))&ENET_RMON_R_MC_PKT_COUNT_MASK) /**< ENET_RMON_R_MC_PKT.COUNT Field          */
/** @} */

/** @name RMON_R_CRC_ALIGN - Rx Packets with CRC/Align Error Statistic Register */ /** @{ */
#define ENET_RMON_R_CRC_ALIGN_COUNT_MASK         (0xFFFFU)                                           /**< ENET_RMON_R_CRC_ALIGN.COUNT Mask        */
#define ENET_RMON_R_CRC_ALIGN_COUNT_SHIFT        (0U)                                                /**< ENET_RMON_R_CRC_ALIGN.COUNT Position    */
#define ENET_RMON_R_CRC_ALIGN_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_CRC_ALIGN_COUNT_SHIFT))&ENET_RMON_R_CRC_ALIGN_COUNT_MASK) /**< ENET_RMON_R_CRC_ALIGN.COUNT Field       */
/** @} */

/** @name RMON_R_UNDERSIZE - Rx Packets with Less Than 64 Bytes and Good CRC Statistic Register */ /** @{ */
#define ENET_RMON_R_UNDERSIZE_COUNT_MASK         (0xFFFFU)                                           /**< ENET_RMON_R_UNDERSIZE.COUNT Mask        */
#define ENET_RMON_R_UNDERSIZE_COUNT_SHIFT        (0U)                                                /**< ENET_RMON_R_UNDERSIZE.COUNT Position    */
#define ENET_RMON_R_UNDERSIZE_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_UNDERSIZE_COUNT_SHIFT))&ENET_RMON_R_UNDERSIZE_COUNT_MASK) /**< ENET_RMON_R_UNDERSIZE.COUNT Field       */
/** @} */

/** @name RMON_R_OVERSIZE - Rx Packets Greater Than MAX_FL and Good CRC Statistic Register */ /** @{ */
#define ENET_RMON_R_OVERSIZE_COUNT_MASK          (0xFFFFU)                                           /**< ENET_RMON_R_OVERSIZE.COUNT Mask         */
#define ENET_RMON_R_OVERSIZE_COUNT_SHIFT         (0U)                                                /**< ENET_RMON_R_OVERSIZE.COUNT Position     */
#define ENET_RMON_R_OVERSIZE_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_OVERSIZE_COUNT_SHIFT))&ENET_RMON_R_OVERSIZE_COUNT_MASK) /**< ENET_RMON_R_OVERSIZE.COUNT Field        */
/** @} */

/** @name RMON_R_FRAG - Rx Packets Less Than 64 Bytes and Bad CRC Statistic Register */ /** @{ */
#define ENET_RMON_R_FRAG_COUNT_MASK              (0xFFFFU)                                           /**< ENET_RMON_R_FRAG.COUNT Mask             */
#define ENET_RMON_R_FRAG_COUNT_SHIFT             (0U)                                                /**< ENET_RMON_R_FRAG.COUNT Position         */
#define ENET_RMON_R_FRAG_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_FRAG_COUNT_SHIFT))&ENET_RMON_R_FRAG_COUNT_MASK) /**< ENET_RMON_R_FRAG.COUNT Field            */
/** @} */

/** @name RMON_R_JAB - Rx Packets Greater Than MAX_FL Bytes and Bad CRC Statistic Register */ /** @{ */
#define ENET_RMON_R_JAB_COUNT_MASK               (0xFFFFU)                                           /**< ENET_RMON_R_JAB.COUNT Mask              */
#define ENET_RMON_R_JAB_COUNT_SHIFT              (0U)                                                /**< ENET_RMON_R_JAB.COUNT Position          */
#define ENET_RMON_R_JAB_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_JAB_COUNT_SHIFT))&ENET_RMON_R_JAB_COUNT_MASK) /**< ENET_RMON_R_JAB.COUNT Field             */
/** @} */

/** @name RMON_R_P64 - Rx 64-Byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_R_P64_COUNT_MASK               (0xFFFFU)                                           /**< ENET_RMON_R_P64.COUNT Mask              */
#define ENET_RMON_R_P64_COUNT_SHIFT              (0U)                                                /**< ENET_RMON_R_P64.COUNT Position          */
#define ENET_RMON_R_P64_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P64_COUNT_SHIFT))&ENET_RMON_R_P64_COUNT_MASK) /**< ENET_RMON_R_P64.COUNT Field             */
/** @} */

/** @name RMON_R_P65TO127 - Rx 65- to 127-Byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_R_P65TO127_COUNT_MASK          (0xFFFFU)                                           /**< ENET_RMON_R_P65TO127.COUNT Mask         */
#define ENET_RMON_R_P65TO127_COUNT_SHIFT         (0U)                                                /**< ENET_RMON_R_P65TO127.COUNT Position     */
#define ENET_RMON_R_P65TO127_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P65TO127_COUNT_SHIFT))&ENET_RMON_R_P65TO127_COUNT_MASK) /**< ENET_RMON_R_P65TO127.COUNT Field        */
/** @} */

/** @name RMON_R_P128TO255 - Rx 128- to 255-Byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_R_P128TO255_COUNT_MASK         (0xFFFFU)                                           /**< ENET_RMON_R_P128TO255.COUNT Mask        */
#define ENET_RMON_R_P128TO255_COUNT_SHIFT        (0U)                                                /**< ENET_RMON_R_P128TO255.COUNT Position    */
#define ENET_RMON_R_P128TO255_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P128TO255_COUNT_SHIFT))&ENET_RMON_R_P128TO255_COUNT_MASK) /**< ENET_RMON_R_P128TO255.COUNT Field       */
/** @} */

/** @name RMON_R_P256TO511 - Rx 256- to 511-Byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_R_P256TO511_COUNT_MASK         (0xFFFFU)                                           /**< ENET_RMON_R_P256TO511.COUNT Mask        */
#define ENET_RMON_R_P256TO511_COUNT_SHIFT        (0U)                                                /**< ENET_RMON_R_P256TO511.COUNT Position    */
#define ENET_RMON_R_P256TO511_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P256TO511_COUNT_SHIFT))&ENET_RMON_R_P256TO511_COUNT_MASK) /**< ENET_RMON_R_P256TO511.COUNT Field       */
/** @} */

/** @name RMON_R_P512TO1023 - Rx 512- to 1023-Byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_R_P512TO1023_COUNT_MASK        (0xFFFFU)                                           /**< ENET_RMON_R_P512TO1023.COUNT Mask       */
#define ENET_RMON_R_P512TO1023_COUNT_SHIFT       (0U)                                                /**< ENET_RMON_R_P512TO1023.COUNT Position   */
#define ENET_RMON_R_P512TO1023_COUNT(x)          (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P512TO1023_COUNT_SHIFT))&ENET_RMON_R_P512TO1023_COUNT_MASK) /**< ENET_RMON_R_P512TO1023.COUNT Field      */
/** @} */

/** @name RMON_R_P1024TO2047 - Rx 1024- to 2047-Byte Packets Statistic Register */ /** @{ */
#define ENET_RMON_R_P1024TO2047_COUNT_MASK       (0xFFFFU)                                           /**< ENET_RMON_R_P1024TO2047.COUNT Mask      */
#define ENET_RMON_R_P1024TO2047_COUNT_SHIFT      (0U)                                                /**< ENET_RMON_R_P1024TO2047.COUNT Position  */
#define ENET_RMON_R_P1024TO2047_COUNT(x)         (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P1024TO2047_COUNT_SHIFT))&ENET_RMON_R_P1024TO2047_COUNT_MASK) /**< ENET_RMON_R_P1024TO2047.COUNT Field     */
/** @} */

/** @name RMON_R_P_GTE2048 - Rx Packets Greater than 2048 Bytes Statistic Register */ /** @{ */
#define ENET_RMON_R_P_GTE2048_COUNT_MASK         (0xFFFFU)                                           /**< ENET_RMON_R_P_GTE2048.COUNT Mask        */
#define ENET_RMON_R_P_GTE2048_COUNT_SHIFT        (0U)                                                /**< ENET_RMON_R_P_GTE2048.COUNT Position    */
#define ENET_RMON_R_P_GTE2048_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_P_GTE2048_COUNT_SHIFT))&ENET_RMON_R_P_GTE2048_COUNT_MASK) /**< ENET_RMON_R_P_GTE2048.COUNT Field       */
/** @} */

/** @name RMON_R_OCTETS - Rx Octets Statistic Register */ /** @{ */
#define ENET_RMON_R_OCTETS_COUNT_MASK            (0xFFFFFFFFU)                                       /**< ENET_RMON_R_OCTETS.COUNT Mask           */
#define ENET_RMON_R_OCTETS_COUNT_SHIFT           (0U)                                                /**< ENET_RMON_R_OCTETS.COUNT Position       */
#define ENET_RMON_R_OCTETS_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_RMON_R_OCTETS_COUNT_SHIFT))&ENET_RMON_R_OCTETS_COUNT_MASK) /**< ENET_RMON_R_OCTETS.COUNT Field          */
/** @} */

/** @name IEEE_R_DROP - Frames not Counted Correctly Statistic Register */ /** @{ */
#define ENET_IEEE_R_DROP_COUNT_MASK              (0xFFFFU)                                           /**< ENET_IEEE_R_DROP.COUNT Mask             */
#define ENET_IEEE_R_DROP_COUNT_SHIFT             (0U)                                                /**< ENET_IEEE_R_DROP.COUNT Position         */
#define ENET_IEEE_R_DROP_COUNT(x)                (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_DROP_COUNT_SHIFT))&ENET_IEEE_R_DROP_COUNT_MASK) /**< ENET_IEEE_R_DROP.COUNT Field            */
/** @} */

/** @name IEEE_R_FRAME_OK - Frames Received OK Statistic Register */ /** @{ */
#define ENET_IEEE_R_FRAME_OK_COUNT_MASK          (0xFFFFU)                                           /**< ENET_IEEE_R_FRAME_OK.COUNT Mask         */
#define ENET_IEEE_R_FRAME_OK_COUNT_SHIFT         (0U)                                                /**< ENET_IEEE_R_FRAME_OK.COUNT Position     */
#define ENET_IEEE_R_FRAME_OK_COUNT(x)            (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_FRAME_OK_COUNT_SHIFT))&ENET_IEEE_R_FRAME_OK_COUNT_MASK) /**< ENET_IEEE_R_FRAME_OK.COUNT Field        */
/** @} */

/** @name IEEE_R_CRC - Frames Received with CRC Error Statistic Register */ /** @{ */
#define ENET_IEEE_R_CRC_COUNT_MASK               (0xFFFFU)                                           /**< ENET_IEEE_R_CRC.COUNT Mask              */
#define ENET_IEEE_R_CRC_COUNT_SHIFT              (0U)                                                /**< ENET_IEEE_R_CRC.COUNT Position          */
#define ENET_IEEE_R_CRC_COUNT(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_CRC_COUNT_SHIFT))&ENET_IEEE_R_CRC_COUNT_MASK) /**< ENET_IEEE_R_CRC.COUNT Field             */
/** @} */

/** @name IEEE_R_ALIGN - Frames Received with Alignment Error Statistic Register */ /** @{ */
#define ENET_IEEE_R_ALIGN_COUNT_MASK             (0xFFFFU)                                           /**< ENET_IEEE_R_ALIGN.COUNT Mask            */
#define ENET_IEEE_R_ALIGN_COUNT_SHIFT            (0U)                                                /**< ENET_IEEE_R_ALIGN.COUNT Position        */
#define ENET_IEEE_R_ALIGN_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_ALIGN_COUNT_SHIFT))&ENET_IEEE_R_ALIGN_COUNT_MASK) /**< ENET_IEEE_R_ALIGN.COUNT Field           */
/** @} */

/** @name IEEE_R_MACERR - Receive FIFO Overflow Count Statistic Register */ /** @{ */
#define ENET_IEEE_R_MACERR_COUNT_MASK            (0xFFFFU)                                           /**< ENET_IEEE_R_MACERR.COUNT Mask           */
#define ENET_IEEE_R_MACERR_COUNT_SHIFT           (0U)                                                /**< ENET_IEEE_R_MACERR.COUNT Position       */
#define ENET_IEEE_R_MACERR_COUNT(x)              (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_MACERR_COUNT_SHIFT))&ENET_IEEE_R_MACERR_COUNT_MASK) /**< ENET_IEEE_R_MACERR.COUNT Field          */
/** @} */

/** @name IEEE_R_FDXFC - Flow Control Pause Frames Received Statistic Register */ /** @{ */
#define ENET_IEEE_R_FDXFC_COUNT_MASK             (0xFFFFU)                                           /**< ENET_IEEE_R_FDXFC.COUNT Mask            */
#define ENET_IEEE_R_FDXFC_COUNT_SHIFT            (0U)                                                /**< ENET_IEEE_R_FDXFC.COUNT Position        */
#define ENET_IEEE_R_FDXFC_COUNT(x)               (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_FDXFC_COUNT_SHIFT))&ENET_IEEE_R_FDXFC_COUNT_MASK) /**< ENET_IEEE_R_FDXFC.COUNT Field           */
/** @} */

/** @name IEEE_R_OCTETS_OK - Octet Count for Frames Received without Error Statistic Register */ /** @{ */
#define ENET_IEEE_R_OCTETS_OK_COUNT_MASK         (0xFFFFFFFFU)                                       /**< ENET_IEEE_R_OCTETS_OK.COUNT Mask        */
#define ENET_IEEE_R_OCTETS_OK_COUNT_SHIFT        (0U)                                                /**< ENET_IEEE_R_OCTETS_OK.COUNT Position    */
#define ENET_IEEE_R_OCTETS_OK_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<ENET_IEEE_R_OCTETS_OK_COUNT_SHIFT))&ENET_IEEE_R_OCTETS_OK_COUNT_MASK) /**< ENET_IEEE_R_OCTETS_OK.COUNT Field       */
/** @} */

/** @name ATCR - Adjustable Timer Control Register */ /** @{ */
#define ENET_ATCR_EN_MASK                        (0x1U)                                              /**< ENET_ATCR.EN Mask                       */
#define ENET_ATCR_EN_SHIFT                       (0U)                                                /**< ENET_ATCR.EN Position                   */
#define ENET_ATCR_EN(x)                          (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_EN_SHIFT))&ENET_ATCR_EN_MASK) /**< ENET_ATCR.EN Field                      */
#define ENET_ATCR_OFFEN_MASK                     (0x4U)                                              /**< ENET_ATCR.OFFEN Mask                    */
#define ENET_ATCR_OFFEN_SHIFT                    (2U)                                                /**< ENET_ATCR.OFFEN Position                */
#define ENET_ATCR_OFFEN(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_OFFEN_SHIFT))&ENET_ATCR_OFFEN_MASK) /**< ENET_ATCR.OFFEN Field                   */
#define ENET_ATCR_OFFRST_MASK                    (0x8U)                                              /**< ENET_ATCR.OFFRST Mask                   */
#define ENET_ATCR_OFFRST_SHIFT                   (3U)                                                /**< ENET_ATCR.OFFRST Position               */
#define ENET_ATCR_OFFRST(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_OFFRST_SHIFT))&ENET_ATCR_OFFRST_MASK) /**< ENET_ATCR.OFFRST Field                  */
#define ENET_ATCR_PEREN_MASK                     (0x10U)                                             /**< ENET_ATCR.PEREN Mask                    */
#define ENET_ATCR_PEREN_SHIFT                    (4U)                                                /**< ENET_ATCR.PEREN Position                */
#define ENET_ATCR_PEREN(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_PEREN_SHIFT))&ENET_ATCR_PEREN_MASK) /**< ENET_ATCR.PEREN Field                   */
#define ENET_ATCR_PINPER_MASK                    (0x80U)                                             /**< ENET_ATCR.PINPER Mask                   */
#define ENET_ATCR_PINPER_SHIFT                   (7U)                                                /**< ENET_ATCR.PINPER Position               */
#define ENET_ATCR_PINPER(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_PINPER_SHIFT))&ENET_ATCR_PINPER_MASK) /**< ENET_ATCR.PINPER Field                  */
#define ENET_ATCR_RESTART_MASK                   (0x200U)                                            /**< ENET_ATCR.RESTART Mask                  */
#define ENET_ATCR_RESTART_SHIFT                  (9U)                                                /**< ENET_ATCR.RESTART Position              */
#define ENET_ATCR_RESTART(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_RESTART_SHIFT))&ENET_ATCR_RESTART_MASK) /**< ENET_ATCR.RESTART Field                 */
#define ENET_ATCR_CAPTURE_MASK                   (0x800U)                                            /**< ENET_ATCR.CAPTURE Mask                  */
#define ENET_ATCR_CAPTURE_SHIFT                  (11U)                                               /**< ENET_ATCR.CAPTURE Position              */
#define ENET_ATCR_CAPTURE(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_CAPTURE_SHIFT))&ENET_ATCR_CAPTURE_MASK) /**< ENET_ATCR.CAPTURE Field                 */
#define ENET_ATCR_SLAVE_MASK                     (0x2000U)                                           /**< ENET_ATCR.SLAVE Mask                    */
#define ENET_ATCR_SLAVE_SHIFT                    (13U)                                               /**< ENET_ATCR.SLAVE Position                */
#define ENET_ATCR_SLAVE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATCR_SLAVE_SHIFT))&ENET_ATCR_SLAVE_MASK) /**< ENET_ATCR.SLAVE Field                   */
/** @} */

/** @name ATVR - Timer Value Register */ /** @{ */
#define ENET_ATVR_ATIME_MASK                     (0xFFFFFFFFU)                                       /**< ENET_ATVR.ATIME Mask                    */
#define ENET_ATVR_ATIME_SHIFT                    (0U)                                                /**< ENET_ATVR.ATIME Position                */
#define ENET_ATVR_ATIME(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_ATVR_ATIME_SHIFT))&ENET_ATVR_ATIME_MASK) /**< ENET_ATVR.ATIME Field                   */
/** @} */

/** @name ATOFF - Timer Offset Register */ /** @{ */
#define ENET_ATOFF_OFFSET_MASK                   (0xFFFFFFFFU)                                       /**< ENET_ATOFF.OFFSET Mask                  */
#define ENET_ATOFF_OFFSET_SHIFT                  (0U)                                                /**< ENET_ATOFF.OFFSET Position              */
#define ENET_ATOFF_OFFSET(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATOFF_OFFSET_SHIFT))&ENET_ATOFF_OFFSET_MASK) /**< ENET_ATOFF.OFFSET Field                 */
/** @} */

/** @name ATPER - Timer Period Register */ /** @{ */
#define ENET_ATPER_PERIOD_MASK                   (0xFFFFFFFFU)                                       /**< ENET_ATPER.PERIOD Mask                  */
#define ENET_ATPER_PERIOD_SHIFT                  (0U)                                                /**< ENET_ATPER.PERIOD Position              */
#define ENET_ATPER_PERIOD(x)                     (((uint32_t)(((uint32_t)(x))<<ENET_ATPER_PERIOD_SHIFT))&ENET_ATPER_PERIOD_MASK) /**< ENET_ATPER.PERIOD Field                 */
/** @} */

/** @name ATCOR - Timer Correction Register */ /** @{ */
#define ENET_ATCOR_COR_MASK                      (0x7FFFFFFFU)                                       /**< ENET_ATCOR.COR Mask                     */
#define ENET_ATCOR_COR_SHIFT                     (0U)                                                /**< ENET_ATCOR.COR Position                 */
#define ENET_ATCOR_COR(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ATCOR_COR_SHIFT))&ENET_ATCOR_COR_MASK) /**< ENET_ATCOR.COR Field                    */
/** @} */

/** @name ATINC - Time-Stamping Clock Period Register */ /** @{ */
#define ENET_ATINC_INC_MASK                      (0x7FU)                                             /**< ENET_ATINC.INC Mask                     */
#define ENET_ATINC_INC_SHIFT                     (0U)                                                /**< ENET_ATINC.INC Position                 */
#define ENET_ATINC_INC(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_ATINC_INC_SHIFT))&ENET_ATINC_INC_MASK) /**< ENET_ATINC.INC Field                    */
#define ENET_ATINC_INC_CORR_MASK                 (0x7F00U)                                           /**< ENET_ATINC.INC_CORR Mask                */
#define ENET_ATINC_INC_CORR_SHIFT                (8U)                                                /**< ENET_ATINC.INC_CORR Position            */
#define ENET_ATINC_INC_CORR(x)                   (((uint32_t)(((uint32_t)(x))<<ENET_ATINC_INC_CORR_SHIFT))&ENET_ATINC_INC_CORR_MASK) /**< ENET_ATINC.INC_CORR Field               */
/** @} */

/** @name ATSTMP - Timestamp of Last Transmitted Frame */ /** @{ */
#define ENET_ATSTMP_TIMESTAMP_MASK               (0xFFFFFFFFU)                                       /**< ENET_ATSTMP.TIMESTAMP Mask              */
#define ENET_ATSTMP_TIMESTAMP_SHIFT              (0U)                                                /**< ENET_ATSTMP.TIMESTAMP Position          */
#define ENET_ATSTMP_TIMESTAMP(x)                 (((uint32_t)(((uint32_t)(x))<<ENET_ATSTMP_TIMESTAMP_SHIFT))&ENET_ATSTMP_TIMESTAMP_MASK) /**< ENET_ATSTMP.TIMESTAMP Field             */
/** @} */

/** @name TGSR - Timer Global Status Register */ /** @{ */
#define ENET_TGSR_TF0_MASK                       (0x1U)                                              /**< ENET_TGSR.TF0 Mask                      */
#define ENET_TGSR_TF0_SHIFT                      (0U)                                                /**< ENET_TGSR.TF0 Position                  */
#define ENET_TGSR_TF0(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF0_SHIFT))&ENET_TGSR_TF0_MASK) /**< ENET_TGSR.TF0 Field                     */
#define ENET_TGSR_TF1_MASK                       (0x2U)                                              /**< ENET_TGSR.TF1 Mask                      */
#define ENET_TGSR_TF1_SHIFT                      (1U)                                                /**< ENET_TGSR.TF1 Position                  */
#define ENET_TGSR_TF1(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF1_SHIFT))&ENET_TGSR_TF1_MASK) /**< ENET_TGSR.TF1 Field                     */
#define ENET_TGSR_TF2_MASK                       (0x4U)                                              /**< ENET_TGSR.TF2 Mask                      */
#define ENET_TGSR_TF2_SHIFT                      (2U)                                                /**< ENET_TGSR.TF2 Position                  */
#define ENET_TGSR_TF2(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF2_SHIFT))&ENET_TGSR_TF2_MASK) /**< ENET_TGSR.TF2 Field                     */
#define ENET_TGSR_TF3_MASK                       (0x8U)                                              /**< ENET_TGSR.TF3 Mask                      */
#define ENET_TGSR_TF3_SHIFT                      (3U)                                                /**< ENET_TGSR.TF3 Position                  */
#define ENET_TGSR_TF3(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TGSR_TF3_SHIFT))&ENET_TGSR_TF3_MASK) /**< ENET_TGSR.TF3 Field                     */
/** @} */

/** @name TCSR0 - Timer Control Status Register */ /** @{ */
#define ENET_TCSR0_TDRE_MASK                     (0x1U)                                              /**< ENET_TCSR0.TDRE Mask                    */
#define ENET_TCSR0_TDRE_SHIFT                    (0U)                                                /**< ENET_TCSR0.TDRE Position                */
#define ENET_TCSR0_TDRE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCSR0_TDRE_SHIFT))&ENET_TCSR0_TDRE_MASK) /**< ENET_TCSR0.TDRE Field                   */
#define ENET_TCSR0_TMODE_MASK                    (0x3CU)                                             /**< ENET_TCSR0.TMODE Mask                   */
#define ENET_TCSR0_TMODE_SHIFT                   (2U)                                                /**< ENET_TCSR0.TMODE Position               */
#define ENET_TCSR0_TMODE(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_TCSR0_TMODE_SHIFT))&ENET_TCSR0_TMODE_MASK) /**< ENET_TCSR0.TMODE Field                  */
#define ENET_TCSR0_TIE_MASK                      (0x40U)                                             /**< ENET_TCSR0.TIE Mask                     */
#define ENET_TCSR0_TIE_SHIFT                     (6U)                                                /**< ENET_TCSR0.TIE Position                 */
#define ENET_TCSR0_TIE(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCSR0_TIE_SHIFT))&ENET_TCSR0_TIE_MASK) /**< ENET_TCSR0.TIE Field                    */
#define ENET_TCSR0_TF_MASK                       (0x80U)                                             /**< ENET_TCSR0.TF Mask                      */
#define ENET_TCSR0_TF_SHIFT                      (7U)                                                /**< ENET_TCSR0.TF Position                  */
#define ENET_TCSR0_TF(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCSR0_TF_SHIFT))&ENET_TCSR0_TF_MASK) /**< ENET_TCSR0.TF Field                     */
/** @} */

/** @name TCCR0 - Timer Compare Capture Register */ /** @{ */
#define ENET_TCCR0_TCC_MASK                      (0xFFFFFFFFU)                                       /**< ENET_TCCR0.TCC Mask                     */
#define ENET_TCCR0_TCC_SHIFT                     (0U)                                                /**< ENET_TCCR0.TCC Position                 */
#define ENET_TCCR0_TCC(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCCR0_TCC_SHIFT))&ENET_TCCR0_TCC_MASK) /**< ENET_TCCR0.TCC Field                    */
/** @} */

/** @name TCSR1 - Timer Control Status Register */ /** @{ */
#define ENET_TCSR1_TDRE_MASK                     (0x1U)                                              /**< ENET_TCSR1.TDRE Mask                    */
#define ENET_TCSR1_TDRE_SHIFT                    (0U)                                                /**< ENET_TCSR1.TDRE Position                */
#define ENET_TCSR1_TDRE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCSR1_TDRE_SHIFT))&ENET_TCSR1_TDRE_MASK) /**< ENET_TCSR1.TDRE Field                   */
#define ENET_TCSR1_TMODE_MASK                    (0x3CU)                                             /**< ENET_TCSR1.TMODE Mask                   */
#define ENET_TCSR1_TMODE_SHIFT                   (2U)                                                /**< ENET_TCSR1.TMODE Position               */
#define ENET_TCSR1_TMODE(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_TCSR1_TMODE_SHIFT))&ENET_TCSR1_TMODE_MASK) /**< ENET_TCSR1.TMODE Field                  */
#define ENET_TCSR1_TIE_MASK                      (0x40U)                                             /**< ENET_TCSR1.TIE Mask                     */
#define ENET_TCSR1_TIE_SHIFT                     (6U)                                                /**< ENET_TCSR1.TIE Position                 */
#define ENET_TCSR1_TIE(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCSR1_TIE_SHIFT))&ENET_TCSR1_TIE_MASK) /**< ENET_TCSR1.TIE Field                    */
#define ENET_TCSR1_TF_MASK                       (0x80U)                                             /**< ENET_TCSR1.TF Mask                      */
#define ENET_TCSR1_TF_SHIFT                      (7U)                                                /**< ENET_TCSR1.TF Position                  */
#define ENET_TCSR1_TF(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCSR1_TF_SHIFT))&ENET_TCSR1_TF_MASK) /**< ENET_TCSR1.TF Field                     */
/** @} */

/** @name TCCR1 - Timer Compare Capture Register */ /** @{ */
#define ENET_TCCR1_TCC_MASK                      (0xFFFFFFFFU)                                       /**< ENET_TCCR1.TCC Mask                     */
#define ENET_TCCR1_TCC_SHIFT                     (0U)                                                /**< ENET_TCCR1.TCC Position                 */
#define ENET_TCCR1_TCC(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCCR1_TCC_SHIFT))&ENET_TCCR1_TCC_MASK) /**< ENET_TCCR1.TCC Field                    */
/** @} */

/** @name TCSR2 - Timer Control Status Register */ /** @{ */
#define ENET_TCSR2_TDRE_MASK                     (0x1U)                                              /**< ENET_TCSR2.TDRE Mask                    */
#define ENET_TCSR2_TDRE_SHIFT                    (0U)                                                /**< ENET_TCSR2.TDRE Position                */
#define ENET_TCSR2_TDRE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCSR2_TDRE_SHIFT))&ENET_TCSR2_TDRE_MASK) /**< ENET_TCSR2.TDRE Field                   */
#define ENET_TCSR2_TMODE_MASK                    (0x3CU)                                             /**< ENET_TCSR2.TMODE Mask                   */
#define ENET_TCSR2_TMODE_SHIFT                   (2U)                                                /**< ENET_TCSR2.TMODE Position               */
#define ENET_TCSR2_TMODE(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_TCSR2_TMODE_SHIFT))&ENET_TCSR2_TMODE_MASK) /**< ENET_TCSR2.TMODE Field                  */
#define ENET_TCSR2_TIE_MASK                      (0x40U)                                             /**< ENET_TCSR2.TIE Mask                     */
#define ENET_TCSR2_TIE_SHIFT                     (6U)                                                /**< ENET_TCSR2.TIE Position                 */
#define ENET_TCSR2_TIE(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCSR2_TIE_SHIFT))&ENET_TCSR2_TIE_MASK) /**< ENET_TCSR2.TIE Field                    */
#define ENET_TCSR2_TF_MASK                       (0x80U)                                             /**< ENET_TCSR2.TF Mask                      */
#define ENET_TCSR2_TF_SHIFT                      (7U)                                                /**< ENET_TCSR2.TF Position                  */
#define ENET_TCSR2_TF(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCSR2_TF_SHIFT))&ENET_TCSR2_TF_MASK) /**< ENET_TCSR2.TF Field                     */
/** @} */

/** @name TCCR2 - Timer Compare Capture Register */ /** @{ */
#define ENET_TCCR2_TCC_MASK                      (0xFFFFFFFFU)                                       /**< ENET_TCCR2.TCC Mask                     */
#define ENET_TCCR2_TCC_SHIFT                     (0U)                                                /**< ENET_TCCR2.TCC Position                 */
#define ENET_TCCR2_TCC(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCCR2_TCC_SHIFT))&ENET_TCCR2_TCC_MASK) /**< ENET_TCCR2.TCC Field                    */
/** @} */

/** @name TCSR3 - Timer Control Status Register */ /** @{ */
#define ENET_TCSR3_TDRE_MASK                     (0x1U)                                              /**< ENET_TCSR3.TDRE Mask                    */
#define ENET_TCSR3_TDRE_SHIFT                    (0U)                                                /**< ENET_TCSR3.TDRE Position                */
#define ENET_TCSR3_TDRE(x)                       (((uint32_t)(((uint32_t)(x))<<ENET_TCSR3_TDRE_SHIFT))&ENET_TCSR3_TDRE_MASK) /**< ENET_TCSR3.TDRE Field                   */
#define ENET_TCSR3_TMODE_MASK                    (0x3CU)                                             /**< ENET_TCSR3.TMODE Mask                   */
#define ENET_TCSR3_TMODE_SHIFT                   (2U)                                                /**< ENET_TCSR3.TMODE Position               */
#define ENET_TCSR3_TMODE(x)                      (((uint32_t)(((uint32_t)(x))<<ENET_TCSR3_TMODE_SHIFT))&ENET_TCSR3_TMODE_MASK) /**< ENET_TCSR3.TMODE Field                  */
#define ENET_TCSR3_TIE_MASK                      (0x40U)                                             /**< ENET_TCSR3.TIE Mask                     */
#define ENET_TCSR3_TIE_SHIFT                     (6U)                                                /**< ENET_TCSR3.TIE Position                 */
#define ENET_TCSR3_TIE(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCSR3_TIE_SHIFT))&ENET_TCSR3_TIE_MASK) /**< ENET_TCSR3.TIE Field                    */
#define ENET_TCSR3_TF_MASK                       (0x80U)                                             /**< ENET_TCSR3.TF Mask                      */
#define ENET_TCSR3_TF_SHIFT                      (7U)                                                /**< ENET_TCSR3.TF Position                  */
#define ENET_TCSR3_TF(x)                         (((uint32_t)(((uint32_t)(x))<<ENET_TCSR3_TF_SHIFT))&ENET_TCSR3_TF_MASK) /**< ENET_TCSR3.TF Field                     */
/** @} */

/** @name TCCR3 - Timer Compare Capture Register */ /** @{ */
#define ENET_TCCR3_TCC_MASK                      (0xFFFFFFFFU)                                       /**< ENET_TCCR3.TCC Mask                     */
#define ENET_TCCR3_TCC_SHIFT                     (0U)                                                /**< ENET_TCCR3.TCC Position                 */
#define ENET_TCCR3_TCC(x)                        (((uint32_t)(((uint32_t)(x))<<ENET_TCCR3_TCC_SHIFT))&ENET_TCCR3_TCC_MASK) /**< ENET_TCCR3.TCC Field                    */
/** @} */

/** @} */ /* End group ENET_Register_Masks_GROUP */


/* ENET - Peripheral instance base addresses */
#define ENET_BasePtr                   0x400C0000UL //!< Peripheral base address
#define ENET                           ((ENET_Type *) ENET_BasePtr) //!< Freescale base pointer
#define ENET_BASE_PTR                  (ENET) //!< Freescale style base pointer
#define ENET_IRQS { ENET_1588Timeout_IRQn, ENET_Transmit_IRQn, ENET_Receive_IRQn, ENET_Error_IRQn,  }


/** @} */ /* End group ENET_Peripheral_access_layer_GROUP */


/** @brief C Struct for ETB */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup ETB_Peripheral_access_layer_GROUP ETB Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           ETB (file:ETB_0)                     ================ */
/* ================================================================================ */

/**
 * @brief Embedded Trace Buffer
 */
/**
 * @struct ETB_Type
 * @brief  C Struct allowing access to ETB registers
 */
typedef struct ETB_Type {
        uint8_t   RESERVED_0[4];                /**< 0000: 0x4 bytes                                                    */
   __I  uint32_t  RDP;                          /**< 0004: RAM Depth Register                                           */
        uint8_t   RESERVED_1[4];                /**< 0008: 0x4 bytes                                                    */
   __I  uint32_t  STS;                          /**< 000C: Status Register                                              */
   __I  uint32_t  RRD;                          /**< 0010: RAM Read Data Register                                       */
   __IO uint32_t  RRP;                          /**< 0014: RAM Read Pointer Register                                    */
   __IO uint32_t  RWP;                          /**< 0018: RAM Write Pointer Register                                   */
   __IO uint32_t  TRG;                          /**< 001C: Trigger Counter Register                                     */
   __IO uint32_t  CTL;                          /**< 0020: Control Register                                             */
   __IO uint32_t  RWD;                          /**< 0024: RAM Write Data Register                                      */
        uint8_t   RESERVED_2[728];              /**< 0028: 0x2D8 bytes                                                  */
   __I  uint32_t  FFSR;                         /**< 0300: Formatter and Flush Status Register                          */
   __IO uint32_t  FFCR;                         /**< 0304: Formatter and Flush Control Register                         */
        uint8_t   RESERVED_3[3032];             /**< 0308: 0xBD8 bytes                                                  */
   __O  uint32_t  ITMISCOP0;                    /**< 0EE0: Integration Register, ITMISCOP0                              */
   __O  uint32_t  ITTRFLINACK;                  /**< 0EE4: Integration Register, ITTRFLINACK                            */
   __I  uint32_t  ITTRFLIN;                     /**< 0EE8: Integration Register, ITTRFLIN                               */
   __I  uint32_t  ITATBDATA0;                   /**< 0EEC: Integration Register, ITATBDATA0                             */
   __O  uint32_t  ITATBCTR2;                    /**< 0EF0: Integration Register, ITATBCTR2                              */
   __I  uint32_t  ITATBCTR1;                    /**< 0EF4: Integration Register, ITATBCTR1                              */
   __I  uint32_t  ITATBCTR0;                    /**< 0EF8: Integration Register, ITATBCTR0                              */
        uint8_t   RESERVED_4[4];                /**< 0EFC: 0x4 bytes                                                    */
   __IO uint32_t  ITCTRL;                       /**< 0F00: Integration Mode Control Register                            */
        uint8_t   RESERVED_5[156];              /**< 0F04: 0x9C bytes                                                   */
   __IO uint32_t  CLAIMSET;                     /**< 0FA0: Claim Tag Set Register                                       */
   __IO uint32_t  CLAIMCLR;                     /**< 0FA4: Claim Tag Clear Register                                     */
        uint8_t   RESERVED_6[8];                /**< 0FA8: 0x8 bytes                                                    */
   __O  uint32_t  LAR;                          /**< 0FB0: Lock Access Register                                         */
   __I  uint32_t  LSR;                          /**< 0FB4: Lock Status Register                                         */
   __I  uint32_t  AUTHSTATUS;                   /**< 0FB8: Authentication Status Register                               */
        uint8_t   RESERVED_7[12];               /**< 0FBC: 0xC bytes                                                    */
   __I  uint32_t  DEVID;                        /**< 0FC8: Device ID Register                                           */
   __I  uint32_t  DEVTYPE;                      /**< 0FCC: Device Type Identifier Register                              */
   __I  uint32_t  PIDR4;                        /**< 0FD0: Peripheral Identification Register 4                         */
   __I  uint32_t  PIDR5;                        /**< 0FD4: Peripheral Identification Register 5                         */
   __I  uint32_t  PIDR6;                        /**< 0FD8: Peripheral Identification Register 6                         */
   __I  uint32_t  PIDR7;                        /**< 0FDC: Peripheral Identification Register 7                         */
   __I  uint32_t  PIDR0;                        /**< 0FE0: Peripheral Identification Register 0                         */
   __I  uint32_t  PIDR1;                        /**< 0FE4: Peripheral Identification Register 1                         */
   __I  uint32_t  PIDR2;                        /**< 0FE8: Peripheral Identification Register 2                         */
   __I  uint32_t  PIDR3;                        /**< 0FEC: Peripheral Identification Register 3                         */
   __I  uint32_t  CIDR0;                        /**< 0FF0: Component Identification Register 0                          */
   __I  uint32_t  CIDR1;                        /**< 0FF4: Component Identification Register 1                          */
   __I  uint32_t  CIDR2;                        /**< 0FF8: Component Identification Register 2                          */
   __I  uint32_t  CIDR3;                        /**< 0FFC: Component Identification Register 3                          */
} ETB_Type;


/** @brief Register Masks for ETB */

/* -------------------------------------------------------------------------------- */
/* -----------     'ETB' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup ETB_Register_Masks_GROUP ETB Register Masks */
/** @{ */

/** @name RDP - RAM Depth Register */ /** @{ */
#define ETB_RDP_RDP_MASK                         (0xFFFFFFFFU)                                       /**< ETB_RDP.RDP Mask                        */
#define ETB_RDP_RDP_SHIFT                        (0U)                                                /**< ETB_RDP.RDP Position                    */
#define ETB_RDP_RDP(x)                           (((uint32_t)(((uint32_t)(x))<<ETB_RDP_RDP_SHIFT))&ETB_RDP_RDP_MASK) /**< ETB_RDP.RDP Field                       */
/** @} */

/** @name STS - Status Register */ /** @{ */
#define ETB_STS_Full_MASK                        (0x1U)                                              /**< ETB_STS.Full Mask                       */
#define ETB_STS_Full_SHIFT                       (0U)                                                /**< ETB_STS.Full Position                   */
#define ETB_STS_Full(x)                          (((uint32_t)(((uint32_t)(x))<<ETB_STS_Full_SHIFT))&ETB_STS_Full_MASK) /**< ETB_STS.Full Field                      */
#define ETB_STS_Triggered_MASK                   (0x2U)                                              /**< ETB_STS.Triggered Mask                  */
#define ETB_STS_Triggered_SHIFT                  (1U)                                                /**< ETB_STS.Triggered Position              */
#define ETB_STS_Triggered(x)                     (((uint32_t)(((uint32_t)(x))<<ETB_STS_Triggered_SHIFT))&ETB_STS_Triggered_MASK) /**< ETB_STS.Triggered Field                 */
#define ETB_STS_AcqComp_MASK                     (0x4U)                                              /**< ETB_STS.AcqComp Mask                    */
#define ETB_STS_AcqComp_SHIFT                    (2U)                                                /**< ETB_STS.AcqComp Position                */
#define ETB_STS_AcqComp(x)                       (((uint32_t)(((uint32_t)(x))<<ETB_STS_AcqComp_SHIFT))&ETB_STS_AcqComp_MASK) /**< ETB_STS.AcqComp Field                   */
#define ETB_STS_FtEmpty_MASK                     (0x8U)                                              /**< ETB_STS.FtEmpty Mask                    */
#define ETB_STS_FtEmpty_SHIFT                    (3U)                                                /**< ETB_STS.FtEmpty Position                */
#define ETB_STS_FtEmpty(x)                       (((uint32_t)(((uint32_t)(x))<<ETB_STS_FtEmpty_SHIFT))&ETB_STS_FtEmpty_MASK) /**< ETB_STS.FtEmpty Field                   */
/** @} */

/** @name RRD - RAM Read Data Register */ /** @{ */
#define ETB_RRD_RRD_MASK                         (0xFFFFFFFFU)                                       /**< ETB_RRD.RRD Mask                        */
#define ETB_RRD_RRD_SHIFT                        (0U)                                                /**< ETB_RRD.RRD Position                    */
#define ETB_RRD_RRD(x)                           (((uint32_t)(((uint32_t)(x))<<ETB_RRD_RRD_SHIFT))&ETB_RRD_RRD_MASK) /**< ETB_RRD.RRD Field                       */
/** @} */

/** @name RRP - RAM Read Pointer Register */ /** @{ */
#define ETB_RRP_RRP_MASK                         (0xFFFFFFFFU)                                       /**< ETB_RRP.RRP Mask                        */
#define ETB_RRP_RRP_SHIFT                        (0U)                                                /**< ETB_RRP.RRP Position                    */
#define ETB_RRP_RRP(x)                           (((uint32_t)(((uint32_t)(x))<<ETB_RRP_RRP_SHIFT))&ETB_RRP_RRP_MASK) /**< ETB_RRP.RRP Field                       */
/** @} */

/** @name RWP - RAM Write Pointer Register */ /** @{ */
#define ETB_RWP_RWP_MASK                         (0xFFFFFFFFU)                                       /**< ETB_RWP.RWP Mask                        */
#define ETB_RWP_RWP_SHIFT                        (0U)                                                /**< ETB_RWP.RWP Position                    */
#define ETB_RWP_RWP(x)                           (((uint32_t)(((uint32_t)(x))<<ETB_RWP_RWP_SHIFT))&ETB_RWP_RWP_MASK) /**< ETB_RWP.RWP Field                       */
/** @} */

/** @name TRG - Trigger Counter Register */ /** @{ */
#define ETB_TRG_TRG_MASK                         (0xFFFFFFFFU)                                       /**< ETB_TRG.TRG Mask                        */
#define ETB_TRG_TRG_SHIFT                        (0U)                                                /**< ETB_TRG.TRG Position                    */
#define ETB_TRG_TRG(x)                           (((uint32_t)(((uint32_t)(x))<<ETB_TRG_TRG_SHIFT))&ETB_TRG_TRG_MASK) /**< ETB_TRG.TRG Field                       */
/** @} */

/** @name CTL - Control Register */ /** @{ */
#define ETB_CTL_TraceCaptEn_MASK                 (0x1U)                                              /**< ETB_CTL.TraceCaptEn Mask                */
#define ETB_CTL_TraceCaptEn_SHIFT                (0U)                                                /**< ETB_CTL.TraceCaptEn Position            */
#define ETB_CTL_TraceCaptEn(x)                   (((uint32_t)(((uint32_t)(x))<<ETB_CTL_TraceCaptEn_SHIFT))&ETB_CTL_TraceCaptEn_MASK) /**< ETB_CTL.TraceCaptEn Field               */
/** @} */

/** @name RWD - RAM Write Data Register */ /** @{ */
#define ETB_RWD_RWD_MASK                         (0xFFFFFFFFU)                                       /**< ETB_RWD.RWD Mask                        */
#define ETB_RWD_RWD_SHIFT                        (0U)                                                /**< ETB_RWD.RWD Position                    */
#define ETB_RWD_RWD(x)                           (((uint32_t)(((uint32_t)(x))<<ETB_RWD_RWD_SHIFT))&ETB_RWD_RWD_MASK) /**< ETB_RWD.RWD Field                       */
/** @} */

/** @name FFSR - Formatter and Flush Status Register */ /** @{ */
#define ETB_FFSR_FlInProg_MASK                   (0x1U)                                              /**< ETB_FFSR.FlInProg Mask                  */
#define ETB_FFSR_FlInProg_SHIFT                  (0U)                                                /**< ETB_FFSR.FlInProg Position              */
#define ETB_FFSR_FlInProg(x)                     (((uint32_t)(((uint32_t)(x))<<ETB_FFSR_FlInProg_SHIFT))&ETB_FFSR_FlInProg_MASK) /**< ETB_FFSR.FlInProg Field                 */
#define ETB_FFSR_FtStopped_MASK                  (0x2U)                                              /**< ETB_FFSR.FtStopped Mask                 */
#define ETB_FFSR_FtStopped_SHIFT                 (1U)                                                /**< ETB_FFSR.FtStopped Position             */
#define ETB_FFSR_FtStopped(x)                    (((uint32_t)(((uint32_t)(x))<<ETB_FFSR_FtStopped_SHIFT))&ETB_FFSR_FtStopped_MASK) /**< ETB_FFSR.FtStopped Field                */
/** @} */

/** @name FFCR - Formatter and Flush Control Register */ /** @{ */
#define ETB_FFCR_EnFTC_MASK                      (0x1U)                                              /**< ETB_FFCR.EnFTC Mask                     */
#define ETB_FFCR_EnFTC_SHIFT                     (0U)                                                /**< ETB_FFCR.EnFTC Position                 */
#define ETB_FFCR_EnFTC(x)                        (((uint32_t)(((uint32_t)(x))<<ETB_FFCR_EnFTC_SHIFT))&ETB_FFCR_EnFTC_MASK) /**< ETB_FFCR.EnFTC Field                    */
#define ETB_FFCR_EnFCont_MASK                    (0x2U)                                              /**< ETB_FFCR.EnFCont Mask                   */
#define ETB_FFCR_EnFCont_SHIFT                   (1U)                                                /**< ETB_FFCR.EnFCont Position               */
#define ETB_FFCR_EnFCont(x)                      (((uint32_t)(((uint32_t)(x))<<ETB_FFCR_EnFCont_SHIFT))&ETB_FFCR_EnFCont_MASK) /**< ETB_FFCR.EnFCont Field                  */
#define ETB_FFCR_FOnFlIn_MASK                    (0x10U)                                             /**< ETB_FFCR.FOnFlIn Mask                   */
#define ETB_FFCR_FOnFlIn_SHIFT                   (4U)                                                /**< ETB_FFCR.FOnFlIn Position               */
#define ETB_FFCR_FOnFlIn(x)                      (((uint32_t)(((uint32_t)(x))<<ETB_FFCR_FOnFlIn_SHIFT))&ETB_FFCR_FOnFlIn_MASK) /**< ETB_FFCR.FOnFlIn Field                  */
#define ETB_FFCR_FOnTrig_MASK                    (0x20U)                                             /**< ETB_FFCR.FOnTrig Mask                   */
#define ETB_FFCR_FOnTrig_SHIFT                   (5U)                                                /**< ETB_FFCR.FOnTrig Position               */
#define ETB_FFCR_FOnTrig(x)                      (((uint32_t)(((uint32_t)(x))<<ETB_FFCR_FOnTrig_SHIFT))&ETB_FFCR_FOnTrig_MASK) /**< ETB_FFCR.FOnTrig Field                  */
#define ETB_FFCR_FOnMan_MASK                     (0x40U)                                             /**< ETB_FFCR.FOnMan Mask                    */
#define ETB_FFCR_FOnMan_SHIFT                    (6U)                                                /**< ETB_FFCR.FOnMan Position                */
#define ETB_FFCR_FOnMan(x)                       (((uint32_t)(((uint32_t)(x))<<ETB_FFCR_FOnMan_SHIFT))&ETB_FFCR_FOnMan_MASK) /**< ETB_FFCR.FOnMan Field                   */
#define ETB_FFCR_TrigIn_MASK                     (0x100U)                                            /**< ETB_FFCR.TrigIn Mask                    */
#define ETB_FFCR_TrigIn_SHIFT                    (8U)                                                /**< ETB_FFCR.TrigIn Position                */
#define ETB_FFCR_TrigIn(x)                       (((uint32_t)(((uint32_t)(x))<<ETB_FFCR_TrigIn_SHIFT))&ETB_FFCR_TrigIn_MASK) /**< ETB_FFCR.TrigIn Field                   */
#define ETB_FFCR_TrigEvt_MASK                    (0x200U)                                            /**< ETB_FFCR.TrigEvt Mask                   */
#define ETB_FFCR_TrigEvt_SHIFT                   (9U)                                                /**< ETB_FFCR.TrigEvt Position               */
#define ETB_FFCR_TrigEvt(x)                      (((uint32_t)(((uint32_t)(x))<<ETB_FFCR_TrigEvt_SHIFT))&ETB_FFCR_TrigEvt_MASK) /**< ETB_FFCR.TrigEvt Field                  */
#define ETB_FFCR_TrigFl_MASK                     (0x400U)                                            /**< ETB_FFCR.TrigFl Mask                    */
#define ETB_FFCR_TrigFl_SHIFT                    (10U)                                               /**< ETB_FFCR.TrigFl Position                */
#define ETB_FFCR_TrigFl(x)                       (((uint32_t)(((uint32_t)(x))<<ETB_FFCR_TrigFl_SHIFT))&ETB_FFCR_TrigFl_MASK) /**< ETB_FFCR.TrigFl Field                   */
#define ETB_FFCR_StopFl_MASK                     (0x1000U)                                           /**< ETB_FFCR.StopFl Mask                    */
#define ETB_FFCR_StopFl_SHIFT                    (12U)                                               /**< ETB_FFCR.StopFl Position                */
#define ETB_FFCR_StopFl(x)                       (((uint32_t)(((uint32_t)(x))<<ETB_FFCR_StopFl_SHIFT))&ETB_FFCR_StopFl_MASK) /**< ETB_FFCR.StopFl Field                   */
#define ETB_FFCR_StopTrig_MASK                   (0x2000U)                                           /**< ETB_FFCR.StopTrig Mask                  */
#define ETB_FFCR_StopTrig_SHIFT                  (13U)                                               /**< ETB_FFCR.StopTrig Position              */
#define ETB_FFCR_StopTrig(x)                     (((uint32_t)(((uint32_t)(x))<<ETB_FFCR_StopTrig_SHIFT))&ETB_FFCR_StopTrig_MASK) /**< ETB_FFCR.StopTrig Field                 */
/** @} */

/** @name ITMISCOP0 - Integration Register, ITMISCOP0 */ /** @{ */
#define ETB_ITMISCOP0_ACQCOMP_MASK               (0x1U)                                              /**< ETB_ITMISCOP0.ACQCOMP Mask              */
#define ETB_ITMISCOP0_ACQCOMP_SHIFT              (0U)                                                /**< ETB_ITMISCOP0.ACQCOMP Position          */
#define ETB_ITMISCOP0_ACQCOMP(x)                 (((uint32_t)(((uint32_t)(x))<<ETB_ITMISCOP0_ACQCOMP_SHIFT))&ETB_ITMISCOP0_ACQCOMP_MASK) /**< ETB_ITMISCOP0.ACQCOMP Field             */
#define ETB_ITMISCOP0_FULL_MASK                  (0x2U)                                              /**< ETB_ITMISCOP0.FULL Mask                 */
#define ETB_ITMISCOP0_FULL_SHIFT                 (1U)                                                /**< ETB_ITMISCOP0.FULL Position             */
#define ETB_ITMISCOP0_FULL(x)                    (((uint32_t)(((uint32_t)(x))<<ETB_ITMISCOP0_FULL_SHIFT))&ETB_ITMISCOP0_FULL_MASK) /**< ETB_ITMISCOP0.FULL Field                */
/** @} */

/** @name ITTRFLINACK - Integration Register, ITTRFLINACK */ /** @{ */
#define ETB_ITTRFLINACK_TRIGINACK_MASK           (0x1U)                                              /**< ETB_ITTRFLINACK.TRIGINACK Mask          */
#define ETB_ITTRFLINACK_TRIGINACK_SHIFT          (0U)                                                /**< ETB_ITTRFLINACK.TRIGINACK Position      */
#define ETB_ITTRFLINACK_TRIGINACK(x)             (((uint32_t)(((uint32_t)(x))<<ETB_ITTRFLINACK_TRIGINACK_SHIFT))&ETB_ITTRFLINACK_TRIGINACK_MASK) /**< ETB_ITTRFLINACK.TRIGINACK Field         */
#define ETB_ITTRFLINACK_FLUSHINACK_MASK          (0x2U)                                              /**< ETB_ITTRFLINACK.FLUSHINACK Mask         */
#define ETB_ITTRFLINACK_FLUSHINACK_SHIFT         (1U)                                                /**< ETB_ITTRFLINACK.FLUSHINACK Position     */
#define ETB_ITTRFLINACK_FLUSHINACK(x)            (((uint32_t)(((uint32_t)(x))<<ETB_ITTRFLINACK_FLUSHINACK_SHIFT))&ETB_ITTRFLINACK_FLUSHINACK_MASK) /**< ETB_ITTRFLINACK.FLUSHINACK Field        */
/** @} */

/** @name ITTRFLIN - Integration Register, ITTRFLIN */ /** @{ */
#define ETB_ITTRFLIN_TRIGIN_MASK                 (0x1U)                                              /**< ETB_ITTRFLIN.TRIGIN Mask                */
#define ETB_ITTRFLIN_TRIGIN_SHIFT                (0U)                                                /**< ETB_ITTRFLIN.TRIGIN Position            */
#define ETB_ITTRFLIN_TRIGIN(x)                   (((uint32_t)(((uint32_t)(x))<<ETB_ITTRFLIN_TRIGIN_SHIFT))&ETB_ITTRFLIN_TRIGIN_MASK) /**< ETB_ITTRFLIN.TRIGIN Field               */
#define ETB_ITTRFLIN_FLUSHIN_MASK                (0x2U)                                              /**< ETB_ITTRFLIN.FLUSHIN Mask               */
#define ETB_ITTRFLIN_FLUSHIN_SHIFT               (1U)                                                /**< ETB_ITTRFLIN.FLUSHIN Position           */
#define ETB_ITTRFLIN_FLUSHIN(x)                  (((uint32_t)(((uint32_t)(x))<<ETB_ITTRFLIN_FLUSHIN_SHIFT))&ETB_ITTRFLIN_FLUSHIN_MASK) /**< ETB_ITTRFLIN.FLUSHIN Field              */
/** @} */

/** @name ITATBDATA0 - Integration Register, ITATBDATA0 */ /** @{ */
#define ETB_ITATBDATA0_ATDATA0_MASK              (0x1U)                                              /**< ETB_ITATBDATA0.ATDATA0 Mask             */
#define ETB_ITATBDATA0_ATDATA0_SHIFT             (0U)                                                /**< ETB_ITATBDATA0.ATDATA0 Position         */
#define ETB_ITATBDATA0_ATDATA0(x)                (((uint32_t)(((uint32_t)(x))<<ETB_ITATBDATA0_ATDATA0_SHIFT))&ETB_ITATBDATA0_ATDATA0_MASK) /**< ETB_ITATBDATA0.ATDATA0 Field            */
#define ETB_ITATBDATA0_ATDATA7_MASK              (0x2U)                                              /**< ETB_ITATBDATA0.ATDATA7 Mask             */
#define ETB_ITATBDATA0_ATDATA7_SHIFT             (1U)                                                /**< ETB_ITATBDATA0.ATDATA7 Position         */
#define ETB_ITATBDATA0_ATDATA7(x)                (((uint32_t)(((uint32_t)(x))<<ETB_ITATBDATA0_ATDATA7_SHIFT))&ETB_ITATBDATA0_ATDATA7_MASK) /**< ETB_ITATBDATA0.ATDATA7 Field            */
#define ETB_ITATBDATA0_ATDATA15_MASK             (0x4U)                                              /**< ETB_ITATBDATA0.ATDATA15 Mask            */
#define ETB_ITATBDATA0_ATDATA15_SHIFT            (2U)                                                /**< ETB_ITATBDATA0.ATDATA15 Position        */
#define ETB_ITATBDATA0_ATDATA15(x)               (((uint32_t)(((uint32_t)(x))<<ETB_ITATBDATA0_ATDATA15_SHIFT))&ETB_ITATBDATA0_ATDATA15_MASK) /**< ETB_ITATBDATA0.ATDATA15 Field           */
#define ETB_ITATBDATA0_ATDATA23_MASK             (0x8U)                                              /**< ETB_ITATBDATA0.ATDATA23 Mask            */
#define ETB_ITATBDATA0_ATDATA23_SHIFT            (3U)                                                /**< ETB_ITATBDATA0.ATDATA23 Position        */
#define ETB_ITATBDATA0_ATDATA23(x)               (((uint32_t)(((uint32_t)(x))<<ETB_ITATBDATA0_ATDATA23_SHIFT))&ETB_ITATBDATA0_ATDATA23_MASK) /**< ETB_ITATBDATA0.ATDATA23 Field           */
#define ETB_ITATBDATA0_ATDATA31_MASK             (0x10U)                                             /**< ETB_ITATBDATA0.ATDATA31 Mask            */
#define ETB_ITATBDATA0_ATDATA31_SHIFT            (4U)                                                /**< ETB_ITATBDATA0.ATDATA31 Position        */
#define ETB_ITATBDATA0_ATDATA31(x)               (((uint32_t)(((uint32_t)(x))<<ETB_ITATBDATA0_ATDATA31_SHIFT))&ETB_ITATBDATA0_ATDATA31_MASK) /**< ETB_ITATBDATA0.ATDATA31 Field           */
/** @} */

/** @name ITATBCTR2 - Integration Register, ITATBCTR2 */ /** @{ */
#define ETB_ITATBCTR2_ATREADYS_MASK              (0x1U)                                              /**< ETB_ITATBCTR2.ATREADYS Mask             */
#define ETB_ITATBCTR2_ATREADYS_SHIFT             (0U)                                                /**< ETB_ITATBCTR2.ATREADYS Position         */
#define ETB_ITATBCTR2_ATREADYS(x)                (((uint32_t)(((uint32_t)(x))<<ETB_ITATBCTR2_ATREADYS_SHIFT))&ETB_ITATBCTR2_ATREADYS_MASK) /**< ETB_ITATBCTR2.ATREADYS Field            */
#define ETB_ITATBCTR2_AFVALIDS_MASK              (0x2U)                                              /**< ETB_ITATBCTR2.AFVALIDS Mask             */
#define ETB_ITATBCTR2_AFVALIDS_SHIFT             (1U)                                                /**< ETB_ITATBCTR2.AFVALIDS Position         */
#define ETB_ITATBCTR2_AFVALIDS(x)                (((uint32_t)(((uint32_t)(x))<<ETB_ITATBCTR2_AFVALIDS_SHIFT))&ETB_ITATBCTR2_AFVALIDS_MASK) /**< ETB_ITATBCTR2.AFVALIDS Field            */
/** @} */

/** @name ITATBCTR1 - Integration Register, ITATBCTR1 */ /** @{ */
#define ETB_ITATBCTR1_ATID_MASK                  (0x7FU)                                             /**< ETB_ITATBCTR1.ATID Mask                 */
#define ETB_ITATBCTR1_ATID_SHIFT                 (0U)                                                /**< ETB_ITATBCTR1.ATID Position             */
#define ETB_ITATBCTR1_ATID(x)                    (((uint32_t)(((uint32_t)(x))<<ETB_ITATBCTR1_ATID_SHIFT))&ETB_ITATBCTR1_ATID_MASK) /**< ETB_ITATBCTR1.ATID Field                */
/** @} */

/** @name ITATBCTR0 - Integration Register, ITATBCTR0 */ /** @{ */
#define ETB_ITATBCTR0_ATVALID_MASK               (0x1U)                                              /**< ETB_ITATBCTR0.ATVALID Mask              */
#define ETB_ITATBCTR0_ATVALID_SHIFT              (0U)                                                /**< ETB_ITATBCTR0.ATVALID Position          */
#define ETB_ITATBCTR0_ATVALID(x)                 (((uint32_t)(((uint32_t)(x))<<ETB_ITATBCTR0_ATVALID_SHIFT))&ETB_ITATBCTR0_ATVALID_MASK) /**< ETB_ITATBCTR0.ATVALID Field             */
#define ETB_ITATBCTR0_AFREADY_MASK               (0x2U)                                              /**< ETB_ITATBCTR0.AFREADY Mask              */
#define ETB_ITATBCTR0_AFREADY_SHIFT              (1U)                                                /**< ETB_ITATBCTR0.AFREADY Position          */
#define ETB_ITATBCTR0_AFREADY(x)                 (((uint32_t)(((uint32_t)(x))<<ETB_ITATBCTR0_AFREADY_SHIFT))&ETB_ITATBCTR0_AFREADY_MASK) /**< ETB_ITATBCTR0.AFREADY Field             */
#define ETB_ITATBCTR0_ATBYTES_MASK               (0x300U)                                            /**< ETB_ITATBCTR0.ATBYTES Mask              */
#define ETB_ITATBCTR0_ATBYTES_SHIFT              (8U)                                                /**< ETB_ITATBCTR0.ATBYTES Position          */
#define ETB_ITATBCTR0_ATBYTES(x)                 (((uint32_t)(((uint32_t)(x))<<ETB_ITATBCTR0_ATBYTES_SHIFT))&ETB_ITATBCTR0_ATBYTES_MASK) /**< ETB_ITATBCTR0.ATBYTES Field             */
/** @} */

/** @name ITCTRL - Integration Mode Control Register */ /** @{ */
#define ETB_ITCTRL_IntegrationMode_MASK          (0x1U)                                              /**< ETB_ITCTRL.IntegrationMode Mask         */
#define ETB_ITCTRL_IntegrationMode_SHIFT         (0U)                                                /**< ETB_ITCTRL.IntegrationMode Position     */
#define ETB_ITCTRL_IntegrationMode(x)            (((uint32_t)(((uint32_t)(x))<<ETB_ITCTRL_IntegrationMode_SHIFT))&ETB_ITCTRL_IntegrationMode_MASK) /**< ETB_ITCTRL.IntegrationMode Field        */
/** @} */

/** @name CLAIMSET - Claim Tag Set Register */ /** @{ */
#define ETB_CLAIMSET_CLAIMSET_MASK               (0xFU)                                              /**< ETB_CLAIMSET.CLAIMSET Mask              */
#define ETB_CLAIMSET_CLAIMSET_SHIFT              (0U)                                                /**< ETB_CLAIMSET.CLAIMSET Position          */
#define ETB_CLAIMSET_CLAIMSET(x)                 (((uint32_t)(((uint32_t)(x))<<ETB_CLAIMSET_CLAIMSET_SHIFT))&ETB_CLAIMSET_CLAIMSET_MASK) /**< ETB_CLAIMSET.CLAIMSET Field             */
/** @} */

/** @name CLAIMCLR - Claim Tag Clear Register */ /** @{ */
#define ETB_CLAIMCLR_CLAIMCLR_MASK               (0xFU)                                              /**< ETB_CLAIMCLR.CLAIMCLR Mask              */
#define ETB_CLAIMCLR_CLAIMCLR_SHIFT              (0U)                                                /**< ETB_CLAIMCLR.CLAIMCLR Position          */
#define ETB_CLAIMCLR_CLAIMCLR(x)                 (((uint32_t)(((uint32_t)(x))<<ETB_CLAIMCLR_CLAIMCLR_SHIFT))&ETB_CLAIMCLR_CLAIMCLR_MASK) /**< ETB_CLAIMCLR.CLAIMCLR Field             */
/** @} */

/** @name LAR - Lock Access Register */ /** @{ */
#define ETB_LAR_WriteAccessCode_MASK             (0xFFFFFFFFU)                                       /**< ETB_LAR.WriteAccessCode Mask            */
#define ETB_LAR_WriteAccessCode_SHIFT            (0U)                                                /**< ETB_LAR.WriteAccessCode Position        */
#define ETB_LAR_WriteAccessCode(x)               (((uint32_t)(((uint32_t)(x))<<ETB_LAR_WriteAccessCode_SHIFT))&ETB_LAR_WriteAccessCode_MASK) /**< ETB_LAR.WriteAccessCode Field           */
/** @} */

/** @name LSR - Lock Status Register */ /** @{ */
#define ETB_LSR_IMP_MASK                         (0x1U)                                              /**< ETB_LSR.IMP Mask                        */
#define ETB_LSR_IMP_SHIFT                        (0U)                                                /**< ETB_LSR.IMP Position                    */
#define ETB_LSR_IMP(x)                           (((uint32_t)(((uint32_t)(x))<<ETB_LSR_IMP_SHIFT))&ETB_LSR_IMP_MASK) /**< ETB_LSR.IMP Field                       */
#define ETB_LSR_STATUS_MASK                      (0x2U)                                              /**< ETB_LSR.STATUS Mask                     */
#define ETB_LSR_STATUS_SHIFT                     (1U)                                                /**< ETB_LSR.STATUS Position                 */
#define ETB_LSR_STATUS(x)                        (((uint32_t)(((uint32_t)(x))<<ETB_LSR_STATUS_SHIFT))&ETB_LSR_STATUS_MASK) /**< ETB_LSR.STATUS Field                    */
#define ETB_LSR_s8BIT_MASK                       (0x4U)                                              /**< ETB_LSR.s8BIT Mask                      */
#define ETB_LSR_s8BIT_SHIFT                      (2U)                                                /**< ETB_LSR.s8BIT Position                  */
#define ETB_LSR_s8BIT(x)                         (((uint32_t)(((uint32_t)(x))<<ETB_LSR_s8BIT_SHIFT))&ETB_LSR_s8BIT_MASK) /**< ETB_LSR.s8BIT Field                     */
/** @} */

/** @name AUTHSTATUS - Authentication Status Register */ /** @{ */
#define ETB_AUTHSTATUS_AuthenticationStatus_MASK (0xFFU)                                             /**< ETB_AUTHSTATUS.AuthenticationStatus Mask*/
#define ETB_AUTHSTATUS_AuthenticationStatus_SHIFT (0U)                                               /**< ETB_AUTHSTATUS.AuthenticationStatus Position*/
#define ETB_AUTHSTATUS_AuthenticationStatus(x)   (((uint32_t)(((uint32_t)(x))<<ETB_AUTHSTATUS_AuthenticationStatus_SHIFT))&ETB_AUTHSTATUS_AuthenticationStatus_MASK) /**< ETB_AUTHSTATUS.AuthenticationStatus Field*/
/** @} */

/** @name DEVID - Device ID Register */ /** @{ */
#define ETB_DEVID_HLIM_MASK                      (0x1FU)                                             /**< ETB_DEVID.HLIM Mask                     */
#define ETB_DEVID_HLIM_SHIFT                     (0U)                                                /**< ETB_DEVID.HLIM Position                 */
#define ETB_DEVID_HLIM(x)                        (((uint32_t)(((uint32_t)(x))<<ETB_DEVID_HLIM_SHIFT))&ETB_DEVID_HLIM_MASK) /**< ETB_DEVID.HLIM Field                    */
#define ETB_DEVID_Sync_MASK                      (0x20U)                                             /**< ETB_DEVID.Sync Mask                     */
#define ETB_DEVID_Sync_SHIFT                     (5U)                                                /**< ETB_DEVID.Sync Position                 */
#define ETB_DEVID_Sync(x)                        (((uint32_t)(((uint32_t)(x))<<ETB_DEVID_Sync_SHIFT))&ETB_DEVID_Sync_MASK) /**< ETB_DEVID.Sync Field                    */
/** @} */

/** @name DEVTYPE - Device Type Identifier Register */ /** @{ */
#define ETB_DEVTYPE_DevTypeID_MASK               (0xFFU)                                             /**< ETB_DEVTYPE.DevTypeID Mask              */
#define ETB_DEVTYPE_DevTypeID_SHIFT              (0U)                                                /**< ETB_DEVTYPE.DevTypeID Position          */
#define ETB_DEVTYPE_DevTypeID(x)                 (((uint32_t)(((uint32_t)(x))<<ETB_DEVTYPE_DevTypeID_SHIFT))&ETB_DEVTYPE_DevTypeID_MASK) /**< ETB_DEVTYPE.DevTypeID Field             */
/** @} */

/** @name PIDR4 - Peripheral Identification Register 4 */ /** @{ */
#define ETB_PIDR4_JEP106_MASK                    (0xFU)                                              /**< ETB_PIDR4.JEP106 Mask                   */
#define ETB_PIDR4_JEP106_SHIFT                   (0U)                                                /**< ETB_PIDR4.JEP106 Position               */
#define ETB_PIDR4_JEP106(x)                      (((uint32_t)(((uint32_t)(x))<<ETB_PIDR4_JEP106_SHIFT))&ETB_PIDR4_JEP106_MASK) /**< ETB_PIDR4.JEP106 Field                  */
#define ETB_PIDR4_c4KB_MASK                      (0xF0U)                                             /**< ETB_PIDR4.c4KB Mask                     */
#define ETB_PIDR4_c4KB_SHIFT                     (4U)                                                /**< ETB_PIDR4.c4KB Position                 */
#define ETB_PIDR4_c4KB(x)                        (((uint32_t)(((uint32_t)(x))<<ETB_PIDR4_c4KB_SHIFT))&ETB_PIDR4_c4KB_MASK) /**< ETB_PIDR4.c4KB Field                    */
/** @} */

/** @name PIDR0 - Peripheral Identification Register 0 */ /** @{ */
#define ETB_PIDR0_PartNumber_MASK                (0xFFU)                                             /**< ETB_PIDR0.PartNumber Mask               */
#define ETB_PIDR0_PartNumber_SHIFT               (0U)                                                /**< ETB_PIDR0.PartNumber Position           */
#define ETB_PIDR0_PartNumber(x)                  (((uint32_t)(((uint32_t)(x))<<ETB_PIDR0_PartNumber_SHIFT))&ETB_PIDR0_PartNumber_MASK) /**< ETB_PIDR0.PartNumber Field              */
/** @} */

/** @name PIDR1 - Peripheral Identification Register 1 */ /** @{ */
#define ETB_PIDR1_PartNumber_MASK                (0xFU)                                              /**< ETB_PIDR1.PartNumber Mask               */
#define ETB_PIDR1_PartNumber_SHIFT               (0U)                                                /**< ETB_PIDR1.PartNumber Position           */
#define ETB_PIDR1_PartNumber(x)                  (((uint32_t)(((uint32_t)(x))<<ETB_PIDR1_PartNumber_SHIFT))&ETB_PIDR1_PartNumber_MASK) /**< ETB_PIDR1.PartNumber Field              */
#define ETB_PIDR1_JEP106_identity_code_MASK      (0xF0U)                                             /**< ETB_PIDR1.JEP106_identity_code Mask     */
#define ETB_PIDR1_JEP106_identity_code_SHIFT     (4U)                                                /**< ETB_PIDR1.JEP106_identity_code Position */
#define ETB_PIDR1_JEP106_identity_code(x)        (((uint32_t)(((uint32_t)(x))<<ETB_PIDR1_JEP106_identity_code_SHIFT))&ETB_PIDR1_JEP106_identity_code_MASK) /**< ETB_PIDR1.JEP106_identity_code Field    */
/** @} */

/** @name PIDR2 - Peripheral Identification Register 2 */ /** @{ */
#define ETB_PIDR2_JEP106_identity_code_MASK      (0x7U)                                              /**< ETB_PIDR2.JEP106_identity_code Mask     */
#define ETB_PIDR2_JEP106_identity_code_SHIFT     (0U)                                                /**< ETB_PIDR2.JEP106_identity_code Position */
#define ETB_PIDR2_JEP106_identity_code(x)        (((uint32_t)(((uint32_t)(x))<<ETB_PIDR2_JEP106_identity_code_SHIFT))&ETB_PIDR2_JEP106_identity_code_MASK) /**< ETB_PIDR2.JEP106_identity_code Field    */
#define ETB_PIDR2_Revision_MASK                  (0xF0U)                                             /**< ETB_PIDR2.Revision Mask                 */
#define ETB_PIDR2_Revision_SHIFT                 (4U)                                                /**< ETB_PIDR2.Revision Position             */
#define ETB_PIDR2_Revision(x)                    (((uint32_t)(((uint32_t)(x))<<ETB_PIDR2_Revision_SHIFT))&ETB_PIDR2_Revision_MASK) /**< ETB_PIDR2.Revision Field                */
/** @} */

/** @name PIDR3 - Peripheral Identification Register 3 */ /** @{ */
#define ETB_PIDR3_CustomerModified_MASK          (0xFU)                                              /**< ETB_PIDR3.CustomerModified Mask         */
#define ETB_PIDR3_CustomerModified_SHIFT         (0U)                                                /**< ETB_PIDR3.CustomerModified Position     */
#define ETB_PIDR3_CustomerModified(x)            (((uint32_t)(((uint32_t)(x))<<ETB_PIDR3_CustomerModified_SHIFT))&ETB_PIDR3_CustomerModified_MASK) /**< ETB_PIDR3.CustomerModified Field        */
#define ETB_PIDR3_RevAnd_MASK                    (0xF0U)                                             /**< ETB_PIDR3.RevAnd Mask                   */
#define ETB_PIDR3_RevAnd_SHIFT                   (4U)                                                /**< ETB_PIDR3.RevAnd Position               */
#define ETB_PIDR3_RevAnd(x)                      (((uint32_t)(((uint32_t)(x))<<ETB_PIDR3_RevAnd_SHIFT))&ETB_PIDR3_RevAnd_MASK) /**< ETB_PIDR3.RevAnd Field                  */
/** @} */

/** @name CIDR0 - Component Identification Register 0 */ /** @{ */
#define ETB_CIDR0_Preamble_MASK                  (0xFFU)                                             /**< ETB_CIDR0.Preamble Mask                 */
#define ETB_CIDR0_Preamble_SHIFT                 (0U)                                                /**< ETB_CIDR0.Preamble Position             */
#define ETB_CIDR0_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETB_CIDR0_Preamble_SHIFT))&ETB_CIDR0_Preamble_MASK) /**< ETB_CIDR0.Preamble Field                */
/** @} */

/** @name CIDR1 - Component Identification Register 1 */ /** @{ */
#define ETB_CIDR1_Preamble_MASK                  (0xFU)                                              /**< ETB_CIDR1.Preamble Mask                 */
#define ETB_CIDR1_Preamble_SHIFT                 (0U)                                                /**< ETB_CIDR1.Preamble Position             */
#define ETB_CIDR1_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETB_CIDR1_Preamble_SHIFT))&ETB_CIDR1_Preamble_MASK) /**< ETB_CIDR1.Preamble Field                */
#define ETB_CIDR1_ComponentClass_MASK            (0xF0U)                                             /**< ETB_CIDR1.ComponentClass Mask           */
#define ETB_CIDR1_ComponentClass_SHIFT           (4U)                                                /**< ETB_CIDR1.ComponentClass Position       */
#define ETB_CIDR1_ComponentClass(x)              (((uint32_t)(((uint32_t)(x))<<ETB_CIDR1_ComponentClass_SHIFT))&ETB_CIDR1_ComponentClass_MASK) /**< ETB_CIDR1.ComponentClass Field          */
/** @} */

/** @name CIDR2 - Component Identification Register 2 */ /** @{ */
#define ETB_CIDR2_Preamble_MASK                  (0xFFU)                                             /**< ETB_CIDR2.Preamble Mask                 */
#define ETB_CIDR2_Preamble_SHIFT                 (0U)                                                /**< ETB_CIDR2.Preamble Position             */
#define ETB_CIDR2_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETB_CIDR2_Preamble_SHIFT))&ETB_CIDR2_Preamble_MASK) /**< ETB_CIDR2.Preamble Field                */
/** @} */

/** @name CIDR3 - Component Identification Register 3 */ /** @{ */
#define ETB_CIDR3_Preamble_MASK                  (0xFFU)                                             /**< ETB_CIDR3.Preamble Mask                 */
#define ETB_CIDR3_Preamble_SHIFT                 (0U)                                                /**< ETB_CIDR3.Preamble Position             */
#define ETB_CIDR3_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETB_CIDR3_Preamble_SHIFT))&ETB_CIDR3_Preamble_MASK) /**< ETB_CIDR3.Preamble Field                */
/** @} */

/** @} */ /* End group ETB_Register_Masks_GROUP */


/* ETB - Peripheral instance base addresses */
#define ETB_BasePtr                    0xE0042000UL //!< Peripheral base address
#define ETB                            ((ETB_Type *) ETB_BasePtr) //!< Freescale base pointer
#define ETB_BASE_PTR                   (ETB) //!< Freescale style base pointer

/** @} */ /* End group ETB_Peripheral_access_layer_GROUP */


/** @brief C Struct for ETF */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup ETF_Peripheral_access_layer_GROUP ETF Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           ETF (file:ETF_0)                     ================ */
/* ================================================================================ */

/**
 * @brief Embedded Trace Funnel
 */
/**
 * @struct ETF_Type
 * @brief  C Struct allowing access to ETF registers
 */
typedef struct ETF_Type {
   __IO uint32_t  FCR;                          /**< 0000: Funnel Control Register                                      */
   __IO uint32_t  PCR;                          /**< 0004: Priority Control Register                                    */
        uint8_t   RESERVED_0[3812];             /**< 0008: 0xEE4 bytes                                                  */
   __IO uint32_t  ITATBDATA0;                   /**< 0EEC: Integration Register, ITATBDATA0                             */
   __IO uint32_t  ITATBCTR2;                    /**< 0EF0: Integration Register, ITATBCTR2                              */
   __IO uint32_t  ITATBCTR1;                    /**< 0EF4: Integration Register, ITATBCTR1                              */
   __IO uint32_t  ITATBCTR0;                    /**< 0EF8: Integration Register, ITATBCTR0                              */
        uint8_t   RESERVED_1[4];                /**< 0EFC: 0x4 bytes                                                    */
   __IO uint32_t  ITCTRL;                       /**< 0F00: Integration Mode Control Register                            */
        uint8_t   RESERVED_2[156];              /**< 0F04: 0x9C bytes                                                   */
   __IO uint32_t  CLAIMSET;                     /**< 0FA0: Claim Tag Set Register                                       */
   __IO uint32_t  CLAIMCLR;                     /**< 0FA4: Claim Tag Clear Register                                     */
        uint8_t   RESERVED_3[8];                /**< 0FA8: 0x8 bytes                                                    */
   __O  uint32_t  LAR;                          /**< 0FB0: Lock Access Register                                         */
   __I  uint32_t  LSR;                          /**< 0FB4: Lock Status Register                                         */
   __I  uint32_t  AUTHSTATUS;                   /**< 0FB8: Authentication Status Register                               */
        uint8_t   RESERVED_4[12];               /**< 0FBC: 0xC bytes                                                    */
   __I  uint32_t  DEVID;                        /**< 0FC8: Device ID Register                                           */
   __I  uint32_t  DEVTYPE;                      /**< 0FCC: Device Type Identifier Register                              */
   __I  uint32_t  PIDR4;                        /**< 0FD0: Peripheral Identification Register 4                         */
   __I  uint32_t  PIDR5;                        /**< 0FD4: Peripheral Identification Register 5                         */
   __I  uint32_t  PIDR6;                        /**< 0FD8: Peripheral Identification Register 6                         */
   __I  uint32_t  PIDR7;                        /**< 0FDC: Peripheral Identification Register 7                         */
   __I  uint32_t  PIDR0;                        /**< 0FE0: Peripheral Identification Register 0                         */
   __I  uint32_t  PIDR1;                        /**< 0FE4: Peripheral Identification Register 1                         */
   __I  uint32_t  PIDR2;                        /**< 0FE8: Peripheral Identification Register 2                         */
   __I  uint32_t  PIDR3;                        /**< 0FEC: Peripheral Identification Register 3                         */
   __I  uint32_t  CIDR0;                        /**< 0FF0: Component Identification Register 0                          */
   __I  uint32_t  CIDR1;                        /**< 0FF4: Component Identification Register 1                          */
   __I  uint32_t  CIDR2;                        /**< 0FF8: Component Identification Register 2                          */
   __I  uint32_t  CIDR3;                        /**< 0FFC: Component Identification Register 3                          */
} ETF_Type;


/** @brief Register Masks for ETF */

/* -------------------------------------------------------------------------------- */
/* -----------     'ETF' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup ETF_Register_Masks_GROUP ETF Register Masks */
/** @{ */

/** @name FCR - Funnel Control Register */ /** @{ */
#define ETF_FCR_EnS0_MASK                        (0x1U)                                              /**< ETF_FCR.EnS0 Mask                       */
#define ETF_FCR_EnS0_SHIFT                       (0U)                                                /**< ETF_FCR.EnS0 Position                   */
#define ETF_FCR_EnS0(x)                          (((uint32_t)(((uint32_t)(x))<<ETF_FCR_EnS0_SHIFT))&ETF_FCR_EnS0_MASK) /**< ETF_FCR.EnS0 Field                      */
#define ETF_FCR_EnS1_MASK                        (0x2U)                                              /**< ETF_FCR.EnS1 Mask                       */
#define ETF_FCR_EnS1_SHIFT                       (1U)                                                /**< ETF_FCR.EnS1 Position                   */
#define ETF_FCR_EnS1(x)                          (((uint32_t)(((uint32_t)(x))<<ETF_FCR_EnS1_SHIFT))&ETF_FCR_EnS1_MASK) /**< ETF_FCR.EnS1 Field                      */
#define ETF_FCR_EnS2_MASK                        (0x4U)                                              /**< ETF_FCR.EnS2 Mask                       */
#define ETF_FCR_EnS2_SHIFT                       (2U)                                                /**< ETF_FCR.EnS2 Position                   */
#define ETF_FCR_EnS2(x)                          (((uint32_t)(((uint32_t)(x))<<ETF_FCR_EnS2_SHIFT))&ETF_FCR_EnS2_MASK) /**< ETF_FCR.EnS2 Field                      */
#define ETF_FCR_EnS3_MASK                        (0x8U)                                              /**< ETF_FCR.EnS3 Mask                       */
#define ETF_FCR_EnS3_SHIFT                       (3U)                                                /**< ETF_FCR.EnS3 Position                   */
#define ETF_FCR_EnS3(x)                          (((uint32_t)(((uint32_t)(x))<<ETF_FCR_EnS3_SHIFT))&ETF_FCR_EnS3_MASK) /**< ETF_FCR.EnS3 Field                      */
#define ETF_FCR_EnS4_MASK                        (0x10U)                                             /**< ETF_FCR.EnS4 Mask                       */
#define ETF_FCR_EnS4_SHIFT                       (4U)                                                /**< ETF_FCR.EnS4 Position                   */
#define ETF_FCR_EnS4(x)                          (((uint32_t)(((uint32_t)(x))<<ETF_FCR_EnS4_SHIFT))&ETF_FCR_EnS4_MASK) /**< ETF_FCR.EnS4 Field                      */
#define ETF_FCR_EnS5_MASK                        (0x20U)                                             /**< ETF_FCR.EnS5 Mask                       */
#define ETF_FCR_EnS5_SHIFT                       (5U)                                                /**< ETF_FCR.EnS5 Position                   */
#define ETF_FCR_EnS5(x)                          (((uint32_t)(((uint32_t)(x))<<ETF_FCR_EnS5_SHIFT))&ETF_FCR_EnS5_MASK) /**< ETF_FCR.EnS5 Field                      */
#define ETF_FCR_EnS6_MASK                        (0x40U)                                             /**< ETF_FCR.EnS6 Mask                       */
#define ETF_FCR_EnS6_SHIFT                       (6U)                                                /**< ETF_FCR.EnS6 Position                   */
#define ETF_FCR_EnS6(x)                          (((uint32_t)(((uint32_t)(x))<<ETF_FCR_EnS6_SHIFT))&ETF_FCR_EnS6_MASK) /**< ETF_FCR.EnS6 Field                      */
#define ETF_FCR_EnS7_MASK                        (0x80U)                                             /**< ETF_FCR.EnS7 Mask                       */
#define ETF_FCR_EnS7_SHIFT                       (7U)                                                /**< ETF_FCR.EnS7 Position                   */
#define ETF_FCR_EnS7(x)                          (((uint32_t)(((uint32_t)(x))<<ETF_FCR_EnS7_SHIFT))&ETF_FCR_EnS7_MASK) /**< ETF_FCR.EnS7 Field                      */
#define ETF_FCR_HT_MASK                          (0xF00U)                                            /**< ETF_FCR.HT Mask                         */
#define ETF_FCR_HT_SHIFT                         (8U)                                                /**< ETF_FCR.HT Position                     */
#define ETF_FCR_HT(x)                            (((uint32_t)(((uint32_t)(x))<<ETF_FCR_HT_SHIFT))&ETF_FCR_HT_MASK) /**< ETF_FCR.HT Field                        */
/** @} */

/** @name PCR - Priority Control Register */ /** @{ */
#define ETF_PCR_PriPort0_MASK                    (0x7U)                                              /**< ETF_PCR.PriPort0 Mask                   */
#define ETF_PCR_PriPort0_SHIFT                   (0U)                                                /**< ETF_PCR.PriPort0 Position               */
#define ETF_PCR_PriPort0(x)                      (((uint32_t)(((uint32_t)(x))<<ETF_PCR_PriPort0_SHIFT))&ETF_PCR_PriPort0_MASK) /**< ETF_PCR.PriPort0 Field                  */
#define ETF_PCR_PriPort1_MASK                    (0x38U)                                             /**< ETF_PCR.PriPort1 Mask                   */
#define ETF_PCR_PriPort1_SHIFT                   (3U)                                                /**< ETF_PCR.PriPort1 Position               */
#define ETF_PCR_PriPort1(x)                      (((uint32_t)(((uint32_t)(x))<<ETF_PCR_PriPort1_SHIFT))&ETF_PCR_PriPort1_MASK) /**< ETF_PCR.PriPort1 Field                  */
#define ETF_PCR_PriPort2_MASK                    (0x1C0U)                                            /**< ETF_PCR.PriPort2 Mask                   */
#define ETF_PCR_PriPort2_SHIFT                   (6U)                                                /**< ETF_PCR.PriPort2 Position               */
#define ETF_PCR_PriPort2(x)                      (((uint32_t)(((uint32_t)(x))<<ETF_PCR_PriPort2_SHIFT))&ETF_PCR_PriPort2_MASK) /**< ETF_PCR.PriPort2 Field                  */
#define ETF_PCR_PriPort3_MASK                    (0xE00U)                                            /**< ETF_PCR.PriPort3 Mask                   */
#define ETF_PCR_PriPort3_SHIFT                   (9U)                                                /**< ETF_PCR.PriPort3 Position               */
#define ETF_PCR_PriPort3(x)                      (((uint32_t)(((uint32_t)(x))<<ETF_PCR_PriPort3_SHIFT))&ETF_PCR_PriPort3_MASK) /**< ETF_PCR.PriPort3 Field                  */
#define ETF_PCR_PriPort4_MASK                    (0x7000U)                                           /**< ETF_PCR.PriPort4 Mask                   */
#define ETF_PCR_PriPort4_SHIFT                   (12U)                                               /**< ETF_PCR.PriPort4 Position               */
#define ETF_PCR_PriPort4(x)                      (((uint32_t)(((uint32_t)(x))<<ETF_PCR_PriPort4_SHIFT))&ETF_PCR_PriPort4_MASK) /**< ETF_PCR.PriPort4 Field                  */
#define ETF_PCR_PriPort5_MASK                    (0x38000U)                                          /**< ETF_PCR.PriPort5 Mask                   */
#define ETF_PCR_PriPort5_SHIFT                   (15U)                                               /**< ETF_PCR.PriPort5 Position               */
#define ETF_PCR_PriPort5(x)                      (((uint32_t)(((uint32_t)(x))<<ETF_PCR_PriPort5_SHIFT))&ETF_PCR_PriPort5_MASK) /**< ETF_PCR.PriPort5 Field                  */
#define ETF_PCR_PriPort6_MASK                    (0x1C0000U)                                         /**< ETF_PCR.PriPort6 Mask                   */
#define ETF_PCR_PriPort6_SHIFT                   (18U)                                               /**< ETF_PCR.PriPort6 Position               */
#define ETF_PCR_PriPort6(x)                      (((uint32_t)(((uint32_t)(x))<<ETF_PCR_PriPort6_SHIFT))&ETF_PCR_PriPort6_MASK) /**< ETF_PCR.PriPort6 Field                  */
#define ETF_PCR_PriPort7_MASK                    (0xE00000U)                                         /**< ETF_PCR.PriPort7 Mask                   */
#define ETF_PCR_PriPort7_SHIFT                   (21U)                                               /**< ETF_PCR.PriPort7 Position               */
#define ETF_PCR_PriPort7(x)                      (((uint32_t)(((uint32_t)(x))<<ETF_PCR_PriPort7_SHIFT))&ETF_PCR_PriPort7_MASK) /**< ETF_PCR.PriPort7 Field                  */
/** @} */

/** @name ITATBDATA0 - Integration Register, ITATBDATA0 */ /** @{ */
#define ETF_ITATBDATA0_ATDATA0_MASK              (0x1U)                                              /**< ETF_ITATBDATA0.ATDATA0 Mask             */
#define ETF_ITATBDATA0_ATDATA0_SHIFT             (0U)                                                /**< ETF_ITATBDATA0.ATDATA0 Position         */
#define ETF_ITATBDATA0_ATDATA0(x)                (((uint32_t)(((uint32_t)(x))<<ETF_ITATBDATA0_ATDATA0_SHIFT))&ETF_ITATBDATA0_ATDATA0_MASK) /**< ETF_ITATBDATA0.ATDATA0 Field            */
#define ETF_ITATBDATA0_ATDATA7_MASK              (0x2U)                                              /**< ETF_ITATBDATA0.ATDATA7 Mask             */
#define ETF_ITATBDATA0_ATDATA7_SHIFT             (1U)                                                /**< ETF_ITATBDATA0.ATDATA7 Position         */
#define ETF_ITATBDATA0_ATDATA7(x)                (((uint32_t)(((uint32_t)(x))<<ETF_ITATBDATA0_ATDATA7_SHIFT))&ETF_ITATBDATA0_ATDATA7_MASK) /**< ETF_ITATBDATA0.ATDATA7 Field            */
#define ETF_ITATBDATA0_ATDATA15_MASK             (0x4U)                                              /**< ETF_ITATBDATA0.ATDATA15 Mask            */
#define ETF_ITATBDATA0_ATDATA15_SHIFT            (2U)                                                /**< ETF_ITATBDATA0.ATDATA15 Position        */
#define ETF_ITATBDATA0_ATDATA15(x)               (((uint32_t)(((uint32_t)(x))<<ETF_ITATBDATA0_ATDATA15_SHIFT))&ETF_ITATBDATA0_ATDATA15_MASK) /**< ETF_ITATBDATA0.ATDATA15 Field           */
#define ETF_ITATBDATA0_ATDATA23_MASK             (0x8U)                                              /**< ETF_ITATBDATA0.ATDATA23 Mask            */
#define ETF_ITATBDATA0_ATDATA23_SHIFT            (3U)                                                /**< ETF_ITATBDATA0.ATDATA23 Position        */
#define ETF_ITATBDATA0_ATDATA23(x)               (((uint32_t)(((uint32_t)(x))<<ETF_ITATBDATA0_ATDATA23_SHIFT))&ETF_ITATBDATA0_ATDATA23_MASK) /**< ETF_ITATBDATA0.ATDATA23 Field           */
#define ETF_ITATBDATA0_ATDATA31_MASK             (0x10U)                                             /**< ETF_ITATBDATA0.ATDATA31 Mask            */
#define ETF_ITATBDATA0_ATDATA31_SHIFT            (4U)                                                /**< ETF_ITATBDATA0.ATDATA31 Position        */
#define ETF_ITATBDATA0_ATDATA31(x)               (((uint32_t)(((uint32_t)(x))<<ETF_ITATBDATA0_ATDATA31_SHIFT))&ETF_ITATBDATA0_ATDATA31_MASK) /**< ETF_ITATBDATA0.ATDATA31 Field           */
/** @} */

/** @name ITATBCTR2 - Integration Register, ITATBCTR2 */ /** @{ */
#define ETF_ITATBCTR2_ATREADY_MASK               (0x1U)                                              /**< ETF_ITATBCTR2.ATREADY Mask              */
#define ETF_ITATBCTR2_ATREADY_SHIFT              (0U)                                                /**< ETF_ITATBCTR2.ATREADY Position          */
#define ETF_ITATBCTR2_ATREADY(x)                 (((uint32_t)(((uint32_t)(x))<<ETF_ITATBCTR2_ATREADY_SHIFT))&ETF_ITATBCTR2_ATREADY_MASK) /**< ETF_ITATBCTR2.ATREADY Field             */
#define ETF_ITATBCTR2_AFVALID_MASK               (0x2U)                                              /**< ETF_ITATBCTR2.AFVALID Mask              */
#define ETF_ITATBCTR2_AFVALID_SHIFT              (1U)                                                /**< ETF_ITATBCTR2.AFVALID Position          */
#define ETF_ITATBCTR2_AFVALID(x)                 (((uint32_t)(((uint32_t)(x))<<ETF_ITATBCTR2_AFVALID_SHIFT))&ETF_ITATBCTR2_AFVALID_MASK) /**< ETF_ITATBCTR2.AFVALID Field             */
/** @} */

/** @name ITATBCTR1 - Integration Register, ITATBCTR1 */ /** @{ */
#define ETF_ITATBCTR1_ATID_MASK                  (0x7FU)                                             /**< ETF_ITATBCTR1.ATID Mask                 */
#define ETF_ITATBCTR1_ATID_SHIFT                 (0U)                                                /**< ETF_ITATBCTR1.ATID Position             */
#define ETF_ITATBCTR1_ATID(x)                    (((uint32_t)(((uint32_t)(x))<<ETF_ITATBCTR1_ATID_SHIFT))&ETF_ITATBCTR1_ATID_MASK) /**< ETF_ITATBCTR1.ATID Field                */
/** @} */

/** @name ITATBCTR0 - Integration Register, ITATBCTR0 */ /** @{ */
#define ETF_ITATBCTR0_ATVALID_MASK               (0x1U)                                              /**< ETF_ITATBCTR0.ATVALID Mask              */
#define ETF_ITATBCTR0_ATVALID_SHIFT              (0U)                                                /**< ETF_ITATBCTR0.ATVALID Position          */
#define ETF_ITATBCTR0_ATVALID(x)                 (((uint32_t)(((uint32_t)(x))<<ETF_ITATBCTR0_ATVALID_SHIFT))&ETF_ITATBCTR0_ATVALID_MASK) /**< ETF_ITATBCTR0.ATVALID Field             */
#define ETF_ITATBCTR0_AFREADY_MASK               (0x2U)                                              /**< ETF_ITATBCTR0.AFREADY Mask              */
#define ETF_ITATBCTR0_AFREADY_SHIFT              (1U)                                                /**< ETF_ITATBCTR0.AFREADY Position          */
#define ETF_ITATBCTR0_AFREADY(x)                 (((uint32_t)(((uint32_t)(x))<<ETF_ITATBCTR0_AFREADY_SHIFT))&ETF_ITATBCTR0_AFREADY_MASK) /**< ETF_ITATBCTR0.AFREADY Field             */
#define ETF_ITATBCTR0_ATBYTES_MASK               (0x300U)                                            /**< ETF_ITATBCTR0.ATBYTES Mask              */
#define ETF_ITATBCTR0_ATBYTES_SHIFT              (8U)                                                /**< ETF_ITATBCTR0.ATBYTES Position          */
#define ETF_ITATBCTR0_ATBYTES(x)                 (((uint32_t)(((uint32_t)(x))<<ETF_ITATBCTR0_ATBYTES_SHIFT))&ETF_ITATBCTR0_ATBYTES_MASK) /**< ETF_ITATBCTR0.ATBYTES Field             */
/** @} */

/** @name ITCTRL - Integration Mode Control Register */ /** @{ */
#define ETF_ITCTRL_IntegrationMode_MASK          (0x1U)                                              /**< ETF_ITCTRL.IntegrationMode Mask         */
#define ETF_ITCTRL_IntegrationMode_SHIFT         (0U)                                                /**< ETF_ITCTRL.IntegrationMode Position     */
#define ETF_ITCTRL_IntegrationMode(x)            (((uint32_t)(((uint32_t)(x))<<ETF_ITCTRL_IntegrationMode_SHIFT))&ETF_ITCTRL_IntegrationMode_MASK) /**< ETF_ITCTRL.IntegrationMode Field        */
/** @} */

/** @name CLAIMSET - Claim Tag Set Register */ /** @{ */
#define ETF_CLAIMSET_CLAIMSET_MASK               (0xFU)                                              /**< ETF_CLAIMSET.CLAIMSET Mask              */
#define ETF_CLAIMSET_CLAIMSET_SHIFT              (0U)                                                /**< ETF_CLAIMSET.CLAIMSET Position          */
#define ETF_CLAIMSET_CLAIMSET(x)                 (((uint32_t)(((uint32_t)(x))<<ETF_CLAIMSET_CLAIMSET_SHIFT))&ETF_CLAIMSET_CLAIMSET_MASK) /**< ETF_CLAIMSET.CLAIMSET Field             */
/** @} */

/** @name CLAIMCLR - Claim Tag Clear Register */ /** @{ */
#define ETF_CLAIMCLR_CLAIMCLR_MASK               (0xFU)                                              /**< ETF_CLAIMCLR.CLAIMCLR Mask              */
#define ETF_CLAIMCLR_CLAIMCLR_SHIFT              (0U)                                                /**< ETF_CLAIMCLR.CLAIMCLR Position          */
#define ETF_CLAIMCLR_CLAIMCLR(x)                 (((uint32_t)(((uint32_t)(x))<<ETF_CLAIMCLR_CLAIMCLR_SHIFT))&ETF_CLAIMCLR_CLAIMCLR_MASK) /**< ETF_CLAIMCLR.CLAIMCLR Field             */
/** @} */

/** @name LAR - Lock Access Register */ /** @{ */
#define ETF_LAR_WriteAccessCode_MASK             (0xFFFFFFFFU)                                       /**< ETF_LAR.WriteAccessCode Mask            */
#define ETF_LAR_WriteAccessCode_SHIFT            (0U)                                                /**< ETF_LAR.WriteAccessCode Position        */
#define ETF_LAR_WriteAccessCode(x)               (((uint32_t)(((uint32_t)(x))<<ETF_LAR_WriteAccessCode_SHIFT))&ETF_LAR_WriteAccessCode_MASK) /**< ETF_LAR.WriteAccessCode Field           */
/** @} */

/** @name LSR - Lock Status Register */ /** @{ */
#define ETF_LSR_IMP_MASK                         (0x1U)                                              /**< ETF_LSR.IMP Mask                        */
#define ETF_LSR_IMP_SHIFT                        (0U)                                                /**< ETF_LSR.IMP Position                    */
#define ETF_LSR_IMP(x)                           (((uint32_t)(((uint32_t)(x))<<ETF_LSR_IMP_SHIFT))&ETF_LSR_IMP_MASK) /**< ETF_LSR.IMP Field                       */
#define ETF_LSR_STATUS_MASK                      (0x2U)                                              /**< ETF_LSR.STATUS Mask                     */
#define ETF_LSR_STATUS_SHIFT                     (1U)                                                /**< ETF_LSR.STATUS Position                 */
#define ETF_LSR_STATUS(x)                        (((uint32_t)(((uint32_t)(x))<<ETF_LSR_STATUS_SHIFT))&ETF_LSR_STATUS_MASK) /**< ETF_LSR.STATUS Field                    */
#define ETF_LSR_s8BIT_MASK                       (0x4U)                                              /**< ETF_LSR.s8BIT Mask                      */
#define ETF_LSR_s8BIT_SHIFT                      (2U)                                                /**< ETF_LSR.s8BIT Position                  */
#define ETF_LSR_s8BIT(x)                         (((uint32_t)(((uint32_t)(x))<<ETF_LSR_s8BIT_SHIFT))&ETF_LSR_s8BIT_MASK) /**< ETF_LSR.s8BIT Field                     */
/** @} */

/** @name AUTHSTATUS - Authentication Status Register */ /** @{ */
#define ETF_AUTHSTATUS_AuthenticationStatus_MASK (0xFFU)                                             /**< ETF_AUTHSTATUS.AuthenticationStatus Mask*/
#define ETF_AUTHSTATUS_AuthenticationStatus_SHIFT (0U)                                               /**< ETF_AUTHSTATUS.AuthenticationStatus Position*/
#define ETF_AUTHSTATUS_AuthenticationStatus(x)   (((uint32_t)(((uint32_t)(x))<<ETF_AUTHSTATUS_AuthenticationStatus_SHIFT))&ETF_AUTHSTATUS_AuthenticationStatus_MASK) /**< ETF_AUTHSTATUS.AuthenticationStatus Field*/
/** @} */

/** @name DEVID - Device ID Register */ /** @{ */
#define ETF_DEVID_PORTCOUNT_MASK                 (0xFU)                                              /**< ETF_DEVID.PORTCOUNT Mask                */
#define ETF_DEVID_PORTCOUNT_SHIFT                (0U)                                                /**< ETF_DEVID.PORTCOUNT Position            */
#define ETF_DEVID_PORTCOUNT(x)                   (((uint32_t)(((uint32_t)(x))<<ETF_DEVID_PORTCOUNT_SHIFT))&ETF_DEVID_PORTCOUNT_MASK) /**< ETF_DEVID.PORTCOUNT Field               */
#define ETF_DEVID_PriorityScheme_MASK            (0xF0U)                                             /**< ETF_DEVID.PriorityScheme Mask           */
#define ETF_DEVID_PriorityScheme_SHIFT           (4U)                                                /**< ETF_DEVID.PriorityScheme Position       */
#define ETF_DEVID_PriorityScheme(x)              (((uint32_t)(((uint32_t)(x))<<ETF_DEVID_PriorityScheme_SHIFT))&ETF_DEVID_PriorityScheme_MASK) /**< ETF_DEVID.PriorityScheme Field          */
/** @} */

/** @name DEVTYPE - Device Type Identifier Register */ /** @{ */
#define ETF_DEVTYPE_MajorType_MASK               (0xFU)                                              /**< ETF_DEVTYPE.MajorType Mask              */
#define ETF_DEVTYPE_MajorType_SHIFT              (0U)                                                /**< ETF_DEVTYPE.MajorType Position          */
#define ETF_DEVTYPE_MajorType(x)                 (((uint32_t)(((uint32_t)(x))<<ETF_DEVTYPE_MajorType_SHIFT))&ETF_DEVTYPE_MajorType_MASK) /**< ETF_DEVTYPE.MajorType Field             */
#define ETF_DEVTYPE_SubType_MASK                 (0xF0U)                                             /**< ETF_DEVTYPE.SubType Mask                */
#define ETF_DEVTYPE_SubType_SHIFT                (4U)                                                /**< ETF_DEVTYPE.SubType Position            */
#define ETF_DEVTYPE_SubType(x)                   (((uint32_t)(((uint32_t)(x))<<ETF_DEVTYPE_SubType_SHIFT))&ETF_DEVTYPE_SubType_MASK) /**< ETF_DEVTYPE.SubType Field               */
/** @} */

/** @name PIDR4 - Peripheral Identification Register 4 */ /** @{ */
#define ETF_PIDR4_JEP106_MASK                    (0xFU)                                              /**< ETF_PIDR4.JEP106 Mask                   */
#define ETF_PIDR4_JEP106_SHIFT                   (0U)                                                /**< ETF_PIDR4.JEP106 Position               */
#define ETF_PIDR4_JEP106(x)                      (((uint32_t)(((uint32_t)(x))<<ETF_PIDR4_JEP106_SHIFT))&ETF_PIDR4_JEP106_MASK) /**< ETF_PIDR4.JEP106 Field                  */
#define ETF_PIDR4_c4KB_MASK                      (0xF0U)                                             /**< ETF_PIDR4.c4KB Mask                     */
#define ETF_PIDR4_c4KB_SHIFT                     (4U)                                                /**< ETF_PIDR4.c4KB Position                 */
#define ETF_PIDR4_c4KB(x)                        (((uint32_t)(((uint32_t)(x))<<ETF_PIDR4_c4KB_SHIFT))&ETF_PIDR4_c4KB_MASK) /**< ETF_PIDR4.c4KB Field                    */
/** @} */

/** @name PIDR0 - Peripheral Identification Register 0 */ /** @{ */
#define ETF_PIDR0_PartNumber_MASK                (0xFFU)                                             /**< ETF_PIDR0.PartNumber Mask               */
#define ETF_PIDR0_PartNumber_SHIFT               (0U)                                                /**< ETF_PIDR0.PartNumber Position           */
#define ETF_PIDR0_PartNumber(x)                  (((uint32_t)(((uint32_t)(x))<<ETF_PIDR0_PartNumber_SHIFT))&ETF_PIDR0_PartNumber_MASK) /**< ETF_PIDR0.PartNumber Field              */
/** @} */

/** @name PIDR1 - Peripheral Identification Register 1 */ /** @{ */
#define ETF_PIDR1_PartNumber_MASK                (0xFU)                                              /**< ETF_PIDR1.PartNumber Mask               */
#define ETF_PIDR1_PartNumber_SHIFT               (0U)                                                /**< ETF_PIDR1.PartNumber Position           */
#define ETF_PIDR1_PartNumber(x)                  (((uint32_t)(((uint32_t)(x))<<ETF_PIDR1_PartNumber_SHIFT))&ETF_PIDR1_PartNumber_MASK) /**< ETF_PIDR1.PartNumber Field              */
#define ETF_PIDR1_JEP106_identity_code_MASK      (0xF0U)                                             /**< ETF_PIDR1.JEP106_identity_code Mask     */
#define ETF_PIDR1_JEP106_identity_code_SHIFT     (4U)                                                /**< ETF_PIDR1.JEP106_identity_code Position */
#define ETF_PIDR1_JEP106_identity_code(x)        (((uint32_t)(((uint32_t)(x))<<ETF_PIDR1_JEP106_identity_code_SHIFT))&ETF_PIDR1_JEP106_identity_code_MASK) /**< ETF_PIDR1.JEP106_identity_code Field    */
/** @} */

/** @name PIDR2 - Peripheral Identification Register 2 */ /** @{ */
#define ETF_PIDR2_JEP106_identity_code_MASK      (0x7U)                                              /**< ETF_PIDR2.JEP106_identity_code Mask     */
#define ETF_PIDR2_JEP106_identity_code_SHIFT     (0U)                                                /**< ETF_PIDR2.JEP106_identity_code Position */
#define ETF_PIDR2_JEP106_identity_code(x)        (((uint32_t)(((uint32_t)(x))<<ETF_PIDR2_JEP106_identity_code_SHIFT))&ETF_PIDR2_JEP106_identity_code_MASK) /**< ETF_PIDR2.JEP106_identity_code Field    */
#define ETF_PIDR2_Revision_MASK                  (0xF0U)                                             /**< ETF_PIDR2.Revision Mask                 */
#define ETF_PIDR2_Revision_SHIFT                 (4U)                                                /**< ETF_PIDR2.Revision Position             */
#define ETF_PIDR2_Revision(x)                    (((uint32_t)(((uint32_t)(x))<<ETF_PIDR2_Revision_SHIFT))&ETF_PIDR2_Revision_MASK) /**< ETF_PIDR2.Revision Field                */
/** @} */

/** @name PIDR3 - Peripheral Identification Register 3 */ /** @{ */
#define ETF_PIDR3_CustomerModified_MASK          (0xFU)                                              /**< ETF_PIDR3.CustomerModified Mask         */
#define ETF_PIDR3_CustomerModified_SHIFT         (0U)                                                /**< ETF_PIDR3.CustomerModified Position     */
#define ETF_PIDR3_CustomerModified(x)            (((uint32_t)(((uint32_t)(x))<<ETF_PIDR3_CustomerModified_SHIFT))&ETF_PIDR3_CustomerModified_MASK) /**< ETF_PIDR3.CustomerModified Field        */
#define ETF_PIDR3_RevAnd_MASK                    (0xF0U)                                             /**< ETF_PIDR3.RevAnd Mask                   */
#define ETF_PIDR3_RevAnd_SHIFT                   (4U)                                                /**< ETF_PIDR3.RevAnd Position               */
#define ETF_PIDR3_RevAnd(x)                      (((uint32_t)(((uint32_t)(x))<<ETF_PIDR3_RevAnd_SHIFT))&ETF_PIDR3_RevAnd_MASK) /**< ETF_PIDR3.RevAnd Field                  */
/** @} */

/** @name CIDR0 - Component Identification Register 0 */ /** @{ */
#define ETF_CIDR0_Preamble_MASK                  (0xFFU)                                             /**< ETF_CIDR0.Preamble Mask                 */
#define ETF_CIDR0_Preamble_SHIFT                 (0U)                                                /**< ETF_CIDR0.Preamble Position             */
#define ETF_CIDR0_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETF_CIDR0_Preamble_SHIFT))&ETF_CIDR0_Preamble_MASK) /**< ETF_CIDR0.Preamble Field                */
/** @} */

/** @name CIDR1 - Component Identification Register 1 */ /** @{ */
#define ETF_CIDR1_Preamble_MASK                  (0xFU)                                              /**< ETF_CIDR1.Preamble Mask                 */
#define ETF_CIDR1_Preamble_SHIFT                 (0U)                                                /**< ETF_CIDR1.Preamble Position             */
#define ETF_CIDR1_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETF_CIDR1_Preamble_SHIFT))&ETF_CIDR1_Preamble_MASK) /**< ETF_CIDR1.Preamble Field                */
#define ETF_CIDR1_ComponentClass_MASK            (0xF0U)                                             /**< ETF_CIDR1.ComponentClass Mask           */
#define ETF_CIDR1_ComponentClass_SHIFT           (4U)                                                /**< ETF_CIDR1.ComponentClass Position       */
#define ETF_CIDR1_ComponentClass(x)              (((uint32_t)(((uint32_t)(x))<<ETF_CIDR1_ComponentClass_SHIFT))&ETF_CIDR1_ComponentClass_MASK) /**< ETF_CIDR1.ComponentClass Field          */
/** @} */

/** @name CIDR2 - Component Identification Register 2 */ /** @{ */
#define ETF_CIDR2_Preamble_MASK                  (0xFFU)                                             /**< ETF_CIDR2.Preamble Mask                 */
#define ETF_CIDR2_Preamble_SHIFT                 (0U)                                                /**< ETF_CIDR2.Preamble Position             */
#define ETF_CIDR2_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETF_CIDR2_Preamble_SHIFT))&ETF_CIDR2_Preamble_MASK) /**< ETF_CIDR2.Preamble Field                */
/** @} */

/** @name CIDR3 - Component Identification Register 3 */ /** @{ */
#define ETF_CIDR3_Preamble_MASK                  (0xFFU)                                             /**< ETF_CIDR3.Preamble Mask                 */
#define ETF_CIDR3_Preamble_SHIFT                 (0U)                                                /**< ETF_CIDR3.Preamble Position             */
#define ETF_CIDR3_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETF_CIDR3_Preamble_SHIFT))&ETF_CIDR3_Preamble_MASK) /**< ETF_CIDR3.Preamble Field                */
/** @} */

/** @} */ /* End group ETF_Register_Masks_GROUP */


/* ETF - Peripheral instance base addresses */
#define ETF_BasePtr                    0xE0043000UL //!< Peripheral base address
#define ETF                            ((ETF_Type *) ETF_BasePtr) //!< Freescale base pointer
#define ETF_BASE_PTR                   (ETF) //!< Freescale style base pointer

/** @} */ /* End group ETF_Peripheral_access_layer_GROUP */


/** @brief C Struct for ETM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup ETM_Peripheral_access_layer_GROUP ETM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           ETM (file:ETM_0)                     ================ */
/* ================================================================================ */

/**
 * @brief Embedded Trace Macrocell
 */
/**
 * @struct ETM_Type
 * @brief  C Struct allowing access to ETM registers
 */
typedef struct ETM_Type {
   __IO uint32_t  CR;                           /**< 0000: Main Control Register                                        */
   __I  uint32_t  CCR;                          /**< 0004: Configuration Code Register                                  */
   __IO uint32_t  TRIGGER;                      /**< 0008: Trigger Event Register                                       */
        uint8_t   RESERVED_0[4];                /**< 000C: 0x4 bytes                                                    */
   __IO uint32_t  SR;                           /**< 0010: ETM Status Register                                          */
   __I  uint32_t  SCR;                          /**< 0014: System Configuration Register                                */
        uint8_t   RESERVED_1[8];                /**< 0018: 0x8 bytes                                                    */
   __IO uint32_t  EEVR;                         /**< 0020: Trace Enable Event Register                                  */
   __IO uint32_t  TECR1;                        /**< 0024: Trace Enable Control 1 Register                              */
   __IO uint32_t  FFLR;                         /**< 0028: FIFOFULL Level Register                                      */
        uint8_t   RESERVED_2[276];              /**< 002C: 0x114 bytes                                                  */
   __IO uint32_t  CNTRLDVR1;                    /**< 0140: Free-running counter reload value                            */
        uint8_t   RESERVED_3[156];              /**< 0144: 0x9C bytes                                                   */
   __I  uint32_t  SYNCFR;                       /**< 01E0: Synchronization Frequency Register                           */
   __I  uint32_t  IDR;                          /**< 01E4: ID Register                                                  */
   __I  uint32_t  CCER;                         /**< 01E8: Configuration Code Extension Register                        */
        uint8_t   RESERVED_4[4];                /**< 01EC: 0x4 bytes                                                    */
   __IO uint32_t  TESSEICR;                     /**< 01F0: TraceEnable Start/Stop EmbeddedICE Control Register          */
        uint8_t   RESERVED_5[4];                /**< 01F4: 0x4 bytes                                                    */
   __IO uint32_t  TSEVR;                        /**< 01F8: Timestamp Event Register                                     */
        uint8_t   RESERVED_6[4];                /**< 01FC: 0x4 bytes                                                    */
   __IO uint32_t  TRACEIDR;                     /**< 0200: CoreSight Trace ID Register                                  */
        uint8_t   RESERVED_7[4];                /**< 0204: 0x4 bytes                                                    */
   __I  uint32_t  IDR2;                         /**< 0208: ETM ID Register 2                                            */
        uint8_t   RESERVED_8[264];              /**< 020C: 0x108 bytes                                                  */
   __I  uint32_t  PDSR;                         /**< 0314: Device Power-Down Status Register                            */
        uint8_t   RESERVED_9[3016];             /**< 0318: 0xBC8 bytes                                                  */
   __I  uint32_t  _ITMISCIN;                    /**< 0EE0: Integration Test Miscelaneous Inputs Register                */
        uint8_t   RESERVED_10[4];               /**< 0EE4: 0x4 bytes                                                    */
   __O  uint32_t  _ITTRIGOUT;                   /**< 0EE8: Integration Test Trigger Out Register                        */
        uint8_t   RESERVED_11[4];               /**< 0EEC: 0x4 bytes                                                    */
   __I  uint32_t  _ITATBCTR2;                   /**< 0EF0: ETM Integration Test ATB Control 2 Register                  */
        uint8_t   RESERVED_12[4];               /**< 0EF4: 0x4 bytes                                                    */
   __O  uint32_t  _ITATBCTR0;                   /**< 0EF8: ETM Integration Test ATB Control 0 Register                  */
        uint8_t   RESERVED_13[4];               /**< 0EFC: 0x4 bytes                                                    */
   __IO uint32_t  ITCTRL;                       /**< 0F00: Integration Mode Control Register                            */
        uint8_t   RESERVED_14[156];             /**< 0F04: 0x9C bytes                                                   */
   __IO uint32_t  CLAIMSET;                     /**< 0FA0: Claim Tag Set Register                                       */
   __IO uint32_t  CLAIMCLR;                     /**< 0FA4: Claim Tag Clear Register                                     */
        uint8_t   RESERVED_15[8];               /**< 0FA8: 0x8 bytes                                                    */
   __IO uint32_t  LAR;                          /**< 0FB0: Lock Access Register                                         */
   __I  uint32_t  LSR;                          /**< 0FB4: Lock Status Register                                         */
   __I  uint32_t  AUTHSTATUS;                   /**< 0FB8: Authentication Status Register                               */
        uint8_t   RESERVED_16[16];              /**< 0FBC: 0x10 bytes                                                   */
   __I  uint32_t  DEVTYPE;                      /**< 0FCC: CoreSight Device Type Register                               */
   __I  uint32_t  PIDR4;                        /**< 0FD0: Peripheral Identification Register 4                         */
   __I  uint32_t  PIDR5;                        /**< 0FD4: Peripheral Identification Register 5                         */
   __I  uint32_t  PIDR6;                        /**< 0FD8: Peripheral Identification Register 6                         */
   __I  uint32_t  PIDR7;                        /**< 0FDC: Peripheral Identification Register 7                         */
   __I  uint32_t  PIDR0;                        /**< 0FE0: Peripheral Identification Register 0                         */
   __I  uint32_t  PIDR1;                        /**< 0FE4: Peripheral Identification Register 1                         */
   __I  uint32_t  PIDR2;                        /**< 0FE8: Peripheral Identification Register 2                         */
   __I  uint32_t  PIDR3;                        /**< 0FEC: Peripheral Identification Register 3                         */
   __I  uint32_t  CIDR0;                        /**< 0FF0: Component Identification Register 0                          */
   __I  uint32_t  CIDR1;                        /**< 0FF4: Component Identification Register 1                          */
   __I  uint32_t  CIDR2;                        /**< 0FF8: Component Identification Register 2                          */
   __I  uint32_t  CIDR3;                        /**< 0FFC: Component Identification Register 3                          */
} ETM_Type;


/** @brief Register Masks for ETM */

/* -------------------------------------------------------------------------------- */
/* -----------     'ETM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup ETM_Register_Masks_GROUP ETM Register Masks */
/** @{ */

/** @name CR - Main Control Register */ /** @{ */
#define ETM_CR_ETMPD_MASK                        (0x1U)                                              /**< ETM_CR.ETMPD Mask                       */
#define ETM_CR_ETMPD_SHIFT                       (0U)                                                /**< ETM_CR.ETMPD Position                   */
#define ETM_CR_ETMPD(x)                          (((uint32_t)(((uint32_t)(x))<<ETM_CR_ETMPD_SHIFT))&ETM_CR_ETMPD_MASK) /**< ETM_CR.ETMPD Field                      */
#define ETM_CR_PS_MASK                           (0x70U)                                             /**< ETM_CR.PS Mask                          */
#define ETM_CR_PS_SHIFT                          (4U)                                                /**< ETM_CR.PS Position                      */
#define ETM_CR_PS(x)                             (((uint32_t)(((uint32_t)(x))<<ETM_CR_PS_SHIFT))&ETM_CR_PS_MASK) /**< ETM_CR.PS Field                         */
#define ETM_CR_SP_MASK                           (0x80U)                                             /**< ETM_CR.SP Mask                          */
#define ETM_CR_SP_SHIFT                          (7U)                                                /**< ETM_CR.SP Position                      */
#define ETM_CR_SP(x)                             (((uint32_t)(((uint32_t)(x))<<ETM_CR_SP_SHIFT))&ETM_CR_SP_MASK) /**< ETM_CR.SP Field                         */
#define ETM_CR_BO_MASK                           (0x100U)                                            /**< ETM_CR.BO Mask                          */
#define ETM_CR_BO_SHIFT                          (8U)                                                /**< ETM_CR.BO Position                      */
#define ETM_CR_BO(x)                             (((uint32_t)(((uint32_t)(x))<<ETM_CR_BO_SHIFT))&ETM_CR_BO_MASK) /**< ETM_CR.BO Field                         */
#define ETM_CR_DRC_MASK                          (0x200U)                                            /**< ETM_CR.DRC Mask                         */
#define ETM_CR_DRC_SHIFT                         (9U)                                                /**< ETM_CR.DRC Position                     */
#define ETM_CR_DRC(x)                            (((uint32_t)(((uint32_t)(x))<<ETM_CR_DRC_SHIFT))&ETM_CR_DRC_MASK) /**< ETM_CR.DRC Field                        */
#define ETM_CR_ETMP_MASK                         (0x400U)                                            /**< ETM_CR.ETMP Mask                        */
#define ETM_CR_ETMP_SHIFT                        (10U)                                               /**< ETM_CR.ETMP Position                    */
#define ETM_CR_ETMP(x)                           (((uint32_t)(((uint32_t)(x))<<ETM_CR_ETMP_SHIFT))&ETM_CR_ETMP_MASK) /**< ETM_CR.ETMP Field                       */
#define ETM_CR_ETMPS_MASK                        (0x800U)                                            /**< ETM_CR.ETMPS Mask                       */
#define ETM_CR_ETMPS_SHIFT                       (11U)                                               /**< ETM_CR.ETMPS Position                   */
#define ETM_CR_ETMPS(x)                          (((uint32_t)(((uint32_t)(x))<<ETM_CR_ETMPS_SHIFT))&ETM_CR_ETMPS_MASK) /**< ETM_CR.ETMPS Field                      */
#define ETM_CR_PM2_MASK                          (0x2000U)                                           /**< ETM_CR.PM2 Mask                         */
#define ETM_CR_PM2_SHIFT                         (13U)                                               /**< ETM_CR.PM2 Position                     */
#define ETM_CR_PM2(x)                            (((uint32_t)(((uint32_t)(x))<<ETM_CR_PM2_SHIFT))&ETM_CR_PM2_MASK) /**< ETM_CR.PM2 Field                        */
#define ETM_CR_PM_MASK                           (0x30000U)                                          /**< ETM_CR.PM Mask                          */
#define ETM_CR_PM_SHIFT                          (16U)                                               /**< ETM_CR.PM Position                      */
#define ETM_CR_PM(x)                             (((uint32_t)(((uint32_t)(x))<<ETM_CR_PM_SHIFT))&ETM_CR_PM_MASK) /**< ETM_CR.PM Field                         */
#define ETM_CR_PS3_MASK                          (0x200000U)                                         /**< ETM_CR.PS3 Mask                         */
#define ETM_CR_PS3_SHIFT                         (21U)                                               /**< ETM_CR.PS3 Position                     */
#define ETM_CR_PS3(x)                            (((uint32_t)(((uint32_t)(x))<<ETM_CR_PS3_SHIFT))&ETM_CR_PS3_MASK) /**< ETM_CR.PS3 Field                        */
#define ETM_CR_TE_MASK                           (0x10000000U)                                       /**< ETM_CR.TE Mask                          */
#define ETM_CR_TE_SHIFT                          (28U)                                               /**< ETM_CR.TE Position                      */
#define ETM_CR_TE(x)                             (((uint32_t)(((uint32_t)(x))<<ETM_CR_TE_SHIFT))&ETM_CR_TE_MASK) /**< ETM_CR.TE Field                         */
/** @} */

/** @name CCR - Configuration Code Register */ /** @{ */
#define ETM_CCR_NumberOfAddressComparatorPairs_MASK (0xFU)                                           /**< ETM_CCR.NumberOfAddressComparatorPairs Mask*/
#define ETM_CCR_NumberOfAddressComparatorPairs_SHIFT (0U)                                            /**< ETM_CCR.NumberOfAddressComparatorPairs Position*/
#define ETM_CCR_NumberOfAddressComparatorPairs(x) (((uint32_t)(((uint32_t)(x))<<ETM_CCR_NumberOfAddressComparatorPairs_SHIFT))&ETM_CCR_NumberOfAddressComparatorPairs_MASK) /**< ETM_CCR.NumberOfAddressComparatorPairs Field*/
#define ETM_CCR_NDVC_MASK                        (0xF0U)                                             /**< ETM_CCR.NDVC Mask                       */
#define ETM_CCR_NDVC_SHIFT                       (4U)                                                /**< ETM_CCR.NDVC Position                   */
#define ETM_CCR_NDVC(x)                          (((uint32_t)(((uint32_t)(x))<<ETM_CCR_NDVC_SHIFT))&ETM_CCR_NDVC_MASK) /**< ETM_CCR.NDVC Field                      */
#define ETM_CCR_NMMD_MASK                        (0x1F00U)                                           /**< ETM_CCR.NMMD Mask                       */
#define ETM_CCR_NMMD_SHIFT                       (8U)                                                /**< ETM_CCR.NMMD Position                   */
#define ETM_CCR_NMMD(x)                          (((uint32_t)(((uint32_t)(x))<<ETM_CCR_NMMD_SHIFT))&ETM_CCR_NMMD_MASK) /**< ETM_CCR.NMMD Field                      */
#define ETM_CCR_NC_MASK                          (0xE000U)                                           /**< ETM_CCR.NC Mask                         */
#define ETM_CCR_NC_SHIFT                         (13U)                                               /**< ETM_CCR.NC Position                     */
#define ETM_CCR_NC(x)                            (((uint32_t)(((uint32_t)(x))<<ETM_CCR_NC_SHIFT))&ETM_CCR_NC_MASK) /**< ETM_CCR.NC Field                        */
#define ETM_CCR_SP_MASK                          (0x10000U)                                          /**< ETM_CCR.SP Mask                         */
#define ETM_CCR_SP_SHIFT                         (16U)                                               /**< ETM_CCR.SP Position                     */
#define ETM_CCR_SP(x)                            (((uint32_t)(((uint32_t)(x))<<ETM_CCR_SP_SHIFT))&ETM_CCR_SP_MASK) /**< ETM_CCR.SP Field                        */
#define ETM_CCR_NEI_MASK                         (0xE0000U)                                          /**< ETM_CCR.NEI Mask                        */
#define ETM_CCR_NEI_SHIFT                        (17U)                                               /**< ETM_CCR.NEI Position                    */
#define ETM_CCR_NEI(x)                           (((uint32_t)(((uint32_t)(x))<<ETM_CCR_NEI_SHIFT))&ETM_CCR_NEI_MASK) /**< ETM_CCR.NEI Field                       */
#define ETM_CCR_NEO_MASK                         (0x700000U)                                         /**< ETM_CCR.NEO Mask                        */
#define ETM_CCR_NEO_SHIFT                        (20U)                                               /**< ETM_CCR.NEO Position                    */
#define ETM_CCR_NEO(x)                           (((uint32_t)(((uint32_t)(x))<<ETM_CCR_NEO_SHIFT))&ETM_CCR_NEO_MASK) /**< ETM_CCR.NEO Field                       */
#define ETM_CCR_FFLP_MASK                        (0x800000U)                                         /**< ETM_CCR.FFLP Mask                       */
#define ETM_CCR_FFLP_SHIFT                       (23U)                                               /**< ETM_CCR.FFLP Position                   */
#define ETM_CCR_FFLP(x)                          (((uint32_t)(((uint32_t)(x))<<ETM_CCR_FFLP_SHIFT))&ETM_CCR_FFLP_MASK) /**< ETM_CCR.FFLP Field                      */
#define ETM_CCR_NCIDC_MASK                       (0x3000000U)                                        /**< ETM_CCR.NCIDC Mask                      */
#define ETM_CCR_NCIDC_SHIFT                      (24U)                                               /**< ETM_CCR.NCIDC Position                  */
#define ETM_CCR_NCIDC(x)                         (((uint32_t)(((uint32_t)(x))<<ETM_CCR_NCIDC_SHIFT))&ETM_CCR_NCIDC_MASK) /**< ETM_CCR.NCIDC Field                     */
#define ETM_CCR_TSSBP_MASK                       (0x4000000U)                                        /**< ETM_CCR.TSSBP Mask                      */
#define ETM_CCR_TSSBP_SHIFT                      (26U)                                               /**< ETM_CCR.TSSBP Position                  */
#define ETM_CCR_TSSBP(x)                         (((uint32_t)(((uint32_t)(x))<<ETM_CCR_TSSBP_SHIFT))&ETM_CCR_TSSBP_MASK) /**< ETM_CCR.TSSBP Field                     */
#define ETM_CCR_CMA_MASK                         (0x8000000U)                                        /**< ETM_CCR.CMA Mask                        */
#define ETM_CCR_CMA_SHIFT                        (27U)                                               /**< ETM_CCR.CMA Position                    */
#define ETM_CCR_CMA(x)                           (((uint32_t)(((uint32_t)(x))<<ETM_CCR_CMA_SHIFT))&ETM_CCR_CMA_MASK) /**< ETM_CCR.CMA Field                       */
#define ETM_CCR_ETMIDRP_MASK                     (0x80000000U)                                       /**< ETM_CCR.ETMIDRP Mask                    */
#define ETM_CCR_ETMIDRP_SHIFT                    (31U)                                               /**< ETM_CCR.ETMIDRP Position                */
#define ETM_CCR_ETMIDRP(x)                       (((uint32_t)(((uint32_t)(x))<<ETM_CCR_ETMIDRP_SHIFT))&ETM_CCR_ETMIDRP_MASK) /**< ETM_CCR.ETMIDRP Field                   */
/** @} */

/** @name TRIGGER - Trigger Event Register */ /** @{ */
#define ETM_TRIGGER_TriggerEvent_MASK            (0x1FFFFU)                                          /**< ETM_TRIGGER.TriggerEvent Mask           */
#define ETM_TRIGGER_TriggerEvent_SHIFT           (0U)                                                /**< ETM_TRIGGER.TriggerEvent Position       */
#define ETM_TRIGGER_TriggerEvent(x)              (((uint32_t)(((uint32_t)(x))<<ETM_TRIGGER_TriggerEvent_SHIFT))&ETM_TRIGGER_TriggerEvent_MASK) /**< ETM_TRIGGER.TriggerEvent Field          */
/** @} */

/** @name SR - ETM Status Register */ /** @{ */
#define ETM_SR_UOF_MASK                          (0x1U)                                              /**< ETM_SR.UOF Mask                         */
#define ETM_SR_UOF_SHIFT                         (0U)                                                /**< ETM_SR.UOF Position                     */
#define ETM_SR_UOF(x)                            (((uint32_t)(((uint32_t)(x))<<ETM_SR_UOF_SHIFT))&ETM_SR_UOF_MASK) /**< ETM_SR.UOF Field                        */
#define ETM_SR_Progbit_MASK                      (0x2U)                                              /**< ETM_SR.Progbit Mask                     */
#define ETM_SR_Progbit_SHIFT                     (1U)                                                /**< ETM_SR.Progbit Position                 */
#define ETM_SR_Progbit(x)                        (((uint32_t)(((uint32_t)(x))<<ETM_SR_Progbit_SHIFT))&ETM_SR_Progbit_MASK) /**< ETM_SR.Progbit Field                    */
#define ETM_SR_Status_MASK                       (0x4U)                                              /**< ETM_SR.Status Mask                      */
#define ETM_SR_Status_SHIFT                      (2U)                                                /**< ETM_SR.Status Position                  */
#define ETM_SR_Status(x)                         (((uint32_t)(((uint32_t)(x))<<ETM_SR_Status_SHIFT))&ETM_SR_Status_MASK) /**< ETM_SR.Status Field                     */
#define ETM_SR_Trigger_MASK                      (0x8U)                                              /**< ETM_SR.Trigger Mask                     */
#define ETM_SR_Trigger_SHIFT                     (3U)                                                /**< ETM_SR.Trigger Position                 */
#define ETM_SR_Trigger(x)                        (((uint32_t)(((uint32_t)(x))<<ETM_SR_Trigger_SHIFT))&ETM_SR_Trigger_MASK) /**< ETM_SR.Trigger Field                    */
/** @} */

/** @name SCR - System Configuration Register */ /** @{ */
#define ETM_SCR_MaximumPortSize_MASK             (0x7U)                                              /**< ETM_SCR.MaximumPortSize Mask            */
#define ETM_SCR_MaximumPortSize_SHIFT            (0U)                                                /**< ETM_SCR.MaximumPortSize Position        */
#define ETM_SCR_MaximumPortSize(x)               (((uint32_t)(((uint32_t)(x))<<ETM_SCR_MaximumPortSize_SHIFT))&ETM_SCR_MaximumPortSize_MASK) /**< ETM_SCR.MaximumPortSize Field           */
#define ETM_SCR_FIFOFULLsupported_MASK           (0x100U)                                            /**< ETM_SCR.FIFOFULLsupported Mask          */
#define ETM_SCR_FIFOFULLsupported_SHIFT          (8U)                                                /**< ETM_SCR.FIFOFULLsupported Position      */
#define ETM_SCR_FIFOFULLsupported(x)             (((uint32_t)(((uint32_t)(x))<<ETM_SCR_FIFOFULLsupported_SHIFT))&ETM_SCR_FIFOFULLsupported_MASK) /**< ETM_SCR.FIFOFULLsupported Field         */
#define ETM_SCR_MaximumPortSize3_MASK            (0x200U)                                            /**< ETM_SCR.MaximumPortSize3 Mask           */
#define ETM_SCR_MaximumPortSize3_SHIFT           (9U)                                                /**< ETM_SCR.MaximumPortSize3 Position       */
#define ETM_SCR_MaximumPortSize3(x)              (((uint32_t)(((uint32_t)(x))<<ETM_SCR_MaximumPortSize3_SHIFT))&ETM_SCR_MaximumPortSize3_MASK) /**< ETM_SCR.MaximumPortSize3 Field          */
#define ETM_SCR_PortSizeSupported_MASK           (0x400U)                                            /**< ETM_SCR.PortSizeSupported Mask          */
#define ETM_SCR_PortSizeSupported_SHIFT          (10U)                                               /**< ETM_SCR.PortSizeSupported Position      */
#define ETM_SCR_PortSizeSupported(x)             (((uint32_t)(((uint32_t)(x))<<ETM_SCR_PortSizeSupported_SHIFT))&ETM_SCR_PortSizeSupported_MASK) /**< ETM_SCR.PortSizeSupported Field         */
#define ETM_SCR_PortModeSupported_MASK           (0x800U)                                            /**< ETM_SCR.PortModeSupported Mask          */
#define ETM_SCR_PortModeSupported_SHIFT          (11U)                                               /**< ETM_SCR.PortModeSupported Position      */
#define ETM_SCR_PortModeSupported(x)             (((uint32_t)(((uint32_t)(x))<<ETM_SCR_PortModeSupported_SHIFT))&ETM_SCR_PortModeSupported_MASK) /**< ETM_SCR.PortModeSupported Field         */
#define ETM_SCR_N_MASK                           (0x7000U)                                           /**< ETM_SCR.N Mask                          */
#define ETM_SCR_N_SHIFT                          (12U)                                               /**< ETM_SCR.N Position                      */
#define ETM_SCR_N(x)                             (((uint32_t)(((uint32_t)(x))<<ETM_SCR_N_SHIFT))&ETM_SCR_N_MASK) /**< ETM_SCR.N Field                         */
#define ETM_SCR_NoFetchComparisons_MASK          (0x20000U)                                          /**< ETM_SCR.NoFetchComparisons Mask         */
#define ETM_SCR_NoFetchComparisons_SHIFT         (17U)                                               /**< ETM_SCR.NoFetchComparisons Position     */
#define ETM_SCR_NoFetchComparisons(x)            (((uint32_t)(((uint32_t)(x))<<ETM_SCR_NoFetchComparisons_SHIFT))&ETM_SCR_NoFetchComparisons_MASK) /**< ETM_SCR.NoFetchComparisons Field        */
/** @} */

/** @name EEVR - Trace Enable Event Register */ /** @{ */
#define ETM_EEVR_TraceEnableEvent_MASK           (0x1FFFFU)                                          /**< ETM_EEVR.TraceEnableEvent Mask          */
#define ETM_EEVR_TraceEnableEvent_SHIFT          (0U)                                                /**< ETM_EEVR.TraceEnableEvent Position      */
#define ETM_EEVR_TraceEnableEvent(x)             (((uint32_t)(((uint32_t)(x))<<ETM_EEVR_TraceEnableEvent_SHIFT))&ETM_EEVR_TraceEnableEvent_MASK) /**< ETM_EEVR.TraceEnableEvent Field         */
/** @} */

/** @name TECR1 - Trace Enable Control 1 Register */ /** @{ */
#define ETM_TECR1_TraceControlEnable_MASK        (0x2000000U)                                        /**< ETM_TECR1.TraceControlEnable Mask       */
#define ETM_TECR1_TraceControlEnable_SHIFT       (25U)                                               /**< ETM_TECR1.TraceControlEnable Position   */
#define ETM_TECR1_TraceControlEnable(x)          (((uint32_t)(((uint32_t)(x))<<ETM_TECR1_TraceControlEnable_SHIFT))&ETM_TECR1_TraceControlEnable_MASK) /**< ETM_TECR1.TraceControlEnable Field      */
/** @} */

/** @name FFLR - FIFOFULL Level Register */ /** @{ */
#define ETM_FFLR_FIFOFullLevel_MASK              (0xFFU)                                             /**< ETM_FFLR.FIFOFullLevel Mask             */
#define ETM_FFLR_FIFOFullLevel_SHIFT             (0U)                                                /**< ETM_FFLR.FIFOFullLevel Position         */
#define ETM_FFLR_FIFOFullLevel(x)                (((uint32_t)(((uint32_t)(x))<<ETM_FFLR_FIFOFullLevel_SHIFT))&ETM_FFLR_FIFOFullLevel_MASK) /**< ETM_FFLR.FIFOFullLevel Field            */
/** @} */

/** @name CNTRLDVR1 - Free-running counter reload value */ /** @{ */
#define ETM_CNTRLDVR1_IntitialCount_MASK         (0xFFFFU)                                           /**< ETM_CNTRLDVR1.IntitialCount Mask        */
#define ETM_CNTRLDVR1_IntitialCount_SHIFT        (0U)                                                /**< ETM_CNTRLDVR1.IntitialCount Position    */
#define ETM_CNTRLDVR1_IntitialCount(x)           (((uint32_t)(((uint32_t)(x))<<ETM_CNTRLDVR1_IntitialCount_SHIFT))&ETM_CNTRLDVR1_IntitialCount_MASK) /**< ETM_CNTRLDVR1.IntitialCount Field       */
/** @} */

/** @name SYNCFR - Synchronization Frequency Register */ /** @{ */
#define ETM_SYNCFR_SyncFrequency_MASK            (0xFFFU)                                            /**< ETM_SYNCFR.SyncFrequency Mask           */
#define ETM_SYNCFR_SyncFrequency_SHIFT           (0U)                                                /**< ETM_SYNCFR.SyncFrequency Position       */
#define ETM_SYNCFR_SyncFrequency(x)              (((uint32_t)(((uint32_t)(x))<<ETM_SYNCFR_SyncFrequency_SHIFT))&ETM_SYNCFR_SyncFrequency_MASK) /**< ETM_SYNCFR.SyncFrequency Field          */
/** @} */

/** @name IDR - ID Register */ /** @{ */
#define ETM_IDR_ImplementationRevision_MASK      (0xFU)                                              /**< ETM_IDR.ImplementationRevision Mask     */
#define ETM_IDR_ImplementationRevision_SHIFT     (0U)                                                /**< ETM_IDR.ImplementationRevision Position */
#define ETM_IDR_ImplementationRevision(x)        (((uint32_t)(((uint32_t)(x))<<ETM_IDR_ImplementationRevision_SHIFT))&ETM_IDR_ImplementationRevision_MASK) /**< ETM_IDR.ImplementationRevision Field    */
#define ETM_IDR_MinorETMarchitectureVersion_MASK (0xF0U)                                             /**< ETM_IDR.MinorETMarchitectureVersion Mask*/
#define ETM_IDR_MinorETMarchitectureVersion_SHIFT (4U)                                               /**< ETM_IDR.MinorETMarchitectureVersion Position*/
#define ETM_IDR_MinorETMarchitectureVersion(x)   (((uint32_t)(((uint32_t)(x))<<ETM_IDR_MinorETMarchitectureVersion_SHIFT))&ETM_IDR_MinorETMarchitectureVersion_MASK) /**< ETM_IDR.MinorETMarchitectureVersion Field*/
#define ETM_IDR_MajorETMarchitectureVersion_MASK (0xF00U)                                            /**< ETM_IDR.MajorETMarchitectureVersion Mask*/
#define ETM_IDR_MajorETMarchitectureVersion_SHIFT (8U)                                               /**< ETM_IDR.MajorETMarchitectureVersion Position*/
#define ETM_IDR_MajorETMarchitectureVersion(x)   (((uint32_t)(((uint32_t)(x))<<ETM_IDR_MajorETMarchitectureVersion_SHIFT))&ETM_IDR_MajorETMarchitectureVersion_MASK) /**< ETM_IDR.MajorETMarchitectureVersion Field*/
#define ETM_IDR_ProcessorFamily_MASK             (0xF000U)                                           /**< ETM_IDR.ProcessorFamily Mask            */
#define ETM_IDR_ProcessorFamily_SHIFT            (12U)                                               /**< ETM_IDR.ProcessorFamily Position        */
#define ETM_IDR_ProcessorFamily(x)               (((uint32_t)(((uint32_t)(x))<<ETM_IDR_ProcessorFamily_SHIFT))&ETM_IDR_ProcessorFamily_MASK) /**< ETM_IDR.ProcessorFamily Field           */
#define ETM_IDR_LoadPCfirst_MASK                 (0x10000U)                                          /**< ETM_IDR.LoadPCfirst Mask                */
#define ETM_IDR_LoadPCfirst_SHIFT                (16U)                                               /**< ETM_IDR.LoadPCfirst Position            */
#define ETM_IDR_LoadPCfirst(x)                   (((uint32_t)(((uint32_t)(x))<<ETM_IDR_LoadPCfirst_SHIFT))&ETM_IDR_LoadPCfirst_MASK) /**< ETM_IDR.LoadPCfirst Field               */
#define ETM_IDR_ThumbInstructionTracing_MASK     (0x40000U)                                          /**< ETM_IDR.ThumbInstructionTracing Mask    */
#define ETM_IDR_ThumbInstructionTracing_SHIFT    (18U)                                               /**< ETM_IDR.ThumbInstructionTracing Position*/
#define ETM_IDR_ThumbInstructionTracing(x)       (((uint32_t)(((uint32_t)(x))<<ETM_IDR_ThumbInstructionTracing_SHIFT))&ETM_IDR_ThumbInstructionTracing_MASK) /**< ETM_IDR.ThumbInstructionTracing Field   */
#define ETM_IDR_SecurityExtensionSupport_MASK    (0x80000U)                                          /**< ETM_IDR.SecurityExtensionSupport Mask   */
#define ETM_IDR_SecurityExtensionSupport_SHIFT   (19U)                                               /**< ETM_IDR.SecurityExtensionSupport Position*/
#define ETM_IDR_SecurityExtensionSupport(x)      (((uint32_t)(((uint32_t)(x))<<ETM_IDR_SecurityExtensionSupport_SHIFT))&ETM_IDR_SecurityExtensionSupport_MASK) /**< ETM_IDR.SecurityExtensionSupport Field  */
#define ETM_IDR_BranchPacketEncoding_MASK        (0x100000U)                                         /**< ETM_IDR.BranchPacketEncoding Mask       */
#define ETM_IDR_BranchPacketEncoding_SHIFT       (20U)                                               /**< ETM_IDR.BranchPacketEncoding Position   */
#define ETM_IDR_BranchPacketEncoding(x)          (((uint32_t)(((uint32_t)(x))<<ETM_IDR_BranchPacketEncoding_SHIFT))&ETM_IDR_BranchPacketEncoding_MASK) /**< ETM_IDR.BranchPacketEncoding Field      */
#define ETM_IDR_ImplementorCode_MASK             (0xFF000000U)                                       /**< ETM_IDR.ImplementorCode Mask            */
#define ETM_IDR_ImplementorCode_SHIFT            (24U)                                               /**< ETM_IDR.ImplementorCode Position        */
#define ETM_IDR_ImplementorCode(x)               (((uint32_t)(((uint32_t)(x))<<ETM_IDR_ImplementorCode_SHIFT))&ETM_IDR_ImplementorCode_MASK) /**< ETM_IDR.ImplementorCode Field           */
/** @} */

/** @name CCER - Configuration Code Extension Register */ /** @{ */
#define ETM_CCER_ExtendedExternalInputSelectors_MASK (0x7U)                                          /**< ETM_CCER.ExtendedExternalInputSelectors Mask*/
#define ETM_CCER_ExtendedExternalInputSelectors_SHIFT (0U)                                           /**< ETM_CCER.ExtendedExternalInputSelectors Position*/
#define ETM_CCER_ExtendedExternalInputSelectors(x) (((uint32_t)(((uint32_t)(x))<<ETM_CCER_ExtendedExternalInputSelectors_SHIFT))&ETM_CCER_ExtendedExternalInputSelectors_MASK) /**< ETM_CCER.ExtendedExternalInputSelectors Field*/
#define ETM_CCER_ExtendedExternalInputBus_MASK   (0x7F8U)                                            /**< ETM_CCER.ExtendedExternalInputBus Mask  */
#define ETM_CCER_ExtendedExternalInputBus_SHIFT  (3U)                                                /**< ETM_CCER.ExtendedExternalInputBus Position*/
#define ETM_CCER_ExtendedExternalInputBus(x)     (((uint32_t)(((uint32_t)(x))<<ETM_CCER_ExtendedExternalInputBus_SHIFT))&ETM_CCER_ExtendedExternalInputBus_MASK) /**< ETM_CCER.ExtendedExternalInputBus Field */
#define ETM_CCER_ReadableRegisters_MASK          (0x800U)                                            /**< ETM_CCER.ReadableRegisters Mask         */
#define ETM_CCER_ReadableRegisters_SHIFT         (11U)                                               /**< ETM_CCER.ReadableRegisters Position     */
#define ETM_CCER_ReadableRegisters(x)            (((uint32_t)(((uint32_t)(x))<<ETM_CCER_ReadableRegisters_SHIFT))&ETM_CCER_ReadableRegisters_MASK) /**< ETM_CCER.ReadableRegisters Field        */
#define ETM_CCER_DataAddressComparisons_MASK     (0x1000U)                                           /**< ETM_CCER.DataAddressComparisons Mask    */
#define ETM_CCER_DataAddressComparisons_SHIFT    (12U)                                               /**< ETM_CCER.DataAddressComparisons Position*/
#define ETM_CCER_DataAddressComparisons(x)       (((uint32_t)(((uint32_t)(x))<<ETM_CCER_DataAddressComparisons_SHIFT))&ETM_CCER_DataAddressComparisons_MASK) /**< ETM_CCER.DataAddressComparisons Field   */
#define ETM_CCER_InstrumentationResources_MASK   (0xE000U)                                           /**< ETM_CCER.InstrumentationResources Mask  */
#define ETM_CCER_InstrumentationResources_SHIFT  (13U)                                               /**< ETM_CCER.InstrumentationResources Position*/
#define ETM_CCER_InstrumentationResources(x)     (((uint32_t)(((uint32_t)(x))<<ETM_CCER_InstrumentationResources_SHIFT))&ETM_CCER_InstrumentationResources_MASK) /**< ETM_CCER.InstrumentationResources Field */
#define ETM_CCER_EmbeddedICEwatchpointInputs_MASK (0xF0000U)                                         /**< ETM_CCER.EmbeddedICEwatchpointInputs Mask*/
#define ETM_CCER_EmbeddedICEwatchpointInputs_SHIFT (16U)                                             /**< ETM_CCER.EmbeddedICEwatchpointInputs Position*/
#define ETM_CCER_EmbeddedICEwatchpointInputs(x)  (((uint32_t)(((uint32_t)(x))<<ETM_CCER_EmbeddedICEwatchpointInputs_SHIFT))&ETM_CCER_EmbeddedICEwatchpointInputs_MASK) /**< ETM_CCER.EmbeddedICEwatchpointInputs Field*/
#define ETM_CCER_TraceStartStopBlockUsesEmbeddedICEwatchpointInputs_MASK (0x100000U)                 /**< ETM_CCER.TraceStartStopBlockUsesEmbeddedICEwatchpointInputs Mask*/
#define ETM_CCER_TraceStartStopBlockUsesEmbeddedICEwatchpointInputs_SHIFT (20U)                      /**< ETM_CCER.TraceStartStopBlockUsesEmbeddedICEwatchpointInputs Position*/
#define ETM_CCER_TraceStartStopBlockUsesEmbeddedICEwatchpointInputs(x) (((uint32_t)(((uint32_t)(x))<<ETM_CCER_TraceStartStopBlockUsesEmbeddedICEwatchpointInputs_SHIFT))&ETM_CCER_TraceStartStopBlockUsesEmbeddedICEwatchpointInputs_MASK) /**< ETM_CCER.TraceStartStopBlockUsesEmbeddedICEwatchpointInputs Field*/
#define ETM_CCER_EmbeddedICEbehaviorControlImplemented_MASK (0x200000U)                              /**< ETM_CCER.EmbeddedICEbehaviorControlImplemented Mask*/
#define ETM_CCER_EmbeddedICEbehaviorControlImplemented_SHIFT (21U)                                   /**< ETM_CCER.EmbeddedICEbehaviorControlImplemented Position*/
#define ETM_CCER_EmbeddedICEbehaviorControlImplemented(x) (((uint32_t)(((uint32_t)(x))<<ETM_CCER_EmbeddedICEbehaviorControlImplemented_SHIFT))&ETM_CCER_EmbeddedICEbehaviorControlImplemented_MASK) /**< ETM_CCER.EmbeddedICEbehaviorControlImplemented Field*/
#define ETM_CCER_TimestampingImplemented_MASK    (0x400000U)                                         /**< ETM_CCER.TimestampingImplemented Mask   */
#define ETM_CCER_TimestampingImplemented_SHIFT   (22U)                                               /**< ETM_CCER.TimestampingImplemented Position*/
#define ETM_CCER_TimestampingImplemented(x)      (((uint32_t)(((uint32_t)(x))<<ETM_CCER_TimestampingImplemented_SHIFT))&ETM_CCER_TimestampingImplemented_MASK) /**< ETM_CCER.TimestampingImplemented Field  */
#define ETM_CCER_ReducedFunctionCounter_MASK     (0x8000000U)                                        /**< ETM_CCER.ReducedFunctionCounter Mask    */
#define ETM_CCER_ReducedFunctionCounter_SHIFT    (27U)                                               /**< ETM_CCER.ReducedFunctionCounter Position*/
#define ETM_CCER_ReducedFunctionCounter(x)       (((uint32_t)(((uint32_t)(x))<<ETM_CCER_ReducedFunctionCounter_SHIFT))&ETM_CCER_ReducedFunctionCounter_MASK) /**< ETM_CCER.ReducedFunctionCounter Field   */
#define ETM_CCER_TimestampEncoding_MASK          (0x10000000U)                                       /**< ETM_CCER.TimestampEncoding Mask         */
#define ETM_CCER_TimestampEncoding_SHIFT         (28U)                                               /**< ETM_CCER.TimestampEncoding Position     */
#define ETM_CCER_TimestampEncoding(x)            (((uint32_t)(((uint32_t)(x))<<ETM_CCER_TimestampEncoding_SHIFT))&ETM_CCER_TimestampEncoding_MASK) /**< ETM_CCER.TimestampEncoding Field        */
#define ETM_CCER_TimestampSize_MASK              (0x20000000U)                                       /**< ETM_CCER.TimestampSize Mask             */
#define ETM_CCER_TimestampSize_SHIFT             (29U)                                               /**< ETM_CCER.TimestampSize Position         */
#define ETM_CCER_TimestampSize(x)                (((uint32_t)(((uint32_t)(x))<<ETM_CCER_TimestampSize_SHIFT))&ETM_CCER_TimestampSize_MASK) /**< ETM_CCER.TimestampSize Field            */
/** @} */

/** @name TESSEICR - TraceEnable Start/Stop EmbeddedICE Control Register */ /** @{ */
#define ETM_TESSEICR_StartResourceSelection_MASK (0xFU)                                              /**< ETM_TESSEICR.StartResourceSelection Mask*/
#define ETM_TESSEICR_StartResourceSelection_SHIFT (0U)                                               /**< ETM_TESSEICR.StartResourceSelection Position*/
#define ETM_TESSEICR_StartResourceSelection(x)   (((uint32_t)(((uint32_t)(x))<<ETM_TESSEICR_StartResourceSelection_SHIFT))&ETM_TESSEICR_StartResourceSelection_MASK) /**< ETM_TESSEICR.StartResourceSelection Field*/
#define ETM_TESSEICR_StopResourceSelection_MASK  (0xF0000U)                                          /**< ETM_TESSEICR.StopResourceSelection Mask */
#define ETM_TESSEICR_StopResourceSelection_SHIFT (16U)                                               /**< ETM_TESSEICR.StopResourceSelection Position*/
#define ETM_TESSEICR_StopResourceSelection(x)    (((uint32_t)(((uint32_t)(x))<<ETM_TESSEICR_StopResourceSelection_SHIFT))&ETM_TESSEICR_StopResourceSelection_MASK) /**< ETM_TESSEICR.StopResourceSelection Field*/
/** @} */

/** @name TSEVR - Timestamp Event Register */ /** @{ */
#define ETM_TSEVR_TimestampEvent_MASK            (0xFFFU)                                            /**< ETM_TSEVR.TimestampEvent Mask           */
#define ETM_TSEVR_TimestampEvent_SHIFT           (0U)                                                /**< ETM_TSEVR.TimestampEvent Position       */
#define ETM_TSEVR_TimestampEvent(x)              (((uint32_t)(((uint32_t)(x))<<ETM_TSEVR_TimestampEvent_SHIFT))&ETM_TSEVR_TimestampEvent_MASK) /**< ETM_TSEVR.TimestampEvent Field          */
/** @} */

/** @name TRACEIDR - CoreSight Trace ID Register */ /** @{ */
#define ETM_TRACEIDR_TraceID_MASK                (0x7FU)                                             /**< ETM_TRACEIDR.TraceID Mask               */
#define ETM_TRACEIDR_TraceID_SHIFT               (0U)                                                /**< ETM_TRACEIDR.TraceID Position           */
#define ETM_TRACEIDR_TraceID(x)                  (((uint32_t)(((uint32_t)(x))<<ETM_TRACEIDR_TraceID_SHIFT))&ETM_TRACEIDR_TraceID_MASK) /**< ETM_TRACEIDR.TraceID Field              */
/** @} */

/** @name PDSR - Device Power-Down Status Register */ /** @{ */
#define ETM_PDSR_ETMpoweredup_MASK               (0x1U)                                              /**< ETM_PDSR.ETMpoweredup Mask              */
#define ETM_PDSR_ETMpoweredup_SHIFT              (0U)                                                /**< ETM_PDSR.ETMpoweredup Position          */
#define ETM_PDSR_ETMpoweredup(x)                 (((uint32_t)(((uint32_t)(x))<<ETM_PDSR_ETMpoweredup_SHIFT))&ETM_PDSR_ETMpoweredup_MASK) /**< ETM_PDSR.ETMpoweredup Field             */
/** @} */

/** @name _ITMISCIN - Integration Test Miscelaneous Inputs Register */ /** @{ */
#define ETM__ITMISCIN_EXTIN_MASK                 (0x3U)                                              /**< ETM__ITMISCIN.EXTIN Mask                */
#define ETM__ITMISCIN_EXTIN_SHIFT                (0U)                                                /**< ETM__ITMISCIN.EXTIN Position            */
#define ETM__ITMISCIN_EXTIN(x)                   (((uint32_t)(((uint32_t)(x))<<ETM__ITMISCIN_EXTIN_SHIFT))&ETM__ITMISCIN_EXTIN_MASK) /**< ETM__ITMISCIN.EXTIN Field               */
#define ETM__ITMISCIN_COREHALT_MASK              (0x10U)                                             /**< ETM__ITMISCIN.COREHALT Mask             */
#define ETM__ITMISCIN_COREHALT_SHIFT             (4U)                                                /**< ETM__ITMISCIN.COREHALT Position         */
#define ETM__ITMISCIN_COREHALT(x)                (((uint32_t)(((uint32_t)(x))<<ETM__ITMISCIN_COREHALT_SHIFT))&ETM__ITMISCIN_COREHALT_MASK) /**< ETM__ITMISCIN.COREHALT Field            */
/** @} */

/** @name _ITTRIGOUT - Integration Test Trigger Out Register */ /** @{ */
#define ETM__ITTRIGOUT_TRIGGER_MASK              (0x1U)                                              /**< ETM__ITTRIGOUT.TRIGGER Mask             */
#define ETM__ITTRIGOUT_TRIGGER_SHIFT             (0U)                                                /**< ETM__ITTRIGOUT.TRIGGER Position         */
#define ETM__ITTRIGOUT_TRIGGER(x)                (((uint32_t)(((uint32_t)(x))<<ETM__ITTRIGOUT_TRIGGER_SHIFT))&ETM__ITTRIGOUT_TRIGGER_MASK) /**< ETM__ITTRIGOUT.TRIGGER Field            */
/** @} */

/** @name _ITATBCTR2 - ETM Integration Test ATB Control 2 Register */ /** @{ */
#define ETM__ITATBCTR2_ATREADY_MASK              (0x1U)                                              /**< ETM__ITATBCTR2.ATREADY Mask             */
#define ETM__ITATBCTR2_ATREADY_SHIFT             (0U)                                                /**< ETM__ITATBCTR2.ATREADY Position         */
#define ETM__ITATBCTR2_ATREADY(x)                (((uint32_t)(((uint32_t)(x))<<ETM__ITATBCTR2_ATREADY_SHIFT))&ETM__ITATBCTR2_ATREADY_MASK) /**< ETM__ITATBCTR2.ATREADY Field            */
/** @} */

/** @name _ITATBCTR0 - ETM Integration Test ATB Control 0 Register */ /** @{ */
#define ETM__ITATBCTR0_ATVALID_MASK              (0x1U)                                              /**< ETM__ITATBCTR0.ATVALID Mask             */
#define ETM__ITATBCTR0_ATVALID_SHIFT             (0U)                                                /**< ETM__ITATBCTR0.ATVALID Position         */
#define ETM__ITATBCTR0_ATVALID(x)                (((uint32_t)(((uint32_t)(x))<<ETM__ITATBCTR0_ATVALID_SHIFT))&ETM__ITATBCTR0_ATVALID_MASK) /**< ETM__ITATBCTR0.ATVALID Field            */
/** @} */

/** @name ITCTRL - Integration Mode Control Register */ /** @{ */
#define ETM_ITCTRL_Mode_MASK                     (0x1U)                                              /**< ETM_ITCTRL.Mode Mask                    */
#define ETM_ITCTRL_Mode_SHIFT                    (0U)                                                /**< ETM_ITCTRL.Mode Position                */
#define ETM_ITCTRL_Mode(x)                       (((uint32_t)(((uint32_t)(x))<<ETM_ITCTRL_Mode_SHIFT))&ETM_ITCTRL_Mode_MASK) /**< ETM_ITCTRL.Mode Field                   */
/** @} */

/** @name CLAIMSET - Claim Tag Set Register */ /** @{ */
#define ETM_CLAIMSET_CLAIMSET_MASK               (0xFU)                                              /**< ETM_CLAIMSET.CLAIMSET Mask              */
#define ETM_CLAIMSET_CLAIMSET_SHIFT              (0U)                                                /**< ETM_CLAIMSET.CLAIMSET Position          */
#define ETM_CLAIMSET_CLAIMSET(x)                 (((uint32_t)(((uint32_t)(x))<<ETM_CLAIMSET_CLAIMSET_SHIFT))&ETM_CLAIMSET_CLAIMSET_MASK) /**< ETM_CLAIMSET.CLAIMSET Field             */
/** @} */

/** @name CLAIMCLR - Claim Tag Clear Register */ /** @{ */
#define ETM_CLAIMCLR_CLAIMCLR_MASK               (0xFU)                                              /**< ETM_CLAIMCLR.CLAIMCLR Mask              */
#define ETM_CLAIMCLR_CLAIMCLR_SHIFT              (0U)                                                /**< ETM_CLAIMCLR.CLAIMCLR Position          */
#define ETM_CLAIMCLR_CLAIMCLR(x)                 (((uint32_t)(((uint32_t)(x))<<ETM_CLAIMCLR_CLAIMCLR_SHIFT))&ETM_CLAIMCLR_CLAIMCLR_MASK) /**< ETM_CLAIMCLR.CLAIMCLR Field             */
/** @} */

/** @name LAR - Lock Access Register */ /** @{ */
#define ETM_LAR_WriteAccessCode_MASK             (0xFFFFFFFFU)                                       /**< ETM_LAR.WriteAccessCode Mask            */
#define ETM_LAR_WriteAccessCode_SHIFT            (0U)                                                /**< ETM_LAR.WriteAccessCode Position        */
#define ETM_LAR_WriteAccessCode(x)               (((uint32_t)(((uint32_t)(x))<<ETM_LAR_WriteAccessCode_SHIFT))&ETM_LAR_WriteAccessCode_MASK) /**< ETM_LAR.WriteAccessCode Field           */
/** @} */

/** @name LSR - Lock Status Register */ /** @{ */
#define ETM_LSR_IMP_MASK                         (0x1U)                                              /**< ETM_LSR.IMP Mask                        */
#define ETM_LSR_IMP_SHIFT                        (0U)                                                /**< ETM_LSR.IMP Position                    */
#define ETM_LSR_IMP(x)                           (((uint32_t)(((uint32_t)(x))<<ETM_LSR_IMP_SHIFT))&ETM_LSR_IMP_MASK) /**< ETM_LSR.IMP Field                       */
#define ETM_LSR_STATUS_MASK                      (0x2U)                                              /**< ETM_LSR.STATUS Mask                     */
#define ETM_LSR_STATUS_SHIFT                     (1U)                                                /**< ETM_LSR.STATUS Position                 */
#define ETM_LSR_STATUS(x)                        (((uint32_t)(((uint32_t)(x))<<ETM_LSR_STATUS_SHIFT))&ETM_LSR_STATUS_MASK) /**< ETM_LSR.STATUS Field                    */
#define ETM_LSR_s8BIT_MASK                       (0x4U)                                              /**< ETM_LSR.s8BIT Mask                      */
#define ETM_LSR_s8BIT_SHIFT                      (2U)                                                /**< ETM_LSR.s8BIT Position                  */
#define ETM_LSR_s8BIT(x)                         (((uint32_t)(((uint32_t)(x))<<ETM_LSR_s8BIT_SHIFT))&ETM_LSR_s8BIT_MASK) /**< ETM_LSR.s8BIT Field                     */
/** @} */

/** @name AUTHSTATUS - Authentication Status Register */ /** @{ */
#define ETM_AUTHSTATUS_NSID_MASK                 (0x3U)                                              /**< ETM_AUTHSTATUS.NSID Mask                */
#define ETM_AUTHSTATUS_NSID_SHIFT                (0U)                                                /**< ETM_AUTHSTATUS.NSID Position            */
#define ETM_AUTHSTATUS_NSID(x)                   (((uint32_t)(((uint32_t)(x))<<ETM_AUTHSTATUS_NSID_SHIFT))&ETM_AUTHSTATUS_NSID_MASK) /**< ETM_AUTHSTATUS.NSID Field               */
#define ETM_AUTHSTATUS_NSNID_MASK                (0xCU)                                              /**< ETM_AUTHSTATUS.NSNID Mask               */
#define ETM_AUTHSTATUS_NSNID_SHIFT               (2U)                                                /**< ETM_AUTHSTATUS.NSNID Position           */
#define ETM_AUTHSTATUS_NSNID(x)                  (((uint32_t)(((uint32_t)(x))<<ETM_AUTHSTATUS_NSNID_SHIFT))&ETM_AUTHSTATUS_NSNID_MASK) /**< ETM_AUTHSTATUS.NSNID Field              */
#define ETM_AUTHSTATUS_SID_MASK                  (0x30U)                                             /**< ETM_AUTHSTATUS.SID Mask                 */
#define ETM_AUTHSTATUS_SID_SHIFT                 (4U)                                                /**< ETM_AUTHSTATUS.SID Position             */
#define ETM_AUTHSTATUS_SID(x)                    (((uint32_t)(((uint32_t)(x))<<ETM_AUTHSTATUS_SID_SHIFT))&ETM_AUTHSTATUS_SID_MASK) /**< ETM_AUTHSTATUS.SID Field                */
#define ETM_AUTHSTATUS_SNID_MASK                 (0xC0U)                                             /**< ETM_AUTHSTATUS.SNID Mask                */
#define ETM_AUTHSTATUS_SNID_SHIFT                (6U)                                                /**< ETM_AUTHSTATUS.SNID Position            */
#define ETM_AUTHSTATUS_SNID(x)                   (((uint32_t)(((uint32_t)(x))<<ETM_AUTHSTATUS_SNID_SHIFT))&ETM_AUTHSTATUS_SNID_MASK) /**< ETM_AUTHSTATUS.SNID Field               */
/** @} */

/** @name DEVTYPE - CoreSight Device Type Register */ /** @{ */
#define ETM_DEVTYPE_MajorType_MASK               (0xFU)                                              /**< ETM_DEVTYPE.MajorType Mask              */
#define ETM_DEVTYPE_MajorType_SHIFT              (0U)                                                /**< ETM_DEVTYPE.MajorType Position          */
#define ETM_DEVTYPE_MajorType(x)                 (((uint32_t)(((uint32_t)(x))<<ETM_DEVTYPE_MajorType_SHIFT))&ETM_DEVTYPE_MajorType_MASK) /**< ETM_DEVTYPE.MajorType Field             */
#define ETM_DEVTYPE_SubType_MASK                 (0xF0U)                                             /**< ETM_DEVTYPE.SubType Mask                */
#define ETM_DEVTYPE_SubType_SHIFT                (4U)                                                /**< ETM_DEVTYPE.SubType Position            */
#define ETM_DEVTYPE_SubType(x)                   (((uint32_t)(((uint32_t)(x))<<ETM_DEVTYPE_SubType_SHIFT))&ETM_DEVTYPE_SubType_MASK) /**< ETM_DEVTYPE.SubType Field               */
/** @} */

/** @name PIDR4 - Peripheral Identification Register 4 */ /** @{ */
#define ETM_PIDR4_JEP106_MASK                    (0xFU)                                              /**< ETM_PIDR4.JEP106 Mask                   */
#define ETM_PIDR4_JEP106_SHIFT                   (0U)                                                /**< ETM_PIDR4.JEP106 Position               */
#define ETM_PIDR4_JEP106(x)                      (((uint32_t)(((uint32_t)(x))<<ETM_PIDR4_JEP106_SHIFT))&ETM_PIDR4_JEP106_MASK) /**< ETM_PIDR4.JEP106 Field                  */
#define ETM_PIDR4_c4KB_MASK                      (0xF0U)                                             /**< ETM_PIDR4.c4KB Mask                     */
#define ETM_PIDR4_c4KB_SHIFT                     (4U)                                                /**< ETM_PIDR4.c4KB Position                 */
#define ETM_PIDR4_c4KB(x)                        (((uint32_t)(((uint32_t)(x))<<ETM_PIDR4_c4KB_SHIFT))&ETM_PIDR4_c4KB_MASK) /**< ETM_PIDR4.c4KB Field                    */
/** @} */

/** @name PIDR0 - Peripheral Identification Register 0 */ /** @{ */
#define ETM_PIDR0_PartNumber_MASK                (0xFFU)                                             /**< ETM_PIDR0.PartNumber Mask               */
#define ETM_PIDR0_PartNumber_SHIFT               (0U)                                                /**< ETM_PIDR0.PartNumber Position           */
#define ETM_PIDR0_PartNumber(x)                  (((uint32_t)(((uint32_t)(x))<<ETM_PIDR0_PartNumber_SHIFT))&ETM_PIDR0_PartNumber_MASK) /**< ETM_PIDR0.PartNumber Field              */
/** @} */

/** @name PIDR1 - Peripheral Identification Register 1 */ /** @{ */
#define ETM_PIDR1_PartNumber_MASK                (0xFU)                                              /**< ETM_PIDR1.PartNumber Mask               */
#define ETM_PIDR1_PartNumber_SHIFT               (0U)                                                /**< ETM_PIDR1.PartNumber Position           */
#define ETM_PIDR1_PartNumber(x)                  (((uint32_t)(((uint32_t)(x))<<ETM_PIDR1_PartNumber_SHIFT))&ETM_PIDR1_PartNumber_MASK) /**< ETM_PIDR1.PartNumber Field              */
#define ETM_PIDR1_JEP106_identity_code_MASK      (0xF0U)                                             /**< ETM_PIDR1.JEP106_identity_code Mask     */
#define ETM_PIDR1_JEP106_identity_code_SHIFT     (4U)                                                /**< ETM_PIDR1.JEP106_identity_code Position */
#define ETM_PIDR1_JEP106_identity_code(x)        (((uint32_t)(((uint32_t)(x))<<ETM_PIDR1_JEP106_identity_code_SHIFT))&ETM_PIDR1_JEP106_identity_code_MASK) /**< ETM_PIDR1.JEP106_identity_code Field    */
/** @} */

/** @name PIDR2 - Peripheral Identification Register 2 */ /** @{ */
#define ETM_PIDR2_JEP106_identity_code_MASK      (0x7U)                                              /**< ETM_PIDR2.JEP106_identity_code Mask     */
#define ETM_PIDR2_JEP106_identity_code_SHIFT     (0U)                                                /**< ETM_PIDR2.JEP106_identity_code Position */
#define ETM_PIDR2_JEP106_identity_code(x)        (((uint32_t)(((uint32_t)(x))<<ETM_PIDR2_JEP106_identity_code_SHIFT))&ETM_PIDR2_JEP106_identity_code_MASK) /**< ETM_PIDR2.JEP106_identity_code Field    */
#define ETM_PIDR2_Revision_MASK                  (0xF0U)                                             /**< ETM_PIDR2.Revision Mask                 */
#define ETM_PIDR2_Revision_SHIFT                 (4U)                                                /**< ETM_PIDR2.Revision Position             */
#define ETM_PIDR2_Revision(x)                    (((uint32_t)(((uint32_t)(x))<<ETM_PIDR2_Revision_SHIFT))&ETM_PIDR2_Revision_MASK) /**< ETM_PIDR2.Revision Field                */
/** @} */

/** @name PIDR3 - Peripheral Identification Register 3 */ /** @{ */
#define ETM_PIDR3_CustomerModified_MASK          (0xFU)                                              /**< ETM_PIDR3.CustomerModified Mask         */
#define ETM_PIDR3_CustomerModified_SHIFT         (0U)                                                /**< ETM_PIDR3.CustomerModified Position     */
#define ETM_PIDR3_CustomerModified(x)            (((uint32_t)(((uint32_t)(x))<<ETM_PIDR3_CustomerModified_SHIFT))&ETM_PIDR3_CustomerModified_MASK) /**< ETM_PIDR3.CustomerModified Field        */
#define ETM_PIDR3_RevAnd_MASK                    (0xF0U)                                             /**< ETM_PIDR3.RevAnd Mask                   */
#define ETM_PIDR3_RevAnd_SHIFT                   (4U)                                                /**< ETM_PIDR3.RevAnd Position               */
#define ETM_PIDR3_RevAnd(x)                      (((uint32_t)(((uint32_t)(x))<<ETM_PIDR3_RevAnd_SHIFT))&ETM_PIDR3_RevAnd_MASK) /**< ETM_PIDR3.RevAnd Field                  */
/** @} */

/** @name CIDR0 - Component Identification Register 0 */ /** @{ */
#define ETM_CIDR0_Preamble_MASK                  (0xFFU)                                             /**< ETM_CIDR0.Preamble Mask                 */
#define ETM_CIDR0_Preamble_SHIFT                 (0U)                                                /**< ETM_CIDR0.Preamble Position             */
#define ETM_CIDR0_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETM_CIDR0_Preamble_SHIFT))&ETM_CIDR0_Preamble_MASK) /**< ETM_CIDR0.Preamble Field                */
/** @} */

/** @name CIDR1 - Component Identification Register 1 */ /** @{ */
#define ETM_CIDR1_Preamble_MASK                  (0xFU)                                              /**< ETM_CIDR1.Preamble Mask                 */
#define ETM_CIDR1_Preamble_SHIFT                 (0U)                                                /**< ETM_CIDR1.Preamble Position             */
#define ETM_CIDR1_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETM_CIDR1_Preamble_SHIFT))&ETM_CIDR1_Preamble_MASK) /**< ETM_CIDR1.Preamble Field                */
#define ETM_CIDR1_ComponentClass_MASK            (0xF0U)                                             /**< ETM_CIDR1.ComponentClass Mask           */
#define ETM_CIDR1_ComponentClass_SHIFT           (4U)                                                /**< ETM_CIDR1.ComponentClass Position       */
#define ETM_CIDR1_ComponentClass(x)              (((uint32_t)(((uint32_t)(x))<<ETM_CIDR1_ComponentClass_SHIFT))&ETM_CIDR1_ComponentClass_MASK) /**< ETM_CIDR1.ComponentClass Field          */
/** @} */

/** @name CIDR2 - Component Identification Register 2 */ /** @{ */
#define ETM_CIDR2_Preamble_MASK                  (0xFFU)                                             /**< ETM_CIDR2.Preamble Mask                 */
#define ETM_CIDR2_Preamble_SHIFT                 (0U)                                                /**< ETM_CIDR2.Preamble Position             */
#define ETM_CIDR2_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETM_CIDR2_Preamble_SHIFT))&ETM_CIDR2_Preamble_MASK) /**< ETM_CIDR2.Preamble Field                */
/** @} */

/** @name CIDR3 - Component Identification Register 3 */ /** @{ */
#define ETM_CIDR3_Preamble_MASK                  (0xFFU)                                             /**< ETM_CIDR3.Preamble Mask                 */
#define ETM_CIDR3_Preamble_SHIFT                 (0U)                                                /**< ETM_CIDR3.Preamble Position             */
#define ETM_CIDR3_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<ETM_CIDR3_Preamble_SHIFT))&ETM_CIDR3_Preamble_MASK) /**< ETM_CIDR3.Preamble Field                */
/** @} */

/** @} */ /* End group ETM_Register_Masks_GROUP */


/* ETM - Peripheral instance base addresses */
#define ETM_BasePtr                    0xE0041000UL //!< Peripheral base address
#define ETM                            ((ETM_Type *) ETM_BasePtr) //!< Freescale base pointer
#define ETM_BASE_PTR                   (ETM) //!< Freescale style base pointer

/** @} */ /* End group ETM_Peripheral_access_layer_GROUP */


/** @brief C Struct for EWM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup EWM_Peripheral_access_layer_GROUP EWM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           EWM (file:EWM_INT_PR)                ================ */
/* ================================================================================ */

/**
 * @brief External Watchdog Monitor
 */
/**
 * @struct EWM_Type
 * @brief  C Struct allowing access to EWM registers
 */
typedef struct EWM_Type {
   __IO uint8_t   CTRL;                         /**< 0000: Control Register                                             */
   __O  uint8_t   SERV;                         /**< 0001: Service Register                                             */
   __IO uint8_t   CMPL;                         /**< 0002: Compare Low Register                                         */
   __IO uint8_t   CMPH;                         /**< 0003: Compare High Register                                        */
        uint8_t   RESERVED_0;                   /**< 0004: 0x1 bytes                                                    */
   __IO uint8_t   CLKPRESCALER;                 /**< 0005: Clock Prescaler Register                                     */
} EWM_Type;


/** @brief Register Masks for EWM */

/* -------------------------------------------------------------------------------- */
/* -----------     'EWM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup EWM_Register_Masks_GROUP EWM Register Masks */
/** @{ */

/** @name CTRL - Control Register */ /** @{ */
#define EWM_CTRL_EWMEN_MASK                      (0x1U)                                              /**< EWM_CTRL.EWMEN Mask                     */
#define EWM_CTRL_EWMEN_SHIFT                     (0U)                                                /**< EWM_CTRL.EWMEN Position                 */
#define EWM_CTRL_EWMEN(x)                        (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_EWMEN_SHIFT))&EWM_CTRL_EWMEN_MASK) /**< EWM_CTRL.EWMEN Field                    */
#define EWM_CTRL_ASSIN_MASK                      (0x2U)                                              /**< EWM_CTRL.ASSIN Mask                     */
#define EWM_CTRL_ASSIN_SHIFT                     (1U)                                                /**< EWM_CTRL.ASSIN Position                 */
#define EWM_CTRL_ASSIN(x)                        (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_ASSIN_SHIFT))&EWM_CTRL_ASSIN_MASK) /**< EWM_CTRL.ASSIN Field                    */
#define EWM_CTRL_INEN_MASK                       (0x4U)                                              /**< EWM_CTRL.INEN Mask                      */
#define EWM_CTRL_INEN_SHIFT                      (2U)                                                /**< EWM_CTRL.INEN Position                  */
#define EWM_CTRL_INEN(x)                         (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_INEN_SHIFT))&EWM_CTRL_INEN_MASK) /**< EWM_CTRL.INEN Field                     */
#define EWM_CTRL_INTEN_MASK                      (0x8U)                                              /**< EWM_CTRL.INTEN Mask                     */
#define EWM_CTRL_INTEN_SHIFT                     (3U)                                                /**< EWM_CTRL.INTEN Position                 */
#define EWM_CTRL_INTEN(x)                        (((uint8_t)(((uint8_t)(x))<<EWM_CTRL_INTEN_SHIFT))&EWM_CTRL_INTEN_MASK) /**< EWM_CTRL.INTEN Field                    */
/** @} */

/** @name SERV - Service Register */ /** @{ */
#define EWM_SERV_SERVICE_MASK                    (0xFFU)                                             /**< EWM_SERV.SERVICE Mask                   */
#define EWM_SERV_SERVICE_SHIFT                   (0U)                                                /**< EWM_SERV.SERVICE Position               */
#define EWM_SERV_SERVICE(x)                      (((uint8_t)(((uint8_t)(x))<<EWM_SERV_SERVICE_SHIFT))&EWM_SERV_SERVICE_MASK) /**< EWM_SERV.SERVICE Field                  */
/** @} */

/** @name CMPL - Compare Low Register */ /** @{ */
#define EWM_CMPL_COMPAREL_MASK                   (0xFFU)                                             /**< EWM_CMPL.COMPAREL Mask                  */
#define EWM_CMPL_COMPAREL_SHIFT                  (0U)                                                /**< EWM_CMPL.COMPAREL Position              */
#define EWM_CMPL_COMPAREL(x)                     (((uint8_t)(((uint8_t)(x))<<EWM_CMPL_COMPAREL_SHIFT))&EWM_CMPL_COMPAREL_MASK) /**< EWM_CMPL.COMPAREL Field                 */
/** @} */

/** @name CMPH - Compare High Register */ /** @{ */
#define EWM_CMPH_COMPAREH_MASK                   (0xFFU)                                             /**< EWM_CMPH.COMPAREH Mask                  */
#define EWM_CMPH_COMPAREH_SHIFT                  (0U)                                                /**< EWM_CMPH.COMPAREH Position              */
#define EWM_CMPH_COMPAREH(x)                     (((uint8_t)(((uint8_t)(x))<<EWM_CMPH_COMPAREH_SHIFT))&EWM_CMPH_COMPAREH_MASK) /**< EWM_CMPH.COMPAREH Field                 */
/** @} */

/** @name CLKPRESCALER - Clock Prescaler Register */ /** @{ */
#define EWM_CLKPRESCALER_CLK_DIV_MASK            (0xFFU)                                             /**< EWM_CLKPRESCALER.CLK_DIV Mask           */
#define EWM_CLKPRESCALER_CLK_DIV_SHIFT           (0U)                                                /**< EWM_CLKPRESCALER.CLK_DIV Position       */
#define EWM_CLKPRESCALER_CLK_DIV(x)              (((uint8_t)(((uint8_t)(x))<<EWM_CLKPRESCALER_CLK_DIV_SHIFT))&EWM_CLKPRESCALER_CLK_DIV_MASK) /**< EWM_CLKPRESCALER.CLK_DIV Field          */
/** @} */

/** @} */ /* End group EWM_Register_Masks_GROUP */


/* EWM - Peripheral instance base addresses */
#define EWM_BasePtr                    0x40061000UL //!< Peripheral base address
#define EWM                            ((EWM_Type *) EWM_BasePtr) //!< Freescale base pointer
#define EWM_BASE_PTR                   (EWM) //!< Freescale style base pointer
#define EWM_IRQS { WDOG_IRQn,  }


/** @} */ /* End group EWM_Peripheral_access_layer_GROUP */


/** @brief C Struct for FLEXBUS */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FLEXBUS_Peripheral_access_layer_GROUP FLEXBUS Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FLEXBUS (file:FLEXBUS)               ================ */
/* ================================================================================ */

/**
 * @brief FlexBus external bus interface
 */
#define FLEXBUS_MEMORY_REGIONS_COUNT 6  /**< Number of Select Regions                           */
/**
 * @struct FLEXBUS_Type
 * @brief  C Struct allowing access to FLEXBUS registers
 */
typedef struct FLEXBUS_Type {
   struct {
      __IO uint32_t  CSAR;                      /**< 0000: Chip Select Address Register                                 */
      __IO uint32_t  CSMR;                      /**< 0004: Chip Select Mask Register                                    */
      __IO uint32_t  CSCR;                      /**< 0008: Chip Select Control Register                                 */
   } CS[FLEXBUS_MEMORY_REGIONS_COUNT];          /**< 0000: (cluster: size=0x0048, 72)                                   */
        uint8_t   RESERVED_1[24];               /**< 0048: 0x18 bytes                                                   */
   __IO uint32_t  CSPMCR;                       /**< 0060: Chip Select port Multiplexing Control Register               */
} FLEXBUS_Type;


/** @brief Register Masks for FLEXBUS */

/* -------------------------------------------------------------------------------- */
/* -----------     'FLEXBUS' Position & Mask macros                     ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup FLEXBUS_Register_Masks_GROUP FLEXBUS Register Masks */
/** @{ */

/** @name CSAR - Chip Select Address Register */ /** @{ */
#define FLEXBUS_CSAR_BA_MASK                     (0xFFFF0000U)                                       /**< FLEXBUS_CSAR.BA Mask                    */
#define FLEXBUS_CSAR_BA_SHIFT                    (16U)                                               /**< FLEXBUS_CSAR.BA Position                */
#define FLEXBUS_CSAR_BA(x)                       (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSAR_BA_SHIFT))&FLEXBUS_CSAR_BA_MASK) /**< FLEXBUS_CSAR.BA Field                   */
/** @} */

/** @name CSMR - Chip Select Mask Register */ /** @{ */
#define FLEXBUS_CSMR_V_MASK                      (0x1U)                                              /**< FLEXBUS_CSMR.V Mask                     */
#define FLEXBUS_CSMR_V_SHIFT                     (0U)                                                /**< FLEXBUS_CSMR.V Position                 */
#define FLEXBUS_CSMR_V(x)                        (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSMR_V_SHIFT))&FLEXBUS_CSMR_V_MASK) /**< FLEXBUS_CSMR.V Field                    */
#define FLEXBUS_CSMR_WP_MASK                     (0x100U)                                            /**< FLEXBUS_CSMR.WP Mask                    */
#define FLEXBUS_CSMR_WP_SHIFT                    (8U)                                                /**< FLEXBUS_CSMR.WP Position                */
#define FLEXBUS_CSMR_WP(x)                       (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSMR_WP_SHIFT))&FLEXBUS_CSMR_WP_MASK) /**< FLEXBUS_CSMR.WP Field                   */
#define FLEXBUS_CSMR_BAM_MASK                    (0xFFFF0000U)                                       /**< FLEXBUS_CSMR.BAM Mask                   */
#define FLEXBUS_CSMR_BAM_SHIFT                   (16U)                                               /**< FLEXBUS_CSMR.BAM Position               */
#define FLEXBUS_CSMR_BAM(x)                      (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSMR_BAM_SHIFT))&FLEXBUS_CSMR_BAM_MASK) /**< FLEXBUS_CSMR.BAM Field                  */
/** @} */

/** @name CSCR - Chip Select Control Register */ /** @{ */
#define FLEXBUS_CSCR_BSTW_MASK                   (0x8U)                                              /**< FLEXBUS_CSCR.BSTW Mask                  */
#define FLEXBUS_CSCR_BSTW_SHIFT                  (3U)                                                /**< FLEXBUS_CSCR.BSTW Position              */
#define FLEXBUS_CSCR_BSTW(x)                     (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_BSTW_SHIFT))&FLEXBUS_CSCR_BSTW_MASK) /**< FLEXBUS_CSCR.BSTW Field                 */
#define FLEXBUS_CSCR_BSTR_MASK                   (0x10U)                                             /**< FLEXBUS_CSCR.BSTR Mask                  */
#define FLEXBUS_CSCR_BSTR_SHIFT                  (4U)                                                /**< FLEXBUS_CSCR.BSTR Position              */
#define FLEXBUS_CSCR_BSTR(x)                     (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_BSTR_SHIFT))&FLEXBUS_CSCR_BSTR_MASK) /**< FLEXBUS_CSCR.BSTR Field                 */
#define FLEXBUS_CSCR_BEM_MASK                    (0x20U)                                             /**< FLEXBUS_CSCR.BEM Mask                   */
#define FLEXBUS_CSCR_BEM_SHIFT                   (5U)                                                /**< FLEXBUS_CSCR.BEM Position               */
#define FLEXBUS_CSCR_BEM(x)                      (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_BEM_SHIFT))&FLEXBUS_CSCR_BEM_MASK) /**< FLEXBUS_CSCR.BEM Field                  */
#define FLEXBUS_CSCR_PS_MASK                     (0xC0U)                                             /**< FLEXBUS_CSCR.PS Mask                    */
#define FLEXBUS_CSCR_PS_SHIFT                    (6U)                                                /**< FLEXBUS_CSCR.PS Position                */
#define FLEXBUS_CSCR_PS(x)                       (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_PS_SHIFT))&FLEXBUS_CSCR_PS_MASK) /**< FLEXBUS_CSCR.PS Field                   */
#define FLEXBUS_CSCR_AA_MASK                     (0x100U)                                            /**< FLEXBUS_CSCR.AA Mask                    */
#define FLEXBUS_CSCR_AA_SHIFT                    (8U)                                                /**< FLEXBUS_CSCR.AA Position                */
#define FLEXBUS_CSCR_AA(x)                       (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_AA_SHIFT))&FLEXBUS_CSCR_AA_MASK) /**< FLEXBUS_CSCR.AA Field                   */
#define FLEXBUS_CSCR_BLS_MASK                    (0x200U)                                            /**< FLEXBUS_CSCR.BLS Mask                   */
#define FLEXBUS_CSCR_BLS_SHIFT                   (9U)                                                /**< FLEXBUS_CSCR.BLS Position               */
#define FLEXBUS_CSCR_BLS(x)                      (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_BLS_SHIFT))&FLEXBUS_CSCR_BLS_MASK) /**< FLEXBUS_CSCR.BLS Field                  */
#define FLEXBUS_CSCR_WS_MASK                     (0xFC00U)                                           /**< FLEXBUS_CSCR.WS Mask                    */
#define FLEXBUS_CSCR_WS_SHIFT                    (10U)                                               /**< FLEXBUS_CSCR.WS Position                */
#define FLEXBUS_CSCR_WS(x)                       (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_WS_SHIFT))&FLEXBUS_CSCR_WS_MASK) /**< FLEXBUS_CSCR.WS Field                   */
#define FLEXBUS_CSCR_WRAH_MASK                   (0x30000U)                                          /**< FLEXBUS_CSCR.WRAH Mask                  */
#define FLEXBUS_CSCR_WRAH_SHIFT                  (16U)                                               /**< FLEXBUS_CSCR.WRAH Position              */
#define FLEXBUS_CSCR_WRAH(x)                     (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_WRAH_SHIFT))&FLEXBUS_CSCR_WRAH_MASK) /**< FLEXBUS_CSCR.WRAH Field                 */
#define FLEXBUS_CSCR_RDAH_MASK                   (0xC0000U)                                          /**< FLEXBUS_CSCR.RDAH Mask                  */
#define FLEXBUS_CSCR_RDAH_SHIFT                  (18U)                                               /**< FLEXBUS_CSCR.RDAH Position              */
#define FLEXBUS_CSCR_RDAH(x)                     (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_RDAH_SHIFT))&FLEXBUS_CSCR_RDAH_MASK) /**< FLEXBUS_CSCR.RDAH Field                 */
#define FLEXBUS_CSCR_ASET_MASK                   (0x300000U)                                         /**< FLEXBUS_CSCR.ASET Mask                  */
#define FLEXBUS_CSCR_ASET_SHIFT                  (20U)                                               /**< FLEXBUS_CSCR.ASET Position              */
#define FLEXBUS_CSCR_ASET(x)                     (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_ASET_SHIFT))&FLEXBUS_CSCR_ASET_MASK) /**< FLEXBUS_CSCR.ASET Field                 */
#define FLEXBUS_CSCR_EXTS_MASK                   (0x400000U)                                         /**< FLEXBUS_CSCR.EXTS Mask                  */
#define FLEXBUS_CSCR_EXTS_SHIFT                  (22U)                                               /**< FLEXBUS_CSCR.EXTS Position              */
#define FLEXBUS_CSCR_EXTS(x)                     (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_EXTS_SHIFT))&FLEXBUS_CSCR_EXTS_MASK) /**< FLEXBUS_CSCR.EXTS Field                 */
#define FLEXBUS_CSCR_SWSEN_MASK                  (0x800000U)                                         /**< FLEXBUS_CSCR.SWSEN Mask                 */
#define FLEXBUS_CSCR_SWSEN_SHIFT                 (23U)                                               /**< FLEXBUS_CSCR.SWSEN Position             */
#define FLEXBUS_CSCR_SWSEN(x)                    (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_SWSEN_SHIFT))&FLEXBUS_CSCR_SWSEN_MASK) /**< FLEXBUS_CSCR.SWSEN Field                */
#define FLEXBUS_CSCR_SWS_MASK                    (0xFC000000U)                                       /**< FLEXBUS_CSCR.SWS Mask                   */
#define FLEXBUS_CSCR_SWS_SHIFT                   (26U)                                               /**< FLEXBUS_CSCR.SWS Position               */
#define FLEXBUS_CSCR_SWS(x)                      (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSCR_SWS_SHIFT))&FLEXBUS_CSCR_SWS_MASK) /**< FLEXBUS_CSCR.SWS Field                  */
/** @} */

/** @name CSPMCR - Chip Select port Multiplexing Control Register */ /** @{ */
#define FLEXBUS_CSPMCR_GROUP5_MASK               (0xF000U)                                           /**< FLEXBUS_CSPMCR.GROUP5 Mask              */
#define FLEXBUS_CSPMCR_GROUP5_SHIFT              (12U)                                               /**< FLEXBUS_CSPMCR.GROUP5 Position          */
#define FLEXBUS_CSPMCR_GROUP5(x)                 (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSPMCR_GROUP5_SHIFT))&FLEXBUS_CSPMCR_GROUP5_MASK) /**< FLEXBUS_CSPMCR.GROUP5 Field             */
#define FLEXBUS_CSPMCR_GROUP4_MASK               (0xF0000U)                                          /**< FLEXBUS_CSPMCR.GROUP4 Mask              */
#define FLEXBUS_CSPMCR_GROUP4_SHIFT              (16U)                                               /**< FLEXBUS_CSPMCR.GROUP4 Position          */
#define FLEXBUS_CSPMCR_GROUP4(x)                 (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSPMCR_GROUP4_SHIFT))&FLEXBUS_CSPMCR_GROUP4_MASK) /**< FLEXBUS_CSPMCR.GROUP4 Field             */
#define FLEXBUS_CSPMCR_GROUP3_MASK               (0xF00000U)                                         /**< FLEXBUS_CSPMCR.GROUP3 Mask              */
#define FLEXBUS_CSPMCR_GROUP3_SHIFT              (20U)                                               /**< FLEXBUS_CSPMCR.GROUP3 Position          */
#define FLEXBUS_CSPMCR_GROUP3(x)                 (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSPMCR_GROUP3_SHIFT))&FLEXBUS_CSPMCR_GROUP3_MASK) /**< FLEXBUS_CSPMCR.GROUP3 Field             */
#define FLEXBUS_CSPMCR_GROUP2_MASK               (0xF000000U)                                        /**< FLEXBUS_CSPMCR.GROUP2 Mask              */
#define FLEXBUS_CSPMCR_GROUP2_SHIFT              (24U)                                               /**< FLEXBUS_CSPMCR.GROUP2 Position          */
#define FLEXBUS_CSPMCR_GROUP2(x)                 (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSPMCR_GROUP2_SHIFT))&FLEXBUS_CSPMCR_GROUP2_MASK) /**< FLEXBUS_CSPMCR.GROUP2 Field             */
#define FLEXBUS_CSPMCR_GROUP1_MASK               (0xF0000000U)                                       /**< FLEXBUS_CSPMCR.GROUP1 Mask              */
#define FLEXBUS_CSPMCR_GROUP1_SHIFT              (28U)                                               /**< FLEXBUS_CSPMCR.GROUP1 Position          */
#define FLEXBUS_CSPMCR_GROUP1(x)                 (((uint32_t)(((uint32_t)(x))<<FLEXBUS_CSPMCR_GROUP1_SHIFT))&FLEXBUS_CSPMCR_GROUP1_MASK) /**< FLEXBUS_CSPMCR.GROUP1 Field             */
/** @} */

/** @} */ /* End group FLEXBUS_Register_Masks_GROUP */


/* FLEXBUS - Peripheral instance base addresses */
#define FLEXBUS_BasePtr                0x4000C000UL //!< Peripheral base address
#define FLEXBUS                        ((FLEXBUS_Type *) FLEXBUS_BasePtr) //!< Freescale base pointer
#define FLEXBUS_BASE_PTR               (FLEXBUS) //!< Freescale style base pointer

/** @} */ /* End group FLEXBUS_Peripheral_access_layer_GROUP */


/** @brief C Struct for FMC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FMC_Peripheral_access_layer_GROUP FMC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FMC (file:FMC_MK10D7)                ================ */
/* ================================================================================ */

/**
 * @brief Flash Memory Controller
 */
/**
 * @struct FMC_Type
 * @brief  C Struct allowing access to FMC registers
 */
typedef struct FMC_Type {
   __IO uint32_t  PFAPR;                        /**< 0000: Flash Access Protection Register                             */
   __IO uint32_t  PFB0CR;                       /**< 0004: Flash Bank 0 Control Register                                */
   __IO uint32_t  PFB1CR;                       /**< 0008: Flash Bank 1 Control Register                                */
        uint8_t   RESERVED_0[244];              /**< 000C: 0xF4 bytes                                                   */
   struct {
      __IO uint32_t  S0;                        /**< 0100: Cache Tag Storage                                            */
      __IO uint32_t  S1;                        /**< 0104: Cache Tag Storage                                            */
      __IO uint32_t  S2;                        /**< 0108: Cache Tag Storage                                            */
      __IO uint32_t  S3;                        /**< 010C: Cache Tag Storage                                            */
      __IO uint32_t  S4;                        /**< 0110: Cache Tag Storage                                            */
      __IO uint32_t  S5;                        /**< 0114: Cache Tag Storage                                            */
      __IO uint32_t  S6;                        /**< 0118: Cache Tag Storage                                            */
      __IO uint32_t  S7;                        /**< 011C: Cache Tag Storage                                            */
   } TAGVDW[4];                                 /**< 0100: (cluster: size=0x0080, 128)                                  */
        uint8_t   RESERVED_2[128];              /**< 0180: 0x80 bytes                                                   */
   struct {
      __IO uint32_t  S0U;                       /**< 0200: Cache Data Storage (upper word)                              */
      __IO uint32_t  S0L;                       /**< 0204: Cache Data Storage (lower word)                              */
      __IO uint32_t  S1U;                       /**< 0208: Cache Data Storage (upper word)                              */
      __IO uint32_t  S1L;                       /**< 020C: Cache Data Storage (lower word)                              */
      __IO uint32_t  S2U;                       /**< 0210: Cache Data Storage (upper word)                              */
      __IO uint32_t  S2L;                       /**< 0214: Cache Data Storage (lower word)                              */
      __IO uint32_t  S3U;                       /**< 0218: Cache Data Storage (upper word)                              */
      __IO uint32_t  S3L;                       /**< 021C: Cache Data Storage (lower word)                              */
      __IO uint32_t  S4U;                       /**< 0220: Cache Data Storage (upper word)                              */
      __IO uint32_t  S4L;                       /**< 0224: Cache Data Storage (lower word)                              */
      __IO uint32_t  S5U;                       /**< 0228: Cache Data Storage (upper word)                              */
      __IO uint32_t  S5L;                       /**< 022C: Cache Data Storage (lower word)                              */
      __IO uint32_t  S6U;                       /**< 0230: Cache Data Storage (upper word)                              */
      __IO uint32_t  S6L;                       /**< 0234: Cache Data Storage (lower word)                              */
      __IO uint32_t  S7U;                       /**< 0238: Cache Data Storage (upper word)                              */
      __IO uint32_t  S7L;                       /**< 023C: Cache Data Storage (lower word)                              */
   } DATAW[4];                                  /**< 0200: (cluster: size=0x0100, 256)                                  */
} FMC_Type;


/** @brief Register Masks for FMC */

/* -------------------------------------------------------------------------------- */
/* -----------     'FMC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup FMC_Register_Masks_GROUP FMC Register Masks */
/** @{ */

/** @name PFAPR - Flash Access Protection Register */ /** @{ */
#define FMC_PFAPR_M0AP_MASK                      (0x3U)                                              /**< FMC_PFAPR.M0AP Mask                     */
#define FMC_PFAPR_M0AP_SHIFT                     (0U)                                                /**< FMC_PFAPR.M0AP Position                 */
#define FMC_PFAPR_M0AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M0AP_SHIFT))&FMC_PFAPR_M0AP_MASK) /**< FMC_PFAPR.M0AP Field                    */
#define FMC_PFAPR_M1AP_MASK                      (0xCU)                                              /**< FMC_PFAPR.M1AP Mask                     */
#define FMC_PFAPR_M1AP_SHIFT                     (2U)                                                /**< FMC_PFAPR.M1AP Position                 */
#define FMC_PFAPR_M1AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M1AP_SHIFT))&FMC_PFAPR_M1AP_MASK) /**< FMC_PFAPR.M1AP Field                    */
#define FMC_PFAPR_M2AP_MASK                      (0x30U)                                             /**< FMC_PFAPR.M2AP Mask                     */
#define FMC_PFAPR_M2AP_SHIFT                     (4U)                                                /**< FMC_PFAPR.M2AP Position                 */
#define FMC_PFAPR_M2AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M2AP_SHIFT))&FMC_PFAPR_M2AP_MASK) /**< FMC_PFAPR.M2AP Field                    */
#define FMC_PFAPR_M3AP_MASK                      (0xC0U)                                             /**< FMC_PFAPR.M3AP Mask                     */
#define FMC_PFAPR_M3AP_SHIFT                     (6U)                                                /**< FMC_PFAPR.M3AP Position                 */
#define FMC_PFAPR_M3AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M3AP_SHIFT))&FMC_PFAPR_M3AP_MASK) /**< FMC_PFAPR.M3AP Field                    */
#define FMC_PFAPR_M4AP_MASK                      (0x300U)                                            /**< FMC_PFAPR.M4AP Mask                     */
#define FMC_PFAPR_M4AP_SHIFT                     (8U)                                                /**< FMC_PFAPR.M4AP Position                 */
#define FMC_PFAPR_M4AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M4AP_SHIFT))&FMC_PFAPR_M4AP_MASK) /**< FMC_PFAPR.M4AP Field                    */
#define FMC_PFAPR_M5AP_MASK                      (0xC00U)                                            /**< FMC_PFAPR.M5AP Mask                     */
#define FMC_PFAPR_M5AP_SHIFT                     (10U)                                               /**< FMC_PFAPR.M5AP Position                 */
#define FMC_PFAPR_M5AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M5AP_SHIFT))&FMC_PFAPR_M5AP_MASK) /**< FMC_PFAPR.M5AP Field                    */
#define FMC_PFAPR_M6AP_MASK                      (0x3000U)                                           /**< FMC_PFAPR.M6AP Mask                     */
#define FMC_PFAPR_M6AP_SHIFT                     (12U)                                               /**< FMC_PFAPR.M6AP Position                 */
#define FMC_PFAPR_M6AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M6AP_SHIFT))&FMC_PFAPR_M6AP_MASK) /**< FMC_PFAPR.M6AP Field                    */
#define FMC_PFAPR_M7AP_MASK                      (0xC000U)                                           /**< FMC_PFAPR.M7AP Mask                     */
#define FMC_PFAPR_M7AP_SHIFT                     (14U)                                               /**< FMC_PFAPR.M7AP Position                 */
#define FMC_PFAPR_M7AP(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M7AP_SHIFT))&FMC_PFAPR_M7AP_MASK) /**< FMC_PFAPR.M7AP Field                    */
#define FMC_PFAPR_M0PFD_MASK                     (0x10000U)                                          /**< FMC_PFAPR.M0PFD Mask                    */
#define FMC_PFAPR_M0PFD_SHIFT                    (16U)                                               /**< FMC_PFAPR.M0PFD Position                */
#define FMC_PFAPR_M0PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M0PFD_SHIFT))&FMC_PFAPR_M0PFD_MASK) /**< FMC_PFAPR.M0PFD Field                   */
#define FMC_PFAPR_M1PFD_MASK                     (0x20000U)                                          /**< FMC_PFAPR.M1PFD Mask                    */
#define FMC_PFAPR_M1PFD_SHIFT                    (17U)                                               /**< FMC_PFAPR.M1PFD Position                */
#define FMC_PFAPR_M1PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M1PFD_SHIFT))&FMC_PFAPR_M1PFD_MASK) /**< FMC_PFAPR.M1PFD Field                   */
#define FMC_PFAPR_M2PFD_MASK                     (0x40000U)                                          /**< FMC_PFAPR.M2PFD Mask                    */
#define FMC_PFAPR_M2PFD_SHIFT                    (18U)                                               /**< FMC_PFAPR.M2PFD Position                */
#define FMC_PFAPR_M2PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M2PFD_SHIFT))&FMC_PFAPR_M2PFD_MASK) /**< FMC_PFAPR.M2PFD Field                   */
#define FMC_PFAPR_M3PFD_MASK                     (0x80000U)                                          /**< FMC_PFAPR.M3PFD Mask                    */
#define FMC_PFAPR_M3PFD_SHIFT                    (19U)                                               /**< FMC_PFAPR.M3PFD Position                */
#define FMC_PFAPR_M3PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M3PFD_SHIFT))&FMC_PFAPR_M3PFD_MASK) /**< FMC_PFAPR.M3PFD Field                   */
#define FMC_PFAPR_M4PFD_MASK                     (0x100000U)                                         /**< FMC_PFAPR.M4PFD Mask                    */
#define FMC_PFAPR_M4PFD_SHIFT                    (20U)                                               /**< FMC_PFAPR.M4PFD Position                */
#define FMC_PFAPR_M4PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M4PFD_SHIFT))&FMC_PFAPR_M4PFD_MASK) /**< FMC_PFAPR.M4PFD Field                   */
#define FMC_PFAPR_M5PFD_MASK                     (0x200000U)                                         /**< FMC_PFAPR.M5PFD Mask                    */
#define FMC_PFAPR_M5PFD_SHIFT                    (21U)                                               /**< FMC_PFAPR.M5PFD Position                */
#define FMC_PFAPR_M5PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M5PFD_SHIFT))&FMC_PFAPR_M5PFD_MASK) /**< FMC_PFAPR.M5PFD Field                   */
#define FMC_PFAPR_M6PFD_MASK                     (0x400000U)                                         /**< FMC_PFAPR.M6PFD Mask                    */
#define FMC_PFAPR_M6PFD_SHIFT                    (22U)                                               /**< FMC_PFAPR.M6PFD Position                */
#define FMC_PFAPR_M6PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M6PFD_SHIFT))&FMC_PFAPR_M6PFD_MASK) /**< FMC_PFAPR.M6PFD Field                   */
#define FMC_PFAPR_M7PFD_MASK                     (0x800000U)                                         /**< FMC_PFAPR.M7PFD Mask                    */
#define FMC_PFAPR_M7PFD_SHIFT                    (23U)                                               /**< FMC_PFAPR.M7PFD Position                */
#define FMC_PFAPR_M7PFD(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFAPR_M7PFD_SHIFT))&FMC_PFAPR_M7PFD_MASK) /**< FMC_PFAPR.M7PFD Field                   */
/** @} */

/** @name PFB0CR - Flash Bank 0 Control Register */ /** @{ */
#define FMC_PFB0CR_B0SEBE_MASK                   (0x1U)                                              /**< FMC_PFB0CR.B0SEBE Mask                  */
#define FMC_PFB0CR_B0SEBE_SHIFT                  (0U)                                                /**< FMC_PFB0CR.B0SEBE Position              */
#define FMC_PFB0CR_B0SEBE(x)                     (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0SEBE_SHIFT))&FMC_PFB0CR_B0SEBE_MASK) /**< FMC_PFB0CR.B0SEBE Field                 */
#define FMC_PFB0CR_B0IPE_MASK                    (0x2U)                                              /**< FMC_PFB0CR.B0IPE Mask                   */
#define FMC_PFB0CR_B0IPE_SHIFT                   (1U)                                                /**< FMC_PFB0CR.B0IPE Position               */
#define FMC_PFB0CR_B0IPE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0IPE_SHIFT))&FMC_PFB0CR_B0IPE_MASK) /**< FMC_PFB0CR.B0IPE Field                  */
#define FMC_PFB0CR_B0DPE_MASK                    (0x4U)                                              /**< FMC_PFB0CR.B0DPE Mask                   */
#define FMC_PFB0CR_B0DPE_SHIFT                   (2U)                                                /**< FMC_PFB0CR.B0DPE Position               */
#define FMC_PFB0CR_B0DPE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0DPE_SHIFT))&FMC_PFB0CR_B0DPE_MASK) /**< FMC_PFB0CR.B0DPE Field                  */
#define FMC_PFB0CR_B0ICE_MASK                    (0x8U)                                              /**< FMC_PFB0CR.B0ICE Mask                   */
#define FMC_PFB0CR_B0ICE_SHIFT                   (3U)                                                /**< FMC_PFB0CR.B0ICE Position               */
#define FMC_PFB0CR_B0ICE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0ICE_SHIFT))&FMC_PFB0CR_B0ICE_MASK) /**< FMC_PFB0CR.B0ICE Field                  */
#define FMC_PFB0CR_B0DCE_MASK                    (0x10U)                                             /**< FMC_PFB0CR.B0DCE Mask                   */
#define FMC_PFB0CR_B0DCE_SHIFT                   (4U)                                                /**< FMC_PFB0CR.B0DCE Position               */
#define FMC_PFB0CR_B0DCE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0DCE_SHIFT))&FMC_PFB0CR_B0DCE_MASK) /**< FMC_PFB0CR.B0DCE Field                  */
#define FMC_PFB0CR_CRC_MASK                      (0xE0U)                                             /**< FMC_PFB0CR.CRC Mask                     */
#define FMC_PFB0CR_CRC_SHIFT                     (5U)                                                /**< FMC_PFB0CR.CRC Position                 */
#define FMC_PFB0CR_CRC(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_CRC_SHIFT))&FMC_PFB0CR_CRC_MASK) /**< FMC_PFB0CR.CRC Field                    */
#define FMC_PFB0CR_B0MW_MASK                     (0x60000U)                                          /**< FMC_PFB0CR.B0MW Mask                    */
#define FMC_PFB0CR_B0MW_SHIFT                    (17U)                                               /**< FMC_PFB0CR.B0MW Position                */
#define FMC_PFB0CR_B0MW(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0MW_SHIFT))&FMC_PFB0CR_B0MW_MASK) /**< FMC_PFB0CR.B0MW Field                   */
#define FMC_PFB0CR_S_B_INV_MASK                  (0x80000U)                                          /**< FMC_PFB0CR.S_B_INV Mask                 */
#define FMC_PFB0CR_S_B_INV_SHIFT                 (19U)                                               /**< FMC_PFB0CR.S_B_INV Position             */
#define FMC_PFB0CR_S_B_INV(x)                    (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_S_B_INV_SHIFT))&FMC_PFB0CR_S_B_INV_MASK) /**< FMC_PFB0CR.S_B_INV Field                */
#define FMC_PFB0CR_CINV_WAY_MASK                 (0xF00000U)                                         /**< FMC_PFB0CR.CINV_WAY Mask                */
#define FMC_PFB0CR_CINV_WAY_SHIFT                (20U)                                               /**< FMC_PFB0CR.CINV_WAY Position            */
#define FMC_PFB0CR_CINV_WAY(x)                   (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_CINV_WAY_SHIFT))&FMC_PFB0CR_CINV_WAY_MASK) /**< FMC_PFB0CR.CINV_WAY Field               */
#define FMC_PFB0CR_CLCK_WAY_MASK                 (0xF000000U)                                        /**< FMC_PFB0CR.CLCK_WAY Mask                */
#define FMC_PFB0CR_CLCK_WAY_SHIFT                (24U)                                               /**< FMC_PFB0CR.CLCK_WAY Position            */
#define FMC_PFB0CR_CLCK_WAY(x)                   (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_CLCK_WAY_SHIFT))&FMC_PFB0CR_CLCK_WAY_MASK) /**< FMC_PFB0CR.CLCK_WAY Field               */
#define FMC_PFB0CR_B0RWSC_MASK                   (0xF0000000U)                                       /**< FMC_PFB0CR.B0RWSC Mask                  */
#define FMC_PFB0CR_B0RWSC_SHIFT                  (28U)                                               /**< FMC_PFB0CR.B0RWSC Position              */
#define FMC_PFB0CR_B0RWSC(x)                     (((uint32_t)(((uint32_t)(x))<<FMC_PFB0CR_B0RWSC_SHIFT))&FMC_PFB0CR_B0RWSC_MASK) /**< FMC_PFB0CR.B0RWSC Field                 */
/** @} */

/** @name PFB1CR - Flash Bank 1 Control Register */ /** @{ */
#define FMC_PFB1CR_B1SEBE_MASK                   (0x1U)                                              /**< FMC_PFB1CR.B1SEBE Mask                  */
#define FMC_PFB1CR_B1SEBE_SHIFT                  (0U)                                                /**< FMC_PFB1CR.B1SEBE Position              */
#define FMC_PFB1CR_B1SEBE(x)                     (((uint32_t)(((uint32_t)(x))<<FMC_PFB1CR_B1SEBE_SHIFT))&FMC_PFB1CR_B1SEBE_MASK) /**< FMC_PFB1CR.B1SEBE Field                 */
#define FMC_PFB1CR_B1IPE_MASK                    (0x2U)                                              /**< FMC_PFB1CR.B1IPE Mask                   */
#define FMC_PFB1CR_B1IPE_SHIFT                   (1U)                                                /**< FMC_PFB1CR.B1IPE Position               */
#define FMC_PFB1CR_B1IPE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB1CR_B1IPE_SHIFT))&FMC_PFB1CR_B1IPE_MASK) /**< FMC_PFB1CR.B1IPE Field                  */
#define FMC_PFB1CR_B1DPE_MASK                    (0x4U)                                              /**< FMC_PFB1CR.B1DPE Mask                   */
#define FMC_PFB1CR_B1DPE_SHIFT                   (2U)                                                /**< FMC_PFB1CR.B1DPE Position               */
#define FMC_PFB1CR_B1DPE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB1CR_B1DPE_SHIFT))&FMC_PFB1CR_B1DPE_MASK) /**< FMC_PFB1CR.B1DPE Field                  */
#define FMC_PFB1CR_B1ICE_MASK                    (0x8U)                                              /**< FMC_PFB1CR.B1ICE Mask                   */
#define FMC_PFB1CR_B1ICE_SHIFT                   (3U)                                                /**< FMC_PFB1CR.B1ICE Position               */
#define FMC_PFB1CR_B1ICE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB1CR_B1ICE_SHIFT))&FMC_PFB1CR_B1ICE_MASK) /**< FMC_PFB1CR.B1ICE Field                  */
#define FMC_PFB1CR_B1DCE_MASK                    (0x10U)                                             /**< FMC_PFB1CR.B1DCE Mask                   */
#define FMC_PFB1CR_B1DCE_SHIFT                   (4U)                                                /**< FMC_PFB1CR.B1DCE Position               */
#define FMC_PFB1CR_B1DCE(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_PFB1CR_B1DCE_SHIFT))&FMC_PFB1CR_B1DCE_MASK) /**< FMC_PFB1CR.B1DCE Field                  */
#define FMC_PFB1CR_B1MW_MASK                     (0x60000U)                                          /**< FMC_PFB1CR.B1MW Mask                    */
#define FMC_PFB1CR_B1MW_SHIFT                    (17U)                                               /**< FMC_PFB1CR.B1MW Position                */
#define FMC_PFB1CR_B1MW(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_PFB1CR_B1MW_SHIFT))&FMC_PFB1CR_B1MW_MASK) /**< FMC_PFB1CR.B1MW Field                   */
#define FMC_PFB1CR_B1RWSC_MASK                   (0xF0000000U)                                       /**< FMC_PFB1CR.B1RWSC Mask                  */
#define FMC_PFB1CR_B1RWSC_SHIFT                  (28U)                                               /**< FMC_PFB1CR.B1RWSC Position              */
#define FMC_PFB1CR_B1RWSC(x)                     (((uint32_t)(((uint32_t)(x))<<FMC_PFB1CR_B1RWSC_SHIFT))&FMC_PFB1CR_B1RWSC_MASK) /**< FMC_PFB1CR.B1RWSC Field                 */
/** @} */

/** @name S0 - Cache Tag Storage */ /** @{ */
#define FMC_TAGVD0_valid_MASK                    (0x1U)                                              /**< FMC_TAGVD0.valid Mask                   */
#define FMC_TAGVD0_valid_SHIFT                   (0U)                                                /**< FMC_TAGVD0.valid Position               */
#define FMC_TAGVD0_valid(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD0_valid_SHIFT))&FMC_TAGVD0_valid_MASK) /**< FMC_TAGVD0.valid Field                  */
#define FMC_TAGVD0_tag_MASK                      (0x7FFC0U)                                          /**< FMC_TAGVD0.tag Mask                     */
#define FMC_TAGVD0_tag_SHIFT                     (6U)                                                /**< FMC_TAGVD0.tag Position                 */
#define FMC_TAGVD0_tag(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD0_tag_SHIFT))&FMC_TAGVD0_tag_MASK) /**< FMC_TAGVD0.tag Field                    */
/** @} */

/** @name S1 - Cache Tag Storage */ /** @{ */
#define FMC_TAGVD1_valid_MASK                    (0x1U)                                              /**< FMC_TAGVD1.valid Mask                   */
#define FMC_TAGVD1_valid_SHIFT                   (0U)                                                /**< FMC_TAGVD1.valid Position               */
#define FMC_TAGVD1_valid(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD1_valid_SHIFT))&FMC_TAGVD1_valid_MASK) /**< FMC_TAGVD1.valid Field                  */
#define FMC_TAGVD1_tag_MASK                      (0x7FFC0U)                                          /**< FMC_TAGVD1.tag Mask                     */
#define FMC_TAGVD1_tag_SHIFT                     (6U)                                                /**< FMC_TAGVD1.tag Position                 */
#define FMC_TAGVD1_tag(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD1_tag_SHIFT))&FMC_TAGVD1_tag_MASK) /**< FMC_TAGVD1.tag Field                    */
/** @} */

/** @name S2 - Cache Tag Storage */ /** @{ */
#define FMC_TAGVD2_valid_MASK                    (0x1U)                                              /**< FMC_TAGVD2.valid Mask                   */
#define FMC_TAGVD2_valid_SHIFT                   (0U)                                                /**< FMC_TAGVD2.valid Position               */
#define FMC_TAGVD2_valid(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD2_valid_SHIFT))&FMC_TAGVD2_valid_MASK) /**< FMC_TAGVD2.valid Field                  */
#define FMC_TAGVD2_tag_MASK                      (0x7FFC0U)                                          /**< FMC_TAGVD2.tag Mask                     */
#define FMC_TAGVD2_tag_SHIFT                     (6U)                                                /**< FMC_TAGVD2.tag Position                 */
#define FMC_TAGVD2_tag(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD2_tag_SHIFT))&FMC_TAGVD2_tag_MASK) /**< FMC_TAGVD2.tag Field                    */
/** @} */

/** @name S3 - Cache Tag Storage */ /** @{ */
#define FMC_TAGVD3_valid_MASK                    (0x1U)                                              /**< FMC_TAGVD3.valid Mask                   */
#define FMC_TAGVD3_valid_SHIFT                   (0U)                                                /**< FMC_TAGVD3.valid Position               */
#define FMC_TAGVD3_valid(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD3_valid_SHIFT))&FMC_TAGVD3_valid_MASK) /**< FMC_TAGVD3.valid Field                  */
#define FMC_TAGVD3_tag_MASK                      (0x7FFC0U)                                          /**< FMC_TAGVD3.tag Mask                     */
#define FMC_TAGVD3_tag_SHIFT                     (6U)                                                /**< FMC_TAGVD3.tag Position                 */
#define FMC_TAGVD3_tag(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD3_tag_SHIFT))&FMC_TAGVD3_tag_MASK) /**< FMC_TAGVD3.tag Field                    */
/** @} */

/** @name S4 - Cache Tag Storage */ /** @{ */
#define FMC_TAGVD4_valid_MASK                    (0x1U)                                              /**< FMC_TAGVD4.valid Mask                   */
#define FMC_TAGVD4_valid_SHIFT                   (0U)                                                /**< FMC_TAGVD4.valid Position               */
#define FMC_TAGVD4_valid(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD4_valid_SHIFT))&FMC_TAGVD4_valid_MASK) /**< FMC_TAGVD4.valid Field                  */
#define FMC_TAGVD4_tag_MASK                      (0x7FFC0U)                                          /**< FMC_TAGVD4.tag Mask                     */
#define FMC_TAGVD4_tag_SHIFT                     (6U)                                                /**< FMC_TAGVD4.tag Position                 */
#define FMC_TAGVD4_tag(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD4_tag_SHIFT))&FMC_TAGVD4_tag_MASK) /**< FMC_TAGVD4.tag Field                    */
/** @} */

/** @name S5 - Cache Tag Storage */ /** @{ */
#define FMC_TAGVD5_valid_MASK                    (0x1U)                                              /**< FMC_TAGVD5.valid Mask                   */
#define FMC_TAGVD5_valid_SHIFT                   (0U)                                                /**< FMC_TAGVD5.valid Position               */
#define FMC_TAGVD5_valid(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD5_valid_SHIFT))&FMC_TAGVD5_valid_MASK) /**< FMC_TAGVD5.valid Field                  */
#define FMC_TAGVD5_tag_MASK                      (0x7FFC0U)                                          /**< FMC_TAGVD5.tag Mask                     */
#define FMC_TAGVD5_tag_SHIFT                     (6U)                                                /**< FMC_TAGVD5.tag Position                 */
#define FMC_TAGVD5_tag(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD5_tag_SHIFT))&FMC_TAGVD5_tag_MASK) /**< FMC_TAGVD5.tag Field                    */
/** @} */

/** @name S6 - Cache Tag Storage */ /** @{ */
#define FMC_TAGVD6_valid_MASK                    (0x1U)                                              /**< FMC_TAGVD6.valid Mask                   */
#define FMC_TAGVD6_valid_SHIFT                   (0U)                                                /**< FMC_TAGVD6.valid Position               */
#define FMC_TAGVD6_valid(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD6_valid_SHIFT))&FMC_TAGVD6_valid_MASK) /**< FMC_TAGVD6.valid Field                  */
#define FMC_TAGVD6_tag_MASK                      (0x7FFC0U)                                          /**< FMC_TAGVD6.tag Mask                     */
#define FMC_TAGVD6_tag_SHIFT                     (6U)                                                /**< FMC_TAGVD6.tag Position                 */
#define FMC_TAGVD6_tag(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD6_tag_SHIFT))&FMC_TAGVD6_tag_MASK) /**< FMC_TAGVD6.tag Field                    */
/** @} */

/** @name S7 - Cache Tag Storage */ /** @{ */
#define FMC_TAGVD7_valid_MASK                    (0x1U)                                              /**< FMC_TAGVD7.valid Mask                   */
#define FMC_TAGVD7_valid_SHIFT                   (0U)                                                /**< FMC_TAGVD7.valid Position               */
#define FMC_TAGVD7_valid(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD7_valid_SHIFT))&FMC_TAGVD7_valid_MASK) /**< FMC_TAGVD7.valid Field                  */
#define FMC_TAGVD7_tag_MASK                      (0x7FFC0U)                                          /**< FMC_TAGVD7.tag Mask                     */
#define FMC_TAGVD7_tag_SHIFT                     (6U)                                                /**< FMC_TAGVD7.tag Position                 */
#define FMC_TAGVD7_tag(x)                        (((uint32_t)(((uint32_t)(x))<<FMC_TAGVD7_tag_SHIFT))&FMC_TAGVD7_tag_MASK) /**< FMC_TAGVD7.tag Field                    */
/** @} */

/** @name S0U - Cache Data Storage (upper word) */ /** @{ */
#define FMC_DATAWU_data_MASK                     (0xFFFFFFFFU)                                       /**< FMC_DATAWU.data Mask                    */
#define FMC_DATAWU_data_SHIFT                    (0U)                                                /**< FMC_DATAWU.data Position                */
#define FMC_DATAWU_data(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_DATAWU_data_SHIFT))&FMC_DATAWU_data_MASK) /**< FMC_DATAWU.data Field                   */
/** @} */

/** @name S0L - Cache Data Storage (lower word) */ /** @{ */
#define FMC_DATAWL_data_MASK                     (0xFFFFFFFFU)                                       /**< FMC_DATAWL.data Mask                    */
#define FMC_DATAWL_data_SHIFT                    (0U)                                                /**< FMC_DATAWL.data Position                */
#define FMC_DATAWL_data(x)                       (((uint32_t)(((uint32_t)(x))<<FMC_DATAWL_data_SHIFT))&FMC_DATAWL_data_MASK) /**< FMC_DATAWL.data Field                   */
/** @} */

/** @name S1U - Cache Data Storage (upper word) */ /** @{ */
#define FMC_DATAW1U_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW1U.data Mask                   */
#define FMC_DATAW1U_data_SHIFT                   (0U)                                                /**< FMC_DATAW1U.data Position               */
#define FMC_DATAW1U_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW1U_data_SHIFT))&FMC_DATAW1U_data_MASK) /**< FMC_DATAW1U.data Field                  */
/** @} */

/** @name S1L - Cache Data Storage (lower word) */ /** @{ */
#define FMC_DATAW1L_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW1L.data Mask                   */
#define FMC_DATAW1L_data_SHIFT                   (0U)                                                /**< FMC_DATAW1L.data Position               */
#define FMC_DATAW1L_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW1L_data_SHIFT))&FMC_DATAW1L_data_MASK) /**< FMC_DATAW1L.data Field                  */
/** @} */

/** @name S2U - Cache Data Storage (upper word) */ /** @{ */
#define FMC_DATAW2U_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW2U.data Mask                   */
#define FMC_DATAW2U_data_SHIFT                   (0U)                                                /**< FMC_DATAW2U.data Position               */
#define FMC_DATAW2U_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW2U_data_SHIFT))&FMC_DATAW2U_data_MASK) /**< FMC_DATAW2U.data Field                  */
/** @} */

/** @name S2L - Cache Data Storage (lower word) */ /** @{ */
#define FMC_DATAW2L_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW2L.data Mask                   */
#define FMC_DATAW2L_data_SHIFT                   (0U)                                                /**< FMC_DATAW2L.data Position               */
#define FMC_DATAW2L_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW2L_data_SHIFT))&FMC_DATAW2L_data_MASK) /**< FMC_DATAW2L.data Field                  */
/** @} */

/** @name S3U - Cache Data Storage (upper word) */ /** @{ */
#define FMC_DATAW3U_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW3U.data Mask                   */
#define FMC_DATAW3U_data_SHIFT                   (0U)                                                /**< FMC_DATAW3U.data Position               */
#define FMC_DATAW3U_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW3U_data_SHIFT))&FMC_DATAW3U_data_MASK) /**< FMC_DATAW3U.data Field                  */
/** @} */

/** @name S3L - Cache Data Storage (lower word) */ /** @{ */
#define FMC_DATAW3L_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW3L.data Mask                   */
#define FMC_DATAW3L_data_SHIFT                   (0U)                                                /**< FMC_DATAW3L.data Position               */
#define FMC_DATAW3L_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW3L_data_SHIFT))&FMC_DATAW3L_data_MASK) /**< FMC_DATAW3L.data Field                  */
/** @} */

/** @name S4U - Cache Data Storage (upper word) */ /** @{ */
#define FMC_DATAW4U_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW4U.data Mask                   */
#define FMC_DATAW4U_data_SHIFT                   (0U)                                                /**< FMC_DATAW4U.data Position               */
#define FMC_DATAW4U_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW4U_data_SHIFT))&FMC_DATAW4U_data_MASK) /**< FMC_DATAW4U.data Field                  */
/** @} */

/** @name S4L - Cache Data Storage (lower word) */ /** @{ */
#define FMC_DATAW4L_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW4L.data Mask                   */
#define FMC_DATAW4L_data_SHIFT                   (0U)                                                /**< FMC_DATAW4L.data Position               */
#define FMC_DATAW4L_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW4L_data_SHIFT))&FMC_DATAW4L_data_MASK) /**< FMC_DATAW4L.data Field                  */
/** @} */

/** @name S5U - Cache Data Storage (upper word) */ /** @{ */
#define FMC_DATAW5U_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW5U.data Mask                   */
#define FMC_DATAW5U_data_SHIFT                   (0U)                                                /**< FMC_DATAW5U.data Position               */
#define FMC_DATAW5U_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW5U_data_SHIFT))&FMC_DATAW5U_data_MASK) /**< FMC_DATAW5U.data Field                  */
/** @} */

/** @name S5L - Cache Data Storage (lower word) */ /** @{ */
#define FMC_DATAW5L_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW5L.data Mask                   */
#define FMC_DATAW5L_data_SHIFT                   (0U)                                                /**< FMC_DATAW5L.data Position               */
#define FMC_DATAW5L_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW5L_data_SHIFT))&FMC_DATAW5L_data_MASK) /**< FMC_DATAW5L.data Field                  */
/** @} */

/** @name S6U - Cache Data Storage (upper word) */ /** @{ */
#define FMC_DATAW6U_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW6U.data Mask                   */
#define FMC_DATAW6U_data_SHIFT                   (0U)                                                /**< FMC_DATAW6U.data Position               */
#define FMC_DATAW6U_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW6U_data_SHIFT))&FMC_DATAW6U_data_MASK) /**< FMC_DATAW6U.data Field                  */
/** @} */

/** @name S6L - Cache Data Storage (lower word) */ /** @{ */
#define FMC_DATAW6L_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW6L.data Mask                   */
#define FMC_DATAW6L_data_SHIFT                   (0U)                                                /**< FMC_DATAW6L.data Position               */
#define FMC_DATAW6L_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW6L_data_SHIFT))&FMC_DATAW6L_data_MASK) /**< FMC_DATAW6L.data Field                  */
/** @} */

/** @name S7U - Cache Data Storage (upper word) */ /** @{ */
#define FMC_DATAW7U_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW7U.data Mask                   */
#define FMC_DATAW7U_data_SHIFT                   (0U)                                                /**< FMC_DATAW7U.data Position               */
#define FMC_DATAW7U_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW7U_data_SHIFT))&FMC_DATAW7U_data_MASK) /**< FMC_DATAW7U.data Field                  */
/** @} */

/** @name S7L - Cache Data Storage (lower word) */ /** @{ */
#define FMC_DATAW7L_data_MASK                    (0xFFFFFFFFU)                                       /**< FMC_DATAW7L.data Mask                   */
#define FMC_DATAW7L_data_SHIFT                   (0U)                                                /**< FMC_DATAW7L.data Position               */
#define FMC_DATAW7L_data(x)                      (((uint32_t)(((uint32_t)(x))<<FMC_DATAW7L_data_SHIFT))&FMC_DATAW7L_data_MASK) /**< FMC_DATAW7L.data Field                  */
/** @} */

/** @} */ /* End group FMC_Register_Masks_GROUP */


/* FMC - Peripheral instance base addresses */
#define FMC_BasePtr                    0x4001F000UL //!< Peripheral base address
#define FMC                            ((FMC_Type *) FMC_BasePtr) //!< Freescale base pointer
#define FMC_BASE_PTR                   (FMC) //!< Freescale style base pointer

/** @} */ /* End group FMC_Peripheral_access_layer_GROUP */


/** @brief C Struct for FPB */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FPB_Peripheral_access_layer_GROUP FPB Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FPB (file:FPB)                       ================ */
/* ================================================================================ */

/**
 * @brief Flash Patch and Breakpoint Unit
 */
/**
 * @struct FPB_Type
 * @brief  C Struct allowing access to FPB registers
 */
typedef struct FPB_Type {
   __IO uint32_t  CTRL;                         /**< 0000: FlashPatch Control Register                                  */
   __IO uint32_t  REMAP;                        /**< 0004: FlashPatch Remap Register                                    */
   __IO uint32_t  COMP[8];                      /**< 0008: FlashPatch Comparator Register                               */
        uint8_t   RESERVED_0[4008];             /**< 0028: 0xFA8 bytes                                                  */
   __I  uint32_t  PID4;                         /**< 0FD0: Peripheral Identification Register 4                         */
   __I  uint32_t  PID5;                         /**< 0FD4: Peripheral Identification Register 5                         */
   __I  uint32_t  PID6;                         /**< 0FD8: Peripheral Identification Register 6                         */
   __I  uint32_t  PID7;                         /**< 0FDC: Peripheral Identification Register 7                         */
   __I  uint32_t  PID0;                         /**< 0FE0: Peripheral Identification Register 0                         */
   __I  uint32_t  PID1;                         /**< 0FE4: Peripheral Identification Register 1                         */
   __I  uint32_t  PID2;                         /**< 0FE8: Peripheral Identification Register 2                         */
   __I  uint32_t  PID3;                         /**< 0FEC: Peripheral Identification Register 3                         */
   __I  uint32_t  CID0;                         /**< 0FF0: Component Identification Register 0                          */
   __I  uint32_t  CID1;                         /**< 0FF4: Component Identification Register 1                          */
   __I  uint32_t  CID2;                         /**< 0FF8: Component Identification Register 2                          */
   __I  uint32_t  CID3;                         /**< 0FFC: Component Identification Register 3                          */
} FPB_Type;


/** @brief Register Masks for FPB */

/* -------------------------------------------------------------------------------- */
/* -----------     'FPB' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup FPB_Register_Masks_GROUP FPB Register Masks */
/** @{ */

/** @name CTRL - FlashPatch Control Register */ /** @{ */
#define FPB_CTRL_ENABLE_MASK                     (0x1U)                                              /**< FPB_CTRL.ENABLE Mask                    */
#define FPB_CTRL_ENABLE_SHIFT                    (0U)                                                /**< FPB_CTRL.ENABLE Position                */
#define FPB_CTRL_ENABLE(x)                       (((uint32_t)(((uint32_t)(x))<<FPB_CTRL_ENABLE_SHIFT))&FPB_CTRL_ENABLE_MASK) /**< FPB_CTRL.ENABLE Field                   */
#define FPB_CTRL_KEY_MASK                        (0x2U)                                              /**< FPB_CTRL.KEY Mask                       */
#define FPB_CTRL_KEY_SHIFT                       (1U)                                                /**< FPB_CTRL.KEY Position                   */
#define FPB_CTRL_KEY(x)                          (((uint32_t)(((uint32_t)(x))<<FPB_CTRL_KEY_SHIFT))&FPB_CTRL_KEY_MASK) /**< FPB_CTRL.KEY Field                      */
#define FPB_CTRL_NUM_CODE_least_MASK             (0xF0U)                                             /**< FPB_CTRL.NUM_CODE_least Mask            */
#define FPB_CTRL_NUM_CODE_least_SHIFT            (4U)                                                /**< FPB_CTRL.NUM_CODE_least Position        */
#define FPB_CTRL_NUM_CODE_least(x)               (((uint32_t)(((uint32_t)(x))<<FPB_CTRL_NUM_CODE_least_SHIFT))&FPB_CTRL_NUM_CODE_least_MASK) /**< FPB_CTRL.NUM_CODE_least Field           */
#define FPB_CTRL_NUM_LIT_MASK                    (0xF00U)                                            /**< FPB_CTRL.NUM_LIT Mask                   */
#define FPB_CTRL_NUM_LIT_SHIFT                   (8U)                                                /**< FPB_CTRL.NUM_LIT Position               */
#define FPB_CTRL_NUM_LIT(x)                      (((uint32_t)(((uint32_t)(x))<<FPB_CTRL_NUM_LIT_SHIFT))&FPB_CTRL_NUM_LIT_MASK) /**< FPB_CTRL.NUM_LIT Field                  */
#define FPB_CTRL_NUM_CODE_most_MASK              (0x7000U)                                           /**< FPB_CTRL.NUM_CODE_most Mask             */
#define FPB_CTRL_NUM_CODE_most_SHIFT             (12U)                                               /**< FPB_CTRL.NUM_CODE_most Position         */
#define FPB_CTRL_NUM_CODE_most(x)                (((uint32_t)(((uint32_t)(x))<<FPB_CTRL_NUM_CODE_most_SHIFT))&FPB_CTRL_NUM_CODE_most_MASK) /**< FPB_CTRL.NUM_CODE_most Field            */
/** @} */

/** @name REMAP - FlashPatch Remap Register */ /** @{ */
#define FPB_REMAP_REMAP_MASK                     (0x1FFFFFE0U)                                       /**< FPB_REMAP.REMAP Mask                    */
#define FPB_REMAP_REMAP_SHIFT                    (5U)                                                /**< FPB_REMAP.REMAP Position                */
#define FPB_REMAP_REMAP(x)                       (((uint32_t)(((uint32_t)(x))<<FPB_REMAP_REMAP_SHIFT))&FPB_REMAP_REMAP_MASK) /**< FPB_REMAP.REMAP Field                   */
#define FPB_REMAP_RMPSPT_MASK                    (0x20000000U)                                       /**< FPB_REMAP.RMPSPT Mask                   */
#define FPB_REMAP_RMPSPT_SHIFT                   (29U)                                               /**< FPB_REMAP.RMPSPT Position               */
#define FPB_REMAP_RMPSPT(x)                      (((uint32_t)(((uint32_t)(x))<<FPB_REMAP_RMPSPT_SHIFT))&FPB_REMAP_RMPSPT_MASK) /**< FPB_REMAP.RMPSPT Field                  */
/** @} */

/** @name COMP - FlashPatch Comparator Register %s */ /** @{ */
#define FPB_COMP_ENABLE_MASK                     (0x1U)                                              /**< FPB_COMP.ENABLE Mask                    */
#define FPB_COMP_ENABLE_SHIFT                    (0U)                                                /**< FPB_COMP.ENABLE Position                */
#define FPB_COMP_ENABLE(x)                       (((uint32_t)(((uint32_t)(x))<<FPB_COMP_ENABLE_SHIFT))&FPB_COMP_ENABLE_MASK) /**< FPB_COMP.ENABLE Field                   */
#define FPB_COMP_COMP_MASK                       (0x1FFFFFFCU)                                       /**< FPB_COMP.COMP Mask                      */
#define FPB_COMP_COMP_SHIFT                      (2U)                                                /**< FPB_COMP.COMP Position                  */
#define FPB_COMP_COMP(x)                         (((uint32_t)(((uint32_t)(x))<<FPB_COMP_COMP_SHIFT))&FPB_COMP_COMP_MASK) /**< FPB_COMP.COMP Field                     */
#define FPB_COMP_REPLACE_MASK                    (0xC0000000U)                                       /**< FPB_COMP.REPLACE Mask                   */
#define FPB_COMP_REPLACE_SHIFT                   (30U)                                               /**< FPB_COMP.REPLACE Position               */
#define FPB_COMP_REPLACE(x)                      (((uint32_t)(((uint32_t)(x))<<FPB_COMP_REPLACE_SHIFT))&FPB_COMP_REPLACE_MASK) /**< FPB_COMP.REPLACE Field                  */
/** @} */

/** @name PID4 - Peripheral Identification Register 4 */ /** @{ */
#define FPB_PID4_JEP106_MASK                     (0xFU)                                              /**< FPB_PID4.JEP106 Mask                    */
#define FPB_PID4_JEP106_SHIFT                    (0U)                                                /**< FPB_PID4.JEP106 Position                */
#define FPB_PID4_JEP106(x)                       (((uint32_t)(((uint32_t)(x))<<FPB_PID4_JEP106_SHIFT))&FPB_PID4_JEP106_MASK) /**< FPB_PID4.JEP106 Field                   */
#define FPB_PID4_c4KB_MASK                       (0xF0U)                                             /**< FPB_PID4.c4KB Mask                      */
#define FPB_PID4_c4KB_SHIFT                      (4U)                                                /**< FPB_PID4.c4KB Position                  */
#define FPB_PID4_c4KB(x)                         (((uint32_t)(((uint32_t)(x))<<FPB_PID4_c4KB_SHIFT))&FPB_PID4_c4KB_MASK) /**< FPB_PID4.c4KB Field                     */
/** @} */

/** @name PID0 - Peripheral Identification Register 0 */ /** @{ */
#define FPB_PID0_PartNumber_MASK                 (0xFFU)                                             /**< FPB_PID0.PartNumber Mask                */
#define FPB_PID0_PartNumber_SHIFT                (0U)                                                /**< FPB_PID0.PartNumber Position            */
#define FPB_PID0_PartNumber(x)                   (((uint32_t)(((uint32_t)(x))<<FPB_PID0_PartNumber_SHIFT))&FPB_PID0_PartNumber_MASK) /**< FPB_PID0.PartNumber Field               */
/** @} */

/** @name PID1 - Peripheral Identification Register 1 */ /** @{ */
#define FPB_PID1_PartNumber_MASK                 (0xFU)                                              /**< FPB_PID1.PartNumber Mask                */
#define FPB_PID1_PartNumber_SHIFT                (0U)                                                /**< FPB_PID1.PartNumber Position            */
#define FPB_PID1_PartNumber(x)                   (((uint32_t)(((uint32_t)(x))<<FPB_PID1_PartNumber_SHIFT))&FPB_PID1_PartNumber_MASK) /**< FPB_PID1.PartNumber Field               */
#define FPB_PID1_JEP106_identity_code_MASK       (0xF0U)                                             /**< FPB_PID1.JEP106_identity_code Mask      */
#define FPB_PID1_JEP106_identity_code_SHIFT      (4U)                                                /**< FPB_PID1.JEP106_identity_code Position  */
#define FPB_PID1_JEP106_identity_code(x)         (((uint32_t)(((uint32_t)(x))<<FPB_PID1_JEP106_identity_code_SHIFT))&FPB_PID1_JEP106_identity_code_MASK) /**< FPB_PID1.JEP106_identity_code Field     */
/** @} */

/** @name PID2 - Peripheral Identification Register 2 */ /** @{ */
#define FPB_PID2_JEP106_identity_code_MASK       (0x7U)                                              /**< FPB_PID2.JEP106_identity_code Mask      */
#define FPB_PID2_JEP106_identity_code_SHIFT      (0U)                                                /**< FPB_PID2.JEP106_identity_code Position  */
#define FPB_PID2_JEP106_identity_code(x)         (((uint32_t)(((uint32_t)(x))<<FPB_PID2_JEP106_identity_code_SHIFT))&FPB_PID2_JEP106_identity_code_MASK) /**< FPB_PID2.JEP106_identity_code Field     */
#define FPB_PID2_Revision_MASK                   (0xF0U)                                             /**< FPB_PID2.Revision Mask                  */
#define FPB_PID2_Revision_SHIFT                  (4U)                                                /**< FPB_PID2.Revision Position              */
#define FPB_PID2_Revision(x)                     (((uint32_t)(((uint32_t)(x))<<FPB_PID2_Revision_SHIFT))&FPB_PID2_Revision_MASK) /**< FPB_PID2.Revision Field                 */
/** @} */

/** @name PID3 - Peripheral Identification Register 3 */ /** @{ */
#define FPB_PID3_CustomerModified_MASK           (0xFU)                                              /**< FPB_PID3.CustomerModified Mask          */
#define FPB_PID3_CustomerModified_SHIFT          (0U)                                                /**< FPB_PID3.CustomerModified Position      */
#define FPB_PID3_CustomerModified(x)             (((uint32_t)(((uint32_t)(x))<<FPB_PID3_CustomerModified_SHIFT))&FPB_PID3_CustomerModified_MASK) /**< FPB_PID3.CustomerModified Field         */
#define FPB_PID3_RevAnd_MASK                     (0xF0U)                                             /**< FPB_PID3.RevAnd Mask                    */
#define FPB_PID3_RevAnd_SHIFT                    (4U)                                                /**< FPB_PID3.RevAnd Position                */
#define FPB_PID3_RevAnd(x)                       (((uint32_t)(((uint32_t)(x))<<FPB_PID3_RevAnd_SHIFT))&FPB_PID3_RevAnd_MASK) /**< FPB_PID3.RevAnd Field                   */
/** @} */

/** @name CID0 - Component Identification Register 0 */ /** @{ */
#define FPB_CID0_Preamble_MASK                   (0xFFU)                                             /**< FPB_CID0.Preamble Mask                  */
#define FPB_CID0_Preamble_SHIFT                  (0U)                                                /**< FPB_CID0.Preamble Position              */
#define FPB_CID0_Preamble(x)                     (((uint32_t)(((uint32_t)(x))<<FPB_CID0_Preamble_SHIFT))&FPB_CID0_Preamble_MASK) /**< FPB_CID0.Preamble Field                 */
/** @} */

/** @name CID1 - Component Identification Register 1 */ /** @{ */
#define FPB_CID1_Preamble_MASK                   (0xFU)                                              /**< FPB_CID1.Preamble Mask                  */
#define FPB_CID1_Preamble_SHIFT                  (0U)                                                /**< FPB_CID1.Preamble Position              */
#define FPB_CID1_Preamble(x)                     (((uint32_t)(((uint32_t)(x))<<FPB_CID1_Preamble_SHIFT))&FPB_CID1_Preamble_MASK) /**< FPB_CID1.Preamble Field                 */
#define FPB_CID1_ComponentClass_MASK             (0xF0U)                                             /**< FPB_CID1.ComponentClass Mask            */
#define FPB_CID1_ComponentClass_SHIFT            (4U)                                                /**< FPB_CID1.ComponentClass Position        */
#define FPB_CID1_ComponentClass(x)               (((uint32_t)(((uint32_t)(x))<<FPB_CID1_ComponentClass_SHIFT))&FPB_CID1_ComponentClass_MASK) /**< FPB_CID1.ComponentClass Field           */
/** @} */

/** @name CID2 - Component Identification Register 2 */ /** @{ */
#define FPB_CID2_Preamble_MASK                   (0xFFU)                                             /**< FPB_CID2.Preamble Mask                  */
#define FPB_CID2_Preamble_SHIFT                  (0U)                                                /**< FPB_CID2.Preamble Position              */
#define FPB_CID2_Preamble(x)                     (((uint32_t)(((uint32_t)(x))<<FPB_CID2_Preamble_SHIFT))&FPB_CID2_Preamble_MASK) /**< FPB_CID2.Preamble Field                 */
/** @} */

/** @name CID3 - Component Identification Register 3 */ /** @{ */
#define FPB_CID3_Preamble_MASK                   (0xFFU)                                             /**< FPB_CID3.Preamble Mask                  */
#define FPB_CID3_Preamble_SHIFT                  (0U)                                                /**< FPB_CID3.Preamble Position              */
#define FPB_CID3_Preamble(x)                     (((uint32_t)(((uint32_t)(x))<<FPB_CID3_Preamble_SHIFT))&FPB_CID3_Preamble_MASK) /**< FPB_CID3.Preamble Field                 */
/** @} */

/** @} */ /* End group FPB_Register_Masks_GROUP */


/* FPB - Peripheral instance base addresses */
#define FPB_BasePtr                    0xE0002000UL //!< Peripheral base address
#define FPB                            ((FPB_Type *) FPB_BasePtr) //!< Freescale base pointer
#define FPB_BASE_PTR                   (FPB) //!< Freescale style base pointer

/** @} */ /* End group FPB_Peripheral_access_layer_GROUP */


/** @brief C Struct for FTFL */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FTFL_Peripheral_access_layer_GROUP FTFL Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FTFL (file:FTFL)                     ================ */
/* ================================================================================ */

/**
 * @brief Flash Memory Interface
 */
/**
 * @struct FTFL_Type
 * @brief  C Struct allowing access to FTFL registers
 */
typedef struct FTFL_Type {
   __IO uint8_t   FSTAT;                        /**< 0000: Flash Status Register                                        */
   __IO uint8_t   FCNFG;                        /**< 0001: Flash Configuration Register                                 */
   __I  uint8_t   FSEC;                         /**< 0002: Flash Security Register                                      */
   __I  uint8_t   FOPT;                         /**< 0003: Flash Option Register                                        */
   __IO uint8_t   FCCOB3;                       /**< 0004: FCCOB 3 - Usually Flash address [7..0]                       */
   __IO uint8_t   FCCOB2;                       /**< 0005: FCCOB 2 - Usually Flash address [15..8]                      */
   __IO uint8_t   FCCOB1;                       /**< 0006: FCCOB 1 - Usually Flash address [23..16]                     */
   __IO uint8_t   FCCOB0;                       /**< 0007: FCCOB 0 - Usually FCMD (Flash command)                       */
   __IO uint8_t   FCCOB7;                       /**< 0008: FCCOB 7 - Usually Data Byte 3                                */
   __IO uint8_t   FCCOB6;                       /**< 0009: FCCOB 6 - Usually Data Byte 2                                */
   __IO uint8_t   FCCOB5;                       /**< 000A: FCCOB 5 - Usually Data Byte 1                                */
   __IO uint8_t   FCCOB4;                       /**< 000B: FCCOB 4 - Usually Data Byte 0                                */
   __IO uint8_t   FCCOBB;                       /**< 000C: FCCOB B - Usually Data Byte 7                                */
   __IO uint8_t   FCCOBA;                       /**< 000D: FCCOB A - Usually Data Byte 6                                */
   __IO uint8_t   FCCOB9;                       /**< 000E: FCCOB 9 - Usually Data Byte 5                                */
   __IO uint8_t   FCCOB8;                       /**< 000F: FCCOB 8 - Usually Data Byte 4                                */
   __IO uint8_t   FPROT3;                       /**< 0010: Program Flash Protection                                     */
   __IO uint8_t   FPROT2;                       /**< 0011: Program Flash Protection                                     */
   __IO uint8_t   FPROT1;                       /**< 0012: Program Flash Protection                                     */
   __IO uint8_t   FPROT0;                       /**< 0013: Program Flash Protection                                     */
        uint8_t   RESERVED_0[2];                /**< 0014: 0x2 bytes                                                    */
   __IO uint8_t   FEPROT;                       /**< 0016: EEPROM Protection Register                                   */
   __IO uint8_t   FDPROT;                       /**< 0017: Data Flash Protection Register                               */
} FTFL_Type;


/** @brief Register Masks for FTFL */

/* -------------------------------------------------------------------------------- */
/* -----------     'FTFL' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup FTFL_Register_Masks_GROUP FTFL Register Masks */
/** @{ */

/** @name FSTAT - Flash Status Register */ /** @{ */
#define FTFL_FSTAT_MGSTAT0_MASK                  (0x1U)                                              /**< FTFL_FSTAT.MGSTAT0 Mask                 */
#define FTFL_FSTAT_MGSTAT0_SHIFT                 (0U)                                                /**< FTFL_FSTAT.MGSTAT0 Position             */
#define FTFL_FSTAT_MGSTAT0(x)                    (((uint8_t)(((uint8_t)(x))<<FTFL_FSTAT_MGSTAT0_SHIFT))&FTFL_FSTAT_MGSTAT0_MASK) /**< FTFL_FSTAT.MGSTAT0 Field                */
#define FTFL_FSTAT_FPVIOL_MASK                   (0x10U)                                             /**< FTFL_FSTAT.FPVIOL Mask                  */
#define FTFL_FSTAT_FPVIOL_SHIFT                  (4U)                                                /**< FTFL_FSTAT.FPVIOL Position              */
#define FTFL_FSTAT_FPVIOL(x)                     (((uint8_t)(((uint8_t)(x))<<FTFL_FSTAT_FPVIOL_SHIFT))&FTFL_FSTAT_FPVIOL_MASK) /**< FTFL_FSTAT.FPVIOL Field                 */
#define FTFL_FSTAT_ACCERR_MASK                   (0x20U)                                             /**< FTFL_FSTAT.ACCERR Mask                  */
#define FTFL_FSTAT_ACCERR_SHIFT                  (5U)                                                /**< FTFL_FSTAT.ACCERR Position              */
#define FTFL_FSTAT_ACCERR(x)                     (((uint8_t)(((uint8_t)(x))<<FTFL_FSTAT_ACCERR_SHIFT))&FTFL_FSTAT_ACCERR_MASK) /**< FTFL_FSTAT.ACCERR Field                 */
#define FTFL_FSTAT_RDCOLERR_MASK                 (0x40U)                                             /**< FTFL_FSTAT.RDCOLERR Mask                */
#define FTFL_FSTAT_RDCOLERR_SHIFT                (6U)                                                /**< FTFL_FSTAT.RDCOLERR Position            */
#define FTFL_FSTAT_RDCOLERR(x)                   (((uint8_t)(((uint8_t)(x))<<FTFL_FSTAT_RDCOLERR_SHIFT))&FTFL_FSTAT_RDCOLERR_MASK) /**< FTFL_FSTAT.RDCOLERR Field               */
#define FTFL_FSTAT_CCIF_MASK                     (0x80U)                                             /**< FTFL_FSTAT.CCIF Mask                    */
#define FTFL_FSTAT_CCIF_SHIFT                    (7U)                                                /**< FTFL_FSTAT.CCIF Position                */
#define FTFL_FSTAT_CCIF(x)                       (((uint8_t)(((uint8_t)(x))<<FTFL_FSTAT_CCIF_SHIFT))&FTFL_FSTAT_CCIF_MASK) /**< FTFL_FSTAT.CCIF Field                   */
/** @} */

/** @name FCNFG - Flash Configuration Register */ /** @{ */
#define FTFL_FCNFG_EEERDY_MASK                   (0x1U)                                              /**< FTFL_FCNFG.EEERDY Mask                  */
#define FTFL_FCNFG_EEERDY_SHIFT                  (0U)                                                /**< FTFL_FCNFG.EEERDY Position              */
#define FTFL_FCNFG_EEERDY(x)                     (((uint8_t)(((uint8_t)(x))<<FTFL_FCNFG_EEERDY_SHIFT))&FTFL_FCNFG_EEERDY_MASK) /**< FTFL_FCNFG.EEERDY Field                 */
#define FTFL_FCNFG_RAMRDY_MASK                   (0x2U)                                              /**< FTFL_FCNFG.RAMRDY Mask                  */
#define FTFL_FCNFG_RAMRDY_SHIFT                  (1U)                                                /**< FTFL_FCNFG.RAMRDY Position              */
#define FTFL_FCNFG_RAMRDY(x)                     (((uint8_t)(((uint8_t)(x))<<FTFL_FCNFG_RAMRDY_SHIFT))&FTFL_FCNFG_RAMRDY_MASK) /**< FTFL_FCNFG.RAMRDY Field                 */
#define FTFL_FCNFG_PFLSH_MASK                    (0x4U)                                              /**< FTFL_FCNFG.PFLSH Mask                   */
#define FTFL_FCNFG_PFLSH_SHIFT                   (2U)                                                /**< FTFL_FCNFG.PFLSH Position               */
#define FTFL_FCNFG_PFLSH(x)                      (((uint8_t)(((uint8_t)(x))<<FTFL_FCNFG_PFLSH_SHIFT))&FTFL_FCNFG_PFLSH_MASK) /**< FTFL_FCNFG.PFLSH Field                  */
#define FTFL_FCNFG_SWAP_MASK                     (0x8U)                                              /**< FTFL_FCNFG.SWAP Mask                    */
#define FTFL_FCNFG_SWAP_SHIFT                    (3U)                                                /**< FTFL_FCNFG.SWAP Position                */
#define FTFL_FCNFG_SWAP(x)                       (((uint8_t)(((uint8_t)(x))<<FTFL_FCNFG_SWAP_SHIFT))&FTFL_FCNFG_SWAP_MASK) /**< FTFL_FCNFG.SWAP Field                   */
#define FTFL_FCNFG_ERSSUSP_MASK                  (0x10U)                                             /**< FTFL_FCNFG.ERSSUSP Mask                 */
#define FTFL_FCNFG_ERSSUSP_SHIFT                 (4U)                                                /**< FTFL_FCNFG.ERSSUSP Position             */
#define FTFL_FCNFG_ERSSUSP(x)                    (((uint8_t)(((uint8_t)(x))<<FTFL_FCNFG_ERSSUSP_SHIFT))&FTFL_FCNFG_ERSSUSP_MASK) /**< FTFL_FCNFG.ERSSUSP Field                */
#define FTFL_FCNFG_ERSAREQ_MASK                  (0x20U)                                             /**< FTFL_FCNFG.ERSAREQ Mask                 */
#define FTFL_FCNFG_ERSAREQ_SHIFT                 (5U)                                                /**< FTFL_FCNFG.ERSAREQ Position             */
#define FTFL_FCNFG_ERSAREQ(x)                    (((uint8_t)(((uint8_t)(x))<<FTFL_FCNFG_ERSAREQ_SHIFT))&FTFL_FCNFG_ERSAREQ_MASK) /**< FTFL_FCNFG.ERSAREQ Field                */
#define FTFL_FCNFG_RDCOLLIE_MASK                 (0x40U)                                             /**< FTFL_FCNFG.RDCOLLIE Mask                */
#define FTFL_FCNFG_RDCOLLIE_SHIFT                (6U)                                                /**< FTFL_FCNFG.RDCOLLIE Position            */
#define FTFL_FCNFG_RDCOLLIE(x)                   (((uint8_t)(((uint8_t)(x))<<FTFL_FCNFG_RDCOLLIE_SHIFT))&FTFL_FCNFG_RDCOLLIE_MASK) /**< FTFL_FCNFG.RDCOLLIE Field               */
#define FTFL_FCNFG_CCIE_MASK                     (0x80U)                                             /**< FTFL_FCNFG.CCIE Mask                    */
#define FTFL_FCNFG_CCIE_SHIFT                    (7U)                                                /**< FTFL_FCNFG.CCIE Position                */
#define FTFL_FCNFG_CCIE(x)                       (((uint8_t)(((uint8_t)(x))<<FTFL_FCNFG_CCIE_SHIFT))&FTFL_FCNFG_CCIE_MASK) /**< FTFL_FCNFG.CCIE Field                   */
/** @} */

/** @name FSEC - Flash Security Register */ /** @{ */
#define FTFL_FSEC_SEC_MASK                       (0x3U)                                              /**< FTFL_FSEC.SEC Mask                      */
#define FTFL_FSEC_SEC_SHIFT                      (0U)                                                /**< FTFL_FSEC.SEC Position                  */
#define FTFL_FSEC_SEC(x)                         (((uint8_t)(((uint8_t)(x))<<FTFL_FSEC_SEC_SHIFT))&FTFL_FSEC_SEC_MASK) /**< FTFL_FSEC.SEC Field                     */
#define FTFL_FSEC_FSLACC_MASK                    (0xCU)                                              /**< FTFL_FSEC.FSLACC Mask                   */
#define FTFL_FSEC_FSLACC_SHIFT                   (2U)                                                /**< FTFL_FSEC.FSLACC Position               */
#define FTFL_FSEC_FSLACC(x)                      (((uint8_t)(((uint8_t)(x))<<FTFL_FSEC_FSLACC_SHIFT))&FTFL_FSEC_FSLACC_MASK) /**< FTFL_FSEC.FSLACC Field                  */
#define FTFL_FSEC_MEEN_MASK                      (0x30U)                                             /**< FTFL_FSEC.MEEN Mask                     */
#define FTFL_FSEC_MEEN_SHIFT                     (4U)                                                /**< FTFL_FSEC.MEEN Position                 */
#define FTFL_FSEC_MEEN(x)                        (((uint8_t)(((uint8_t)(x))<<FTFL_FSEC_MEEN_SHIFT))&FTFL_FSEC_MEEN_MASK) /**< FTFL_FSEC.MEEN Field                    */
#define FTFL_FSEC_KEYEN_MASK                     (0xC0U)                                             /**< FTFL_FSEC.KEYEN Mask                    */
#define FTFL_FSEC_KEYEN_SHIFT                    (6U)                                                /**< FTFL_FSEC.KEYEN Position                */
#define FTFL_FSEC_KEYEN(x)                       (((uint8_t)(((uint8_t)(x))<<FTFL_FSEC_KEYEN_SHIFT))&FTFL_FSEC_KEYEN_MASK) /**< FTFL_FSEC.KEYEN Field                   */
/** @} */

/** @name FOPT - Flash Option Register  */ /** @{ */
#define FTFL_FOPT_OPT_MASK                       (0xFFU)                                             /**< FTFL_FOPT.OPT Mask                      */
#define FTFL_FOPT_OPT_SHIFT                      (0U)                                                /**< FTFL_FOPT.OPT Position                  */
#define FTFL_FOPT_OPT(x)                         (((uint8_t)(((uint8_t)(x))<<FTFL_FOPT_OPT_SHIFT))&FTFL_FOPT_OPT_MASK) /**< FTFL_FOPT.OPT Field                     */
/** @} */

/** @name FCCOB - FCCOB %s - Usually %m  */ /** @{ */
#define FTFL_FCCOB_CCOBn_MASK                    (0xFFU)                                             /**< FTFL_FCCOB.CCOBn Mask                   */
#define FTFL_FCCOB_CCOBn_SHIFT                   (0U)                                                /**< FTFL_FCCOB.CCOBn Position               */
#define FTFL_FCCOB_CCOBn(x)                      (((uint8_t)(((uint8_t)(x))<<FTFL_FCCOB_CCOBn_SHIFT))&FTFL_FCCOB_CCOBn_MASK) /**< FTFL_FCCOB.CCOBn Field                  */
/** @} */

/** @name FPROT - Program Flash Protection  */ /** @{ */
#define FTFL_FPROT_PROT_MASK                     (0xFFU)                                             /**< FTFL_FPROT.PROT Mask                    */
#define FTFL_FPROT_PROT_SHIFT                    (0U)                                                /**< FTFL_FPROT.PROT Position                */
#define FTFL_FPROT_PROT(x)                       (((uint8_t)(((uint8_t)(x))<<FTFL_FPROT_PROT_SHIFT))&FTFL_FPROT_PROT_MASK) /**< FTFL_FPROT.PROT Field                   */
/** @} */

/** @name FEPROT - EEPROM Protection Register */ /** @{ */
#define FTFL_FEPROT_EPROT_MASK                   (0xFFU)                                             /**< FTFL_FEPROT.EPROT Mask                  */
#define FTFL_FEPROT_EPROT_SHIFT                  (0U)                                                /**< FTFL_FEPROT.EPROT Position              */
#define FTFL_FEPROT_EPROT(x)                     (((uint8_t)(((uint8_t)(x))<<FTFL_FEPROT_EPROT_SHIFT))&FTFL_FEPROT_EPROT_MASK) /**< FTFL_FEPROT.EPROT Field                 */
/** @} */

/** @name FDPROT - Data Flash Protection Register  */ /** @{ */
#define FTFL_FDPROT_DPROT_MASK                   (0xFFU)                                             /**< FTFL_FDPROT.DPROT Mask                  */
#define FTFL_FDPROT_DPROT_SHIFT                  (0U)                                                /**< FTFL_FDPROT.DPROT Position              */
#define FTFL_FDPROT_DPROT(x)                     (((uint8_t)(((uint8_t)(x))<<FTFL_FDPROT_DPROT_SHIFT))&FTFL_FDPROT_DPROT_MASK) /**< FTFL_FDPROT.DPROT Field                 */
/** @} */

/** @} */ /* End group FTFL_Register_Masks_GROUP */


/* FTFL - Peripheral instance base addresses */
#define FTFL_BasePtr                   0x40020000UL //!< Peripheral base address
#define FTFL                           ((FTFL_Type *) FTFL_BasePtr) //!< Freescale base pointer
#define FTFL_BASE_PTR                  (FTFL) //!< Freescale style base pointer
#define FTFL_IRQS { FTF_Command_IRQn, FTF_ReadCollision_IRQn,  }


/** @} */ /* End group FTFL_Peripheral_access_layer_GROUP */


/** @brief C Struct for FTM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FTM_Peripheral_access_layer_GROUP FTM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FTM0 (file:FTM0_8CH)                 ================ */
/* ================================================================================ */

/**
 * @brief FlexTimer Module (8 channels)
 */
#define FTM_CONTROLS_COUNT   8          /**< Number of FTM channels                             */
/**
 * @struct FTM_Type
 * @brief  C Struct allowing access to FTM registers
 */
typedef struct FTM_Type {
   __IO uint32_t  SC;                           /**< 0000: Status and Control                                           */
   __IO uint32_t  CNT;                          /**< 0004: Counter                                                      */
   __IO uint32_t  MOD;                          /**< 0008: Modulo                                                       */
   struct {
      __IO uint32_t  CnSC;                      /**< 000C: Channel  Status and Control                                  */
      __IO uint32_t  CnV;                       /**< 0010: Channel  Value                                               */
   } CONTROLS[FTM_CONTROLS_COUNT];              /**< 000C: (cluster: size=0x0040, 64)                                   */
   __IO uint32_t  CNTIN;                        /**< 004C: Counter Initial Value                                        */
   __IO uint32_t  STATUS;                       /**< 0050: Capture and Compare Status                                   */
   __IO uint32_t  MODE;                         /**< 0054: Features Mode Selection                                      */
   __IO uint32_t  SYNC;                         /**< 0058: Synchronization                                              */
   __IO uint32_t  OUTINIT;                      /**< 005C: Initial State for Channels Output                            */
   __IO uint32_t  OUTMASK;                      /**< 0060: Output Mask                                                  */
   __IO uint32_t  COMBINE;                      /**< 0064: Function for Linked Channels                                 */
   __IO uint32_t  DEADTIME;                     /**< 0068: Deadtime Insertion Control                                   */
   __IO uint32_t  EXTTRIG;                      /**< 006C: FTM External Trigger                                         */
   __IO uint32_t  POL;                          /**< 0070: Channels Polarity                                            */
   __IO uint32_t  FMS;                          /**< 0074: Fault Mode Status                                            */
   __IO uint32_t  FILTER;                       /**< 0078: Input Capture Filter Control                                 */
   __IO uint32_t  FLTCTRL;                      /**< 007C: Fault Control                                                */
        uint8_t   RESERVED_1[4];                /**< 0080: 0x4 bytes                                                    */
   __IO uint32_t  CONF;                         /**< 0084: Configuration                                                */
   __IO uint32_t  FLTPOL;                       /**< 0088: FTM Fault Input Polarity                                     */
   __IO uint32_t  SYNCONF;                      /**< 008C: Synchronization Configuration                                */
   __IO uint32_t  INVCTRL;                      /**< 0090: FTM Inverting Control                                        */
   __IO uint32_t  SWOCTRL;                      /**< 0094: FTM Software Output Control                                  */
   __IO uint32_t  PWMLOAD;                      /**< 0098: FTM PWM Load                                                 */
} FTM_Type;


/** @brief Register Masks for FTM */

/* -------------------------------------------------------------------------------- */
/* -----------     'FTM0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup FTM_Register_Masks_GROUP FTM Register Masks */
/** @{ */

/** @name SC - Status and Control */ /** @{ */
#define FTM_SC_PS_MASK                           (0x7U)                                              /**< FTM0_SC.PS Mask                         */
#define FTM_SC_PS_SHIFT                          (0U)                                                /**< FTM0_SC.PS Position                     */
#define FTM_SC_PS(x)                             (((uint32_t)(((uint32_t)(x))<<FTM_SC_PS_SHIFT))&FTM_SC_PS_MASK) /**< FTM0_SC.PS Field                        */
#define FTM_SC_CLKS_MASK                         (0x18U)                                             /**< FTM0_SC.CLKS Mask                       */
#define FTM_SC_CLKS_SHIFT                        (3U)                                                /**< FTM0_SC.CLKS Position                   */
#define FTM_SC_CLKS(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_SC_CLKS_SHIFT))&FTM_SC_CLKS_MASK) /**< FTM0_SC.CLKS Field                      */
#define FTM_SC_CPWMS_MASK                        (0x20U)                                             /**< FTM0_SC.CPWMS Mask                      */
#define FTM_SC_CPWMS_SHIFT                       (5U)                                                /**< FTM0_SC.CPWMS Position                  */
#define FTM_SC_CPWMS(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_SC_CPWMS_SHIFT))&FTM_SC_CPWMS_MASK) /**< FTM0_SC.CPWMS Field                     */
#define FTM_SC_TOIE_MASK                         (0x40U)                                             /**< FTM0_SC.TOIE Mask                       */
#define FTM_SC_TOIE_SHIFT                        (6U)                                                /**< FTM0_SC.TOIE Position                   */
#define FTM_SC_TOIE(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_SC_TOIE_SHIFT))&FTM_SC_TOIE_MASK) /**< FTM0_SC.TOIE Field                      */
#define FTM_SC_TOF_MASK                          (0x80U)                                             /**< FTM0_SC.TOF Mask                        */
#define FTM_SC_TOF_SHIFT                         (7U)                                                /**< FTM0_SC.TOF Position                    */
#define FTM_SC_TOF(x)                            (((uint32_t)(((uint32_t)(x))<<FTM_SC_TOF_SHIFT))&FTM_SC_TOF_MASK) /**< FTM0_SC.TOF Field                       */
/** @} */

/** @name CNT - Counter */ /** @{ */
#define FTM_CNT_COUNT_MASK                       (0xFFFFU)                                           /**< FTM0_CNT.COUNT Mask                     */
#define FTM_CNT_COUNT_SHIFT                      (0U)                                                /**< FTM0_CNT.COUNT Position                 */
#define FTM_CNT_COUNT(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CNT_COUNT_SHIFT))&FTM_CNT_COUNT_MASK) /**< FTM0_CNT.COUNT Field                    */
/** @} */

/** @name MOD - Modulo */ /** @{ */
#define FTM_MOD_MOD_MASK                         (0xFFFFU)                                           /**< FTM0_MOD.MOD Mask                       */
#define FTM_MOD_MOD_SHIFT                        (0U)                                                /**< FTM0_MOD.MOD Position                   */
#define FTM_MOD_MOD(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_MOD_MOD_SHIFT))&FTM_MOD_MOD_MASK) /**< FTM0_MOD.MOD Field                      */
/** @} */

/** @name CnSC - Channel %s Status and Control */ /** @{ */
#define FTM_CnSC_DMA_MASK                        (0x1U)                                              /**< FTM0_CnSC.DMA Mask                      */
#define FTM_CnSC_DMA_SHIFT                       (0U)                                                /**< FTM0_CnSC.DMA Position                  */
#define FTM_CnSC_DMA(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_DMA_SHIFT))&FTM_CnSC_DMA_MASK) /**< FTM0_CnSC.DMA Field                     */
#define FTM_CnSC_ELS_MASK                        (0xCU)                                              /**< FTM0_CnSC.ELS Mask                      */
#define FTM_CnSC_ELS_SHIFT                       (2U)                                                /**< FTM0_CnSC.ELS Position                  */
#define FTM_CnSC_ELS(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_ELS_SHIFT))&FTM_CnSC_ELS_MASK) /**< FTM0_CnSC.ELS Field                     */
#define FTM_CnSC_ELSA_MASK                       (0x4U)                                              /**< FTM0_CnSC.ELSA Mask                     */
#define FTM_CnSC_ELSA_SHIFT                      (2U)                                                /**< FTM0_CnSC.ELSA Position                 */
#define FTM_CnSC_ELSA(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_ELSA_SHIFT))&FTM_CnSC_ELSA_MASK) /**< FTM0_CnSC.ELSA Field                    */
#define FTM_CnSC_ELSB_MASK                       (0x8U)                                              /**< FTM0_CnSC.ELSB Mask                     */
#define FTM_CnSC_ELSB_SHIFT                      (3U)                                                /**< FTM0_CnSC.ELSB Position                 */
#define FTM_CnSC_ELSB(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_ELSB_SHIFT))&FTM_CnSC_ELSB_MASK) /**< FTM0_CnSC.ELSB Field                    */
#define FTM_CnSC_MS_MASK                         (0x30U)                                             /**< FTM0_CnSC.MS Mask                       */
#define FTM_CnSC_MS_SHIFT                        (4U)                                                /**< FTM0_CnSC.MS Position                   */
#define FTM_CnSC_MS(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_MS_SHIFT))&FTM_CnSC_MS_MASK) /**< FTM0_CnSC.MS Field                      */
#define FTM_CnSC_MSA_MASK                        (0x10U)                                             /**< FTM0_CnSC.MSA Mask                      */
#define FTM_CnSC_MSA_SHIFT                       (4U)                                                /**< FTM0_CnSC.MSA Position                  */
#define FTM_CnSC_MSA(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_MSA_SHIFT))&FTM_CnSC_MSA_MASK) /**< FTM0_CnSC.MSA Field                     */
#define FTM_CnSC_MSB_MASK                        (0x20U)                                             /**< FTM0_CnSC.MSB Mask                      */
#define FTM_CnSC_MSB_SHIFT                       (5U)                                                /**< FTM0_CnSC.MSB Position                  */
#define FTM_CnSC_MSB(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_MSB_SHIFT))&FTM_CnSC_MSB_MASK) /**< FTM0_CnSC.MSB Field                     */
#define FTM_CnSC_CHIE_MASK                       (0x40U)                                             /**< FTM0_CnSC.CHIE Mask                     */
#define FTM_CnSC_CHIE_SHIFT                      (6U)                                                /**< FTM0_CnSC.CHIE Position                 */
#define FTM_CnSC_CHIE(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_CHIE_SHIFT))&FTM_CnSC_CHIE_MASK) /**< FTM0_CnSC.CHIE Field                    */
#define FTM_CnSC_CHF_MASK                        (0x80U)                                             /**< FTM0_CnSC.CHF Mask                      */
#define FTM_CnSC_CHF_SHIFT                       (7U)                                                /**< FTM0_CnSC.CHF Position                  */
#define FTM_CnSC_CHF(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_CnSC_CHF_SHIFT))&FTM_CnSC_CHF_MASK) /**< FTM0_CnSC.CHF Field                     */
/** @} */

/** @name CnV - Channel %s Value */ /** @{ */
#define FTM_CnV_VAL_MASK                         (0xFFFFU)                                           /**< FTM0_CnV.VAL Mask                       */
#define FTM_CnV_VAL_SHIFT                        (0U)                                                /**< FTM0_CnV.VAL Position                   */
#define FTM_CnV_VAL(x)                           (((uint32_t)(((uint32_t)(x))<<FTM_CnV_VAL_SHIFT))&FTM_CnV_VAL_MASK) /**< FTM0_CnV.VAL Field                      */
/** @} */

/** @name CNTIN - Counter Initial Value */ /** @{ */
#define FTM_CNTIN_INIT_MASK                      (0xFFFFU)                                           /**< FTM0_CNTIN.INIT Mask                    */
#define FTM_CNTIN_INIT_SHIFT                     (0U)                                                /**< FTM0_CNTIN.INIT Position                */
#define FTM_CNTIN_INIT(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_CNTIN_INIT_SHIFT))&FTM_CNTIN_INIT_MASK) /**< FTM0_CNTIN.INIT Field                   */
/** @} */

/** @name STATUS - Capture and Compare Status */ /** @{ */
#define FTM_STATUS_CH0F_MASK                     (0x1U)                                              /**< FTM0_STATUS.CH0F Mask                   */
#define FTM_STATUS_CH0F_SHIFT                    (0U)                                                /**< FTM0_STATUS.CH0F Position               */
#define FTM_STATUS_CH0F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH0F_SHIFT))&FTM_STATUS_CH0F_MASK) /**< FTM0_STATUS.CH0F Field                  */
#define FTM_STATUS_CH1F_MASK                     (0x2U)                                              /**< FTM0_STATUS.CH1F Mask                   */
#define FTM_STATUS_CH1F_SHIFT                    (1U)                                                /**< FTM0_STATUS.CH1F Position               */
#define FTM_STATUS_CH1F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH1F_SHIFT))&FTM_STATUS_CH1F_MASK) /**< FTM0_STATUS.CH1F Field                  */
#define FTM_STATUS_CH2F_MASK                     (0x4U)                                              /**< FTM0_STATUS.CH2F Mask                   */
#define FTM_STATUS_CH2F_SHIFT                    (2U)                                                /**< FTM0_STATUS.CH2F Position               */
#define FTM_STATUS_CH2F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH2F_SHIFT))&FTM_STATUS_CH2F_MASK) /**< FTM0_STATUS.CH2F Field                  */
#define FTM_STATUS_CH3F_MASK                     (0x8U)                                              /**< FTM0_STATUS.CH3F Mask                   */
#define FTM_STATUS_CH3F_SHIFT                    (3U)                                                /**< FTM0_STATUS.CH3F Position               */
#define FTM_STATUS_CH3F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH3F_SHIFT))&FTM_STATUS_CH3F_MASK) /**< FTM0_STATUS.CH3F Field                  */
#define FTM_STATUS_CH4F_MASK                     (0x10U)                                             /**< FTM0_STATUS.CH4F Mask                   */
#define FTM_STATUS_CH4F_SHIFT                    (4U)                                                /**< FTM0_STATUS.CH4F Position               */
#define FTM_STATUS_CH4F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH4F_SHIFT))&FTM_STATUS_CH4F_MASK) /**< FTM0_STATUS.CH4F Field                  */
#define FTM_STATUS_CH5F_MASK                     (0x20U)                                             /**< FTM0_STATUS.CH5F Mask                   */
#define FTM_STATUS_CH5F_SHIFT                    (5U)                                                /**< FTM0_STATUS.CH5F Position               */
#define FTM_STATUS_CH5F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH5F_SHIFT))&FTM_STATUS_CH5F_MASK) /**< FTM0_STATUS.CH5F Field                  */
#define FTM_STATUS_CH6F_MASK                     (0x40U)                                             /**< FTM0_STATUS.CH6F Mask                   */
#define FTM_STATUS_CH6F_SHIFT                    (6U)                                                /**< FTM0_STATUS.CH6F Position               */
#define FTM_STATUS_CH6F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH6F_SHIFT))&FTM_STATUS_CH6F_MASK) /**< FTM0_STATUS.CH6F Field                  */
#define FTM_STATUS_CH7F_MASK                     (0x80U)                                             /**< FTM0_STATUS.CH7F Mask                   */
#define FTM_STATUS_CH7F_SHIFT                    (7U)                                                /**< FTM0_STATUS.CH7F Position               */
#define FTM_STATUS_CH7F(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_STATUS_CH7F_SHIFT))&FTM_STATUS_CH7F_MASK) /**< FTM0_STATUS.CH7F Field                  */
/** @} */

/** @name MODE - Features Mode Selection */ /** @{ */
#define FTM_MODE_FTMEN_MASK                      (0x1U)                                              /**< FTM0_MODE.FTMEN Mask                    */
#define FTM_MODE_FTMEN_SHIFT                     (0U)                                                /**< FTM0_MODE.FTMEN Position                */
#define FTM_MODE_FTMEN(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_MODE_FTMEN_SHIFT))&FTM_MODE_FTMEN_MASK) /**< FTM0_MODE.FTMEN Field                   */
#define FTM_MODE_INIT_MASK                       (0x2U)                                              /**< FTM0_MODE.INIT Mask                     */
#define FTM_MODE_INIT_SHIFT                      (1U)                                                /**< FTM0_MODE.INIT Position                 */
#define FTM_MODE_INIT(x)                         (((uint32_t)(((uint32_t)(x))<<FTM_MODE_INIT_SHIFT))&FTM_MODE_INIT_MASK) /**< FTM0_MODE.INIT Field                    */
#define FTM_MODE_WPDIS_MASK                      (0x4U)                                              /**< FTM0_MODE.WPDIS Mask                    */
#define FTM_MODE_WPDIS_SHIFT                     (2U)                                                /**< FTM0_MODE.WPDIS Position                */
#define FTM_MODE_WPDIS(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_MODE_WPDIS_SHIFT))&FTM_MODE_WPDIS_MASK) /**< FTM0_MODE.WPDIS Field                   */
#define FTM_MODE_PWMSYNC_MASK                    (0x8U)                                              /**< FTM0_MODE.PWMSYNC Mask                  */
#define FTM_MODE_PWMSYNC_SHIFT                   (3U)                                                /**< FTM0_MODE.PWMSYNC Position              */
#define FTM_MODE_PWMSYNC(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_MODE_PWMSYNC_SHIFT))&FTM_MODE_PWMSYNC_MASK) /**< FTM0_MODE.PWMSYNC Field                 */
#define FTM_MODE_CAPTEST_MASK                    (0x10U)                                             /**< FTM0_MODE.CAPTEST Mask                  */
#define FTM_MODE_CAPTEST_SHIFT                   (4U)                                                /**< FTM0_MODE.CAPTEST Position              */
#define FTM_MODE_CAPTEST(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_MODE_CAPTEST_SHIFT))&FTM_MODE_CAPTEST_MASK) /**< FTM0_MODE.CAPTEST Field                 */
#define FTM_MODE_FAULTM_MASK                     (0x60U)                                             /**< FTM0_MODE.FAULTM Mask                   */
#define FTM_MODE_FAULTM_SHIFT                    (5U)                                                /**< FTM0_MODE.FAULTM Position               */
#define FTM_MODE_FAULTM(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_MODE_FAULTM_SHIFT))&FTM_MODE_FAULTM_MASK) /**< FTM0_MODE.FAULTM Field                  */
#define FTM_MODE_FAULTIE_MASK                    (0x80U)                                             /**< FTM0_MODE.FAULTIE Mask                  */
#define FTM_MODE_FAULTIE_SHIFT                   (7U)                                                /**< FTM0_MODE.FAULTIE Position              */
#define FTM_MODE_FAULTIE(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_MODE_FAULTIE_SHIFT))&FTM_MODE_FAULTIE_MASK) /**< FTM0_MODE.FAULTIE Field                 */
/** @} */

/** @name SYNC - Synchronization */ /** @{ */
#define FTM_SYNC_CNTMIN_MASK                     (0x1U)                                              /**< FTM0_SYNC.CNTMIN Mask                   */
#define FTM_SYNC_CNTMIN_SHIFT                    (0U)                                                /**< FTM0_SYNC.CNTMIN Position               */
#define FTM_SYNC_CNTMIN(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_CNTMIN_SHIFT))&FTM_SYNC_CNTMIN_MASK) /**< FTM0_SYNC.CNTMIN Field                  */
#define FTM_SYNC_CNTMAX_MASK                     (0x2U)                                              /**< FTM0_SYNC.CNTMAX Mask                   */
#define FTM_SYNC_CNTMAX_SHIFT                    (1U)                                                /**< FTM0_SYNC.CNTMAX Position               */
#define FTM_SYNC_CNTMAX(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_CNTMAX_SHIFT))&FTM_SYNC_CNTMAX_MASK) /**< FTM0_SYNC.CNTMAX Field                  */
#define FTM_SYNC_REINIT_MASK                     (0x4U)                                              /**< FTM0_SYNC.REINIT Mask                   */
#define FTM_SYNC_REINIT_SHIFT                    (2U)                                                /**< FTM0_SYNC.REINIT Position               */
#define FTM_SYNC_REINIT(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_REINIT_SHIFT))&FTM_SYNC_REINIT_MASK) /**< FTM0_SYNC.REINIT Field                  */
#define FTM_SYNC_SYNCHOM_MASK                    (0x8U)                                              /**< FTM0_SYNC.SYNCHOM Mask                  */
#define FTM_SYNC_SYNCHOM_SHIFT                   (3U)                                                /**< FTM0_SYNC.SYNCHOM Position              */
#define FTM_SYNC_SYNCHOM(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_SYNCHOM_SHIFT))&FTM_SYNC_SYNCHOM_MASK) /**< FTM0_SYNC.SYNCHOM Field                 */
#define FTM_SYNC_TRIG0_MASK                      (0x10U)                                             /**< FTM0_SYNC.TRIG0 Mask                    */
#define FTM_SYNC_TRIG0_SHIFT                     (4U)                                                /**< FTM0_SYNC.TRIG0 Position                */
#define FTM_SYNC_TRIG0(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_TRIG0_SHIFT))&FTM_SYNC_TRIG0_MASK) /**< FTM0_SYNC.TRIG0 Field                   */
#define FTM_SYNC_TRIG1_MASK                      (0x20U)                                             /**< FTM0_SYNC.TRIG1 Mask                    */
#define FTM_SYNC_TRIG1_SHIFT                     (5U)                                                /**< FTM0_SYNC.TRIG1 Position                */
#define FTM_SYNC_TRIG1(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_TRIG1_SHIFT))&FTM_SYNC_TRIG1_MASK) /**< FTM0_SYNC.TRIG1 Field                   */
#define FTM_SYNC_TRIG2_MASK                      (0x40U)                                             /**< FTM0_SYNC.TRIG2 Mask                    */
#define FTM_SYNC_TRIG2_SHIFT                     (6U)                                                /**< FTM0_SYNC.TRIG2 Position                */
#define FTM_SYNC_TRIG2(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_TRIG2_SHIFT))&FTM_SYNC_TRIG2_MASK) /**< FTM0_SYNC.TRIG2 Field                   */
#define FTM_SYNC_SWSYNC_MASK                     (0x80U)                                             /**< FTM0_SYNC.SWSYNC Mask                   */
#define FTM_SYNC_SWSYNC_SHIFT                    (7U)                                                /**< FTM0_SYNC.SWSYNC Position               */
#define FTM_SYNC_SWSYNC(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_SYNC_SWSYNC_SHIFT))&FTM_SYNC_SWSYNC_MASK) /**< FTM0_SYNC.SWSYNC Field                  */
/** @} */

/** @name OUTINIT - Initial State for Channels Output */ /** @{ */
#define FTM_OUTINIT_CH0OI_MASK                   (0x1U)                                              /**< FTM0_OUTINIT.CH0OI Mask                 */
#define FTM_OUTINIT_CH0OI_SHIFT                  (0U)                                                /**< FTM0_OUTINIT.CH0OI Position             */
#define FTM_OUTINIT_CH0OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH0OI_SHIFT))&FTM_OUTINIT_CH0OI_MASK) /**< FTM0_OUTINIT.CH0OI Field                */
#define FTM_OUTINIT_CH1OI_MASK                   (0x2U)                                              /**< FTM0_OUTINIT.CH1OI Mask                 */
#define FTM_OUTINIT_CH1OI_SHIFT                  (1U)                                                /**< FTM0_OUTINIT.CH1OI Position             */
#define FTM_OUTINIT_CH1OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH1OI_SHIFT))&FTM_OUTINIT_CH1OI_MASK) /**< FTM0_OUTINIT.CH1OI Field                */
#define FTM_OUTINIT_CH2OI_MASK                   (0x4U)                                              /**< FTM0_OUTINIT.CH2OI Mask                 */
#define FTM_OUTINIT_CH2OI_SHIFT                  (2U)                                                /**< FTM0_OUTINIT.CH2OI Position             */
#define FTM_OUTINIT_CH2OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH2OI_SHIFT))&FTM_OUTINIT_CH2OI_MASK) /**< FTM0_OUTINIT.CH2OI Field                */
#define FTM_OUTINIT_CH3OI_MASK                   (0x8U)                                              /**< FTM0_OUTINIT.CH3OI Mask                 */
#define FTM_OUTINIT_CH3OI_SHIFT                  (3U)                                                /**< FTM0_OUTINIT.CH3OI Position             */
#define FTM_OUTINIT_CH3OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH3OI_SHIFT))&FTM_OUTINIT_CH3OI_MASK) /**< FTM0_OUTINIT.CH3OI Field                */
#define FTM_OUTINIT_CH4OI_MASK                   (0x10U)                                             /**< FTM0_OUTINIT.CH4OI Mask                 */
#define FTM_OUTINIT_CH4OI_SHIFT                  (4U)                                                /**< FTM0_OUTINIT.CH4OI Position             */
#define FTM_OUTINIT_CH4OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH4OI_SHIFT))&FTM_OUTINIT_CH4OI_MASK) /**< FTM0_OUTINIT.CH4OI Field                */
#define FTM_OUTINIT_CH5OI_MASK                   (0x20U)                                             /**< FTM0_OUTINIT.CH5OI Mask                 */
#define FTM_OUTINIT_CH5OI_SHIFT                  (5U)                                                /**< FTM0_OUTINIT.CH5OI Position             */
#define FTM_OUTINIT_CH5OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH5OI_SHIFT))&FTM_OUTINIT_CH5OI_MASK) /**< FTM0_OUTINIT.CH5OI Field                */
#define FTM_OUTINIT_CH6OI_MASK                   (0x40U)                                             /**< FTM0_OUTINIT.CH6OI Mask                 */
#define FTM_OUTINIT_CH6OI_SHIFT                  (6U)                                                /**< FTM0_OUTINIT.CH6OI Position             */
#define FTM_OUTINIT_CH6OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH6OI_SHIFT))&FTM_OUTINIT_CH6OI_MASK) /**< FTM0_OUTINIT.CH6OI Field                */
#define FTM_OUTINIT_CH7OI_MASK                   (0x80U)                                             /**< FTM0_OUTINIT.CH7OI Mask                 */
#define FTM_OUTINIT_CH7OI_SHIFT                  (7U)                                                /**< FTM0_OUTINIT.CH7OI Position             */
#define FTM_OUTINIT_CH7OI(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTINIT_CH7OI_SHIFT))&FTM_OUTINIT_CH7OI_MASK) /**< FTM0_OUTINIT.CH7OI Field                */
/** @} */

/** @name OUTMASK - Output Mask */ /** @{ */
#define FTM_OUTMASK_CH0OM_MASK                   (0x1U)                                              /**< FTM0_OUTMASK.CH0OM Mask                 */
#define FTM_OUTMASK_CH0OM_SHIFT                  (0U)                                                /**< FTM0_OUTMASK.CH0OM Position             */
#define FTM_OUTMASK_CH0OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH0OM_SHIFT))&FTM_OUTMASK_CH0OM_MASK) /**< FTM0_OUTMASK.CH0OM Field                */
#define FTM_OUTMASK_CH1OM_MASK                   (0x2U)                                              /**< FTM0_OUTMASK.CH1OM Mask                 */
#define FTM_OUTMASK_CH1OM_SHIFT                  (1U)                                                /**< FTM0_OUTMASK.CH1OM Position             */
#define FTM_OUTMASK_CH1OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH1OM_SHIFT))&FTM_OUTMASK_CH1OM_MASK) /**< FTM0_OUTMASK.CH1OM Field                */
#define FTM_OUTMASK_CH2OM_MASK                   (0x4U)                                              /**< FTM0_OUTMASK.CH2OM Mask                 */
#define FTM_OUTMASK_CH2OM_SHIFT                  (2U)                                                /**< FTM0_OUTMASK.CH2OM Position             */
#define FTM_OUTMASK_CH2OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH2OM_SHIFT))&FTM_OUTMASK_CH2OM_MASK) /**< FTM0_OUTMASK.CH2OM Field                */
#define FTM_OUTMASK_CH3OM_MASK                   (0x8U)                                              /**< FTM0_OUTMASK.CH3OM Mask                 */
#define FTM_OUTMASK_CH3OM_SHIFT                  (3U)                                                /**< FTM0_OUTMASK.CH3OM Position             */
#define FTM_OUTMASK_CH3OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH3OM_SHIFT))&FTM_OUTMASK_CH3OM_MASK) /**< FTM0_OUTMASK.CH3OM Field                */
#define FTM_OUTMASK_CH4OM_MASK                   (0x10U)                                             /**< FTM0_OUTMASK.CH4OM Mask                 */
#define FTM_OUTMASK_CH4OM_SHIFT                  (4U)                                                /**< FTM0_OUTMASK.CH4OM Position             */
#define FTM_OUTMASK_CH4OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH4OM_SHIFT))&FTM_OUTMASK_CH4OM_MASK) /**< FTM0_OUTMASK.CH4OM Field                */
#define FTM_OUTMASK_CH5OM_MASK                   (0x20U)                                             /**< FTM0_OUTMASK.CH5OM Mask                 */
#define FTM_OUTMASK_CH5OM_SHIFT                  (5U)                                                /**< FTM0_OUTMASK.CH5OM Position             */
#define FTM_OUTMASK_CH5OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH5OM_SHIFT))&FTM_OUTMASK_CH5OM_MASK) /**< FTM0_OUTMASK.CH5OM Field                */
#define FTM_OUTMASK_CH6OM_MASK                   (0x40U)                                             /**< FTM0_OUTMASK.CH6OM Mask                 */
#define FTM_OUTMASK_CH6OM_SHIFT                  (6U)                                                /**< FTM0_OUTMASK.CH6OM Position             */
#define FTM_OUTMASK_CH6OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH6OM_SHIFT))&FTM_OUTMASK_CH6OM_MASK) /**< FTM0_OUTMASK.CH6OM Field                */
#define FTM_OUTMASK_CH7OM_MASK                   (0x80U)                                             /**< FTM0_OUTMASK.CH7OM Mask                 */
#define FTM_OUTMASK_CH7OM_SHIFT                  (7U)                                                /**< FTM0_OUTMASK.CH7OM Position             */
#define FTM_OUTMASK_CH7OM(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_OUTMASK_CH7OM_SHIFT))&FTM_OUTMASK_CH7OM_MASK) /**< FTM0_OUTMASK.CH7OM Field                */
/** @} */

/** @name COMBINE - Function for Linked Channels */ /** @{ */
#define FTM_COMBINE_COMBINE0_MASK                (0x1U)                                              /**< FTM0_COMBINE.COMBINE0 Mask              */
#define FTM_COMBINE_COMBINE0_SHIFT               (0U)                                                /**< FTM0_COMBINE.COMBINE0 Position          */
#define FTM_COMBINE_COMBINE0(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMBINE0_SHIFT))&FTM_COMBINE_COMBINE0_MASK) /**< FTM0_COMBINE.COMBINE0 Field             */
#define FTM_COMBINE_COMP0_MASK                   (0x2U)                                              /**< FTM0_COMBINE.COMP0 Mask                 */
#define FTM_COMBINE_COMP0_SHIFT                  (1U)                                                /**< FTM0_COMBINE.COMP0 Position             */
#define FTM_COMBINE_COMP0(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMP0_SHIFT))&FTM_COMBINE_COMP0_MASK) /**< FTM0_COMBINE.COMP0 Field                */
#define FTM_COMBINE_DECAPEN0_MASK                (0x4U)                                              /**< FTM0_COMBINE.DECAPEN0 Mask              */
#define FTM_COMBINE_DECAPEN0_SHIFT               (2U)                                                /**< FTM0_COMBINE.DECAPEN0 Position          */
#define FTM_COMBINE_DECAPEN0(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAPEN0_SHIFT))&FTM_COMBINE_DECAPEN0_MASK) /**< FTM0_COMBINE.DECAPEN0 Field             */
#define FTM_COMBINE_DECAP0_MASK                  (0x8U)                                              /**< FTM0_COMBINE.DECAP0 Mask                */
#define FTM_COMBINE_DECAP0_SHIFT                 (3U)                                                /**< FTM0_COMBINE.DECAP0 Position            */
#define FTM_COMBINE_DECAP0(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAP0_SHIFT))&FTM_COMBINE_DECAP0_MASK) /**< FTM0_COMBINE.DECAP0 Field               */
#define FTM_COMBINE_DTEN0_MASK                   (0x10U)                                             /**< FTM0_COMBINE.DTEN0 Mask                 */
#define FTM_COMBINE_DTEN0_SHIFT                  (4U)                                                /**< FTM0_COMBINE.DTEN0 Position             */
#define FTM_COMBINE_DTEN0(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DTEN0_SHIFT))&FTM_COMBINE_DTEN0_MASK) /**< FTM0_COMBINE.DTEN0 Field                */
#define FTM_COMBINE_SYNCEN0_MASK                 (0x20U)                                             /**< FTM0_COMBINE.SYNCEN0 Mask               */
#define FTM_COMBINE_SYNCEN0_SHIFT                (5U)                                                /**< FTM0_COMBINE.SYNCEN0 Position           */
#define FTM_COMBINE_SYNCEN0(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_SYNCEN0_SHIFT))&FTM_COMBINE_SYNCEN0_MASK) /**< FTM0_COMBINE.SYNCEN0 Field              */
#define FTM_COMBINE_FAULTEN0_MASK                (0x40U)                                             /**< FTM0_COMBINE.FAULTEN0 Mask              */
#define FTM_COMBINE_FAULTEN0_SHIFT               (6U)                                                /**< FTM0_COMBINE.FAULTEN0 Position          */
#define FTM_COMBINE_FAULTEN0(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_FAULTEN0_SHIFT))&FTM_COMBINE_FAULTEN0_MASK) /**< FTM0_COMBINE.FAULTEN0 Field             */
#define FTM_COMBINE_COMBINE1_MASK                (0x100U)                                            /**< FTM0_COMBINE.COMBINE1 Mask              */
#define FTM_COMBINE_COMBINE1_SHIFT               (8U)                                                /**< FTM0_COMBINE.COMBINE1 Position          */
#define FTM_COMBINE_COMBINE1(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMBINE1_SHIFT))&FTM_COMBINE_COMBINE1_MASK) /**< FTM0_COMBINE.COMBINE1 Field             */
#define FTM_COMBINE_COMP1_MASK                   (0x200U)                                            /**< FTM0_COMBINE.COMP1 Mask                 */
#define FTM_COMBINE_COMP1_SHIFT                  (9U)                                                /**< FTM0_COMBINE.COMP1 Position             */
#define FTM_COMBINE_COMP1(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMP1_SHIFT))&FTM_COMBINE_COMP1_MASK) /**< FTM0_COMBINE.COMP1 Field                */
#define FTM_COMBINE_DECAPEN1_MASK                (0x400U)                                            /**< FTM0_COMBINE.DECAPEN1 Mask              */
#define FTM_COMBINE_DECAPEN1_SHIFT               (10U)                                               /**< FTM0_COMBINE.DECAPEN1 Position          */
#define FTM_COMBINE_DECAPEN1(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAPEN1_SHIFT))&FTM_COMBINE_DECAPEN1_MASK) /**< FTM0_COMBINE.DECAPEN1 Field             */
#define FTM_COMBINE_DECAP1_MASK                  (0x800U)                                            /**< FTM0_COMBINE.DECAP1 Mask                */
#define FTM_COMBINE_DECAP1_SHIFT                 (11U)                                               /**< FTM0_COMBINE.DECAP1 Position            */
#define FTM_COMBINE_DECAP1(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAP1_SHIFT))&FTM_COMBINE_DECAP1_MASK) /**< FTM0_COMBINE.DECAP1 Field               */
#define FTM_COMBINE_DTEN1_MASK                   (0x1000U)                                           /**< FTM0_COMBINE.DTEN1 Mask                 */
#define FTM_COMBINE_DTEN1_SHIFT                  (12U)                                               /**< FTM0_COMBINE.DTEN1 Position             */
#define FTM_COMBINE_DTEN1(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DTEN1_SHIFT))&FTM_COMBINE_DTEN1_MASK) /**< FTM0_COMBINE.DTEN1 Field                */
#define FTM_COMBINE_SYNCEN1_MASK                 (0x2000U)                                           /**< FTM0_COMBINE.SYNCEN1 Mask               */
#define FTM_COMBINE_SYNCEN1_SHIFT                (13U)                                               /**< FTM0_COMBINE.SYNCEN1 Position           */
#define FTM_COMBINE_SYNCEN1(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_SYNCEN1_SHIFT))&FTM_COMBINE_SYNCEN1_MASK) /**< FTM0_COMBINE.SYNCEN1 Field              */
#define FTM_COMBINE_FAULTEN1_MASK                (0x4000U)                                           /**< FTM0_COMBINE.FAULTEN1 Mask              */
#define FTM_COMBINE_FAULTEN1_SHIFT               (14U)                                               /**< FTM0_COMBINE.FAULTEN1 Position          */
#define FTM_COMBINE_FAULTEN1(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_FAULTEN1_SHIFT))&FTM_COMBINE_FAULTEN1_MASK) /**< FTM0_COMBINE.FAULTEN1 Field             */
#define FTM_COMBINE_COMBINE2_MASK                (0x10000U)                                          /**< FTM0_COMBINE.COMBINE2 Mask              */
#define FTM_COMBINE_COMBINE2_SHIFT               (16U)                                               /**< FTM0_COMBINE.COMBINE2 Position          */
#define FTM_COMBINE_COMBINE2(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMBINE2_SHIFT))&FTM_COMBINE_COMBINE2_MASK) /**< FTM0_COMBINE.COMBINE2 Field             */
#define FTM_COMBINE_COMP2_MASK                   (0x20000U)                                          /**< FTM0_COMBINE.COMP2 Mask                 */
#define FTM_COMBINE_COMP2_SHIFT                  (17U)                                               /**< FTM0_COMBINE.COMP2 Position             */
#define FTM_COMBINE_COMP2(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMP2_SHIFT))&FTM_COMBINE_COMP2_MASK) /**< FTM0_COMBINE.COMP2 Field                */
#define FTM_COMBINE_DECAPEN2_MASK                (0x40000U)                                          /**< FTM0_COMBINE.DECAPEN2 Mask              */
#define FTM_COMBINE_DECAPEN2_SHIFT               (18U)                                               /**< FTM0_COMBINE.DECAPEN2 Position          */
#define FTM_COMBINE_DECAPEN2(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAPEN2_SHIFT))&FTM_COMBINE_DECAPEN2_MASK) /**< FTM0_COMBINE.DECAPEN2 Field             */
#define FTM_COMBINE_DECAP2_MASK                  (0x80000U)                                          /**< FTM0_COMBINE.DECAP2 Mask                */
#define FTM_COMBINE_DECAP2_SHIFT                 (19U)                                               /**< FTM0_COMBINE.DECAP2 Position            */
#define FTM_COMBINE_DECAP2(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAP2_SHIFT))&FTM_COMBINE_DECAP2_MASK) /**< FTM0_COMBINE.DECAP2 Field               */
#define FTM_COMBINE_DTEN2_MASK                   (0x100000U)                                         /**< FTM0_COMBINE.DTEN2 Mask                 */
#define FTM_COMBINE_DTEN2_SHIFT                  (20U)                                               /**< FTM0_COMBINE.DTEN2 Position             */
#define FTM_COMBINE_DTEN2(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DTEN2_SHIFT))&FTM_COMBINE_DTEN2_MASK) /**< FTM0_COMBINE.DTEN2 Field                */
#define FTM_COMBINE_SYNCEN2_MASK                 (0x200000U)                                         /**< FTM0_COMBINE.SYNCEN2 Mask               */
#define FTM_COMBINE_SYNCEN2_SHIFT                (21U)                                               /**< FTM0_COMBINE.SYNCEN2 Position           */
#define FTM_COMBINE_SYNCEN2(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_SYNCEN2_SHIFT))&FTM_COMBINE_SYNCEN2_MASK) /**< FTM0_COMBINE.SYNCEN2 Field              */
#define FTM_COMBINE_FAULTEN2_MASK                (0x400000U)                                         /**< FTM0_COMBINE.FAULTEN2 Mask              */
#define FTM_COMBINE_FAULTEN2_SHIFT               (22U)                                               /**< FTM0_COMBINE.FAULTEN2 Position          */
#define FTM_COMBINE_FAULTEN2(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_FAULTEN2_SHIFT))&FTM_COMBINE_FAULTEN2_MASK) /**< FTM0_COMBINE.FAULTEN2 Field             */
#define FTM_COMBINE_COMBINE3_MASK                (0x1000000U)                                        /**< FTM0_COMBINE.COMBINE3 Mask              */
#define FTM_COMBINE_COMBINE3_SHIFT               (24U)                                               /**< FTM0_COMBINE.COMBINE3 Position          */
#define FTM_COMBINE_COMBINE3(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMBINE3_SHIFT))&FTM_COMBINE_COMBINE3_MASK) /**< FTM0_COMBINE.COMBINE3 Field             */
#define FTM_COMBINE_COMP3_MASK                   (0x2000000U)                                        /**< FTM0_COMBINE.COMP3 Mask                 */
#define FTM_COMBINE_COMP3_SHIFT                  (25U)                                               /**< FTM0_COMBINE.COMP3 Position             */
#define FTM_COMBINE_COMP3(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_COMP3_SHIFT))&FTM_COMBINE_COMP3_MASK) /**< FTM0_COMBINE.COMP3 Field                */
#define FTM_COMBINE_DECAPEN3_MASK                (0x4000000U)                                        /**< FTM0_COMBINE.DECAPEN3 Mask              */
#define FTM_COMBINE_DECAPEN3_SHIFT               (26U)                                               /**< FTM0_COMBINE.DECAPEN3 Position          */
#define FTM_COMBINE_DECAPEN3(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAPEN3_SHIFT))&FTM_COMBINE_DECAPEN3_MASK) /**< FTM0_COMBINE.DECAPEN3 Field             */
#define FTM_COMBINE_DECAP3_MASK                  (0x8000000U)                                        /**< FTM0_COMBINE.DECAP3 Mask                */
#define FTM_COMBINE_DECAP3_SHIFT                 (27U)                                               /**< FTM0_COMBINE.DECAP3 Position            */
#define FTM_COMBINE_DECAP3(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DECAP3_SHIFT))&FTM_COMBINE_DECAP3_MASK) /**< FTM0_COMBINE.DECAP3 Field               */
#define FTM_COMBINE_DTEN3_MASK                   (0x10000000U)                                       /**< FTM0_COMBINE.DTEN3 Mask                 */
#define FTM_COMBINE_DTEN3_SHIFT                  (28U)                                               /**< FTM0_COMBINE.DTEN3 Position             */
#define FTM_COMBINE_DTEN3(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_DTEN3_SHIFT))&FTM_COMBINE_DTEN3_MASK) /**< FTM0_COMBINE.DTEN3 Field                */
#define FTM_COMBINE_SYNCEN3_MASK                 (0x20000000U)                                       /**< FTM0_COMBINE.SYNCEN3 Mask               */
#define FTM_COMBINE_SYNCEN3_SHIFT                (29U)                                               /**< FTM0_COMBINE.SYNCEN3 Position           */
#define FTM_COMBINE_SYNCEN3(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_SYNCEN3_SHIFT))&FTM_COMBINE_SYNCEN3_MASK) /**< FTM0_COMBINE.SYNCEN3 Field              */
#define FTM_COMBINE_FAULTEN3_MASK                (0x40000000U)                                       /**< FTM0_COMBINE.FAULTEN3 Mask              */
#define FTM_COMBINE_FAULTEN3_SHIFT               (30U)                                               /**< FTM0_COMBINE.FAULTEN3 Position          */
#define FTM_COMBINE_FAULTEN3(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_COMBINE_FAULTEN3_SHIFT))&FTM_COMBINE_FAULTEN3_MASK) /**< FTM0_COMBINE.FAULTEN3 Field             */
/** @} */

/** @name DEADTIME - Deadtime Insertion Control */ /** @{ */
#define FTM_DEADTIME_DTVAL_MASK                  (0x3FU)                                             /**< FTM0_DEADTIME.DTVAL Mask                */
#define FTM_DEADTIME_DTVAL_SHIFT                 (0U)                                                /**< FTM0_DEADTIME.DTVAL Position            */
#define FTM_DEADTIME_DTVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_DEADTIME_DTVAL_SHIFT))&FTM_DEADTIME_DTVAL_MASK) /**< FTM0_DEADTIME.DTVAL Field               */
#define FTM_DEADTIME_DTPS_MASK                   (0xC0U)                                             /**< FTM0_DEADTIME.DTPS Mask                 */
#define FTM_DEADTIME_DTPS_SHIFT                  (6U)                                                /**< FTM0_DEADTIME.DTPS Position             */
#define FTM_DEADTIME_DTPS(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_DEADTIME_DTPS_SHIFT))&FTM_DEADTIME_DTPS_MASK) /**< FTM0_DEADTIME.DTPS Field                */
/** @} */

/** @name EXTTRIG - FTM External Trigger */ /** @{ */
#define FTM_EXTTRIG_CH2TRIG_MASK                 (0x1U)                                              /**< FTM0_EXTTRIG.CH2TRIG Mask               */
#define FTM_EXTTRIG_CH2TRIG_SHIFT                (0U)                                                /**< FTM0_EXTTRIG.CH2TRIG Position           */
#define FTM_EXTTRIG_CH2TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH2TRIG_SHIFT))&FTM_EXTTRIG_CH2TRIG_MASK) /**< FTM0_EXTTRIG.CH2TRIG Field              */
#define FTM_EXTTRIG_CH3TRIG_MASK                 (0x2U)                                              /**< FTM0_EXTTRIG.CH3TRIG Mask               */
#define FTM_EXTTRIG_CH3TRIG_SHIFT                (1U)                                                /**< FTM0_EXTTRIG.CH3TRIG Position           */
#define FTM_EXTTRIG_CH3TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH3TRIG_SHIFT))&FTM_EXTTRIG_CH3TRIG_MASK) /**< FTM0_EXTTRIG.CH3TRIG Field              */
#define FTM_EXTTRIG_CH4TRIG_MASK                 (0x4U)                                              /**< FTM0_EXTTRIG.CH4TRIG Mask               */
#define FTM_EXTTRIG_CH4TRIG_SHIFT                (2U)                                                /**< FTM0_EXTTRIG.CH4TRIG Position           */
#define FTM_EXTTRIG_CH4TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH4TRIG_SHIFT))&FTM_EXTTRIG_CH4TRIG_MASK) /**< FTM0_EXTTRIG.CH4TRIG Field              */
#define FTM_EXTTRIG_CH5TRIG_MASK                 (0x8U)                                              /**< FTM0_EXTTRIG.CH5TRIG Mask               */
#define FTM_EXTTRIG_CH5TRIG_SHIFT                (3U)                                                /**< FTM0_EXTTRIG.CH5TRIG Position           */
#define FTM_EXTTRIG_CH5TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH5TRIG_SHIFT))&FTM_EXTTRIG_CH5TRIG_MASK) /**< FTM0_EXTTRIG.CH5TRIG Field              */
#define FTM_EXTTRIG_CH0TRIG_MASK                 (0x10U)                                             /**< FTM0_EXTTRIG.CH0TRIG Mask               */
#define FTM_EXTTRIG_CH0TRIG_SHIFT                (4U)                                                /**< FTM0_EXTTRIG.CH0TRIG Position           */
#define FTM_EXTTRIG_CH0TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH0TRIG_SHIFT))&FTM_EXTTRIG_CH0TRIG_MASK) /**< FTM0_EXTTRIG.CH0TRIG Field              */
#define FTM_EXTTRIG_CH1TRIG_MASK                 (0x20U)                                             /**< FTM0_EXTTRIG.CH1TRIG Mask               */
#define FTM_EXTTRIG_CH1TRIG_SHIFT                (5U)                                                /**< FTM0_EXTTRIG.CH1TRIG Position           */
#define FTM_EXTTRIG_CH1TRIG(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_CH1TRIG_SHIFT))&FTM_EXTTRIG_CH1TRIG_MASK) /**< FTM0_EXTTRIG.CH1TRIG Field              */
#define FTM_EXTTRIG_INITTRIGEN_MASK              (0x40U)                                             /**< FTM0_EXTTRIG.INITTRIGEN Mask            */
#define FTM_EXTTRIG_INITTRIGEN_SHIFT             (6U)                                                /**< FTM0_EXTTRIG.INITTRIGEN Position        */
#define FTM_EXTTRIG_INITTRIGEN(x)                (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_INITTRIGEN_SHIFT))&FTM_EXTTRIG_INITTRIGEN_MASK) /**< FTM0_EXTTRIG.INITTRIGEN Field           */
#define FTM_EXTTRIG_TRIGF_MASK                   (0x80U)                                             /**< FTM0_EXTTRIG.TRIGF Mask                 */
#define FTM_EXTTRIG_TRIGF_SHIFT                  (7U)                                                /**< FTM0_EXTTRIG.TRIGF Position             */
#define FTM_EXTTRIG_TRIGF(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_EXTTRIG_TRIGF_SHIFT))&FTM_EXTTRIG_TRIGF_MASK) /**< FTM0_EXTTRIG.TRIGF Field                */
/** @} */

/** @name POL - Channels Polarity */ /** @{ */
#define FTM_POL_POL0_MASK                        (0x1U)                                              /**< FTM0_POL.POL0 Mask                      */
#define FTM_POL_POL0_SHIFT                       (0U)                                                /**< FTM0_POL.POL0 Position                  */
#define FTM_POL_POL0(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL0_SHIFT))&FTM_POL_POL0_MASK) /**< FTM0_POL.POL0 Field                     */
#define FTM_POL_POL1_MASK                        (0x2U)                                              /**< FTM0_POL.POL1 Mask                      */
#define FTM_POL_POL1_SHIFT                       (1U)                                                /**< FTM0_POL.POL1 Position                  */
#define FTM_POL_POL1(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL1_SHIFT))&FTM_POL_POL1_MASK) /**< FTM0_POL.POL1 Field                     */
#define FTM_POL_POL2_MASK                        (0x4U)                                              /**< FTM0_POL.POL2 Mask                      */
#define FTM_POL_POL2_SHIFT                       (2U)                                                /**< FTM0_POL.POL2 Position                  */
#define FTM_POL_POL2(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL2_SHIFT))&FTM_POL_POL2_MASK) /**< FTM0_POL.POL2 Field                     */
#define FTM_POL_POL3_MASK                        (0x8U)                                              /**< FTM0_POL.POL3 Mask                      */
#define FTM_POL_POL3_SHIFT                       (3U)                                                /**< FTM0_POL.POL3 Position                  */
#define FTM_POL_POL3(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL3_SHIFT))&FTM_POL_POL3_MASK) /**< FTM0_POL.POL3 Field                     */
#define FTM_POL_POL4_MASK                        (0x10U)                                             /**< FTM0_POL.POL4 Mask                      */
#define FTM_POL_POL4_SHIFT                       (4U)                                                /**< FTM0_POL.POL4 Position                  */
#define FTM_POL_POL4(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL4_SHIFT))&FTM_POL_POL4_MASK) /**< FTM0_POL.POL4 Field                     */
#define FTM_POL_POL5_MASK                        (0x20U)                                             /**< FTM0_POL.POL5 Mask                      */
#define FTM_POL_POL5_SHIFT                       (5U)                                                /**< FTM0_POL.POL5 Position                  */
#define FTM_POL_POL5(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL5_SHIFT))&FTM_POL_POL5_MASK) /**< FTM0_POL.POL5 Field                     */
#define FTM_POL_POL6_MASK                        (0x40U)                                             /**< FTM0_POL.POL6 Mask                      */
#define FTM_POL_POL6_SHIFT                       (6U)                                                /**< FTM0_POL.POL6 Position                  */
#define FTM_POL_POL6(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL6_SHIFT))&FTM_POL_POL6_MASK) /**< FTM0_POL.POL6 Field                     */
#define FTM_POL_POL7_MASK                        (0x80U)                                             /**< FTM0_POL.POL7 Mask                      */
#define FTM_POL_POL7_SHIFT                       (7U)                                                /**< FTM0_POL.POL7 Position                  */
#define FTM_POL_POL7(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_POL_POL7_SHIFT))&FTM_POL_POL7_MASK) /**< FTM0_POL.POL7 Field                     */
/** @} */

/** @name FMS - Fault Mode Status */ /** @{ */
#define FTM_FMS_FAULTF0_MASK                     (0x1U)                                              /**< FTM0_FMS.FAULTF0 Mask                   */
#define FTM_FMS_FAULTF0_SHIFT                    (0U)                                                /**< FTM0_FMS.FAULTF0 Position               */
#define FTM_FMS_FAULTF0(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTF0_SHIFT))&FTM_FMS_FAULTF0_MASK) /**< FTM0_FMS.FAULTF0 Field                  */
#define FTM_FMS_FAULTF1_MASK                     (0x2U)                                              /**< FTM0_FMS.FAULTF1 Mask                   */
#define FTM_FMS_FAULTF1_SHIFT                    (1U)                                                /**< FTM0_FMS.FAULTF1 Position               */
#define FTM_FMS_FAULTF1(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTF1_SHIFT))&FTM_FMS_FAULTF1_MASK) /**< FTM0_FMS.FAULTF1 Field                  */
#define FTM_FMS_FAULTF2_MASK                     (0x4U)                                              /**< FTM0_FMS.FAULTF2 Mask                   */
#define FTM_FMS_FAULTF2_SHIFT                    (2U)                                                /**< FTM0_FMS.FAULTF2 Position               */
#define FTM_FMS_FAULTF2(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTF2_SHIFT))&FTM_FMS_FAULTF2_MASK) /**< FTM0_FMS.FAULTF2 Field                  */
#define FTM_FMS_FAULTF3_MASK                     (0x8U)                                              /**< FTM0_FMS.FAULTF3 Mask                   */
#define FTM_FMS_FAULTF3_SHIFT                    (3U)                                                /**< FTM0_FMS.FAULTF3 Position               */
#define FTM_FMS_FAULTF3(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTF3_SHIFT))&FTM_FMS_FAULTF3_MASK) /**< FTM0_FMS.FAULTF3 Field                  */
#define FTM_FMS_FAULTIN_MASK                     (0x20U)                                             /**< FTM0_FMS.FAULTIN Mask                   */
#define FTM_FMS_FAULTIN_SHIFT                    (5U)                                                /**< FTM0_FMS.FAULTIN Position               */
#define FTM_FMS_FAULTIN(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTIN_SHIFT))&FTM_FMS_FAULTIN_MASK) /**< FTM0_FMS.FAULTIN Field                  */
#define FTM_FMS_WPEN_MASK                        (0x40U)                                             /**< FTM0_FMS.WPEN Mask                      */
#define FTM_FMS_WPEN_SHIFT                       (6U)                                                /**< FTM0_FMS.WPEN Position                  */
#define FTM_FMS_WPEN(x)                          (((uint32_t)(((uint32_t)(x))<<FTM_FMS_WPEN_SHIFT))&FTM_FMS_WPEN_MASK) /**< FTM0_FMS.WPEN Field                     */
#define FTM_FMS_FAULTF_MASK                      (0x80U)                                             /**< FTM0_FMS.FAULTF Mask                    */
#define FTM_FMS_FAULTF_SHIFT                     (7U)                                                /**< FTM0_FMS.FAULTF Position                */
#define FTM_FMS_FAULTF(x)                        (((uint32_t)(((uint32_t)(x))<<FTM_FMS_FAULTF_SHIFT))&FTM_FMS_FAULTF_MASK) /**< FTM0_FMS.FAULTF Field                   */
/** @} */

/** @name FILTER - Input Capture Filter Control */ /** @{ */
#define FTM_FILTER_CH0FVAL_MASK                  (0xFU)                                              /**< FTM0_FILTER.CH0FVAL Mask                */
#define FTM_FILTER_CH0FVAL_SHIFT                 (0U)                                                /**< FTM0_FILTER.CH0FVAL Position            */
#define FTM_FILTER_CH0FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH0FVAL_SHIFT))&FTM_FILTER_CH0FVAL_MASK) /**< FTM0_FILTER.CH0FVAL Field               */
#define FTM_FILTER_CH1FVAL_MASK                  (0xF0U)                                             /**< FTM0_FILTER.CH1FVAL Mask                */
#define FTM_FILTER_CH1FVAL_SHIFT                 (4U)                                                /**< FTM0_FILTER.CH1FVAL Position            */
#define FTM_FILTER_CH1FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH1FVAL_SHIFT))&FTM_FILTER_CH1FVAL_MASK) /**< FTM0_FILTER.CH1FVAL Field               */
#define FTM_FILTER_CH2FVAL_MASK                  (0xF00U)                                            /**< FTM0_FILTER.CH2FVAL Mask                */
#define FTM_FILTER_CH2FVAL_SHIFT                 (8U)                                                /**< FTM0_FILTER.CH2FVAL Position            */
#define FTM_FILTER_CH2FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH2FVAL_SHIFT))&FTM_FILTER_CH2FVAL_MASK) /**< FTM0_FILTER.CH2FVAL Field               */
#define FTM_FILTER_CH3FVAL_MASK                  (0xF000U)                                           /**< FTM0_FILTER.CH3FVAL Mask                */
#define FTM_FILTER_CH3FVAL_SHIFT                 (12U)                                               /**< FTM0_FILTER.CH3FVAL Position            */
#define FTM_FILTER_CH3FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FILTER_CH3FVAL_SHIFT))&FTM_FILTER_CH3FVAL_MASK) /**< FTM0_FILTER.CH3FVAL Field               */
/** @} */

/** @name FLTCTRL - Fault Control */ /** @{ */
#define FTM_FLTCTRL_FAULT0EN_MASK                (0x1U)                                              /**< FTM0_FLTCTRL.FAULT0EN Mask              */
#define FTM_FLTCTRL_FAULT0EN_SHIFT               (0U)                                                /**< FTM0_FLTCTRL.FAULT0EN Position          */
#define FTM_FLTCTRL_FAULT0EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FAULT0EN_SHIFT))&FTM_FLTCTRL_FAULT0EN_MASK) /**< FTM0_FLTCTRL.FAULT0EN Field             */
#define FTM_FLTCTRL_FAULT1EN_MASK                (0x2U)                                              /**< FTM0_FLTCTRL.FAULT1EN Mask              */
#define FTM_FLTCTRL_FAULT1EN_SHIFT               (1U)                                                /**< FTM0_FLTCTRL.FAULT1EN Position          */
#define FTM_FLTCTRL_FAULT1EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FAULT1EN_SHIFT))&FTM_FLTCTRL_FAULT1EN_MASK) /**< FTM0_FLTCTRL.FAULT1EN Field             */
#define FTM_FLTCTRL_FAULT2EN_MASK                (0x4U)                                              /**< FTM0_FLTCTRL.FAULT2EN Mask              */
#define FTM_FLTCTRL_FAULT2EN_SHIFT               (2U)                                                /**< FTM0_FLTCTRL.FAULT2EN Position          */
#define FTM_FLTCTRL_FAULT2EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FAULT2EN_SHIFT))&FTM_FLTCTRL_FAULT2EN_MASK) /**< FTM0_FLTCTRL.FAULT2EN Field             */
#define FTM_FLTCTRL_FAULT3EN_MASK                (0x8U)                                              /**< FTM0_FLTCTRL.FAULT3EN Mask              */
#define FTM_FLTCTRL_FAULT3EN_SHIFT               (3U)                                                /**< FTM0_FLTCTRL.FAULT3EN Position          */
#define FTM_FLTCTRL_FAULT3EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FAULT3EN_SHIFT))&FTM_FLTCTRL_FAULT3EN_MASK) /**< FTM0_FLTCTRL.FAULT3EN Field             */
#define FTM_FLTCTRL_FFLTR0EN_MASK                (0x10U)                                             /**< FTM0_FLTCTRL.FFLTR0EN Mask              */
#define FTM_FLTCTRL_FFLTR0EN_SHIFT               (4U)                                                /**< FTM0_FLTCTRL.FFLTR0EN Position          */
#define FTM_FLTCTRL_FFLTR0EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFLTR0EN_SHIFT))&FTM_FLTCTRL_FFLTR0EN_MASK) /**< FTM0_FLTCTRL.FFLTR0EN Field             */
#define FTM_FLTCTRL_FFLTR1EN_MASK                (0x20U)                                             /**< FTM0_FLTCTRL.FFLTR1EN Mask              */
#define FTM_FLTCTRL_FFLTR1EN_SHIFT               (5U)                                                /**< FTM0_FLTCTRL.FFLTR1EN Position          */
#define FTM_FLTCTRL_FFLTR1EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFLTR1EN_SHIFT))&FTM_FLTCTRL_FFLTR1EN_MASK) /**< FTM0_FLTCTRL.FFLTR1EN Field             */
#define FTM_FLTCTRL_FFLTR2EN_MASK                (0x40U)                                             /**< FTM0_FLTCTRL.FFLTR2EN Mask              */
#define FTM_FLTCTRL_FFLTR2EN_SHIFT               (6U)                                                /**< FTM0_FLTCTRL.FFLTR2EN Position          */
#define FTM_FLTCTRL_FFLTR2EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFLTR2EN_SHIFT))&FTM_FLTCTRL_FFLTR2EN_MASK) /**< FTM0_FLTCTRL.FFLTR2EN Field             */
#define FTM_FLTCTRL_FFLTR3EN_MASK                (0x80U)                                             /**< FTM0_FLTCTRL.FFLTR3EN Mask              */
#define FTM_FLTCTRL_FFLTR3EN_SHIFT               (7U)                                                /**< FTM0_FLTCTRL.FFLTR3EN Position          */
#define FTM_FLTCTRL_FFLTR3EN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFLTR3EN_SHIFT))&FTM_FLTCTRL_FFLTR3EN_MASK) /**< FTM0_FLTCTRL.FFLTR3EN Field             */
#define FTM_FLTCTRL_FFVAL_MASK                   (0xF00U)                                            /**< FTM0_FLTCTRL.FFVAL Mask                 */
#define FTM_FLTCTRL_FFVAL_SHIFT                  (8U)                                                /**< FTM0_FLTCTRL.FFVAL Position             */
#define FTM_FLTCTRL_FFVAL(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_FLTCTRL_FFVAL_SHIFT))&FTM_FLTCTRL_FFVAL_MASK) /**< FTM0_FLTCTRL.FFVAL Field                */
/** @} */

/** @name CONF - Configuration */ /** @{ */
#define FTM_CONF_NUMTOF_MASK                     (0x1FU)                                             /**< FTM0_CONF.NUMTOF Mask                   */
#define FTM_CONF_NUMTOF_SHIFT                    (0U)                                                /**< FTM0_CONF.NUMTOF Position               */
#define FTM_CONF_NUMTOF(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_CONF_NUMTOF_SHIFT))&FTM_CONF_NUMTOF_MASK) /**< FTM0_CONF.NUMTOF Field                  */
#define FTM_CONF_BDMMODE_MASK                    (0xC0U)                                             /**< FTM0_CONF.BDMMODE Mask                  */
#define FTM_CONF_BDMMODE_SHIFT                   (6U)                                                /**< FTM0_CONF.BDMMODE Position              */
#define FTM_CONF_BDMMODE(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_CONF_BDMMODE_SHIFT))&FTM_CONF_BDMMODE_MASK) /**< FTM0_CONF.BDMMODE Field                 */
#define FTM_CONF_GTBEEN_MASK                     (0x200U)                                            /**< FTM0_CONF.GTBEEN Mask                   */
#define FTM_CONF_GTBEEN_SHIFT                    (9U)                                                /**< FTM0_CONF.GTBEEN Position               */
#define FTM_CONF_GTBEEN(x)                       (((uint32_t)(((uint32_t)(x))<<FTM_CONF_GTBEEN_SHIFT))&FTM_CONF_GTBEEN_MASK) /**< FTM0_CONF.GTBEEN Field                  */
#define FTM_CONF_GTBEOUT_MASK                    (0x400U)                                            /**< FTM0_CONF.GTBEOUT Mask                  */
#define FTM_CONF_GTBEOUT_SHIFT                   (10U)                                               /**< FTM0_CONF.GTBEOUT Position              */
#define FTM_CONF_GTBEOUT(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_CONF_GTBEOUT_SHIFT))&FTM_CONF_GTBEOUT_MASK) /**< FTM0_CONF.GTBEOUT Field                 */
/** @} */

/** @name FLTPOL - FTM Fault Input Polarity */ /** @{ */
#define FTM_FLTPOL_FLT0POL_MASK                  (0x1U)                                              /**< FTM0_FLTPOL.FLT0POL Mask                */
#define FTM_FLTPOL_FLT0POL_SHIFT                 (0U)                                                /**< FTM0_FLTPOL.FLT0POL Position            */
#define FTM_FLTPOL_FLT0POL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FLTPOL_FLT0POL_SHIFT))&FTM_FLTPOL_FLT0POL_MASK) /**< FTM0_FLTPOL.FLT0POL Field               */
#define FTM_FLTPOL_FLT1POL_MASK                  (0x2U)                                              /**< FTM0_FLTPOL.FLT1POL Mask                */
#define FTM_FLTPOL_FLT1POL_SHIFT                 (1U)                                                /**< FTM0_FLTPOL.FLT1POL Position            */
#define FTM_FLTPOL_FLT1POL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FLTPOL_FLT1POL_SHIFT))&FTM_FLTPOL_FLT1POL_MASK) /**< FTM0_FLTPOL.FLT1POL Field               */
#define FTM_FLTPOL_FLT2POL_MASK                  (0x4U)                                              /**< FTM0_FLTPOL.FLT2POL Mask                */
#define FTM_FLTPOL_FLT2POL_SHIFT                 (2U)                                                /**< FTM0_FLTPOL.FLT2POL Position            */
#define FTM_FLTPOL_FLT2POL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FLTPOL_FLT2POL_SHIFT))&FTM_FLTPOL_FLT2POL_MASK) /**< FTM0_FLTPOL.FLT2POL Field               */
#define FTM_FLTPOL_FLT3POL_MASK                  (0x8U)                                              /**< FTM0_FLTPOL.FLT3POL Mask                */
#define FTM_FLTPOL_FLT3POL_SHIFT                 (3U)                                                /**< FTM0_FLTPOL.FLT3POL Position            */
#define FTM_FLTPOL_FLT3POL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_FLTPOL_FLT3POL_SHIFT))&FTM_FLTPOL_FLT3POL_MASK) /**< FTM0_FLTPOL.FLT3POL Field               */
/** @} */

/** @name SYNCONF - Synchronization Configuration */ /** @{ */
#define FTM_SYNCONF_HWTRIGMODE_MASK              (0x1U)                                              /**< FTM0_SYNCONF.HWTRIGMODE Mask            */
#define FTM_SYNCONF_HWTRIGMODE_SHIFT             (0U)                                                /**< FTM0_SYNCONF.HWTRIGMODE Position        */
#define FTM_SYNCONF_HWTRIGMODE(x)                (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWTRIGMODE_SHIFT))&FTM_SYNCONF_HWTRIGMODE_MASK) /**< FTM0_SYNCONF.HWTRIGMODE Field           */
#define FTM_SYNCONF_CNTINC_MASK                  (0x4U)                                              /**< FTM0_SYNCONF.CNTINC Mask                */
#define FTM_SYNCONF_CNTINC_SHIFT                 (2U)                                                /**< FTM0_SYNCONF.CNTINC Position            */
#define FTM_SYNCONF_CNTINC(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_CNTINC_SHIFT))&FTM_SYNCONF_CNTINC_MASK) /**< FTM0_SYNCONF.CNTINC Field               */
#define FTM_SYNCONF_INVC_MASK                    (0x10U)                                             /**< FTM0_SYNCONF.INVC Mask                  */
#define FTM_SYNCONF_INVC_SHIFT                   (4U)                                                /**< FTM0_SYNCONF.INVC Position              */
#define FTM_SYNCONF_INVC(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_INVC_SHIFT))&FTM_SYNCONF_INVC_MASK) /**< FTM0_SYNCONF.INVC Field                 */
#define FTM_SYNCONF_SWOC_MASK                    (0x20U)                                             /**< FTM0_SYNCONF.SWOC Mask                  */
#define FTM_SYNCONF_SWOC_SHIFT                   (5U)                                                /**< FTM0_SYNCONF.SWOC Position              */
#define FTM_SYNCONF_SWOC(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWOC_SHIFT))&FTM_SYNCONF_SWOC_MASK) /**< FTM0_SYNCONF.SWOC Field                 */
#define FTM_SYNCONF_SYNCMODE_MASK                (0x80U)                                             /**< FTM0_SYNCONF.SYNCMODE Mask              */
#define FTM_SYNCONF_SYNCMODE_SHIFT               (7U)                                                /**< FTM0_SYNCONF.SYNCMODE Position          */
#define FTM_SYNCONF_SYNCMODE(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SYNCMODE_SHIFT))&FTM_SYNCONF_SYNCMODE_MASK) /**< FTM0_SYNCONF.SYNCMODE Field             */
#define FTM_SYNCONF_SWRSTCNT_MASK                (0x100U)                                            /**< FTM0_SYNCONF.SWRSTCNT Mask              */
#define FTM_SYNCONF_SWRSTCNT_SHIFT               (8U)                                                /**< FTM0_SYNCONF.SWRSTCNT Position          */
#define FTM_SYNCONF_SWRSTCNT(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWRSTCNT_SHIFT))&FTM_SYNCONF_SWRSTCNT_MASK) /**< FTM0_SYNCONF.SWRSTCNT Field             */
#define FTM_SYNCONF_SWWRBUF_MASK                 (0x200U)                                            /**< FTM0_SYNCONF.SWWRBUF Mask               */
#define FTM_SYNCONF_SWWRBUF_SHIFT                (9U)                                                /**< FTM0_SYNCONF.SWWRBUF Position           */
#define FTM_SYNCONF_SWWRBUF(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWWRBUF_SHIFT))&FTM_SYNCONF_SWWRBUF_MASK) /**< FTM0_SYNCONF.SWWRBUF Field              */
#define FTM_SYNCONF_SWOM_MASK                    (0x400U)                                            /**< FTM0_SYNCONF.SWOM Mask                  */
#define FTM_SYNCONF_SWOM_SHIFT                   (10U)                                               /**< FTM0_SYNCONF.SWOM Position              */
#define FTM_SYNCONF_SWOM(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWOM_SHIFT))&FTM_SYNCONF_SWOM_MASK) /**< FTM0_SYNCONF.SWOM Field                 */
#define FTM_SYNCONF_SWINVC_MASK                  (0x800U)                                            /**< FTM0_SYNCONF.SWINVC Mask                */
#define FTM_SYNCONF_SWINVC_SHIFT                 (11U)                                               /**< FTM0_SYNCONF.SWINVC Position            */
#define FTM_SYNCONF_SWINVC(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWINVC_SHIFT))&FTM_SYNCONF_SWINVC_MASK) /**< FTM0_SYNCONF.SWINVC Field               */
#define FTM_SYNCONF_SWSOC_MASK                   (0x1000U)                                           /**< FTM0_SYNCONF.SWSOC Mask                 */
#define FTM_SYNCONF_SWSOC_SHIFT                  (12U)                                               /**< FTM0_SYNCONF.SWSOC Position             */
#define FTM_SYNCONF_SWSOC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_SWSOC_SHIFT))&FTM_SYNCONF_SWSOC_MASK) /**< FTM0_SYNCONF.SWSOC Field                */
#define FTM_SYNCONF_HWRSTCNT_MASK                (0x10000U)                                          /**< FTM0_SYNCONF.HWRSTCNT Mask              */
#define FTM_SYNCONF_HWRSTCNT_SHIFT               (16U)                                               /**< FTM0_SYNCONF.HWRSTCNT Position          */
#define FTM_SYNCONF_HWRSTCNT(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWRSTCNT_SHIFT))&FTM_SYNCONF_HWRSTCNT_MASK) /**< FTM0_SYNCONF.HWRSTCNT Field             */
#define FTM_SYNCONF_HWWRBUF_MASK                 (0x20000U)                                          /**< FTM0_SYNCONF.HWWRBUF Mask               */
#define FTM_SYNCONF_HWWRBUF_SHIFT                (17U)                                               /**< FTM0_SYNCONF.HWWRBUF Position           */
#define FTM_SYNCONF_HWWRBUF(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWWRBUF_SHIFT))&FTM_SYNCONF_HWWRBUF_MASK) /**< FTM0_SYNCONF.HWWRBUF Field              */
#define FTM_SYNCONF_HWOM_MASK                    (0x40000U)                                          /**< FTM0_SYNCONF.HWOM Mask                  */
#define FTM_SYNCONF_HWOM_SHIFT                   (18U)                                               /**< FTM0_SYNCONF.HWOM Position              */
#define FTM_SYNCONF_HWOM(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWOM_SHIFT))&FTM_SYNCONF_HWOM_MASK) /**< FTM0_SYNCONF.HWOM Field                 */
#define FTM_SYNCONF_HWINVC_MASK                  (0x80000U)                                          /**< FTM0_SYNCONF.HWINVC Mask                */
#define FTM_SYNCONF_HWINVC_SHIFT                 (19U)                                               /**< FTM0_SYNCONF.HWINVC Position            */
#define FTM_SYNCONF_HWINVC(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWINVC_SHIFT))&FTM_SYNCONF_HWINVC_MASK) /**< FTM0_SYNCONF.HWINVC Field               */
#define FTM_SYNCONF_HWSOC_MASK                   (0x100000U)                                         /**< FTM0_SYNCONF.HWSOC Mask                 */
#define FTM_SYNCONF_HWSOC_SHIFT                  (20U)                                               /**< FTM0_SYNCONF.HWSOC Position             */
#define FTM_SYNCONF_HWSOC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SYNCONF_HWSOC_SHIFT))&FTM_SYNCONF_HWSOC_MASK) /**< FTM0_SYNCONF.HWSOC Field                */
/** @} */

/** @name INVCTRL - FTM Inverting Control */ /** @{ */
#define FTM_INVCTRL_INV0EN_MASK                  (0x1U)                                              /**< FTM0_INVCTRL.INV0EN Mask                */
#define FTM_INVCTRL_INV0EN_SHIFT                 (0U)                                                /**< FTM0_INVCTRL.INV0EN Position            */
#define FTM_INVCTRL_INV0EN(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_INVCTRL_INV0EN_SHIFT))&FTM_INVCTRL_INV0EN_MASK) /**< FTM0_INVCTRL.INV0EN Field               */
#define FTM_INVCTRL_INV1EN_MASK                  (0x2U)                                              /**< FTM0_INVCTRL.INV1EN Mask                */
#define FTM_INVCTRL_INV1EN_SHIFT                 (1U)                                                /**< FTM0_INVCTRL.INV1EN Position            */
#define FTM_INVCTRL_INV1EN(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_INVCTRL_INV1EN_SHIFT))&FTM_INVCTRL_INV1EN_MASK) /**< FTM0_INVCTRL.INV1EN Field               */
#define FTM_INVCTRL_INV2EN_MASK                  (0x4U)                                              /**< FTM0_INVCTRL.INV2EN Mask                */
#define FTM_INVCTRL_INV2EN_SHIFT                 (2U)                                                /**< FTM0_INVCTRL.INV2EN Position            */
#define FTM_INVCTRL_INV2EN(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_INVCTRL_INV2EN_SHIFT))&FTM_INVCTRL_INV2EN_MASK) /**< FTM0_INVCTRL.INV2EN Field               */
#define FTM_INVCTRL_INV3EN_MASK                  (0x8U)                                              /**< FTM0_INVCTRL.INV3EN Mask                */
#define FTM_INVCTRL_INV3EN_SHIFT                 (3U)                                                /**< FTM0_INVCTRL.INV3EN Position            */
#define FTM_INVCTRL_INV3EN(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_INVCTRL_INV3EN_SHIFT))&FTM_INVCTRL_INV3EN_MASK) /**< FTM0_INVCTRL.INV3EN Field               */
/** @} */

/** @name SWOCTRL - FTM Software Output Control */ /** @{ */
#define FTM_SWOCTRL_CH0OC_MASK                   (0x1U)                                              /**< FTM0_SWOCTRL.CH0OC Mask                 */
#define FTM_SWOCTRL_CH0OC_SHIFT                  (0U)                                                /**< FTM0_SWOCTRL.CH0OC Position             */
#define FTM_SWOCTRL_CH0OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH0OC_SHIFT))&FTM_SWOCTRL_CH0OC_MASK) /**< FTM0_SWOCTRL.CH0OC Field                */
#define FTM_SWOCTRL_CH1OC_MASK                   (0x2U)                                              /**< FTM0_SWOCTRL.CH1OC Mask                 */
#define FTM_SWOCTRL_CH1OC_SHIFT                  (1U)                                                /**< FTM0_SWOCTRL.CH1OC Position             */
#define FTM_SWOCTRL_CH1OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH1OC_SHIFT))&FTM_SWOCTRL_CH1OC_MASK) /**< FTM0_SWOCTRL.CH1OC Field                */
#define FTM_SWOCTRL_CH2OC_MASK                   (0x4U)                                              /**< FTM0_SWOCTRL.CH2OC Mask                 */
#define FTM_SWOCTRL_CH2OC_SHIFT                  (2U)                                                /**< FTM0_SWOCTRL.CH2OC Position             */
#define FTM_SWOCTRL_CH2OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH2OC_SHIFT))&FTM_SWOCTRL_CH2OC_MASK) /**< FTM0_SWOCTRL.CH2OC Field                */
#define FTM_SWOCTRL_CH3OC_MASK                   (0x8U)                                              /**< FTM0_SWOCTRL.CH3OC Mask                 */
#define FTM_SWOCTRL_CH3OC_SHIFT                  (3U)                                                /**< FTM0_SWOCTRL.CH3OC Position             */
#define FTM_SWOCTRL_CH3OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH3OC_SHIFT))&FTM_SWOCTRL_CH3OC_MASK) /**< FTM0_SWOCTRL.CH3OC Field                */
#define FTM_SWOCTRL_CH4OC_MASK                   (0x10U)                                             /**< FTM0_SWOCTRL.CH4OC Mask                 */
#define FTM_SWOCTRL_CH4OC_SHIFT                  (4U)                                                /**< FTM0_SWOCTRL.CH4OC Position             */
#define FTM_SWOCTRL_CH4OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH4OC_SHIFT))&FTM_SWOCTRL_CH4OC_MASK) /**< FTM0_SWOCTRL.CH4OC Field                */
#define FTM_SWOCTRL_CH5OC_MASK                   (0x20U)                                             /**< FTM0_SWOCTRL.CH5OC Mask                 */
#define FTM_SWOCTRL_CH5OC_SHIFT                  (5U)                                                /**< FTM0_SWOCTRL.CH5OC Position             */
#define FTM_SWOCTRL_CH5OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH5OC_SHIFT))&FTM_SWOCTRL_CH5OC_MASK) /**< FTM0_SWOCTRL.CH5OC Field                */
#define FTM_SWOCTRL_CH6OC_MASK                   (0x40U)                                             /**< FTM0_SWOCTRL.CH6OC Mask                 */
#define FTM_SWOCTRL_CH6OC_SHIFT                  (6U)                                                /**< FTM0_SWOCTRL.CH6OC Position             */
#define FTM_SWOCTRL_CH6OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH6OC_SHIFT))&FTM_SWOCTRL_CH6OC_MASK) /**< FTM0_SWOCTRL.CH6OC Field                */
#define FTM_SWOCTRL_CH7OC_MASK                   (0x80U)                                             /**< FTM0_SWOCTRL.CH7OC Mask                 */
#define FTM_SWOCTRL_CH7OC_SHIFT                  (7U)                                                /**< FTM0_SWOCTRL.CH7OC Position             */
#define FTM_SWOCTRL_CH7OC(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH7OC_SHIFT))&FTM_SWOCTRL_CH7OC_MASK) /**< FTM0_SWOCTRL.CH7OC Field                */
#define FTM_SWOCTRL_CH0OCV_MASK                  (0x100U)                                            /**< FTM0_SWOCTRL.CH0OCV Mask                */
#define FTM_SWOCTRL_CH0OCV_SHIFT                 (8U)                                                /**< FTM0_SWOCTRL.CH0OCV Position            */
#define FTM_SWOCTRL_CH0OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH0OCV_SHIFT))&FTM_SWOCTRL_CH0OCV_MASK) /**< FTM0_SWOCTRL.CH0OCV Field               */
#define FTM_SWOCTRL_CH1OCV_MASK                  (0x200U)                                            /**< FTM0_SWOCTRL.CH1OCV Mask                */
#define FTM_SWOCTRL_CH1OCV_SHIFT                 (9U)                                                /**< FTM0_SWOCTRL.CH1OCV Position            */
#define FTM_SWOCTRL_CH1OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH1OCV_SHIFT))&FTM_SWOCTRL_CH1OCV_MASK) /**< FTM0_SWOCTRL.CH1OCV Field               */
#define FTM_SWOCTRL_CH2OCV_MASK                  (0x400U)                                            /**< FTM0_SWOCTRL.CH2OCV Mask                */
#define FTM_SWOCTRL_CH2OCV_SHIFT                 (10U)                                               /**< FTM0_SWOCTRL.CH2OCV Position            */
#define FTM_SWOCTRL_CH2OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH2OCV_SHIFT))&FTM_SWOCTRL_CH2OCV_MASK) /**< FTM0_SWOCTRL.CH2OCV Field               */
#define FTM_SWOCTRL_CH3OCV_MASK                  (0x800U)                                            /**< FTM0_SWOCTRL.CH3OCV Mask                */
#define FTM_SWOCTRL_CH3OCV_SHIFT                 (11U)                                               /**< FTM0_SWOCTRL.CH3OCV Position            */
#define FTM_SWOCTRL_CH3OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH3OCV_SHIFT))&FTM_SWOCTRL_CH3OCV_MASK) /**< FTM0_SWOCTRL.CH3OCV Field               */
#define FTM_SWOCTRL_CH4OCV_MASK                  (0x1000U)                                           /**< FTM0_SWOCTRL.CH4OCV Mask                */
#define FTM_SWOCTRL_CH4OCV_SHIFT                 (12U)                                               /**< FTM0_SWOCTRL.CH4OCV Position            */
#define FTM_SWOCTRL_CH4OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH4OCV_SHIFT))&FTM_SWOCTRL_CH4OCV_MASK) /**< FTM0_SWOCTRL.CH4OCV Field               */
#define FTM_SWOCTRL_CH5OCV_MASK                  (0x2000U)                                           /**< FTM0_SWOCTRL.CH5OCV Mask                */
#define FTM_SWOCTRL_CH5OCV_SHIFT                 (13U)                                               /**< FTM0_SWOCTRL.CH5OCV Position            */
#define FTM_SWOCTRL_CH5OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH5OCV_SHIFT))&FTM_SWOCTRL_CH5OCV_MASK) /**< FTM0_SWOCTRL.CH5OCV Field               */
#define FTM_SWOCTRL_CH6OCV_MASK                  (0x4000U)                                           /**< FTM0_SWOCTRL.CH6OCV Mask                */
#define FTM_SWOCTRL_CH6OCV_SHIFT                 (14U)                                               /**< FTM0_SWOCTRL.CH6OCV Position            */
#define FTM_SWOCTRL_CH6OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH6OCV_SHIFT))&FTM_SWOCTRL_CH6OCV_MASK) /**< FTM0_SWOCTRL.CH6OCV Field               */
#define FTM_SWOCTRL_CH7OCV_MASK                  (0x8000U)                                           /**< FTM0_SWOCTRL.CH7OCV Mask                */
#define FTM_SWOCTRL_CH7OCV_SHIFT                 (15U)                                               /**< FTM0_SWOCTRL.CH7OCV Position            */
#define FTM_SWOCTRL_CH7OCV(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_SWOCTRL_CH7OCV_SHIFT))&FTM_SWOCTRL_CH7OCV_MASK) /**< FTM0_SWOCTRL.CH7OCV Field               */
/** @} */

/** @name PWMLOAD - FTM PWM Load */ /** @{ */
#define FTM_PWMLOAD_CH0SEL_MASK                  (0x1U)                                              /**< FTM0_PWMLOAD.CH0SEL Mask                */
#define FTM_PWMLOAD_CH0SEL_SHIFT                 (0U)                                                /**< FTM0_PWMLOAD.CH0SEL Position            */
#define FTM_PWMLOAD_CH0SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH0SEL_SHIFT))&FTM_PWMLOAD_CH0SEL_MASK) /**< FTM0_PWMLOAD.CH0SEL Field               */
#define FTM_PWMLOAD_CH1SEL_MASK                  (0x2U)                                              /**< FTM0_PWMLOAD.CH1SEL Mask                */
#define FTM_PWMLOAD_CH1SEL_SHIFT                 (1U)                                                /**< FTM0_PWMLOAD.CH1SEL Position            */
#define FTM_PWMLOAD_CH1SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH1SEL_SHIFT))&FTM_PWMLOAD_CH1SEL_MASK) /**< FTM0_PWMLOAD.CH1SEL Field               */
#define FTM_PWMLOAD_CH2SEL_MASK                  (0x4U)                                              /**< FTM0_PWMLOAD.CH2SEL Mask                */
#define FTM_PWMLOAD_CH2SEL_SHIFT                 (2U)                                                /**< FTM0_PWMLOAD.CH2SEL Position            */
#define FTM_PWMLOAD_CH2SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH2SEL_SHIFT))&FTM_PWMLOAD_CH2SEL_MASK) /**< FTM0_PWMLOAD.CH2SEL Field               */
#define FTM_PWMLOAD_CH3SEL_MASK                  (0x8U)                                              /**< FTM0_PWMLOAD.CH3SEL Mask                */
#define FTM_PWMLOAD_CH3SEL_SHIFT                 (3U)                                                /**< FTM0_PWMLOAD.CH3SEL Position            */
#define FTM_PWMLOAD_CH3SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH3SEL_SHIFT))&FTM_PWMLOAD_CH3SEL_MASK) /**< FTM0_PWMLOAD.CH3SEL Field               */
#define FTM_PWMLOAD_CH4SEL_MASK                  (0x10U)                                             /**< FTM0_PWMLOAD.CH4SEL Mask                */
#define FTM_PWMLOAD_CH4SEL_SHIFT                 (4U)                                                /**< FTM0_PWMLOAD.CH4SEL Position            */
#define FTM_PWMLOAD_CH4SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH4SEL_SHIFT))&FTM_PWMLOAD_CH4SEL_MASK) /**< FTM0_PWMLOAD.CH4SEL Field               */
#define FTM_PWMLOAD_CH5SEL_MASK                  (0x20U)                                             /**< FTM0_PWMLOAD.CH5SEL Mask                */
#define FTM_PWMLOAD_CH5SEL_SHIFT                 (5U)                                                /**< FTM0_PWMLOAD.CH5SEL Position            */
#define FTM_PWMLOAD_CH5SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH5SEL_SHIFT))&FTM_PWMLOAD_CH5SEL_MASK) /**< FTM0_PWMLOAD.CH5SEL Field               */
#define FTM_PWMLOAD_CH6SEL_MASK                  (0x40U)                                             /**< FTM0_PWMLOAD.CH6SEL Mask                */
#define FTM_PWMLOAD_CH6SEL_SHIFT                 (6U)                                                /**< FTM0_PWMLOAD.CH6SEL Position            */
#define FTM_PWMLOAD_CH6SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH6SEL_SHIFT))&FTM_PWMLOAD_CH6SEL_MASK) /**< FTM0_PWMLOAD.CH6SEL Field               */
#define FTM_PWMLOAD_CH7SEL_MASK                  (0x80U)                                             /**< FTM0_PWMLOAD.CH7SEL Mask                */
#define FTM_PWMLOAD_CH7SEL_SHIFT                 (7U)                                                /**< FTM0_PWMLOAD.CH7SEL Position            */
#define FTM_PWMLOAD_CH7SEL(x)                    (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_CH7SEL_SHIFT))&FTM_PWMLOAD_CH7SEL_MASK) /**< FTM0_PWMLOAD.CH7SEL Field               */
#define FTM_PWMLOAD_LDOK_MASK                    (0x200U)                                            /**< FTM0_PWMLOAD.LDOK Mask                  */
#define FTM_PWMLOAD_LDOK_SHIFT                   (9U)                                                /**< FTM0_PWMLOAD.LDOK Position              */
#define FTM_PWMLOAD_LDOK(x)                      (((uint32_t)(((uint32_t)(x))<<FTM_PWMLOAD_LDOK_SHIFT))&FTM_PWMLOAD_LDOK_MASK) /**< FTM0_PWMLOAD.LDOK Field                 */
/** @} */

/** @} */ /* End group FTM_Register_Masks_GROUP */


/* FTM0 - Peripheral instance base addresses */
#define FTM0_BasePtr                   0x40038000UL //!< Peripheral base address
#define FTM0                           ((FTM_Type *) FTM0_BasePtr) //!< Freescale base pointer
#define FTM0_BASE_PTR                  (FTM0) //!< Freescale style base pointer
#define FTM0_IRQS { FTM0_IRQn,  }


/** @} */ /* End group FTM_Peripheral_access_layer_GROUP */


/** @brief C Struct for FTM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FTM_Peripheral_access_layer_GROUP FTM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FTM1 (file:FTM1_2CH_QUAD)            ================ */
/* ================================================================================ */

/**
 * @brief FlexTimer Module (2 channels)
 */
#define FTMQUAD_CONTROLS_COUNT 2        /**< Number of FTM channels                             */
/**
 * @struct FTMQUAD_Type
 * @brief  C Struct allowing access to FTM registers
 */
typedef struct FTMQUAD_Type {
   __IO uint32_t  SC;                           /**< 0000: Status and Control                                           */
   __IO uint32_t  CNT;                          /**< 0004: Counter                                                      */
   __IO uint32_t  MOD;                          /**< 0008: Modulo                                                       */
   struct {
      __IO uint32_t  CnSC;                      /**< 000C: Channel  Status and Control                                  */
      __IO uint32_t  CnV;                       /**< 0010: Channel  Value                                               */
   } CONTROLS[FTMQUAD_CONTROLS_COUNT];          /**< 000C: (cluster: size=0x0010, 16)                                   */
        uint8_t   RESERVED_1[48];               /**< 001C: 0x30 bytes                                                   */
   __IO uint32_t  CNTIN;                        /**< 004C: Counter Initial Value                                        */
   __IO uint32_t  STATUS;                       /**< 0050: Capture and Compare Status                                   */
   __IO uint32_t  MODE;                         /**< 0054: Features Mode Selection                                      */
   __IO uint32_t  SYNC;                         /**< 0058: Synchronization                                              */
   __IO uint32_t  OUTINIT;                      /**< 005C: Initial State for Channels Output                            */
   __IO uint32_t  OUTMASK;                      /**< 0060: Output Mask                                                  */
   __IO uint32_t  COMBINE;                      /**< 0064: Function for Linked Channels                                 */
   __IO uint32_t  DEADTIME;                     /**< 0068: Deadtime Insertion Control                                   */
   __IO uint32_t  EXTTRIG;                      /**< 006C: FTM External Trigger                                         */
   __IO uint32_t  POL;                          /**< 0070: Channels Polarity                                            */
   __IO uint32_t  FMS;                          /**< 0074: Fault Mode Status                                            */
   __IO uint32_t  FILTER;                       /**< 0078: Input Capture Filter Control                                 */
   __IO uint32_t  FLTCTRL;                      /**< 007C: Fault Control                                                */
   __IO uint32_t  QDCTRL;                       /**< 0080: Quadrature Decoder Control and Status                        */
   __IO uint32_t  CONF;                         /**< 0084: Configuration                                                */
   __IO uint32_t  FLTPOL;                       /**< 0088: FTM Fault Input Polarity                                     */
   __IO uint32_t  SYNCONF;                      /**< 008C: Synchronization Configuration                                */
   __IO uint32_t  INVCTRL;                      /**< 0090: FTM Inverting Control                                        */
   __IO uint32_t  SWOCTRL;                      /**< 0094: FTM Software Output Control                                  */
   __IO uint32_t  PWMLOAD;                      /**< 0098: FTM PWM Load                                                 */
} FTMQUAD_Type;


/** @brief Register Masks for FTM */

/* -------------------------------------------------------------------------------- */
/* -----------     'FTM1' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup FTM_Register_Masks_GROUP FTM Register Masks */
/** @{ */

/** @name QDCTRL - Quadrature Decoder Control and Status */ /** @{ */
#define FTM_QDCTRL_QUADEN_MASK                   (0x1U)                                              /**< FTM1_QDCTRL.QUADEN Mask                 */
#define FTM_QDCTRL_QUADEN_SHIFT                  (0U)                                                /**< FTM1_QDCTRL.QUADEN Position             */
#define FTM_QDCTRL_QUADEN(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_QUADEN_SHIFT))&FTM_QDCTRL_QUADEN_MASK) /**< FTM1_QDCTRL.QUADEN Field                */
#define FTM_QDCTRL_TOFDIR_MASK                   (0x2U)                                              /**< FTM1_QDCTRL.TOFDIR Mask                 */
#define FTM_QDCTRL_TOFDIR_SHIFT                  (1U)                                                /**< FTM1_QDCTRL.TOFDIR Position             */
#define FTM_QDCTRL_TOFDIR(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_TOFDIR_SHIFT))&FTM_QDCTRL_TOFDIR_MASK) /**< FTM1_QDCTRL.TOFDIR Field                */
#define FTM_QDCTRL_QUADIR_MASK                   (0x4U)                                              /**< FTM1_QDCTRL.QUADIR Mask                 */
#define FTM_QDCTRL_QUADIR_SHIFT                  (2U)                                                /**< FTM1_QDCTRL.QUADIR Position             */
#define FTM_QDCTRL_QUADIR(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_QUADIR_SHIFT))&FTM_QDCTRL_QUADIR_MASK) /**< FTM1_QDCTRL.QUADIR Field                */
#define FTM_QDCTRL_QUADMODE_MASK                 (0x8U)                                              /**< FTM1_QDCTRL.QUADMODE Mask               */
#define FTM_QDCTRL_QUADMODE_SHIFT                (3U)                                                /**< FTM1_QDCTRL.QUADMODE Position           */
#define FTM_QDCTRL_QUADMODE(x)                   (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_QUADMODE_SHIFT))&FTM_QDCTRL_QUADMODE_MASK) /**< FTM1_QDCTRL.QUADMODE Field              */
#define FTM_QDCTRL_PHBPOL_MASK                   (0x10U)                                             /**< FTM1_QDCTRL.PHBPOL Mask                 */
#define FTM_QDCTRL_PHBPOL_SHIFT                  (4U)                                                /**< FTM1_QDCTRL.PHBPOL Position             */
#define FTM_QDCTRL_PHBPOL(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_PHBPOL_SHIFT))&FTM_QDCTRL_PHBPOL_MASK) /**< FTM1_QDCTRL.PHBPOL Field                */
#define FTM_QDCTRL_PHAPOL_MASK                   (0x20U)                                             /**< FTM1_QDCTRL.PHAPOL Mask                 */
#define FTM_QDCTRL_PHAPOL_SHIFT                  (5U)                                                /**< FTM1_QDCTRL.PHAPOL Position             */
#define FTM_QDCTRL_PHAPOL(x)                     (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_PHAPOL_SHIFT))&FTM_QDCTRL_PHAPOL_MASK) /**< FTM1_QDCTRL.PHAPOL Field                */
#define FTM_QDCTRL_PHBFLTREN_MASK                (0x40U)                                             /**< FTM1_QDCTRL.PHBFLTREN Mask              */
#define FTM_QDCTRL_PHBFLTREN_SHIFT               (6U)                                                /**< FTM1_QDCTRL.PHBFLTREN Position          */
#define FTM_QDCTRL_PHBFLTREN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_PHBFLTREN_SHIFT))&FTM_QDCTRL_PHBFLTREN_MASK) /**< FTM1_QDCTRL.PHBFLTREN Field             */
#define FTM_QDCTRL_PHAFLTREN_MASK                (0x80U)                                             /**< FTM1_QDCTRL.PHAFLTREN Mask              */
#define FTM_QDCTRL_PHAFLTREN_SHIFT               (7U)                                                /**< FTM1_QDCTRL.PHAFLTREN Position          */
#define FTM_QDCTRL_PHAFLTREN(x)                  (((uint32_t)(((uint32_t)(x))<<FTM_QDCTRL_PHAFLTREN_SHIFT))&FTM_QDCTRL_PHAFLTREN_MASK) /**< FTM1_QDCTRL.PHAFLTREN Field             */
/** @} */

/** @} */ /* End group FTM_Register_Masks_GROUP */


/* FTM1 - Peripheral instance base addresses */
#define FTM1_BasePtr                   0x40039000UL //!< Peripheral base address
#define FTM1                           ((FTMQUAD_Type *) FTM1_BasePtr) //!< Freescale base pointer
#define FTM1_BASE_PTR                  (FTM1) //!< Freescale style base pointer
#define FTM1_IRQS { FTM1_IRQn,  }


/** @} */ /* End group FTM_Peripheral_access_layer_GROUP */


/** @brief C Struct for FTM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup FTM_Peripheral_access_layer_GROUP FTM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           FTM2 (derived from FTM1)             ================ */
/* ================================================================================ */

/**
 * @brief FlexTimer Module (2 channels)
 */

/* FTM2 - Peripheral instance base addresses */
#define FTM2_BasePtr                   0x400B8000UL //!< Peripheral base address
#define FTM2                           ((FTMQUAD_Type *) FTM2_BasePtr) //!< Freescale base pointer
#define FTM2_BASE_PTR                  (FTM2) //!< Freescale style base pointer
#define FTM2_IRQS { FTM2_IRQn,  }


/** @} */ /* End group FTM_Peripheral_access_layer_GROUP */


/** @brief C Struct for GPIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           GPIOA (file:GPIOA_0x400FF000)        ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */
/**
 * @struct GPIO_Type
 * @brief  C Struct allowing access to GPIO registers
 */
typedef struct GPIO_Type {
   __IO uint32_t  PDOR;                         /**< 0000: Port Data Output Register                                    */
   __O  uint32_t  PSOR;                         /**< 0004: Port Set Output Register                                     */
   __O  uint32_t  PCOR;                         /**< 0008: Port Clear Output Register                                   */
   __O  uint32_t  PTOR;                         /**< 000C: Port Toggle Output Register                                  */
   __I  uint32_t  PDIR;                         /**< 0010: Port Data Input Register                                     */
   __IO uint32_t  PDDR;                         /**< 0014: Port Data Direction Register                                 */
} GPIO_Type;


/** @brief Register Masks for GPIO */

/* -------------------------------------------------------------------------------- */
/* -----------     'GPIOA' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup GPIO_Register_Masks_GROUP GPIO Register Masks */
/** @{ */

/** @} */ /* End group GPIO_Register_Masks_GROUP */


/* GPIOA - Peripheral instance base addresses */
#define GPIOA_BasePtr                  0x400FF000UL //!< Peripheral base address
#define GPIOA                          ((GPIO_Type *) GPIOA_BasePtr) //!< Freescale base pointer
#define GPIOA_BASE_PTR                 (GPIOA) //!< Freescale style base pointer

/** @} */ /* End group GPIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for GPIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           GPIOB (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOB - Peripheral instance base addresses */
#define GPIOB_BasePtr                  0x400FF040UL //!< Peripheral base address
#define GPIOB                          ((GPIO_Type *) GPIOB_BasePtr) //!< Freescale base pointer
#define GPIOB_BASE_PTR                 (GPIOB) //!< Freescale style base pointer

/** @} */ /* End group GPIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for GPIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           GPIOC (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOC - Peripheral instance base addresses */
#define GPIOC_BasePtr                  0x400FF080UL //!< Peripheral base address
#define GPIOC                          ((GPIO_Type *) GPIOC_BasePtr) //!< Freescale base pointer
#define GPIOC_BASE_PTR                 (GPIOC) //!< Freescale style base pointer

/** @} */ /* End group GPIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for GPIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           GPIOD (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOD - Peripheral instance base addresses */
#define GPIOD_BasePtr                  0x400FF0C0UL //!< Peripheral base address
#define GPIOD                          ((GPIO_Type *) GPIOD_BasePtr) //!< Freescale base pointer
#define GPIOD_BASE_PTR                 (GPIOD) //!< Freescale style base pointer

/** @} */ /* End group GPIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for GPIO */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           GPIOE (derived from GPIOA)           ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOE - Peripheral instance base addresses */
#define GPIOE_BasePtr                  0x400FF100UL //!< Peripheral base address
#define GPIOE                          ((GPIO_Type *) GPIOE_BasePtr) //!< Freescale base pointer
#define GPIOE_BASE_PTR                 (GPIOE) //!< Freescale style base pointer

/** @} */ /* End group GPIO_Peripheral_access_layer_GROUP */


/** @brief C Struct for I2C */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup I2C_Peripheral_access_layer_GROUP I2C Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           I2C0 (file:I2C0_MK10D5)              ================ */
/* ================================================================================ */

/**
 * @brief Inter-Integrated Circuit
 */
/**
 * @struct I2C_Type
 * @brief  C Struct allowing access to I2C registers
 */
typedef struct I2C_Type {
   __IO uint8_t   A1;                           /**< 0000: Address Register 1                                           */
   __IO uint8_t   F;                            /**< 0001: Frequency Divider register                                   */
   __IO uint8_t   C1;                           /**< 0002: Control Register 1                                           */
   __IO uint8_t   S;                            /**< 0003: Status Register                                              */
   __IO uint8_t   D;                            /**< 0004: Data I/O register                                            */
   __IO uint8_t   C2;                           /**< 0005: Control Register 2                                           */
   __IO uint8_t   FLT;                          /**< 0006: Programmable Input Glitch Filter register                    */
   __IO uint8_t   RA;                           /**< 0007: Range Address register                                       */
   __IO uint8_t   SMB;                          /**< 0008: SMBus Control and Status register                            */
   __IO uint8_t   A2;                           /**< 0009: Address Register 2                                           */
   __IO uint8_t   SLTH;                         /**< 000A: SCL Low Timeout Register High                                */
   __IO uint8_t   SLTL;                         /**< 000B: SCL Low Timeout Register Low                                 */
} I2C_Type;


/** @brief Register Masks for I2C */

/* -------------------------------------------------------------------------------- */
/* -----------     'I2C0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup I2C_Register_Masks_GROUP I2C Register Masks */
/** @{ */

/** @name A1 - Address Register 1 */ /** @{ */
#define I2C_A1_AD_MASK                           (0xFEU)                                             /**< I2C0_A1.AD Mask                         */
#define I2C_A1_AD_SHIFT                          (1U)                                                /**< I2C0_A1.AD Position                     */
#define I2C_A1_AD(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_A1_AD_SHIFT))&I2C_A1_AD_MASK) /**< I2C0_A1.AD Field                        */
/** @} */

/** @name F - Frequency Divider register */ /** @{ */
#define I2C_F_ICR_MASK                           (0x3FU)                                             /**< I2C0_F.ICR Mask                         */
#define I2C_F_ICR_SHIFT                          (0U)                                                /**< I2C0_F.ICR Position                     */
#define I2C_F_ICR(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_F_ICR_SHIFT))&I2C_F_ICR_MASK) /**< I2C0_F.ICR Field                        */
#define I2C_F_MULT_MASK                          (0xC0U)                                             /**< I2C0_F.MULT Mask                        */
#define I2C_F_MULT_SHIFT                         (6U)                                                /**< I2C0_F.MULT Position                    */
#define I2C_F_MULT(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_F_MULT_SHIFT))&I2C_F_MULT_MASK) /**< I2C0_F.MULT Field                       */
/** @} */

/** @name C1 - Control Register 1 */ /** @{ */
#define I2C_C1_DMAEN_MASK                        (0x1U)                                              /**< I2C0_C1.DMAEN Mask                      */
#define I2C_C1_DMAEN_SHIFT                       (0U)                                                /**< I2C0_C1.DMAEN Position                  */
#define I2C_C1_DMAEN(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_C1_DMAEN_SHIFT))&I2C_C1_DMAEN_MASK) /**< I2C0_C1.DMAEN Field                     */
#define I2C_C1_WUEN_MASK                         (0x2U)                                              /**< I2C0_C1.WUEN Mask                       */
#define I2C_C1_WUEN_SHIFT                        (1U)                                                /**< I2C0_C1.WUEN Position                   */
#define I2C_C1_WUEN(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C1_WUEN_SHIFT))&I2C_C1_WUEN_MASK) /**< I2C0_C1.WUEN Field                      */
#define I2C_C1_RSTA_MASK                         (0x4U)                                              /**< I2C0_C1.RSTA Mask                       */
#define I2C_C1_RSTA_SHIFT                        (2U)                                                /**< I2C0_C1.RSTA Position                   */
#define I2C_C1_RSTA(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C1_RSTA_SHIFT))&I2C_C1_RSTA_MASK) /**< I2C0_C1.RSTA Field                      */
#define I2C_C1_TXAK_MASK                         (0x8U)                                              /**< I2C0_C1.TXAK Mask                       */
#define I2C_C1_TXAK_SHIFT                        (3U)                                                /**< I2C0_C1.TXAK Position                   */
#define I2C_C1_TXAK(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C1_TXAK_SHIFT))&I2C_C1_TXAK_MASK) /**< I2C0_C1.TXAK Field                      */
#define I2C_C1_TX_MASK                           (0x10U)                                             /**< I2C0_C1.TX Mask                         */
#define I2C_C1_TX_SHIFT                          (4U)                                                /**< I2C0_C1.TX Position                     */
#define I2C_C1_TX(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_C1_TX_SHIFT))&I2C_C1_TX_MASK) /**< I2C0_C1.TX Field                        */
#define I2C_C1_MST_MASK                          (0x20U)                                             /**< I2C0_C1.MST Mask                        */
#define I2C_C1_MST_SHIFT                         (5U)                                                /**< I2C0_C1.MST Position                    */
#define I2C_C1_MST(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_C1_MST_SHIFT))&I2C_C1_MST_MASK) /**< I2C0_C1.MST Field                       */
#define I2C_C1_IICIE_MASK                        (0x40U)                                             /**< I2C0_C1.IICIE Mask                      */
#define I2C_C1_IICIE_SHIFT                       (6U)                                                /**< I2C0_C1.IICIE Position                  */
#define I2C_C1_IICIE(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_C1_IICIE_SHIFT))&I2C_C1_IICIE_MASK) /**< I2C0_C1.IICIE Field                     */
#define I2C_C1_IICEN_MASK                        (0x80U)                                             /**< I2C0_C1.IICEN Mask                      */
#define I2C_C1_IICEN_SHIFT                       (7U)                                                /**< I2C0_C1.IICEN Position                  */
#define I2C_C1_IICEN(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_C1_IICEN_SHIFT))&I2C_C1_IICEN_MASK) /**< I2C0_C1.IICEN Field                     */
/** @} */

/** @name S - Status Register */ /** @{ */
#define I2C_S_RXAK_MASK                          (0x1U)                                              /**< I2C0_S.RXAK Mask                        */
#define I2C_S_RXAK_SHIFT                         (0U)                                                /**< I2C0_S.RXAK Position                    */
#define I2C_S_RXAK(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_S_RXAK_SHIFT))&I2C_S_RXAK_MASK) /**< I2C0_S.RXAK Field                       */
#define I2C_S_IICIF_MASK                         (0x2U)                                              /**< I2C0_S.IICIF Mask                       */
#define I2C_S_IICIF_SHIFT                        (1U)                                                /**< I2C0_S.IICIF Position                   */
#define I2C_S_IICIF(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_S_IICIF_SHIFT))&I2C_S_IICIF_MASK) /**< I2C0_S.IICIF Field                      */
#define I2C_S_SRW_MASK                           (0x4U)                                              /**< I2C0_S.SRW Mask                         */
#define I2C_S_SRW_SHIFT                          (2U)                                                /**< I2C0_S.SRW Position                     */
#define I2C_S_SRW(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_S_SRW_SHIFT))&I2C_S_SRW_MASK) /**< I2C0_S.SRW Field                        */
#define I2C_S_RAM_MASK                           (0x8U)                                              /**< I2C0_S.RAM Mask                         */
#define I2C_S_RAM_SHIFT                          (3U)                                                /**< I2C0_S.RAM Position                     */
#define I2C_S_RAM(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_S_RAM_SHIFT))&I2C_S_RAM_MASK) /**< I2C0_S.RAM Field                        */
#define I2C_S_ARBL_MASK                          (0x10U)                                             /**< I2C0_S.ARBL Mask                        */
#define I2C_S_ARBL_SHIFT                         (4U)                                                /**< I2C0_S.ARBL Position                    */
#define I2C_S_ARBL(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_S_ARBL_SHIFT))&I2C_S_ARBL_MASK) /**< I2C0_S.ARBL Field                       */
#define I2C_S_BUSY_MASK                          (0x20U)                                             /**< I2C0_S.BUSY Mask                        */
#define I2C_S_BUSY_SHIFT                         (5U)                                                /**< I2C0_S.BUSY Position                    */
#define I2C_S_BUSY(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_S_BUSY_SHIFT))&I2C_S_BUSY_MASK) /**< I2C0_S.BUSY Field                       */
#define I2C_S_IAAS_MASK                          (0x40U)                                             /**< I2C0_S.IAAS Mask                        */
#define I2C_S_IAAS_SHIFT                         (6U)                                                /**< I2C0_S.IAAS Position                    */
#define I2C_S_IAAS(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_S_IAAS_SHIFT))&I2C_S_IAAS_MASK) /**< I2C0_S.IAAS Field                       */
#define I2C_S_TCF_MASK                           (0x80U)                                             /**< I2C0_S.TCF Mask                         */
#define I2C_S_TCF_SHIFT                          (7U)                                                /**< I2C0_S.TCF Position                     */
#define I2C_S_TCF(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_S_TCF_SHIFT))&I2C_S_TCF_MASK) /**< I2C0_S.TCF Field                        */
/** @} */

/** @name D - Data I/O register */ /** @{ */
#define I2C_D_DATA_MASK                          (0xFFU)                                             /**< I2C0_D.DATA Mask                        */
#define I2C_D_DATA_SHIFT                         (0U)                                                /**< I2C0_D.DATA Position                    */
#define I2C_D_DATA(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_D_DATA_SHIFT))&I2C_D_DATA_MASK) /**< I2C0_D.DATA Field                       */
/** @} */

/** @name C2 - Control Register 2 */ /** @{ */
#define I2C_C2_AD_MASK                           (0x7U)                                              /**< I2C0_C2.AD Mask                         */
#define I2C_C2_AD_SHIFT                          (0U)                                                /**< I2C0_C2.AD Position                     */
#define I2C_C2_AD(x)                             (((uint8_t)(((uint8_t)(x))<<I2C_C2_AD_SHIFT))&I2C_C2_AD_MASK) /**< I2C0_C2.AD Field                        */
#define I2C_C2_RMEN_MASK                         (0x8U)                                              /**< I2C0_C2.RMEN Mask                       */
#define I2C_C2_RMEN_SHIFT                        (3U)                                                /**< I2C0_C2.RMEN Position                   */
#define I2C_C2_RMEN(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C2_RMEN_SHIFT))&I2C_C2_RMEN_MASK) /**< I2C0_C2.RMEN Field                      */
#define I2C_C2_SBRC_MASK                         (0x10U)                                             /**< I2C0_C2.SBRC Mask                       */
#define I2C_C2_SBRC_SHIFT                        (4U)                                                /**< I2C0_C2.SBRC Position                   */
#define I2C_C2_SBRC(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C2_SBRC_SHIFT))&I2C_C2_SBRC_MASK) /**< I2C0_C2.SBRC Field                      */
#define I2C_C2_HDRS_MASK                         (0x20U)                                             /**< I2C0_C2.HDRS Mask                       */
#define I2C_C2_HDRS_SHIFT                        (5U)                                                /**< I2C0_C2.HDRS Position                   */
#define I2C_C2_HDRS(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_C2_HDRS_SHIFT))&I2C_C2_HDRS_MASK) /**< I2C0_C2.HDRS Field                      */
#define I2C_C2_ADEXT_MASK                        (0x40U)                                             /**< I2C0_C2.ADEXT Mask                      */
#define I2C_C2_ADEXT_SHIFT                       (6U)                                                /**< I2C0_C2.ADEXT Position                  */
#define I2C_C2_ADEXT(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_C2_ADEXT_SHIFT))&I2C_C2_ADEXT_MASK) /**< I2C0_C2.ADEXT Field                     */
#define I2C_C2_GCAEN_MASK                        (0x80U)                                             /**< I2C0_C2.GCAEN Mask                      */
#define I2C_C2_GCAEN_SHIFT                       (7U)                                                /**< I2C0_C2.GCAEN Position                  */
#define I2C_C2_GCAEN(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_C2_GCAEN_SHIFT))&I2C_C2_GCAEN_MASK) /**< I2C0_C2.GCAEN Field                     */
/** @} */

/** @name FLT - Programmable Input Glitch Filter register */ /** @{ */
#define I2C_FLT_FLT_MASK                         (0x1FU)                                             /**< I2C0_FLT.FLT Mask                       */
#define I2C_FLT_FLT_SHIFT                        (0U)                                                /**< I2C0_FLT.FLT Position                   */
#define I2C_FLT_FLT(x)                           (((uint8_t)(((uint8_t)(x))<<I2C_FLT_FLT_SHIFT))&I2C_FLT_FLT_MASK) /**< I2C0_FLT.FLT Field                      */
/** @} */

/** @name RA - Range Address register */ /** @{ */
#define I2C_RA_RAD_MASK                          (0xFEU)                                             /**< I2C0_RA.RAD Mask                        */
#define I2C_RA_RAD_SHIFT                         (1U)                                                /**< I2C0_RA.RAD Position                    */
#define I2C_RA_RAD(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_RA_RAD_SHIFT))&I2C_RA_RAD_MASK) /**< I2C0_RA.RAD Field                       */
/** @} */

/** @name SMB - SMBus Control and Status register */ /** @{ */
#define I2C_SMB_SHTF2IE_MASK                     (0x1U)                                              /**< I2C0_SMB.SHTF2IE Mask                   */
#define I2C_SMB_SHTF2IE_SHIFT                    (0U)                                                /**< I2C0_SMB.SHTF2IE Position               */
#define I2C_SMB_SHTF2IE(x)                       (((uint8_t)(((uint8_t)(x))<<I2C_SMB_SHTF2IE_SHIFT))&I2C_SMB_SHTF2IE_MASK) /**< I2C0_SMB.SHTF2IE Field                  */
#define I2C_SMB_SHTF2_MASK                       (0x2U)                                              /**< I2C0_SMB.SHTF2 Mask                     */
#define I2C_SMB_SHTF2_SHIFT                      (1U)                                                /**< I2C0_SMB.SHTF2 Position                 */
#define I2C_SMB_SHTF2(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_SMB_SHTF2_SHIFT))&I2C_SMB_SHTF2_MASK) /**< I2C0_SMB.SHTF2 Field                    */
#define I2C_SMB_SHTF1_MASK                       (0x4U)                                              /**< I2C0_SMB.SHTF1 Mask                     */
#define I2C_SMB_SHTF1_SHIFT                      (2U)                                                /**< I2C0_SMB.SHTF1 Position                 */
#define I2C_SMB_SHTF1(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_SMB_SHTF1_SHIFT))&I2C_SMB_SHTF1_MASK) /**< I2C0_SMB.SHTF1 Field                    */
#define I2C_SMB_SLTF_MASK                        (0x8U)                                              /**< I2C0_SMB.SLTF Mask                      */
#define I2C_SMB_SLTF_SHIFT                       (3U)                                                /**< I2C0_SMB.SLTF Position                  */
#define I2C_SMB_SLTF(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_SMB_SLTF_SHIFT))&I2C_SMB_SLTF_MASK) /**< I2C0_SMB.SLTF Field                     */
#define I2C_SMB_TCKSEL_MASK                      (0x10U)                                             /**< I2C0_SMB.TCKSEL Mask                    */
#define I2C_SMB_TCKSEL_SHIFT                     (4U)                                                /**< I2C0_SMB.TCKSEL Position                */
#define I2C_SMB_TCKSEL(x)                        (((uint8_t)(((uint8_t)(x))<<I2C_SMB_TCKSEL_SHIFT))&I2C_SMB_TCKSEL_MASK) /**< I2C0_SMB.TCKSEL Field                   */
#define I2C_SMB_SIICAEN_MASK                     (0x20U)                                             /**< I2C0_SMB.SIICAEN Mask                   */
#define I2C_SMB_SIICAEN_SHIFT                    (5U)                                                /**< I2C0_SMB.SIICAEN Position               */
#define I2C_SMB_SIICAEN(x)                       (((uint8_t)(((uint8_t)(x))<<I2C_SMB_SIICAEN_SHIFT))&I2C_SMB_SIICAEN_MASK) /**< I2C0_SMB.SIICAEN Field                  */
#define I2C_SMB_ALERTEN_MASK                     (0x40U)                                             /**< I2C0_SMB.ALERTEN Mask                   */
#define I2C_SMB_ALERTEN_SHIFT                    (6U)                                                /**< I2C0_SMB.ALERTEN Position               */
#define I2C_SMB_ALERTEN(x)                       (((uint8_t)(((uint8_t)(x))<<I2C_SMB_ALERTEN_SHIFT))&I2C_SMB_ALERTEN_MASK) /**< I2C0_SMB.ALERTEN Field                  */
#define I2C_SMB_FACK_MASK                        (0x80U)                                             /**< I2C0_SMB.FACK Mask                      */
#define I2C_SMB_FACK_SHIFT                       (7U)                                                /**< I2C0_SMB.FACK Position                  */
#define I2C_SMB_FACK(x)                          (((uint8_t)(((uint8_t)(x))<<I2C_SMB_FACK_SHIFT))&I2C_SMB_FACK_MASK) /**< I2C0_SMB.FACK Field                     */
/** @} */

/** @name A2 - Address Register 2 */ /** @{ */
#define I2C_A2_SAD_MASK                          (0xFEU)                                             /**< I2C0_A2.SAD Mask                        */
#define I2C_A2_SAD_SHIFT                         (1U)                                                /**< I2C0_A2.SAD Position                    */
#define I2C_A2_SAD(x)                            (((uint8_t)(((uint8_t)(x))<<I2C_A2_SAD_SHIFT))&I2C_A2_SAD_MASK) /**< I2C0_A2.SAD Field                       */
/** @} */

/** @name SLTH - SCL Low Timeout Register High */ /** @{ */
#define I2C_SLTH_SSLT_MASK                       (0xFFU)                                             /**< I2C0_SLTH.SSLT Mask                     */
#define I2C_SLTH_SSLT_SHIFT                      (0U)                                                /**< I2C0_SLTH.SSLT Position                 */
#define I2C_SLTH_SSLT(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_SLTH_SSLT_SHIFT))&I2C_SLTH_SSLT_MASK) /**< I2C0_SLTH.SSLT Field                    */
/** @} */

/** @name SLTL - SCL Low Timeout Register Low */ /** @{ */
#define I2C_SLTL_SSLT_MASK                       (0xFFU)                                             /**< I2C0_SLTL.SSLT Mask                     */
#define I2C_SLTL_SSLT_SHIFT                      (0U)                                                /**< I2C0_SLTL.SSLT Position                 */
#define I2C_SLTL_SSLT(x)                         (((uint8_t)(((uint8_t)(x))<<I2C_SLTL_SSLT_SHIFT))&I2C_SLTL_SSLT_MASK) /**< I2C0_SLTL.SSLT Field                    */
/** @} */

/** @} */ /* End group I2C_Register_Masks_GROUP */


/* I2C0 - Peripheral instance base addresses */
#define I2C0_BasePtr                   0x40066000UL //!< Peripheral base address
#define I2C0                           ((I2C_Type *) I2C0_BasePtr) //!< Freescale base pointer
#define I2C0_BASE_PTR                  (I2C0) //!< Freescale style base pointer
#define I2C0_IRQS { I2C0_IRQn,  }


/** @} */ /* End group I2C_Peripheral_access_layer_GROUP */


/** @brief C Struct for I2C */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup I2C_Peripheral_access_layer_GROUP I2C Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           I2C1 (derived from I2C0)             ================ */
/* ================================================================================ */

/**
 * @brief Inter-Integrated Circuit
 */

/* I2C1 - Peripheral instance base addresses */
#define I2C1_BasePtr                   0x40067000UL //!< Peripheral base address
#define I2C1                           ((I2C_Type *) I2C1_BasePtr) //!< Freescale base pointer
#define I2C1_BASE_PTR                  (I2C1) //!< Freescale style base pointer
#define I2C1_IRQS { I2C1_IRQn,  }


/** @} */ /* End group I2C_Peripheral_access_layer_GROUP */


/** @brief C Struct for I2S */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup I2S_Peripheral_access_layer_GROUP I2S Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           I2S0 (file:I2S0_2CH)                 ================ */
/* ================================================================================ */

/**
 * @brief Inter-IC Sound / Synchronous Audio Interface
 */
/**
 * @struct I2S_Type
 * @brief  C Struct allowing access to I2S registers
 */
typedef struct I2S_Type {
   __IO uint32_t  TCSR;                         /**< 0000: SAI Transmit Control Register                                */
   __IO uint32_t  TCR1;                         /**< 0004: SAI Transmit Configuration 1 Register                        */
   __IO uint32_t  TCR2;                         /**< 0008: SAI Transmit Configuration 2 Register                        */
   __IO uint32_t  TCR3;                         /**< 000C: SAI Transmit Configuration 3 Register                        */
   __IO uint32_t  TCR4;                         /**< 0010: SAI Transmit Configuration 4 Register                        */
   __IO uint32_t  TCR5;                         /**< 0014: SAI Transmit Configuration 5 Register                        */
        uint8_t   RESERVED_0[8];                /**< 0018: 0x8 bytes                                                    */
   __O  uint32_t  TDR[2];                       /**< 0020: Transmit Data Register                                       */
        uint8_t   RESERVED_1[24];               /**< 0028: 0x18 bytes                                                   */
   __I  uint32_t  TFR[2];                       /**< 0040: SAI Transmit FIFO Register                                   */
        uint8_t   RESERVED_2[24];               /**< 0048: 0x18 bytes                                                   */
   __IO uint32_t  TMR;                          /**< 0060: SAI Transmit Mask Register                                   */
        uint8_t   RESERVED_3[28];               /**< 0064: 0x1C bytes                                                   */
   __IO uint32_t  RCSR;                         /**< 0080: SAI Receive Control Register                                 */
   __IO uint32_t  RCR1;                         /**< 0084: SAI Receive Configuration 1 Register                         */
   __IO uint32_t  RCR2;                         /**< 0088: SAI Receive Configuration 2 Register                         */
   __IO uint32_t  RCR3;                         /**< 008C: SAI Receive Configuration 3 Register                         */
   __IO uint32_t  RCR4;                         /**< 0090: SAI Receive Configuration 4 Register                         */
   __IO uint32_t  RCR5;                         /**< 0094: SAI Receive Configuration 5 Register                         */
        uint8_t   RESERVED_4[8];                /**< 0098: 0x8 bytes                                                    */
   __I  uint32_t  RDR[2];                       /**< 00A0: SAI Receive Data Register                                    */
        uint8_t   RESERVED_5[24];               /**< 00A8: 0x18 bytes                                                   */
   __I  uint32_t  RFR[2];                       /**< 00C0: SAI Receive FIFO Register                                    */
        uint8_t   RESERVED_6[24];               /**< 00C8: 0x18 bytes                                                   */
   __IO uint32_t  RMR;                          /**< 00E0: SAI Receive Mask Register                                    */
        uint8_t   RESERVED_7[28];               /**< 00E4: 0x1C bytes                                                   */
   __IO uint32_t  MCR;                          /**< 0100: SAI MCLK Control Register                                    */
   __IO uint32_t  MDR;                          /**< 0104: MCLK Divide Register                                         */
} I2S_Type;


/** @brief Register Masks for I2S */

/* -------------------------------------------------------------------------------- */
/* -----------     'I2S0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup I2S_Register_Masks_GROUP I2S Register Masks */
/** @{ */

/** @name TCSR - SAI Transmit Control Register */ /** @{ */
#define I2S_TCSR_FRDE_MASK                       (0x1U)                                              /**< I2S0_TCSR.FRDE Mask                     */
#define I2S_TCSR_FRDE_SHIFT                      (0U)                                                /**< I2S0_TCSR.FRDE Position                 */
#define I2S_TCSR_FRDE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FRDE_SHIFT))&I2S_TCSR_FRDE_MASK) /**< I2S0_TCSR.FRDE Field                    */
#define I2S_TCSR_FWDE_MASK                       (0x2U)                                              /**< I2S0_TCSR.FWDE Mask                     */
#define I2S_TCSR_FWDE_SHIFT                      (1U)                                                /**< I2S0_TCSR.FWDE Position                 */
#define I2S_TCSR_FWDE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FWDE_SHIFT))&I2S_TCSR_FWDE_MASK) /**< I2S0_TCSR.FWDE Field                    */
#define I2S_TCSR_FRIE_MASK                       (0x100U)                                            /**< I2S0_TCSR.FRIE Mask                     */
#define I2S_TCSR_FRIE_SHIFT                      (8U)                                                /**< I2S0_TCSR.FRIE Position                 */
#define I2S_TCSR_FRIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FRIE_SHIFT))&I2S_TCSR_FRIE_MASK) /**< I2S0_TCSR.FRIE Field                    */
#define I2S_TCSR_FWIE_MASK                       (0x200U)                                            /**< I2S0_TCSR.FWIE Mask                     */
#define I2S_TCSR_FWIE_SHIFT                      (9U)                                                /**< I2S0_TCSR.FWIE Position                 */
#define I2S_TCSR_FWIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FWIE_SHIFT))&I2S_TCSR_FWIE_MASK) /**< I2S0_TCSR.FWIE Field                    */
#define I2S_TCSR_FEIE_MASK                       (0x400U)                                            /**< I2S0_TCSR.FEIE Mask                     */
#define I2S_TCSR_FEIE_SHIFT                      (10U)                                               /**< I2S0_TCSR.FEIE Position                 */
#define I2S_TCSR_FEIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FEIE_SHIFT))&I2S_TCSR_FEIE_MASK) /**< I2S0_TCSR.FEIE Field                    */
#define I2S_TCSR_SEIE_MASK                       (0x800U)                                            /**< I2S0_TCSR.SEIE Mask                     */
#define I2S_TCSR_SEIE_SHIFT                      (11U)                                               /**< I2S0_TCSR.SEIE Position                 */
#define I2S_TCSR_SEIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_SEIE_SHIFT))&I2S_TCSR_SEIE_MASK) /**< I2S0_TCSR.SEIE Field                    */
#define I2S_TCSR_WSIE_MASK                       (0x1000U)                                           /**< I2S0_TCSR.WSIE Mask                     */
#define I2S_TCSR_WSIE_SHIFT                      (12U)                                               /**< I2S0_TCSR.WSIE Position                 */
#define I2S_TCSR_WSIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_WSIE_SHIFT))&I2S_TCSR_WSIE_MASK) /**< I2S0_TCSR.WSIE Field                    */
#define I2S_TCSR_FRF_MASK                        (0x10000U)                                          /**< I2S0_TCSR.FRF Mask                      */
#define I2S_TCSR_FRF_SHIFT                       (16U)                                               /**< I2S0_TCSR.FRF Position                  */
#define I2S_TCSR_FRF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FRF_SHIFT))&I2S_TCSR_FRF_MASK) /**< I2S0_TCSR.FRF Field                     */
#define I2S_TCSR_FWF_MASK                        (0x20000U)                                          /**< I2S0_TCSR.FWF Mask                      */
#define I2S_TCSR_FWF_SHIFT                       (17U)                                               /**< I2S0_TCSR.FWF Position                  */
#define I2S_TCSR_FWF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FWF_SHIFT))&I2S_TCSR_FWF_MASK) /**< I2S0_TCSR.FWF Field                     */
#define I2S_TCSR_FEF_MASK                        (0x40000U)                                          /**< I2S0_TCSR.FEF Mask                      */
#define I2S_TCSR_FEF_SHIFT                       (18U)                                               /**< I2S0_TCSR.FEF Position                  */
#define I2S_TCSR_FEF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FEF_SHIFT))&I2S_TCSR_FEF_MASK) /**< I2S0_TCSR.FEF Field                     */
#define I2S_TCSR_SEF_MASK                        (0x80000U)                                          /**< I2S0_TCSR.SEF Mask                      */
#define I2S_TCSR_SEF_SHIFT                       (19U)                                               /**< I2S0_TCSR.SEF Position                  */
#define I2S_TCSR_SEF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_SEF_SHIFT))&I2S_TCSR_SEF_MASK) /**< I2S0_TCSR.SEF Field                     */
#define I2S_TCSR_WSF_MASK                        (0x100000U)                                         /**< I2S0_TCSR.WSF Mask                      */
#define I2S_TCSR_WSF_SHIFT                       (20U)                                               /**< I2S0_TCSR.WSF Position                  */
#define I2S_TCSR_WSF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_WSF_SHIFT))&I2S_TCSR_WSF_MASK) /**< I2S0_TCSR.WSF Field                     */
#define I2S_TCSR_SR_MASK                         (0x1000000U)                                        /**< I2S0_TCSR.SR Mask                       */
#define I2S_TCSR_SR_SHIFT                        (24U)                                               /**< I2S0_TCSR.SR Position                   */
#define I2S_TCSR_SR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_SR_SHIFT))&I2S_TCSR_SR_MASK) /**< I2S0_TCSR.SR Field                      */
#define I2S_TCSR_FR_MASK                         (0x2000000U)                                        /**< I2S0_TCSR.FR Mask                       */
#define I2S_TCSR_FR_SHIFT                        (25U)                                               /**< I2S0_TCSR.FR Position                   */
#define I2S_TCSR_FR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_FR_SHIFT))&I2S_TCSR_FR_MASK) /**< I2S0_TCSR.FR Field                      */
#define I2S_TCSR_BCE_MASK                        (0x10000000U)                                       /**< I2S0_TCSR.BCE Mask                      */
#define I2S_TCSR_BCE_SHIFT                       (28U)                                               /**< I2S0_TCSR.BCE Position                  */
#define I2S_TCSR_BCE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_BCE_SHIFT))&I2S_TCSR_BCE_MASK) /**< I2S0_TCSR.BCE Field                     */
#define I2S_TCSR_DBGE_MASK                       (0x20000000U)                                       /**< I2S0_TCSR.DBGE Mask                     */
#define I2S_TCSR_DBGE_SHIFT                      (29U)                                               /**< I2S0_TCSR.DBGE Position                 */
#define I2S_TCSR_DBGE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_DBGE_SHIFT))&I2S_TCSR_DBGE_MASK) /**< I2S0_TCSR.DBGE Field                    */
#define I2S_TCSR_STOPE_MASK                      (0x40000000U)                                       /**< I2S0_TCSR.STOPE Mask                    */
#define I2S_TCSR_STOPE_SHIFT                     (30U)                                               /**< I2S0_TCSR.STOPE Position                */
#define I2S_TCSR_STOPE(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_STOPE_SHIFT))&I2S_TCSR_STOPE_MASK) /**< I2S0_TCSR.STOPE Field                   */
#define I2S_TCSR_TE_MASK                         (0x80000000U)                                       /**< I2S0_TCSR.TE Mask                       */
#define I2S_TCSR_TE_SHIFT                        (31U)                                               /**< I2S0_TCSR.TE Position                   */
#define I2S_TCSR_TE(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TCSR_TE_SHIFT))&I2S_TCSR_TE_MASK) /**< I2S0_TCSR.TE Field                      */
/** @} */

/** @name TCR1 - SAI Transmit Configuration 1 Register */ /** @{ */
#define I2S_TCR1_TFW_MASK                        (0x7U)                                              /**< I2S0_TCR1.TFW Mask                      */
#define I2S_TCR1_TFW_SHIFT                       (0U)                                                /**< I2S0_TCR1.TFW Position                  */
#define I2S_TCR1_TFW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR1_TFW_SHIFT))&I2S_TCR1_TFW_MASK) /**< I2S0_TCR1.TFW Field                     */
/** @} */

/** @name TCR2 - SAI Transmit Configuration 2 Register */ /** @{ */
#define I2S_TCR2_DIV_MASK                        (0xFFU)                                             /**< I2S0_TCR2.DIV Mask                      */
#define I2S_TCR2_DIV_SHIFT                       (0U)                                                /**< I2S0_TCR2.DIV Position                  */
#define I2S_TCR2_DIV(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_DIV_SHIFT))&I2S_TCR2_DIV_MASK) /**< I2S0_TCR2.DIV Field                     */
#define I2S_TCR2_BCD_MASK                        (0x1000000U)                                        /**< I2S0_TCR2.BCD Mask                      */
#define I2S_TCR2_BCD_SHIFT                       (24U)                                               /**< I2S0_TCR2.BCD Position                  */
#define I2S_TCR2_BCD(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_BCD_SHIFT))&I2S_TCR2_BCD_MASK) /**< I2S0_TCR2.BCD Field                     */
#define I2S_TCR2_BCP_MASK                        (0x2000000U)                                        /**< I2S0_TCR2.BCP Mask                      */
#define I2S_TCR2_BCP_SHIFT                       (25U)                                               /**< I2S0_TCR2.BCP Position                  */
#define I2S_TCR2_BCP(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_BCP_SHIFT))&I2S_TCR2_BCP_MASK) /**< I2S0_TCR2.BCP Field                     */
#define I2S_TCR2_MSEL_MASK                       (0xC000000U)                                        /**< I2S0_TCR2.MSEL Mask                     */
#define I2S_TCR2_MSEL_SHIFT                      (26U)                                               /**< I2S0_TCR2.MSEL Position                 */
#define I2S_TCR2_MSEL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_MSEL_SHIFT))&I2S_TCR2_MSEL_MASK) /**< I2S0_TCR2.MSEL Field                    */
#define I2S_TCR2_BCI_MASK                        (0x10000000U)                                       /**< I2S0_TCR2.BCI Mask                      */
#define I2S_TCR2_BCI_SHIFT                       (28U)                                               /**< I2S0_TCR2.BCI Position                  */
#define I2S_TCR2_BCI(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_BCI_SHIFT))&I2S_TCR2_BCI_MASK) /**< I2S0_TCR2.BCI Field                     */
#define I2S_TCR2_BCS_MASK                        (0x20000000U)                                       /**< I2S0_TCR2.BCS Mask                      */
#define I2S_TCR2_BCS_SHIFT                       (29U)                                               /**< I2S0_TCR2.BCS Position                  */
#define I2S_TCR2_BCS(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_BCS_SHIFT))&I2S_TCR2_BCS_MASK) /**< I2S0_TCR2.BCS Field                     */
#define I2S_TCR2_SYNC_MASK                       (0xC0000000U)                                       /**< I2S0_TCR2.SYNC Mask                     */
#define I2S_TCR2_SYNC_SHIFT                      (30U)                                               /**< I2S0_TCR2.SYNC Position                 */
#define I2S_TCR2_SYNC(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR2_SYNC_SHIFT))&I2S_TCR2_SYNC_MASK) /**< I2S0_TCR2.SYNC Field                    */
/** @} */

/** @name TCR3 - SAI Transmit Configuration 3 Register */ /** @{ */
#define I2S_TCR3_WDFL_MASK                       (0x1FU)                                             /**< I2S0_TCR3.WDFL Mask                     */
#define I2S_TCR3_WDFL_SHIFT                      (0U)                                                /**< I2S0_TCR3.WDFL Position                 */
#define I2S_TCR3_WDFL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR3_WDFL_SHIFT))&I2S_TCR3_WDFL_MASK) /**< I2S0_TCR3.WDFL Field                    */
#define I2S_TCR3_TCE_MASK                        (0x30000U)                                          /**< I2S0_TCR3.TCE Mask                      */
#define I2S_TCR3_TCE_SHIFT                       (16U)                                               /**< I2S0_TCR3.TCE Position                  */
#define I2S_TCR3_TCE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR3_TCE_SHIFT))&I2S_TCR3_TCE_MASK) /**< I2S0_TCR3.TCE Field                     */
/** @} */

/** @name TCR4 - SAI Transmit Configuration 4 Register */ /** @{ */
#define I2S_TCR4_FSD_MASK                        (0x1U)                                              /**< I2S0_TCR4.FSD Mask                      */
#define I2S_TCR4_FSD_SHIFT                       (0U)                                                /**< I2S0_TCR4.FSD Position                  */
#define I2S_TCR4_FSD(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FSD_SHIFT))&I2S_TCR4_FSD_MASK) /**< I2S0_TCR4.FSD Field                     */
#define I2S_TCR4_FSP_MASK                        (0x2U)                                              /**< I2S0_TCR4.FSP Mask                      */
#define I2S_TCR4_FSP_SHIFT                       (1U)                                                /**< I2S0_TCR4.FSP Position                  */
#define I2S_TCR4_FSP(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FSP_SHIFT))&I2S_TCR4_FSP_MASK) /**< I2S0_TCR4.FSP Field                     */
#define I2S_TCR4_FSE_MASK                        (0x8U)                                              /**< I2S0_TCR4.FSE Mask                      */
#define I2S_TCR4_FSE_SHIFT                       (3U)                                                /**< I2S0_TCR4.FSE Position                  */
#define I2S_TCR4_FSE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FSE_SHIFT))&I2S_TCR4_FSE_MASK) /**< I2S0_TCR4.FSE Field                     */
#define I2S_TCR4_MF_MASK                         (0x10U)                                             /**< I2S0_TCR4.MF Mask                       */
#define I2S_TCR4_MF_SHIFT                        (4U)                                                /**< I2S0_TCR4.MF Position                   */
#define I2S_TCR4_MF(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_MF_SHIFT))&I2S_TCR4_MF_MASK) /**< I2S0_TCR4.MF Field                      */
#define I2S_TCR4_SYWD_MASK                       (0x1F00U)                                           /**< I2S0_TCR4.SYWD Mask                     */
#define I2S_TCR4_SYWD_SHIFT                      (8U)                                                /**< I2S0_TCR4.SYWD Position                 */
#define I2S_TCR4_SYWD(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_SYWD_SHIFT))&I2S_TCR4_SYWD_MASK) /**< I2S0_TCR4.SYWD Field                    */
#define I2S_TCR4_FRSZ_MASK                       (0x1F0000U)                                         /**< I2S0_TCR4.FRSZ Mask                     */
#define I2S_TCR4_FRSZ_SHIFT                      (16U)                                               /**< I2S0_TCR4.FRSZ Position                 */
#define I2S_TCR4_FRSZ(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_TCR4_FRSZ_SHIFT))&I2S_TCR4_FRSZ_MASK) /**< I2S0_TCR4.FRSZ Field                    */
/** @} */

/** @name TCR5 - SAI Transmit Configuration 5 Register */ /** @{ */
#define I2S_TCR5_FBT_MASK                        (0x1F00U)                                           /**< I2S0_TCR5.FBT Mask                      */
#define I2S_TCR5_FBT_SHIFT                       (8U)                                                /**< I2S0_TCR5.FBT Position                  */
#define I2S_TCR5_FBT(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR5_FBT_SHIFT))&I2S_TCR5_FBT_MASK) /**< I2S0_TCR5.FBT Field                     */
#define I2S_TCR5_W0W_MASK                        (0x1F0000U)                                         /**< I2S0_TCR5.W0W Mask                      */
#define I2S_TCR5_W0W_SHIFT                       (16U)                                               /**< I2S0_TCR5.W0W Position                  */
#define I2S_TCR5_W0W(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR5_W0W_SHIFT))&I2S_TCR5_W0W_MASK) /**< I2S0_TCR5.W0W Field                     */
#define I2S_TCR5_WNW_MASK                        (0x1F000000U)                                       /**< I2S0_TCR5.WNW Mask                      */
#define I2S_TCR5_WNW_SHIFT                       (24U)                                               /**< I2S0_TCR5.WNW Position                  */
#define I2S_TCR5_WNW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_TCR5_WNW_SHIFT))&I2S_TCR5_WNW_MASK) /**< I2S0_TCR5.WNW Field                     */
/** @} */

/** @name TDR - Transmit Data Register */ /** @{ */
#define I2S_TDR_TDR_MASK                         (0xFFFFFFFFU)                                       /**< I2S0_TDR.TDR Mask                       */
#define I2S_TDR_TDR_SHIFT                        (0U)                                                /**< I2S0_TDR.TDR Position                   */
#define I2S_TDR_TDR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TDR_TDR_SHIFT))&I2S_TDR_TDR_MASK) /**< I2S0_TDR.TDR Field                      */
/** @} */

/** @name TFR - SAI Transmit FIFO Register */ /** @{ */
#define I2S_TFR_RFP_MASK                         (0xFU)                                              /**< I2S0_TFR.RFP Mask                       */
#define I2S_TFR_RFP_SHIFT                        (0U)                                                /**< I2S0_TFR.RFP Position                   */
#define I2S_TFR_RFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TFR_RFP_SHIFT))&I2S_TFR_RFP_MASK) /**< I2S0_TFR.RFP Field                      */
#define I2S_TFR_WFP_MASK                         (0xF0000U)                                          /**< I2S0_TFR.WFP Mask                       */
#define I2S_TFR_WFP_SHIFT                        (16U)                                               /**< I2S0_TFR.WFP Position                   */
#define I2S_TFR_WFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TFR_WFP_SHIFT))&I2S_TFR_WFP_MASK) /**< I2S0_TFR.WFP Field                      */
/** @} */

/** @name TMR - SAI Transmit Mask Register */ /** @{ */
#define I2S_TMR_TWM_MASK                         (0xFFFFU)                                           /**< I2S0_TMR.TWM Mask                       */
#define I2S_TMR_TWM_SHIFT                        (0U)                                                /**< I2S0_TMR.TWM Position                   */
#define I2S_TMR_TWM(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_TMR_TWM_SHIFT))&I2S_TMR_TWM_MASK) /**< I2S0_TMR.TWM Field                      */
/** @} */

/** @name RCSR - SAI Receive Control Register */ /** @{ */
#define I2S_RCSR_FRDE_MASK                       (0x1U)                                              /**< I2S0_RCSR.FRDE Mask                     */
#define I2S_RCSR_FRDE_SHIFT                      (0U)                                                /**< I2S0_RCSR.FRDE Position                 */
#define I2S_RCSR_FRDE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FRDE_SHIFT))&I2S_RCSR_FRDE_MASK) /**< I2S0_RCSR.FRDE Field                    */
#define I2S_RCSR_FWDE_MASK                       (0x2U)                                              /**< I2S0_RCSR.FWDE Mask                     */
#define I2S_RCSR_FWDE_SHIFT                      (1U)                                                /**< I2S0_RCSR.FWDE Position                 */
#define I2S_RCSR_FWDE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FWDE_SHIFT))&I2S_RCSR_FWDE_MASK) /**< I2S0_RCSR.FWDE Field                    */
#define I2S_RCSR_FRIE_MASK                       (0x100U)                                            /**< I2S0_RCSR.FRIE Mask                     */
#define I2S_RCSR_FRIE_SHIFT                      (8U)                                                /**< I2S0_RCSR.FRIE Position                 */
#define I2S_RCSR_FRIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FRIE_SHIFT))&I2S_RCSR_FRIE_MASK) /**< I2S0_RCSR.FRIE Field                    */
#define I2S_RCSR_FWIE_MASK                       (0x200U)                                            /**< I2S0_RCSR.FWIE Mask                     */
#define I2S_RCSR_FWIE_SHIFT                      (9U)                                                /**< I2S0_RCSR.FWIE Position                 */
#define I2S_RCSR_FWIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FWIE_SHIFT))&I2S_RCSR_FWIE_MASK) /**< I2S0_RCSR.FWIE Field                    */
#define I2S_RCSR_FEIE_MASK                       (0x400U)                                            /**< I2S0_RCSR.FEIE Mask                     */
#define I2S_RCSR_FEIE_SHIFT                      (10U)                                               /**< I2S0_RCSR.FEIE Position                 */
#define I2S_RCSR_FEIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FEIE_SHIFT))&I2S_RCSR_FEIE_MASK) /**< I2S0_RCSR.FEIE Field                    */
#define I2S_RCSR_SEIE_MASK                       (0x800U)                                            /**< I2S0_RCSR.SEIE Mask                     */
#define I2S_RCSR_SEIE_SHIFT                      (11U)                                               /**< I2S0_RCSR.SEIE Position                 */
#define I2S_RCSR_SEIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_SEIE_SHIFT))&I2S_RCSR_SEIE_MASK) /**< I2S0_RCSR.SEIE Field                    */
#define I2S_RCSR_WSIE_MASK                       (0x1000U)                                           /**< I2S0_RCSR.WSIE Mask                     */
#define I2S_RCSR_WSIE_SHIFT                      (12U)                                               /**< I2S0_RCSR.WSIE Position                 */
#define I2S_RCSR_WSIE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_WSIE_SHIFT))&I2S_RCSR_WSIE_MASK) /**< I2S0_RCSR.WSIE Field                    */
#define I2S_RCSR_FRF_MASK                        (0x10000U)                                          /**< I2S0_RCSR.FRF Mask                      */
#define I2S_RCSR_FRF_SHIFT                       (16U)                                               /**< I2S0_RCSR.FRF Position                  */
#define I2S_RCSR_FRF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FRF_SHIFT))&I2S_RCSR_FRF_MASK) /**< I2S0_RCSR.FRF Field                     */
#define I2S_RCSR_FWF_MASK                        (0x20000U)                                          /**< I2S0_RCSR.FWF Mask                      */
#define I2S_RCSR_FWF_SHIFT                       (17U)                                               /**< I2S0_RCSR.FWF Position                  */
#define I2S_RCSR_FWF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FWF_SHIFT))&I2S_RCSR_FWF_MASK) /**< I2S0_RCSR.FWF Field                     */
#define I2S_RCSR_FEF_MASK                        (0x40000U)                                          /**< I2S0_RCSR.FEF Mask                      */
#define I2S_RCSR_FEF_SHIFT                       (18U)                                               /**< I2S0_RCSR.FEF Position                  */
#define I2S_RCSR_FEF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FEF_SHIFT))&I2S_RCSR_FEF_MASK) /**< I2S0_RCSR.FEF Field                     */
#define I2S_RCSR_SEF_MASK                        (0x80000U)                                          /**< I2S0_RCSR.SEF Mask                      */
#define I2S_RCSR_SEF_SHIFT                       (19U)                                               /**< I2S0_RCSR.SEF Position                  */
#define I2S_RCSR_SEF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_SEF_SHIFT))&I2S_RCSR_SEF_MASK) /**< I2S0_RCSR.SEF Field                     */
#define I2S_RCSR_WSF_MASK                        (0x100000U)                                         /**< I2S0_RCSR.WSF Mask                      */
#define I2S_RCSR_WSF_SHIFT                       (20U)                                               /**< I2S0_RCSR.WSF Position                  */
#define I2S_RCSR_WSF(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_WSF_SHIFT))&I2S_RCSR_WSF_MASK) /**< I2S0_RCSR.WSF Field                     */
#define I2S_RCSR_SR_MASK                         (0x1000000U)                                        /**< I2S0_RCSR.SR Mask                       */
#define I2S_RCSR_SR_SHIFT                        (24U)                                               /**< I2S0_RCSR.SR Position                   */
#define I2S_RCSR_SR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_SR_SHIFT))&I2S_RCSR_SR_MASK) /**< I2S0_RCSR.SR Field                      */
#define I2S_RCSR_FR_MASK                         (0x2000000U)                                        /**< I2S0_RCSR.FR Mask                       */
#define I2S_RCSR_FR_SHIFT                        (25U)                                               /**< I2S0_RCSR.FR Position                   */
#define I2S_RCSR_FR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_FR_SHIFT))&I2S_RCSR_FR_MASK) /**< I2S0_RCSR.FR Field                      */
#define I2S_RCSR_BCE_MASK                        (0x10000000U)                                       /**< I2S0_RCSR.BCE Mask                      */
#define I2S_RCSR_BCE_SHIFT                       (28U)                                               /**< I2S0_RCSR.BCE Position                  */
#define I2S_RCSR_BCE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_BCE_SHIFT))&I2S_RCSR_BCE_MASK) /**< I2S0_RCSR.BCE Field                     */
#define I2S_RCSR_DBGE_MASK                       (0x20000000U)                                       /**< I2S0_RCSR.DBGE Mask                     */
#define I2S_RCSR_DBGE_SHIFT                      (29U)                                               /**< I2S0_RCSR.DBGE Position                 */
#define I2S_RCSR_DBGE(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_DBGE_SHIFT))&I2S_RCSR_DBGE_MASK) /**< I2S0_RCSR.DBGE Field                    */
#define I2S_RCSR_STOPE_MASK                      (0x40000000U)                                       /**< I2S0_RCSR.STOPE Mask                    */
#define I2S_RCSR_STOPE_SHIFT                     (30U)                                               /**< I2S0_RCSR.STOPE Position                */
#define I2S_RCSR_STOPE(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_STOPE_SHIFT))&I2S_RCSR_STOPE_MASK) /**< I2S0_RCSR.STOPE Field                   */
#define I2S_RCSR_RE_MASK                         (0x80000000U)                                       /**< I2S0_RCSR.RE Mask                       */
#define I2S_RCSR_RE_SHIFT                        (31U)                                               /**< I2S0_RCSR.RE Position                   */
#define I2S_RCSR_RE(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RCSR_RE_SHIFT))&I2S_RCSR_RE_MASK) /**< I2S0_RCSR.RE Field                      */
/** @} */

/** @name RCR1 - SAI Receive Configuration 1 Register */ /** @{ */
#define I2S_RCR1_RFW_MASK                        (0x7U)                                              /**< I2S0_RCR1.RFW Mask                      */
#define I2S_RCR1_RFW_SHIFT                       (0U)                                                /**< I2S0_RCR1.RFW Position                  */
#define I2S_RCR1_RFW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR1_RFW_SHIFT))&I2S_RCR1_RFW_MASK) /**< I2S0_RCR1.RFW Field                     */
/** @} */

/** @name RCR2 - SAI Receive Configuration 2 Register */ /** @{ */
#define I2S_RCR2_DIV_MASK                        (0xFFU)                                             /**< I2S0_RCR2.DIV Mask                      */
#define I2S_RCR2_DIV_SHIFT                       (0U)                                                /**< I2S0_RCR2.DIV Position                  */
#define I2S_RCR2_DIV(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_DIV_SHIFT))&I2S_RCR2_DIV_MASK) /**< I2S0_RCR2.DIV Field                     */
#define I2S_RCR2_BCD_MASK                        (0x1000000U)                                        /**< I2S0_RCR2.BCD Mask                      */
#define I2S_RCR2_BCD_SHIFT                       (24U)                                               /**< I2S0_RCR2.BCD Position                  */
#define I2S_RCR2_BCD(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_BCD_SHIFT))&I2S_RCR2_BCD_MASK) /**< I2S0_RCR2.BCD Field                     */
#define I2S_RCR2_BCP_MASK                        (0x2000000U)                                        /**< I2S0_RCR2.BCP Mask                      */
#define I2S_RCR2_BCP_SHIFT                       (25U)                                               /**< I2S0_RCR2.BCP Position                  */
#define I2S_RCR2_BCP(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_BCP_SHIFT))&I2S_RCR2_BCP_MASK) /**< I2S0_RCR2.BCP Field                     */
#define I2S_RCR2_MSEL_MASK                       (0xC000000U)                                        /**< I2S0_RCR2.MSEL Mask                     */
#define I2S_RCR2_MSEL_SHIFT                      (26U)                                               /**< I2S0_RCR2.MSEL Position                 */
#define I2S_RCR2_MSEL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_MSEL_SHIFT))&I2S_RCR2_MSEL_MASK) /**< I2S0_RCR2.MSEL Field                    */
#define I2S_RCR2_BCI_MASK                        (0x10000000U)                                       /**< I2S0_RCR2.BCI Mask                      */
#define I2S_RCR2_BCI_SHIFT                       (28U)                                               /**< I2S0_RCR2.BCI Position                  */
#define I2S_RCR2_BCI(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_BCI_SHIFT))&I2S_RCR2_BCI_MASK) /**< I2S0_RCR2.BCI Field                     */
#define I2S_RCR2_BCS_MASK                        (0x20000000U)                                       /**< I2S0_RCR2.BCS Mask                      */
#define I2S_RCR2_BCS_SHIFT                       (29U)                                               /**< I2S0_RCR2.BCS Position                  */
#define I2S_RCR2_BCS(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_BCS_SHIFT))&I2S_RCR2_BCS_MASK) /**< I2S0_RCR2.BCS Field                     */
#define I2S_RCR2_SYNC_MASK                       (0xC0000000U)                                       /**< I2S0_RCR2.SYNC Mask                     */
#define I2S_RCR2_SYNC_SHIFT                      (30U)                                               /**< I2S0_RCR2.SYNC Position                 */
#define I2S_RCR2_SYNC(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR2_SYNC_SHIFT))&I2S_RCR2_SYNC_MASK) /**< I2S0_RCR2.SYNC Field                    */
/** @} */

/** @name RCR3 - SAI Receive Configuration 3 Register */ /** @{ */
#define I2S_RCR3_WDFL_MASK                       (0x1FU)                                             /**< I2S0_RCR3.WDFL Mask                     */
#define I2S_RCR3_WDFL_SHIFT                      (0U)                                                /**< I2S0_RCR3.WDFL Position                 */
#define I2S_RCR3_WDFL(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR3_WDFL_SHIFT))&I2S_RCR3_WDFL_MASK) /**< I2S0_RCR3.WDFL Field                    */
#define I2S_RCR3_RCE_MASK                        (0x30000U)                                          /**< I2S0_RCR3.RCE Mask                      */
#define I2S_RCR3_RCE_SHIFT                       (16U)                                               /**< I2S0_RCR3.RCE Position                  */
#define I2S_RCR3_RCE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR3_RCE_SHIFT))&I2S_RCR3_RCE_MASK) /**< I2S0_RCR3.RCE Field                     */
/** @} */

/** @name RCR4 - SAI Receive Configuration 4 Register */ /** @{ */
#define I2S_RCR4_FSD_MASK                        (0x1U)                                              /**< I2S0_RCR4.FSD Mask                      */
#define I2S_RCR4_FSD_SHIFT                       (0U)                                                /**< I2S0_RCR4.FSD Position                  */
#define I2S_RCR4_FSD(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FSD_SHIFT))&I2S_RCR4_FSD_MASK) /**< I2S0_RCR4.FSD Field                     */
#define I2S_RCR4_FSP_MASK                        (0x2U)                                              /**< I2S0_RCR4.FSP Mask                      */
#define I2S_RCR4_FSP_SHIFT                       (1U)                                                /**< I2S0_RCR4.FSP Position                  */
#define I2S_RCR4_FSP(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FSP_SHIFT))&I2S_RCR4_FSP_MASK) /**< I2S0_RCR4.FSP Field                     */
#define I2S_RCR4_FSE_MASK                        (0x8U)                                              /**< I2S0_RCR4.FSE Mask                      */
#define I2S_RCR4_FSE_SHIFT                       (3U)                                                /**< I2S0_RCR4.FSE Position                  */
#define I2S_RCR4_FSE(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FSE_SHIFT))&I2S_RCR4_FSE_MASK) /**< I2S0_RCR4.FSE Field                     */
#define I2S_RCR4_MF_MASK                         (0x10U)                                             /**< I2S0_RCR4.MF Mask                       */
#define I2S_RCR4_MF_SHIFT                        (4U)                                                /**< I2S0_RCR4.MF Position                   */
#define I2S_RCR4_MF(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_MF_SHIFT))&I2S_RCR4_MF_MASK) /**< I2S0_RCR4.MF Field                      */
#define I2S_RCR4_SYWD_MASK                       (0x1F00U)                                           /**< I2S0_RCR4.SYWD Mask                     */
#define I2S_RCR4_SYWD_SHIFT                      (8U)                                                /**< I2S0_RCR4.SYWD Position                 */
#define I2S_RCR4_SYWD(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_SYWD_SHIFT))&I2S_RCR4_SYWD_MASK) /**< I2S0_RCR4.SYWD Field                    */
#define I2S_RCR4_FRSZ_MASK                       (0x1F0000U)                                         /**< I2S0_RCR4.FRSZ Mask                     */
#define I2S_RCR4_FRSZ_SHIFT                      (16U)                                               /**< I2S0_RCR4.FRSZ Position                 */
#define I2S_RCR4_FRSZ(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_RCR4_FRSZ_SHIFT))&I2S_RCR4_FRSZ_MASK) /**< I2S0_RCR4.FRSZ Field                    */
/** @} */

/** @name RCR5 - SAI Receive Configuration 5 Register */ /** @{ */
#define I2S_RCR5_FBT_MASK                        (0x1F00U)                                           /**< I2S0_RCR5.FBT Mask                      */
#define I2S_RCR5_FBT_SHIFT                       (8U)                                                /**< I2S0_RCR5.FBT Position                  */
#define I2S_RCR5_FBT(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR5_FBT_SHIFT))&I2S_RCR5_FBT_MASK) /**< I2S0_RCR5.FBT Field                     */
#define I2S_RCR5_W0W_MASK                        (0x1F0000U)                                         /**< I2S0_RCR5.W0W Mask                      */
#define I2S_RCR5_W0W_SHIFT                       (16U)                                               /**< I2S0_RCR5.W0W Position                  */
#define I2S_RCR5_W0W(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR5_W0W_SHIFT))&I2S_RCR5_W0W_MASK) /**< I2S0_RCR5.W0W Field                     */
#define I2S_RCR5_WNW_MASK                        (0x1F000000U)                                       /**< I2S0_RCR5.WNW Mask                      */
#define I2S_RCR5_WNW_SHIFT                       (24U)                                               /**< I2S0_RCR5.WNW Position                  */
#define I2S_RCR5_WNW(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_RCR5_WNW_SHIFT))&I2S_RCR5_WNW_MASK) /**< I2S0_RCR5.WNW Field                     */
/** @} */

/** @name RDR - SAI Receive Data Register */ /** @{ */
#define I2S_RDR_RDR_MASK                         (0xFFFFFFFFU)                                       /**< I2S0_RDR.RDR Mask                       */
#define I2S_RDR_RDR_SHIFT                        (0U)                                                /**< I2S0_RDR.RDR Position                   */
#define I2S_RDR_RDR(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RDR_RDR_SHIFT))&I2S_RDR_RDR_MASK) /**< I2S0_RDR.RDR Field                      */
/** @} */

/** @name RFR - SAI Receive FIFO Register */ /** @{ */
#define I2S_RFR_RFP_MASK                         (0xFU)                                              /**< I2S0_RFR.RFP Mask                       */
#define I2S_RFR_RFP_SHIFT                        (0U)                                                /**< I2S0_RFR.RFP Position                   */
#define I2S_RFR_RFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RFR_RFP_SHIFT))&I2S_RFR_RFP_MASK) /**< I2S0_RFR.RFP Field                      */
#define I2S_RFR_WFP_MASK                         (0xF0000U)                                          /**< I2S0_RFR.WFP Mask                       */
#define I2S_RFR_WFP_SHIFT                        (16U)                                               /**< I2S0_RFR.WFP Position                   */
#define I2S_RFR_WFP(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RFR_WFP_SHIFT))&I2S_RFR_WFP_MASK) /**< I2S0_RFR.WFP Field                      */
/** @} */

/** @name RMR - SAI Receive Mask Register */ /** @{ */
#define I2S_RMR_RWM_MASK                         (0xFFFFU)                                           /**< I2S0_RMR.RWM Mask                       */
#define I2S_RMR_RWM_SHIFT                        (0U)                                                /**< I2S0_RMR.RWM Position                   */
#define I2S_RMR_RWM(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_RMR_RWM_SHIFT))&I2S_RMR_RWM_MASK) /**< I2S0_RMR.RWM Field                      */
/** @} */

/** @name MCR - SAI MCLK Control Register */ /** @{ */
#define I2S_MCR_MICS_MASK                        (0x3000000U)                                        /**< I2S0_MCR.MICS Mask                      */
#define I2S_MCR_MICS_SHIFT                       (24U)                                               /**< I2S0_MCR.MICS Position                  */
#define I2S_MCR_MICS(x)                          (((uint32_t)(((uint32_t)(x))<<I2S_MCR_MICS_SHIFT))&I2S_MCR_MICS_MASK) /**< I2S0_MCR.MICS Field                     */
#define I2S_MCR_MOE_MASK                         (0x40000000U)                                       /**< I2S0_MCR.MOE Mask                       */
#define I2S_MCR_MOE_SHIFT                        (30U)                                               /**< I2S0_MCR.MOE Position                   */
#define I2S_MCR_MOE(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_MCR_MOE_SHIFT))&I2S_MCR_MOE_MASK) /**< I2S0_MCR.MOE Field                      */
#define I2S_MCR_DUF_MASK                         (0x80000000U)                                       /**< I2S0_MCR.DUF Mask                       */
#define I2S_MCR_DUF_SHIFT                        (31U)                                               /**< I2S0_MCR.DUF Position                   */
#define I2S_MCR_DUF(x)                           (((uint32_t)(((uint32_t)(x))<<I2S_MCR_DUF_SHIFT))&I2S_MCR_DUF_MASK) /**< I2S0_MCR.DUF Field                      */
/** @} */

/** @name MDR - MCLK Divide Register */ /** @{ */
#define I2S_MDR_DIVIDE_MASK                      (0xFFFU)                                            /**< I2S0_MDR.DIVIDE Mask                    */
#define I2S_MDR_DIVIDE_SHIFT                     (0U)                                                /**< I2S0_MDR.DIVIDE Position                */
#define I2S_MDR_DIVIDE(x)                        (((uint32_t)(((uint32_t)(x))<<I2S_MDR_DIVIDE_SHIFT))&I2S_MDR_DIVIDE_MASK) /**< I2S0_MDR.DIVIDE Field                   */
#define I2S_MDR_FRACT_MASK                       (0xFF000U)                                          /**< I2S0_MDR.FRACT Mask                     */
#define I2S_MDR_FRACT_SHIFT                      (12U)                                               /**< I2S0_MDR.FRACT Position                 */
#define I2S_MDR_FRACT(x)                         (((uint32_t)(((uint32_t)(x))<<I2S_MDR_FRACT_SHIFT))&I2S_MDR_FRACT_MASK) /**< I2S0_MDR.FRACT Field                    */
/** @} */

/** @} */ /* End group I2S_Register_Masks_GROUP */


/* I2S0 - Peripheral instance base addresses */
#define I2S0_BasePtr                   0x4002F000UL //!< Peripheral base address
#define I2S0                           ((I2S_Type *) I2S0_BasePtr) //!< Freescale base pointer
#define I2S0_BASE_PTR                  (I2S0) //!< Freescale style base pointer
#define I2S0_IRQS { I2S0_Tx_IRQn, I2S0_Rx_IRQn,  }


/** @} */ /* End group I2S_Peripheral_access_layer_GROUP */


/** @brief C Struct for LLWU */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LLWU_Peripheral_access_layer_GROUP LLWU Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LLWU (file:LLWU_ME_PE4_FILT2_RST)       ================ */
/* ================================================================================ */

/**
 * @brief Low leakage wakeup unit
 */
/**
 * @struct LLWU_Type
 * @brief  C Struct allowing access to LLWU registers
 */
typedef struct LLWU_Type {
   union {                                      /**< 0000: (size=0004)                                                  */
      __IO uint8_t   PE[4];                     /**< 0000: Pin Enable  Register                                         */
      struct {                                  /**< 0000: (size=0004)                                                  */
         __IO uint8_t   PE1;                    /**< 0000: Pin Enable 1 Register                                        */
         __IO uint8_t   PE2;                    /**< 0001: Pin Enable 2 Register                                        */
         __IO uint8_t   PE3;                    /**< 0002: Pin Enable 3 Register                                        */
         __IO uint8_t   PE4;                    /**< 0003: Pin Enable 4 Register                                        */
      };
   };
   __IO uint8_t   ME;                           /**< 0004: Module Enable Register                                       */
   union {                                      /**< 0005: (size=0002)                                                  */
      __IO uint8_t   PF[2];                     /**< 0005: Pin Flag  Register                                           */
      struct {                                  /**< 0005: (size=0002)                                                  */
         __IO uint8_t   PF1;                    /**< 0005: Pin Flag 1 Register                                          */
         __IO uint8_t   PF2;                    /**< 0006: Pin Flag 2 Register                                          */
      };
   };
   __I  uint8_t   MF;                           /**< 0007: Module Flag Register                                         */
   union {                                      /**< 0008: (size=0002)                                                  */
      __IO uint8_t   FILT[2];                   /**< 0008: Pin Filter register                                          */
      struct {                                  /**< 0008: (size=0002)                                                  */
         __IO uint8_t   FILT1;                  /**< 0008: Pin Filter register                                          */
         __IO uint8_t   FILT2;                  /**< 0009: Pin Filter register                                          */
      };
   };
   __IO uint8_t   RST;                          /**< 000A: Reset Enable Register                                        */
} LLWU_Type;


/** @brief Register Masks for LLWU */

/* -------------------------------------------------------------------------------- */
/* -----------     'LLWU' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup LLWU_Register_Masks_GROUP LLWU Register Masks */
/** @{ */

/** @name PE - Pin Enable %s Register */ /** @{ */
#define LLWU_PE_WUPE0_MASK                       (0x3U)                                              /**< LLWU_PE.WUPE0 Mask                      */
#define LLWU_PE_WUPE0_SHIFT                      (0U)                                                /**< LLWU_PE.WUPE0 Position                  */
#define LLWU_PE_WUPE0(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PE_WUPE0_SHIFT))&LLWU_PE_WUPE0_MASK) /**< LLWU_PE.WUPE0 Field                     */
#define LLWU_PE_WUPE1_MASK                       (0xCU)                                              /**< LLWU_PE.WUPE1 Mask                      */
#define LLWU_PE_WUPE1_SHIFT                      (2U)                                                /**< LLWU_PE.WUPE1 Position                  */
#define LLWU_PE_WUPE1(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PE_WUPE1_SHIFT))&LLWU_PE_WUPE1_MASK) /**< LLWU_PE.WUPE1 Field                     */
#define LLWU_PE_WUPE2_MASK                       (0x30U)                                             /**< LLWU_PE.WUPE2 Mask                      */
#define LLWU_PE_WUPE2_SHIFT                      (4U)                                                /**< LLWU_PE.WUPE2 Position                  */
#define LLWU_PE_WUPE2(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PE_WUPE2_SHIFT))&LLWU_PE_WUPE2_MASK) /**< LLWU_PE.WUPE2 Field                     */
#define LLWU_PE_WUPE3_MASK                       (0xC0U)                                             /**< LLWU_PE.WUPE3 Mask                      */
#define LLWU_PE_WUPE3_SHIFT                      (6U)                                                /**< LLWU_PE.WUPE3 Position                  */
#define LLWU_PE_WUPE3(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PE_WUPE3_SHIFT))&LLWU_PE_WUPE3_MASK) /**< LLWU_PE.WUPE3 Field                     */
/** @} */

/** @name PE1 - Pin Enable 1 Register */ /** @{ */
#define LLWU_PE1_WUPE0_MASK                      (0x3U)                                              /**< LLWU_PE1.WUPE0 Mask                     */
#define LLWU_PE1_WUPE0_SHIFT                     (0U)                                                /**< LLWU_PE1.WUPE0 Position                 */
#define LLWU_PE1_WUPE0(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE1_WUPE0_SHIFT))&LLWU_PE1_WUPE0_MASK) /**< LLWU_PE1.WUPE0 Field                    */
#define LLWU_PE1_WUPE1_MASK                      (0xCU)                                              /**< LLWU_PE1.WUPE1 Mask                     */
#define LLWU_PE1_WUPE1_SHIFT                     (2U)                                                /**< LLWU_PE1.WUPE1 Position                 */
#define LLWU_PE1_WUPE1(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE1_WUPE1_SHIFT))&LLWU_PE1_WUPE1_MASK) /**< LLWU_PE1.WUPE1 Field                    */
#define LLWU_PE1_WUPE2_MASK                      (0x30U)                                             /**< LLWU_PE1.WUPE2 Mask                     */
#define LLWU_PE1_WUPE2_SHIFT                     (4U)                                                /**< LLWU_PE1.WUPE2 Position                 */
#define LLWU_PE1_WUPE2(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE1_WUPE2_SHIFT))&LLWU_PE1_WUPE2_MASK) /**< LLWU_PE1.WUPE2 Field                    */
#define LLWU_PE1_WUPE3_MASK                      (0xC0U)                                             /**< LLWU_PE1.WUPE3 Mask                     */
#define LLWU_PE1_WUPE3_SHIFT                     (6U)                                                /**< LLWU_PE1.WUPE3 Position                 */
#define LLWU_PE1_WUPE3(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE1_WUPE3_SHIFT))&LLWU_PE1_WUPE3_MASK) /**< LLWU_PE1.WUPE3 Field                    */
/** @} */

/** @name PE2 - Pin Enable 2 Register */ /** @{ */
#define LLWU_PE2_WUPE4_MASK                      (0x3U)                                              /**< LLWU_PE2.WUPE4 Mask                     */
#define LLWU_PE2_WUPE4_SHIFT                     (0U)                                                /**< LLWU_PE2.WUPE4 Position                 */
#define LLWU_PE2_WUPE4(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE2_WUPE4_SHIFT))&LLWU_PE2_WUPE4_MASK) /**< LLWU_PE2.WUPE4 Field                    */
#define LLWU_PE2_WUPE5_MASK                      (0xCU)                                              /**< LLWU_PE2.WUPE5 Mask                     */
#define LLWU_PE2_WUPE5_SHIFT                     (2U)                                                /**< LLWU_PE2.WUPE5 Position                 */
#define LLWU_PE2_WUPE5(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE2_WUPE5_SHIFT))&LLWU_PE2_WUPE5_MASK) /**< LLWU_PE2.WUPE5 Field                    */
#define LLWU_PE2_WUPE6_MASK                      (0x30U)                                             /**< LLWU_PE2.WUPE6 Mask                     */
#define LLWU_PE2_WUPE6_SHIFT                     (4U)                                                /**< LLWU_PE2.WUPE6 Position                 */
#define LLWU_PE2_WUPE6(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE2_WUPE6_SHIFT))&LLWU_PE2_WUPE6_MASK) /**< LLWU_PE2.WUPE6 Field                    */
#define LLWU_PE2_WUPE7_MASK                      (0xC0U)                                             /**< LLWU_PE2.WUPE7 Mask                     */
#define LLWU_PE2_WUPE7_SHIFT                     (6U)                                                /**< LLWU_PE2.WUPE7 Position                 */
#define LLWU_PE2_WUPE7(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE2_WUPE7_SHIFT))&LLWU_PE2_WUPE7_MASK) /**< LLWU_PE2.WUPE7 Field                    */
/** @} */

/** @name PE3 - Pin Enable 3 Register */ /** @{ */
#define LLWU_PE3_WUPE8_MASK                      (0x3U)                                              /**< LLWU_PE3.WUPE8 Mask                     */
#define LLWU_PE3_WUPE8_SHIFT                     (0U)                                                /**< LLWU_PE3.WUPE8 Position                 */
#define LLWU_PE3_WUPE8(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE3_WUPE8_SHIFT))&LLWU_PE3_WUPE8_MASK) /**< LLWU_PE3.WUPE8 Field                    */
#define LLWU_PE3_WUPE9_MASK                      (0xCU)                                              /**< LLWU_PE3.WUPE9 Mask                     */
#define LLWU_PE3_WUPE9_SHIFT                     (2U)                                                /**< LLWU_PE3.WUPE9 Position                 */
#define LLWU_PE3_WUPE9(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PE3_WUPE9_SHIFT))&LLWU_PE3_WUPE9_MASK) /**< LLWU_PE3.WUPE9 Field                    */
#define LLWU_PE3_WUPE10_MASK                     (0x30U)                                             /**< LLWU_PE3.WUPE10 Mask                    */
#define LLWU_PE3_WUPE10_SHIFT                    (4U)                                                /**< LLWU_PE3.WUPE10 Position                */
#define LLWU_PE3_WUPE10(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE3_WUPE10_SHIFT))&LLWU_PE3_WUPE10_MASK) /**< LLWU_PE3.WUPE10 Field                   */
#define LLWU_PE3_WUPE11_MASK                     (0xC0U)                                             /**< LLWU_PE3.WUPE11 Mask                    */
#define LLWU_PE3_WUPE11_SHIFT                    (6U)                                                /**< LLWU_PE3.WUPE11 Position                */
#define LLWU_PE3_WUPE11(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE3_WUPE11_SHIFT))&LLWU_PE3_WUPE11_MASK) /**< LLWU_PE3.WUPE11 Field                   */
/** @} */

/** @name PE4 - Pin Enable 4 Register */ /** @{ */
#define LLWU_PE4_WUPE12_MASK                     (0x3U)                                              /**< LLWU_PE4.WUPE12 Mask                    */
#define LLWU_PE4_WUPE12_SHIFT                    (0U)                                                /**< LLWU_PE4.WUPE12 Position                */
#define LLWU_PE4_WUPE12(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE4_WUPE12_SHIFT))&LLWU_PE4_WUPE12_MASK) /**< LLWU_PE4.WUPE12 Field                   */
#define LLWU_PE4_WUPE13_MASK                     (0xCU)                                              /**< LLWU_PE4.WUPE13 Mask                    */
#define LLWU_PE4_WUPE13_SHIFT                    (2U)                                                /**< LLWU_PE4.WUPE13 Position                */
#define LLWU_PE4_WUPE13(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE4_WUPE13_SHIFT))&LLWU_PE4_WUPE13_MASK) /**< LLWU_PE4.WUPE13 Field                   */
#define LLWU_PE4_WUPE14_MASK                     (0x30U)                                             /**< LLWU_PE4.WUPE14 Mask                    */
#define LLWU_PE4_WUPE14_SHIFT                    (4U)                                                /**< LLWU_PE4.WUPE14 Position                */
#define LLWU_PE4_WUPE14(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE4_WUPE14_SHIFT))&LLWU_PE4_WUPE14_MASK) /**< LLWU_PE4.WUPE14 Field                   */
#define LLWU_PE4_WUPE15_MASK                     (0xC0U)                                             /**< LLWU_PE4.WUPE15 Mask                    */
#define LLWU_PE4_WUPE15_SHIFT                    (6U)                                                /**< LLWU_PE4.WUPE15 Position                */
#define LLWU_PE4_WUPE15(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_PE4_WUPE15_SHIFT))&LLWU_PE4_WUPE15_MASK) /**< LLWU_PE4.WUPE15 Field                   */
/** @} */

/** @name ME - Module Enable Register */ /** @{ */
#define LLWU_ME_WUME0_MASK                       (0x1U)                                              /**< LLWU_ME.WUME0 Mask                      */
#define LLWU_ME_WUME0_SHIFT                      (0U)                                                /**< LLWU_ME.WUME0 Position                  */
#define LLWU_ME_WUME0(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME0_SHIFT))&LLWU_ME_WUME0_MASK) /**< LLWU_ME.WUME0 Field                     */
#define LLWU_ME_WUME1_MASK                       (0x2U)                                              /**< LLWU_ME.WUME1 Mask                      */
#define LLWU_ME_WUME1_SHIFT                      (1U)                                                /**< LLWU_ME.WUME1 Position                  */
#define LLWU_ME_WUME1(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME1_SHIFT))&LLWU_ME_WUME1_MASK) /**< LLWU_ME.WUME1 Field                     */
#define LLWU_ME_WUME2_MASK                       (0x4U)                                              /**< LLWU_ME.WUME2 Mask                      */
#define LLWU_ME_WUME2_SHIFT                      (2U)                                                /**< LLWU_ME.WUME2 Position                  */
#define LLWU_ME_WUME2(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME2_SHIFT))&LLWU_ME_WUME2_MASK) /**< LLWU_ME.WUME2 Field                     */
#define LLWU_ME_WUME3_MASK                       (0x8U)                                              /**< LLWU_ME.WUME3 Mask                      */
#define LLWU_ME_WUME3_SHIFT                      (3U)                                                /**< LLWU_ME.WUME3 Position                  */
#define LLWU_ME_WUME3(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME3_SHIFT))&LLWU_ME_WUME3_MASK) /**< LLWU_ME.WUME3 Field                     */
#define LLWU_ME_WUME4_MASK                       (0x10U)                                             /**< LLWU_ME.WUME4 Mask                      */
#define LLWU_ME_WUME4_SHIFT                      (4U)                                                /**< LLWU_ME.WUME4 Position                  */
#define LLWU_ME_WUME4(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME4_SHIFT))&LLWU_ME_WUME4_MASK) /**< LLWU_ME.WUME4 Field                     */
#define LLWU_ME_WUME5_MASK                       (0x20U)                                             /**< LLWU_ME.WUME5 Mask                      */
#define LLWU_ME_WUME5_SHIFT                      (5U)                                                /**< LLWU_ME.WUME5 Position                  */
#define LLWU_ME_WUME5(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME5_SHIFT))&LLWU_ME_WUME5_MASK) /**< LLWU_ME.WUME5 Field                     */
#define LLWU_ME_WUME6_MASK                       (0x40U)                                             /**< LLWU_ME.WUME6 Mask                      */
#define LLWU_ME_WUME6_SHIFT                      (6U)                                                /**< LLWU_ME.WUME6 Position                  */
#define LLWU_ME_WUME6(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME6_SHIFT))&LLWU_ME_WUME6_MASK) /**< LLWU_ME.WUME6 Field                     */
#define LLWU_ME_WUME7_MASK                       (0x80U)                                             /**< LLWU_ME.WUME7 Mask                      */
#define LLWU_ME_WUME7_SHIFT                      (7U)                                                /**< LLWU_ME.WUME7 Position                  */
#define LLWU_ME_WUME7(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_ME_WUME7_SHIFT))&LLWU_ME_WUME7_MASK) /**< LLWU_ME.WUME7 Field                     */
/** @} */

/** @name PF - Pin Flag %s Register */ /** @{ */
#define LLWU_PF_WUF0_MASK                        (0x1U)                                              /**< LLWU_PF.WUF0 Mask                       */
#define LLWU_PF_WUF0_SHIFT                       (0U)                                                /**< LLWU_PF.WUF0 Position                   */
#define LLWU_PF_WUF0(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF0_SHIFT))&LLWU_PF_WUF0_MASK) /**< LLWU_PF.WUF0 Field                      */
#define LLWU_PF_WUF1_MASK                        (0x2U)                                              /**< LLWU_PF.WUF1 Mask                       */
#define LLWU_PF_WUF1_SHIFT                       (1U)                                                /**< LLWU_PF.WUF1 Position                   */
#define LLWU_PF_WUF1(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF1_SHIFT))&LLWU_PF_WUF1_MASK) /**< LLWU_PF.WUF1 Field                      */
#define LLWU_PF_WUF2_MASK                        (0x4U)                                              /**< LLWU_PF.WUF2 Mask                       */
#define LLWU_PF_WUF2_SHIFT                       (2U)                                                /**< LLWU_PF.WUF2 Position                   */
#define LLWU_PF_WUF2(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF2_SHIFT))&LLWU_PF_WUF2_MASK) /**< LLWU_PF.WUF2 Field                      */
#define LLWU_PF_WUF3_MASK                        (0x8U)                                              /**< LLWU_PF.WUF3 Mask                       */
#define LLWU_PF_WUF3_SHIFT                       (3U)                                                /**< LLWU_PF.WUF3 Position                   */
#define LLWU_PF_WUF3(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF3_SHIFT))&LLWU_PF_WUF3_MASK) /**< LLWU_PF.WUF3 Field                      */
#define LLWU_PF_WUF4_MASK                        (0x10U)                                             /**< LLWU_PF.WUF4 Mask                       */
#define LLWU_PF_WUF4_SHIFT                       (4U)                                                /**< LLWU_PF.WUF4 Position                   */
#define LLWU_PF_WUF4(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF4_SHIFT))&LLWU_PF_WUF4_MASK) /**< LLWU_PF.WUF4 Field                      */
#define LLWU_PF_WUF5_MASK                        (0x20U)                                             /**< LLWU_PF.WUF5 Mask                       */
#define LLWU_PF_WUF5_SHIFT                       (5U)                                                /**< LLWU_PF.WUF5 Position                   */
#define LLWU_PF_WUF5(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF5_SHIFT))&LLWU_PF_WUF5_MASK) /**< LLWU_PF.WUF5 Field                      */
#define LLWU_PF_WUF6_MASK                        (0x40U)                                             /**< LLWU_PF.WUF6 Mask                       */
#define LLWU_PF_WUF6_SHIFT                       (6U)                                                /**< LLWU_PF.WUF6 Position                   */
#define LLWU_PF_WUF6(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF6_SHIFT))&LLWU_PF_WUF6_MASK) /**< LLWU_PF.WUF6 Field                      */
#define LLWU_PF_WUF7_MASK                        (0x80U)                                             /**< LLWU_PF.WUF7 Mask                       */
#define LLWU_PF_WUF7_SHIFT                       (7U)                                                /**< LLWU_PF.WUF7 Position                   */
#define LLWU_PF_WUF7(x)                          (((uint8_t)(((uint8_t)(x))<<LLWU_PF_WUF7_SHIFT))&LLWU_PF_WUF7_MASK) /**< LLWU_PF.WUF7 Field                      */
/** @} */

/** @name PF1 - Pin Flag 1 Register */ /** @{ */
#define LLWU_PF1_WUF0_MASK                       (0x1U)                                              /**< LLWU_PF1.WUF0 Mask                      */
#define LLWU_PF1_WUF0_SHIFT                      (0U)                                                /**< LLWU_PF1.WUF0 Position                  */
#define LLWU_PF1_WUF0(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF0_SHIFT))&LLWU_PF1_WUF0_MASK) /**< LLWU_PF1.WUF0 Field                     */
#define LLWU_PF1_WUF1_MASK                       (0x2U)                                              /**< LLWU_PF1.WUF1 Mask                      */
#define LLWU_PF1_WUF1_SHIFT                      (1U)                                                /**< LLWU_PF1.WUF1 Position                  */
#define LLWU_PF1_WUF1(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF1_SHIFT))&LLWU_PF1_WUF1_MASK) /**< LLWU_PF1.WUF1 Field                     */
#define LLWU_PF1_WUF2_MASK                       (0x4U)                                              /**< LLWU_PF1.WUF2 Mask                      */
#define LLWU_PF1_WUF2_SHIFT                      (2U)                                                /**< LLWU_PF1.WUF2 Position                  */
#define LLWU_PF1_WUF2(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF2_SHIFT))&LLWU_PF1_WUF2_MASK) /**< LLWU_PF1.WUF2 Field                     */
#define LLWU_PF1_WUF3_MASK                       (0x8U)                                              /**< LLWU_PF1.WUF3 Mask                      */
#define LLWU_PF1_WUF3_SHIFT                      (3U)                                                /**< LLWU_PF1.WUF3 Position                  */
#define LLWU_PF1_WUF3(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF3_SHIFT))&LLWU_PF1_WUF3_MASK) /**< LLWU_PF1.WUF3 Field                     */
#define LLWU_PF1_WUF4_MASK                       (0x10U)                                             /**< LLWU_PF1.WUF4 Mask                      */
#define LLWU_PF1_WUF4_SHIFT                      (4U)                                                /**< LLWU_PF1.WUF4 Position                  */
#define LLWU_PF1_WUF4(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF4_SHIFT))&LLWU_PF1_WUF4_MASK) /**< LLWU_PF1.WUF4 Field                     */
#define LLWU_PF1_WUF5_MASK                       (0x20U)                                             /**< LLWU_PF1.WUF5 Mask                      */
#define LLWU_PF1_WUF5_SHIFT                      (5U)                                                /**< LLWU_PF1.WUF5 Position                  */
#define LLWU_PF1_WUF5(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF5_SHIFT))&LLWU_PF1_WUF5_MASK) /**< LLWU_PF1.WUF5 Field                     */
#define LLWU_PF1_WUF6_MASK                       (0x40U)                                             /**< LLWU_PF1.WUF6 Mask                      */
#define LLWU_PF1_WUF6_SHIFT                      (6U)                                                /**< LLWU_PF1.WUF6 Position                  */
#define LLWU_PF1_WUF6(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF6_SHIFT))&LLWU_PF1_WUF6_MASK) /**< LLWU_PF1.WUF6 Field                     */
#define LLWU_PF1_WUF7_MASK                       (0x80U)                                             /**< LLWU_PF1.WUF7 Mask                      */
#define LLWU_PF1_WUF7_SHIFT                      (7U)                                                /**< LLWU_PF1.WUF7 Position                  */
#define LLWU_PF1_WUF7(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF1_WUF7_SHIFT))&LLWU_PF1_WUF7_MASK) /**< LLWU_PF1.WUF7 Field                     */
/** @} */

/** @name PF2 - Pin Flag 2 Register */ /** @{ */
#define LLWU_PF2_WUF8_MASK                       (0x1U)                                              /**< LLWU_PF2.WUF8 Mask                      */
#define LLWU_PF2_WUF8_SHIFT                      (0U)                                                /**< LLWU_PF2.WUF8 Position                  */
#define LLWU_PF2_WUF8(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF8_SHIFT))&LLWU_PF2_WUF8_MASK) /**< LLWU_PF2.WUF8 Field                     */
#define LLWU_PF2_WUF9_MASK                       (0x2U)                                              /**< LLWU_PF2.WUF9 Mask                      */
#define LLWU_PF2_WUF9_SHIFT                      (1U)                                                /**< LLWU_PF2.WUF9 Position                  */
#define LLWU_PF2_WUF9(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF9_SHIFT))&LLWU_PF2_WUF9_MASK) /**< LLWU_PF2.WUF9 Field                     */
#define LLWU_PF2_WUF10_MASK                      (0x4U)                                              /**< LLWU_PF2.WUF10 Mask                     */
#define LLWU_PF2_WUF10_SHIFT                     (2U)                                                /**< LLWU_PF2.WUF10 Position                 */
#define LLWU_PF2_WUF10(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF10_SHIFT))&LLWU_PF2_WUF10_MASK) /**< LLWU_PF2.WUF10 Field                    */
#define LLWU_PF2_WUF11_MASK                      (0x8U)                                              /**< LLWU_PF2.WUF11 Mask                     */
#define LLWU_PF2_WUF11_SHIFT                     (3U)                                                /**< LLWU_PF2.WUF11 Position                 */
#define LLWU_PF2_WUF11(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF11_SHIFT))&LLWU_PF2_WUF11_MASK) /**< LLWU_PF2.WUF11 Field                    */
#define LLWU_PF2_WUF12_MASK                      (0x10U)                                             /**< LLWU_PF2.WUF12 Mask                     */
#define LLWU_PF2_WUF12_SHIFT                     (4U)                                                /**< LLWU_PF2.WUF12 Position                 */
#define LLWU_PF2_WUF12(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF12_SHIFT))&LLWU_PF2_WUF12_MASK) /**< LLWU_PF2.WUF12 Field                    */
#define LLWU_PF2_WUF13_MASK                      (0x20U)                                             /**< LLWU_PF2.WUF13 Mask                     */
#define LLWU_PF2_WUF13_SHIFT                     (5U)                                                /**< LLWU_PF2.WUF13 Position                 */
#define LLWU_PF2_WUF13(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF13_SHIFT))&LLWU_PF2_WUF13_MASK) /**< LLWU_PF2.WUF13 Field                    */
#define LLWU_PF2_WUF14_MASK                      (0x40U)                                             /**< LLWU_PF2.WUF14 Mask                     */
#define LLWU_PF2_WUF14_SHIFT                     (6U)                                                /**< LLWU_PF2.WUF14 Position                 */
#define LLWU_PF2_WUF14(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF14_SHIFT))&LLWU_PF2_WUF14_MASK) /**< LLWU_PF2.WUF14 Field                    */
#define LLWU_PF2_WUF15_MASK                      (0x80U)                                             /**< LLWU_PF2.WUF15 Mask                     */
#define LLWU_PF2_WUF15_SHIFT                     (7U)                                                /**< LLWU_PF2.WUF15 Position                 */
#define LLWU_PF2_WUF15(x)                        (((uint8_t)(((uint8_t)(x))<<LLWU_PF2_WUF15_SHIFT))&LLWU_PF2_WUF15_MASK) /**< LLWU_PF2.WUF15 Field                    */
/** @} */

/** @name MF - Module Flag Register */ /** @{ */
#define LLWU_MF_MWUF0_MASK                       (0x1U)                                              /**< LLWU_MF.MWUF0 Mask                      */
#define LLWU_MF_MWUF0_SHIFT                      (0U)                                                /**< LLWU_MF.MWUF0 Position                  */
#define LLWU_MF_MWUF0(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF0_SHIFT))&LLWU_MF_MWUF0_MASK) /**< LLWU_MF.MWUF0 Field                     */
#define LLWU_MF_MWUF1_MASK                       (0x2U)                                              /**< LLWU_MF.MWUF1 Mask                      */
#define LLWU_MF_MWUF1_SHIFT                      (1U)                                                /**< LLWU_MF.MWUF1 Position                  */
#define LLWU_MF_MWUF1(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF1_SHIFT))&LLWU_MF_MWUF1_MASK) /**< LLWU_MF.MWUF1 Field                     */
#define LLWU_MF_MWUF2_MASK                       (0x4U)                                              /**< LLWU_MF.MWUF2 Mask                      */
#define LLWU_MF_MWUF2_SHIFT                      (2U)                                                /**< LLWU_MF.MWUF2 Position                  */
#define LLWU_MF_MWUF2(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF2_SHIFT))&LLWU_MF_MWUF2_MASK) /**< LLWU_MF.MWUF2 Field                     */
#define LLWU_MF_MWUF3_MASK                       (0x8U)                                              /**< LLWU_MF.MWUF3 Mask                      */
#define LLWU_MF_MWUF3_SHIFT                      (3U)                                                /**< LLWU_MF.MWUF3 Position                  */
#define LLWU_MF_MWUF3(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF3_SHIFT))&LLWU_MF_MWUF3_MASK) /**< LLWU_MF.MWUF3 Field                     */
#define LLWU_MF_MWUF4_MASK                       (0x10U)                                             /**< LLWU_MF.MWUF4 Mask                      */
#define LLWU_MF_MWUF4_SHIFT                      (4U)                                                /**< LLWU_MF.MWUF4 Position                  */
#define LLWU_MF_MWUF4(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF4_SHIFT))&LLWU_MF_MWUF4_MASK) /**< LLWU_MF.MWUF4 Field                     */
#define LLWU_MF_MWUF5_MASK                       (0x20U)                                             /**< LLWU_MF.MWUF5 Mask                      */
#define LLWU_MF_MWUF5_SHIFT                      (5U)                                                /**< LLWU_MF.MWUF5 Position                  */
#define LLWU_MF_MWUF5(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF5_SHIFT))&LLWU_MF_MWUF5_MASK) /**< LLWU_MF.MWUF5 Field                     */
#define LLWU_MF_MWUF6_MASK                       (0x40U)                                             /**< LLWU_MF.MWUF6 Mask                      */
#define LLWU_MF_MWUF6_SHIFT                      (6U)                                                /**< LLWU_MF.MWUF6 Position                  */
#define LLWU_MF_MWUF6(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF6_SHIFT))&LLWU_MF_MWUF6_MASK) /**< LLWU_MF.MWUF6 Field                     */
#define LLWU_MF_MWUF7_MASK                       (0x80U)                                             /**< LLWU_MF.MWUF7 Mask                      */
#define LLWU_MF_MWUF7_SHIFT                      (7U)                                                /**< LLWU_MF.MWUF7 Position                  */
#define LLWU_MF_MWUF7(x)                         (((uint8_t)(((uint8_t)(x))<<LLWU_MF_MWUF7_SHIFT))&LLWU_MF_MWUF7_MASK) /**< LLWU_MF.MWUF7 Field                     */
/** @} */

/** @name FILT - Pin Filter register */ /** @{ */
#define LLWU_FILT_FILTSEL_MASK                   (0xFU)                                              /**< LLWU_FILT.FILTSEL Mask                  */
#define LLWU_FILT_FILTSEL_SHIFT                  (0U)                                                /**< LLWU_FILT.FILTSEL Position              */
#define LLWU_FILT_FILTSEL(x)                     (((uint8_t)(((uint8_t)(x))<<LLWU_FILT_FILTSEL_SHIFT))&LLWU_FILT_FILTSEL_MASK) /**< LLWU_FILT.FILTSEL Field                 */
#define LLWU_FILT_FILTE_MASK                     (0x60U)                                             /**< LLWU_FILT.FILTE Mask                    */
#define LLWU_FILT_FILTE_SHIFT                    (5U)                                                /**< LLWU_FILT.FILTE Position                */
#define LLWU_FILT_FILTE(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_FILT_FILTE_SHIFT))&LLWU_FILT_FILTE_MASK) /**< LLWU_FILT.FILTE Field                   */
#define LLWU_FILT_FILTF_MASK                     (0x80U)                                             /**< LLWU_FILT.FILTF Mask                    */
#define LLWU_FILT_FILTF_SHIFT                    (7U)                                                /**< LLWU_FILT.FILTF Position                */
#define LLWU_FILT_FILTF(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_FILT_FILTF_SHIFT))&LLWU_FILT_FILTF_MASK) /**< LLWU_FILT.FILTF Field                   */
/** @} */

/** @name FILT1 - Pin Filter register */ /** @{ */
#define LLWU_FILT1_FILTSEL_MASK                  (0xFU)                                              /**< LLWU_FILT1.FILTSEL Mask                 */
#define LLWU_FILT1_FILTSEL_SHIFT                 (0U)                                                /**< LLWU_FILT1.FILTSEL Position             */
#define LLWU_FILT1_FILTSEL(x)                    (((uint8_t)(((uint8_t)(x))<<LLWU_FILT1_FILTSEL_SHIFT))&LLWU_FILT1_FILTSEL_MASK) /**< LLWU_FILT1.FILTSEL Field                */
#define LLWU_FILT1_FILTE_MASK                    (0x60U)                                             /**< LLWU_FILT1.FILTE Mask                   */
#define LLWU_FILT1_FILTE_SHIFT                   (5U)                                                /**< LLWU_FILT1.FILTE Position               */
#define LLWU_FILT1_FILTE(x)                      (((uint8_t)(((uint8_t)(x))<<LLWU_FILT1_FILTE_SHIFT))&LLWU_FILT1_FILTE_MASK) /**< LLWU_FILT1.FILTE Field                  */
#define LLWU_FILT1_FILTF_MASK                    (0x80U)                                             /**< LLWU_FILT1.FILTF Mask                   */
#define LLWU_FILT1_FILTF_SHIFT                   (7U)                                                /**< LLWU_FILT1.FILTF Position               */
#define LLWU_FILT1_FILTF(x)                      (((uint8_t)(((uint8_t)(x))<<LLWU_FILT1_FILTF_SHIFT))&LLWU_FILT1_FILTF_MASK) /**< LLWU_FILT1.FILTF Field                  */
/** @} */

/** @name FILT2 - Pin Filter register */ /** @{ */
#define LLWU_FILT2_FILTSEL_MASK                  (0xFU)                                              /**< LLWU_FILT2.FILTSEL Mask                 */
#define LLWU_FILT2_FILTSEL_SHIFT                 (0U)                                                /**< LLWU_FILT2.FILTSEL Position             */
#define LLWU_FILT2_FILTSEL(x)                    (((uint8_t)(((uint8_t)(x))<<LLWU_FILT2_FILTSEL_SHIFT))&LLWU_FILT2_FILTSEL_MASK) /**< LLWU_FILT2.FILTSEL Field                */
#define LLWU_FILT2_FILTE_MASK                    (0x60U)                                             /**< LLWU_FILT2.FILTE Mask                   */
#define LLWU_FILT2_FILTE_SHIFT                   (5U)                                                /**< LLWU_FILT2.FILTE Position               */
#define LLWU_FILT2_FILTE(x)                      (((uint8_t)(((uint8_t)(x))<<LLWU_FILT2_FILTE_SHIFT))&LLWU_FILT2_FILTE_MASK) /**< LLWU_FILT2.FILTE Field                  */
#define LLWU_FILT2_FILTF_MASK                    (0x80U)                                             /**< LLWU_FILT2.FILTF Mask                   */
#define LLWU_FILT2_FILTF_SHIFT                   (7U)                                                /**< LLWU_FILT2.FILTF Position               */
#define LLWU_FILT2_FILTF(x)                      (((uint8_t)(((uint8_t)(x))<<LLWU_FILT2_FILTF_SHIFT))&LLWU_FILT2_FILTF_MASK) /**< LLWU_FILT2.FILTF Field                  */
/** @} */

/** @name RST - Reset Enable Register */ /** @{ */
#define LLWU_RST_RSTFILT_MASK                    (0x1U)                                              /**< LLWU_RST.RSTFILT Mask                   */
#define LLWU_RST_RSTFILT_SHIFT                   (0U)                                                /**< LLWU_RST.RSTFILT Position               */
#define LLWU_RST_RSTFILT(x)                      (((uint8_t)(((uint8_t)(x))<<LLWU_RST_RSTFILT_SHIFT))&LLWU_RST_RSTFILT_MASK) /**< LLWU_RST.RSTFILT Field                  */
#define LLWU_RST_LLRSTE_MASK                     (0x2U)                                              /**< LLWU_RST.LLRSTE Mask                    */
#define LLWU_RST_LLRSTE_SHIFT                    (1U)                                                /**< LLWU_RST.LLRSTE Position                */
#define LLWU_RST_LLRSTE(x)                       (((uint8_t)(((uint8_t)(x))<<LLWU_RST_LLRSTE_SHIFT))&LLWU_RST_LLRSTE_MASK) /**< LLWU_RST.LLRSTE Field                   */
/** @} */

/** @} */ /* End group LLWU_Register_Masks_GROUP */


/* LLWU - Peripheral instance base addresses */
#define LLWU_BasePtr                   0x4007C000UL //!< Peripheral base address
#define LLWU                           ((LLWU_Type *) LLWU_BasePtr) //!< Freescale base pointer
#define LLWU_BASE_PTR                  (LLWU) //!< Freescale style base pointer
#define LLWU_IRQS { LLWU_IRQn,  }


/** @} */ /* End group LLWU_Peripheral_access_layer_GROUP */


/** @brief C Struct for LPTMR */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup LPTMR_Peripheral_access_layer_GROUP LPTMR Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           LPTMR0 (file:LPTMR0)                 ================ */
/* ================================================================================ */

/**
 * @brief Low Power Timer
 */
/**
 * @struct LPTMR_Type
 * @brief  C Struct allowing access to LPTMR registers
 */
typedef struct LPTMR_Type {
   __IO uint32_t  CSR;                          /**< 0000: Control Status Register                                      */
   __IO uint32_t  PSR;                          /**< 0004: Prescale Register                                            */
   __IO uint32_t  CMR;                          /**< 0008: Compare Register                                             */
   __IO uint32_t  CNR;                          /**< 000C: Counter Register                                             */
} LPTMR_Type;


/** @brief Register Masks for LPTMR */

/* -------------------------------------------------------------------------------- */
/* -----------     'LPTMR0' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup LPTMR_Register_Masks_GROUP LPTMR Register Masks */
/** @{ */

/** @name CSR - Control Status Register */ /** @{ */
#define LPTMR_CSR_TEN_MASK                       (0x1U)                                              /**< LPTMR0_CSR.TEN Mask                     */
#define LPTMR_CSR_TEN_SHIFT                      (0U)                                                /**< LPTMR0_CSR.TEN Position                 */
#define LPTMR_CSR_TEN(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TEN_SHIFT))&LPTMR_CSR_TEN_MASK) /**< LPTMR0_CSR.TEN Field                    */
#define LPTMR_CSR_TMS_MASK                       (0x2U)                                              /**< LPTMR0_CSR.TMS Mask                     */
#define LPTMR_CSR_TMS_SHIFT                      (1U)                                                /**< LPTMR0_CSR.TMS Position                 */
#define LPTMR_CSR_TMS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TMS_SHIFT))&LPTMR_CSR_TMS_MASK) /**< LPTMR0_CSR.TMS Field                    */
#define LPTMR_CSR_TFC_MASK                       (0x4U)                                              /**< LPTMR0_CSR.TFC Mask                     */
#define LPTMR_CSR_TFC_SHIFT                      (2U)                                                /**< LPTMR0_CSR.TFC Position                 */
#define LPTMR_CSR_TFC(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TFC_SHIFT))&LPTMR_CSR_TFC_MASK) /**< LPTMR0_CSR.TFC Field                    */
#define LPTMR_CSR_TPP_MASK                       (0x8U)                                              /**< LPTMR0_CSR.TPP Mask                     */
#define LPTMR_CSR_TPP_SHIFT                      (3U)                                                /**< LPTMR0_CSR.TPP Position                 */
#define LPTMR_CSR_TPP(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TPP_SHIFT))&LPTMR_CSR_TPP_MASK) /**< LPTMR0_CSR.TPP Field                    */
#define LPTMR_CSR_TPS_MASK                       (0x30U)                                             /**< LPTMR0_CSR.TPS Mask                     */
#define LPTMR_CSR_TPS_SHIFT                      (4U)                                                /**< LPTMR0_CSR.TPS Position                 */
#define LPTMR_CSR_TPS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TPS_SHIFT))&LPTMR_CSR_TPS_MASK) /**< LPTMR0_CSR.TPS Field                    */
#define LPTMR_CSR_TIE_MASK                       (0x40U)                                             /**< LPTMR0_CSR.TIE Mask                     */
#define LPTMR_CSR_TIE_SHIFT                      (6U)                                                /**< LPTMR0_CSR.TIE Position                 */
#define LPTMR_CSR_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TIE_SHIFT))&LPTMR_CSR_TIE_MASK) /**< LPTMR0_CSR.TIE Field                    */
#define LPTMR_CSR_TCF_MASK                       (0x80U)                                             /**< LPTMR0_CSR.TCF Mask                     */
#define LPTMR_CSR_TCF_SHIFT                      (7U)                                                /**< LPTMR0_CSR.TCF Position                 */
#define LPTMR_CSR_TCF(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_CSR_TCF_SHIFT))&LPTMR_CSR_TCF_MASK) /**< LPTMR0_CSR.TCF Field                    */
/** @} */

/** @name PSR - Prescale Register */ /** @{ */
#define LPTMR_PSR_PCS_MASK                       (0x3U)                                              /**< LPTMR0_PSR.PCS Mask                     */
#define LPTMR_PSR_PCS_SHIFT                      (0U)                                                /**< LPTMR0_PSR.PCS Position                 */
#define LPTMR_PSR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PCS_SHIFT))&LPTMR_PSR_PCS_MASK) /**< LPTMR0_PSR.PCS Field                    */
#define LPTMR_PSR_PBYP_MASK                      (0x4U)                                              /**< LPTMR0_PSR.PBYP Mask                    */
#define LPTMR_PSR_PBYP_SHIFT                     (2U)                                                /**< LPTMR0_PSR.PBYP Position                */
#define LPTMR_PSR_PBYP(x)                        (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PBYP_SHIFT))&LPTMR_PSR_PBYP_MASK) /**< LPTMR0_PSR.PBYP Field                   */
#define LPTMR_PSR_PRESCALE_MASK                  (0x78U)                                             /**< LPTMR0_PSR.PRESCALE Mask                */
#define LPTMR_PSR_PRESCALE_SHIFT                 (3U)                                                /**< LPTMR0_PSR.PRESCALE Position            */
#define LPTMR_PSR_PRESCALE(x)                    (((uint32_t)(((uint32_t)(x))<<LPTMR_PSR_PRESCALE_SHIFT))&LPTMR_PSR_PRESCALE_MASK) /**< LPTMR0_PSR.PRESCALE Field               */
/** @} */

/** @name CMR - Compare Register */ /** @{ */
#define LPTMR_CMR_COMPARE_MASK                   (0xFFFFU)                                           /**< LPTMR0_CMR.COMPARE Mask                 */
#define LPTMR_CMR_COMPARE_SHIFT                  (0U)                                                /**< LPTMR0_CMR.COMPARE Position             */
#define LPTMR_CMR_COMPARE(x)                     (((uint32_t)(((uint32_t)(x))<<LPTMR_CMR_COMPARE_SHIFT))&LPTMR_CMR_COMPARE_MASK) /**< LPTMR0_CMR.COMPARE Field                */
/** @} */

/** @name CNR - Counter Register */ /** @{ */
#define LPTMR_CNR_COUNTER_MASK                   (0xFFFFU)                                           /**< LPTMR0_CNR.COUNTER Mask                 */
#define LPTMR_CNR_COUNTER_SHIFT                  (0U)                                                /**< LPTMR0_CNR.COUNTER Position             */
#define LPTMR_CNR_COUNTER(x)                     (((uint32_t)(((uint32_t)(x))<<LPTMR_CNR_COUNTER_SHIFT))&LPTMR_CNR_COUNTER_MASK) /**< LPTMR0_CNR.COUNTER Field                */
/** @} */

/** @} */ /* End group LPTMR_Register_Masks_GROUP */


/* LPTMR0 - Peripheral instance base addresses */
#define LPTMR0_BasePtr                 0x40040000UL //!< Peripheral base address
#define LPTMR0                         ((LPTMR_Type *) LPTMR0_BasePtr) //!< Freescale base pointer
#define LPTMR0_BASE_PTR                (LPTMR0) //!< Freescale style base pointer
#define LPTMR0_IRQS { LPTMR0_IRQn,  }


/** @} */ /* End group LPTMR_Peripheral_access_layer_GROUP */


/** @brief C Struct for MCG */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup MCG_Peripheral_access_layer_GROUP MCG Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           MCG (file:MCG_MK)                    ================ */
/* ================================================================================ */

/**
 * @brief Multipurpose Clock Generator module
 */
/**
 * @struct MCG_Type
 * @brief  C Struct allowing access to MCG registers
 */
typedef struct MCG_Type {
   __IO uint8_t   C1;                           /**< 0000: Control 1 Register                                           */
   __IO uint8_t   C2;                           /**< 0001: Control 2 Register                                           */
   __IO uint8_t   C3;                           /**< 0002: Control 3 Register                                           */
   __IO uint8_t   C4;                           /**< 0003: Control 4 Register                                           */
   __IO uint8_t   C5;                           /**< 0004: Control 5 Register                                           */
   __IO uint8_t   C6;                           /**< 0005: Control 6 Register                                           */
   __IO uint8_t   S;                            /**< 0006: Status Register                                              */
        uint8_t   RESERVED_0;                   /**< 0007: 0x1 bytes                                                    */
   __IO uint8_t   SC;                           /**< 0008: Status and Control Register                                  */
        uint8_t   RESERVED_1;                   /**< 0009: 0x1 bytes                                                    */
   __IO uint8_t   ATCVH;                        /**< 000A: ATM Compare Value High                                       */
   __IO uint8_t   ATCVL;                        /**< 000B: ATM Compare Value Low                                        */
   __IO uint8_t   C7;                           /**< 000C: Control 7 Register                                           */
   __IO uint8_t   C8;                           /**< 000D: Control 8 Register                                           */
} MCG_Type;


/** @brief Register Masks for MCG */

/* -------------------------------------------------------------------------------- */
/* -----------     'MCG' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup MCG_Register_Masks_GROUP MCG Register Masks */
/** @{ */

/** @name C1 - Control 1 Register */ /** @{ */
#define MCG_C1_IREFSTEN_MASK                     (0x1U)                                              /**< MCG_C1.IREFSTEN Mask                    */
#define MCG_C1_IREFSTEN_SHIFT                    (0U)                                                /**< MCG_C1.IREFSTEN Position                */
#define MCG_C1_IREFSTEN(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_C1_IREFSTEN_SHIFT))&MCG_C1_IREFSTEN_MASK) /**< MCG_C1.IREFSTEN Field                   */
#define MCG_C1_IRCLKEN_MASK                      (0x2U)                                              /**< MCG_C1.IRCLKEN Mask                     */
#define MCG_C1_IRCLKEN_SHIFT                     (1U)                                                /**< MCG_C1.IRCLKEN Position                 */
#define MCG_C1_IRCLKEN(x)                        (((uint8_t)(((uint8_t)(x))<<MCG_C1_IRCLKEN_SHIFT))&MCG_C1_IRCLKEN_MASK) /**< MCG_C1.IRCLKEN Field                    */
#define MCG_C1_IREFS_MASK                        (0x4U)                                              /**< MCG_C1.IREFS Mask                       */
#define MCG_C1_IREFS_SHIFT                       (2U)                                                /**< MCG_C1.IREFS Position                   */
#define MCG_C1_IREFS(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C1_IREFS_SHIFT))&MCG_C1_IREFS_MASK) /**< MCG_C1.IREFS Field                      */
#define MCG_C1_FRDIV_MASK                        (0x38U)                                             /**< MCG_C1.FRDIV Mask                       */
#define MCG_C1_FRDIV_SHIFT                       (3U)                                                /**< MCG_C1.FRDIV Position                   */
#define MCG_C1_FRDIV(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C1_FRDIV_SHIFT))&MCG_C1_FRDIV_MASK) /**< MCG_C1.FRDIV Field                      */
#define MCG_C1_CLKS_MASK                         (0xC0U)                                             /**< MCG_C1.CLKS Mask                        */
#define MCG_C1_CLKS_SHIFT                        (6U)                                                /**< MCG_C1.CLKS Position                    */
#define MCG_C1_CLKS(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C1_CLKS_SHIFT))&MCG_C1_CLKS_MASK) /**< MCG_C1.CLKS Field                       */
/** @} */

/** @name C2 - Control 2 Register */ /** @{ */
#define MCG_C2_IRCS_MASK                         (0x1U)                                              /**< MCG_C2.IRCS Mask                        */
#define MCG_C2_IRCS_SHIFT                        (0U)                                                /**< MCG_C2.IRCS Position                    */
#define MCG_C2_IRCS(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C2_IRCS_SHIFT))&MCG_C2_IRCS_MASK) /**< MCG_C2.IRCS Field                       */
#define MCG_C2_LP_MASK                           (0x2U)                                              /**< MCG_C2.LP Mask                          */
#define MCG_C2_LP_SHIFT                          (1U)                                                /**< MCG_C2.LP Position                      */
#define MCG_C2_LP(x)                             (((uint8_t)(((uint8_t)(x))<<MCG_C2_LP_SHIFT))&MCG_C2_LP_MASK) /**< MCG_C2.LP Field                         */
#define MCG_C2_EREFS0_MASK                       (0x4U)                                              /**< MCG_C2.EREFS0 Mask                      */
#define MCG_C2_EREFS0_SHIFT                      (2U)                                                /**< MCG_C2.EREFS0 Position                  */
#define MCG_C2_EREFS0(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C2_EREFS0_SHIFT))&MCG_C2_EREFS0_MASK) /**< MCG_C2.EREFS0 Field                     */
#define MCG_C2_HGO0_MASK                         (0x8U)                                              /**< MCG_C2.HGO0 Mask                        */
#define MCG_C2_HGO0_SHIFT                        (3U)                                                /**< MCG_C2.HGO0 Position                    */
#define MCG_C2_HGO0(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C2_HGO0_SHIFT))&MCG_C2_HGO0_MASK) /**< MCG_C2.HGO0 Field                       */
#define MCG_C2_RANGE0_MASK                       (0x30U)                                             /**< MCG_C2.RANGE0 Mask                      */
#define MCG_C2_RANGE0_SHIFT                      (4U)                                                /**< MCG_C2.RANGE0 Position                  */
#define MCG_C2_RANGE0(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C2_RANGE0_SHIFT))&MCG_C2_RANGE0_MASK) /**< MCG_C2.RANGE0 Field                     */
#define MCG_C2_LOCRE0_MASK                       (0x80U)                                             /**< MCG_C2.LOCRE0 Mask                      */
#define MCG_C2_LOCRE0_SHIFT                      (7U)                                                /**< MCG_C2.LOCRE0 Position                  */
#define MCG_C2_LOCRE0(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C2_LOCRE0_SHIFT))&MCG_C2_LOCRE0_MASK) /**< MCG_C2.LOCRE0 Field                     */
/** @} */

/** @name C3 - Control 3 Register */ /** @{ */
#define MCG_C3_SCTRIM_MASK                       (0xFFU)                                             /**< MCG_C3.SCTRIM Mask                      */
#define MCG_C3_SCTRIM_SHIFT                      (0U)                                                /**< MCG_C3.SCTRIM Position                  */
#define MCG_C3_SCTRIM(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C3_SCTRIM_SHIFT))&MCG_C3_SCTRIM_MASK) /**< MCG_C3.SCTRIM Field                     */
/** @} */

/** @name C4 - Control 4 Register */ /** @{ */
#define MCG_C4_SCFTRIM_MASK                      (0x1U)                                              /**< MCG_C4.SCFTRIM Mask                     */
#define MCG_C4_SCFTRIM_SHIFT                     (0U)                                                /**< MCG_C4.SCFTRIM Position                 */
#define MCG_C4_SCFTRIM(x)                        (((uint8_t)(((uint8_t)(x))<<MCG_C4_SCFTRIM_SHIFT))&MCG_C4_SCFTRIM_MASK) /**< MCG_C4.SCFTRIM Field                    */
#define MCG_C4_FCTRIM_MASK                       (0x1EU)                                             /**< MCG_C4.FCTRIM Mask                      */
#define MCG_C4_FCTRIM_SHIFT                      (1U)                                                /**< MCG_C4.FCTRIM Position                  */
#define MCG_C4_FCTRIM(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C4_FCTRIM_SHIFT))&MCG_C4_FCTRIM_MASK) /**< MCG_C4.FCTRIM Field                     */
#define MCG_C4_DRST_DRS_MASK                     (0x60U)                                             /**< MCG_C4.DRST_DRS Mask                    */
#define MCG_C4_DRST_DRS_SHIFT                    (5U)                                                /**< MCG_C4.DRST_DRS Position                */
#define MCG_C4_DRST_DRS(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_C4_DRST_DRS_SHIFT))&MCG_C4_DRST_DRS_MASK) /**< MCG_C4.DRST_DRS Field                   */
#define MCG_C4_DMX32_MASK                        (0x80U)                                             /**< MCG_C4.DMX32 Mask                       */
#define MCG_C4_DMX32_SHIFT                       (7U)                                                /**< MCG_C4.DMX32 Position                   */
#define MCG_C4_DMX32(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C4_DMX32_SHIFT))&MCG_C4_DMX32_MASK) /**< MCG_C4.DMX32 Field                      */
/** @} */

/** @name C5 - Control 5 Register */ /** @{ */
#define MCG_C5_PRDIV0_MASK                       (0x1FU)                                             /**< MCG_C5.PRDIV0 Mask                      */
#define MCG_C5_PRDIV0_SHIFT                      (0U)                                                /**< MCG_C5.PRDIV0 Position                  */
#define MCG_C5_PRDIV0(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C5_PRDIV0_SHIFT))&MCG_C5_PRDIV0_MASK) /**< MCG_C5.PRDIV0 Field                     */
#define MCG_C5_PLLSTEN0_MASK                     (0x20U)                                             /**< MCG_C5.PLLSTEN0 Mask                    */
#define MCG_C5_PLLSTEN0_SHIFT                    (5U)                                                /**< MCG_C5.PLLSTEN0 Position                */
#define MCG_C5_PLLSTEN0(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_C5_PLLSTEN0_SHIFT))&MCG_C5_PLLSTEN0_MASK) /**< MCG_C5.PLLSTEN0 Field                   */
#define MCG_C5_PLLCLKEN0_MASK                    (0x40U)                                             /**< MCG_C5.PLLCLKEN0 Mask                   */
#define MCG_C5_PLLCLKEN0_SHIFT                   (6U)                                                /**< MCG_C5.PLLCLKEN0 Position               */
#define MCG_C5_PLLCLKEN0(x)                      (((uint8_t)(((uint8_t)(x))<<MCG_C5_PLLCLKEN0_SHIFT))&MCG_C5_PLLCLKEN0_MASK) /**< MCG_C5.PLLCLKEN0 Field                  */
/** @} */

/** @name C6 - Control 6 Register */ /** @{ */
#define MCG_C6_VDIV0_MASK                        (0x1FU)                                             /**< MCG_C6.VDIV0 Mask                       */
#define MCG_C6_VDIV0_SHIFT                       (0U)                                                /**< MCG_C6.VDIV0 Position                   */
#define MCG_C6_VDIV0(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C6_VDIV0_SHIFT))&MCG_C6_VDIV0_MASK) /**< MCG_C6.VDIV0 Field                      */
#define MCG_C6_CME0_MASK                         (0x20U)                                             /**< MCG_C6.CME0 Mask                        */
#define MCG_C6_CME0_SHIFT                        (5U)                                                /**< MCG_C6.CME0 Position                    */
#define MCG_C6_CME0(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C6_CME0_SHIFT))&MCG_C6_CME0_MASK) /**< MCG_C6.CME0 Field                       */
#define MCG_C6_PLLS_MASK                         (0x40U)                                             /**< MCG_C6.PLLS Mask                        */
#define MCG_C6_PLLS_SHIFT                        (6U)                                                /**< MCG_C6.PLLS Position                    */
#define MCG_C6_PLLS(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C6_PLLS_SHIFT))&MCG_C6_PLLS_MASK) /**< MCG_C6.PLLS Field                       */
#define MCG_C6_LOLIE0_MASK                       (0x80U)                                             /**< MCG_C6.LOLIE0 Mask                      */
#define MCG_C6_LOLIE0_SHIFT                      (7U)                                                /**< MCG_C6.LOLIE0 Position                  */
#define MCG_C6_LOLIE0(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C6_LOLIE0_SHIFT))&MCG_C6_LOLIE0_MASK) /**< MCG_C6.LOLIE0 Field                     */
/** @} */

/** @name S - Status Register */ /** @{ */
#define MCG_S_IRCST_MASK                         (0x1U)                                              /**< MCG_S.IRCST Mask                        */
#define MCG_S_IRCST_SHIFT                        (0U)                                                /**< MCG_S.IRCST Position                    */
#define MCG_S_IRCST(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_S_IRCST_SHIFT))&MCG_S_IRCST_MASK) /**< MCG_S.IRCST Field                       */
#define MCG_S_OSCINIT0_MASK                      (0x2U)                                              /**< MCG_S.OSCINIT0 Mask                     */
#define MCG_S_OSCINIT0_SHIFT                     (1U)                                                /**< MCG_S.OSCINIT0 Position                 */
#define MCG_S_OSCINIT0(x)                        (((uint8_t)(((uint8_t)(x))<<MCG_S_OSCINIT0_SHIFT))&MCG_S_OSCINIT0_MASK) /**< MCG_S.OSCINIT0 Field                    */
#define MCG_S_CLKST_MASK                         (0xCU)                                              /**< MCG_S.CLKST Mask                        */
#define MCG_S_CLKST_SHIFT                        (2U)                                                /**< MCG_S.CLKST Position                    */
#define MCG_S_CLKST(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_S_CLKST_SHIFT))&MCG_S_CLKST_MASK) /**< MCG_S.CLKST Field                       */
#define MCG_S_IREFST_MASK                        (0x10U)                                             /**< MCG_S.IREFST Mask                       */
#define MCG_S_IREFST_SHIFT                       (4U)                                                /**< MCG_S.IREFST Position                   */
#define MCG_S_IREFST(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_S_IREFST_SHIFT))&MCG_S_IREFST_MASK) /**< MCG_S.IREFST Field                      */
#define MCG_S_PLLST_MASK                         (0x20U)                                             /**< MCG_S.PLLST Mask                        */
#define MCG_S_PLLST_SHIFT                        (5U)                                                /**< MCG_S.PLLST Position                    */
#define MCG_S_PLLST(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_S_PLLST_SHIFT))&MCG_S_PLLST_MASK) /**< MCG_S.PLLST Field                       */
#define MCG_S_LOCK0_MASK                         (0x40U)                                             /**< MCG_S.LOCK0 Mask                        */
#define MCG_S_LOCK0_SHIFT                        (6U)                                                /**< MCG_S.LOCK0 Position                    */
#define MCG_S_LOCK0(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_S_LOCK0_SHIFT))&MCG_S_LOCK0_MASK) /**< MCG_S.LOCK0 Field                       */
#define MCG_S_LOLS0_MASK                         (0x80U)                                             /**< MCG_S.LOLS0 Mask                        */
#define MCG_S_LOLS0_SHIFT                        (7U)                                                /**< MCG_S.LOLS0 Position                    */
#define MCG_S_LOLS0(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_S_LOLS0_SHIFT))&MCG_S_LOLS0_MASK) /**< MCG_S.LOLS0 Field                       */
/** @} */

/** @name SC - Status and Control Register */ /** @{ */
#define MCG_SC_LOCS0_MASK                        (0x1U)                                              /**< MCG_SC.LOCS0 Mask                       */
#define MCG_SC_LOCS0_SHIFT                       (0U)                                                /**< MCG_SC.LOCS0 Position                   */
#define MCG_SC_LOCS0(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_SC_LOCS0_SHIFT))&MCG_SC_LOCS0_MASK) /**< MCG_SC.LOCS0 Field                      */
#define MCG_SC_FCRDIV_MASK                       (0xEU)                                              /**< MCG_SC.FCRDIV Mask                      */
#define MCG_SC_FCRDIV_SHIFT                      (1U)                                                /**< MCG_SC.FCRDIV Position                  */
#define MCG_SC_FCRDIV(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_SC_FCRDIV_SHIFT))&MCG_SC_FCRDIV_MASK) /**< MCG_SC.FCRDIV Field                     */
#define MCG_SC_FLTPRSRV_MASK                     (0x10U)                                             /**< MCG_SC.FLTPRSRV Mask                    */
#define MCG_SC_FLTPRSRV_SHIFT                    (4U)                                                /**< MCG_SC.FLTPRSRV Position                */
#define MCG_SC_FLTPRSRV(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_SC_FLTPRSRV_SHIFT))&MCG_SC_FLTPRSRV_MASK) /**< MCG_SC.FLTPRSRV Field                   */
#define MCG_SC_ATMF_MASK                         (0x20U)                                             /**< MCG_SC.ATMF Mask                        */
#define MCG_SC_ATMF_SHIFT                        (5U)                                                /**< MCG_SC.ATMF Position                    */
#define MCG_SC_ATMF(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_SC_ATMF_SHIFT))&MCG_SC_ATMF_MASK) /**< MCG_SC.ATMF Field                       */
#define MCG_SC_ATMS_MASK                         (0x40U)                                             /**< MCG_SC.ATMS Mask                        */
#define MCG_SC_ATMS_SHIFT                        (6U)                                                /**< MCG_SC.ATMS Position                    */
#define MCG_SC_ATMS(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_SC_ATMS_SHIFT))&MCG_SC_ATMS_MASK) /**< MCG_SC.ATMS Field                       */
#define MCG_SC_ATME_MASK                         (0x80U)                                             /**< MCG_SC.ATME Mask                        */
#define MCG_SC_ATME_SHIFT                        (7U)                                                /**< MCG_SC.ATME Position                    */
#define MCG_SC_ATME(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_SC_ATME_SHIFT))&MCG_SC_ATME_MASK) /**< MCG_SC.ATME Field                       */
/** @} */

/** @name ATCVH - ATM Compare Value High */ /** @{ */
#define MCG_ATCVH_ATCVH_MASK                     (0xFFU)                                             /**< MCG_ATCVH.ATCVH Mask                    */
#define MCG_ATCVH_ATCVH_SHIFT                    (0U)                                                /**< MCG_ATCVH.ATCVH Position                */
#define MCG_ATCVH_ATCVH(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_ATCVH_ATCVH_SHIFT))&MCG_ATCVH_ATCVH_MASK) /**< MCG_ATCVH.ATCVH Field                   */
/** @} */

/** @name ATCVL - ATM Compare Value Low */ /** @{ */
#define MCG_ATCVL_ATCVL_MASK                     (0xFFU)                                             /**< MCG_ATCVL.ATCVL Mask                    */
#define MCG_ATCVL_ATCVL_SHIFT                    (0U)                                                /**< MCG_ATCVL.ATCVL Position                */
#define MCG_ATCVL_ATCVL(x)                       (((uint8_t)(((uint8_t)(x))<<MCG_ATCVL_ATCVL_SHIFT))&MCG_ATCVL_ATCVL_MASK) /**< MCG_ATCVL.ATCVL Field                   */
/** @} */

/** @name C7 - Control 7 Register */ /** @{ */
#define MCG_C7_OSCSEL_MASK                       (0x1U)                                              /**< MCG_C7.OSCSEL Mask                      */
#define MCG_C7_OSCSEL_SHIFT                      (0U)                                                /**< MCG_C7.OSCSEL Position                  */
#define MCG_C7_OSCSEL(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C7_OSCSEL_SHIFT))&MCG_C7_OSCSEL_MASK) /**< MCG_C7.OSCSEL Field                     */
/** @} */

/** @name C8 - Control 8 Register */ /** @{ */
#define MCG_C8_LOCS1_MASK                        (0x1U)                                              /**< MCG_C8.LOCS1 Mask                       */
#define MCG_C8_LOCS1_SHIFT                       (0U)                                                /**< MCG_C8.LOCS1 Position                   */
#define MCG_C8_LOCS1(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C8_LOCS1_SHIFT))&MCG_C8_LOCS1_MASK) /**< MCG_C8.LOCS1 Field                      */
#define MCG_C8_CME1_MASK                         (0x20U)                                             /**< MCG_C8.CME1 Mask                        */
#define MCG_C8_CME1_SHIFT                        (5U)                                                /**< MCG_C8.CME1 Position                    */
#define MCG_C8_CME1(x)                           (((uint8_t)(((uint8_t)(x))<<MCG_C8_CME1_SHIFT))&MCG_C8_CME1_MASK) /**< MCG_C8.CME1 Field                       */
#define MCG_C8_LOLRE_MASK                        (0x40U)                                             /**< MCG_C8.LOLRE Mask                       */
#define MCG_C8_LOLRE_SHIFT                       (6U)                                                /**< MCG_C8.LOLRE Position                   */
#define MCG_C8_LOLRE(x)                          (((uint8_t)(((uint8_t)(x))<<MCG_C8_LOLRE_SHIFT))&MCG_C8_LOLRE_MASK) /**< MCG_C8.LOLRE Field                      */
#define MCG_C8_LOCRE1_MASK                       (0x80U)                                             /**< MCG_C8.LOCRE1 Mask                      */
#define MCG_C8_LOCRE1_SHIFT                      (7U)                                                /**< MCG_C8.LOCRE1 Position                  */
#define MCG_C8_LOCRE1(x)                         (((uint8_t)(((uint8_t)(x))<<MCG_C8_LOCRE1_SHIFT))&MCG_C8_LOCRE1_MASK) /**< MCG_C8.LOCRE1 Field                     */
/** @} */

/** @} */ /* End group MCG_Register_Masks_GROUP */


/* MCG - Peripheral instance base addresses */
#define MCG_BasePtr                    0x40064000UL //!< Peripheral base address
#define MCG                            ((MCG_Type *) MCG_BasePtr) //!< Freescale base pointer
#define MCG_BASE_PTR                   (MCG) //!< Freescale style base pointer
#define MCG_IRQS { MCG_IRQn,  }


/** @} */ /* End group MCG_Peripheral_access_layer_GROUP */


/** @brief C Struct for MCM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup MCM_Peripheral_access_layer_GROUP MCM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           MCM (file:MCM_MK10D10)               ================ */
/* ================================================================================ */

/**
 * @brief Core Platform Miscellaneous Control Module
 */
/**
 * @struct MCM_Type
 * @brief  C Struct allowing access to MCM registers
 */
typedef struct MCM_Type {
        uint8_t   RESERVED_0[8];                /**< 0000: 0x8 bytes                                                    */
   __I  uint16_t  PLASC;                        /**< 0008: Crossbar Switch (AXBS) Slave Configuration                   */
   __I  uint16_t  PLAMC;                        /**< 000A: Crossbar Switch (AXBS) Master Configuration                  */
   __IO uint32_t  CR;                           /**< 000C: Control Register                                             */
   __IO uint32_t  ISR;                          /**< 0010: Interrupt Status Register                                    */
   __IO uint32_t  ETBCC;                        /**< 0014: ETB Counter Control register                                 */
   __IO uint32_t  ETBRL;                        /**< 0018: ETB Reload register                                          */
   __I  uint32_t  ETBCNT;                       /**< 001C: ETB Counter Value register                                   */
        uint8_t   RESERVED_1[16];               /**< 0020: 0x10 bytes                                                   */
   __IO uint32_t  PID;                          /**< 0030: Process ID register                                          */
} MCM_Type;


/** @brief Register Masks for MCM */

/* -------------------------------------------------------------------------------- */
/* -----------     'MCM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup MCM_Register_Masks_GROUP MCM Register Masks */
/** @{ */

/** @name PLASC - Crossbar Switch (AXBS) Slave Configuration */ /** @{ */
#define MCM_PLASC_ASC_MASK                       (0xFFU)                                             /**< MCM_PLASC.ASC Mask                      */
#define MCM_PLASC_ASC_SHIFT                      (0U)                                                /**< MCM_PLASC.ASC Position                  */
#define MCM_PLASC_ASC(x)                         (((uint16_t)(((uint16_t)(x))<<MCM_PLASC_ASC_SHIFT))&MCM_PLASC_ASC_MASK) /**< MCM_PLASC.ASC Field                     */
/** @} */

/** @name PLAMC - Crossbar Switch (AXBS) Master Configuration */ /** @{ */
#define MCM_PLAMC_AMC_MASK                       (0xFFU)                                             /**< MCM_PLAMC.AMC Mask                      */
#define MCM_PLAMC_AMC_SHIFT                      (0U)                                                /**< MCM_PLAMC.AMC Position                  */
#define MCM_PLAMC_AMC(x)                         (((uint16_t)(((uint16_t)(x))<<MCM_PLAMC_AMC_SHIFT))&MCM_PLAMC_AMC_MASK) /**< MCM_PLAMC.AMC Field                     */
/** @} */

/** @name CR - Control Register */ /** @{ */
#define MCM_CR_SRAMUAP_MASK                      (0x3000000U)                                        /**< MCM_CR.SRAMUAP Mask                     */
#define MCM_CR_SRAMUAP_SHIFT                     (24U)                                               /**< MCM_CR.SRAMUAP Position                 */
#define MCM_CR_SRAMUAP(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CR_SRAMUAP_SHIFT))&MCM_CR_SRAMUAP_MASK) /**< MCM_CR.SRAMUAP Field                    */
#define MCM_CR_SRAMUWP_MASK                      (0x4000000U)                                        /**< MCM_CR.SRAMUWP Mask                     */
#define MCM_CR_SRAMUWP_SHIFT                     (26U)                                               /**< MCM_CR.SRAMUWP Position                 */
#define MCM_CR_SRAMUWP(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CR_SRAMUWP_SHIFT))&MCM_CR_SRAMUWP_MASK) /**< MCM_CR.SRAMUWP Field                    */
#define MCM_CR_SRAMLAP_MASK                      (0x30000000U)                                       /**< MCM_CR.SRAMLAP Mask                     */
#define MCM_CR_SRAMLAP_SHIFT                     (28U)                                               /**< MCM_CR.SRAMLAP Position                 */
#define MCM_CR_SRAMLAP(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CR_SRAMLAP_SHIFT))&MCM_CR_SRAMLAP_MASK) /**< MCM_CR.SRAMLAP Field                    */
#define MCM_CR_SRAMLWP_MASK                      (0x40000000U)                                       /**< MCM_CR.SRAMLWP Mask                     */
#define MCM_CR_SRAMLWP_SHIFT                     (30U)                                               /**< MCM_CR.SRAMLWP Position                 */
#define MCM_CR_SRAMLWP(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_CR_SRAMLWP_SHIFT))&MCM_CR_SRAMLWP_MASK) /**< MCM_CR.SRAMLWP Field                    */
/** @} */

/** @name ISR - Interrupt Status Register */ /** @{ */
#define MCM_ISR_IRQ_MASK                         (0x2U)                                              /**< MCM_ISR.IRQ Mask                        */
#define MCM_ISR_IRQ_SHIFT                        (1U)                                                /**< MCM_ISR.IRQ Position                    */
#define MCM_ISR_IRQ(x)                           (((uint32_t)(((uint32_t)(x))<<MCM_ISR_IRQ_SHIFT))&MCM_ISR_IRQ_MASK) /**< MCM_ISR.IRQ Field                       */
#define MCM_ISR_NMI_MASK                         (0x4U)                                              /**< MCM_ISR.NMI Mask                        */
#define MCM_ISR_NMI_SHIFT                        (2U)                                                /**< MCM_ISR.NMI Position                    */
#define MCM_ISR_NMI(x)                           (((uint32_t)(((uint32_t)(x))<<MCM_ISR_NMI_SHIFT))&MCM_ISR_NMI_MASK) /**< MCM_ISR.NMI Field                       */
#define MCM_ISR_DHREQ_MASK                       (0x8U)                                              /**< MCM_ISR.DHREQ Mask                      */
#define MCM_ISR_DHREQ_SHIFT                      (3U)                                                /**< MCM_ISR.DHREQ Position                  */
#define MCM_ISR_DHREQ(x)                         (((uint32_t)(((uint32_t)(x))<<MCM_ISR_DHREQ_SHIFT))&MCM_ISR_DHREQ_MASK) /**< MCM_ISR.DHREQ Field                     */
/** @} */

/** @name ETBCC - ETB Counter Control register */ /** @{ */
#define MCM_ETBCC_CNTEN_MASK                     (0x1U)                                              /**< MCM_ETBCC.CNTEN Mask                    */
#define MCM_ETBCC_CNTEN_SHIFT                    (0U)                                                /**< MCM_ETBCC.CNTEN Position                */
#define MCM_ETBCC_CNTEN(x)                       (((uint32_t)(((uint32_t)(x))<<MCM_ETBCC_CNTEN_SHIFT))&MCM_ETBCC_CNTEN_MASK) /**< MCM_ETBCC.CNTEN Field                   */
#define MCM_ETBCC_RSPT_MASK                      (0x6U)                                              /**< MCM_ETBCC.RSPT Mask                     */
#define MCM_ETBCC_RSPT_SHIFT                     (1U)                                                /**< MCM_ETBCC.RSPT Position                 */
#define MCM_ETBCC_RSPT(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_ETBCC_RSPT_SHIFT))&MCM_ETBCC_RSPT_MASK) /**< MCM_ETBCC.RSPT Field                    */
#define MCM_ETBCC_RLRQ_MASK                      (0x8U)                                              /**< MCM_ETBCC.RLRQ Mask                     */
#define MCM_ETBCC_RLRQ_SHIFT                     (3U)                                                /**< MCM_ETBCC.RLRQ Position                 */
#define MCM_ETBCC_RLRQ(x)                        (((uint32_t)(((uint32_t)(x))<<MCM_ETBCC_RLRQ_SHIFT))&MCM_ETBCC_RLRQ_MASK) /**< MCM_ETBCC.RLRQ Field                    */
#define MCM_ETBCC_ETDIS_MASK                     (0x10U)                                             /**< MCM_ETBCC.ETDIS Mask                    */
#define MCM_ETBCC_ETDIS_SHIFT                    (4U)                                                /**< MCM_ETBCC.ETDIS Position                */
#define MCM_ETBCC_ETDIS(x)                       (((uint32_t)(((uint32_t)(x))<<MCM_ETBCC_ETDIS_SHIFT))&MCM_ETBCC_ETDIS_MASK) /**< MCM_ETBCC.ETDIS Field                   */
#define MCM_ETBCC_ITDIS_MASK                     (0x20U)                                             /**< MCM_ETBCC.ITDIS Mask                    */
#define MCM_ETBCC_ITDIS_SHIFT                    (5U)                                                /**< MCM_ETBCC.ITDIS Position                */
#define MCM_ETBCC_ITDIS(x)                       (((uint32_t)(((uint32_t)(x))<<MCM_ETBCC_ITDIS_SHIFT))&MCM_ETBCC_ITDIS_MASK) /**< MCM_ETBCC.ITDIS Field                   */
/** @} */

/** @name ETBRL - ETB Reload register */ /** @{ */
#define MCM_ETBRL_RELOAD_MASK                    (0x7FFU)                                            /**< MCM_ETBRL.RELOAD Mask                   */
#define MCM_ETBRL_RELOAD_SHIFT                   (0U)                                                /**< MCM_ETBRL.RELOAD Position               */
#define MCM_ETBRL_RELOAD(x)                      (((uint32_t)(((uint32_t)(x))<<MCM_ETBRL_RELOAD_SHIFT))&MCM_ETBRL_RELOAD_MASK) /**< MCM_ETBRL.RELOAD Field                  */
/** @} */

/** @name ETBCNT - ETB Counter Value register */ /** @{ */
#define MCM_ETBCNT_COUNTER_MASK                  (0x7FFU)                                            /**< MCM_ETBCNT.COUNTER Mask                 */
#define MCM_ETBCNT_COUNTER_SHIFT                 (0U)                                                /**< MCM_ETBCNT.COUNTER Position             */
#define MCM_ETBCNT_COUNTER(x)                    (((uint32_t)(((uint32_t)(x))<<MCM_ETBCNT_COUNTER_SHIFT))&MCM_ETBCNT_COUNTER_MASK) /**< MCM_ETBCNT.COUNTER Field                */
/** @} */

/** @name PID - Process ID register */ /** @{ */
#define MCM_PID_PID_MASK                         (0xFFU)                                             /**< MCM_PID.PID Mask                        */
#define MCM_PID_PID_SHIFT                        (0U)                                                /**< MCM_PID.PID Position                    */
#define MCM_PID_PID(x)                           (((uint32_t)(((uint32_t)(x))<<MCM_PID_PID_SHIFT))&MCM_PID_PID_MASK) /**< MCM_PID.PID Field                       */
/** @} */

/** @} */ /* End group MCM_Register_Masks_GROUP */


/* MCM - Peripheral instance base addresses */
#define MCM_BasePtr                    0xE0080000UL //!< Peripheral base address
#define MCM                            ((MCM_Type *) MCM_BasePtr) //!< Freescale base pointer
#define MCM_BASE_PTR                   (MCM) //!< Freescale style base pointer
#define MCM_IRQS { MCM_IRQn,  }


/** @} */ /* End group MCM_Peripheral_access_layer_GROUP */


/** @brief C Struct for MPU */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup MPU_Peripheral_access_layer_GROUP MPU Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           MPU (file:MPU_MK10D10_12R)           ================ */
/* ================================================================================ */

/**
 * @brief Memory protection unit
 */
/**
 * @struct MPU_Type
 * @brief  C Struct allowing access to MPU registers
 */
typedef struct MPU_Type {
   __IO uint32_t  CESR;                         /**< 0000: Control/Error Status Register                                */
        uint8_t   RESERVED_0[12];               /**< 0004: 0xC bytes                                                    */
   struct {
      __I  uint32_t  EAR;                       /**< 0010: Error Address Register, slave port n                         */
      __I  uint32_t  EDR;                       /**< 0014: Error Detail Register, slave port n                          */
   } SP[5];                                     /**< 0010: (cluster: size=0x0028, 40)                                   */
        uint8_t   RESERVED_2[968];              /**< 0038: 0x3C8 bytes                                                  */
   struct {
      __IO uint32_t  WORD0;                     /**< 0400: Region Descriptor n, Word 0                                  */
      __IO uint32_t  WORD1;                     /**< 0404: Region Descriptor n, Word 1                                  */
      __IO uint32_t  WORD2;                     /**< 0408: Region Descriptor n, Word 2                                  */
      __IO uint32_t  WORD3;                     /**< 040C: Region Descriptor n, Word 3                                  */
   } RGD[12];                                   /**< 0400: (cluster: size=0x00C0, 192)                                  */
        uint8_t   RESERVED_4[832];              /**< 04C0: 0x340 bytes                                                  */
   __IO uint32_t  RGDAAC[12];                   /**< 0800: Region Descriptor Alternate Access Control n                 */
} MPU_Type;


/** @brief Register Masks for MPU */

/* -------------------------------------------------------------------------------- */
/* -----------     'MPU' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup MPU_Register_Masks_GROUP MPU Register Masks */
/** @{ */

/** @name CESR - Control/Error Status Register */ /** @{ */
#define MPU_CESR_VLD_MASK                        (0x1U)                                              /**< MPU_CESR.VLD Mask                       */
#define MPU_CESR_VLD_SHIFT                       (0U)                                                /**< MPU_CESR.VLD Position                   */
#define MPU_CESR_VLD(x)                          (((uint32_t)(((uint32_t)(x))<<MPU_CESR_VLD_SHIFT))&MPU_CESR_VLD_MASK) /**< MPU_CESR.VLD Field                      */
#define MPU_CESR_NRGD_MASK                       (0xF00U)                                            /**< MPU_CESR.NRGD Mask                      */
#define MPU_CESR_NRGD_SHIFT                      (8U)                                                /**< MPU_CESR.NRGD Position                  */
#define MPU_CESR_NRGD(x)                         (((uint32_t)(((uint32_t)(x))<<MPU_CESR_NRGD_SHIFT))&MPU_CESR_NRGD_MASK) /**< MPU_CESR.NRGD Field                     */
#define MPU_CESR_NSP_MASK                        (0xF000U)                                           /**< MPU_CESR.NSP Mask                       */
#define MPU_CESR_NSP_SHIFT                       (12U)                                               /**< MPU_CESR.NSP Position                   */
#define MPU_CESR_NSP(x)                          (((uint32_t)(((uint32_t)(x))<<MPU_CESR_NSP_SHIFT))&MPU_CESR_NSP_MASK) /**< MPU_CESR.NSP Field                      */
#define MPU_CESR_HRL_MASK                        (0xF0000U)                                          /**< MPU_CESR.HRL Mask                       */
#define MPU_CESR_HRL_SHIFT                       (16U)                                               /**< MPU_CESR.HRL Position                   */
#define MPU_CESR_HRL(x)                          (((uint32_t)(((uint32_t)(x))<<MPU_CESR_HRL_SHIFT))&MPU_CESR_HRL_MASK) /**< MPU_CESR.HRL Field                      */
#define MPU_CESR_SPERR_MASK                      (0xF8000000U)                                       /**< MPU_CESR.SPERR Mask                     */
#define MPU_CESR_SPERR_SHIFT                     (27U)                                               /**< MPU_CESR.SPERR Position                 */
#define MPU_CESR_SPERR(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_CESR_SPERR_SHIFT))&MPU_CESR_SPERR_MASK) /**< MPU_CESR.SPERR Field                    */
/** @} */

/** @name EAR - Error Address Register, slave port n */ /** @{ */
#define MPU_EAR_EADDR_MASK                       (0xFFFFFFFFU)                                       /**< MPU_EAR.EADDR Mask                      */
#define MPU_EAR_EADDR_SHIFT                      (0U)                                                /**< MPU_EAR.EADDR Position                  */
#define MPU_EAR_EADDR(x)                         (((uint32_t)(((uint32_t)(x))<<MPU_EAR_EADDR_SHIFT))&MPU_EAR_EADDR_MASK) /**< MPU_EAR.EADDR Field                     */
/** @} */

/** @name EDR - Error Detail Register, slave port n */ /** @{ */
#define MPU_EDR_ERW_MASK                         (0x1U)                                              /**< MPU_EDR.ERW Mask                        */
#define MPU_EDR_ERW_SHIFT                        (0U)                                                /**< MPU_EDR.ERW Position                    */
#define MPU_EDR_ERW(x)                           (((uint32_t)(((uint32_t)(x))<<MPU_EDR_ERW_SHIFT))&MPU_EDR_ERW_MASK) /**< MPU_EDR.ERW Field                       */
#define MPU_EDR_EATTR_MASK                       (0xEU)                                              /**< MPU_EDR.EATTR Mask                      */
#define MPU_EDR_EATTR_SHIFT                      (1U)                                                /**< MPU_EDR.EATTR Position                  */
#define MPU_EDR_EATTR(x)                         (((uint32_t)(((uint32_t)(x))<<MPU_EDR_EATTR_SHIFT))&MPU_EDR_EATTR_MASK) /**< MPU_EDR.EATTR Field                     */
#define MPU_EDR_EMN_MASK                         (0xF0U)                                             /**< MPU_EDR.EMN Mask                        */
#define MPU_EDR_EMN_SHIFT                        (4U)                                                /**< MPU_EDR.EMN Position                    */
#define MPU_EDR_EMN(x)                           (((uint32_t)(((uint32_t)(x))<<MPU_EDR_EMN_SHIFT))&MPU_EDR_EMN_MASK) /**< MPU_EDR.EMN Field                       */
#define MPU_EDR_EACD_MASK                        (0xFFFF0000U)                                       /**< MPU_EDR.EACD Mask                       */
#define MPU_EDR_EACD_SHIFT                       (16U)                                               /**< MPU_EDR.EACD Position                   */
#define MPU_EDR_EACD(x)                          (((uint32_t)(((uint32_t)(x))<<MPU_EDR_EACD_SHIFT))&MPU_EDR_EACD_MASK) /**< MPU_EDR.EACD Field                      */
/** @} */

/** @name WORD0 - Region Descriptor n, Word 0 */ /** @{ */
#define MPU_WORD0_SRTADDR_MASK                   (0xFFFFFFE0U)                                       /**< MPU_WORD0.SRTADDR Mask                  */
#define MPU_WORD0_SRTADDR_SHIFT                  (5U)                                                /**< MPU_WORD0.SRTADDR Position              */
#define MPU_WORD0_SRTADDR(x)                     (((uint32_t)(((uint32_t)(x))<<MPU_WORD0_SRTADDR_SHIFT))&MPU_WORD0_SRTADDR_MASK) /**< MPU_WORD0.SRTADDR Field                 */
/** @} */

/** @name WORD1 - Region Descriptor n, Word 1 */ /** @{ */
#define MPU_WORD1_ENDADDR_MASK                   (0xFFFFFFE0U)                                       /**< MPU_WORD1.ENDADDR Mask                  */
#define MPU_WORD1_ENDADDR_SHIFT                  (5U)                                                /**< MPU_WORD1.ENDADDR Position              */
#define MPU_WORD1_ENDADDR(x)                     (((uint32_t)(((uint32_t)(x))<<MPU_WORD1_ENDADDR_SHIFT))&MPU_WORD1_ENDADDR_MASK) /**< MPU_WORD1.ENDADDR Field                 */
/** @} */

/** @name WORD2 - Region Descriptor n, Word 2 */ /** @{ */
#define MPU_WORD2_M0UM_MASK                      (0x7U)                                              /**< MPU_WORD2.M0UM Mask                     */
#define MPU_WORD2_M0UM_SHIFT                     (0U)                                                /**< MPU_WORD2.M0UM Position                 */
#define MPU_WORD2_M0UM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M0UM_SHIFT))&MPU_WORD2_M0UM_MASK) /**< MPU_WORD2.M0UM Field                    */
#define MPU_WORD2_M0SM_MASK                      (0x18U)                                             /**< MPU_WORD2.M0SM Mask                     */
#define MPU_WORD2_M0SM_SHIFT                     (3U)                                                /**< MPU_WORD2.M0SM Position                 */
#define MPU_WORD2_M0SM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M0SM_SHIFT))&MPU_WORD2_M0SM_MASK) /**< MPU_WORD2.M0SM Field                    */
#define MPU_WORD2_M1UM_MASK                      (0x1C0U)                                            /**< MPU_WORD2.M1UM Mask                     */
#define MPU_WORD2_M1UM_SHIFT                     (6U)                                                /**< MPU_WORD2.M1UM Position                 */
#define MPU_WORD2_M1UM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M1UM_SHIFT))&MPU_WORD2_M1UM_MASK) /**< MPU_WORD2.M1UM Field                    */
#define MPU_WORD2_M1SM_MASK                      (0x600U)                                            /**< MPU_WORD2.M1SM Mask                     */
#define MPU_WORD2_M1SM_SHIFT                     (9U)                                                /**< MPU_WORD2.M1SM Position                 */
#define MPU_WORD2_M1SM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M1SM_SHIFT))&MPU_WORD2_M1SM_MASK) /**< MPU_WORD2.M1SM Field                    */
#define MPU_WORD2_M2UM_MASK                      (0x7000U)                                           /**< MPU_WORD2.M2UM Mask                     */
#define MPU_WORD2_M2UM_SHIFT                     (12U)                                               /**< MPU_WORD2.M2UM Position                 */
#define MPU_WORD2_M2UM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M2UM_SHIFT))&MPU_WORD2_M2UM_MASK) /**< MPU_WORD2.M2UM Field                    */
#define MPU_WORD2_M2SM_MASK                      (0x18000U)                                          /**< MPU_WORD2.M2SM Mask                     */
#define MPU_WORD2_M2SM_SHIFT                     (15U)                                               /**< MPU_WORD2.M2SM Position                 */
#define MPU_WORD2_M2SM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M2SM_SHIFT))&MPU_WORD2_M2SM_MASK) /**< MPU_WORD2.M2SM Field                    */
#define MPU_WORD2_M3UM_MASK                      (0x1C0000U)                                         /**< MPU_WORD2.M3UM Mask                     */
#define MPU_WORD2_M3UM_SHIFT                     (18U)                                               /**< MPU_WORD2.M3UM Position                 */
#define MPU_WORD2_M3UM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M3UM_SHIFT))&MPU_WORD2_M3UM_MASK) /**< MPU_WORD2.M3UM Field                    */
#define MPU_WORD2_M3SM_MASK                      (0x600000U)                                         /**< MPU_WORD2.M3SM Mask                     */
#define MPU_WORD2_M3SM_SHIFT                     (21U)                                               /**< MPU_WORD2.M3SM Position                 */
#define MPU_WORD2_M3SM(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M3SM_SHIFT))&MPU_WORD2_M3SM_MASK) /**< MPU_WORD2.M3SM Field                    */
#define MPU_WORD2_M4WE_MASK                      (0x1000000U)                                        /**< MPU_WORD2.M4WE Mask                     */
#define MPU_WORD2_M4WE_SHIFT                     (24U)                                               /**< MPU_WORD2.M4WE Position                 */
#define MPU_WORD2_M4WE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M4WE_SHIFT))&MPU_WORD2_M4WE_MASK) /**< MPU_WORD2.M4WE Field                    */
#define MPU_WORD2_M4RE_MASK                      (0x2000000U)                                        /**< MPU_WORD2.M4RE Mask                     */
#define MPU_WORD2_M4RE_SHIFT                     (25U)                                               /**< MPU_WORD2.M4RE Position                 */
#define MPU_WORD2_M4RE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M4RE_SHIFT))&MPU_WORD2_M4RE_MASK) /**< MPU_WORD2.M4RE Field                    */
#define MPU_WORD2_M5WE_MASK                      (0x4000000U)                                        /**< MPU_WORD2.M5WE Mask                     */
#define MPU_WORD2_M5WE_SHIFT                     (26U)                                               /**< MPU_WORD2.M5WE Position                 */
#define MPU_WORD2_M5WE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M5WE_SHIFT))&MPU_WORD2_M5WE_MASK) /**< MPU_WORD2.M5WE Field                    */
#define MPU_WORD2_M5RE_MASK                      (0x8000000U)                                        /**< MPU_WORD2.M5RE Mask                     */
#define MPU_WORD2_M5RE_SHIFT                     (27U)                                               /**< MPU_WORD2.M5RE Position                 */
#define MPU_WORD2_M5RE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M5RE_SHIFT))&MPU_WORD2_M5RE_MASK) /**< MPU_WORD2.M5RE Field                    */
#define MPU_WORD2_M6WE_MASK                      (0x10000000U)                                       /**< MPU_WORD2.M6WE Mask                     */
#define MPU_WORD2_M6WE_SHIFT                     (28U)                                               /**< MPU_WORD2.M6WE Position                 */
#define MPU_WORD2_M6WE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M6WE_SHIFT))&MPU_WORD2_M6WE_MASK) /**< MPU_WORD2.M6WE Field                    */
#define MPU_WORD2_M6RE_MASK                      (0x20000000U)                                       /**< MPU_WORD2.M6RE Mask                     */
#define MPU_WORD2_M6RE_SHIFT                     (29U)                                               /**< MPU_WORD2.M6RE Position                 */
#define MPU_WORD2_M6RE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M6RE_SHIFT))&MPU_WORD2_M6RE_MASK) /**< MPU_WORD2.M6RE Field                    */
#define MPU_WORD2_M7WE_MASK                      (0x40000000U)                                       /**< MPU_WORD2.M7WE Mask                     */
#define MPU_WORD2_M7WE_SHIFT                     (30U)                                               /**< MPU_WORD2.M7WE Position                 */
#define MPU_WORD2_M7WE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M7WE_SHIFT))&MPU_WORD2_M7WE_MASK) /**< MPU_WORD2.M7WE Field                    */
#define MPU_WORD2_M7RE_MASK                      (0x80000000U)                                       /**< MPU_WORD2.M7RE Mask                     */
#define MPU_WORD2_M7RE_SHIFT                     (31U)                                               /**< MPU_WORD2.M7RE Position                 */
#define MPU_WORD2_M7RE(x)                        (((uint32_t)(((uint32_t)(x))<<MPU_WORD2_M7RE_SHIFT))&MPU_WORD2_M7RE_MASK) /**< MPU_WORD2.M7RE Field                    */
/** @} */

/** @name WORD3 - Region Descriptor n, Word 3 */ /** @{ */
#define MPU_WORD3_VLD_MASK                       (0x1U)                                              /**< MPU_WORD3.VLD Mask                      */
#define MPU_WORD3_VLD_SHIFT                      (0U)                                                /**< MPU_WORD3.VLD Position                  */
#define MPU_WORD3_VLD(x)                         (((uint32_t)(((uint32_t)(x))<<MPU_WORD3_VLD_SHIFT))&MPU_WORD3_VLD_MASK) /**< MPU_WORD3.VLD Field                     */
/** @} */

/** @name RGDAAC - Region Descriptor Alternate Access Control n */ /** @{ */
#define MPU_RGDAAC_M0UM_MASK                     (0x7U)                                              /**< MPU_RGDAAC.M0UM Mask                    */
#define MPU_RGDAAC_M0UM_SHIFT                    (0U)                                                /**< MPU_RGDAAC.M0UM Position                */
#define MPU_RGDAAC_M0UM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M0UM_SHIFT))&MPU_RGDAAC_M0UM_MASK) /**< MPU_RGDAAC.M0UM Field                   */
#define MPU_RGDAAC_M0SM_MASK                     (0x18U)                                             /**< MPU_RGDAAC.M0SM Mask                    */
#define MPU_RGDAAC_M0SM_SHIFT                    (3U)                                                /**< MPU_RGDAAC.M0SM Position                */
#define MPU_RGDAAC_M0SM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M0SM_SHIFT))&MPU_RGDAAC_M0SM_MASK) /**< MPU_RGDAAC.M0SM Field                   */
#define MPU_RGDAAC_M1UM_MASK                     (0x1C0U)                                            /**< MPU_RGDAAC.M1UM Mask                    */
#define MPU_RGDAAC_M1UM_SHIFT                    (6U)                                                /**< MPU_RGDAAC.M1UM Position                */
#define MPU_RGDAAC_M1UM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M1UM_SHIFT))&MPU_RGDAAC_M1UM_MASK) /**< MPU_RGDAAC.M1UM Field                   */
#define MPU_RGDAAC_M1SM_MASK                     (0x600U)                                            /**< MPU_RGDAAC.M1SM Mask                    */
#define MPU_RGDAAC_M1SM_SHIFT                    (9U)                                                /**< MPU_RGDAAC.M1SM Position                */
#define MPU_RGDAAC_M1SM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M1SM_SHIFT))&MPU_RGDAAC_M1SM_MASK) /**< MPU_RGDAAC.M1SM Field                   */
#define MPU_RGDAAC_M2UM_MASK                     (0x7000U)                                           /**< MPU_RGDAAC.M2UM Mask                    */
#define MPU_RGDAAC_M2UM_SHIFT                    (12U)                                               /**< MPU_RGDAAC.M2UM Position                */
#define MPU_RGDAAC_M2UM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M2UM_SHIFT))&MPU_RGDAAC_M2UM_MASK) /**< MPU_RGDAAC.M2UM Field                   */
#define MPU_RGDAAC_M2SM_MASK                     (0x18000U)                                          /**< MPU_RGDAAC.M2SM Mask                    */
#define MPU_RGDAAC_M2SM_SHIFT                    (15U)                                               /**< MPU_RGDAAC.M2SM Position                */
#define MPU_RGDAAC_M2SM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M2SM_SHIFT))&MPU_RGDAAC_M2SM_MASK) /**< MPU_RGDAAC.M2SM Field                   */
#define MPU_RGDAAC_M3UM_MASK                     (0x1C0000U)                                         /**< MPU_RGDAAC.M3UM Mask                    */
#define MPU_RGDAAC_M3UM_SHIFT                    (18U)                                               /**< MPU_RGDAAC.M3UM Position                */
#define MPU_RGDAAC_M3UM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M3UM_SHIFT))&MPU_RGDAAC_M3UM_MASK) /**< MPU_RGDAAC.M3UM Field                   */
#define MPU_RGDAAC_M3SM_MASK                     (0x600000U)                                         /**< MPU_RGDAAC.M3SM Mask                    */
#define MPU_RGDAAC_M3SM_SHIFT                    (21U)                                               /**< MPU_RGDAAC.M3SM Position                */
#define MPU_RGDAAC_M3SM(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M3SM_SHIFT))&MPU_RGDAAC_M3SM_MASK) /**< MPU_RGDAAC.M3SM Field                   */
#define MPU_RGDAAC_M4WE_MASK                     (0x1000000U)                                        /**< MPU_RGDAAC.M4WE Mask                    */
#define MPU_RGDAAC_M4WE_SHIFT                    (24U)                                               /**< MPU_RGDAAC.M4WE Position                */
#define MPU_RGDAAC_M4WE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M4WE_SHIFT))&MPU_RGDAAC_M4WE_MASK) /**< MPU_RGDAAC.M4WE Field                   */
#define MPU_RGDAAC_M4RE_MASK                     (0x2000000U)                                        /**< MPU_RGDAAC.M4RE Mask                    */
#define MPU_RGDAAC_M4RE_SHIFT                    (25U)                                               /**< MPU_RGDAAC.M4RE Position                */
#define MPU_RGDAAC_M4RE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M4RE_SHIFT))&MPU_RGDAAC_M4RE_MASK) /**< MPU_RGDAAC.M4RE Field                   */
#define MPU_RGDAAC_M5WE_MASK                     (0x4000000U)                                        /**< MPU_RGDAAC.M5WE Mask                    */
#define MPU_RGDAAC_M5WE_SHIFT                    (26U)                                               /**< MPU_RGDAAC.M5WE Position                */
#define MPU_RGDAAC_M5WE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M5WE_SHIFT))&MPU_RGDAAC_M5WE_MASK) /**< MPU_RGDAAC.M5WE Field                   */
#define MPU_RGDAAC_M5RE_MASK                     (0x8000000U)                                        /**< MPU_RGDAAC.M5RE Mask                    */
#define MPU_RGDAAC_M5RE_SHIFT                    (27U)                                               /**< MPU_RGDAAC.M5RE Position                */
#define MPU_RGDAAC_M5RE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M5RE_SHIFT))&MPU_RGDAAC_M5RE_MASK) /**< MPU_RGDAAC.M5RE Field                   */
#define MPU_RGDAAC_M6WE_MASK                     (0x10000000U)                                       /**< MPU_RGDAAC.M6WE Mask                    */
#define MPU_RGDAAC_M6WE_SHIFT                    (28U)                                               /**< MPU_RGDAAC.M6WE Position                */
#define MPU_RGDAAC_M6WE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M6WE_SHIFT))&MPU_RGDAAC_M6WE_MASK) /**< MPU_RGDAAC.M6WE Field                   */
#define MPU_RGDAAC_M6RE_MASK                     (0x20000000U)                                       /**< MPU_RGDAAC.M6RE Mask                    */
#define MPU_RGDAAC_M6RE_SHIFT                    (29U)                                               /**< MPU_RGDAAC.M6RE Position                */
#define MPU_RGDAAC_M6RE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M6RE_SHIFT))&MPU_RGDAAC_M6RE_MASK) /**< MPU_RGDAAC.M6RE Field                   */
#define MPU_RGDAAC_M7WE_MASK                     (0x40000000U)                                       /**< MPU_RGDAAC.M7WE Mask                    */
#define MPU_RGDAAC_M7WE_SHIFT                    (30U)                                               /**< MPU_RGDAAC.M7WE Position                */
#define MPU_RGDAAC_M7WE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M7WE_SHIFT))&MPU_RGDAAC_M7WE_MASK) /**< MPU_RGDAAC.M7WE Field                   */
#define MPU_RGDAAC_M7RE_MASK                     (0x80000000U)                                       /**< MPU_RGDAAC.M7RE Mask                    */
#define MPU_RGDAAC_M7RE_SHIFT                    (31U)                                               /**< MPU_RGDAAC.M7RE Position                */
#define MPU_RGDAAC_M7RE(x)                       (((uint32_t)(((uint32_t)(x))<<MPU_RGDAAC_M7RE_SHIFT))&MPU_RGDAAC_M7RE_MASK) /**< MPU_RGDAAC.M7RE Field                   */
/** @} */

/** @} */ /* End group MPU_Register_Masks_GROUP */


/* MPU - Peripheral instance base addresses */
#define MPU_BasePtr                    0x4000D000UL //!< Peripheral base address
#define MPU                            ((MPU_Type *) MPU_BasePtr) //!< Freescale base pointer
#define MPU_BASE_PTR                   (MPU) //!< Freescale style base pointer

/** @} */ /* End group MPU_Peripheral_access_layer_GROUP */


/** @brief C Struct for NV */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup NV_Peripheral_access_layer_GROUP NV Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           NV (file:NV_FTFL)                    ================ */
/* ================================================================================ */

/**
 * @brief Flash configuration field
 */
/**
 * @struct NV_Type
 * @brief  C Struct allowing access to NV registers
 */
typedef struct NV_Type {
   __I  uint8_t   BACKKEY3;                     /**< 0000: Backdoor Comparison Key 3                                    */
   __I  uint8_t   BACKKEY2;                     /**< 0001: Backdoor Comparison Key 2                                    */
   __I  uint8_t   BACKKEY1;                     /**< 0002: Backdoor Comparison Key 1                                    */
   __I  uint8_t   BACKKEY0;                     /**< 0003: Backdoor Comparison Key 0                                    */
   __I  uint8_t   BACKKEY7;                     /**< 0004: Backdoor Comparison Key 7                                    */
   __I  uint8_t   BACKKEY6;                     /**< 0005: Backdoor Comparison Key 6                                    */
   __I  uint8_t   BACKKEY5;                     /**< 0006: Backdoor Comparison Key 5                                    */
   __I  uint8_t   BACKKEY4;                     /**< 0007: Backdoor Comparison Key 4                                    */
   __I  uint8_t   FPROT3;                       /**< 0008: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FPROT2;                       /**< 0009: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FPROT1;                       /**< 000A: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FPROT0;                       /**< 000B: Non-volatile P-Flash Protection Register                     */
   __I  uint8_t   FSEC;                         /**< 000C: Non-volatile Flash Security Register                         */
   __I  uint8_t   FOPT;                         /**< 000D: Non-volatile Flash Option Register                           */
   __I  uint8_t   FEPROT;                       /**< 000E: Non-volatile EEPROM Protection Register                      */
   __I  uint8_t   FDPROT;                       /**< 000F: Non-volatile D-Flash Protection Register                     */
} NV_Type;


/** @brief Register Masks for NV */

/* -------------------------------------------------------------------------------- */
/* -----------     'NV' Position & Mask macros                          ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup NV_Register_Masks_GROUP NV Register Masks */
/** @{ */

/** @name BACKKEY - Backdoor Comparison Key %s */ /** @{ */
#define NV_BACKKEY_KEY_MASK                      (0xFFU)                                             /**< NV_BACKKEY.KEY Mask                     */
#define NV_BACKKEY_KEY_SHIFT                     (0U)                                                /**< NV_BACKKEY.KEY Position                 */
#define NV_BACKKEY_KEY(x)                        (((uint8_t)(((uint8_t)(x))<<NV_BACKKEY_KEY_SHIFT))&NV_BACKKEY_KEY_MASK) /**< NV_BACKKEY.KEY Field                    */
/** @} */

/** @name FPROT - Non-volatile P-Flash Protection Register */ /** @{ */
#define NV_FPROT_PROT_MASK                       (0xFFU)                                             /**< NV_FPROT.PROT Mask                      */
#define NV_FPROT_PROT_SHIFT                      (0U)                                                /**< NV_FPROT.PROT Position                  */
#define NV_FPROT_PROT(x)                         (((uint8_t)(((uint8_t)(x))<<NV_FPROT_PROT_SHIFT))&NV_FPROT_PROT_MASK) /**< NV_FPROT.PROT Field                     */
/** @} */

/** @name FSEC - Non-volatile Flash Security Register */ /** @{ */
#define NV_FSEC_SEC_MASK                         (0x3U)                                              /**< NV_FSEC.SEC Mask                        */
#define NV_FSEC_SEC_SHIFT                        (0U)                                                /**< NV_FSEC.SEC Position                    */
#define NV_FSEC_SEC(x)                           (((uint8_t)(((uint8_t)(x))<<NV_FSEC_SEC_SHIFT))&NV_FSEC_SEC_MASK) /**< NV_FSEC.SEC Field                       */
#define NV_FSEC_FSLACC_MASK                      (0xCU)                                              /**< NV_FSEC.FSLACC Mask                     */
#define NV_FSEC_FSLACC_SHIFT                     (2U)                                                /**< NV_FSEC.FSLACC Position                 */
#define NV_FSEC_FSLACC(x)                        (((uint8_t)(((uint8_t)(x))<<NV_FSEC_FSLACC_SHIFT))&NV_FSEC_FSLACC_MASK) /**< NV_FSEC.FSLACC Field                    */
#define NV_FSEC_MEEN_MASK                        (0x30U)                                             /**< NV_FSEC.MEEN Mask                       */
#define NV_FSEC_MEEN_SHIFT                       (4U)                                                /**< NV_FSEC.MEEN Position                   */
#define NV_FSEC_MEEN(x)                          (((uint8_t)(((uint8_t)(x))<<NV_FSEC_MEEN_SHIFT))&NV_FSEC_MEEN_MASK) /**< NV_FSEC.MEEN Field                      */
#define NV_FSEC_KEYEN_MASK                       (0xC0U)                                             /**< NV_FSEC.KEYEN Mask                      */
#define NV_FSEC_KEYEN_SHIFT                      (6U)                                                /**< NV_FSEC.KEYEN Position                  */
#define NV_FSEC_KEYEN(x)                         (((uint8_t)(((uint8_t)(x))<<NV_FSEC_KEYEN_SHIFT))&NV_FSEC_KEYEN_MASK) /**< NV_FSEC.KEYEN Field                     */
/** @} */

/** @name FOPT - Non-volatile Flash Option Register */ /** @{ */
#define NV_FOPT_LPBOOT_MASK                      (0x1U)                                              /**< NV_FOPT.LPBOOT Mask                     */
#define NV_FOPT_LPBOOT_SHIFT                     (0U)                                                /**< NV_FOPT.LPBOOT Position                 */
#define NV_FOPT_LPBOOT(x)                        (((uint8_t)(((uint8_t)(x))<<NV_FOPT_LPBOOT_SHIFT))&NV_FOPT_LPBOOT_MASK) /**< NV_FOPT.LPBOOT Field                    */
#define NV_FOPT_EZPORT_DIS_MASK                  (0x2U)                                              /**< NV_FOPT.EZPORT_DIS Mask                 */
#define NV_FOPT_EZPORT_DIS_SHIFT                 (1U)                                                /**< NV_FOPT.EZPORT_DIS Position             */
#define NV_FOPT_EZPORT_DIS(x)                    (((uint8_t)(((uint8_t)(x))<<NV_FOPT_EZPORT_DIS_SHIFT))&NV_FOPT_EZPORT_DIS_MASK) /**< NV_FOPT.EZPORT_DIS Field                */
#define NV_FOPT_NMI_DIS_MASK                     (0x4U)                                              /**< NV_FOPT.NMI_DIS Mask                    */
#define NV_FOPT_NMI_DIS_SHIFT                    (2U)                                                /**< NV_FOPT.NMI_DIS Position                */
#define NV_FOPT_NMI_DIS(x)                       (((uint8_t)(((uint8_t)(x))<<NV_FOPT_NMI_DIS_SHIFT))&NV_FOPT_NMI_DIS_MASK) /**< NV_FOPT.NMI_DIS Field                   */
/** @} */

/** @name FEPROT - Non-volatile EEPROM Protection Register */ /** @{ */
#define NV_FEPROT_EPROT_MASK                     (0xFFU)                                             /**< NV_FEPROT.EPROT Mask                    */
#define NV_FEPROT_EPROT_SHIFT                    (0U)                                                /**< NV_FEPROT.EPROT Position                */
#define NV_FEPROT_EPROT(x)                       (((uint8_t)(((uint8_t)(x))<<NV_FEPROT_EPROT_SHIFT))&NV_FEPROT_EPROT_MASK) /**< NV_FEPROT.EPROT Field                   */
/** @} */

/** @name FDPROT - Non-volatile D-Flash Protection Register */ /** @{ */
#define NV_FDPROT_DPROT_MASK                     (0xFFU)                                             /**< NV_FDPROT.DPROT Mask                    */
#define NV_FDPROT_DPROT_SHIFT                    (0U)                                                /**< NV_FDPROT.DPROT Position                */
#define NV_FDPROT_DPROT(x)                       (((uint8_t)(((uint8_t)(x))<<NV_FDPROT_DPROT_SHIFT))&NV_FDPROT_DPROT_MASK) /**< NV_FDPROT.DPROT Field                   */
/** @} */

/** @} */ /* End group NV_Register_Masks_GROUP */


/* NV - Peripheral instance base addresses */
#define NV_BasePtr                     0x00000400UL //!< Peripheral base address
#define NV                             ((NV_Type *) NV_BasePtr) //!< Freescale base pointer
#define NV_BASE_PTR                    (NV) //!< Freescale style base pointer

/** @} */ /* End group NV_Peripheral_access_layer_GROUP */


/** @brief C Struct for OSC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup OSC_Peripheral_access_layer_GROUP OSC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           OSC0 (file:OSC0_MK)                  ================ */
/* ================================================================================ */

/**
 * @brief System Oscillator
 */
/**
 * @struct OSC_Type
 * @brief  C Struct allowing access to OSC registers
 */
typedef struct OSC_Type {
   __IO uint8_t   CR;                           /**< 0000: Control Register                                             */
} OSC_Type;


/** @brief Register Masks for OSC */

/* -------------------------------------------------------------------------------- */
/* -----------     'OSC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup OSC_Register_Masks_GROUP OSC Register Masks */
/** @{ */

/** @name CR - Control Register */ /** @{ */
#define OSC_CR_SCP_MASK                          (0xFU)                                              /**< OSC0_CR.SCP Mask                        */
#define OSC_CR_SCP_SHIFT                         (0U)                                                /**< OSC0_CR.SCP Position                    */
#define OSC_CR_SCP(x)                            (((uint8_t)(((uint8_t)(x))<<OSC_CR_SCP_SHIFT))&OSC_CR_SCP_MASK) /**< OSC0_CR.SCP Field                       */
#define OSC_CR_SC16P_MASK                        (0x1U)                                              /**< OSC0_CR.SC16P Mask                      */
#define OSC_CR_SC16P_SHIFT                       (0U)                                                /**< OSC0_CR.SC16P Position                  */
#define OSC_CR_SC16P(x)                          (((uint8_t)(((uint8_t)(x))<<OSC_CR_SC16P_SHIFT))&OSC_CR_SC16P_MASK) /**< OSC0_CR.SC16P Field                     */
#define OSC_CR_SC8P_MASK                         (0x2U)                                              /**< OSC0_CR.SC8P Mask                       */
#define OSC_CR_SC8P_SHIFT                        (1U)                                                /**< OSC0_CR.SC8P Position                   */
#define OSC_CR_SC8P(x)                           (((uint8_t)(((uint8_t)(x))<<OSC_CR_SC8P_SHIFT))&OSC_CR_SC8P_MASK) /**< OSC0_CR.SC8P Field                      */
#define OSC_CR_SC4P_MASK                         (0x4U)                                              /**< OSC0_CR.SC4P Mask                       */
#define OSC_CR_SC4P_SHIFT                        (2U)                                                /**< OSC0_CR.SC4P Position                   */
#define OSC_CR_SC4P(x)                           (((uint8_t)(((uint8_t)(x))<<OSC_CR_SC4P_SHIFT))&OSC_CR_SC4P_MASK) /**< OSC0_CR.SC4P Field                      */
#define OSC_CR_SC2P_MASK                         (0x8U)                                              /**< OSC0_CR.SC2P Mask                       */
#define OSC_CR_SC2P_SHIFT                        (3U)                                                /**< OSC0_CR.SC2P Position                   */
#define OSC_CR_SC2P(x)                           (((uint8_t)(((uint8_t)(x))<<OSC_CR_SC2P_SHIFT))&OSC_CR_SC2P_MASK) /**< OSC0_CR.SC2P Field                      */
#define OSC_CR_EREFSTEN_MASK                     (0x20U)                                             /**< OSC0_CR.EREFSTEN Mask                   */
#define OSC_CR_EREFSTEN_SHIFT                    (5U)                                                /**< OSC0_CR.EREFSTEN Position               */
#define OSC_CR_EREFSTEN(x)                       (((uint8_t)(((uint8_t)(x))<<OSC_CR_EREFSTEN_SHIFT))&OSC_CR_EREFSTEN_MASK) /**< OSC0_CR.EREFSTEN Field                  */
#define OSC_CR_ERCLKEN_MASK                      (0x80U)                                             /**< OSC0_CR.ERCLKEN Mask                    */
#define OSC_CR_ERCLKEN_SHIFT                     (7U)                                                /**< OSC0_CR.ERCLKEN Position                */
#define OSC_CR_ERCLKEN(x)                        (((uint8_t)(((uint8_t)(x))<<OSC_CR_ERCLKEN_SHIFT))&OSC_CR_ERCLKEN_MASK) /**< OSC0_CR.ERCLKEN Field                   */
/** @} */

/** @} */ /* End group OSC_Register_Masks_GROUP */


/* OSC0 - Peripheral instance base addresses */
#define OSC0_BasePtr                   0x40065000UL //!< Peripheral base address
#define OSC0                           ((OSC_Type *) OSC0_BasePtr) //!< Freescale base pointer
#define OSC0_BASE_PTR                  (OSC0) //!< Freescale style base pointer

/** @} */ /* End group OSC_Peripheral_access_layer_GROUP */


/** @brief C Struct for PDB */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PDB_Peripheral_access_layer_GROUP PDB Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PDB0 (file:PDB0_2CH_2PT_2DAC_3PO)       ================ */
/* ================================================================================ */

/**
 * @brief Programmable Delay Block (2 channels, 2 pre-triggers, 2 DAC, 3 pulse out)
 */
#define PDB_CH_COUNT         2          /**< Number of PDB channels                             */
#define PDB_DAC_COUNT        2          /**< Number of DAC outputs                              */
#define PDB_DLY_COUNT        2          /**< Number of Pre-triggers                             */
#define PDB_POnDLY_COUNT     3          /**< Number of Pulse outputs                            */
/**
 * @struct PDB_Type
 * @brief  C Struct allowing access to PDB registers
 */
typedef struct PDB_Type {
   __IO uint32_t  SC;                           /**< 0000: Status and Control Register                                  */
   __IO uint32_t  MOD;                          /**< 0004: Modulus Register                                             */
   __I  uint32_t  CNT;                          /**< 0008: Counter Register                                             */
   __IO uint32_t  IDLY;                         /**< 000C: Interrupt Delay Register                                     */
   struct {
      __IO uint32_t  C1;                        /**< 0010: Channel  Control Register 1                                  */
      __IO uint32_t  S;                         /**< 0014: Channel  Status Register                                     */
      __IO uint32_t  DLY[PDB_DLY_COUNT];        /**< 0018: Channel Delay  Register                                      */
           uint8_t   RESERVED_0[24];            /**< 0020: 0x18 bytes                                                   */
   } CH[PDB_CH_COUNT];                          /**< 0010: (cluster: size=0x0050, 80)                                   */
        uint8_t   RESERVED_1[240];              /**< 0060: 0xF0 bytes                                                   */
   struct {
      __IO uint32_t  INTC;                      /**< 0150: DAC Interval Trigger n Control Register                      */
      __IO uint32_t  INT;                       /**< 0154: DAC Interval n Register                                      */
   } DAC[PDB_DAC_COUNT];                        /**< 0150: (cluster: size=0x0010, 16)                                   */
        uint8_t   RESERVED_3[48];               /**< 0160: 0x30 bytes                                                   */
   __IO uint32_t  POEN;                         /**< 0190: Pulse-Out Enable Register                                    */
   struct {
      union {                                   /**< 0194: (size=0004)                                                  */
         struct {                               /**< 0194: (size=0004)                                                  */
         __IO uint16_t  DLY2;                   /**< 0194: Pulse-Out 2 Delay Register                                   */
         __IO uint16_t  DLY1;                   /**< 0196: Pulse-Out 1 Delay Register                                   */
         };
         __IO uint32_t  PODLY;                  /**< 0194: Pulse-Out  Delay Register                                    */
      };
   } POnDLY[PDB_POnDLY_COUNT];                  /**< 0194: (cluster: size=0x000C, 12)                                   */
} PDB_Type;


/** @brief Register Masks for PDB */

/* -------------------------------------------------------------------------------- */
/* -----------     'PDB0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup PDB_Register_Masks_GROUP PDB Register Masks */
/** @{ */

/** @name SC - Status and Control Register */ /** @{ */
#define PDB_SC_LDOK_MASK                         (0x1U)                                              /**< PDB0_SC.LDOK Mask                       */
#define PDB_SC_LDOK_SHIFT                        (0U)                                                /**< PDB0_SC.LDOK Position                   */
#define PDB_SC_LDOK(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_SC_LDOK_SHIFT))&PDB_SC_LDOK_MASK) /**< PDB0_SC.LDOK Field                      */
#define PDB_SC_CONT_MASK                         (0x2U)                                              /**< PDB0_SC.CONT Mask                       */
#define PDB_SC_CONT_SHIFT                        (1U)                                                /**< PDB0_SC.CONT Position                   */
#define PDB_SC_CONT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_SC_CONT_SHIFT))&PDB_SC_CONT_MASK) /**< PDB0_SC.CONT Field                      */
#define PDB_SC_MULT_MASK                         (0xCU)                                              /**< PDB0_SC.MULT Mask                       */
#define PDB_SC_MULT_SHIFT                        (2U)                                                /**< PDB0_SC.MULT Position                   */
#define PDB_SC_MULT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_SC_MULT_SHIFT))&PDB_SC_MULT_MASK) /**< PDB0_SC.MULT Field                      */
#define PDB_SC_PDBIE_MASK                        (0x20U)                                             /**< PDB0_SC.PDBIE Mask                      */
#define PDB_SC_PDBIE_SHIFT                       (5U)                                                /**< PDB0_SC.PDBIE Position                  */
#define PDB_SC_PDBIE(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBIE_SHIFT))&PDB_SC_PDBIE_MASK) /**< PDB0_SC.PDBIE Field                     */
#define PDB_SC_PDBIF_MASK                        (0x40U)                                             /**< PDB0_SC.PDBIF Mask                      */
#define PDB_SC_PDBIF_SHIFT                       (6U)                                                /**< PDB0_SC.PDBIF Position                  */
#define PDB_SC_PDBIF(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBIF_SHIFT))&PDB_SC_PDBIF_MASK) /**< PDB0_SC.PDBIF Field                     */
#define PDB_SC_PDBEN_MASK                        (0x80U)                                             /**< PDB0_SC.PDBEN Mask                      */
#define PDB_SC_PDBEN_SHIFT                       (7U)                                                /**< PDB0_SC.PDBEN Position                  */
#define PDB_SC_PDBEN(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBEN_SHIFT))&PDB_SC_PDBEN_MASK) /**< PDB0_SC.PDBEN Field                     */
#define PDB_SC_TRGSEL_MASK                       (0xF00U)                                            /**< PDB0_SC.TRGSEL Mask                     */
#define PDB_SC_TRGSEL_SHIFT                      (8U)                                                /**< PDB0_SC.TRGSEL Position                 */
#define PDB_SC_TRGSEL(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_SC_TRGSEL_SHIFT))&PDB_SC_TRGSEL_MASK) /**< PDB0_SC.TRGSEL Field                    */
#define PDB_SC_PRESCALER_MASK                    (0x7000U)                                           /**< PDB0_SC.PRESCALER Mask                  */
#define PDB_SC_PRESCALER_SHIFT                   (12U)                                               /**< PDB0_SC.PRESCALER Position              */
#define PDB_SC_PRESCALER(x)                      (((uint32_t)(((uint32_t)(x))<<PDB_SC_PRESCALER_SHIFT))&PDB_SC_PRESCALER_MASK) /**< PDB0_SC.PRESCALER Field                 */
#define PDB_SC_DMAEN_MASK                        (0x8000U)                                           /**< PDB0_SC.DMAEN Mask                      */
#define PDB_SC_DMAEN_SHIFT                       (15U)                                               /**< PDB0_SC.DMAEN Position                  */
#define PDB_SC_DMAEN(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_DMAEN_SHIFT))&PDB_SC_DMAEN_MASK) /**< PDB0_SC.DMAEN Field                     */
#define PDB_SC_SWTRIG_MASK                       (0x10000U)                                          /**< PDB0_SC.SWTRIG Mask                     */
#define PDB_SC_SWTRIG_SHIFT                      (16U)                                               /**< PDB0_SC.SWTRIG Position                 */
#define PDB_SC_SWTRIG(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_SC_SWTRIG_SHIFT))&PDB_SC_SWTRIG_MASK) /**< PDB0_SC.SWTRIG Field                    */
#define PDB_SC_PDBEIE_MASK                       (0x20000U)                                          /**< PDB0_SC.PDBEIE Mask                     */
#define PDB_SC_PDBEIE_SHIFT                      (17U)                                               /**< PDB0_SC.PDBEIE Position                 */
#define PDB_SC_PDBEIE(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_SC_PDBEIE_SHIFT))&PDB_SC_PDBEIE_MASK) /**< PDB0_SC.PDBEIE Field                    */
#define PDB_SC_LDMOD_MASK                        (0xC0000U)                                          /**< PDB0_SC.LDMOD Mask                      */
#define PDB_SC_LDMOD_SHIFT                       (18U)                                               /**< PDB0_SC.LDMOD Position                  */
#define PDB_SC_LDMOD(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_SC_LDMOD_SHIFT))&PDB_SC_LDMOD_MASK) /**< PDB0_SC.LDMOD Field                     */
/** @} */

/** @name MOD - Modulus Register */ /** @{ */
#define PDB_MOD_MOD_MASK                         (0xFFFFU)                                           /**< PDB0_MOD.MOD Mask                       */
#define PDB_MOD_MOD_SHIFT                        (0U)                                                /**< PDB0_MOD.MOD Position                   */
#define PDB_MOD_MOD(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_MOD_MOD_SHIFT))&PDB_MOD_MOD_MASK) /**< PDB0_MOD.MOD Field                      */
/** @} */

/** @name CNT - Counter Register */ /** @{ */
#define PDB_CNT_CNT_MASK                         (0xFFFFU)                                           /**< PDB0_CNT.CNT Mask                       */
#define PDB_CNT_CNT_SHIFT                        (0U)                                                /**< PDB0_CNT.CNT Position                   */
#define PDB_CNT_CNT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_CNT_CNT_SHIFT))&PDB_CNT_CNT_MASK) /**< PDB0_CNT.CNT Field                      */
/** @} */

/** @name IDLY - Interrupt Delay Register */ /** @{ */
#define PDB_IDLY_IDLY_MASK                       (0xFFFFU)                                           /**< PDB0_IDLY.IDLY Mask                     */
#define PDB_IDLY_IDLY_SHIFT                      (0U)                                                /**< PDB0_IDLY.IDLY Position                 */
#define PDB_IDLY_IDLY(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_IDLY_IDLY_SHIFT))&PDB_IDLY_IDLY_MASK) /**< PDB0_IDLY.IDLY Field                    */
/** @} */

/** @name C1 - Channel %s Control Register 1 */ /** @{ */
#define PDB_C1_EN_MASK                           (0xFFU)                                             /**< PDB0_C1.EN Mask                         */
#define PDB_C1_EN_SHIFT                          (0U)                                                /**< PDB0_C1.EN Position                     */
#define PDB_C1_EN(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_C1_EN_SHIFT))&PDB_C1_EN_MASK) /**< PDB0_C1.EN Field                        */
#define PDB_C1_TOS_MASK                          (0xFF00U)                                           /**< PDB0_C1.TOS Mask                        */
#define PDB_C1_TOS_SHIFT                         (8U)                                                /**< PDB0_C1.TOS Position                    */
#define PDB_C1_TOS(x)                            (((uint32_t)(((uint32_t)(x))<<PDB_C1_TOS_SHIFT))&PDB_C1_TOS_MASK) /**< PDB0_C1.TOS Field                       */
#define PDB_C1_BB_MASK                           (0xFF0000U)                                         /**< PDB0_C1.BB Mask                         */
#define PDB_C1_BB_SHIFT                          (16U)                                               /**< PDB0_C1.BB Position                     */
#define PDB_C1_BB(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_C1_BB_SHIFT))&PDB_C1_BB_MASK) /**< PDB0_C1.BB Field                        */
/** @} */

/** @name S - Channel %s Status Register */ /** @{ */
#define PDB_S_ERR_MASK                           (0xFFU)                                             /**< PDB0_S.ERR Mask                         */
#define PDB_S_ERR_SHIFT                          (0U)                                                /**< PDB0_S.ERR Position                     */
#define PDB_S_ERR(x)                             (((uint32_t)(((uint32_t)(x))<<PDB_S_ERR_SHIFT))&PDB_S_ERR_MASK) /**< PDB0_S.ERR Field                        */
#define PDB_S_CF_MASK                            (0xFF0000U)                                         /**< PDB0_S.CF Mask                          */
#define PDB_S_CF_SHIFT                           (16U)                                               /**< PDB0_S.CF Position                      */
#define PDB_S_CF(x)                              (((uint32_t)(((uint32_t)(x))<<PDB_S_CF_SHIFT))&PDB_S_CF_MASK) /**< PDB0_S.CF Field                         */
/** @} */

/** @name DLY - Channel Delay %s Register */ /** @{ */
#define PDB_DLY_DLY_MASK                         (0xFFFFU)                                           /**< PDB0_DLY.DLY Mask                       */
#define PDB_DLY_DLY_SHIFT                        (0U)                                                /**< PDB0_DLY.DLY Position                   */
#define PDB_DLY_DLY(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_DLY_DLY_SHIFT))&PDB_DLY_DLY_MASK) /**< PDB0_DLY.DLY Field                      */
/** @} */

/** @name INTC - DAC Interval Trigger n Control Register */ /** @{ */
#define PDB_INTC_TOE_MASK                        (0x1U)                                              /**< PDB0_INTC.TOE Mask                      */
#define PDB_INTC_TOE_SHIFT                       (0U)                                                /**< PDB0_INTC.TOE Position                  */
#define PDB_INTC_TOE(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_INTC_TOE_SHIFT))&PDB_INTC_TOE_MASK) /**< PDB0_INTC.TOE Field                     */
#define PDB_INTC_EXT_MASK                        (0x2U)                                              /**< PDB0_INTC.EXT Mask                      */
#define PDB_INTC_EXT_SHIFT                       (1U)                                                /**< PDB0_INTC.EXT Position                  */
#define PDB_INTC_EXT(x)                          (((uint32_t)(((uint32_t)(x))<<PDB_INTC_EXT_SHIFT))&PDB_INTC_EXT_MASK) /**< PDB0_INTC.EXT Field                     */
/** @} */

/** @name INT - DAC Interval n Register */ /** @{ */
#define PDB_INT_INT_MASK                         (0xFFFFU)                                           /**< PDB0_INT.INT Mask                       */
#define PDB_INT_INT_SHIFT                        (0U)                                                /**< PDB0_INT.INT Position                   */
#define PDB_INT_INT(x)                           (((uint32_t)(((uint32_t)(x))<<PDB_INT_INT_SHIFT))&PDB_INT_INT_MASK) /**< PDB0_INT.INT Field                      */
/** @} */

/** @name POEN - Pulse-Out Enable Register */ /** @{ */
#define PDB_POEN_POEN_MASK                       (0xFFU)                                             /**< PDB0_POEN.POEN Mask                     */
#define PDB_POEN_POEN_SHIFT                      (0U)                                                /**< PDB0_POEN.POEN Position                 */
#define PDB_POEN_POEN(x)                         (((uint32_t)(((uint32_t)(x))<<PDB_POEN_POEN_SHIFT))&PDB_POEN_POEN_MASK) /**< PDB0_POEN.POEN Field                    */
/** @} */

/** @name PODLY - Pulse-Out %s Delay Register */ /** @{ */
#define PDB_PODLY_DLY2_MASK                      (0xFFFFU)                                           /**< PDB0_PODLY.DLY2 Mask                    */
#define PDB_PODLY_DLY2_SHIFT                     (0U)                                                /**< PDB0_PODLY.DLY2 Position                */
#define PDB_PODLY_DLY2(x)                        (((uint32_t)(((uint32_t)(x))<<PDB_PODLY_DLY2_SHIFT))&PDB_PODLY_DLY2_MASK) /**< PDB0_PODLY.DLY2 Field                   */
#define PDB_PODLY_DLY1_MASK                      (0xFFFF0000U)                                       /**< PDB0_PODLY.DLY1 Mask                    */
#define PDB_PODLY_DLY1_SHIFT                     (16U)                                               /**< PDB0_PODLY.DLY1 Position                */
#define PDB_PODLY_DLY1(x)                        (((uint32_t)(((uint32_t)(x))<<PDB_PODLY_DLY1_SHIFT))&PDB_PODLY_DLY1_MASK) /**< PDB0_PODLY.DLY1 Field                   */
/** @} */

/** @} */ /* End group PDB_Register_Masks_GROUP */


/* PDB0 - Peripheral instance base addresses */
#define PDB0_BasePtr                   0x40036000UL //!< Peripheral base address
#define PDB0                           ((PDB_Type *) PDB0_BasePtr) //!< Freescale base pointer
#define PDB0_BASE_PTR                  (PDB0) //!< Freescale style base pointer
#define PDB0_IRQS { PDB0_IRQn,  }


/** @} */ /* End group PDB_Peripheral_access_layer_GROUP */


/** @brief C Struct for PIT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PIT_Peripheral_access_layer_GROUP PIT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PIT (file:PIT_4CH_CHAIN)             ================ */
/* ================================================================================ */

/**
 * @brief Periodic Interrupt Timer (4 channels)
 */
#define PIT_TMR_COUNT        4          /**< Number of timer channels                           */
/**
 * @struct PIT_Type
 * @brief  C Struct allowing access to PIT registers
 */
typedef struct PIT_Type {
   __IO uint32_t  MCR;                          /**< 0000: Module Control Register                                      */
        uint8_t   RESERVED_0[252];              /**< 0004: 0xFC bytes                                                   */
   struct {
      __IO uint32_t  LDVAL;                     /**< 0100: Timer Load Value Register                                    */
      __I  uint32_t  CVAL;                      /**< 0104: Current Timer Value Register                                 */
      __IO uint32_t  TCTRL;                     /**< 0108: Timer Control Register                                       */
      __IO uint32_t  TFLG;                      /**< 010C: Timer Flag Register                                          */
   } CHANNEL[PIT_TMR_COUNT];                    /**< 0100: (cluster: size=0x0040, 64)                                   */
} PIT_Type;


/** @brief Register Masks for PIT */

/* -------------------------------------------------------------------------------- */
/* -----------     'PIT' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup PIT_Register_Masks_GROUP PIT Register Masks */
/** @{ */

/** @name MCR - Module Control Register */ /** @{ */
#define PIT_MCR_FRZ_MASK                         (0x1U)                                              /**< PIT_MCR.FRZ Mask                        */
#define PIT_MCR_FRZ_SHIFT                        (0U)                                                /**< PIT_MCR.FRZ Position                    */
#define PIT_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<PIT_MCR_FRZ_SHIFT))&PIT_MCR_FRZ_MASK) /**< PIT_MCR.FRZ Field                       */
#define PIT_MCR_MDIS_MASK                        (0x2U)                                              /**< PIT_MCR.MDIS Mask                       */
#define PIT_MCR_MDIS_SHIFT                       (1U)                                                /**< PIT_MCR.MDIS Position                   */
#define PIT_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_MCR_MDIS_SHIFT))&PIT_MCR_MDIS_MASK) /**< PIT_MCR.MDIS Field                      */
/** @} */

/** @name LDVAL - Timer Load Value Register */ /** @{ */
#define PIT_LDVAL_TSV_MASK                       (0xFFFFFFFFU)                                       /**< PIT_LDVAL.TSV Mask                      */
#define PIT_LDVAL_TSV_SHIFT                      (0U)                                                /**< PIT_LDVAL.TSV Position                  */
#define PIT_LDVAL_TSV(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_LDVAL_TSV_SHIFT))&PIT_LDVAL_TSV_MASK) /**< PIT_LDVAL.TSV Field                     */
/** @} */

/** @name CVAL - Current Timer Value Register */ /** @{ */
#define PIT_CVAL_TVL_MASK                        (0xFFFFFFFFU)                                       /**< PIT_CVAL.TVL Mask                       */
#define PIT_CVAL_TVL_SHIFT                       (0U)                                                /**< PIT_CVAL.TVL Position                   */
#define PIT_CVAL_TVL(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_CVAL_TVL_SHIFT))&PIT_CVAL_TVL_MASK) /**< PIT_CVAL.TVL Field                      */
/** @} */

/** @name TCTRL - Timer Control Register */ /** @{ */
#define PIT_TCTRL_TEN_MASK                       (0x1U)                                              /**< PIT_TCTRL.TEN Mask                      */
#define PIT_TCTRL_TEN_SHIFT                      (0U)                                                /**< PIT_TCTRL.TEN Position                  */
#define PIT_TCTRL_TEN(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_TEN_SHIFT))&PIT_TCTRL_TEN_MASK) /**< PIT_TCTRL.TEN Field                     */
#define PIT_TCTRL_TIE_MASK                       (0x2U)                                              /**< PIT_TCTRL.TIE Mask                      */
#define PIT_TCTRL_TIE_SHIFT                      (1U)                                                /**< PIT_TCTRL.TIE Position                  */
#define PIT_TCTRL_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_TIE_SHIFT))&PIT_TCTRL_TIE_MASK) /**< PIT_TCTRL.TIE Field                     */
#define PIT_TCTRL_CHN_MASK                       (0x4U)                                              /**< PIT_TCTRL.CHN Mask                      */
#define PIT_TCTRL_CHN_SHIFT                      (2U)                                                /**< PIT_TCTRL.CHN Position                  */
#define PIT_TCTRL_CHN(x)                         (((uint32_t)(((uint32_t)(x))<<PIT_TCTRL_CHN_SHIFT))&PIT_TCTRL_CHN_MASK) /**< PIT_TCTRL.CHN Field                     */
/** @} */

/** @name TFLG - Timer Flag Register */ /** @{ */
#define PIT_TFLG_TIF_MASK                        (0x1U)                                              /**< PIT_TFLG.TIF Mask                       */
#define PIT_TFLG_TIF_SHIFT                       (0U)                                                /**< PIT_TFLG.TIF Position                   */
#define PIT_TFLG_TIF(x)                          (((uint32_t)(((uint32_t)(x))<<PIT_TFLG_TIF_SHIFT))&PIT_TFLG_TIF_MASK) /**< PIT_TFLG.TIF Field                      */
/** @} */

/** @} */ /* End group PIT_Register_Masks_GROUP */


/* PIT - Peripheral instance base addresses */
#define PIT_BasePtr                    0x40037000UL //!< Peripheral base address
#define PIT                            ((PIT_Type *) PIT_BasePtr) //!< Freescale base pointer
#define PIT_BASE_PTR                   (PIT) //!< Freescale style base pointer
#define PIT_IRQS { PIT0_IRQn, PIT1_IRQn, PIT2_IRQn, PIT3_IRQn,  }


/** @} */ /* End group PIT_Peripheral_access_layer_GROUP */


/** @brief C Struct for PMC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PMC_Peripheral_access_layer_GROUP PMC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PMC (file:PMC_MK)                    ================ */
/* ================================================================================ */

/**
 * @brief Power Management Controller
 */
/**
 * @struct PMC_Type
 * @brief  C Struct allowing access to PMC registers
 */
typedef struct PMC_Type {
   __IO uint8_t   LVDSC1;                       /**< 0000: Low Voltage Status and Control 1                             */
   __IO uint8_t   LVDSC2;                       /**< 0001: Low Voltage Status and Control 2                             */
   __IO uint8_t   REGSC;                        /**< 0002: Regulator Status and Control                                 */
} PMC_Type;


/** @brief Register Masks for PMC */

/* -------------------------------------------------------------------------------- */
/* -----------     'PMC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup PMC_Register_Masks_GROUP PMC Register Masks */
/** @{ */

/** @name LVDSC1 - Low Voltage Status and Control 1 */ /** @{ */
#define PMC_LVDSC1_LVDV_MASK                     (0x3U)                                              /**< PMC_LVDSC1.LVDV Mask                    */
#define PMC_LVDSC1_LVDV_SHIFT                    (0U)                                                /**< PMC_LVDSC1.LVDV Position                */
#define PMC_LVDSC1_LVDV(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDV_SHIFT))&PMC_LVDSC1_LVDV_MASK) /**< PMC_LVDSC1.LVDV Field                   */
#define PMC_LVDSC1_LVDRE_MASK                    (0x10U)                                             /**< PMC_LVDSC1.LVDRE Mask                   */
#define PMC_LVDSC1_LVDRE_SHIFT                   (4U)                                                /**< PMC_LVDSC1.LVDRE Position               */
#define PMC_LVDSC1_LVDRE(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDRE_SHIFT))&PMC_LVDSC1_LVDRE_MASK) /**< PMC_LVDSC1.LVDRE Field                  */
#define PMC_LVDSC1_LVDIE_MASK                    (0x20U)                                             /**< PMC_LVDSC1.LVDIE Mask                   */
#define PMC_LVDSC1_LVDIE_SHIFT                   (5U)                                                /**< PMC_LVDSC1.LVDIE Position               */
#define PMC_LVDSC1_LVDIE(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDIE_SHIFT))&PMC_LVDSC1_LVDIE_MASK) /**< PMC_LVDSC1.LVDIE Field                  */
#define PMC_LVDSC1_LVDACK_MASK                   (0x40U)                                             /**< PMC_LVDSC1.LVDACK Mask                  */
#define PMC_LVDSC1_LVDACK_SHIFT                  (6U)                                                /**< PMC_LVDSC1.LVDACK Position              */
#define PMC_LVDSC1_LVDACK(x)                     (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDACK_SHIFT))&PMC_LVDSC1_LVDACK_MASK) /**< PMC_LVDSC1.LVDACK Field                 */
#define PMC_LVDSC1_LVDF_MASK                     (0x80U)                                             /**< PMC_LVDSC1.LVDF Mask                    */
#define PMC_LVDSC1_LVDF_SHIFT                    (7U)                                                /**< PMC_LVDSC1.LVDF Position                */
#define PMC_LVDSC1_LVDF(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC1_LVDF_SHIFT))&PMC_LVDSC1_LVDF_MASK) /**< PMC_LVDSC1.LVDF Field                   */
/** @} */

/** @name LVDSC2 - Low Voltage Status and Control 2 */ /** @{ */
#define PMC_LVDSC2_LVWV_MASK                     (0x3U)                                              /**< PMC_LVDSC2.LVWV Mask                    */
#define PMC_LVDSC2_LVWV_SHIFT                    (0U)                                                /**< PMC_LVDSC2.LVWV Position                */
#define PMC_LVDSC2_LVWV(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWV_SHIFT))&PMC_LVDSC2_LVWV_MASK) /**< PMC_LVDSC2.LVWV Field                   */
#define PMC_LVDSC2_LVWIE_MASK                    (0x20U)                                             /**< PMC_LVDSC2.LVWIE Mask                   */
#define PMC_LVDSC2_LVWIE_SHIFT                   (5U)                                                /**< PMC_LVDSC2.LVWIE Position               */
#define PMC_LVDSC2_LVWIE(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWIE_SHIFT))&PMC_LVDSC2_LVWIE_MASK) /**< PMC_LVDSC2.LVWIE Field                  */
#define PMC_LVDSC2_LVWACK_MASK                   (0x40U)                                             /**< PMC_LVDSC2.LVWACK Mask                  */
#define PMC_LVDSC2_LVWACK_SHIFT                  (6U)                                                /**< PMC_LVDSC2.LVWACK Position              */
#define PMC_LVDSC2_LVWACK(x)                     (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWACK_SHIFT))&PMC_LVDSC2_LVWACK_MASK) /**< PMC_LVDSC2.LVWACK Field                 */
#define PMC_LVDSC2_LVWF_MASK                     (0x80U)                                             /**< PMC_LVDSC2.LVWF Mask                    */
#define PMC_LVDSC2_LVWF_SHIFT                    (7U)                                                /**< PMC_LVDSC2.LVWF Position                */
#define PMC_LVDSC2_LVWF(x)                       (((uint8_t)(((uint8_t)(x))<<PMC_LVDSC2_LVWF_SHIFT))&PMC_LVDSC2_LVWF_MASK) /**< PMC_LVDSC2.LVWF Field                   */
/** @} */

/** @name REGSC - Regulator Status and Control */ /** @{ */
#define PMC_REGSC_BGBE_MASK                      (0x1U)                                              /**< PMC_REGSC.BGBE Mask                     */
#define PMC_REGSC_BGBE_SHIFT                     (0U)                                                /**< PMC_REGSC.BGBE Position                 */
#define PMC_REGSC_BGBE(x)                        (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_BGBE_SHIFT))&PMC_REGSC_BGBE_MASK) /**< PMC_REGSC.BGBE Field                    */
#define PMC_REGSC_REGONS_MASK                    (0x4U)                                              /**< PMC_REGSC.REGONS Mask                   */
#define PMC_REGSC_REGONS_SHIFT                   (2U)                                                /**< PMC_REGSC.REGONS Position               */
#define PMC_REGSC_REGONS(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_REGONS_SHIFT))&PMC_REGSC_REGONS_MASK) /**< PMC_REGSC.REGONS Field                  */
#define PMC_REGSC_ACKISO_MASK                    (0x8U)                                              /**< PMC_REGSC.ACKISO Mask                   */
#define PMC_REGSC_ACKISO_SHIFT                   (3U)                                                /**< PMC_REGSC.ACKISO Position               */
#define PMC_REGSC_ACKISO(x)                      (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_ACKISO_SHIFT))&PMC_REGSC_ACKISO_MASK) /**< PMC_REGSC.ACKISO Field                  */
#define PMC_REGSC_BGEN_MASK                      (0x10U)                                             /**< PMC_REGSC.BGEN Mask                     */
#define PMC_REGSC_BGEN_SHIFT                     (4U)                                                /**< PMC_REGSC.BGEN Position                 */
#define PMC_REGSC_BGEN(x)                        (((uint8_t)(((uint8_t)(x))<<PMC_REGSC_BGEN_SHIFT))&PMC_REGSC_BGEN_MASK) /**< PMC_REGSC.BGEN Field                    */
/** @} */

/** @} */ /* End group PMC_Register_Masks_GROUP */


/* PMC - Peripheral instance base addresses */
#define PMC_BasePtr                    0x4007D000UL //!< Peripheral base address
#define PMC                            ((PMC_Type *) PMC_BasePtr) //!< Freescale base pointer
#define PMC_BASE_PTR                   (PMC) //!< Freescale style base pointer
#define PMC_IRQS { PMC_IRQn,  }


/** @} */ /* End group PMC_Peripheral_access_layer_GROUP */


/** @brief C Struct for PORT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PORTA (file:PORTA_DFER)              ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */
/**
 * @struct PORT_DFER_Type
 * @brief  C Struct allowing access to PORT registers
 */
typedef struct PORT_DFER_Type {
   __IO uint32_t  PCR[32];                      /**< 0000: Pin Control Register                                         */
   __O  uint32_t  GPCLR;                        /**< 0080: Global Pin Control Low Register                              */
   __O  uint32_t  GPCHR;                        /**< 0084: Global Pin Control High Register                             */
        uint8_t   RESERVED_0[24];               /**< 0088: 0x18 bytes                                                   */
   __IO uint32_t  ISFR;                         /**< 00A0: Interrupt Status Flag Register                               */
        uint8_t   RESERVED_1[28];               /**< 00A4: 0x1C bytes                                                   */
   __IO uint32_t  DFER;                         /**< 00C0: Digital Filter Enable Register                               */
   __IO uint32_t  DFCR;                         /**< 00C4: Digital Filter Clock Register                                */
   __IO uint32_t  DFWR;                         /**< 00C8: Digital Filter Width Register                                */
} PORT_DFER_Type;


/** @brief Register Masks for PORT */

/* -------------------------------------------------------------------------------- */
/* -----------     'PORTA' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup PORT_Register_Masks_GROUP PORT Register Masks */
/** @{ */

/** @name PCR - Pin Control Register %s */ /** @{ */
#define PORT_PCR_PD_MASK                         (0x3U)                                              /**< PORTA_PCR.PD Mask                       */
#define PORT_PCR_PD_SHIFT                        (0U)                                                /**< PORTA_PCR.PD Position                   */
#define PORT_PCR_PD(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PD_SHIFT))&PORT_PCR_PD_MASK) /**< PORTA_PCR.PD Field                      */
#define PORT_PCR_PS_MASK                         (0x1U)                                              /**< PORTA_PCR.PS Mask                       */
#define PORT_PCR_PS_SHIFT                        (0U)                                                /**< PORTA_PCR.PS Position                   */
#define PORT_PCR_PS(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PS_SHIFT))&PORT_PCR_PS_MASK) /**< PORTA_PCR.PS Field                      */
#define PORT_PCR_PE_MASK                         (0x2U)                                              /**< PORTA_PCR.PE Mask                       */
#define PORT_PCR_PE_SHIFT                        (1U)                                                /**< PORTA_PCR.PE Position                   */
#define PORT_PCR_PE(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PE_SHIFT))&PORT_PCR_PE_MASK) /**< PORTA_PCR.PE Field                      */
#define PORT_PCR_SRE_MASK                        (0x4U)                                              /**< PORTA_PCR.SRE Mask                      */
#define PORT_PCR_SRE_SHIFT                       (2U)                                                /**< PORTA_PCR.SRE Position                  */
#define PORT_PCR_SRE(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_SRE_SHIFT))&PORT_PCR_SRE_MASK) /**< PORTA_PCR.SRE Field                     */
#define PORT_PCR_PFE_MASK                        (0x10U)                                             /**< PORTA_PCR.PFE Mask                      */
#define PORT_PCR_PFE_SHIFT                       (4U)                                                /**< PORTA_PCR.PFE Position                  */
#define PORT_PCR_PFE(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_PFE_SHIFT))&PORT_PCR_PFE_MASK) /**< PORTA_PCR.PFE Field                     */
#define PORT_PCR_ODE_MASK                        (0x20U)                                             /**< PORTA_PCR.ODE Mask                      */
#define PORT_PCR_ODE_SHIFT                       (5U)                                                /**< PORTA_PCR.ODE Position                  */
#define PORT_PCR_ODE(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_ODE_SHIFT))&PORT_PCR_ODE_MASK) /**< PORTA_PCR.ODE Field                     */
#define PORT_PCR_DSE_MASK                        (0x40U)                                             /**< PORTA_PCR.DSE Mask                      */
#define PORT_PCR_DSE_SHIFT                       (6U)                                                /**< PORTA_PCR.DSE Position                  */
#define PORT_PCR_DSE(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_DSE_SHIFT))&PORT_PCR_DSE_MASK) /**< PORTA_PCR.DSE Field                     */
#define PORT_PCR_MUX_MASK                        (0x700U)                                            /**< PORTA_PCR.MUX Mask                      */
#define PORT_PCR_MUX_SHIFT                       (8U)                                                /**< PORTA_PCR.MUX Position                  */
#define PORT_PCR_MUX(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_MUX_SHIFT))&PORT_PCR_MUX_MASK) /**< PORTA_PCR.MUX Field                     */
#define PORT_PCR_LK_MASK                         (0x8000U)                                           /**< PORTA_PCR.LK Mask                       */
#define PORT_PCR_LK_SHIFT                        (15U)                                               /**< PORTA_PCR.LK Position                   */
#define PORT_PCR_LK(x)                           (((uint32_t)(((uint32_t)(x))<<PORT_PCR_LK_SHIFT))&PORT_PCR_LK_MASK) /**< PORTA_PCR.LK Field                      */
#define PORT_PCR_IRQC_MASK                       (0xF0000U)                                          /**< PORTA_PCR.IRQC Mask                     */
#define PORT_PCR_IRQC_SHIFT                      (16U)                                               /**< PORTA_PCR.IRQC Position                 */
#define PORT_PCR_IRQC(x)                         (((uint32_t)(((uint32_t)(x))<<PORT_PCR_IRQC_SHIFT))&PORT_PCR_IRQC_MASK) /**< PORTA_PCR.IRQC Field                    */
#define PORT_PCR_ISF_MASK                        (0x1000000U)                                        /**< PORTA_PCR.ISF Mask                      */
#define PORT_PCR_ISF_SHIFT                       (24U)                                               /**< PORTA_PCR.ISF Position                  */
#define PORT_PCR_ISF(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_PCR_ISF_SHIFT))&PORT_PCR_ISF_MASK) /**< PORTA_PCR.ISF Field                     */
/** @} */

/** @name GPCLR - Global Pin Control Low Register */ /** @{ */
#define PORT_GPCLR_GPWD_MASK                     (0xFFFFU)                                           /**< PORTA_GPCLR.GPWD Mask                   */
#define PORT_GPCLR_GPWD_SHIFT                    (0U)                                                /**< PORTA_GPCLR.GPWD Position               */
#define PORT_GPCLR_GPWD(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCLR_GPWD_SHIFT))&PORT_GPCLR_GPWD_MASK) /**< PORTA_GPCLR.GPWD Field                  */
#define PORT_GPCLR_GPWE_MASK                     (0xFFFF0000U)                                       /**< PORTA_GPCLR.GPWE Mask                   */
#define PORT_GPCLR_GPWE_SHIFT                    (16U)                                               /**< PORTA_GPCLR.GPWE Position               */
#define PORT_GPCLR_GPWE(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCLR_GPWE_SHIFT))&PORT_GPCLR_GPWE_MASK) /**< PORTA_GPCLR.GPWE Field                  */
/** @} */

/** @name GPCHR - Global Pin Control High Register */ /** @{ */
#define PORT_GPCHR_GPWD_MASK                     (0xFFFFU)                                           /**< PORTA_GPCHR.GPWD Mask                   */
#define PORT_GPCHR_GPWD_SHIFT                    (0U)                                                /**< PORTA_GPCHR.GPWD Position               */
#define PORT_GPCHR_GPWD(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCHR_GPWD_SHIFT))&PORT_GPCHR_GPWD_MASK) /**< PORTA_GPCHR.GPWD Field                  */
#define PORT_GPCHR_GPWE_MASK                     (0xFFFF0000U)                                       /**< PORTA_GPCHR.GPWE Mask                   */
#define PORT_GPCHR_GPWE_SHIFT                    (16U)                                               /**< PORTA_GPCHR.GPWE Position               */
#define PORT_GPCHR_GPWE(x)                       (((uint32_t)(((uint32_t)(x))<<PORT_GPCHR_GPWE_SHIFT))&PORT_GPCHR_GPWE_MASK) /**< PORTA_GPCHR.GPWE Field                  */
/** @} */

/** @name DFCR - Digital Filter Clock Register */ /** @{ */
#define PORT_DFCR_CS_MASK                        (0x1U)                                              /**< PORTA_DFCR.CS Mask                      */
#define PORT_DFCR_CS_SHIFT                       (0U)                                                /**< PORTA_DFCR.CS Position                  */
#define PORT_DFCR_CS(x)                          (((uint32_t)(((uint32_t)(x))<<PORT_DFCR_CS_SHIFT))&PORT_DFCR_CS_MASK) /**< PORTA_DFCR.CS Field                     */
/** @} */

/** @name DFWR - Digital Filter Width Register */ /** @{ */
#define PORT_DFWR_FILT_MASK                      (0x1FU)                                             /**< PORTA_DFWR.FILT Mask                    */
#define PORT_DFWR_FILT_SHIFT                     (0U)                                                /**< PORTA_DFWR.FILT Position                */
#define PORT_DFWR_FILT(x)                        (((uint32_t)(((uint32_t)(x))<<PORT_DFWR_FILT_SHIFT))&PORT_DFWR_FILT_MASK) /**< PORTA_DFWR.FILT Field                   */
/** @} */

/** @} */ /* End group PORT_Register_Masks_GROUP */


/* PORTA - Peripheral instance base addresses */
#define PORTA_BasePtr                  0x40049000UL //!< Peripheral base address
#define PORTA                          ((PORT_DFER_Type *) PORTA_BasePtr) //!< Freescale base pointer
#define PORTA_BASE_PTR                 (PORTA) //!< Freescale style base pointer
#define PORTA_IRQS { PORTA_IRQn,  }


/** @} */ /* End group PORT_Peripheral_access_layer_GROUP */


/** @brief C Struct for PORT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PORTB (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTB - Peripheral instance base addresses */
#define PORTB_BasePtr                  0x4004A000UL //!< Peripheral base address
#define PORTB                          ((PORT_DFER_Type *) PORTB_BasePtr) //!< Freescale base pointer
#define PORTB_BASE_PTR                 (PORTB) //!< Freescale style base pointer
#define PORTB_IRQS { PORTB_IRQn,  }


/** @} */ /* End group PORT_Peripheral_access_layer_GROUP */


/** @brief C Struct for PORT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PORTC (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTC - Peripheral instance base addresses */
#define PORTC_BasePtr                  0x4004B000UL //!< Peripheral base address
#define PORTC                          ((PORT_DFER_Type *) PORTC_BasePtr) //!< Freescale base pointer
#define PORTC_BASE_PTR                 (PORTC) //!< Freescale style base pointer
#define PORTC_IRQS { PORTC_IRQn,  }


/** @} */ /* End group PORT_Peripheral_access_layer_GROUP */


/** @brief C Struct for PORT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PORTD (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTD - Peripheral instance base addresses */
#define PORTD_BasePtr                  0x4004C000UL //!< Peripheral base address
#define PORTD                          ((PORT_DFER_Type *) PORTD_BasePtr) //!< Freescale base pointer
#define PORTD_BASE_PTR                 (PORTD) //!< Freescale style base pointer
#define PORTD_IRQS { PORTD_IRQn,  }


/** @} */ /* End group PORT_Peripheral_access_layer_GROUP */


/** @brief C Struct for PORT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           PORTE (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTE - Peripheral instance base addresses */
#define PORTE_BasePtr                  0x4004D000UL //!< Peripheral base address
#define PORTE                          ((PORT_DFER_Type *) PORTE_BasePtr) //!< Freescale base pointer
#define PORTE_BASE_PTR                 (PORTE) //!< Freescale style base pointer
#define PORTE_IRQS { PORTE_IRQn,  }


/** @} */ /* End group PORT_Peripheral_access_layer_GROUP */


/** @brief C Struct for RCM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup RCM_Peripheral_access_layer_GROUP RCM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           RCM (file:RCM_MK10D5)                ================ */
/* ================================================================================ */

/**
 * @brief Reset Control Module
 */
/**
 * @struct RCM_Type
 * @brief  C Struct allowing access to RCM registers
 */
typedef struct RCM_Type {
   __I  uint8_t   SRS0;                         /**< 0000: System Reset Status Register 0                               */
   __I  uint8_t   SRS1;                         /**< 0001: System Reset Status Register 1                               */
        uint8_t   RESERVED_0[2];                /**< 0002: 0x2 bytes                                                    */
   __IO uint8_t   RPFC;                         /**< 0004: Reset Pin Filter Control Register                            */
   __IO uint8_t   RPFW;                         /**< 0005: Reset Pin Filter Width Register                              */
        uint8_t   RESERVED_1;                   /**< 0006: 0x1 bytes                                                    */
   __I  uint8_t   MR;                           /**< 0007: Mode Register                                                */
} RCM_Type;


/** @brief Register Masks for RCM */

/* -------------------------------------------------------------------------------- */
/* -----------     'RCM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup RCM_Register_Masks_GROUP RCM Register Masks */
/** @{ */

/** @name SRS0 - System Reset Status Register 0 */ /** @{ */
#define RCM_SRS0_WAKEUP_MASK                     (0x1U)                                              /**< RCM_SRS0.WAKEUP Mask                    */
#define RCM_SRS0_WAKEUP_SHIFT                    (0U)                                                /**< RCM_SRS0.WAKEUP Position                */
#define RCM_SRS0_WAKEUP(x)                       (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_WAKEUP_SHIFT))&RCM_SRS0_WAKEUP_MASK) /**< RCM_SRS0.WAKEUP Field                   */
#define RCM_SRS0_LVD_MASK                        (0x2U)                                              /**< RCM_SRS0.LVD Mask                       */
#define RCM_SRS0_LVD_SHIFT                       (1U)                                                /**< RCM_SRS0.LVD Position                   */
#define RCM_SRS0_LVD(x)                          (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_LVD_SHIFT))&RCM_SRS0_LVD_MASK) /**< RCM_SRS0.LVD Field                      */
#define RCM_SRS0_LOC_MASK                        (0x4U)                                              /**< RCM_SRS0.LOC Mask                       */
#define RCM_SRS0_LOC_SHIFT                       (2U)                                                /**< RCM_SRS0.LOC Position                   */
#define RCM_SRS0_LOC(x)                          (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_LOC_SHIFT))&RCM_SRS0_LOC_MASK) /**< RCM_SRS0.LOC Field                      */
#define RCM_SRS0_LOL_MASK                        (0x8U)                                              /**< RCM_SRS0.LOL Mask                       */
#define RCM_SRS0_LOL_SHIFT                       (3U)                                                /**< RCM_SRS0.LOL Position                   */
#define RCM_SRS0_LOL(x)                          (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_LOL_SHIFT))&RCM_SRS0_LOL_MASK) /**< RCM_SRS0.LOL Field                      */
#define RCM_SRS0_WDOG_MASK                       (0x20U)                                             /**< RCM_SRS0.WDOG Mask                      */
#define RCM_SRS0_WDOG_SHIFT                      (5U)                                                /**< RCM_SRS0.WDOG Position                  */
#define RCM_SRS0_WDOG(x)                         (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_WDOG_SHIFT))&RCM_SRS0_WDOG_MASK) /**< RCM_SRS0.WDOG Field                     */
#define RCM_SRS0_PIN_MASK                        (0x40U)                                             /**< RCM_SRS0.PIN Mask                       */
#define RCM_SRS0_PIN_SHIFT                       (6U)                                                /**< RCM_SRS0.PIN Position                   */
#define RCM_SRS0_PIN(x)                          (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_PIN_SHIFT))&RCM_SRS0_PIN_MASK) /**< RCM_SRS0.PIN Field                      */
#define RCM_SRS0_POR_MASK                        (0x80U)                                             /**< RCM_SRS0.POR Mask                       */
#define RCM_SRS0_POR_SHIFT                       (7U)                                                /**< RCM_SRS0.POR Position                   */
#define RCM_SRS0_POR(x)                          (((uint8_t)(((uint8_t)(x))<<RCM_SRS0_POR_SHIFT))&RCM_SRS0_POR_MASK) /**< RCM_SRS0.POR Field                      */
/** @} */

/** @name SRS1 - System Reset Status Register 1 */ /** @{ */
#define RCM_SRS1_JTAG_MASK                       (0x1U)                                              /**< RCM_SRS1.JTAG Mask                      */
#define RCM_SRS1_JTAG_SHIFT                      (0U)                                                /**< RCM_SRS1.JTAG Position                  */
#define RCM_SRS1_JTAG(x)                         (((uint8_t)(((uint8_t)(x))<<RCM_SRS1_JTAG_SHIFT))&RCM_SRS1_JTAG_MASK) /**< RCM_SRS1.JTAG Field                     */
#define RCM_SRS1_LOCKUP_MASK                     (0x2U)                                              /**< RCM_SRS1.LOCKUP Mask                    */
#define RCM_SRS1_LOCKUP_SHIFT                    (1U)                                                /**< RCM_SRS1.LOCKUP Position                */
#define RCM_SRS1_LOCKUP(x)                       (((uint8_t)(((uint8_t)(x))<<RCM_SRS1_LOCKUP_SHIFT))&RCM_SRS1_LOCKUP_MASK) /**< RCM_SRS1.LOCKUP Field                   */
#define RCM_SRS1_SW_MASK                         (0x4U)                                              /**< RCM_SRS1.SW Mask                        */
#define RCM_SRS1_SW_SHIFT                        (2U)                                                /**< RCM_SRS1.SW Position                    */
#define RCM_SRS1_SW(x)                           (((uint8_t)(((uint8_t)(x))<<RCM_SRS1_SW_SHIFT))&RCM_SRS1_SW_MASK) /**< RCM_SRS1.SW Field                       */
#define RCM_SRS1_MDM_AP_MASK                     (0x8U)                                              /**< RCM_SRS1.MDM_AP Mask                    */
#define RCM_SRS1_MDM_AP_SHIFT                    (3U)                                                /**< RCM_SRS1.MDM_AP Position                */
#define RCM_SRS1_MDM_AP(x)                       (((uint8_t)(((uint8_t)(x))<<RCM_SRS1_MDM_AP_SHIFT))&RCM_SRS1_MDM_AP_MASK) /**< RCM_SRS1.MDM_AP Field                   */
#define RCM_SRS1_EZPT_MASK                       (0x10U)                                             /**< RCM_SRS1.EZPT Mask                      */
#define RCM_SRS1_EZPT_SHIFT                      (4U)                                                /**< RCM_SRS1.EZPT Position                  */
#define RCM_SRS1_EZPT(x)                         (((uint8_t)(((uint8_t)(x))<<RCM_SRS1_EZPT_SHIFT))&RCM_SRS1_EZPT_MASK) /**< RCM_SRS1.EZPT Field                     */
#define RCM_SRS1_SACKERR_MASK                    (0x20U)                                             /**< RCM_SRS1.SACKERR Mask                   */
#define RCM_SRS1_SACKERR_SHIFT                   (5U)                                                /**< RCM_SRS1.SACKERR Position               */
#define RCM_SRS1_SACKERR(x)                      (((uint8_t)(((uint8_t)(x))<<RCM_SRS1_SACKERR_SHIFT))&RCM_SRS1_SACKERR_MASK) /**< RCM_SRS1.SACKERR Field                  */
/** @} */

/** @name RPFC - Reset Pin Filter Control Register */ /** @{ */
#define RCM_RPFC_RSTFLTSRW_MASK                  (0x3U)                                              /**< RCM_RPFC.RSTFLTSRW Mask                 */
#define RCM_RPFC_RSTFLTSRW_SHIFT                 (0U)                                                /**< RCM_RPFC.RSTFLTSRW Position             */
#define RCM_RPFC_RSTFLTSRW(x)                    (((uint8_t)(((uint8_t)(x))<<RCM_RPFC_RSTFLTSRW_SHIFT))&RCM_RPFC_RSTFLTSRW_MASK) /**< RCM_RPFC.RSTFLTSRW Field                */
#define RCM_RPFC_RSTFLTSS_MASK                   (0x4U)                                              /**< RCM_RPFC.RSTFLTSS Mask                  */
#define RCM_RPFC_RSTFLTSS_SHIFT                  (2U)                                                /**< RCM_RPFC.RSTFLTSS Position              */
#define RCM_RPFC_RSTFLTSS(x)                     (((uint8_t)(((uint8_t)(x))<<RCM_RPFC_RSTFLTSS_SHIFT))&RCM_RPFC_RSTFLTSS_MASK) /**< RCM_RPFC.RSTFLTSS Field                 */
/** @} */

/** @name RPFW - Reset Pin Filter Width Register */ /** @{ */
#define RCM_RPFW_RSTFLTSEL_MASK                  (0x1FU)                                             /**< RCM_RPFW.RSTFLTSEL Mask                 */
#define RCM_RPFW_RSTFLTSEL_SHIFT                 (0U)                                                /**< RCM_RPFW.RSTFLTSEL Position             */
#define RCM_RPFW_RSTFLTSEL(x)                    (((uint8_t)(((uint8_t)(x))<<RCM_RPFW_RSTFLTSEL_SHIFT))&RCM_RPFW_RSTFLTSEL_MASK) /**< RCM_RPFW.RSTFLTSEL Field                */
/** @} */

/** @name MR - Mode Register */ /** @{ */
#define RCM_MR_EZP_MS_MASK                       (0x2U)                                              /**< RCM_MR.EZP_MS Mask                      */
#define RCM_MR_EZP_MS_SHIFT                      (1U)                                                /**< RCM_MR.EZP_MS Position                  */
#define RCM_MR_EZP_MS(x)                         (((uint8_t)(((uint8_t)(x))<<RCM_MR_EZP_MS_SHIFT))&RCM_MR_EZP_MS_MASK) /**< RCM_MR.EZP_MS Field                     */
/** @} */

/** @} */ /* End group RCM_Register_Masks_GROUP */


/* RCM - Peripheral instance base addresses */
#define RCM_BasePtr                    0x4007F000UL //!< Peripheral base address
#define RCM                            ((RCM_Type *) RCM_BasePtr) //!< Freescale base pointer
#define RCM_BASE_PTR                   (RCM) //!< Freescale style base pointer

/** @} */ /* End group RCM_Peripheral_access_layer_GROUP */


/** @brief C Struct for RFSYS */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup RFSYS_Peripheral_access_layer_GROUP RFSYS Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           RFSYS (file:RFSYS_0)                 ================ */
/* ================================================================================ */

/**
 * @brief System register file
 */
/**
 * @struct RFSYS_Type
 * @brief  C Struct allowing access to RFSYS registers
 */
typedef struct RFSYS_Type {
   __IO uint32_t  REG[8];                       /**< 0000: Register file register                                       */
} RFSYS_Type;


/** @brief Register Masks for RFSYS */

/* -------------------------------------------------------------------------------- */
/* -----------     'RFSYS' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup RFSYS_Register_Masks_GROUP RFSYS Register Masks */
/** @{ */

/** @name REG - Register file register */ /** @{ */
#define RFSYS_REG_LL_MASK                        (0xFFU)                                             /**< RFSYS_REG.LL Mask                       */
#define RFSYS_REG_LL_SHIFT                       (0U)                                                /**< RFSYS_REG.LL Position                   */
#define RFSYS_REG_LL(x)                          (((uint32_t)(((uint32_t)(x))<<RFSYS_REG_LL_SHIFT))&RFSYS_REG_LL_MASK) /**< RFSYS_REG.LL Field                      */
#define RFSYS_REG_LH_MASK                        (0xFF00U)                                           /**< RFSYS_REG.LH Mask                       */
#define RFSYS_REG_LH_SHIFT                       (8U)                                                /**< RFSYS_REG.LH Position                   */
#define RFSYS_REG_LH(x)                          (((uint32_t)(((uint32_t)(x))<<RFSYS_REG_LH_SHIFT))&RFSYS_REG_LH_MASK) /**< RFSYS_REG.LH Field                      */
#define RFSYS_REG_HL_MASK                        (0xFF0000U)                                         /**< RFSYS_REG.HL Mask                       */
#define RFSYS_REG_HL_SHIFT                       (16U)                                               /**< RFSYS_REG.HL Position                   */
#define RFSYS_REG_HL(x)                          (((uint32_t)(((uint32_t)(x))<<RFSYS_REG_HL_SHIFT))&RFSYS_REG_HL_MASK) /**< RFSYS_REG.HL Field                      */
#define RFSYS_REG_HH_MASK                        (0xFF000000U)                                       /**< RFSYS_REG.HH Mask                       */
#define RFSYS_REG_HH_SHIFT                       (24U)                                               /**< RFSYS_REG.HH Position                   */
#define RFSYS_REG_HH(x)                          (((uint32_t)(((uint32_t)(x))<<RFSYS_REG_HH_SHIFT))&RFSYS_REG_HH_MASK) /**< RFSYS_REG.HH Field                      */
/** @} */

/** @} */ /* End group RFSYS_Register_Masks_GROUP */


/* RFSYS - Peripheral instance base addresses */
#define RFSYS_BasePtr                  0x40041000UL //!< Peripheral base address
#define RFSYS                          ((RFSYS_Type *) RFSYS_BasePtr) //!< Freescale base pointer
#define RFSYS_BASE_PTR                 (RFSYS) //!< Freescale style base pointer

/** @} */ /* End group RFSYS_Peripheral_access_layer_GROUP */


/** @brief C Struct for RFVBAT */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup RFVBAT_Peripheral_access_layer_GROUP RFVBAT Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           RFVBAT (file:RFVBAT_0)               ================ */
/* ================================================================================ */

/**
 * @brief VBAT register file
 */
/**
 * @struct RFVBAT_Type
 * @brief  C Struct allowing access to RFVBAT registers
 */
typedef struct RFVBAT_Type {
   __IO uint32_t  REG[8];                       /**< 0000: VBAT register file register                                  */
} RFVBAT_Type;


/** @brief Register Masks for RFVBAT */

/* -------------------------------------------------------------------------------- */
/* -----------     'RFVBAT' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup RFVBAT_Register_Masks_GROUP RFVBAT Register Masks */
/** @{ */

/** @name REG - VBAT register file register */ /** @{ */
#define RFVBAT_REG_LL_MASK                       (0xFFU)                                             /**< RFVBAT_REG.LL Mask                      */
#define RFVBAT_REG_LL_SHIFT                      (0U)                                                /**< RFVBAT_REG.LL Position                  */
#define RFVBAT_REG_LL(x)                         (((uint32_t)(((uint32_t)(x))<<RFVBAT_REG_LL_SHIFT))&RFVBAT_REG_LL_MASK) /**< RFVBAT_REG.LL Field                     */
#define RFVBAT_REG_LH_MASK                       (0xFF00U)                                           /**< RFVBAT_REG.LH Mask                      */
#define RFVBAT_REG_LH_SHIFT                      (8U)                                                /**< RFVBAT_REG.LH Position                  */
#define RFVBAT_REG_LH(x)                         (((uint32_t)(((uint32_t)(x))<<RFVBAT_REG_LH_SHIFT))&RFVBAT_REG_LH_MASK) /**< RFVBAT_REG.LH Field                     */
#define RFVBAT_REG_HL_MASK                       (0xFF0000U)                                         /**< RFVBAT_REG.HL Mask                      */
#define RFVBAT_REG_HL_SHIFT                      (16U)                                               /**< RFVBAT_REG.HL Position                  */
#define RFVBAT_REG_HL(x)                         (((uint32_t)(((uint32_t)(x))<<RFVBAT_REG_HL_SHIFT))&RFVBAT_REG_HL_MASK) /**< RFVBAT_REG.HL Field                     */
#define RFVBAT_REG_HH_MASK                       (0xFF000000U)                                       /**< RFVBAT_REG.HH Mask                      */
#define RFVBAT_REG_HH_SHIFT                      (24U)                                               /**< RFVBAT_REG.HH Position                  */
#define RFVBAT_REG_HH(x)                         (((uint32_t)(((uint32_t)(x))<<RFVBAT_REG_HH_SHIFT))&RFVBAT_REG_HH_MASK) /**< RFVBAT_REG.HH Field                     */
/** @} */

/** @} */ /* End group RFVBAT_Register_Masks_GROUP */


/* RFVBAT - Peripheral instance base addresses */
#define RFVBAT_BasePtr                 0x4003E000UL //!< Peripheral base address
#define RFVBAT                         ((RFVBAT_Type *) RFVBAT_BasePtr) //!< Freescale base pointer
#define RFVBAT_BASE_PTR                (RFVBAT) //!< Freescale style base pointer

/** @} */ /* End group RFVBAT_Peripheral_access_layer_GROUP */


/** @brief C Struct for RNGA */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup RNGA_Peripheral_access_layer_GROUP RNGA Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           RNGA (file:RNGA_0x400A0000)          ================ */
/* ================================================================================ */

/**
 * @brief Random Number Generator Accelerator
 */
/**
 * @struct RNGA_Type
 * @brief  C Struct allowing access to RNGA registers
 */
typedef struct RNGA_Type {
   __IO uint32_t  CR;                           /**< 0000: RNGA Control Register                                        */
   __I  uint32_t  SR;                           /**< 0004: RNGA Status Register                                         */
   __O  uint32_t  ER;                           /**< 0008: RNGA Entropy Register                                        */
   __I  uint32_t  OR;                           /**< 000C: RNGA Output Register                                         */
} RNGA_Type;


/** @brief Register Masks for RNGA */

/* -------------------------------------------------------------------------------- */
/* -----------     'RNGA' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup RNGA_Register_Masks_GROUP RNGA Register Masks */
/** @{ */

/** @name CR - RNGA Control Register */ /** @{ */
#define RNGA_CR_GO_MASK                          (0x1U)                                              /**< RNGA_CR.GO Mask                         */
#define RNGA_CR_GO_SHIFT                         (0U)                                                /**< RNGA_CR.GO Position                     */
#define RNGA_CR_GO(x)                            (((uint32_t)(((uint32_t)(x))<<RNGA_CR_GO_SHIFT))&RNGA_CR_GO_MASK) /**< RNGA_CR.GO Field                        */
#define RNGA_CR_HA_MASK                          (0x2U)                                              /**< RNGA_CR.HA Mask                         */
#define RNGA_CR_HA_SHIFT                         (1U)                                                /**< RNGA_CR.HA Position                     */
#define RNGA_CR_HA(x)                            (((uint32_t)(((uint32_t)(x))<<RNGA_CR_HA_SHIFT))&RNGA_CR_HA_MASK) /**< RNGA_CR.HA Field                        */
#define RNGA_CR_INTM_MASK                        (0x4U)                                              /**< RNGA_CR.INTM Mask                       */
#define RNGA_CR_INTM_SHIFT                       (2U)                                                /**< RNGA_CR.INTM Position                   */
#define RNGA_CR_INTM(x)                          (((uint32_t)(((uint32_t)(x))<<RNGA_CR_INTM_SHIFT))&RNGA_CR_INTM_MASK) /**< RNGA_CR.INTM Field                      */
#define RNGA_CR_CLRI_MASK                        (0x8U)                                              /**< RNGA_CR.CLRI Mask                       */
#define RNGA_CR_CLRI_SHIFT                       (3U)                                                /**< RNGA_CR.CLRI Position                   */
#define RNGA_CR_CLRI(x)                          (((uint32_t)(((uint32_t)(x))<<RNGA_CR_CLRI_SHIFT))&RNGA_CR_CLRI_MASK) /**< RNGA_CR.CLRI Field                      */
#define RNGA_CR_SLP_MASK                         (0x10U)                                             /**< RNGA_CR.SLP Mask                        */
#define RNGA_CR_SLP_SHIFT                        (4U)                                                /**< RNGA_CR.SLP Position                    */
#define RNGA_CR_SLP(x)                           (((uint32_t)(((uint32_t)(x))<<RNGA_CR_SLP_SHIFT))&RNGA_CR_SLP_MASK) /**< RNGA_CR.SLP Field                       */
/** @} */

/** @name SR - RNGA Status Register */ /** @{ */
#define RNGA_SR_SECV_MASK                        (0x1U)                                              /**< RNGA_SR.SECV Mask                       */
#define RNGA_SR_SECV_SHIFT                       (0U)                                                /**< RNGA_SR.SECV Position                   */
#define RNGA_SR_SECV(x)                          (((uint32_t)(((uint32_t)(x))<<RNGA_SR_SECV_SHIFT))&RNGA_SR_SECV_MASK) /**< RNGA_SR.SECV Field                      */
#define RNGA_SR_LRS_MASK                         (0x2U)                                              /**< RNGA_SR.LRS Mask                        */
#define RNGA_SR_LRS_SHIFT                        (1U)                                                /**< RNGA_SR.LRS Position                    */
#define RNGA_SR_LRS(x)                           (((uint32_t)(((uint32_t)(x))<<RNGA_SR_LRS_SHIFT))&RNGA_SR_LRS_MASK) /**< RNGA_SR.LRS Field                       */
#define RNGA_SR_ORU_MASK                         (0x4U)                                              /**< RNGA_SR.ORU Mask                        */
#define RNGA_SR_ORU_SHIFT                        (2U)                                                /**< RNGA_SR.ORU Position                    */
#define RNGA_SR_ORU(x)                           (((uint32_t)(((uint32_t)(x))<<RNGA_SR_ORU_SHIFT))&RNGA_SR_ORU_MASK) /**< RNGA_SR.ORU Field                       */
#define RNGA_SR_ERRI_MASK                        (0x8U)                                              /**< RNGA_SR.ERRI Mask                       */
#define RNGA_SR_ERRI_SHIFT                       (3U)                                                /**< RNGA_SR.ERRI Position                   */
#define RNGA_SR_ERRI(x)                          (((uint32_t)(((uint32_t)(x))<<RNGA_SR_ERRI_SHIFT))&RNGA_SR_ERRI_MASK) /**< RNGA_SR.ERRI Field                      */
#define RNGA_SR_SLP_MASK                         (0x10U)                                             /**< RNGA_SR.SLP Mask                        */
#define RNGA_SR_SLP_SHIFT                        (4U)                                                /**< RNGA_SR.SLP Position                    */
#define RNGA_SR_SLP(x)                           (((uint32_t)(((uint32_t)(x))<<RNGA_SR_SLP_SHIFT))&RNGA_SR_SLP_MASK) /**< RNGA_SR.SLP Field                       */
#define RNGA_SR_OREG_LVL_MASK                    (0xFF00U)                                           /**< RNGA_SR.OREG_LVL Mask                   */
#define RNGA_SR_OREG_LVL_SHIFT                   (8U)                                                /**< RNGA_SR.OREG_LVL Position               */
#define RNGA_SR_OREG_LVL(x)                      (((uint32_t)(((uint32_t)(x))<<RNGA_SR_OREG_LVL_SHIFT))&RNGA_SR_OREG_LVL_MASK) /**< RNGA_SR.OREG_LVL Field                  */
#define RNGA_SR_OREG_SIZE_MASK                   (0xFF0000U)                                         /**< RNGA_SR.OREG_SIZE Mask                  */
#define RNGA_SR_OREG_SIZE_SHIFT                  (16U)                                               /**< RNGA_SR.OREG_SIZE Position              */
#define RNGA_SR_OREG_SIZE(x)                     (((uint32_t)(((uint32_t)(x))<<RNGA_SR_OREG_SIZE_SHIFT))&RNGA_SR_OREG_SIZE_MASK) /**< RNGA_SR.OREG_SIZE Field                 */
/** @} */

/** @name ER - RNGA Entropy Register */ /** @{ */
#define RNGA_ER_EXT_ENT_MASK                     (0xFFFFFFFFU)                                       /**< RNGA_ER.EXT_ENT Mask                    */
#define RNGA_ER_EXT_ENT_SHIFT                    (0U)                                                /**< RNGA_ER.EXT_ENT Position                */
#define RNGA_ER_EXT_ENT(x)                       (((uint32_t)(((uint32_t)(x))<<RNGA_ER_EXT_ENT_SHIFT))&RNGA_ER_EXT_ENT_MASK) /**< RNGA_ER.EXT_ENT Field                   */
/** @} */

/** @name OR - RNGA Output Register */ /** @{ */
#define RNGA_OR_RANDOUT_MASK                     (0xFFFFFFFFU)                                       /**< RNGA_OR.RANDOUT Mask                    */
#define RNGA_OR_RANDOUT_SHIFT                    (0U)                                                /**< RNGA_OR.RANDOUT Position                */
#define RNGA_OR_RANDOUT(x)                       (((uint32_t)(((uint32_t)(x))<<RNGA_OR_RANDOUT_SHIFT))&RNGA_OR_RANDOUT_MASK) /**< RNGA_OR.RANDOUT Field                   */
/** @} */

/** @} */ /* End group RNGA_Register_Masks_GROUP */


/* RNGA - Peripheral instance base addresses */
#define RNGA_BasePtr                   0x400A0000UL //!< Peripheral base address
#define RNGA                           ((RNGA_Type *) RNGA_BasePtr) //!< Freescale base pointer
#define RNGA_BASE_PTR                  (RNGA) //!< Freescale style base pointer
#define RNGA_IRQS { RNGA_IRQn,  }


/** @} */ /* End group RNGA_Peripheral_access_layer_GROUP */


/** @brief C Struct for RTC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup RTC_Peripheral_access_layer_GROUP RTC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           RTC (file:RTC_WAR_RAR_TSIE_WPON)       ================ */
/* ================================================================================ */

/**
 * @brief Secure Real Time Clock
 */
/**
 * @struct RTC_Type
 * @brief  C Struct allowing access to RTC registers
 */
typedef struct RTC_Type {
   __IO uint32_t  TSR;                          /**< 0000: Time Seconds Register                                        */
   __IO uint32_t  TPR;                          /**< 0004: Time Prescaler Register                                      */
   __IO uint32_t  TAR;                          /**< 0008: Time Alarm Register                                          */
   __IO uint32_t  TCR;                          /**< 000C: Time Compensation Register                                   */
   __IO uint32_t  CR;                           /**< 0010: Control Register                                             */
   __IO uint32_t  SR;                           /**< 0014: Status Register                                              */
   __IO uint32_t  LR;                           /**< 0018: Lock Register                                                */
   __IO uint32_t  IER;                          /**< 001C: Interrupt Enable Register                                    */
        uint8_t   RESERVED_0[2016];             /**< 0020: 0x7E0 bytes                                                  */
   __IO uint32_t  WAR;                          /**< 0800: Write Access Register                                        */
   __IO uint32_t  RAR;                          /**< 0804: Read Access Register                                         */
} RTC_Type;


/** @brief Register Masks for RTC */

/* -------------------------------------------------------------------------------- */
/* -----------     'RTC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup RTC_Register_Masks_GROUP RTC Register Masks */
/** @{ */

/** @name TSR - Time Seconds Register */ /** @{ */
#define RTC_TSR_TSR_MASK                         (0xFFFFFFFFU)                                       /**< RTC_TSR.TSR Mask                        */
#define RTC_TSR_TSR_SHIFT                        (0U)                                                /**< RTC_TSR.TSR Position                    */
#define RTC_TSR_TSR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TSR_TSR_SHIFT))&RTC_TSR_TSR_MASK) /**< RTC_TSR.TSR Field                       */
/** @} */

/** @name TPR - Time Prescaler Register */ /** @{ */
#define RTC_TPR_TPR_MASK                         (0xFFFFU)                                           /**< RTC_TPR.TPR Mask                        */
#define RTC_TPR_TPR_SHIFT                        (0U)                                                /**< RTC_TPR.TPR Position                    */
#define RTC_TPR_TPR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TPR_TPR_SHIFT))&RTC_TPR_TPR_MASK) /**< RTC_TPR.TPR Field                       */
/** @} */

/** @name TAR - Time Alarm Register */ /** @{ */
#define RTC_TAR_TAR_MASK                         (0xFFFFFFFFU)                                       /**< RTC_TAR.TAR Mask                        */
#define RTC_TAR_TAR_SHIFT                        (0U)                                                /**< RTC_TAR.TAR Position                    */
#define RTC_TAR_TAR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TAR_TAR_SHIFT))&RTC_TAR_TAR_MASK) /**< RTC_TAR.TAR Field                       */
/** @} */

/** @name TCR - Time Compensation Register */ /** @{ */
#define RTC_TCR_TCR_MASK                         (0xFFU)                                             /**< RTC_TCR.TCR Mask                        */
#define RTC_TCR_TCR_SHIFT                        (0U)                                                /**< RTC_TCR.TCR Position                    */
#define RTC_TCR_TCR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TCR_TCR_SHIFT))&RTC_TCR_TCR_MASK) /**< RTC_TCR.TCR Field                       */
#define RTC_TCR_CIR_MASK                         (0xFF00U)                                           /**< RTC_TCR.CIR Mask                        */
#define RTC_TCR_CIR_SHIFT                        (8U)                                                /**< RTC_TCR.CIR Position                    */
#define RTC_TCR_CIR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TCR_CIR_SHIFT))&RTC_TCR_CIR_MASK) /**< RTC_TCR.CIR Field                       */
#define RTC_TCR_TCV_MASK                         (0xFF0000U)                                         /**< RTC_TCR.TCV Mask                        */
#define RTC_TCR_TCV_SHIFT                        (16U)                                               /**< RTC_TCR.TCV Position                    */
#define RTC_TCR_TCV(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TCR_TCV_SHIFT))&RTC_TCR_TCV_MASK) /**< RTC_TCR.TCV Field                       */
#define RTC_TCR_CIC_MASK                         (0xFF000000U)                                       /**< RTC_TCR.CIC Mask                        */
#define RTC_TCR_CIC_SHIFT                        (24U)                                               /**< RTC_TCR.CIC Position                    */
#define RTC_TCR_CIC(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_TCR_CIC_SHIFT))&RTC_TCR_CIC_MASK) /**< RTC_TCR.CIC Field                       */
/** @} */

/** @name CR - Control Register */ /** @{ */
#define RTC_CR_SWR_MASK                          (0x1U)                                              /**< RTC_CR.SWR Mask                         */
#define RTC_CR_SWR_SHIFT                         (0U)                                                /**< RTC_CR.SWR Position                     */
#define RTC_CR_SWR(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_CR_SWR_SHIFT))&RTC_CR_SWR_MASK) /**< RTC_CR.SWR Field                        */
#define RTC_CR_WPE_MASK                          (0x2U)                                              /**< RTC_CR.WPE Mask                         */
#define RTC_CR_WPE_SHIFT                         (1U)                                                /**< RTC_CR.WPE Position                     */
#define RTC_CR_WPE(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_CR_WPE_SHIFT))&RTC_CR_WPE_MASK) /**< RTC_CR.WPE Field                        */
#define RTC_CR_SUP_MASK                          (0x4U)                                              /**< RTC_CR.SUP Mask                         */
#define RTC_CR_SUP_SHIFT                         (2U)                                                /**< RTC_CR.SUP Position                     */
#define RTC_CR_SUP(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_CR_SUP_SHIFT))&RTC_CR_SUP_MASK) /**< RTC_CR.SUP Field                        */
#define RTC_CR_UM_MASK                           (0x8U)                                              /**< RTC_CR.UM Mask                          */
#define RTC_CR_UM_SHIFT                          (3U)                                                /**< RTC_CR.UM Position                      */
#define RTC_CR_UM(x)                             (((uint32_t)(((uint32_t)(x))<<RTC_CR_UM_SHIFT))&RTC_CR_UM_MASK) /**< RTC_CR.UM Field                         */
#define RTC_CR_OSCE_MASK                         (0x100U)                                            /**< RTC_CR.OSCE Mask                        */
#define RTC_CR_OSCE_SHIFT                        (8U)                                                /**< RTC_CR.OSCE Position                    */
#define RTC_CR_OSCE(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_CR_OSCE_SHIFT))&RTC_CR_OSCE_MASK) /**< RTC_CR.OSCE Field                       */
#define RTC_CR_CLKO_MASK                         (0x200U)                                            /**< RTC_CR.CLKO Mask                        */
#define RTC_CR_CLKO_SHIFT                        (9U)                                                /**< RTC_CR.CLKO Position                    */
#define RTC_CR_CLKO(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_CR_CLKO_SHIFT))&RTC_CR_CLKO_MASK) /**< RTC_CR.CLKO Field                       */
#define RTC_CR_SCP_MASK                          (0x3C00U)                                           /**< RTC_CR.SCP Mask                         */
#define RTC_CR_SCP_SHIFT                         (10U)                                               /**< RTC_CR.SCP Position                     */
#define RTC_CR_SCP(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_CR_SCP_SHIFT))&RTC_CR_SCP_MASK) /**< RTC_CR.SCP Field                        */
#define RTC_CR_SC16P_MASK                        (0x400U)                                            /**< RTC_CR.SC16P Mask                       */
#define RTC_CR_SC16P_SHIFT                       (10U)                                               /**< RTC_CR.SC16P Position                   */
#define RTC_CR_SC16P(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_CR_SC16P_SHIFT))&RTC_CR_SC16P_MASK) /**< RTC_CR.SC16P Field                      */
#define RTC_CR_SC8P_MASK                         (0x800U)                                            /**< RTC_CR.SC8P Mask                        */
#define RTC_CR_SC8P_SHIFT                        (11U)                                               /**< RTC_CR.SC8P Position                    */
#define RTC_CR_SC8P(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_CR_SC8P_SHIFT))&RTC_CR_SC8P_MASK) /**< RTC_CR.SC8P Field                       */
#define RTC_CR_SC4P_MASK                         (0x1000U)                                           /**< RTC_CR.SC4P Mask                        */
#define RTC_CR_SC4P_SHIFT                        (12U)                                               /**< RTC_CR.SC4P Position                    */
#define RTC_CR_SC4P(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_CR_SC4P_SHIFT))&RTC_CR_SC4P_MASK) /**< RTC_CR.SC4P Field                       */
#define RTC_CR_SC2P_MASK                         (0x2000U)                                           /**< RTC_CR.SC2P Mask                        */
#define RTC_CR_SC2P_SHIFT                        (13U)                                               /**< RTC_CR.SC2P Position                    */
#define RTC_CR_SC2P(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_CR_SC2P_SHIFT))&RTC_CR_SC2P_MASK) /**< RTC_CR.SC2P Field                       */
/** @} */

/** @name SR - Status Register */ /** @{ */
#define RTC_SR_TIF_MASK                          (0x1U)                                              /**< RTC_SR.TIF Mask                         */
#define RTC_SR_TIF_SHIFT                         (0U)                                                /**< RTC_SR.TIF Position                     */
#define RTC_SR_TIF(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_SR_TIF_SHIFT))&RTC_SR_TIF_MASK) /**< RTC_SR.TIF Field                        */
#define RTC_SR_TOF_MASK                          (0x2U)                                              /**< RTC_SR.TOF Mask                         */
#define RTC_SR_TOF_SHIFT                         (1U)                                                /**< RTC_SR.TOF Position                     */
#define RTC_SR_TOF(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_SR_TOF_SHIFT))&RTC_SR_TOF_MASK) /**< RTC_SR.TOF Field                        */
#define RTC_SR_TAF_MASK                          (0x4U)                                              /**< RTC_SR.TAF Mask                         */
#define RTC_SR_TAF_SHIFT                         (2U)                                                /**< RTC_SR.TAF Position                     */
#define RTC_SR_TAF(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_SR_TAF_SHIFT))&RTC_SR_TAF_MASK) /**< RTC_SR.TAF Field                        */
#define RTC_SR_TCE_MASK                          (0x10U)                                             /**< RTC_SR.TCE Mask                         */
#define RTC_SR_TCE_SHIFT                         (4U)                                                /**< RTC_SR.TCE Position                     */
#define RTC_SR_TCE(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_SR_TCE_SHIFT))&RTC_SR_TCE_MASK) /**< RTC_SR.TCE Field                        */
/** @} */

/** @name LR - Lock Register */ /** @{ */
#define RTC_LR_TCL_MASK                          (0x8U)                                              /**< RTC_LR.TCL Mask                         */
#define RTC_LR_TCL_SHIFT                         (3U)                                                /**< RTC_LR.TCL Position                     */
#define RTC_LR_TCL(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_LR_TCL_SHIFT))&RTC_LR_TCL_MASK) /**< RTC_LR.TCL Field                        */
#define RTC_LR_CRL_MASK                          (0x10U)                                             /**< RTC_LR.CRL Mask                         */
#define RTC_LR_CRL_SHIFT                         (4U)                                                /**< RTC_LR.CRL Position                     */
#define RTC_LR_CRL(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_LR_CRL_SHIFT))&RTC_LR_CRL_MASK) /**< RTC_LR.CRL Field                        */
#define RTC_LR_SRL_MASK                          (0x20U)                                             /**< RTC_LR.SRL Mask                         */
#define RTC_LR_SRL_SHIFT                         (5U)                                                /**< RTC_LR.SRL Position                     */
#define RTC_LR_SRL(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_LR_SRL_SHIFT))&RTC_LR_SRL_MASK) /**< RTC_LR.SRL Field                        */
#define RTC_LR_LRL_MASK                          (0x40U)                                             /**< RTC_LR.LRL Mask                         */
#define RTC_LR_LRL_SHIFT                         (6U)                                                /**< RTC_LR.LRL Position                     */
#define RTC_LR_LRL(x)                            (((uint32_t)(((uint32_t)(x))<<RTC_LR_LRL_SHIFT))&RTC_LR_LRL_MASK) /**< RTC_LR.LRL Field                        */
/** @} */

/** @name IER - Interrupt Enable Register */ /** @{ */
#define RTC_IER_TIIE_MASK                        (0x1U)                                              /**< RTC_IER.TIIE Mask                       */
#define RTC_IER_TIIE_SHIFT                       (0U)                                                /**< RTC_IER.TIIE Position                   */
#define RTC_IER_TIIE(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_IER_TIIE_SHIFT))&RTC_IER_TIIE_MASK) /**< RTC_IER.TIIE Field                      */
#define RTC_IER_TOIE_MASK                        (0x2U)                                              /**< RTC_IER.TOIE Mask                       */
#define RTC_IER_TOIE_SHIFT                       (1U)                                                /**< RTC_IER.TOIE Position                   */
#define RTC_IER_TOIE(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_IER_TOIE_SHIFT))&RTC_IER_TOIE_MASK) /**< RTC_IER.TOIE Field                      */
#define RTC_IER_TAIE_MASK                        (0x4U)                                              /**< RTC_IER.TAIE Mask                       */
#define RTC_IER_TAIE_SHIFT                       (2U)                                                /**< RTC_IER.TAIE Position                   */
#define RTC_IER_TAIE(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_IER_TAIE_SHIFT))&RTC_IER_TAIE_MASK) /**< RTC_IER.TAIE Field                      */
#define RTC_IER_TSIE_MASK                        (0x10U)                                             /**< RTC_IER.TSIE Mask                       */
#define RTC_IER_TSIE_SHIFT                       (4U)                                                /**< RTC_IER.TSIE Position                   */
#define RTC_IER_TSIE(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_IER_TSIE_SHIFT))&RTC_IER_TSIE_MASK) /**< RTC_IER.TSIE Field                      */
#define RTC_IER_WPON_MASK                        (0x80U)                                             /**< RTC_IER.WPON Mask                       */
#define RTC_IER_WPON_SHIFT                       (7U)                                                /**< RTC_IER.WPON Position                   */
#define RTC_IER_WPON(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_IER_WPON_SHIFT))&RTC_IER_WPON_MASK) /**< RTC_IER.WPON Field                      */
/** @} */

/** @name WAR - Write Access Register */ /** @{ */
#define RTC_WAR_TSRW_MASK                        (0x1U)                                              /**< RTC_WAR.TSRW Mask                       */
#define RTC_WAR_TSRW_SHIFT                       (0U)                                                /**< RTC_WAR.TSRW Position                   */
#define RTC_WAR_TSRW(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_WAR_TSRW_SHIFT))&RTC_WAR_TSRW_MASK) /**< RTC_WAR.TSRW Field                      */
#define RTC_WAR_TPRW_MASK                        (0x2U)                                              /**< RTC_WAR.TPRW Mask                       */
#define RTC_WAR_TPRW_SHIFT                       (1U)                                                /**< RTC_WAR.TPRW Position                   */
#define RTC_WAR_TPRW(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_WAR_TPRW_SHIFT))&RTC_WAR_TPRW_MASK) /**< RTC_WAR.TPRW Field                      */
#define RTC_WAR_TARW_MASK                        (0x4U)                                              /**< RTC_WAR.TARW Mask                       */
#define RTC_WAR_TARW_SHIFT                       (2U)                                                /**< RTC_WAR.TARW Position                   */
#define RTC_WAR_TARW(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_WAR_TARW_SHIFT))&RTC_WAR_TARW_MASK) /**< RTC_WAR.TARW Field                      */
#define RTC_WAR_TCRW_MASK                        (0x8U)                                              /**< RTC_WAR.TCRW Mask                       */
#define RTC_WAR_TCRW_SHIFT                       (3U)                                                /**< RTC_WAR.TCRW Position                   */
#define RTC_WAR_TCRW(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_WAR_TCRW_SHIFT))&RTC_WAR_TCRW_MASK) /**< RTC_WAR.TCRW Field                      */
#define RTC_WAR_CRW_MASK                         (0x10U)                                             /**< RTC_WAR.CRW Mask                        */
#define RTC_WAR_CRW_SHIFT                        (4U)                                                /**< RTC_WAR.CRW Position                    */
#define RTC_WAR_CRW(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_WAR_CRW_SHIFT))&RTC_WAR_CRW_MASK) /**< RTC_WAR.CRW Field                       */
#define RTC_WAR_SRW_MASK                         (0x20U)                                             /**< RTC_WAR.SRW Mask                        */
#define RTC_WAR_SRW_SHIFT                        (5U)                                                /**< RTC_WAR.SRW Position                    */
#define RTC_WAR_SRW(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_WAR_SRW_SHIFT))&RTC_WAR_SRW_MASK) /**< RTC_WAR.SRW Field                       */
#define RTC_WAR_LRW_MASK                         (0x40U)                                             /**< RTC_WAR.LRW Mask                        */
#define RTC_WAR_LRW_SHIFT                        (6U)                                                /**< RTC_WAR.LRW Position                    */
#define RTC_WAR_LRW(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_WAR_LRW_SHIFT))&RTC_WAR_LRW_MASK) /**< RTC_WAR.LRW Field                       */
#define RTC_WAR_IERW_MASK                        (0x80U)                                             /**< RTC_WAR.IERW Mask                       */
#define RTC_WAR_IERW_SHIFT                       (7U)                                                /**< RTC_WAR.IERW Position                   */
#define RTC_WAR_IERW(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_WAR_IERW_SHIFT))&RTC_WAR_IERW_MASK) /**< RTC_WAR.IERW Field                      */
/** @} */

/** @name RAR - Read Access Register */ /** @{ */
#define RTC_RAR_TSRR_MASK                        (0x1U)                                              /**< RTC_RAR.TSRR Mask                       */
#define RTC_RAR_TSRR_SHIFT                       (0U)                                                /**< RTC_RAR.TSRR Position                   */
#define RTC_RAR_TSRR(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_RAR_TSRR_SHIFT))&RTC_RAR_TSRR_MASK) /**< RTC_RAR.TSRR Field                      */
#define RTC_RAR_TPRR_MASK                        (0x2U)                                              /**< RTC_RAR.TPRR Mask                       */
#define RTC_RAR_TPRR_SHIFT                       (1U)                                                /**< RTC_RAR.TPRR Position                   */
#define RTC_RAR_TPRR(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_RAR_TPRR_SHIFT))&RTC_RAR_TPRR_MASK) /**< RTC_RAR.TPRR Field                      */
#define RTC_RAR_TARR_MASK                        (0x4U)                                              /**< RTC_RAR.TARR Mask                       */
#define RTC_RAR_TARR_SHIFT                       (2U)                                                /**< RTC_RAR.TARR Position                   */
#define RTC_RAR_TARR(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_RAR_TARR_SHIFT))&RTC_RAR_TARR_MASK) /**< RTC_RAR.TARR Field                      */
#define RTC_RAR_TCRR_MASK                        (0x8U)                                              /**< RTC_RAR.TCRR Mask                       */
#define RTC_RAR_TCRR_SHIFT                       (3U)                                                /**< RTC_RAR.TCRR Position                   */
#define RTC_RAR_TCRR(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_RAR_TCRR_SHIFT))&RTC_RAR_TCRR_MASK) /**< RTC_RAR.TCRR Field                      */
#define RTC_RAR_CRR_MASK                         (0x10U)                                             /**< RTC_RAR.CRR Mask                        */
#define RTC_RAR_CRR_SHIFT                        (4U)                                                /**< RTC_RAR.CRR Position                    */
#define RTC_RAR_CRR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_RAR_CRR_SHIFT))&RTC_RAR_CRR_MASK) /**< RTC_RAR.CRR Field                       */
#define RTC_RAR_SRR_MASK                         (0x20U)                                             /**< RTC_RAR.SRR Mask                        */
#define RTC_RAR_SRR_SHIFT                        (5U)                                                /**< RTC_RAR.SRR Position                    */
#define RTC_RAR_SRR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_RAR_SRR_SHIFT))&RTC_RAR_SRR_MASK) /**< RTC_RAR.SRR Field                       */
#define RTC_RAR_LRR_MASK                         (0x40U)                                             /**< RTC_RAR.LRR Mask                        */
#define RTC_RAR_LRR_SHIFT                        (6U)                                                /**< RTC_RAR.LRR Position                    */
#define RTC_RAR_LRR(x)                           (((uint32_t)(((uint32_t)(x))<<RTC_RAR_LRR_SHIFT))&RTC_RAR_LRR_MASK) /**< RTC_RAR.LRR Field                       */
#define RTC_RAR_IERR_MASK                        (0x80U)                                             /**< RTC_RAR.IERR Mask                       */
#define RTC_RAR_IERR_SHIFT                       (7U)                                                /**< RTC_RAR.IERR Position                   */
#define RTC_RAR_IERR(x)                          (((uint32_t)(((uint32_t)(x))<<RTC_RAR_IERR_SHIFT))&RTC_RAR_IERR_MASK) /**< RTC_RAR.IERR Field                      */
/** @} */

/** @} */ /* End group RTC_Register_Masks_GROUP */


/* RTC - Peripheral instance base addresses */
#define RTC_BasePtr                    0x4003D000UL //!< Peripheral base address
#define RTC                            ((RTC_Type *) RTC_BasePtr) //!< Freescale base pointer
#define RTC_BASE_PTR                   (RTC) //!< Freescale style base pointer
#define RTC_IRQS { RTC_Alarm_IRQn, RTC_Seconds_IRQn,  }


/** @} */ /* End group RTC_Peripheral_access_layer_GROUP */


/** @brief C Struct for SDHC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SDHC_Peripheral_access_layer_GROUP SDHC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SDHC0 (file:SDHC0_MK10D10)           ================ */
/* ================================================================================ */

/**
 * @brief Secured Digital Host Controller
 */
/**
 * @struct SDHC_Type
 * @brief  C Struct allowing access to SDHC registers
 */
typedef struct SDHC_Type {
   __IO uint32_t  DSADDR;                       /**< 0000: DMA System Address Register                                  */
   __IO uint32_t  BLKATTR;                      /**< 0004: Block Attributes Register                                    */
   __IO uint32_t  CMDARG;                       /**< 0008: Command Argument Register                                    */
   __IO uint32_t  XFERTYP;                      /**< 000C: Transfer Type Register                                       */
   __I  uint32_t  CMDRSP[4];                    /**< 0010: Command Response                                             */
   __IO uint32_t  DATPORT;                      /**< 0020: Buffer Data Port Register                                    */
   __I  uint32_t  PRSSTAT;                      /**< 0024: Present State Register                                       */
   __IO uint32_t  PROCTL;                       /**< 0028: Protocol Control Register                                    */
   __IO uint32_t  SYSCTL;                       /**< 002C: System Control Register                                      */
   __IO uint32_t  IRQSTAT;                      /**< 0030: Interrupt Status Register                                    */
   __IO uint32_t  IRQSTATEN;                    /**< 0034: Interrupt Status Enable Register                             */
   __IO uint32_t  IRQSIGEN;                     /**< 0038: Interrupt Signal Enable Register                             */
   __I  uint32_t  AC12ERR;                      /**< 003C: Auto CMD12 Error Status Register                             */
   __I  uint32_t  HTCAPBLT;                     /**< 0040: Host Controller Capabilities                                 */
   __IO uint32_t  WML;                          /**< 0044: Watermark Level Register                                     */
        uint8_t   RESERVED_0[8];                /**< 0048: 0x8 bytes                                                    */
   __O  uint32_t  FEVT;                         /**< 0050: Force Event Register                                         */
   __I  uint32_t  ADMAES;                       /**< 0054: ADMA Error Status Register                                   */
   __IO uint32_t  ADSADDR;                      /**< 0058: ADMA System Address Register                                 */
        uint8_t   RESERVED_1[100];              /**< 005C: 0x64 bytes                                                   */
   __IO uint32_t  VENDOR;                       /**< 00C0: Vendor Specific Register                                     */
   __IO uint32_t  MMCBOOT;                      /**< 00C4: MMC Boot Register                                            */
        uint8_t   RESERVED_2[52];               /**< 00C8: 0x34 bytes                                                   */
   __I  uint32_t  HOSTVER;                      /**< 00FC: Host Controller Version                                      */
} SDHC_Type;


/** @brief Register Masks for SDHC */

/* -------------------------------------------------------------------------------- */
/* -----------     'SDHC0' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup SDHC_Register_Masks_GROUP SDHC Register Masks */
/** @{ */

/** @name DSADDR - DMA System Address Register */ /** @{ */
#define SDHC_DSADDR_DSADDR_MASK                  (0xFFFFFFFCU)                                       /**< SDHC0_DSADDR.DSADDR Mask                */
#define SDHC_DSADDR_DSADDR_SHIFT                 (2U)                                                /**< SDHC0_DSADDR.DSADDR Position            */
#define SDHC_DSADDR_DSADDR(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_DSADDR_DSADDR_SHIFT))&SDHC_DSADDR_DSADDR_MASK) /**< SDHC0_DSADDR.DSADDR Field               */
/** @} */

/** @name BLKATTR - Block Attributes Register */ /** @{ */
#define SDHC_BLKATTR_BLKSIZE_MASK                (0x1FFFU)                                           /**< SDHC0_BLKATTR.BLKSIZE Mask              */
#define SDHC_BLKATTR_BLKSIZE_SHIFT               (0U)                                                /**< SDHC0_BLKATTR.BLKSIZE Position          */
#define SDHC_BLKATTR_BLKSIZE(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_BLKATTR_BLKSIZE_SHIFT))&SDHC_BLKATTR_BLKSIZE_MASK) /**< SDHC0_BLKATTR.BLKSIZE Field             */
#define SDHC_BLKATTR_BLKCNT_MASK                 (0xFFFF0000U)                                       /**< SDHC0_BLKATTR.BLKCNT Mask               */
#define SDHC_BLKATTR_BLKCNT_SHIFT                (16U)                                               /**< SDHC0_BLKATTR.BLKCNT Position           */
#define SDHC_BLKATTR_BLKCNT(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_BLKATTR_BLKCNT_SHIFT))&SDHC_BLKATTR_BLKCNT_MASK) /**< SDHC0_BLKATTR.BLKCNT Field              */
/** @} */

/** @name CMDARG - Command Argument Register */ /** @{ */
#define SDHC_CMDARG_CMDARG_MASK                  (0xFFFFFFFFU)                                       /**< SDHC0_CMDARG.CMDARG Mask                */
#define SDHC_CMDARG_CMDARG_SHIFT                 (0U)                                                /**< SDHC0_CMDARG.CMDARG Position            */
#define SDHC_CMDARG_CMDARG(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_CMDARG_CMDARG_SHIFT))&SDHC_CMDARG_CMDARG_MASK) /**< SDHC0_CMDARG.CMDARG Field               */
/** @} */

/** @name XFERTYP - Transfer Type Register */ /** @{ */
#define SDHC_XFERTYP_DMAEN_MASK                  (0x1U)                                              /**< SDHC0_XFERTYP.DMAEN Mask                */
#define SDHC_XFERTYP_DMAEN_SHIFT                 (0U)                                                /**< SDHC0_XFERTYP.DMAEN Position            */
#define SDHC_XFERTYP_DMAEN(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_DMAEN_SHIFT))&SDHC_XFERTYP_DMAEN_MASK) /**< SDHC0_XFERTYP.DMAEN Field               */
#define SDHC_XFERTYP_BCEN_MASK                   (0x2U)                                              /**< SDHC0_XFERTYP.BCEN Mask                 */
#define SDHC_XFERTYP_BCEN_SHIFT                  (1U)                                                /**< SDHC0_XFERTYP.BCEN Position             */
#define SDHC_XFERTYP_BCEN(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_BCEN_SHIFT))&SDHC_XFERTYP_BCEN_MASK) /**< SDHC0_XFERTYP.BCEN Field                */
#define SDHC_XFERTYP_AC12EN_MASK                 (0x4U)                                              /**< SDHC0_XFERTYP.AC12EN Mask               */
#define SDHC_XFERTYP_AC12EN_SHIFT                (2U)                                                /**< SDHC0_XFERTYP.AC12EN Position           */
#define SDHC_XFERTYP_AC12EN(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_AC12EN_SHIFT))&SDHC_XFERTYP_AC12EN_MASK) /**< SDHC0_XFERTYP.AC12EN Field              */
#define SDHC_XFERTYP_DTDSEL_MASK                 (0x10U)                                             /**< SDHC0_XFERTYP.DTDSEL Mask               */
#define SDHC_XFERTYP_DTDSEL_SHIFT                (4U)                                                /**< SDHC0_XFERTYP.DTDSEL Position           */
#define SDHC_XFERTYP_DTDSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_DTDSEL_SHIFT))&SDHC_XFERTYP_DTDSEL_MASK) /**< SDHC0_XFERTYP.DTDSEL Field              */
#define SDHC_XFERTYP_MSBSEL_MASK                 (0x20U)                                             /**< SDHC0_XFERTYP.MSBSEL Mask               */
#define SDHC_XFERTYP_MSBSEL_SHIFT                (5U)                                                /**< SDHC0_XFERTYP.MSBSEL Position           */
#define SDHC_XFERTYP_MSBSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_MSBSEL_SHIFT))&SDHC_XFERTYP_MSBSEL_MASK) /**< SDHC0_XFERTYP.MSBSEL Field              */
#define SDHC_XFERTYP_RSPTYP_MASK                 (0x30000U)                                          /**< SDHC0_XFERTYP.RSPTYP Mask               */
#define SDHC_XFERTYP_RSPTYP_SHIFT                (16U)                                               /**< SDHC0_XFERTYP.RSPTYP Position           */
#define SDHC_XFERTYP_RSPTYP(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_RSPTYP_SHIFT))&SDHC_XFERTYP_RSPTYP_MASK) /**< SDHC0_XFERTYP.RSPTYP Field              */
#define SDHC_XFERTYP_CCCEN_MASK                  (0x80000U)                                          /**< SDHC0_XFERTYP.CCCEN Mask                */
#define SDHC_XFERTYP_CCCEN_SHIFT                 (19U)                                               /**< SDHC0_XFERTYP.CCCEN Position            */
#define SDHC_XFERTYP_CCCEN(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_CCCEN_SHIFT))&SDHC_XFERTYP_CCCEN_MASK) /**< SDHC0_XFERTYP.CCCEN Field               */
#define SDHC_XFERTYP_CICEN_MASK                  (0x100000U)                                         /**< SDHC0_XFERTYP.CICEN Mask                */
#define SDHC_XFERTYP_CICEN_SHIFT                 (20U)                                               /**< SDHC0_XFERTYP.CICEN Position            */
#define SDHC_XFERTYP_CICEN(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_CICEN_SHIFT))&SDHC_XFERTYP_CICEN_MASK) /**< SDHC0_XFERTYP.CICEN Field               */
#define SDHC_XFERTYP_DPSEL_MASK                  (0x200000U)                                         /**< SDHC0_XFERTYP.DPSEL Mask                */
#define SDHC_XFERTYP_DPSEL_SHIFT                 (21U)                                               /**< SDHC0_XFERTYP.DPSEL Position            */
#define SDHC_XFERTYP_DPSEL(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_DPSEL_SHIFT))&SDHC_XFERTYP_DPSEL_MASK) /**< SDHC0_XFERTYP.DPSEL Field               */
#define SDHC_XFERTYP_CMDTYP_MASK                 (0xC00000U)                                         /**< SDHC0_XFERTYP.CMDTYP Mask               */
#define SDHC_XFERTYP_CMDTYP_SHIFT                (22U)                                               /**< SDHC0_XFERTYP.CMDTYP Position           */
#define SDHC_XFERTYP_CMDTYP(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_CMDTYP_SHIFT))&SDHC_XFERTYP_CMDTYP_MASK) /**< SDHC0_XFERTYP.CMDTYP Field              */
#define SDHC_XFERTYP_CMDINX_MASK                 (0x3F000000U)                                       /**< SDHC0_XFERTYP.CMDINX Mask               */
#define SDHC_XFERTYP_CMDINX_SHIFT                (24U)                                               /**< SDHC0_XFERTYP.CMDINX Position           */
#define SDHC_XFERTYP_CMDINX(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_XFERTYP_CMDINX_SHIFT))&SDHC_XFERTYP_CMDINX_MASK) /**< SDHC0_XFERTYP.CMDINX Field              */
/** @} */

/** @name CMDRSP - Command Response %s */ /** @{ */
#define SDHC_CMDRSP_CMDRSP0_MASK                 (0xFFFFFFFFU)                                       /**< SDHC0_CMDRSP.CMDRSP0 Mask               */
#define SDHC_CMDRSP_CMDRSP0_SHIFT                (0U)                                                /**< SDHC0_CMDRSP.CMDRSP0 Position           */
#define SDHC_CMDRSP_CMDRSP0(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_CMDRSP_CMDRSP0_SHIFT))&SDHC_CMDRSP_CMDRSP0_MASK) /**< SDHC0_CMDRSP.CMDRSP0 Field              */
/** @} */

/** @name DATPORT - Buffer Data Port Register */ /** @{ */
#define SDHC_DATPORT_DATCONT_MASK                (0xFFFFFFFFU)                                       /**< SDHC0_DATPORT.DATCONT Mask              */
#define SDHC_DATPORT_DATCONT_SHIFT               (0U)                                                /**< SDHC0_DATPORT.DATCONT Position          */
#define SDHC_DATPORT_DATCONT(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_DATPORT_DATCONT_SHIFT))&SDHC_DATPORT_DATCONT_MASK) /**< SDHC0_DATPORT.DATCONT Field             */
/** @} */

/** @name PRSSTAT - Present State Register */ /** @{ */
#define SDHC_PRSSTAT_CIHB_MASK                   (0x1U)                                              /**< SDHC0_PRSSTAT.CIHB Mask                 */
#define SDHC_PRSSTAT_CIHB_SHIFT                  (0U)                                                /**< SDHC0_PRSSTAT.CIHB Position             */
#define SDHC_PRSSTAT_CIHB(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_CIHB_SHIFT))&SDHC_PRSSTAT_CIHB_MASK) /**< SDHC0_PRSSTAT.CIHB Field                */
#define SDHC_PRSSTAT_CDIHB_MASK                  (0x2U)                                              /**< SDHC0_PRSSTAT.CDIHB Mask                */
#define SDHC_PRSSTAT_CDIHB_SHIFT                 (1U)                                                /**< SDHC0_PRSSTAT.CDIHB Position            */
#define SDHC_PRSSTAT_CDIHB(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_CDIHB_SHIFT))&SDHC_PRSSTAT_CDIHB_MASK) /**< SDHC0_PRSSTAT.CDIHB Field               */
#define SDHC_PRSSTAT_DLA_MASK                    (0x4U)                                              /**< SDHC0_PRSSTAT.DLA Mask                  */
#define SDHC_PRSSTAT_DLA_SHIFT                   (2U)                                                /**< SDHC0_PRSSTAT.DLA Position              */
#define SDHC_PRSSTAT_DLA(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_DLA_SHIFT))&SDHC_PRSSTAT_DLA_MASK) /**< SDHC0_PRSSTAT.DLA Field                 */
#define SDHC_PRSSTAT_SDSTB_MASK                  (0x8U)                                              /**< SDHC0_PRSSTAT.SDSTB Mask                */
#define SDHC_PRSSTAT_SDSTB_SHIFT                 (3U)                                                /**< SDHC0_PRSSTAT.SDSTB Position            */
#define SDHC_PRSSTAT_SDSTB(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_SDSTB_SHIFT))&SDHC_PRSSTAT_SDSTB_MASK) /**< SDHC0_PRSSTAT.SDSTB Field               */
#define SDHC_PRSSTAT_IPGOFF_MASK                 (0x10U)                                             /**< SDHC0_PRSSTAT.IPGOFF Mask               */
#define SDHC_PRSSTAT_IPGOFF_SHIFT                (4U)                                                /**< SDHC0_PRSSTAT.IPGOFF Position           */
#define SDHC_PRSSTAT_IPGOFF(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_IPGOFF_SHIFT))&SDHC_PRSSTAT_IPGOFF_MASK) /**< SDHC0_PRSSTAT.IPGOFF Field              */
#define SDHC_PRSSTAT_HCKOFF_MASK                 (0x20U)                                             /**< SDHC0_PRSSTAT.HCKOFF Mask               */
#define SDHC_PRSSTAT_HCKOFF_SHIFT                (5U)                                                /**< SDHC0_PRSSTAT.HCKOFF Position           */
#define SDHC_PRSSTAT_HCKOFF(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_HCKOFF_SHIFT))&SDHC_PRSSTAT_HCKOFF_MASK) /**< SDHC0_PRSSTAT.HCKOFF Field              */
#define SDHC_PRSSTAT_PEROFF_MASK                 (0x40U)                                             /**< SDHC0_PRSSTAT.PEROFF Mask               */
#define SDHC_PRSSTAT_PEROFF_SHIFT                (6U)                                                /**< SDHC0_PRSSTAT.PEROFF Position           */
#define SDHC_PRSSTAT_PEROFF(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_PEROFF_SHIFT))&SDHC_PRSSTAT_PEROFF_MASK) /**< SDHC0_PRSSTAT.PEROFF Field              */
#define SDHC_PRSSTAT_SDOFF_MASK                  (0x80U)                                             /**< SDHC0_PRSSTAT.SDOFF Mask                */
#define SDHC_PRSSTAT_SDOFF_SHIFT                 (7U)                                                /**< SDHC0_PRSSTAT.SDOFF Position            */
#define SDHC_PRSSTAT_SDOFF(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_SDOFF_SHIFT))&SDHC_PRSSTAT_SDOFF_MASK) /**< SDHC0_PRSSTAT.SDOFF Field               */
#define SDHC_PRSSTAT_WTA_MASK                    (0x100U)                                            /**< SDHC0_PRSSTAT.WTA Mask                  */
#define SDHC_PRSSTAT_WTA_SHIFT                   (8U)                                                /**< SDHC0_PRSSTAT.WTA Position              */
#define SDHC_PRSSTAT_WTA(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_WTA_SHIFT))&SDHC_PRSSTAT_WTA_MASK) /**< SDHC0_PRSSTAT.WTA Field                 */
#define SDHC_PRSSTAT_RTA_MASK                    (0x200U)                                            /**< SDHC0_PRSSTAT.RTA Mask                  */
#define SDHC_PRSSTAT_RTA_SHIFT                   (9U)                                                /**< SDHC0_PRSSTAT.RTA Position              */
#define SDHC_PRSSTAT_RTA(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_RTA_SHIFT))&SDHC_PRSSTAT_RTA_MASK) /**< SDHC0_PRSSTAT.RTA Field                 */
#define SDHC_PRSSTAT_BWEN_MASK                   (0x400U)                                            /**< SDHC0_PRSSTAT.BWEN Mask                 */
#define SDHC_PRSSTAT_BWEN_SHIFT                  (10U)                                               /**< SDHC0_PRSSTAT.BWEN Position             */
#define SDHC_PRSSTAT_BWEN(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_BWEN_SHIFT))&SDHC_PRSSTAT_BWEN_MASK) /**< SDHC0_PRSSTAT.BWEN Field                */
#define SDHC_PRSSTAT_BREN_MASK                   (0x800U)                                            /**< SDHC0_PRSSTAT.BREN Mask                 */
#define SDHC_PRSSTAT_BREN_SHIFT                  (11U)                                               /**< SDHC0_PRSSTAT.BREN Position             */
#define SDHC_PRSSTAT_BREN(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_BREN_SHIFT))&SDHC_PRSSTAT_BREN_MASK) /**< SDHC0_PRSSTAT.BREN Field                */
#define SDHC_PRSSTAT_CINS_MASK                   (0x10000U)                                          /**< SDHC0_PRSSTAT.CINS Mask                 */
#define SDHC_PRSSTAT_CINS_SHIFT                  (16U)                                               /**< SDHC0_PRSSTAT.CINS Position             */
#define SDHC_PRSSTAT_CINS(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_CINS_SHIFT))&SDHC_PRSSTAT_CINS_MASK) /**< SDHC0_PRSSTAT.CINS Field                */
#define SDHC_PRSSTAT_CLSL_MASK                   (0x800000U)                                         /**< SDHC0_PRSSTAT.CLSL Mask                 */
#define SDHC_PRSSTAT_CLSL_SHIFT                  (23U)                                               /**< SDHC0_PRSSTAT.CLSL Position             */
#define SDHC_PRSSTAT_CLSL(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_CLSL_SHIFT))&SDHC_PRSSTAT_CLSL_MASK) /**< SDHC0_PRSSTAT.CLSL Field                */
#define SDHC_PRSSTAT_DLSL_MASK                   (0xFF000000U)                                       /**< SDHC0_PRSSTAT.DLSL Mask                 */
#define SDHC_PRSSTAT_DLSL_SHIFT                  (24U)                                               /**< SDHC0_PRSSTAT.DLSL Position             */
#define SDHC_PRSSTAT_DLSL(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PRSSTAT_DLSL_SHIFT))&SDHC_PRSSTAT_DLSL_MASK) /**< SDHC0_PRSSTAT.DLSL Field                */
/** @} */

/** @name PROCTL - Protocol Control Register */ /** @{ */
#define SDHC_PROCTL_LCTL_MASK                    (0x1U)                                              /**< SDHC0_PROCTL.LCTL Mask                  */
#define SDHC_PROCTL_LCTL_SHIFT                   (0U)                                                /**< SDHC0_PROCTL.LCTL Position              */
#define SDHC_PROCTL_LCTL(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_LCTL_SHIFT))&SDHC_PROCTL_LCTL_MASK) /**< SDHC0_PROCTL.LCTL Field                 */
#define SDHC_PROCTL_DTW_MASK                     (0x6U)                                              /**< SDHC0_PROCTL.DTW Mask                   */
#define SDHC_PROCTL_DTW_SHIFT                    (1U)                                                /**< SDHC0_PROCTL.DTW Position               */
#define SDHC_PROCTL_DTW(x)                       (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_DTW_SHIFT))&SDHC_PROCTL_DTW_MASK) /**< SDHC0_PROCTL.DTW Field                  */
#define SDHC_PROCTL_D3CD_MASK                    (0x8U)                                              /**< SDHC0_PROCTL.D3CD Mask                  */
#define SDHC_PROCTL_D3CD_SHIFT                   (3U)                                                /**< SDHC0_PROCTL.D3CD Position              */
#define SDHC_PROCTL_D3CD(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_D3CD_SHIFT))&SDHC_PROCTL_D3CD_MASK) /**< SDHC0_PROCTL.D3CD Field                 */
#define SDHC_PROCTL_EMODE_MASK                   (0x30U)                                             /**< SDHC0_PROCTL.EMODE Mask                 */
#define SDHC_PROCTL_EMODE_SHIFT                  (4U)                                                /**< SDHC0_PROCTL.EMODE Position             */
#define SDHC_PROCTL_EMODE(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_EMODE_SHIFT))&SDHC_PROCTL_EMODE_MASK) /**< SDHC0_PROCTL.EMODE Field                */
#define SDHC_PROCTL_CDTL_MASK                    (0x40U)                                             /**< SDHC0_PROCTL.CDTL Mask                  */
#define SDHC_PROCTL_CDTL_SHIFT                   (6U)                                                /**< SDHC0_PROCTL.CDTL Position              */
#define SDHC_PROCTL_CDTL(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_CDTL_SHIFT))&SDHC_PROCTL_CDTL_MASK) /**< SDHC0_PROCTL.CDTL Field                 */
#define SDHC_PROCTL_CDSS_MASK                    (0x80U)                                             /**< SDHC0_PROCTL.CDSS Mask                  */
#define SDHC_PROCTL_CDSS_SHIFT                   (7U)                                                /**< SDHC0_PROCTL.CDSS Position              */
#define SDHC_PROCTL_CDSS(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_CDSS_SHIFT))&SDHC_PROCTL_CDSS_MASK) /**< SDHC0_PROCTL.CDSS Field                 */
#define SDHC_PROCTL_DMAS_MASK                    (0x300U)                                            /**< SDHC0_PROCTL.DMAS Mask                  */
#define SDHC_PROCTL_DMAS_SHIFT                   (8U)                                                /**< SDHC0_PROCTL.DMAS Position              */
#define SDHC_PROCTL_DMAS(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_DMAS_SHIFT))&SDHC_PROCTL_DMAS_MASK) /**< SDHC0_PROCTL.DMAS Field                 */
#define SDHC_PROCTL_SABGREQ_MASK                 (0x10000U)                                          /**< SDHC0_PROCTL.SABGREQ Mask               */
#define SDHC_PROCTL_SABGREQ_SHIFT                (16U)                                               /**< SDHC0_PROCTL.SABGREQ Position           */
#define SDHC_PROCTL_SABGREQ(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_SABGREQ_SHIFT))&SDHC_PROCTL_SABGREQ_MASK) /**< SDHC0_PROCTL.SABGREQ Field              */
#define SDHC_PROCTL_CREQ_MASK                    (0x20000U)                                          /**< SDHC0_PROCTL.CREQ Mask                  */
#define SDHC_PROCTL_CREQ_SHIFT                   (17U)                                               /**< SDHC0_PROCTL.CREQ Position              */
#define SDHC_PROCTL_CREQ(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_CREQ_SHIFT))&SDHC_PROCTL_CREQ_MASK) /**< SDHC0_PROCTL.CREQ Field                 */
#define SDHC_PROCTL_RWCTL_MASK                   (0x40000U)                                          /**< SDHC0_PROCTL.RWCTL Mask                 */
#define SDHC_PROCTL_RWCTL_SHIFT                  (18U)                                               /**< SDHC0_PROCTL.RWCTL Position             */
#define SDHC_PROCTL_RWCTL(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_RWCTL_SHIFT))&SDHC_PROCTL_RWCTL_MASK) /**< SDHC0_PROCTL.RWCTL Field                */
#define SDHC_PROCTL_IABG_MASK                    (0x80000U)                                          /**< SDHC0_PROCTL.IABG Mask                  */
#define SDHC_PROCTL_IABG_SHIFT                   (19U)                                               /**< SDHC0_PROCTL.IABG Position              */
#define SDHC_PROCTL_IABG(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_IABG_SHIFT))&SDHC_PROCTL_IABG_MASK) /**< SDHC0_PROCTL.IABG Field                 */
#define SDHC_PROCTL_WECINT_MASK                  (0x1000000U)                                        /**< SDHC0_PROCTL.WECINT Mask                */
#define SDHC_PROCTL_WECINT_SHIFT                 (24U)                                               /**< SDHC0_PROCTL.WECINT Position            */
#define SDHC_PROCTL_WECINT(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_WECINT_SHIFT))&SDHC_PROCTL_WECINT_MASK) /**< SDHC0_PROCTL.WECINT Field               */
#define SDHC_PROCTL_WECINS_MASK                  (0x2000000U)                                        /**< SDHC0_PROCTL.WECINS Mask                */
#define SDHC_PROCTL_WECINS_SHIFT                 (25U)                                               /**< SDHC0_PROCTL.WECINS Position            */
#define SDHC_PROCTL_WECINS(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_WECINS_SHIFT))&SDHC_PROCTL_WECINS_MASK) /**< SDHC0_PROCTL.WECINS Field               */
#define SDHC_PROCTL_WECRM_MASK                   (0x4000000U)                                        /**< SDHC0_PROCTL.WECRM Mask                 */
#define SDHC_PROCTL_WECRM_SHIFT                  (26U)                                               /**< SDHC0_PROCTL.WECRM Position             */
#define SDHC_PROCTL_WECRM(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_PROCTL_WECRM_SHIFT))&SDHC_PROCTL_WECRM_MASK) /**< SDHC0_PROCTL.WECRM Field                */
/** @} */

/** @name SYSCTL - System Control Register */ /** @{ */
#define SDHC_SYSCTL_IPGEN_MASK                   (0x1U)                                              /**< SDHC0_SYSCTL.IPGEN Mask                 */
#define SDHC_SYSCTL_IPGEN_SHIFT                  (0U)                                                /**< SDHC0_SYSCTL.IPGEN Position             */
#define SDHC_SYSCTL_IPGEN(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_IPGEN_SHIFT))&SDHC_SYSCTL_IPGEN_MASK) /**< SDHC0_SYSCTL.IPGEN Field                */
#define SDHC_SYSCTL_HCKEN_MASK                   (0x2U)                                              /**< SDHC0_SYSCTL.HCKEN Mask                 */
#define SDHC_SYSCTL_HCKEN_SHIFT                  (1U)                                                /**< SDHC0_SYSCTL.HCKEN Position             */
#define SDHC_SYSCTL_HCKEN(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_HCKEN_SHIFT))&SDHC_SYSCTL_HCKEN_MASK) /**< SDHC0_SYSCTL.HCKEN Field                */
#define SDHC_SYSCTL_PEREN_MASK                   (0x4U)                                              /**< SDHC0_SYSCTL.PEREN Mask                 */
#define SDHC_SYSCTL_PEREN_SHIFT                  (2U)                                                /**< SDHC0_SYSCTL.PEREN Position             */
#define SDHC_SYSCTL_PEREN(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_PEREN_SHIFT))&SDHC_SYSCTL_PEREN_MASK) /**< SDHC0_SYSCTL.PEREN Field                */
#define SDHC_SYSCTL_SDCLKEN_MASK                 (0x8U)                                              /**< SDHC0_SYSCTL.SDCLKEN Mask               */
#define SDHC_SYSCTL_SDCLKEN_SHIFT                (3U)                                                /**< SDHC0_SYSCTL.SDCLKEN Position           */
#define SDHC_SYSCTL_SDCLKEN(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_SDCLKEN_SHIFT))&SDHC_SYSCTL_SDCLKEN_MASK) /**< SDHC0_SYSCTL.SDCLKEN Field              */
#define SDHC_SYSCTL_DVS_MASK                     (0xF0U)                                             /**< SDHC0_SYSCTL.DVS Mask                   */
#define SDHC_SYSCTL_DVS_SHIFT                    (4U)                                                /**< SDHC0_SYSCTL.DVS Position               */
#define SDHC_SYSCTL_DVS(x)                       (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_DVS_SHIFT))&SDHC_SYSCTL_DVS_MASK) /**< SDHC0_SYSCTL.DVS Field                  */
#define SDHC_SYSCTL_SDCLKFS_MASK                 (0xFF00U)                                           /**< SDHC0_SYSCTL.SDCLKFS Mask               */
#define SDHC_SYSCTL_SDCLKFS_SHIFT                (8U)                                                /**< SDHC0_SYSCTL.SDCLKFS Position           */
#define SDHC_SYSCTL_SDCLKFS(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_SDCLKFS_SHIFT))&SDHC_SYSCTL_SDCLKFS_MASK) /**< SDHC0_SYSCTL.SDCLKFS Field              */
#define SDHC_SYSCTL_DTOCV_MASK                   (0xF0000U)                                          /**< SDHC0_SYSCTL.DTOCV Mask                 */
#define SDHC_SYSCTL_DTOCV_SHIFT                  (16U)                                               /**< SDHC0_SYSCTL.DTOCV Position             */
#define SDHC_SYSCTL_DTOCV(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_DTOCV_SHIFT))&SDHC_SYSCTL_DTOCV_MASK) /**< SDHC0_SYSCTL.DTOCV Field                */
#define SDHC_SYSCTL_RSTA_MASK                    (0x1000000U)                                        /**< SDHC0_SYSCTL.RSTA Mask                  */
#define SDHC_SYSCTL_RSTA_SHIFT                   (24U)                                               /**< SDHC0_SYSCTL.RSTA Position              */
#define SDHC_SYSCTL_RSTA(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_RSTA_SHIFT))&SDHC_SYSCTL_RSTA_MASK) /**< SDHC0_SYSCTL.RSTA Field                 */
#define SDHC_SYSCTL_RSTC_MASK                    (0x2000000U)                                        /**< SDHC0_SYSCTL.RSTC Mask                  */
#define SDHC_SYSCTL_RSTC_SHIFT                   (25U)                                               /**< SDHC0_SYSCTL.RSTC Position              */
#define SDHC_SYSCTL_RSTC(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_RSTC_SHIFT))&SDHC_SYSCTL_RSTC_MASK) /**< SDHC0_SYSCTL.RSTC Field                 */
#define SDHC_SYSCTL_RSTD_MASK                    (0x4000000U)                                        /**< SDHC0_SYSCTL.RSTD Mask                  */
#define SDHC_SYSCTL_RSTD_SHIFT                   (26U)                                               /**< SDHC0_SYSCTL.RSTD Position              */
#define SDHC_SYSCTL_RSTD(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_RSTD_SHIFT))&SDHC_SYSCTL_RSTD_MASK) /**< SDHC0_SYSCTL.RSTD Field                 */
#define SDHC_SYSCTL_INITA_MASK                   (0x8000000U)                                        /**< SDHC0_SYSCTL.INITA Mask                 */
#define SDHC_SYSCTL_INITA_SHIFT                  (27U)                                               /**< SDHC0_SYSCTL.INITA Position             */
#define SDHC_SYSCTL_INITA(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_SYSCTL_INITA_SHIFT))&SDHC_SYSCTL_INITA_MASK) /**< SDHC0_SYSCTL.INITA Field                */
/** @} */

/** @name IRQSTAT - Interrupt Status Register */ /** @{ */
#define SDHC_IRQSTAT_CC_MASK                     (0x1U)                                              /**< SDHC0_IRQSTAT.CC Mask                   */
#define SDHC_IRQSTAT_CC_SHIFT                    (0U)                                                /**< SDHC0_IRQSTAT.CC Position               */
#define SDHC_IRQSTAT_CC(x)                       (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_CC_SHIFT))&SDHC_IRQSTAT_CC_MASK) /**< SDHC0_IRQSTAT.CC Field                  */
#define SDHC_IRQSTAT_TC_MASK                     (0x2U)                                              /**< SDHC0_IRQSTAT.TC Mask                   */
#define SDHC_IRQSTAT_TC_SHIFT                    (1U)                                                /**< SDHC0_IRQSTAT.TC Position               */
#define SDHC_IRQSTAT_TC(x)                       (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_TC_SHIFT))&SDHC_IRQSTAT_TC_MASK) /**< SDHC0_IRQSTAT.TC Field                  */
#define SDHC_IRQSTAT_BGE_MASK                    (0x4U)                                              /**< SDHC0_IRQSTAT.BGE Mask                  */
#define SDHC_IRQSTAT_BGE_SHIFT                   (2U)                                                /**< SDHC0_IRQSTAT.BGE Position              */
#define SDHC_IRQSTAT_BGE(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_BGE_SHIFT))&SDHC_IRQSTAT_BGE_MASK) /**< SDHC0_IRQSTAT.BGE Field                 */
#define SDHC_IRQSTAT_DINT_MASK                   (0x8U)                                              /**< SDHC0_IRQSTAT.DINT Mask                 */
#define SDHC_IRQSTAT_DINT_SHIFT                  (3U)                                                /**< SDHC0_IRQSTAT.DINT Position             */
#define SDHC_IRQSTAT_DINT(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_DINT_SHIFT))&SDHC_IRQSTAT_DINT_MASK) /**< SDHC0_IRQSTAT.DINT Field                */
#define SDHC_IRQSTAT_BWR_MASK                    (0x10U)                                             /**< SDHC0_IRQSTAT.BWR Mask                  */
#define SDHC_IRQSTAT_BWR_SHIFT                   (4U)                                                /**< SDHC0_IRQSTAT.BWR Position              */
#define SDHC_IRQSTAT_BWR(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_BWR_SHIFT))&SDHC_IRQSTAT_BWR_MASK) /**< SDHC0_IRQSTAT.BWR Field                 */
#define SDHC_IRQSTAT_BRR_MASK                    (0x20U)                                             /**< SDHC0_IRQSTAT.BRR Mask                  */
#define SDHC_IRQSTAT_BRR_SHIFT                   (5U)                                                /**< SDHC0_IRQSTAT.BRR Position              */
#define SDHC_IRQSTAT_BRR(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_BRR_SHIFT))&SDHC_IRQSTAT_BRR_MASK) /**< SDHC0_IRQSTAT.BRR Field                 */
#define SDHC_IRQSTAT_CINS_MASK                   (0x40U)                                             /**< SDHC0_IRQSTAT.CINS Mask                 */
#define SDHC_IRQSTAT_CINS_SHIFT                  (6U)                                                /**< SDHC0_IRQSTAT.CINS Position             */
#define SDHC_IRQSTAT_CINS(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_CINS_SHIFT))&SDHC_IRQSTAT_CINS_MASK) /**< SDHC0_IRQSTAT.CINS Field                */
#define SDHC_IRQSTAT_CRM_MASK                    (0x80U)                                             /**< SDHC0_IRQSTAT.CRM Mask                  */
#define SDHC_IRQSTAT_CRM_SHIFT                   (7U)                                                /**< SDHC0_IRQSTAT.CRM Position              */
#define SDHC_IRQSTAT_CRM(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_CRM_SHIFT))&SDHC_IRQSTAT_CRM_MASK) /**< SDHC0_IRQSTAT.CRM Field                 */
#define SDHC_IRQSTAT_CINT_MASK                   (0x100U)                                            /**< SDHC0_IRQSTAT.CINT Mask                 */
#define SDHC_IRQSTAT_CINT_SHIFT                  (8U)                                                /**< SDHC0_IRQSTAT.CINT Position             */
#define SDHC_IRQSTAT_CINT(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_CINT_SHIFT))&SDHC_IRQSTAT_CINT_MASK) /**< SDHC0_IRQSTAT.CINT Field                */
#define SDHC_IRQSTAT_CTOE_MASK                   (0x10000U)                                          /**< SDHC0_IRQSTAT.CTOE Mask                 */
#define SDHC_IRQSTAT_CTOE_SHIFT                  (16U)                                               /**< SDHC0_IRQSTAT.CTOE Position             */
#define SDHC_IRQSTAT_CTOE(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_CTOE_SHIFT))&SDHC_IRQSTAT_CTOE_MASK) /**< SDHC0_IRQSTAT.CTOE Field                */
#define SDHC_IRQSTAT_CCE_MASK                    (0x20000U)                                          /**< SDHC0_IRQSTAT.CCE Mask                  */
#define SDHC_IRQSTAT_CCE_SHIFT                   (17U)                                               /**< SDHC0_IRQSTAT.CCE Position              */
#define SDHC_IRQSTAT_CCE(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_CCE_SHIFT))&SDHC_IRQSTAT_CCE_MASK) /**< SDHC0_IRQSTAT.CCE Field                 */
#define SDHC_IRQSTAT_CEBE_MASK                   (0x40000U)                                          /**< SDHC0_IRQSTAT.CEBE Mask                 */
#define SDHC_IRQSTAT_CEBE_SHIFT                  (18U)                                               /**< SDHC0_IRQSTAT.CEBE Position             */
#define SDHC_IRQSTAT_CEBE(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_CEBE_SHIFT))&SDHC_IRQSTAT_CEBE_MASK) /**< SDHC0_IRQSTAT.CEBE Field                */
#define SDHC_IRQSTAT_CIE_MASK                    (0x80000U)                                          /**< SDHC0_IRQSTAT.CIE Mask                  */
#define SDHC_IRQSTAT_CIE_SHIFT                   (19U)                                               /**< SDHC0_IRQSTAT.CIE Position              */
#define SDHC_IRQSTAT_CIE(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_CIE_SHIFT))&SDHC_IRQSTAT_CIE_MASK) /**< SDHC0_IRQSTAT.CIE Field                 */
#define SDHC_IRQSTAT_DTOE_MASK                   (0x100000U)                                         /**< SDHC0_IRQSTAT.DTOE Mask                 */
#define SDHC_IRQSTAT_DTOE_SHIFT                  (20U)                                               /**< SDHC0_IRQSTAT.DTOE Position             */
#define SDHC_IRQSTAT_DTOE(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_DTOE_SHIFT))&SDHC_IRQSTAT_DTOE_MASK) /**< SDHC0_IRQSTAT.DTOE Field                */
#define SDHC_IRQSTAT_DCE_MASK                    (0x200000U)                                         /**< SDHC0_IRQSTAT.DCE Mask                  */
#define SDHC_IRQSTAT_DCE_SHIFT                   (21U)                                               /**< SDHC0_IRQSTAT.DCE Position              */
#define SDHC_IRQSTAT_DCE(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_DCE_SHIFT))&SDHC_IRQSTAT_DCE_MASK) /**< SDHC0_IRQSTAT.DCE Field                 */
#define SDHC_IRQSTAT_DEBE_MASK                   (0x400000U)                                         /**< SDHC0_IRQSTAT.DEBE Mask                 */
#define SDHC_IRQSTAT_DEBE_SHIFT                  (22U)                                               /**< SDHC0_IRQSTAT.DEBE Position             */
#define SDHC_IRQSTAT_DEBE(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_DEBE_SHIFT))&SDHC_IRQSTAT_DEBE_MASK) /**< SDHC0_IRQSTAT.DEBE Field                */
#define SDHC_IRQSTAT_AC12E_MASK                  (0x1000000U)                                        /**< SDHC0_IRQSTAT.AC12E Mask                */
#define SDHC_IRQSTAT_AC12E_SHIFT                 (24U)                                               /**< SDHC0_IRQSTAT.AC12E Position            */
#define SDHC_IRQSTAT_AC12E(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_AC12E_SHIFT))&SDHC_IRQSTAT_AC12E_MASK) /**< SDHC0_IRQSTAT.AC12E Field               */
#define SDHC_IRQSTAT_DMAE_MASK                   (0x10000000U)                                       /**< SDHC0_IRQSTAT.DMAE Mask                 */
#define SDHC_IRQSTAT_DMAE_SHIFT                  (28U)                                               /**< SDHC0_IRQSTAT.DMAE Position             */
#define SDHC_IRQSTAT_DMAE(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTAT_DMAE_SHIFT))&SDHC_IRQSTAT_DMAE_MASK) /**< SDHC0_IRQSTAT.DMAE Field                */
/** @} */

/** @name IRQSTATEN - Interrupt Status Enable Register */ /** @{ */
#define SDHC_IRQSTATEN_CCSEN_MASK                (0x1U)                                              /**< SDHC0_IRQSTATEN.CCSEN Mask              */
#define SDHC_IRQSTATEN_CCSEN_SHIFT               (0U)                                                /**< SDHC0_IRQSTATEN.CCSEN Position          */
#define SDHC_IRQSTATEN_CCSEN(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_CCSEN_SHIFT))&SDHC_IRQSTATEN_CCSEN_MASK) /**< SDHC0_IRQSTATEN.CCSEN Field             */
#define SDHC_IRQSTATEN_TCSEN_MASK                (0x2U)                                              /**< SDHC0_IRQSTATEN.TCSEN Mask              */
#define SDHC_IRQSTATEN_TCSEN_SHIFT               (1U)                                                /**< SDHC0_IRQSTATEN.TCSEN Position          */
#define SDHC_IRQSTATEN_TCSEN(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_TCSEN_SHIFT))&SDHC_IRQSTATEN_TCSEN_MASK) /**< SDHC0_IRQSTATEN.TCSEN Field             */
#define SDHC_IRQSTATEN_BGESEN_MASK               (0x4U)                                              /**< SDHC0_IRQSTATEN.BGESEN Mask             */
#define SDHC_IRQSTATEN_BGESEN_SHIFT              (2U)                                                /**< SDHC0_IRQSTATEN.BGESEN Position         */
#define SDHC_IRQSTATEN_BGESEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_BGESEN_SHIFT))&SDHC_IRQSTATEN_BGESEN_MASK) /**< SDHC0_IRQSTATEN.BGESEN Field            */
#define SDHC_IRQSTATEN_DINTSEN_MASK              (0x8U)                                              /**< SDHC0_IRQSTATEN.DINTSEN Mask            */
#define SDHC_IRQSTATEN_DINTSEN_SHIFT             (3U)                                                /**< SDHC0_IRQSTATEN.DINTSEN Position        */
#define SDHC_IRQSTATEN_DINTSEN(x)                (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_DINTSEN_SHIFT))&SDHC_IRQSTATEN_DINTSEN_MASK) /**< SDHC0_IRQSTATEN.DINTSEN Field           */
#define SDHC_IRQSTATEN_BWRSEN_MASK               (0x10U)                                             /**< SDHC0_IRQSTATEN.BWRSEN Mask             */
#define SDHC_IRQSTATEN_BWRSEN_SHIFT              (4U)                                                /**< SDHC0_IRQSTATEN.BWRSEN Position         */
#define SDHC_IRQSTATEN_BWRSEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_BWRSEN_SHIFT))&SDHC_IRQSTATEN_BWRSEN_MASK) /**< SDHC0_IRQSTATEN.BWRSEN Field            */
#define SDHC_IRQSTATEN_BRRSEN_MASK               (0x20U)                                             /**< SDHC0_IRQSTATEN.BRRSEN Mask             */
#define SDHC_IRQSTATEN_BRRSEN_SHIFT              (5U)                                                /**< SDHC0_IRQSTATEN.BRRSEN Position         */
#define SDHC_IRQSTATEN_BRRSEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_BRRSEN_SHIFT))&SDHC_IRQSTATEN_BRRSEN_MASK) /**< SDHC0_IRQSTATEN.BRRSEN Field            */
#define SDHC_IRQSTATEN_CINSEN_MASK               (0x40U)                                             /**< SDHC0_IRQSTATEN.CINSEN Mask             */
#define SDHC_IRQSTATEN_CINSEN_SHIFT              (6U)                                                /**< SDHC0_IRQSTATEN.CINSEN Position         */
#define SDHC_IRQSTATEN_CINSEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_CINSEN_SHIFT))&SDHC_IRQSTATEN_CINSEN_MASK) /**< SDHC0_IRQSTATEN.CINSEN Field            */
#define SDHC_IRQSTATEN_CRMSEN_MASK               (0x80U)                                             /**< SDHC0_IRQSTATEN.CRMSEN Mask             */
#define SDHC_IRQSTATEN_CRMSEN_SHIFT              (7U)                                                /**< SDHC0_IRQSTATEN.CRMSEN Position         */
#define SDHC_IRQSTATEN_CRMSEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_CRMSEN_SHIFT))&SDHC_IRQSTATEN_CRMSEN_MASK) /**< SDHC0_IRQSTATEN.CRMSEN Field            */
#define SDHC_IRQSTATEN_CINTSEN_MASK              (0x100U)                                            /**< SDHC0_IRQSTATEN.CINTSEN Mask            */
#define SDHC_IRQSTATEN_CINTSEN_SHIFT             (8U)                                                /**< SDHC0_IRQSTATEN.CINTSEN Position        */
#define SDHC_IRQSTATEN_CINTSEN(x)                (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_CINTSEN_SHIFT))&SDHC_IRQSTATEN_CINTSEN_MASK) /**< SDHC0_IRQSTATEN.CINTSEN Field           */
#define SDHC_IRQSTATEN_CTOESEN_MASK              (0x10000U)                                          /**< SDHC0_IRQSTATEN.CTOESEN Mask            */
#define SDHC_IRQSTATEN_CTOESEN_SHIFT             (16U)                                               /**< SDHC0_IRQSTATEN.CTOESEN Position        */
#define SDHC_IRQSTATEN_CTOESEN(x)                (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_CTOESEN_SHIFT))&SDHC_IRQSTATEN_CTOESEN_MASK) /**< SDHC0_IRQSTATEN.CTOESEN Field           */
#define SDHC_IRQSTATEN_CCESEN_MASK               (0x20000U)                                          /**< SDHC0_IRQSTATEN.CCESEN Mask             */
#define SDHC_IRQSTATEN_CCESEN_SHIFT              (17U)                                               /**< SDHC0_IRQSTATEN.CCESEN Position         */
#define SDHC_IRQSTATEN_CCESEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_CCESEN_SHIFT))&SDHC_IRQSTATEN_CCESEN_MASK) /**< SDHC0_IRQSTATEN.CCESEN Field            */
#define SDHC_IRQSTATEN_CEBESEN_MASK              (0x40000U)                                          /**< SDHC0_IRQSTATEN.CEBESEN Mask            */
#define SDHC_IRQSTATEN_CEBESEN_SHIFT             (18U)                                               /**< SDHC0_IRQSTATEN.CEBESEN Position        */
#define SDHC_IRQSTATEN_CEBESEN(x)                (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_CEBESEN_SHIFT))&SDHC_IRQSTATEN_CEBESEN_MASK) /**< SDHC0_IRQSTATEN.CEBESEN Field           */
#define SDHC_IRQSTATEN_CIESEN_MASK               (0x80000U)                                          /**< SDHC0_IRQSTATEN.CIESEN Mask             */
#define SDHC_IRQSTATEN_CIESEN_SHIFT              (19U)                                               /**< SDHC0_IRQSTATEN.CIESEN Position         */
#define SDHC_IRQSTATEN_CIESEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_CIESEN_SHIFT))&SDHC_IRQSTATEN_CIESEN_MASK) /**< SDHC0_IRQSTATEN.CIESEN Field            */
#define SDHC_IRQSTATEN_DTOESEN_MASK              (0x100000U)                                         /**< SDHC0_IRQSTATEN.DTOESEN Mask            */
#define SDHC_IRQSTATEN_DTOESEN_SHIFT             (20U)                                               /**< SDHC0_IRQSTATEN.DTOESEN Position        */
#define SDHC_IRQSTATEN_DTOESEN(x)                (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_DTOESEN_SHIFT))&SDHC_IRQSTATEN_DTOESEN_MASK) /**< SDHC0_IRQSTATEN.DTOESEN Field           */
#define SDHC_IRQSTATEN_DCESEN_MASK               (0x200000U)                                         /**< SDHC0_IRQSTATEN.DCESEN Mask             */
#define SDHC_IRQSTATEN_DCESEN_SHIFT              (21U)                                               /**< SDHC0_IRQSTATEN.DCESEN Position         */
#define SDHC_IRQSTATEN_DCESEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_DCESEN_SHIFT))&SDHC_IRQSTATEN_DCESEN_MASK) /**< SDHC0_IRQSTATEN.DCESEN Field            */
#define SDHC_IRQSTATEN_DEBESEN_MASK              (0x400000U)                                         /**< SDHC0_IRQSTATEN.DEBESEN Mask            */
#define SDHC_IRQSTATEN_DEBESEN_SHIFT             (22U)                                               /**< SDHC0_IRQSTATEN.DEBESEN Position        */
#define SDHC_IRQSTATEN_DEBESEN(x)                (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_DEBESEN_SHIFT))&SDHC_IRQSTATEN_DEBESEN_MASK) /**< SDHC0_IRQSTATEN.DEBESEN Field           */
#define SDHC_IRQSTATEN_AC12ESEN_MASK             (0x1000000U)                                        /**< SDHC0_IRQSTATEN.AC12ESEN Mask           */
#define SDHC_IRQSTATEN_AC12ESEN_SHIFT            (24U)                                               /**< SDHC0_IRQSTATEN.AC12ESEN Position       */
#define SDHC_IRQSTATEN_AC12ESEN(x)               (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_AC12ESEN_SHIFT))&SDHC_IRQSTATEN_AC12ESEN_MASK) /**< SDHC0_IRQSTATEN.AC12ESEN Field          */
#define SDHC_IRQSTATEN_DMAESEN_MASK              (0x10000000U)                                       /**< SDHC0_IRQSTATEN.DMAESEN Mask            */
#define SDHC_IRQSTATEN_DMAESEN_SHIFT             (28U)                                               /**< SDHC0_IRQSTATEN.DMAESEN Position        */
#define SDHC_IRQSTATEN_DMAESEN(x)                (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSTATEN_DMAESEN_SHIFT))&SDHC_IRQSTATEN_DMAESEN_MASK) /**< SDHC0_IRQSTATEN.DMAESEN Field           */
/** @} */

/** @name IRQSIGEN - Interrupt Signal Enable Register */ /** @{ */
#define SDHC_IRQSIGEN_CCIEN_MASK                 (0x1U)                                              /**< SDHC0_IRQSIGEN.CCIEN Mask               */
#define SDHC_IRQSIGEN_CCIEN_SHIFT                (0U)                                                /**< SDHC0_IRQSIGEN.CCIEN Position           */
#define SDHC_IRQSIGEN_CCIEN(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_CCIEN_SHIFT))&SDHC_IRQSIGEN_CCIEN_MASK) /**< SDHC0_IRQSIGEN.CCIEN Field              */
#define SDHC_IRQSIGEN_TCIEN_MASK                 (0x2U)                                              /**< SDHC0_IRQSIGEN.TCIEN Mask               */
#define SDHC_IRQSIGEN_TCIEN_SHIFT                (1U)                                                /**< SDHC0_IRQSIGEN.TCIEN Position           */
#define SDHC_IRQSIGEN_TCIEN(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_TCIEN_SHIFT))&SDHC_IRQSIGEN_TCIEN_MASK) /**< SDHC0_IRQSIGEN.TCIEN Field              */
#define SDHC_IRQSIGEN_BGEIEN_MASK                (0x4U)                                              /**< SDHC0_IRQSIGEN.BGEIEN Mask              */
#define SDHC_IRQSIGEN_BGEIEN_SHIFT               (2U)                                                /**< SDHC0_IRQSIGEN.BGEIEN Position          */
#define SDHC_IRQSIGEN_BGEIEN(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_BGEIEN_SHIFT))&SDHC_IRQSIGEN_BGEIEN_MASK) /**< SDHC0_IRQSIGEN.BGEIEN Field             */
#define SDHC_IRQSIGEN_DINTIEN_MASK               (0x8U)                                              /**< SDHC0_IRQSIGEN.DINTIEN Mask             */
#define SDHC_IRQSIGEN_DINTIEN_SHIFT              (3U)                                                /**< SDHC0_IRQSIGEN.DINTIEN Position         */
#define SDHC_IRQSIGEN_DINTIEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_DINTIEN_SHIFT))&SDHC_IRQSIGEN_DINTIEN_MASK) /**< SDHC0_IRQSIGEN.DINTIEN Field            */
#define SDHC_IRQSIGEN_BWRIEN_MASK                (0x10U)                                             /**< SDHC0_IRQSIGEN.BWRIEN Mask              */
#define SDHC_IRQSIGEN_BWRIEN_SHIFT               (4U)                                                /**< SDHC0_IRQSIGEN.BWRIEN Position          */
#define SDHC_IRQSIGEN_BWRIEN(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_BWRIEN_SHIFT))&SDHC_IRQSIGEN_BWRIEN_MASK) /**< SDHC0_IRQSIGEN.BWRIEN Field             */
#define SDHC_IRQSIGEN_BRRIEN_MASK                (0x20U)                                             /**< SDHC0_IRQSIGEN.BRRIEN Mask              */
#define SDHC_IRQSIGEN_BRRIEN_SHIFT               (5U)                                                /**< SDHC0_IRQSIGEN.BRRIEN Position          */
#define SDHC_IRQSIGEN_BRRIEN(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_BRRIEN_SHIFT))&SDHC_IRQSIGEN_BRRIEN_MASK) /**< SDHC0_IRQSIGEN.BRRIEN Field             */
#define SDHC_IRQSIGEN_CINSIEN_MASK               (0x40U)                                             /**< SDHC0_IRQSIGEN.CINSIEN Mask             */
#define SDHC_IRQSIGEN_CINSIEN_SHIFT              (6U)                                                /**< SDHC0_IRQSIGEN.CINSIEN Position         */
#define SDHC_IRQSIGEN_CINSIEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_CINSIEN_SHIFT))&SDHC_IRQSIGEN_CINSIEN_MASK) /**< SDHC0_IRQSIGEN.CINSIEN Field            */
#define SDHC_IRQSIGEN_CRMIEN_MASK                (0x80U)                                             /**< SDHC0_IRQSIGEN.CRMIEN Mask              */
#define SDHC_IRQSIGEN_CRMIEN_SHIFT               (7U)                                                /**< SDHC0_IRQSIGEN.CRMIEN Position          */
#define SDHC_IRQSIGEN_CRMIEN(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_CRMIEN_SHIFT))&SDHC_IRQSIGEN_CRMIEN_MASK) /**< SDHC0_IRQSIGEN.CRMIEN Field             */
#define SDHC_IRQSIGEN_CINTIEN_MASK               (0x100U)                                            /**< SDHC0_IRQSIGEN.CINTIEN Mask             */
#define SDHC_IRQSIGEN_CINTIEN_SHIFT              (8U)                                                /**< SDHC0_IRQSIGEN.CINTIEN Position         */
#define SDHC_IRQSIGEN_CINTIEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_CINTIEN_SHIFT))&SDHC_IRQSIGEN_CINTIEN_MASK) /**< SDHC0_IRQSIGEN.CINTIEN Field            */
#define SDHC_IRQSIGEN_CTOEIEN_MASK               (0x10000U)                                          /**< SDHC0_IRQSIGEN.CTOEIEN Mask             */
#define SDHC_IRQSIGEN_CTOEIEN_SHIFT              (16U)                                               /**< SDHC0_IRQSIGEN.CTOEIEN Position         */
#define SDHC_IRQSIGEN_CTOEIEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_CTOEIEN_SHIFT))&SDHC_IRQSIGEN_CTOEIEN_MASK) /**< SDHC0_IRQSIGEN.CTOEIEN Field            */
#define SDHC_IRQSIGEN_CCEIEN_MASK                (0x20000U)                                          /**< SDHC0_IRQSIGEN.CCEIEN Mask              */
#define SDHC_IRQSIGEN_CCEIEN_SHIFT               (17U)                                               /**< SDHC0_IRQSIGEN.CCEIEN Position          */
#define SDHC_IRQSIGEN_CCEIEN(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_CCEIEN_SHIFT))&SDHC_IRQSIGEN_CCEIEN_MASK) /**< SDHC0_IRQSIGEN.CCEIEN Field             */
#define SDHC_IRQSIGEN_CEBEIEN_MASK               (0x40000U)                                          /**< SDHC0_IRQSIGEN.CEBEIEN Mask             */
#define SDHC_IRQSIGEN_CEBEIEN_SHIFT              (18U)                                               /**< SDHC0_IRQSIGEN.CEBEIEN Position         */
#define SDHC_IRQSIGEN_CEBEIEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_CEBEIEN_SHIFT))&SDHC_IRQSIGEN_CEBEIEN_MASK) /**< SDHC0_IRQSIGEN.CEBEIEN Field            */
#define SDHC_IRQSIGEN_CIEIEN_MASK                (0x80000U)                                          /**< SDHC0_IRQSIGEN.CIEIEN Mask              */
#define SDHC_IRQSIGEN_CIEIEN_SHIFT               (19U)                                               /**< SDHC0_IRQSIGEN.CIEIEN Position          */
#define SDHC_IRQSIGEN_CIEIEN(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_CIEIEN_SHIFT))&SDHC_IRQSIGEN_CIEIEN_MASK) /**< SDHC0_IRQSIGEN.CIEIEN Field             */
#define SDHC_IRQSIGEN_DTOEIEN_MASK               (0x100000U)                                         /**< SDHC0_IRQSIGEN.DTOEIEN Mask             */
#define SDHC_IRQSIGEN_DTOEIEN_SHIFT              (20U)                                               /**< SDHC0_IRQSIGEN.DTOEIEN Position         */
#define SDHC_IRQSIGEN_DTOEIEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_DTOEIEN_SHIFT))&SDHC_IRQSIGEN_DTOEIEN_MASK) /**< SDHC0_IRQSIGEN.DTOEIEN Field            */
#define SDHC_IRQSIGEN_DCEIEN_MASK                (0x200000U)                                         /**< SDHC0_IRQSIGEN.DCEIEN Mask              */
#define SDHC_IRQSIGEN_DCEIEN_SHIFT               (21U)                                               /**< SDHC0_IRQSIGEN.DCEIEN Position          */
#define SDHC_IRQSIGEN_DCEIEN(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_DCEIEN_SHIFT))&SDHC_IRQSIGEN_DCEIEN_MASK) /**< SDHC0_IRQSIGEN.DCEIEN Field             */
#define SDHC_IRQSIGEN_DEBEIEN_MASK               (0x400000U)                                         /**< SDHC0_IRQSIGEN.DEBEIEN Mask             */
#define SDHC_IRQSIGEN_DEBEIEN_SHIFT              (22U)                                               /**< SDHC0_IRQSIGEN.DEBEIEN Position         */
#define SDHC_IRQSIGEN_DEBEIEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_DEBEIEN_SHIFT))&SDHC_IRQSIGEN_DEBEIEN_MASK) /**< SDHC0_IRQSIGEN.DEBEIEN Field            */
#define SDHC_IRQSIGEN_AC12EIEN_MASK              (0x1000000U)                                        /**< SDHC0_IRQSIGEN.AC12EIEN Mask            */
#define SDHC_IRQSIGEN_AC12EIEN_SHIFT             (24U)                                               /**< SDHC0_IRQSIGEN.AC12EIEN Position        */
#define SDHC_IRQSIGEN_AC12EIEN(x)                (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_AC12EIEN_SHIFT))&SDHC_IRQSIGEN_AC12EIEN_MASK) /**< SDHC0_IRQSIGEN.AC12EIEN Field           */
#define SDHC_IRQSIGEN_DMAEIEN_MASK               (0x10000000U)                                       /**< SDHC0_IRQSIGEN.DMAEIEN Mask             */
#define SDHC_IRQSIGEN_DMAEIEN_SHIFT              (28U)                                               /**< SDHC0_IRQSIGEN.DMAEIEN Position         */
#define SDHC_IRQSIGEN_DMAEIEN(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_IRQSIGEN_DMAEIEN_SHIFT))&SDHC_IRQSIGEN_DMAEIEN_MASK) /**< SDHC0_IRQSIGEN.DMAEIEN Field            */
/** @} */

/** @name AC12ERR - Auto CMD12 Error Status Register */ /** @{ */
#define SDHC_AC12ERR_AC12NE_MASK                 (0x1U)                                              /**< SDHC0_AC12ERR.AC12NE Mask               */
#define SDHC_AC12ERR_AC12NE_SHIFT                (0U)                                                /**< SDHC0_AC12ERR.AC12NE Position           */
#define SDHC_AC12ERR_AC12NE(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_AC12ERR_AC12NE_SHIFT))&SDHC_AC12ERR_AC12NE_MASK) /**< SDHC0_AC12ERR.AC12NE Field              */
#define SDHC_AC12ERR_AC12TOE_MASK                (0x2U)                                              /**< SDHC0_AC12ERR.AC12TOE Mask              */
#define SDHC_AC12ERR_AC12TOE_SHIFT               (1U)                                                /**< SDHC0_AC12ERR.AC12TOE Position          */
#define SDHC_AC12ERR_AC12TOE(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_AC12ERR_AC12TOE_SHIFT))&SDHC_AC12ERR_AC12TOE_MASK) /**< SDHC0_AC12ERR.AC12TOE Field             */
#define SDHC_AC12ERR_AC12EBE_MASK                (0x4U)                                              /**< SDHC0_AC12ERR.AC12EBE Mask              */
#define SDHC_AC12ERR_AC12EBE_SHIFT               (2U)                                                /**< SDHC0_AC12ERR.AC12EBE Position          */
#define SDHC_AC12ERR_AC12EBE(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_AC12ERR_AC12EBE_SHIFT))&SDHC_AC12ERR_AC12EBE_MASK) /**< SDHC0_AC12ERR.AC12EBE Field             */
#define SDHC_AC12ERR_AC12CE_MASK                 (0x8U)                                              /**< SDHC0_AC12ERR.AC12CE Mask               */
#define SDHC_AC12ERR_AC12CE_SHIFT                (3U)                                                /**< SDHC0_AC12ERR.AC12CE Position           */
#define SDHC_AC12ERR_AC12CE(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_AC12ERR_AC12CE_SHIFT))&SDHC_AC12ERR_AC12CE_MASK) /**< SDHC0_AC12ERR.AC12CE Field              */
#define SDHC_AC12ERR_AC12IE_MASK                 (0x10U)                                             /**< SDHC0_AC12ERR.AC12IE Mask               */
#define SDHC_AC12ERR_AC12IE_SHIFT                (4U)                                                /**< SDHC0_AC12ERR.AC12IE Position           */
#define SDHC_AC12ERR_AC12IE(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_AC12ERR_AC12IE_SHIFT))&SDHC_AC12ERR_AC12IE_MASK) /**< SDHC0_AC12ERR.AC12IE Field              */
#define SDHC_AC12ERR_CNIBAC12E_MASK              (0x80U)                                             /**< SDHC0_AC12ERR.CNIBAC12E Mask            */
#define SDHC_AC12ERR_CNIBAC12E_SHIFT             (7U)                                                /**< SDHC0_AC12ERR.CNIBAC12E Position        */
#define SDHC_AC12ERR_CNIBAC12E(x)                (((uint32_t)(((uint32_t)(x))<<SDHC_AC12ERR_CNIBAC12E_SHIFT))&SDHC_AC12ERR_CNIBAC12E_MASK) /**< SDHC0_AC12ERR.CNIBAC12E Field           */
/** @} */

/** @name HTCAPBLT - Host Controller Capabilities */ /** @{ */
#define SDHC_HTCAPBLT_MBL_MASK                   (0x70000U)                                          /**< SDHC0_HTCAPBLT.MBL Mask                 */
#define SDHC_HTCAPBLT_MBL_SHIFT                  (16U)                                               /**< SDHC0_HTCAPBLT.MBL Position             */
#define SDHC_HTCAPBLT_MBL(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_HTCAPBLT_MBL_SHIFT))&SDHC_HTCAPBLT_MBL_MASK) /**< SDHC0_HTCAPBLT.MBL Field                */
#define SDHC_HTCAPBLT_ADMAS_MASK                 (0x100000U)                                         /**< SDHC0_HTCAPBLT.ADMAS Mask               */
#define SDHC_HTCAPBLT_ADMAS_SHIFT                (20U)                                               /**< SDHC0_HTCAPBLT.ADMAS Position           */
#define SDHC_HTCAPBLT_ADMAS(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_HTCAPBLT_ADMAS_SHIFT))&SDHC_HTCAPBLT_ADMAS_MASK) /**< SDHC0_HTCAPBLT.ADMAS Field              */
#define SDHC_HTCAPBLT_HSS_MASK                   (0x200000U)                                         /**< SDHC0_HTCAPBLT.HSS Mask                 */
#define SDHC_HTCAPBLT_HSS_SHIFT                  (21U)                                               /**< SDHC0_HTCAPBLT.HSS Position             */
#define SDHC_HTCAPBLT_HSS(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_HTCAPBLT_HSS_SHIFT))&SDHC_HTCAPBLT_HSS_MASK) /**< SDHC0_HTCAPBLT.HSS Field                */
#define SDHC_HTCAPBLT_DMAS_MASK                  (0x400000U)                                         /**< SDHC0_HTCAPBLT.DMAS Mask                */
#define SDHC_HTCAPBLT_DMAS_SHIFT                 (22U)                                               /**< SDHC0_HTCAPBLT.DMAS Position            */
#define SDHC_HTCAPBLT_DMAS(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_HTCAPBLT_DMAS_SHIFT))&SDHC_HTCAPBLT_DMAS_MASK) /**< SDHC0_HTCAPBLT.DMAS Field               */
#define SDHC_HTCAPBLT_SRS_MASK                   (0x800000U)                                         /**< SDHC0_HTCAPBLT.SRS Mask                 */
#define SDHC_HTCAPBLT_SRS_SHIFT                  (23U)                                               /**< SDHC0_HTCAPBLT.SRS Position             */
#define SDHC_HTCAPBLT_SRS(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_HTCAPBLT_SRS_SHIFT))&SDHC_HTCAPBLT_SRS_MASK) /**< SDHC0_HTCAPBLT.SRS Field                */
#define SDHC_HTCAPBLT_VS33_MASK                  (0x1000000U)                                        /**< SDHC0_HTCAPBLT.VS33 Mask                */
#define SDHC_HTCAPBLT_VS33_SHIFT                 (24U)                                               /**< SDHC0_HTCAPBLT.VS33 Position            */
#define SDHC_HTCAPBLT_VS33(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_HTCAPBLT_VS33_SHIFT))&SDHC_HTCAPBLT_VS33_MASK) /**< SDHC0_HTCAPBLT.VS33 Field               */
#define SDHC_HTCAPBLT_VS30_MASK                  (0x2000000U)                                        /**< SDHC0_HTCAPBLT.VS30 Mask                */
#define SDHC_HTCAPBLT_VS30_SHIFT                 (25U)                                               /**< SDHC0_HTCAPBLT.VS30 Position            */
#define SDHC_HTCAPBLT_VS30(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_HTCAPBLT_VS30_SHIFT))&SDHC_HTCAPBLT_VS30_MASK) /**< SDHC0_HTCAPBLT.VS30 Field               */
#define SDHC_HTCAPBLT_VS18_MASK                  (0x4000000U)                                        /**< SDHC0_HTCAPBLT.VS18 Mask                */
#define SDHC_HTCAPBLT_VS18_SHIFT                 (26U)                                               /**< SDHC0_HTCAPBLT.VS18 Position            */
#define SDHC_HTCAPBLT_VS18(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_HTCAPBLT_VS18_SHIFT))&SDHC_HTCAPBLT_VS18_MASK) /**< SDHC0_HTCAPBLT.VS18 Field               */
/** @} */

/** @name WML - Watermark Level Register */ /** @{ */
#define SDHC_WML_RDWML_MASK                      (0xFFU)                                             /**< SDHC0_WML.RDWML Mask                    */
#define SDHC_WML_RDWML_SHIFT                     (0U)                                                /**< SDHC0_WML.RDWML Position                */
#define SDHC_WML_RDWML(x)                        (((uint32_t)(((uint32_t)(x))<<SDHC_WML_RDWML_SHIFT))&SDHC_WML_RDWML_MASK) /**< SDHC0_WML.RDWML Field                   */
#define SDHC_WML_WRWML_MASK                      (0xFF0000U)                                         /**< SDHC0_WML.WRWML Mask                    */
#define SDHC_WML_WRWML_SHIFT                     (16U)                                               /**< SDHC0_WML.WRWML Position                */
#define SDHC_WML_WRWML(x)                        (((uint32_t)(((uint32_t)(x))<<SDHC_WML_WRWML_SHIFT))&SDHC_WML_WRWML_MASK) /**< SDHC0_WML.WRWML Field                   */
/** @} */

/** @name FEVT - Force Event Register */ /** @{ */
#define SDHC_FEVT_AC12NE_MASK                    (0x1U)                                              /**< SDHC0_FEVT.AC12NE Mask                  */
#define SDHC_FEVT_AC12NE_SHIFT                   (0U)                                                /**< SDHC0_FEVT.AC12NE Position              */
#define SDHC_FEVT_AC12NE(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_AC12NE_SHIFT))&SDHC_FEVT_AC12NE_MASK) /**< SDHC0_FEVT.AC12NE Field                 */
#define SDHC_FEVT_AC12TOE_MASK                   (0x2U)                                              /**< SDHC0_FEVT.AC12TOE Mask                 */
#define SDHC_FEVT_AC12TOE_SHIFT                  (1U)                                                /**< SDHC0_FEVT.AC12TOE Position             */
#define SDHC_FEVT_AC12TOE(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_AC12TOE_SHIFT))&SDHC_FEVT_AC12TOE_MASK) /**< SDHC0_FEVT.AC12TOE Field                */
#define SDHC_FEVT_AC12CE_MASK                    (0x4U)                                              /**< SDHC0_FEVT.AC12CE Mask                  */
#define SDHC_FEVT_AC12CE_SHIFT                   (2U)                                                /**< SDHC0_FEVT.AC12CE Position              */
#define SDHC_FEVT_AC12CE(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_AC12CE_SHIFT))&SDHC_FEVT_AC12CE_MASK) /**< SDHC0_FEVT.AC12CE Field                 */
#define SDHC_FEVT_AC12EBE_MASK                   (0x8U)                                              /**< SDHC0_FEVT.AC12EBE Mask                 */
#define SDHC_FEVT_AC12EBE_SHIFT                  (3U)                                                /**< SDHC0_FEVT.AC12EBE Position             */
#define SDHC_FEVT_AC12EBE(x)                     (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_AC12EBE_SHIFT))&SDHC_FEVT_AC12EBE_MASK) /**< SDHC0_FEVT.AC12EBE Field                */
#define SDHC_FEVT_AC12IE_MASK                    (0x10U)                                             /**< SDHC0_FEVT.AC12IE Mask                  */
#define SDHC_FEVT_AC12IE_SHIFT                   (4U)                                                /**< SDHC0_FEVT.AC12IE Position              */
#define SDHC_FEVT_AC12IE(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_AC12IE_SHIFT))&SDHC_FEVT_AC12IE_MASK) /**< SDHC0_FEVT.AC12IE Field                 */
#define SDHC_FEVT_CNIBAC12E_MASK                 (0x80U)                                             /**< SDHC0_FEVT.CNIBAC12E Mask               */
#define SDHC_FEVT_CNIBAC12E_SHIFT                (7U)                                                /**< SDHC0_FEVT.CNIBAC12E Position           */
#define SDHC_FEVT_CNIBAC12E(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_CNIBAC12E_SHIFT))&SDHC_FEVT_CNIBAC12E_MASK) /**< SDHC0_FEVT.CNIBAC12E Field              */
#define SDHC_FEVT_CTOE_MASK                      (0x10000U)                                          /**< SDHC0_FEVT.CTOE Mask                    */
#define SDHC_FEVT_CTOE_SHIFT                     (16U)                                               /**< SDHC0_FEVT.CTOE Position                */
#define SDHC_FEVT_CTOE(x)                        (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_CTOE_SHIFT))&SDHC_FEVT_CTOE_MASK) /**< SDHC0_FEVT.CTOE Field                   */
#define SDHC_FEVT_CCE_MASK                       (0x20000U)                                          /**< SDHC0_FEVT.CCE Mask                     */
#define SDHC_FEVT_CCE_SHIFT                      (17U)                                               /**< SDHC0_FEVT.CCE Position                 */
#define SDHC_FEVT_CCE(x)                         (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_CCE_SHIFT))&SDHC_FEVT_CCE_MASK) /**< SDHC0_FEVT.CCE Field                    */
#define SDHC_FEVT_CEBE_MASK                      (0x40000U)                                          /**< SDHC0_FEVT.CEBE Mask                    */
#define SDHC_FEVT_CEBE_SHIFT                     (18U)                                               /**< SDHC0_FEVT.CEBE Position                */
#define SDHC_FEVT_CEBE(x)                        (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_CEBE_SHIFT))&SDHC_FEVT_CEBE_MASK) /**< SDHC0_FEVT.CEBE Field                   */
#define SDHC_FEVT_CIE_MASK                       (0x80000U)                                          /**< SDHC0_FEVT.CIE Mask                     */
#define SDHC_FEVT_CIE_SHIFT                      (19U)                                               /**< SDHC0_FEVT.CIE Position                 */
#define SDHC_FEVT_CIE(x)                         (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_CIE_SHIFT))&SDHC_FEVT_CIE_MASK) /**< SDHC0_FEVT.CIE Field                    */
#define SDHC_FEVT_DTOE_MASK                      (0x100000U)                                         /**< SDHC0_FEVT.DTOE Mask                    */
#define SDHC_FEVT_DTOE_SHIFT                     (20U)                                               /**< SDHC0_FEVT.DTOE Position                */
#define SDHC_FEVT_DTOE(x)                        (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_DTOE_SHIFT))&SDHC_FEVT_DTOE_MASK) /**< SDHC0_FEVT.DTOE Field                   */
#define SDHC_FEVT_DCE_MASK                       (0x200000U)                                         /**< SDHC0_FEVT.DCE Mask                     */
#define SDHC_FEVT_DCE_SHIFT                      (21U)                                               /**< SDHC0_FEVT.DCE Position                 */
#define SDHC_FEVT_DCE(x)                         (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_DCE_SHIFT))&SDHC_FEVT_DCE_MASK) /**< SDHC0_FEVT.DCE Field                    */
#define SDHC_FEVT_DEBE_MASK                      (0x400000U)                                         /**< SDHC0_FEVT.DEBE Mask                    */
#define SDHC_FEVT_DEBE_SHIFT                     (22U)                                               /**< SDHC0_FEVT.DEBE Position                */
#define SDHC_FEVT_DEBE(x)                        (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_DEBE_SHIFT))&SDHC_FEVT_DEBE_MASK) /**< SDHC0_FEVT.DEBE Field                   */
#define SDHC_FEVT_AC12E_MASK                     (0x1000000U)                                        /**< SDHC0_FEVT.AC12E Mask                   */
#define SDHC_FEVT_AC12E_SHIFT                    (24U)                                               /**< SDHC0_FEVT.AC12E Position               */
#define SDHC_FEVT_AC12E(x)                       (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_AC12E_SHIFT))&SDHC_FEVT_AC12E_MASK) /**< SDHC0_FEVT.AC12E Field                  */
#define SDHC_FEVT_DMAE_MASK                      (0x10000000U)                                       /**< SDHC0_FEVT.DMAE Mask                    */
#define SDHC_FEVT_DMAE_SHIFT                     (28U)                                               /**< SDHC0_FEVT.DMAE Position                */
#define SDHC_FEVT_DMAE(x)                        (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_DMAE_SHIFT))&SDHC_FEVT_DMAE_MASK) /**< SDHC0_FEVT.DMAE Field                   */
#define SDHC_FEVT_CINT_MASK                      (0x80000000U)                                       /**< SDHC0_FEVT.CINT Mask                    */
#define SDHC_FEVT_CINT_SHIFT                     (31U)                                               /**< SDHC0_FEVT.CINT Position                */
#define SDHC_FEVT_CINT(x)                        (((uint32_t)(((uint32_t)(x))<<SDHC_FEVT_CINT_SHIFT))&SDHC_FEVT_CINT_MASK) /**< SDHC0_FEVT.CINT Field                   */
/** @} */

/** @name ADMAES - ADMA Error Status Register */ /** @{ */
#define SDHC_ADMAES_ADMAES_MASK                  (0x3U)                                              /**< SDHC0_ADMAES.ADMAES Mask                */
#define SDHC_ADMAES_ADMAES_SHIFT                 (0U)                                                /**< SDHC0_ADMAES.ADMAES Position            */
#define SDHC_ADMAES_ADMAES(x)                    (((uint32_t)(((uint32_t)(x))<<SDHC_ADMAES_ADMAES_SHIFT))&SDHC_ADMAES_ADMAES_MASK) /**< SDHC0_ADMAES.ADMAES Field               */
#define SDHC_ADMAES_ADMALME_MASK                 (0x4U)                                              /**< SDHC0_ADMAES.ADMALME Mask               */
#define SDHC_ADMAES_ADMALME_SHIFT                (2U)                                                /**< SDHC0_ADMAES.ADMALME Position           */
#define SDHC_ADMAES_ADMALME(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_ADMAES_ADMALME_SHIFT))&SDHC_ADMAES_ADMALME_MASK) /**< SDHC0_ADMAES.ADMALME Field              */
#define SDHC_ADMAES_ADMADCE_MASK                 (0x8U)                                              /**< SDHC0_ADMAES.ADMADCE Mask               */
#define SDHC_ADMAES_ADMADCE_SHIFT                (3U)                                                /**< SDHC0_ADMAES.ADMADCE Position           */
#define SDHC_ADMAES_ADMADCE(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_ADMAES_ADMADCE_SHIFT))&SDHC_ADMAES_ADMADCE_MASK) /**< SDHC0_ADMAES.ADMADCE Field              */
/** @} */

/** @name ADSADDR - ADMA System Address Register */ /** @{ */
#define SDHC_ADSADDR_ADSADDR_MASK                (0xFFFFFFFCU)                                       /**< SDHC0_ADSADDR.ADSADDR Mask              */
#define SDHC_ADSADDR_ADSADDR_SHIFT               (2U)                                                /**< SDHC0_ADSADDR.ADSADDR Position          */
#define SDHC_ADSADDR_ADSADDR(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_ADSADDR_ADSADDR_SHIFT))&SDHC_ADSADDR_ADSADDR_MASK) /**< SDHC0_ADSADDR.ADSADDR Field             */
/** @} */

/** @name VENDOR - Vendor Specific Register */ /** @{ */
#define SDHC_VENDOR_EXTDMAEN_MASK                (0x1U)                                              /**< SDHC0_VENDOR.EXTDMAEN Mask              */
#define SDHC_VENDOR_EXTDMAEN_SHIFT               (0U)                                                /**< SDHC0_VENDOR.EXTDMAEN Position          */
#define SDHC_VENDOR_EXTDMAEN(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_VENDOR_EXTDMAEN_SHIFT))&SDHC_VENDOR_EXTDMAEN_MASK) /**< SDHC0_VENDOR.EXTDMAEN Field             */
#define SDHC_VENDOR_EXBLKNU_MASK                 (0x2U)                                              /**< SDHC0_VENDOR.EXBLKNU Mask               */
#define SDHC_VENDOR_EXBLKNU_SHIFT                (1U)                                                /**< SDHC0_VENDOR.EXBLKNU Position           */
#define SDHC_VENDOR_EXBLKNU(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_VENDOR_EXBLKNU_SHIFT))&SDHC_VENDOR_EXBLKNU_MASK) /**< SDHC0_VENDOR.EXBLKNU Field              */
#define SDHC_VENDOR_INTSTVAL_MASK                (0xFF0000U)                                         /**< SDHC0_VENDOR.INTSTVAL Mask              */
#define SDHC_VENDOR_INTSTVAL_SHIFT               (16U)                                               /**< SDHC0_VENDOR.INTSTVAL Position          */
#define SDHC_VENDOR_INTSTVAL(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_VENDOR_INTSTVAL_SHIFT))&SDHC_VENDOR_INTSTVAL_MASK) /**< SDHC0_VENDOR.INTSTVAL Field             */
/** @} */

/** @name MMCBOOT - MMC Boot Register */ /** @{ */
#define SDHC_MMCBOOT_DTOCVACK_MASK               (0xFU)                                              /**< SDHC0_MMCBOOT.DTOCVACK Mask             */
#define SDHC_MMCBOOT_DTOCVACK_SHIFT              (0U)                                                /**< SDHC0_MMCBOOT.DTOCVACK Position         */
#define SDHC_MMCBOOT_DTOCVACK(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_MMCBOOT_DTOCVACK_SHIFT))&SDHC_MMCBOOT_DTOCVACK_MASK) /**< SDHC0_MMCBOOT.DTOCVACK Field            */
#define SDHC_MMCBOOT_BOOTACK_MASK                (0x10U)                                             /**< SDHC0_MMCBOOT.BOOTACK Mask              */
#define SDHC_MMCBOOT_BOOTACK_SHIFT               (4U)                                                /**< SDHC0_MMCBOOT.BOOTACK Position          */
#define SDHC_MMCBOOT_BOOTACK(x)                  (((uint32_t)(((uint32_t)(x))<<SDHC_MMCBOOT_BOOTACK_SHIFT))&SDHC_MMCBOOT_BOOTACK_MASK) /**< SDHC0_MMCBOOT.BOOTACK Field             */
#define SDHC_MMCBOOT_BOOTMODE_MASK               (0x20U)                                             /**< SDHC0_MMCBOOT.BOOTMODE Mask             */
#define SDHC_MMCBOOT_BOOTMODE_SHIFT              (5U)                                                /**< SDHC0_MMCBOOT.BOOTMODE Position         */
#define SDHC_MMCBOOT_BOOTMODE(x)                 (((uint32_t)(((uint32_t)(x))<<SDHC_MMCBOOT_BOOTMODE_SHIFT))&SDHC_MMCBOOT_BOOTMODE_MASK) /**< SDHC0_MMCBOOT.BOOTMODE Field            */
#define SDHC_MMCBOOT_BOOTEN_MASK                 (0x40U)                                             /**< SDHC0_MMCBOOT.BOOTEN Mask               */
#define SDHC_MMCBOOT_BOOTEN_SHIFT                (6U)                                                /**< SDHC0_MMCBOOT.BOOTEN Position           */
#define SDHC_MMCBOOT_BOOTEN(x)                   (((uint32_t)(((uint32_t)(x))<<SDHC_MMCBOOT_BOOTEN_SHIFT))&SDHC_MMCBOOT_BOOTEN_MASK) /**< SDHC0_MMCBOOT.BOOTEN Field              */
#define SDHC_MMCBOOT_AUTOSABGEN_MASK             (0x80U)                                             /**< SDHC0_MMCBOOT.AUTOSABGEN Mask           */
#define SDHC_MMCBOOT_AUTOSABGEN_SHIFT            (7U)                                                /**< SDHC0_MMCBOOT.AUTOSABGEN Position       */
#define SDHC_MMCBOOT_AUTOSABGEN(x)               (((uint32_t)(((uint32_t)(x))<<SDHC_MMCBOOT_AUTOSABGEN_SHIFT))&SDHC_MMCBOOT_AUTOSABGEN_MASK) /**< SDHC0_MMCBOOT.AUTOSABGEN Field          */
#define SDHC_MMCBOOT_BOOTBLKCNT_MASK             (0xFFFF0000U)                                       /**< SDHC0_MMCBOOT.BOOTBLKCNT Mask           */
#define SDHC_MMCBOOT_BOOTBLKCNT_SHIFT            (16U)                                               /**< SDHC0_MMCBOOT.BOOTBLKCNT Position       */
#define SDHC_MMCBOOT_BOOTBLKCNT(x)               (((uint32_t)(((uint32_t)(x))<<SDHC_MMCBOOT_BOOTBLKCNT_SHIFT))&SDHC_MMCBOOT_BOOTBLKCNT_MASK) /**< SDHC0_MMCBOOT.BOOTBLKCNT Field          */
/** @} */

/** @name HOSTVER - Host Controller Version */ /** @{ */
#define SDHC_HOSTVER_SVN_MASK                    (0xFFU)                                             /**< SDHC0_HOSTVER.SVN Mask                  */
#define SDHC_HOSTVER_SVN_SHIFT                   (0U)                                                /**< SDHC0_HOSTVER.SVN Position              */
#define SDHC_HOSTVER_SVN(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_HOSTVER_SVN_SHIFT))&SDHC_HOSTVER_SVN_MASK) /**< SDHC0_HOSTVER.SVN Field                 */
#define SDHC_HOSTVER_VVN_MASK                    (0xFF00U)                                           /**< SDHC0_HOSTVER.VVN Mask                  */
#define SDHC_HOSTVER_VVN_SHIFT                   (8U)                                                /**< SDHC0_HOSTVER.VVN Position              */
#define SDHC_HOSTVER_VVN(x)                      (((uint32_t)(((uint32_t)(x))<<SDHC_HOSTVER_VVN_SHIFT))&SDHC_HOSTVER_VVN_MASK) /**< SDHC0_HOSTVER.VVN Field                 */
/** @} */

/** @} */ /* End group SDHC_Register_Masks_GROUP */


/* SDHC0 - Peripheral instance base addresses */
#define SDHC0_BasePtr                  0x400B1000UL //!< Peripheral base address
#define SDHC0                          ((SDHC_Type *) SDHC0_BasePtr) //!< Freescale base pointer
#define SDHC0_BASE_PTR                 (SDHC0) //!< Freescale style base pointer
#define SDHC0_IRQS { SDHC0_IRQn,  }


/** @} */ /* End group SDHC_Peripheral_access_layer_GROUP */


/** @brief C Struct for SIM */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SIM_Peripheral_access_layer_GROUP SIM Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SIM (file:SIM_MK60D10)               ================ */
/* ================================================================================ */

/**
 * @brief System Integration Module
 */
/**
 * @struct SIM_Type
 * @brief  C Struct allowing access to SIM registers
 */
typedef struct SIM_Type {
   __IO uint32_t  SOPT1;                        /**< 0000: System Options Register 1                                    */
   __IO uint32_t  SOPT1CFG;                     /**< 0004: SOPT1 Configuration Register                                 */
        uint8_t   RESERVED_0[4092];             /**< 0008: 0xFFC bytes                                                  */
   __IO uint32_t  SOPT2;                        /**< 1004: System Options Register 2                                    */
        uint8_t   RESERVED_1[4];                /**< 1008: 0x4 bytes                                                    */
   __IO uint32_t  SOPT4;                        /**< 100C: System Options Register 4                                    */
   __IO uint32_t  SOPT5;                        /**< 1010: System Options Register 5                                    */
        uint8_t   RESERVED_2[4];                /**< 1014: 0x4 bytes                                                    */
   __IO uint32_t  SOPT7;                        /**< 1018: System Options Register 7                                    */
        uint8_t   RESERVED_3[8];                /**< 101C: 0x8 bytes                                                    */
   __I  uint32_t  SDID;                         /**< 1024: System Device Identification Register                        */
   __IO uint32_t  SCGC1;                        /**< 1028: System Clock Gating Control Register 1                       */
   __IO uint32_t  SCGC2;                        /**< 102C: System Clock Gating Control Register 2                       */
   __IO uint32_t  SCGC3;                        /**< 1030: System Clock Gating Control Register 3                       */
   __IO uint32_t  SCGC4;                        /**< 1034: System Clock Gating Control Register 4                       */
   __IO uint32_t  SCGC5;                        /**< 1038: System Clock Gating Control Register 5                       */
   __IO uint32_t  SCGC6;                        /**< 103C: System Clock Gating Control Register 6                       */
   __IO uint32_t  SCGC7;                        /**< 1040: System Clock Gating Control Register 7                       */
   __IO uint32_t  CLKDIV1;                      /**< 1044: System Clock Divider Register 1                              */
   __IO uint32_t  CLKDIV2;                      /**< 1048: System Clock Divider Register 2                              */
   __IO uint32_t  FCFG1;                        /**< 104C: Flash Configuration Register 1                               */
   __I  uint32_t  FCFG2;                        /**< 1050: Flash Configuration Register 2                               */
   __I  uint32_t  UIDH;                         /**< 1054: Unique Identification Register High                          */
   __I  uint32_t  UIDMH;                        /**< 1058: Unique Identification Register Mid-High                      */
   __I  uint32_t  UIDML;                        /**< 105C: Unique Identification Register Mid Low                       */
   __I  uint32_t  UIDL;                         /**< 1060: Unique Identification Register Low                           */
} SIM_Type;


/** @brief Register Masks for SIM */

/* -------------------------------------------------------------------------------- */
/* -----------     'SIM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup SIM_Register_Masks_GROUP SIM Register Masks */
/** @{ */

/** @name SOPT1 - System Options Register 1 */ /** @{ */
#define SIM_SOPT1_RAMSIZE_MASK                   (0xF000U)                                           /**< SIM_SOPT1.RAMSIZE Mask                  */
#define SIM_SOPT1_RAMSIZE_SHIFT                  (12U)                                               /**< SIM_SOPT1.RAMSIZE Position              */
#define SIM_SOPT1_RAMSIZE(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SOPT1_RAMSIZE_SHIFT))&SIM_SOPT1_RAMSIZE_MASK) /**< SIM_SOPT1.RAMSIZE Field                 */
#define SIM_SOPT1_OSC32KSEL_MASK                 (0xC0000U)                                          /**< SIM_SOPT1.OSC32KSEL Mask                */
#define SIM_SOPT1_OSC32KSEL_SHIFT                (18U)                                               /**< SIM_SOPT1.OSC32KSEL Position            */
#define SIM_SOPT1_OSC32KSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SOPT1_OSC32KSEL_SHIFT))&SIM_SOPT1_OSC32KSEL_MASK) /**< SIM_SOPT1.OSC32KSEL Field               */
#define SIM_SOPT1_USBVSTBY_MASK                  (0x20000000U)                                       /**< SIM_SOPT1.USBVSTBY Mask                 */
#define SIM_SOPT1_USBVSTBY_SHIFT                 (29U)                                               /**< SIM_SOPT1.USBVSTBY Position             */
#define SIM_SOPT1_USBVSTBY(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT1_USBVSTBY_SHIFT))&SIM_SOPT1_USBVSTBY_MASK) /**< SIM_SOPT1.USBVSTBY Field                */
#define SIM_SOPT1_USBSSTBY_MASK                  (0x40000000U)                                       /**< SIM_SOPT1.USBSSTBY Mask                 */
#define SIM_SOPT1_USBSSTBY_SHIFT                 (30U)                                               /**< SIM_SOPT1.USBSSTBY Position             */
#define SIM_SOPT1_USBSSTBY(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT1_USBSSTBY_SHIFT))&SIM_SOPT1_USBSSTBY_MASK) /**< SIM_SOPT1.USBSSTBY Field                */
#define SIM_SOPT1_USBREGEN_MASK                  (0x80000000U)                                       /**< SIM_SOPT1.USBREGEN Mask                 */
#define SIM_SOPT1_USBREGEN_SHIFT                 (31U)                                               /**< SIM_SOPT1.USBREGEN Position             */
#define SIM_SOPT1_USBREGEN(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT1_USBREGEN_SHIFT))&SIM_SOPT1_USBREGEN_MASK) /**< SIM_SOPT1.USBREGEN Field                */
/** @} */

/** @name SOPT1CFG - SOPT1 Configuration Register */ /** @{ */
#define SIM_SOPT1CFG_URWE_MASK                   (0x1000000U)                                        /**< SIM_SOPT1CFG.URWE Mask                  */
#define SIM_SOPT1CFG_URWE_SHIFT                  (24U)                                               /**< SIM_SOPT1CFG.URWE Position              */
#define SIM_SOPT1CFG_URWE(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SOPT1CFG_URWE_SHIFT))&SIM_SOPT1CFG_URWE_MASK) /**< SIM_SOPT1CFG.URWE Field                 */
#define SIM_SOPT1CFG_UVSWE_MASK                  (0x2000000U)                                        /**< SIM_SOPT1CFG.UVSWE Mask                 */
#define SIM_SOPT1CFG_UVSWE_SHIFT                 (25U)                                               /**< SIM_SOPT1CFG.UVSWE Position             */
#define SIM_SOPT1CFG_UVSWE(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT1CFG_UVSWE_SHIFT))&SIM_SOPT1CFG_UVSWE_MASK) /**< SIM_SOPT1CFG.UVSWE Field                */
#define SIM_SOPT1CFG_USSWE_MASK                  (0x4000000U)                                        /**< SIM_SOPT1CFG.USSWE Mask                 */
#define SIM_SOPT1CFG_USSWE_SHIFT                 (26U)                                               /**< SIM_SOPT1CFG.USSWE Position             */
#define SIM_SOPT1CFG_USSWE(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT1CFG_USSWE_SHIFT))&SIM_SOPT1CFG_USSWE_MASK) /**< SIM_SOPT1CFG.USSWE Field                */
/** @} */

/** @name SOPT2 - System Options Register 2 */ /** @{ */
#define SIM_SOPT2_RTCCLKOUTSEL_MASK              (0x10U)                                             /**< SIM_SOPT2.RTCCLKOUTSEL Mask             */
#define SIM_SOPT2_RTCCLKOUTSEL_SHIFT             (4U)                                                /**< SIM_SOPT2.RTCCLKOUTSEL Position         */
#define SIM_SOPT2_RTCCLKOUTSEL(x)                (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_RTCCLKOUTSEL_SHIFT))&SIM_SOPT2_RTCCLKOUTSEL_MASK) /**< SIM_SOPT2.RTCCLKOUTSEL Field            */
#define SIM_SOPT2_CLKOUTSEL_MASK                 (0xE0U)                                             /**< SIM_SOPT2.CLKOUTSEL Mask                */
#define SIM_SOPT2_CLKOUTSEL_SHIFT                (5U)                                                /**< SIM_SOPT2.CLKOUTSEL Position            */
#define SIM_SOPT2_CLKOUTSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_CLKOUTSEL_SHIFT))&SIM_SOPT2_CLKOUTSEL_MASK) /**< SIM_SOPT2.CLKOUTSEL Field               */
#define SIM_SOPT2_FBSL_MASK                      (0x300U)                                            /**< SIM_SOPT2.FBSL Mask                     */
#define SIM_SOPT2_FBSL_SHIFT                     (8U)                                                /**< SIM_SOPT2.FBSL Position                 */
#define SIM_SOPT2_FBSL(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_FBSL_SHIFT))&SIM_SOPT2_FBSL_MASK) /**< SIM_SOPT2.FBSL Field                    */
#define SIM_SOPT2_PTD7PAD_MASK                   (0x800U)                                            /**< SIM_SOPT2.PTD7PAD Mask                  */
#define SIM_SOPT2_PTD7PAD_SHIFT                  (11U)                                               /**< SIM_SOPT2.PTD7PAD Position              */
#define SIM_SOPT2_PTD7PAD(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_PTD7PAD_SHIFT))&SIM_SOPT2_PTD7PAD_MASK) /**< SIM_SOPT2.PTD7PAD Field                 */
#define SIM_SOPT2_TRACECLKSEL_MASK               (0x1000U)                                           /**< SIM_SOPT2.TRACECLKSEL Mask              */
#define SIM_SOPT2_TRACECLKSEL_SHIFT              (12U)                                               /**< SIM_SOPT2.TRACECLKSEL Position          */
#define SIM_SOPT2_TRACECLKSEL(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_TRACECLKSEL_SHIFT))&SIM_SOPT2_TRACECLKSEL_MASK) /**< SIM_SOPT2.TRACECLKSEL Field             */
#define SIM_SOPT2_PLLFLLSEL_MASK                 (0x10000U)                                          /**< SIM_SOPT2.PLLFLLSEL Mask                */
#define SIM_SOPT2_PLLFLLSEL_SHIFT                (16U)                                               /**< SIM_SOPT2.PLLFLLSEL Position            */
#define SIM_SOPT2_PLLFLLSEL(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_PLLFLLSEL_SHIFT))&SIM_SOPT2_PLLFLLSEL_MASK) /**< SIM_SOPT2.PLLFLLSEL Field               */
#define SIM_SOPT2_USBSRC_MASK                    (0x40000U)                                          /**< SIM_SOPT2.USBSRC Mask                   */
#define SIM_SOPT2_USBSRC_SHIFT                   (18U)                                               /**< SIM_SOPT2.USBSRC Position               */
#define SIM_SOPT2_USBSRC(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_USBSRC_SHIFT))&SIM_SOPT2_USBSRC_MASK) /**< SIM_SOPT2.USBSRC Field                  */
#define SIM_SOPT2_RMIISRC_MASK                   (0x80000U)                                          /**< SIM_SOPT2.RMIISRC Mask                  */
#define SIM_SOPT2_RMIISRC_SHIFT                  (19U)                                               /**< SIM_SOPT2.RMIISRC Position              */
#define SIM_SOPT2_RMIISRC(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_RMIISRC_SHIFT))&SIM_SOPT2_RMIISRC_MASK) /**< SIM_SOPT2.RMIISRC Field                 */
#define SIM_SOPT2_TIMESRC_MASK                   (0x300000U)                                         /**< SIM_SOPT2.TIMESRC Mask                  */
#define SIM_SOPT2_TIMESRC_SHIFT                  (20U)                                               /**< SIM_SOPT2.TIMESRC Position              */
#define SIM_SOPT2_TIMESRC(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_TIMESRC_SHIFT))&SIM_SOPT2_TIMESRC_MASK) /**< SIM_SOPT2.TIMESRC Field                 */
#define SIM_SOPT2_SDHCSRC_MASK                   (0x30000000U)                                       /**< SIM_SOPT2.SDHCSRC Mask                  */
#define SIM_SOPT2_SDHCSRC_SHIFT                  (28U)                                               /**< SIM_SOPT2.SDHCSRC Position              */
#define SIM_SOPT2_SDHCSRC(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SOPT2_SDHCSRC_SHIFT))&SIM_SOPT2_SDHCSRC_MASK) /**< SIM_SOPT2.SDHCSRC Field                 */
/** @} */

/** @name SOPT4 - System Options Register 4 */ /** @{ */
#define SIM_SOPT4_FTM0FLT0_MASK                  (0x1U)                                              /**< SIM_SOPT4.FTM0FLT0 Mask                 */
#define SIM_SOPT4_FTM0FLT0_SHIFT                 (0U)                                                /**< SIM_SOPT4.FTM0FLT0 Position             */
#define SIM_SOPT4_FTM0FLT0(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0FLT0_SHIFT))&SIM_SOPT4_FTM0FLT0_MASK) /**< SIM_SOPT4.FTM0FLT0 Field                */
#define SIM_SOPT4_FTM0FLT1_MASK                  (0x2U)                                              /**< SIM_SOPT4.FTM0FLT1 Mask                 */
#define SIM_SOPT4_FTM0FLT1_SHIFT                 (1U)                                                /**< SIM_SOPT4.FTM0FLT1 Position             */
#define SIM_SOPT4_FTM0FLT1(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0FLT1_SHIFT))&SIM_SOPT4_FTM0FLT1_MASK) /**< SIM_SOPT4.FTM0FLT1 Field                */
#define SIM_SOPT4_FTM0FLT2_MASK                  (0x4U)                                              /**< SIM_SOPT4.FTM0FLT2 Mask                 */
#define SIM_SOPT4_FTM0FLT2_SHIFT                 (2U)                                                /**< SIM_SOPT4.FTM0FLT2 Position             */
#define SIM_SOPT4_FTM0FLT2(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0FLT2_SHIFT))&SIM_SOPT4_FTM0FLT2_MASK) /**< SIM_SOPT4.FTM0FLT2 Field                */
#define SIM_SOPT4_FTM1FLT0_MASK                  (0x10U)                                             /**< SIM_SOPT4.FTM1FLT0 Mask                 */
#define SIM_SOPT4_FTM1FLT0_SHIFT                 (4U)                                                /**< SIM_SOPT4.FTM1FLT0 Position             */
#define SIM_SOPT4_FTM1FLT0(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM1FLT0_SHIFT))&SIM_SOPT4_FTM1FLT0_MASK) /**< SIM_SOPT4.FTM1FLT0 Field                */
#define SIM_SOPT4_FTM2FLT0_MASK                  (0x100U)                                            /**< SIM_SOPT4.FTM2FLT0 Mask                 */
#define SIM_SOPT4_FTM2FLT0_SHIFT                 (8U)                                                /**< SIM_SOPT4.FTM2FLT0 Position             */
#define SIM_SOPT4_FTM2FLT0(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM2FLT0_SHIFT))&SIM_SOPT4_FTM2FLT0_MASK) /**< SIM_SOPT4.FTM2FLT0 Field                */
#define SIM_SOPT4_FTM1CH0SRC_MASK                (0xC0000U)                                          /**< SIM_SOPT4.FTM1CH0SRC Mask               */
#define SIM_SOPT4_FTM1CH0SRC_SHIFT               (18U)                                               /**< SIM_SOPT4.FTM1CH0SRC Position           */
#define SIM_SOPT4_FTM1CH0SRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM1CH0SRC_SHIFT))&SIM_SOPT4_FTM1CH0SRC_MASK) /**< SIM_SOPT4.FTM1CH0SRC Field              */
#define SIM_SOPT4_FTM2CH0SRC_MASK                (0x300000U)                                         /**< SIM_SOPT4.FTM2CH0SRC Mask               */
#define SIM_SOPT4_FTM2CH0SRC_SHIFT               (20U)                                               /**< SIM_SOPT4.FTM2CH0SRC Position           */
#define SIM_SOPT4_FTM2CH0SRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM2CH0SRC_SHIFT))&SIM_SOPT4_FTM2CH0SRC_MASK) /**< SIM_SOPT4.FTM2CH0SRC Field              */
#define SIM_SOPT4_FTM0CLKSEL_MASK                (0x1000000U)                                        /**< SIM_SOPT4.FTM0CLKSEL Mask               */
#define SIM_SOPT4_FTM0CLKSEL_SHIFT               (24U)                                               /**< SIM_SOPT4.FTM0CLKSEL Position           */
#define SIM_SOPT4_FTM0CLKSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0CLKSEL_SHIFT))&SIM_SOPT4_FTM0CLKSEL_MASK) /**< SIM_SOPT4.FTM0CLKSEL Field              */
#define SIM_SOPT4_FTM1CLKSEL_MASK                (0x2000000U)                                        /**< SIM_SOPT4.FTM1CLKSEL Mask               */
#define SIM_SOPT4_FTM1CLKSEL_SHIFT               (25U)                                               /**< SIM_SOPT4.FTM1CLKSEL Position           */
#define SIM_SOPT4_FTM1CLKSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM1CLKSEL_SHIFT))&SIM_SOPT4_FTM1CLKSEL_MASK) /**< SIM_SOPT4.FTM1CLKSEL Field              */
#define SIM_SOPT4_FTM2CLKSEL_MASK                (0x4000000U)                                        /**< SIM_SOPT4.FTM2CLKSEL Mask               */
#define SIM_SOPT4_FTM2CLKSEL_SHIFT               (26U)                                               /**< SIM_SOPT4.FTM2CLKSEL Position           */
#define SIM_SOPT4_FTM2CLKSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM2CLKSEL_SHIFT))&SIM_SOPT4_FTM2CLKSEL_MASK) /**< SIM_SOPT4.FTM2CLKSEL Field              */
#define SIM_SOPT4_FTM0TRG0SRC_MASK               (0x10000000U)                                       /**< SIM_SOPT4.FTM0TRG0SRC Mask              */
#define SIM_SOPT4_FTM0TRG0SRC_SHIFT              (28U)                                               /**< SIM_SOPT4.FTM0TRG0SRC Position          */
#define SIM_SOPT4_FTM0TRG0SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0TRG0SRC_SHIFT))&SIM_SOPT4_FTM0TRG0SRC_MASK) /**< SIM_SOPT4.FTM0TRG0SRC Field             */
#define SIM_SOPT4_FTM0TRG1SRC_MASK               (0x20000000U)                                       /**< SIM_SOPT4.FTM0TRG1SRC Mask              */
#define SIM_SOPT4_FTM0TRG1SRC_SHIFT              (29U)                                               /**< SIM_SOPT4.FTM0TRG1SRC Position          */
#define SIM_SOPT4_FTM0TRG1SRC(x)                 (((uint32_t)(((uint32_t)(x))<<SIM_SOPT4_FTM0TRG1SRC_SHIFT))&SIM_SOPT4_FTM0TRG1SRC_MASK) /**< SIM_SOPT4.FTM0TRG1SRC Field             */
/** @} */

/** @name SOPT5 - System Options Register 5 */ /** @{ */
#define SIM_SOPT5_UART0TXSRC_MASK                (0x3U)                                              /**< SIM_SOPT5.UART0TXSRC Mask               */
#define SIM_SOPT5_UART0TXSRC_SHIFT               (0U)                                                /**< SIM_SOPT5.UART0TXSRC Position           */
#define SIM_SOPT5_UART0TXSRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT5_UART0TXSRC_SHIFT))&SIM_SOPT5_UART0TXSRC_MASK) /**< SIM_SOPT5.UART0TXSRC Field              */
#define SIM_SOPT5_UART0RXSRC_MASK                (0xCU)                                              /**< SIM_SOPT5.UART0RXSRC Mask               */
#define SIM_SOPT5_UART0RXSRC_SHIFT               (2U)                                                /**< SIM_SOPT5.UART0RXSRC Position           */
#define SIM_SOPT5_UART0RXSRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT5_UART0RXSRC_SHIFT))&SIM_SOPT5_UART0RXSRC_MASK) /**< SIM_SOPT5.UART0RXSRC Field              */
#define SIM_SOPT5_UART1TXSRC_MASK                (0x30U)                                             /**< SIM_SOPT5.UART1TXSRC Mask               */
#define SIM_SOPT5_UART1TXSRC_SHIFT               (4U)                                                /**< SIM_SOPT5.UART1TXSRC Position           */
#define SIM_SOPT5_UART1TXSRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT5_UART1TXSRC_SHIFT))&SIM_SOPT5_UART1TXSRC_MASK) /**< SIM_SOPT5.UART1TXSRC Field              */
#define SIM_SOPT5_UART1RXSRC_MASK                (0xC0U)                                             /**< SIM_SOPT5.UART1RXSRC Mask               */
#define SIM_SOPT5_UART1RXSRC_SHIFT               (6U)                                                /**< SIM_SOPT5.UART1RXSRC Position           */
#define SIM_SOPT5_UART1RXSRC(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT5_UART1RXSRC_SHIFT))&SIM_SOPT5_UART1RXSRC_MASK) /**< SIM_SOPT5.UART1RXSRC Field              */
/** @} */

/** @name SOPT7 - System Options Register 7 */ /** @{ */
#define SIM_SOPT7_ADC0TRGSEL_MASK                (0xFU)                                              /**< SIM_SOPT7.ADC0TRGSEL Mask               */
#define SIM_SOPT7_ADC0TRGSEL_SHIFT               (0U)                                                /**< SIM_SOPT7.ADC0TRGSEL Position           */
#define SIM_SOPT7_ADC0TRGSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT7_ADC0TRGSEL_SHIFT))&SIM_SOPT7_ADC0TRGSEL_MASK) /**< SIM_SOPT7.ADC0TRGSEL Field              */
#define SIM_SOPT7_ADC0PRETRGSEL_MASK             (0x10U)                                             /**< SIM_SOPT7.ADC0PRETRGSEL Mask            */
#define SIM_SOPT7_ADC0PRETRGSEL_SHIFT            (4U)                                                /**< SIM_SOPT7.ADC0PRETRGSEL Position        */
#define SIM_SOPT7_ADC0PRETRGSEL(x)               (((uint32_t)(((uint32_t)(x))<<SIM_SOPT7_ADC0PRETRGSEL_SHIFT))&SIM_SOPT7_ADC0PRETRGSEL_MASK) /**< SIM_SOPT7.ADC0PRETRGSEL Field           */
#define SIM_SOPT7_ADC0ALTTRGEN_MASK              (0x80U)                                             /**< SIM_SOPT7.ADC0ALTTRGEN Mask             */
#define SIM_SOPT7_ADC0ALTTRGEN_SHIFT             (7U)                                                /**< SIM_SOPT7.ADC0ALTTRGEN Position         */
#define SIM_SOPT7_ADC0ALTTRGEN(x)                (((uint32_t)(((uint32_t)(x))<<SIM_SOPT7_ADC0ALTTRGEN_SHIFT))&SIM_SOPT7_ADC0ALTTRGEN_MASK) /**< SIM_SOPT7.ADC0ALTTRGEN Field            */
#define SIM_SOPT7_ADC1TRGSEL_MASK                (0xF00U)                                            /**< SIM_SOPT7.ADC1TRGSEL Mask               */
#define SIM_SOPT7_ADC1TRGSEL_SHIFT               (8U)                                                /**< SIM_SOPT7.ADC1TRGSEL Position           */
#define SIM_SOPT7_ADC1TRGSEL(x)                  (((uint32_t)(((uint32_t)(x))<<SIM_SOPT7_ADC1TRGSEL_SHIFT))&SIM_SOPT7_ADC1TRGSEL_MASK) /**< SIM_SOPT7.ADC1TRGSEL Field              */
#define SIM_SOPT7_ADC1PRETRGSEL_MASK             (0x1000U)                                           /**< SIM_SOPT7.ADC1PRETRGSEL Mask            */
#define SIM_SOPT7_ADC1PRETRGSEL_SHIFT            (12U)                                               /**< SIM_SOPT7.ADC1PRETRGSEL Position        */
#define SIM_SOPT7_ADC1PRETRGSEL(x)               (((uint32_t)(((uint32_t)(x))<<SIM_SOPT7_ADC1PRETRGSEL_SHIFT))&SIM_SOPT7_ADC1PRETRGSEL_MASK) /**< SIM_SOPT7.ADC1PRETRGSEL Field           */
#define SIM_SOPT7_ADC1ALTTRGEN_MASK              (0x8000U)                                           /**< SIM_SOPT7.ADC1ALTTRGEN Mask             */
#define SIM_SOPT7_ADC1ALTTRGEN_SHIFT             (15U)                                               /**< SIM_SOPT7.ADC1ALTTRGEN Position         */
#define SIM_SOPT7_ADC1ALTTRGEN(x)                (((uint32_t)(((uint32_t)(x))<<SIM_SOPT7_ADC1ALTTRGEN_SHIFT))&SIM_SOPT7_ADC1ALTTRGEN_MASK) /**< SIM_SOPT7.ADC1ALTTRGEN Field            */
/** @} */

/** @name SDID - System Device Identification Register */ /** @{ */
#define SIM_SDID_PINID_MASK                      (0xFU)                                              /**< SIM_SDID.PINID Mask                     */
#define SIM_SDID_PINID_SHIFT                     (0U)                                                /**< SIM_SDID.PINID Position                 */
#define SIM_SDID_PINID(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SDID_PINID_SHIFT))&SIM_SDID_PINID_MASK) /**< SIM_SDID.PINID Field                    */
#define SIM_SDID_FAMID_MASK                      (0x70U)                                             /**< SIM_SDID.FAMID Mask                     */
#define SIM_SDID_FAMID_SHIFT                     (4U)                                                /**< SIM_SDID.FAMID Position                 */
#define SIM_SDID_FAMID(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SDID_FAMID_SHIFT))&SIM_SDID_FAMID_MASK) /**< SIM_SDID.FAMID Field                    */
#define SIM_SDID_REVID_MASK                      (0xF000U)                                           /**< SIM_SDID.REVID Mask                     */
#define SIM_SDID_REVID_SHIFT                     (12U)                                               /**< SIM_SDID.REVID Position                 */
#define SIM_SDID_REVID(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SDID_REVID_SHIFT))&SIM_SDID_REVID_MASK) /**< SIM_SDID.REVID Field                    */
/** @} */

/** @name SCGC1 - System Clock Gating Control Register 1 */ /** @{ */
#define SIM_SCGC1_UART4_MASK                     (0x400U)                                            /**< SIM_SCGC1.UART4 Mask                    */
#define SIM_SCGC1_UART4_SHIFT                    (10U)                                               /**< SIM_SCGC1.UART4 Position                */
#define SIM_SCGC1_UART4(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC1_UART4_SHIFT))&SIM_SCGC1_UART4_MASK) /**< SIM_SCGC1.UART4 Field                   */
#define SIM_SCGC1_UART5_MASK                     (0x800U)                                            /**< SIM_SCGC1.UART5 Mask                    */
#define SIM_SCGC1_UART5_SHIFT                    (11U)                                               /**< SIM_SCGC1.UART5 Position                */
#define SIM_SCGC1_UART5(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC1_UART5_SHIFT))&SIM_SCGC1_UART5_MASK) /**< SIM_SCGC1.UART5 Field                   */
/** @} */

/** @name SCGC2 - System Clock Gating Control Register 2 */ /** @{ */
#define SIM_SCGC2_ENET_MASK                      (0x1U)                                              /**< SIM_SCGC2.ENET Mask                     */
#define SIM_SCGC2_ENET_SHIFT                     (0U)                                                /**< SIM_SCGC2.ENET Position                 */
#define SIM_SCGC2_ENET(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC2_ENET_SHIFT))&SIM_SCGC2_ENET_MASK) /**< SIM_SCGC2.ENET Field                    */
#define SIM_SCGC2_DAC0_MASK                      (0x1000U)                                           /**< SIM_SCGC2.DAC0 Mask                     */
#define SIM_SCGC2_DAC0_SHIFT                     (12U)                                               /**< SIM_SCGC2.DAC0 Position                 */
#define SIM_SCGC2_DAC0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC2_DAC0_SHIFT))&SIM_SCGC2_DAC0_MASK) /**< SIM_SCGC2.DAC0 Field                    */
#define SIM_SCGC2_DAC1_MASK                      (0x2000U)                                           /**< SIM_SCGC2.DAC1 Mask                     */
#define SIM_SCGC2_DAC1_SHIFT                     (13U)                                               /**< SIM_SCGC2.DAC1 Position                 */
#define SIM_SCGC2_DAC1(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC2_DAC1_SHIFT))&SIM_SCGC2_DAC1_MASK) /**< SIM_SCGC2.DAC1 Field                    */
/** @} */

/** @name SCGC3 - System Clock Gating Control Register 3 */ /** @{ */
#define SIM_SCGC3_RNGA_MASK                      (0x1U)                                              /**< SIM_SCGC3.RNGA Mask                     */
#define SIM_SCGC3_RNGA_SHIFT                     (0U)                                                /**< SIM_SCGC3.RNGA Position                 */
#define SIM_SCGC3_RNGA(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC3_RNGA_SHIFT))&SIM_SCGC3_RNGA_MASK) /**< SIM_SCGC3.RNGA Field                    */
#define SIM_SCGC3_CAN1_MASK                      (0x10U)                                             /**< SIM_SCGC3.CAN1 Mask                     */
#define SIM_SCGC3_CAN1_SHIFT                     (4U)                                                /**< SIM_SCGC3.CAN1 Position                 */
#define SIM_SCGC3_CAN1(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC3_CAN1_SHIFT))&SIM_SCGC3_CAN1_MASK) /**< SIM_SCGC3.CAN1 Field                    */
#define SIM_SCGC3_SPI2_MASK                      (0x1000U)                                           /**< SIM_SCGC3.SPI2 Mask                     */
#define SIM_SCGC3_SPI2_SHIFT                     (12U)                                               /**< SIM_SCGC3.SPI2 Position                 */
#define SIM_SCGC3_SPI2(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC3_SPI2_SHIFT))&SIM_SCGC3_SPI2_MASK) /**< SIM_SCGC3.SPI2 Field                    */
#define SIM_SCGC3_SDHC_MASK                      (0x20000U)                                          /**< SIM_SCGC3.SDHC Mask                     */
#define SIM_SCGC3_SDHC_SHIFT                     (17U)                                               /**< SIM_SCGC3.SDHC Position                 */
#define SIM_SCGC3_SDHC(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC3_SDHC_SHIFT))&SIM_SCGC3_SDHC_MASK) /**< SIM_SCGC3.SDHC Field                    */
#define SIM_SCGC3_FTM2_MASK                      (0x1000000U)                                        /**< SIM_SCGC3.FTM2 Mask                     */
#define SIM_SCGC3_FTM2_SHIFT                     (24U)                                               /**< SIM_SCGC3.FTM2 Position                 */
#define SIM_SCGC3_FTM2(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC3_FTM2_SHIFT))&SIM_SCGC3_FTM2_MASK) /**< SIM_SCGC3.FTM2 Field                    */
#define SIM_SCGC3_ADC1_MASK                      (0x8000000U)                                        /**< SIM_SCGC3.ADC1 Mask                     */
#define SIM_SCGC3_ADC1_SHIFT                     (27U)                                               /**< SIM_SCGC3.ADC1 Position                 */
#define SIM_SCGC3_ADC1(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC3_ADC1_SHIFT))&SIM_SCGC3_ADC1_MASK) /**< SIM_SCGC3.ADC1 Field                    */
/** @} */

/** @name SCGC4 - System Clock Gating Control Register 4 */ /** @{ */
#define SIM_SCGC4_EWM_MASK                       (0x2U)                                              /**< SIM_SCGC4.EWM Mask                      */
#define SIM_SCGC4_EWM_SHIFT                      (1U)                                                /**< SIM_SCGC4.EWM Position                  */
#define SIM_SCGC4_EWM(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_EWM_SHIFT))&SIM_SCGC4_EWM_MASK) /**< SIM_SCGC4.EWM Field                     */
#define SIM_SCGC4_CMT_MASK                       (0x4U)                                              /**< SIM_SCGC4.CMT Mask                      */
#define SIM_SCGC4_CMT_SHIFT                      (2U)                                                /**< SIM_SCGC4.CMT Position                  */
#define SIM_SCGC4_CMT(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_CMT_SHIFT))&SIM_SCGC4_CMT_MASK) /**< SIM_SCGC4.CMT Field                     */
#define SIM_SCGC4_I2C0_MASK                      (0x40U)                                             /**< SIM_SCGC4.I2C0 Mask                     */
#define SIM_SCGC4_I2C0_SHIFT                     (6U)                                                /**< SIM_SCGC4.I2C0 Position                 */
#define SIM_SCGC4_I2C0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_I2C0_SHIFT))&SIM_SCGC4_I2C0_MASK) /**< SIM_SCGC4.I2C0 Field                    */
#define SIM_SCGC4_I2C1_MASK                      (0x80U)                                             /**< SIM_SCGC4.I2C1 Mask                     */
#define SIM_SCGC4_I2C1_SHIFT                     (7U)                                                /**< SIM_SCGC4.I2C1 Position                 */
#define SIM_SCGC4_I2C1(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_I2C1_SHIFT))&SIM_SCGC4_I2C1_MASK) /**< SIM_SCGC4.I2C1 Field                    */
#define SIM_SCGC4_UART0_MASK                     (0x400U)                                            /**< SIM_SCGC4.UART0 Mask                    */
#define SIM_SCGC4_UART0_SHIFT                    (10U)                                               /**< SIM_SCGC4.UART0 Position                */
#define SIM_SCGC4_UART0(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_UART0_SHIFT))&SIM_SCGC4_UART0_MASK) /**< SIM_SCGC4.UART0 Field                   */
#define SIM_SCGC4_UART1_MASK                     (0x800U)                                            /**< SIM_SCGC4.UART1 Mask                    */
#define SIM_SCGC4_UART1_SHIFT                    (11U)                                               /**< SIM_SCGC4.UART1 Position                */
#define SIM_SCGC4_UART1(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_UART1_SHIFT))&SIM_SCGC4_UART1_MASK) /**< SIM_SCGC4.UART1 Field                   */
#define SIM_SCGC4_UART2_MASK                     (0x1000U)                                           /**< SIM_SCGC4.UART2 Mask                    */
#define SIM_SCGC4_UART2_SHIFT                    (12U)                                               /**< SIM_SCGC4.UART2 Position                */
#define SIM_SCGC4_UART2(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_UART2_SHIFT))&SIM_SCGC4_UART2_MASK) /**< SIM_SCGC4.UART2 Field                   */
#define SIM_SCGC4_UART3_MASK                     (0x2000U)                                           /**< SIM_SCGC4.UART3 Mask                    */
#define SIM_SCGC4_UART3_SHIFT                    (13U)                                               /**< SIM_SCGC4.UART3 Position                */
#define SIM_SCGC4_UART3(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_UART3_SHIFT))&SIM_SCGC4_UART3_MASK) /**< SIM_SCGC4.UART3 Field                   */
#define SIM_SCGC4_USBOTG_MASK                    (0x40000U)                                          /**< SIM_SCGC4.USBOTG Mask                   */
#define SIM_SCGC4_USBOTG_SHIFT                   (18U)                                               /**< SIM_SCGC4.USBOTG Position               */
#define SIM_SCGC4_USBOTG(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_USBOTG_SHIFT))&SIM_SCGC4_USBOTG_MASK) /**< SIM_SCGC4.USBOTG Field                  */
#define SIM_SCGC4_CMP_MASK                       (0x80000U)                                          /**< SIM_SCGC4.CMP Mask                      */
#define SIM_SCGC4_CMP_SHIFT                      (19U)                                               /**< SIM_SCGC4.CMP Position                  */
#define SIM_SCGC4_CMP(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_CMP_SHIFT))&SIM_SCGC4_CMP_MASK) /**< SIM_SCGC4.CMP Field                     */
#define SIM_SCGC4_VREF_MASK                      (0x100000U)                                         /**< SIM_SCGC4.VREF Mask                     */
#define SIM_SCGC4_VREF_SHIFT                     (20U)                                               /**< SIM_SCGC4.VREF Position                 */
#define SIM_SCGC4_VREF(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_VREF_SHIFT))&SIM_SCGC4_VREF_MASK) /**< SIM_SCGC4.VREF Field                    */
#define SIM_SCGC4_LLWU_MASK                      (0x10000000U)                                       /**< SIM_SCGC4.LLWU Mask                     */
#define SIM_SCGC4_LLWU_SHIFT                     (28U)                                               /**< SIM_SCGC4.LLWU Position                 */
#define SIM_SCGC4_LLWU(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC4_LLWU_SHIFT))&SIM_SCGC4_LLWU_MASK) /**< SIM_SCGC4.LLWU Field                    */
/** @} */

/** @name SCGC5 - System Clock Gating Control Register 5 */ /** @{ */
#define SIM_SCGC5_LPTIMER_MASK                   (0x1U)                                              /**< SIM_SCGC5.LPTIMER Mask                  */
#define SIM_SCGC5_LPTIMER_SHIFT                  (0U)                                                /**< SIM_SCGC5.LPTIMER Position              */
#define SIM_SCGC5_LPTIMER(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_LPTIMER_SHIFT))&SIM_SCGC5_LPTIMER_MASK) /**< SIM_SCGC5.LPTIMER Field                 */
#define SIM_SCGC5_TSI0_MASK                      (0x20U)                                             /**< SIM_SCGC5.TSI0 Mask                     */
#define SIM_SCGC5_TSI0_SHIFT                     (5U)                                                /**< SIM_SCGC5.TSI0 Position                 */
#define SIM_SCGC5_TSI0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_TSI0_SHIFT))&SIM_SCGC5_TSI0_MASK) /**< SIM_SCGC5.TSI0 Field                    */
#define SIM_SCGC5_PORTA_MASK                     (0x200U)                                            /**< SIM_SCGC5.PORTA Mask                    */
#define SIM_SCGC5_PORTA_SHIFT                    (9U)                                                /**< SIM_SCGC5.PORTA Position                */
#define SIM_SCGC5_PORTA(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_PORTA_SHIFT))&SIM_SCGC5_PORTA_MASK) /**< SIM_SCGC5.PORTA Field                   */
#define SIM_SCGC5_PORTB_MASK                     (0x400U)                                            /**< SIM_SCGC5.PORTB Mask                    */
#define SIM_SCGC5_PORTB_SHIFT                    (10U)                                               /**< SIM_SCGC5.PORTB Position                */
#define SIM_SCGC5_PORTB(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_PORTB_SHIFT))&SIM_SCGC5_PORTB_MASK) /**< SIM_SCGC5.PORTB Field                   */
#define SIM_SCGC5_PORTC_MASK                     (0x800U)                                            /**< SIM_SCGC5.PORTC Mask                    */
#define SIM_SCGC5_PORTC_SHIFT                    (11U)                                               /**< SIM_SCGC5.PORTC Position                */
#define SIM_SCGC5_PORTC(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_PORTC_SHIFT))&SIM_SCGC5_PORTC_MASK) /**< SIM_SCGC5.PORTC Field                   */
#define SIM_SCGC5_PORTD_MASK                     (0x1000U)                                           /**< SIM_SCGC5.PORTD Mask                    */
#define SIM_SCGC5_PORTD_SHIFT                    (12U)                                               /**< SIM_SCGC5.PORTD Position                */
#define SIM_SCGC5_PORTD(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_PORTD_SHIFT))&SIM_SCGC5_PORTD_MASK) /**< SIM_SCGC5.PORTD Field                   */
#define SIM_SCGC5_PORTE_MASK                     (0x2000U)                                           /**< SIM_SCGC5.PORTE Mask                    */
#define SIM_SCGC5_PORTE_SHIFT                    (13U)                                               /**< SIM_SCGC5.PORTE Position                */
#define SIM_SCGC5_PORTE(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_SCGC5_PORTE_SHIFT))&SIM_SCGC5_PORTE_MASK) /**< SIM_SCGC5.PORTE Field                   */
/** @} */

/** @name SCGC6 - System Clock Gating Control Register 6 */ /** @{ */
#define SIM_SCGC6_FTFL_MASK                      (0x1U)                                              /**< SIM_SCGC6.FTFL Mask                     */
#define SIM_SCGC6_FTFL_SHIFT                     (0U)                                                /**< SIM_SCGC6.FTFL Position                 */
#define SIM_SCGC6_FTFL(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_FTFL_SHIFT))&SIM_SCGC6_FTFL_MASK) /**< SIM_SCGC6.FTFL Field                    */
#define SIM_SCGC6_DMAMUX0_MASK                   (0x2U)                                              /**< SIM_SCGC6.DMAMUX0 Mask                  */
#define SIM_SCGC6_DMAMUX0_SHIFT                  (1U)                                                /**< SIM_SCGC6.DMAMUX0 Position              */
#define SIM_SCGC6_DMAMUX0(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_DMAMUX0_SHIFT))&SIM_SCGC6_DMAMUX0_MASK) /**< SIM_SCGC6.DMAMUX0 Field                 */
#define SIM_SCGC6_CAN0_MASK                      (0x10U)                                             /**< SIM_SCGC6.CAN0 Mask                     */
#define SIM_SCGC6_CAN0_SHIFT                     (4U)                                                /**< SIM_SCGC6.CAN0 Position                 */
#define SIM_SCGC6_CAN0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_CAN0_SHIFT))&SIM_SCGC6_CAN0_MASK) /**< SIM_SCGC6.CAN0 Field                    */
#define SIM_SCGC6_SPI0_MASK                      (0x1000U)                                           /**< SIM_SCGC6.SPI0 Mask                     */
#define SIM_SCGC6_SPI0_SHIFT                     (12U)                                               /**< SIM_SCGC6.SPI0 Position                 */
#define SIM_SCGC6_SPI0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_SPI0_SHIFT))&SIM_SCGC6_SPI0_MASK) /**< SIM_SCGC6.SPI0 Field                    */
#define SIM_SCGC6_SPI1_MASK                      (0x2000U)                                           /**< SIM_SCGC6.SPI1 Mask                     */
#define SIM_SCGC6_SPI1_SHIFT                     (13U)                                               /**< SIM_SCGC6.SPI1 Position                 */
#define SIM_SCGC6_SPI1(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_SPI1_SHIFT))&SIM_SCGC6_SPI1_MASK) /**< SIM_SCGC6.SPI1 Field                    */
#define SIM_SCGC6_I2S_MASK                       (0x8000U)                                           /**< SIM_SCGC6.I2S Mask                      */
#define SIM_SCGC6_I2S_SHIFT                      (15U)                                               /**< SIM_SCGC6.I2S Position                  */
#define SIM_SCGC6_I2S(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_I2S_SHIFT))&SIM_SCGC6_I2S_MASK) /**< SIM_SCGC6.I2S Field                     */
#define SIM_SCGC6_CRC_MASK                       (0x40000U)                                          /**< SIM_SCGC6.CRC Mask                      */
#define SIM_SCGC6_CRC_SHIFT                      (18U)                                               /**< SIM_SCGC6.CRC Position                  */
#define SIM_SCGC6_CRC(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_CRC_SHIFT))&SIM_SCGC6_CRC_MASK) /**< SIM_SCGC6.CRC Field                     */
#define SIM_SCGC6_USBDCD_MASK                    (0x200000U)                                         /**< SIM_SCGC6.USBDCD Mask                   */
#define SIM_SCGC6_USBDCD_SHIFT                   (21U)                                               /**< SIM_SCGC6.USBDCD Position               */
#define SIM_SCGC6_USBDCD(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_USBDCD_SHIFT))&SIM_SCGC6_USBDCD_MASK) /**< SIM_SCGC6.USBDCD Field                  */
#define SIM_SCGC6_PDB_MASK                       (0x400000U)                                         /**< SIM_SCGC6.PDB Mask                      */
#define SIM_SCGC6_PDB_SHIFT                      (22U)                                               /**< SIM_SCGC6.PDB Position                  */
#define SIM_SCGC6_PDB(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_PDB_SHIFT))&SIM_SCGC6_PDB_MASK) /**< SIM_SCGC6.PDB Field                     */
#define SIM_SCGC6_PIT_MASK                       (0x800000U)                                         /**< SIM_SCGC6.PIT Mask                      */
#define SIM_SCGC6_PIT_SHIFT                      (23U)                                               /**< SIM_SCGC6.PIT Position                  */
#define SIM_SCGC6_PIT(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_PIT_SHIFT))&SIM_SCGC6_PIT_MASK) /**< SIM_SCGC6.PIT Field                     */
#define SIM_SCGC6_FTM0_MASK                      (0x1000000U)                                        /**< SIM_SCGC6.FTM0 Mask                     */
#define SIM_SCGC6_FTM0_SHIFT                     (24U)                                               /**< SIM_SCGC6.FTM0 Position                 */
#define SIM_SCGC6_FTM0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_FTM0_SHIFT))&SIM_SCGC6_FTM0_MASK) /**< SIM_SCGC6.FTM0 Field                    */
#define SIM_SCGC6_FTM1_MASK                      (0x2000000U)                                        /**< SIM_SCGC6.FTM1 Mask                     */
#define SIM_SCGC6_FTM1_SHIFT                     (25U)                                               /**< SIM_SCGC6.FTM1 Position                 */
#define SIM_SCGC6_FTM1(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_FTM1_SHIFT))&SIM_SCGC6_FTM1_MASK) /**< SIM_SCGC6.FTM1 Field                    */
#define SIM_SCGC6_ADC0_MASK                      (0x8000000U)                                        /**< SIM_SCGC6.ADC0 Mask                     */
#define SIM_SCGC6_ADC0_SHIFT                     (27U)                                               /**< SIM_SCGC6.ADC0 Position                 */
#define SIM_SCGC6_ADC0(x)                        (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_ADC0_SHIFT))&SIM_SCGC6_ADC0_MASK) /**< SIM_SCGC6.ADC0 Field                    */
#define SIM_SCGC6_RTC_MASK                       (0x20000000U)                                       /**< SIM_SCGC6.RTC Mask                      */
#define SIM_SCGC6_RTC_SHIFT                      (29U)                                               /**< SIM_SCGC6.RTC Position                  */
#define SIM_SCGC6_RTC(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC6_RTC_SHIFT))&SIM_SCGC6_RTC_MASK) /**< SIM_SCGC6.RTC Field                     */
/** @} */

/** @name SCGC7 - System Clock Gating Control Register 7 */ /** @{ */
#define SIM_SCGC7_FLEXBUS_MASK                   (0x1U)                                              /**< SIM_SCGC7.FLEXBUS Mask                  */
#define SIM_SCGC7_FLEXBUS_SHIFT                  (0U)                                                /**< SIM_SCGC7.FLEXBUS Position              */
#define SIM_SCGC7_FLEXBUS(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_SCGC7_FLEXBUS_SHIFT))&SIM_SCGC7_FLEXBUS_MASK) /**< SIM_SCGC7.FLEXBUS Field                 */
#define SIM_SCGC7_DMA_MASK                       (0x2U)                                              /**< SIM_SCGC7.DMA Mask                      */
#define SIM_SCGC7_DMA_SHIFT                      (1U)                                                /**< SIM_SCGC7.DMA Position                  */
#define SIM_SCGC7_DMA(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC7_DMA_SHIFT))&SIM_SCGC7_DMA_MASK) /**< SIM_SCGC7.DMA Field                     */
#define SIM_SCGC7_MPU_MASK                       (0x4U)                                              /**< SIM_SCGC7.MPU Mask                      */
#define SIM_SCGC7_MPU_SHIFT                      (2U)                                                /**< SIM_SCGC7.MPU Position                  */
#define SIM_SCGC7_MPU(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_SCGC7_MPU_SHIFT))&SIM_SCGC7_MPU_MASK) /**< SIM_SCGC7.MPU Field                     */
/** @} */

/** @name CLKDIV1 - System Clock Divider Register 1 */ /** @{ */
#define SIM_CLKDIV1_OUTDIV4_MASK                 (0xF0000U)                                          /**< SIM_CLKDIV1.OUTDIV4 Mask                */
#define SIM_CLKDIV1_OUTDIV4_SHIFT                (16U)                                               /**< SIM_CLKDIV1.OUTDIV4 Position            */
#define SIM_CLKDIV1_OUTDIV4(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV1_OUTDIV4_SHIFT))&SIM_CLKDIV1_OUTDIV4_MASK) /**< SIM_CLKDIV1.OUTDIV4 Field               */
#define SIM_CLKDIV1_OUTDIV3_MASK                 (0xF00000U)                                         /**< SIM_CLKDIV1.OUTDIV3 Mask                */
#define SIM_CLKDIV1_OUTDIV3_SHIFT                (20U)                                               /**< SIM_CLKDIV1.OUTDIV3 Position            */
#define SIM_CLKDIV1_OUTDIV3(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV1_OUTDIV3_SHIFT))&SIM_CLKDIV1_OUTDIV3_MASK) /**< SIM_CLKDIV1.OUTDIV3 Field               */
#define SIM_CLKDIV1_OUTDIV2_MASK                 (0xF000000U)                                        /**< SIM_CLKDIV1.OUTDIV2 Mask                */
#define SIM_CLKDIV1_OUTDIV2_SHIFT                (24U)                                               /**< SIM_CLKDIV1.OUTDIV2 Position            */
#define SIM_CLKDIV1_OUTDIV2(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV1_OUTDIV2_SHIFT))&SIM_CLKDIV1_OUTDIV2_MASK) /**< SIM_CLKDIV1.OUTDIV2 Field               */
#define SIM_CLKDIV1_OUTDIV1_MASK                 (0xF0000000U)                                       /**< SIM_CLKDIV1.OUTDIV1 Mask                */
#define SIM_CLKDIV1_OUTDIV1_SHIFT                (28U)                                               /**< SIM_CLKDIV1.OUTDIV1 Position            */
#define SIM_CLKDIV1_OUTDIV1(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV1_OUTDIV1_SHIFT))&SIM_CLKDIV1_OUTDIV1_MASK) /**< SIM_CLKDIV1.OUTDIV1 Field               */
/** @} */

/** @name CLKDIV2 - System Clock Divider Register 2 */ /** @{ */
#define SIM_CLKDIV2_USBFRAC_MASK                 (0x1U)                                              /**< SIM_CLKDIV2.USBFRAC Mask                */
#define SIM_CLKDIV2_USBFRAC_SHIFT                (0U)                                                /**< SIM_CLKDIV2.USBFRAC Position            */
#define SIM_CLKDIV2_USBFRAC(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV2_USBFRAC_SHIFT))&SIM_CLKDIV2_USBFRAC_MASK) /**< SIM_CLKDIV2.USBFRAC Field               */
#define SIM_CLKDIV2_USBDIV_MASK                  (0xEU)                                              /**< SIM_CLKDIV2.USBDIV Mask                 */
#define SIM_CLKDIV2_USBDIV_SHIFT                 (1U)                                                /**< SIM_CLKDIV2.USBDIV Position             */
#define SIM_CLKDIV2_USBDIV(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_CLKDIV2_USBDIV_SHIFT))&SIM_CLKDIV2_USBDIV_MASK) /**< SIM_CLKDIV2.USBDIV Field                */
/** @} */

/** @name FCFG1 - Flash Configuration Register 1 */ /** @{ */
#define SIM_FCFG1_FLASHDIS_MASK                  (0x1U)                                              /**< SIM_FCFG1.FLASHDIS Mask                 */
#define SIM_FCFG1_FLASHDIS_SHIFT                 (0U)                                                /**< SIM_FCFG1.FLASHDIS Position             */
#define SIM_FCFG1_FLASHDIS(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_FLASHDIS_SHIFT))&SIM_FCFG1_FLASHDIS_MASK) /**< SIM_FCFG1.FLASHDIS Field                */
#define SIM_FCFG1_FLASHDOZE_MASK                 (0x2U)                                              /**< SIM_FCFG1.FLASHDOZE Mask                */
#define SIM_FCFG1_FLASHDOZE_SHIFT                (1U)                                                /**< SIM_FCFG1.FLASHDOZE Position            */
#define SIM_FCFG1_FLASHDOZE(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_FLASHDOZE_SHIFT))&SIM_FCFG1_FLASHDOZE_MASK) /**< SIM_FCFG1.FLASHDOZE Field               */
#define SIM_FCFG1_DEPART_MASK                    (0xF00U)                                            /**< SIM_FCFG1.DEPART Mask                   */
#define SIM_FCFG1_DEPART_SHIFT                   (8U)                                                /**< SIM_FCFG1.DEPART Position               */
#define SIM_FCFG1_DEPART(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_DEPART_SHIFT))&SIM_FCFG1_DEPART_MASK) /**< SIM_FCFG1.DEPART Field                  */
#define SIM_FCFG1_EESIZE_MASK                    (0xF0000U)                                          /**< SIM_FCFG1.EESIZE Mask                   */
#define SIM_FCFG1_EESIZE_SHIFT                   (16U)                                               /**< SIM_FCFG1.EESIZE Position               */
#define SIM_FCFG1_EESIZE(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_EESIZE_SHIFT))&SIM_FCFG1_EESIZE_MASK) /**< SIM_FCFG1.EESIZE Field                  */
#define SIM_FCFG1_PFSIZE_MASK                    (0xF000000U)                                        /**< SIM_FCFG1.PFSIZE Mask                   */
#define SIM_FCFG1_PFSIZE_SHIFT                   (24U)                                               /**< SIM_FCFG1.PFSIZE Position               */
#define SIM_FCFG1_PFSIZE(x)                      (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_PFSIZE_SHIFT))&SIM_FCFG1_PFSIZE_MASK) /**< SIM_FCFG1.PFSIZE Field                  */
#define SIM_FCFG1_NVMSIZE_MASK                   (0xF0000000U)                                       /**< SIM_FCFG1.NVMSIZE Mask                  */
#define SIM_FCFG1_NVMSIZE_SHIFT                  (28U)                                               /**< SIM_FCFG1.NVMSIZE Position              */
#define SIM_FCFG1_NVMSIZE(x)                     (((uint32_t)(((uint32_t)(x))<<SIM_FCFG1_NVMSIZE_SHIFT))&SIM_FCFG1_NVMSIZE_MASK) /**< SIM_FCFG1.NVMSIZE Field                 */
/** @} */

/** @name FCFG2 - Flash Configuration Register 2 */ /** @{ */
#define SIM_FCFG2_MAXADDR1_MASK                  (0x7F0000U)                                         /**< SIM_FCFG2.MAXADDR1 Mask                 */
#define SIM_FCFG2_MAXADDR1_SHIFT                 (16U)                                               /**< SIM_FCFG2.MAXADDR1 Position             */
#define SIM_FCFG2_MAXADDR1(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_FCFG2_MAXADDR1_SHIFT))&SIM_FCFG2_MAXADDR1_MASK) /**< SIM_FCFG2.MAXADDR1 Field                */
#define SIM_FCFG2_PFLSH_MASK                     (0x800000U)                                         /**< SIM_FCFG2.PFLSH Mask                    */
#define SIM_FCFG2_PFLSH_SHIFT                    (23U)                                               /**< SIM_FCFG2.PFLSH Position                */
#define SIM_FCFG2_PFLSH(x)                       (((uint32_t)(((uint32_t)(x))<<SIM_FCFG2_PFLSH_SHIFT))&SIM_FCFG2_PFLSH_MASK) /**< SIM_FCFG2.PFLSH Field                   */
#define SIM_FCFG2_MAXADDR0_MASK                  (0x7F000000U)                                       /**< SIM_FCFG2.MAXADDR0 Mask                 */
#define SIM_FCFG2_MAXADDR0_SHIFT                 (24U)                                               /**< SIM_FCFG2.MAXADDR0 Position             */
#define SIM_FCFG2_MAXADDR0(x)                    (((uint32_t)(((uint32_t)(x))<<SIM_FCFG2_MAXADDR0_SHIFT))&SIM_FCFG2_MAXADDR0_MASK) /**< SIM_FCFG2.MAXADDR0 Field                */
#define SIM_FCFG2_SWAPPFLSH_MASK                 (0x80000000U)                                       /**< SIM_FCFG2.SWAPPFLSH Mask                */
#define SIM_FCFG2_SWAPPFLSH_SHIFT                (31U)                                               /**< SIM_FCFG2.SWAPPFLSH Position            */
#define SIM_FCFG2_SWAPPFLSH(x)                   (((uint32_t)(((uint32_t)(x))<<SIM_FCFG2_SWAPPFLSH_SHIFT))&SIM_FCFG2_SWAPPFLSH_MASK) /**< SIM_FCFG2.SWAPPFLSH Field               */
/** @} */

/** @name UIDH - Unique Identification Register High */ /** @{ */
#define SIM_UIDH_UID_MASK                        (0xFFFFFFFFU)                                       /**< SIM_UIDH.UID Mask                       */
#define SIM_UIDH_UID_SHIFT                       (0U)                                                /**< SIM_UIDH.UID Position                   */
#define SIM_UIDH_UID(x)                          (((uint32_t)(((uint32_t)(x))<<SIM_UIDH_UID_SHIFT))&SIM_UIDH_UID_MASK) /**< SIM_UIDH.UID Field                      */
/** @} */

/** @name UIDMH - Unique Identification Register Mid-High */ /** @{ */
#define SIM_UIDMH_UID_MASK                       (0xFFFFFFFFU)                                       /**< SIM_UIDMH.UID Mask                      */
#define SIM_UIDMH_UID_SHIFT                      (0U)                                                /**< SIM_UIDMH.UID Position                  */
#define SIM_UIDMH_UID(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_UIDMH_UID_SHIFT))&SIM_UIDMH_UID_MASK) /**< SIM_UIDMH.UID Field                     */
/** @} */

/** @name UIDML - Unique Identification Register Mid Low */ /** @{ */
#define SIM_UIDML_UID_MASK                       (0xFFFFFFFFU)                                       /**< SIM_UIDML.UID Mask                      */
#define SIM_UIDML_UID_SHIFT                      (0U)                                                /**< SIM_UIDML.UID Position                  */
#define SIM_UIDML_UID(x)                         (((uint32_t)(((uint32_t)(x))<<SIM_UIDML_UID_SHIFT))&SIM_UIDML_UID_MASK) /**< SIM_UIDML.UID Field                     */
/** @} */

/** @name UIDL - Unique Identification Register Low */ /** @{ */
#define SIM_UIDL_UID_MASK                        (0xFFFFFFFFU)                                       /**< SIM_UIDL.UID Mask                       */
#define SIM_UIDL_UID_SHIFT                       (0U)                                                /**< SIM_UIDL.UID Position                   */
#define SIM_UIDL_UID(x)                          (((uint32_t)(((uint32_t)(x))<<SIM_UIDL_UID_SHIFT))&SIM_UIDL_UID_MASK) /**< SIM_UIDL.UID Field                      */
/** @} */

/** @} */ /* End group SIM_Register_Masks_GROUP */


/* SIM - Peripheral instance base addresses */
#define SIM_BasePtr                    0x40047000UL //!< Peripheral base address
#define SIM                            ((SIM_Type *) SIM_BasePtr) //!< Freescale base pointer
#define SIM_BASE_PTR                   (SIM) //!< Freescale style base pointer

/** @} */ /* End group SIM_Peripheral_access_layer_GROUP */


/** @brief C Struct for SMC */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SMC_Peripheral_access_layer_GROUP SMC Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SMC (file:SMC_MK10D10)               ================ */
/* ================================================================================ */

/**
 * @brief System Mode Controller
 */
/**
 * @struct SMC_Type
 * @brief  C Struct allowing access to SMC registers
 */
typedef struct SMC_Type {
   __IO uint8_t   PMPROT;                       /**< 0000: Power Mode Protection Register                               */
   __IO uint8_t   PMCTRL;                       /**< 0001: Power Mode Control Register                                  */
   union {                                      /**< 0002: (size=0001)                                                  */
      __IO uint8_t   STOPCTRL;                  /**< 0002: Stop Control Register                                        */
      __IO uint8_t   VLLSCTRL;                  /**< 0002: VLLS Control Register (old name)                             */
   };
   __I  uint8_t   PMSTAT;                       /**< 0003: Power Mode Status Register                                   */
} SMC_Type;


/** @brief Register Masks for SMC */

/* -------------------------------------------------------------------------------- */
/* -----------     'SMC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup SMC_Register_Masks_GROUP SMC Register Masks */
/** @{ */

/** @name PMPROT - Power Mode Protection Register */ /** @{ */
#define SMC_PMPROT_AVLLS_MASK                    (0x2U)                                              /**< SMC_PMPROT.AVLLS Mask                   */
#define SMC_PMPROT_AVLLS_SHIFT                   (1U)                                                /**< SMC_PMPROT.AVLLS Position               */
#define SMC_PMPROT_AVLLS(x)                      (((uint8_t)(((uint8_t)(x))<<SMC_PMPROT_AVLLS_SHIFT))&SMC_PMPROT_AVLLS_MASK) /**< SMC_PMPROT.AVLLS Field                  */
#define SMC_PMPROT_ALLS_MASK                     (0x8U)                                              /**< SMC_PMPROT.ALLS Mask                    */
#define SMC_PMPROT_ALLS_SHIFT                    (3U)                                                /**< SMC_PMPROT.ALLS Position                */
#define SMC_PMPROT_ALLS(x)                       (((uint8_t)(((uint8_t)(x))<<SMC_PMPROT_ALLS_SHIFT))&SMC_PMPROT_ALLS_MASK) /**< SMC_PMPROT.ALLS Field                   */
#define SMC_PMPROT_AVLP_MASK                     (0x20U)                                             /**< SMC_PMPROT.AVLP Mask                    */
#define SMC_PMPROT_AVLP_SHIFT                    (5U)                                                /**< SMC_PMPROT.AVLP Position                */
#define SMC_PMPROT_AVLP(x)                       (((uint8_t)(((uint8_t)(x))<<SMC_PMPROT_AVLP_SHIFT))&SMC_PMPROT_AVLP_MASK) /**< SMC_PMPROT.AVLP Field                   */
/** @} */

/** @name PMCTRL - Power Mode Control Register */ /** @{ */
#define SMC_PMCTRL_STOPM_MASK                    (0x7U)                                              /**< SMC_PMCTRL.STOPM Mask                   */
#define SMC_PMCTRL_STOPM_SHIFT                   (0U)                                                /**< SMC_PMCTRL.STOPM Position               */
#define SMC_PMCTRL_STOPM(x)                      (((uint8_t)(((uint8_t)(x))<<SMC_PMCTRL_STOPM_SHIFT))&SMC_PMCTRL_STOPM_MASK) /**< SMC_PMCTRL.STOPM Field                  */
#define SMC_PMCTRL_STOPA_MASK                    (0x8U)                                              /**< SMC_PMCTRL.STOPA Mask                   */
#define SMC_PMCTRL_STOPA_SHIFT                   (3U)                                                /**< SMC_PMCTRL.STOPA Position               */
#define SMC_PMCTRL_STOPA(x)                      (((uint8_t)(((uint8_t)(x))<<SMC_PMCTRL_STOPA_SHIFT))&SMC_PMCTRL_STOPA_MASK) /**< SMC_PMCTRL.STOPA Field                  */
#define SMC_PMCTRL_RUNM_MASK                     (0x60U)                                             /**< SMC_PMCTRL.RUNM Mask                    */
#define SMC_PMCTRL_RUNM_SHIFT                    (5U)                                                /**< SMC_PMCTRL.RUNM Position                */
#define SMC_PMCTRL_RUNM(x)                       (((uint8_t)(((uint8_t)(x))<<SMC_PMCTRL_RUNM_SHIFT))&SMC_PMCTRL_RUNM_MASK) /**< SMC_PMCTRL.RUNM Field                   */
#define SMC_PMCTRL_LPWUI_MASK                    (0x80U)                                             /**< SMC_PMCTRL.LPWUI Mask                   */
#define SMC_PMCTRL_LPWUI_SHIFT                   (7U)                                                /**< SMC_PMCTRL.LPWUI Position               */
#define SMC_PMCTRL_LPWUI(x)                      (((uint8_t)(((uint8_t)(x))<<SMC_PMCTRL_LPWUI_SHIFT))&SMC_PMCTRL_LPWUI_MASK) /**< SMC_PMCTRL.LPWUI Field                  */
/** @} */

/** @name STOPCTRL - Stop Control Register */ /** @{ */
#define SMC_STOPCTRL_LLSM_MASK                   (0x7U)                                              /**< SMC_STOPCTRL.LLSM Mask                  */
#define SMC_STOPCTRL_LLSM_SHIFT                  (0U)                                                /**< SMC_STOPCTRL.LLSM Position              */
#define SMC_STOPCTRL_LLSM(x)                     (((uint8_t)(((uint8_t)(x))<<SMC_STOPCTRL_LLSM_SHIFT))&SMC_STOPCTRL_LLSM_MASK) /**< SMC_STOPCTRL.LLSM Field                 */
#define SMC_STOPCTRL_VLLSM_MASK                  (0x7U)                                              /**< SMC_STOPCTRL.VLLSM Mask                 */
#define SMC_STOPCTRL_VLLSM_SHIFT                 (0U)                                                /**< SMC_STOPCTRL.VLLSM Position             */
#define SMC_STOPCTRL_VLLSM(x)                    (((uint8_t)(((uint8_t)(x))<<SMC_STOPCTRL_VLLSM_SHIFT))&SMC_STOPCTRL_VLLSM_MASK) /**< SMC_STOPCTRL.VLLSM Field                */
#define SMC_STOPCTRL_RAM2PO_MASK                 (0x10U)                                             /**< SMC_STOPCTRL.RAM2PO Mask                */
#define SMC_STOPCTRL_RAM2PO_SHIFT                (4U)                                                /**< SMC_STOPCTRL.RAM2PO Position            */
#define SMC_STOPCTRL_RAM2PO(x)                   (((uint8_t)(((uint8_t)(x))<<SMC_STOPCTRL_RAM2PO_SHIFT))&SMC_STOPCTRL_RAM2PO_MASK) /**< SMC_STOPCTRL.RAM2PO Field               */
/** @} */

/** @name VLLSCTRL - VLLS Control Register (old name) */ /** @{ */
#define SMC_VLLSCTRL_LLSM_MASK                   (0x7U)                                              /**< SMC_VLLSCTRL.LLSM Mask                  */
#define SMC_VLLSCTRL_LLSM_SHIFT                  (0U)                                                /**< SMC_VLLSCTRL.LLSM Position              */
#define SMC_VLLSCTRL_LLSM(x)                     (((uint8_t)(((uint8_t)(x))<<SMC_VLLSCTRL_LLSM_SHIFT))&SMC_VLLSCTRL_LLSM_MASK) /**< SMC_VLLSCTRL.LLSM Field                 */
#define SMC_VLLSCTRL_VLLSM_MASK                  (0x7U)                                              /**< SMC_VLLSCTRL.VLLSM Mask                 */
#define SMC_VLLSCTRL_VLLSM_SHIFT                 (0U)                                                /**< SMC_VLLSCTRL.VLLSM Position             */
#define SMC_VLLSCTRL_VLLSM(x)                    (((uint8_t)(((uint8_t)(x))<<SMC_VLLSCTRL_VLLSM_SHIFT))&SMC_VLLSCTRL_VLLSM_MASK) /**< SMC_VLLSCTRL.VLLSM Field                */
#define SMC_VLLSCTRL_RAM2PO_MASK                 (0x10U)                                             /**< SMC_VLLSCTRL.RAM2PO Mask                */
#define SMC_VLLSCTRL_RAM2PO_SHIFT                (4U)                                                /**< SMC_VLLSCTRL.RAM2PO Position            */
#define SMC_VLLSCTRL_RAM2PO(x)                   (((uint8_t)(((uint8_t)(x))<<SMC_VLLSCTRL_RAM2PO_SHIFT))&SMC_VLLSCTRL_RAM2PO_MASK) /**< SMC_VLLSCTRL.RAM2PO Field               */
/** @} */

/** @name PMSTAT - Power Mode Status Register */ /** @{ */
#define SMC_PMSTAT_PMSTAT_MASK                   (0xFFU)                                             /**< SMC_PMSTAT.PMSTAT Mask                  */
#define SMC_PMSTAT_PMSTAT_SHIFT                  (0U)                                                /**< SMC_PMSTAT.PMSTAT Position              */
#define SMC_PMSTAT_PMSTAT(x)                     (((uint8_t)(((uint8_t)(x))<<SMC_PMSTAT_PMSTAT_SHIFT))&SMC_PMSTAT_PMSTAT_MASK) /**< SMC_PMSTAT.PMSTAT Field                 */
/** @} */

/** @} */ /* End group SMC_Register_Masks_GROUP */


/* SMC - Peripheral instance base addresses */
#define SMC_BasePtr                    0x4007E000UL //!< Peripheral base address
#define SMC                            ((SMC_Type *) SMC_BasePtr) //!< Freescale base pointer
#define SMC_BASE_PTR                   (SMC) //!< Freescale style base pointer

/** @} */ /* End group SMC_Peripheral_access_layer_GROUP */


/** @brief C Struct for SPI */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SPI_Peripheral_access_layer_GROUP SPI Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SPI0 (file:SPI0_MK_PCSIS6)           ================ */
/* ================================================================================ */

/**
 * @brief Serial Peripheral Interface
 */
/**
 * @struct SPI_Type
 * @brief  C Struct allowing access to SPI registers
 */
typedef struct SPI_Type {
   __IO uint32_t  MCR;                          /**< 0000: Module Configuration Register                                */
        uint8_t   RESERVED_0[4];                /**< 0004: 0x4 bytes                                                    */
   __IO uint32_t  TCR;                          /**< 0008: Transfer Count Register                                      */
   union {                                      /**< 000C: (size=0008)                                                  */
      __IO uint32_t  CTAR[2];                   /**< 000C: Clock and Transfer Attributes Register (In Master Mode)      */
      __IO uint32_t  CTAR_SLAVE;                /**< 000C: Clock and Transfer Attributes Register (In Slave Mode)       */
   };
        uint8_t   RESERVED_1[24];               /**< 0014: 0x18 bytes                                                   */
   __IO uint32_t  SR;                           /**< 002C: Status register                                              */
   __IO uint32_t  RSER;                         /**< 0030: DMA/Interrupt Request Select and Enable Register             */
   union {                                      /**< 0034: (size=0004)                                                  */
      __IO uint32_t  PUSHR;                     /**< 0034: PUSH TX FIFO Register In Master Mode                         */
      __IO uint32_t  PUSHR_SLAVE;               /**< 0034: PUSH TX FIFO Register In Slave Mode                          */
   };
   __I  uint32_t  POPR;                         /**< 0038: POP RX FIFO Register                                         */
   __I  uint32_t  TXFR[4];                      /**< 003C: Transmit FIFO                                                */
        uint8_t   RESERVED_2[48];               /**< 004C: 0x30 bytes                                                   */
   __I  uint32_t  RXFR[4];                      /**< 007C: Receive FIFO                                                 */
} SPI_Type;


/** @brief Register Masks for SPI */

/* -------------------------------------------------------------------------------- */
/* -----------     'SPI0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup SPI_Register_Masks_GROUP SPI Register Masks */
/** @{ */

/** @name MCR - Module Configuration Register */ /** @{ */
#define SPI_MCR_HALT_MASK                        (0x1U)                                              /**< SPI0_MCR.HALT Mask                      */
#define SPI_MCR_HALT_SHIFT                       (0U)                                                /**< SPI0_MCR.HALT Position                  */
#define SPI_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_HALT_SHIFT))&SPI_MCR_HALT_MASK) /**< SPI0_MCR.HALT Field                     */
#define SPI_MCR_SMPL_PT_MASK                     (0x300U)                                            /**< SPI0_MCR.SMPL_PT Mask                   */
#define SPI_MCR_SMPL_PT_SHIFT                    (8U)                                                /**< SPI0_MCR.SMPL_PT Position               */
#define SPI_MCR_SMPL_PT(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_SMPL_PT_SHIFT))&SPI_MCR_SMPL_PT_MASK) /**< SPI0_MCR.SMPL_PT Field                  */
#define SPI_MCR_CLR_RXF_MASK                     (0x400U)                                            /**< SPI0_MCR.CLR_RXF Mask                   */
#define SPI_MCR_CLR_RXF_SHIFT                    (10U)                                               /**< SPI0_MCR.CLR_RXF Position               */
#define SPI_MCR_CLR_RXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CLR_RXF_SHIFT))&SPI_MCR_CLR_RXF_MASK) /**< SPI0_MCR.CLR_RXF Field                  */
#define SPI_MCR_CLR_TXF_MASK                     (0x800U)                                            /**< SPI0_MCR.CLR_TXF Mask                   */
#define SPI_MCR_CLR_TXF_SHIFT                    (11U)                                               /**< SPI0_MCR.CLR_TXF Position               */
#define SPI_MCR_CLR_TXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CLR_TXF_SHIFT))&SPI_MCR_CLR_TXF_MASK) /**< SPI0_MCR.CLR_TXF Field                  */
#define SPI_MCR_DIS_RXF_MASK                     (0x1000U)                                           /**< SPI0_MCR.DIS_RXF Mask                   */
#define SPI_MCR_DIS_RXF_SHIFT                    (12U)                                               /**< SPI0_MCR.DIS_RXF Position               */
#define SPI_MCR_DIS_RXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DIS_RXF_SHIFT))&SPI_MCR_DIS_RXF_MASK) /**< SPI0_MCR.DIS_RXF Field                  */
#define SPI_MCR_DIS_TXF_MASK                     (0x2000U)                                           /**< SPI0_MCR.DIS_TXF Mask                   */
#define SPI_MCR_DIS_TXF_SHIFT                    (13U)                                               /**< SPI0_MCR.DIS_TXF Position               */
#define SPI_MCR_DIS_TXF(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DIS_TXF_SHIFT))&SPI_MCR_DIS_TXF_MASK) /**< SPI0_MCR.DIS_TXF Field                  */
#define SPI_MCR_MDIS_MASK                        (0x4000U)                                           /**< SPI0_MCR.MDIS Mask                      */
#define SPI_MCR_MDIS_SHIFT                       (14U)                                               /**< SPI0_MCR.MDIS Position                  */
#define SPI_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MDIS_SHIFT))&SPI_MCR_MDIS_MASK) /**< SPI0_MCR.MDIS Field                     */
#define SPI_MCR_DOZE_MASK                        (0x8000U)                                           /**< SPI0_MCR.DOZE Mask                      */
#define SPI_MCR_DOZE_SHIFT                       (15U)                                               /**< SPI0_MCR.DOZE Position                  */
#define SPI_MCR_DOZE(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DOZE_SHIFT))&SPI_MCR_DOZE_MASK) /**< SPI0_MCR.DOZE Field                     */
#define SPI_MCR_PCSIS_MASK                       (0x3F0000U)                                         /**< SPI0_MCR.PCSIS Mask                     */
#define SPI_MCR_PCSIS_SHIFT                      (16U)                                               /**< SPI0_MCR.PCSIS Position                 */
#define SPI_MCR_PCSIS(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_PCSIS_SHIFT))&SPI_MCR_PCSIS_MASK) /**< SPI0_MCR.PCSIS Field                    */
#define SPI_MCR_ROOE_MASK                        (0x1000000U)                                        /**< SPI0_MCR.ROOE Mask                      */
#define SPI_MCR_ROOE_SHIFT                       (24U)                                               /**< SPI0_MCR.ROOE Position                  */
#define SPI_MCR_ROOE(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_ROOE_SHIFT))&SPI_MCR_ROOE_MASK) /**< SPI0_MCR.ROOE Field                     */
#define SPI_MCR_MTFE_MASK                        (0x4000000U)                                        /**< SPI0_MCR.MTFE Mask                      */
#define SPI_MCR_MTFE_SHIFT                       (26U)                                               /**< SPI0_MCR.MTFE Position                  */
#define SPI_MCR_MTFE(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MTFE_SHIFT))&SPI_MCR_MTFE_MASK) /**< SPI0_MCR.MTFE Field                     */
#define SPI_MCR_FRZ_MASK                         (0x8000000U)                                        /**< SPI0_MCR.FRZ Mask                       */
#define SPI_MCR_FRZ_SHIFT                        (27U)                                               /**< SPI0_MCR.FRZ Position                   */
#define SPI_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_MCR_FRZ_SHIFT))&SPI_MCR_FRZ_MASK) /**< SPI0_MCR.FRZ Field                      */
#define SPI_MCR_DCONF_MASK                       (0x30000000U)                                       /**< SPI0_MCR.DCONF Mask                     */
#define SPI_MCR_DCONF_SHIFT                      (28U)                                               /**< SPI0_MCR.DCONF Position                 */
#define SPI_MCR_DCONF(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_MCR_DCONF_SHIFT))&SPI_MCR_DCONF_MASK) /**< SPI0_MCR.DCONF Field                    */
#define SPI_MCR_CONT_SCKE_MASK                   (0x40000000U)                                       /**< SPI0_MCR.CONT_SCKE Mask                 */
#define SPI_MCR_CONT_SCKE_SHIFT                  (30U)                                               /**< SPI0_MCR.CONT_SCKE Position             */
#define SPI_MCR_CONT_SCKE(x)                     (((uint32_t)(((uint32_t)(x))<<SPI_MCR_CONT_SCKE_SHIFT))&SPI_MCR_CONT_SCKE_MASK) /**< SPI0_MCR.CONT_SCKE Field                */
#define SPI_MCR_MSTR_MASK                        (0x80000000U)                                       /**< SPI0_MCR.MSTR Mask                      */
#define SPI_MCR_MSTR_SHIFT                       (31U)                                               /**< SPI0_MCR.MSTR Position                  */
#define SPI_MCR_MSTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_MCR_MSTR_SHIFT))&SPI_MCR_MSTR_MASK) /**< SPI0_MCR.MSTR Field                     */
/** @} */

/** @name TCR - Transfer Count Register */ /** @{ */
#define SPI_TCR_SPI_TCNT_MASK                    (0xFFFF0000U)                                       /**< SPI0_TCR.SPI_TCNT Mask                  */
#define SPI_TCR_SPI_TCNT_SHIFT                   (16U)                                               /**< SPI0_TCR.SPI_TCNT Position              */
#define SPI_TCR_SPI_TCNT(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_TCR_SPI_TCNT_SHIFT))&SPI_TCR_SPI_TCNT_MASK) /**< SPI0_TCR.SPI_TCNT Field                 */
/** @} */

/** @name CTAR - Clock and Transfer Attributes Register (In Master Mode) */ /** @{ */
#define SPI_CTAR_BR_MASK                         (0xFU)                                              /**< SPI0_CTAR.BR Mask                       */
#define SPI_CTAR_BR_SHIFT                        (0U)                                                /**< SPI0_CTAR.BR Position                   */
#define SPI_CTAR_BR(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_BR_SHIFT))&SPI_CTAR_BR_MASK) /**< SPI0_CTAR.BR Field                      */
#define SPI_CTAR_DT_MASK                         (0xF0U)                                             /**< SPI0_CTAR.DT Mask                       */
#define SPI_CTAR_DT_SHIFT                        (4U)                                                /**< SPI0_CTAR.DT Position                   */
#define SPI_CTAR_DT(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_DT_SHIFT))&SPI_CTAR_DT_MASK) /**< SPI0_CTAR.DT Field                      */
#define SPI_CTAR_ASC_MASK                        (0xF00U)                                            /**< SPI0_CTAR.ASC Mask                      */
#define SPI_CTAR_ASC_SHIFT                       (8U)                                                /**< SPI0_CTAR.ASC Position                  */
#define SPI_CTAR_ASC(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_ASC_SHIFT))&SPI_CTAR_ASC_MASK) /**< SPI0_CTAR.ASC Field                     */
#define SPI_CTAR_CSSCK_MASK                      (0xF000U)                                           /**< SPI0_CTAR.CSSCK Mask                    */
#define SPI_CTAR_CSSCK_SHIFT                     (12U)                                               /**< SPI0_CTAR.CSSCK Position                */
#define SPI_CTAR_CSSCK(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CSSCK_SHIFT))&SPI_CTAR_CSSCK_MASK) /**< SPI0_CTAR.CSSCK Field                   */
#define SPI_CTAR_PBR_MASK                        (0x30000U)                                          /**< SPI0_CTAR.PBR Mask                      */
#define SPI_CTAR_PBR_SHIFT                       (16U)                                               /**< SPI0_CTAR.PBR Position                  */
#define SPI_CTAR_PBR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PBR_SHIFT))&SPI_CTAR_PBR_MASK) /**< SPI0_CTAR.PBR Field                     */
#define SPI_CTAR_PDT_MASK                        (0xC0000U)                                          /**< SPI0_CTAR.PDT Mask                      */
#define SPI_CTAR_PDT_SHIFT                       (18U)                                               /**< SPI0_CTAR.PDT Position                  */
#define SPI_CTAR_PDT(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PDT_SHIFT))&SPI_CTAR_PDT_MASK) /**< SPI0_CTAR.PDT Field                     */
#define SPI_CTAR_PASC_MASK                       (0x300000U)                                         /**< SPI0_CTAR.PASC Mask                     */
#define SPI_CTAR_PASC_SHIFT                      (20U)                                               /**< SPI0_CTAR.PASC Position                 */
#define SPI_CTAR_PASC(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PASC_SHIFT))&SPI_CTAR_PASC_MASK) /**< SPI0_CTAR.PASC Field                    */
#define SPI_CTAR_PCSSCK_MASK                     (0xC00000U)                                         /**< SPI0_CTAR.PCSSCK Mask                   */
#define SPI_CTAR_PCSSCK_SHIFT                    (22U)                                               /**< SPI0_CTAR.PCSSCK Position               */
#define SPI_CTAR_PCSSCK(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_PCSSCK_SHIFT))&SPI_CTAR_PCSSCK_MASK) /**< SPI0_CTAR.PCSSCK Field                  */
#define SPI_CTAR_LSBFE_MASK                      (0x1000000U)                                        /**< SPI0_CTAR.LSBFE Mask                    */
#define SPI_CTAR_LSBFE_SHIFT                     (24U)                                               /**< SPI0_CTAR.LSBFE Position                */
#define SPI_CTAR_LSBFE(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_LSBFE_SHIFT))&SPI_CTAR_LSBFE_MASK) /**< SPI0_CTAR.LSBFE Field                   */
#define SPI_CTAR_MODE_MASK                       (0x6000000U)                                        /**< SPI0_CTAR.MODE Mask                     */
#define SPI_CTAR_MODE_SHIFT                      (25U)                                               /**< SPI0_CTAR.MODE Position                 */
#define SPI_CTAR_MODE(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_MODE_SHIFT))&SPI_CTAR_MODE_MASK) /**< SPI0_CTAR.MODE Field                    */
#define SPI_CTAR_CPHA_MASK                       (0x2000000U)                                        /**< SPI0_CTAR.CPHA Mask                     */
#define SPI_CTAR_CPHA_SHIFT                      (25U)                                               /**< SPI0_CTAR.CPHA Position                 */
#define SPI_CTAR_CPHA(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CPHA_SHIFT))&SPI_CTAR_CPHA_MASK) /**< SPI0_CTAR.CPHA Field                    */
#define SPI_CTAR_CPOL_MASK                       (0x4000000U)                                        /**< SPI0_CTAR.CPOL Mask                     */
#define SPI_CTAR_CPOL_SHIFT                      (26U)                                               /**< SPI0_CTAR.CPOL Position                 */
#define SPI_CTAR_CPOL(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_CPOL_SHIFT))&SPI_CTAR_CPOL_MASK) /**< SPI0_CTAR.CPOL Field                    */
#define SPI_CTAR_FMSZ_MASK                       (0x78000000U)                                       /**< SPI0_CTAR.FMSZ Mask                     */
#define SPI_CTAR_FMSZ_SHIFT                      (27U)                                               /**< SPI0_CTAR.FMSZ Position                 */
#define SPI_CTAR_FMSZ(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_FMSZ_SHIFT))&SPI_CTAR_FMSZ_MASK) /**< SPI0_CTAR.FMSZ Field                    */
#define SPI_CTAR_DBR_MASK                        (0x80000000U)                                       /**< SPI0_CTAR.DBR Mask                      */
#define SPI_CTAR_DBR_SHIFT                       (31U)                                               /**< SPI0_CTAR.DBR Position                  */
#define SPI_CTAR_DBR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_DBR_SHIFT))&SPI_CTAR_DBR_MASK) /**< SPI0_CTAR.DBR Field                     */
/** @} */

/** @name CTAR_SLAVE - Clock and Transfer Attributes Register (In Slave Mode) */ /** @{ */
#define SPI_CTAR_SLAVE_MODE_MASK                 (0x6000000U)                                        /**< SPI0_CTAR_SLAVE.MODE Mask               */
#define SPI_CTAR_SLAVE_MODE_SHIFT                (25U)                                               /**< SPI0_CTAR_SLAVE.MODE Position           */
#define SPI_CTAR_SLAVE_MODE(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_MODE_SHIFT))&SPI_CTAR_SLAVE_MODE_MASK) /**< SPI0_CTAR_SLAVE.MODE Field              */
#define SPI_CTAR_SLAVE_CPHA_MASK                 (0x2000000U)                                        /**< SPI0_CTAR_SLAVE.CPHA Mask               */
#define SPI_CTAR_SLAVE_CPHA_SHIFT                (25U)                                               /**< SPI0_CTAR_SLAVE.CPHA Position           */
#define SPI_CTAR_SLAVE_CPHA(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_CPHA_SHIFT))&SPI_CTAR_SLAVE_CPHA_MASK) /**< SPI0_CTAR_SLAVE.CPHA Field              */
#define SPI_CTAR_SLAVE_CPOL_MASK                 (0x4000000U)                                        /**< SPI0_CTAR_SLAVE.CPOL Mask               */
#define SPI_CTAR_SLAVE_CPOL_SHIFT                (26U)                                               /**< SPI0_CTAR_SLAVE.CPOL Position           */
#define SPI_CTAR_SLAVE_CPOL(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_CPOL_SHIFT))&SPI_CTAR_SLAVE_CPOL_MASK) /**< SPI0_CTAR_SLAVE.CPOL Field              */
#define SPI_CTAR_SLAVE_FMSZ_MASK                 (0xF8000000U)                                       /**< SPI0_CTAR_SLAVE.FMSZ Mask               */
#define SPI_CTAR_SLAVE_FMSZ_SHIFT                (27U)                                               /**< SPI0_CTAR_SLAVE.FMSZ Position           */
#define SPI_CTAR_SLAVE_FMSZ(x)                   (((uint32_t)(((uint32_t)(x))<<SPI_CTAR_SLAVE_FMSZ_SHIFT))&SPI_CTAR_SLAVE_FMSZ_MASK) /**< SPI0_CTAR_SLAVE.FMSZ Field              */
/** @} */

/** @name SR - Status register */ /** @{ */
#define SPI_SR_POPNXTPTR_MASK                    (0xFU)                                              /**< SPI0_SR.POPNXTPTR Mask                  */
#define SPI_SR_POPNXTPTR_SHIFT                   (0U)                                                /**< SPI0_SR.POPNXTPTR Position              */
#define SPI_SR_POPNXTPTR(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_SR_POPNXTPTR_SHIFT))&SPI_SR_POPNXTPTR_MASK) /**< SPI0_SR.POPNXTPTR Field                 */
#define SPI_SR_RXCTR_MASK                        (0xF0U)                                             /**< SPI0_SR.RXCTR Mask                      */
#define SPI_SR_RXCTR_SHIFT                       (4U)                                                /**< SPI0_SR.RXCTR Position                  */
#define SPI_SR_RXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_RXCTR_SHIFT))&SPI_SR_RXCTR_MASK) /**< SPI0_SR.RXCTR Field                     */
#define SPI_SR_TXNXTPTR_MASK                     (0xF00U)                                            /**< SPI0_SR.TXNXTPTR Mask                   */
#define SPI_SR_TXNXTPTR_SHIFT                    (8U)                                                /**< SPI0_SR.TXNXTPTR Position               */
#define SPI_SR_TXNXTPTR(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXNXTPTR_SHIFT))&SPI_SR_TXNXTPTR_MASK) /**< SPI0_SR.TXNXTPTR Field                  */
#define SPI_SR_TXCTR_MASK                        (0xF000U)                                           /**< SPI0_SR.TXCTR Mask                      */
#define SPI_SR_TXCTR_SHIFT                       (12U)                                               /**< SPI0_SR.TXCTR Position                  */
#define SPI_SR_TXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXCTR_SHIFT))&SPI_SR_TXCTR_MASK) /**< SPI0_SR.TXCTR Field                     */
#define SPI_SR_RFDF_MASK                         (0x20000U)                                          /**< SPI0_SR.RFDF Mask                       */
#define SPI_SR_RFDF_SHIFT                        (17U)                                               /**< SPI0_SR.RFDF Position                   */
#define SPI_SR_RFDF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_RFDF_SHIFT))&SPI_SR_RFDF_MASK) /**< SPI0_SR.RFDF Field                      */
#define SPI_SR_RFOF_MASK                         (0x80000U)                                          /**< SPI0_SR.RFOF Mask                       */
#define SPI_SR_RFOF_SHIFT                        (19U)                                               /**< SPI0_SR.RFOF Position                   */
#define SPI_SR_RFOF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_RFOF_SHIFT))&SPI_SR_RFOF_MASK) /**< SPI0_SR.RFOF Field                      */
#define SPI_SR_TFFF_MASK                         (0x2000000U)                                        /**< SPI0_SR.TFFF Mask                       */
#define SPI_SR_TFFF_SHIFT                        (25U)                                               /**< SPI0_SR.TFFF Position                   */
#define SPI_SR_TFFF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_TFFF_SHIFT))&SPI_SR_TFFF_MASK) /**< SPI0_SR.TFFF Field                      */
#define SPI_SR_TFUF_MASK                         (0x8000000U)                                        /**< SPI0_SR.TFUF Mask                       */
#define SPI_SR_TFUF_SHIFT                        (27U)                                               /**< SPI0_SR.TFUF Position                   */
#define SPI_SR_TFUF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_TFUF_SHIFT))&SPI_SR_TFUF_MASK) /**< SPI0_SR.TFUF Field                      */
#define SPI_SR_EOQF_MASK                         (0x10000000U)                                       /**< SPI0_SR.EOQF Mask                       */
#define SPI_SR_EOQF_SHIFT                        (28U)                                               /**< SPI0_SR.EOQF Position                   */
#define SPI_SR_EOQF(x)                           (((uint32_t)(((uint32_t)(x))<<SPI_SR_EOQF_SHIFT))&SPI_SR_EOQF_MASK) /**< SPI0_SR.EOQF Field                      */
#define SPI_SR_TXRXS_MASK                        (0x40000000U)                                       /**< SPI0_SR.TXRXS Mask                      */
#define SPI_SR_TXRXS_SHIFT                       (30U)                                               /**< SPI0_SR.TXRXS Position                  */
#define SPI_SR_TXRXS(x)                          (((uint32_t)(((uint32_t)(x))<<SPI_SR_TXRXS_SHIFT))&SPI_SR_TXRXS_MASK) /**< SPI0_SR.TXRXS Field                     */
#define SPI_SR_TCF_MASK                          (0x80000000U)                                       /**< SPI0_SR.TCF Mask                        */
#define SPI_SR_TCF_SHIFT                         (31U)                                               /**< SPI0_SR.TCF Position                    */
#define SPI_SR_TCF(x)                            (((uint32_t)(((uint32_t)(x))<<SPI_SR_TCF_SHIFT))&SPI_SR_TCF_MASK) /**< SPI0_SR.TCF Field                       */
/** @} */

/** @name RSER - DMA/Interrupt Request Select and Enable Register */ /** @{ */
#define SPI_RSER_RFDF_DIRS_MASK                  (0x10000U)                                          /**< SPI0_RSER.RFDF_DIRS Mask                */
#define SPI_RSER_RFDF_DIRS_SHIFT                 (16U)                                               /**< SPI0_RSER.RFDF_DIRS Position            */
#define SPI_RSER_RFDF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFDF_DIRS_SHIFT))&SPI_RSER_RFDF_DIRS_MASK) /**< SPI0_RSER.RFDF_DIRS Field               */
#define SPI_RSER_RFDF_RE_MASK                    (0x20000U)                                          /**< SPI0_RSER.RFDF_RE Mask                  */
#define SPI_RSER_RFDF_RE_SHIFT                   (17U)                                               /**< SPI0_RSER.RFDF_RE Position              */
#define SPI_RSER_RFDF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFDF_RE_SHIFT))&SPI_RSER_RFDF_RE_MASK) /**< SPI0_RSER.RFDF_RE Field                 */
#define SPI_RSER_RFOF_RE_MASK                    (0x80000U)                                          /**< SPI0_RSER.RFOF_RE Mask                  */
#define SPI_RSER_RFOF_RE_SHIFT                   (19U)                                               /**< SPI0_RSER.RFOF_RE Position              */
#define SPI_RSER_RFOF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_RFOF_RE_SHIFT))&SPI_RSER_RFOF_RE_MASK) /**< SPI0_RSER.RFOF_RE Field                 */
#define SPI_RSER_TFFF_DIRS_MASK                  (0x1000000U)                                        /**< SPI0_RSER.TFFF_DIRS Mask                */
#define SPI_RSER_TFFF_DIRS_SHIFT                 (24U)                                               /**< SPI0_RSER.TFFF_DIRS Position            */
#define SPI_RSER_TFFF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFFF_DIRS_SHIFT))&SPI_RSER_TFFF_DIRS_MASK) /**< SPI0_RSER.TFFF_DIRS Field               */
#define SPI_RSER_TFFF_RE_MASK                    (0x2000000U)                                        /**< SPI0_RSER.TFFF_RE Mask                  */
#define SPI_RSER_TFFF_RE_SHIFT                   (25U)                                               /**< SPI0_RSER.TFFF_RE Position              */
#define SPI_RSER_TFFF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFFF_RE_SHIFT))&SPI_RSER_TFFF_RE_MASK) /**< SPI0_RSER.TFFF_RE Field                 */
#define SPI_RSER_TFUF_RE_MASK                    (0x8000000U)                                        /**< SPI0_RSER.TFUF_RE Mask                  */
#define SPI_RSER_TFUF_RE_SHIFT                   (27U)                                               /**< SPI0_RSER.TFUF_RE Position              */
#define SPI_RSER_TFUF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TFUF_RE_SHIFT))&SPI_RSER_TFUF_RE_MASK) /**< SPI0_RSER.TFUF_RE Field                 */
#define SPI_RSER_EOQF_RE_MASK                    (0x10000000U)                                       /**< SPI0_RSER.EOQF_RE Mask                  */
#define SPI_RSER_EOQF_RE_SHIFT                   (28U)                                               /**< SPI0_RSER.EOQF_RE Position              */
#define SPI_RSER_EOQF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_RSER_EOQF_RE_SHIFT))&SPI_RSER_EOQF_RE_MASK) /**< SPI0_RSER.EOQF_RE Field                 */
#define SPI_RSER_TCF_RE_MASK                     (0x80000000U)                                       /**< SPI0_RSER.TCF_RE Mask                   */
#define SPI_RSER_TCF_RE_SHIFT                    (31U)                                               /**< SPI0_RSER.TCF_RE Position               */
#define SPI_RSER_TCF_RE(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_RSER_TCF_RE_SHIFT))&SPI_RSER_TCF_RE_MASK) /**< SPI0_RSER.TCF_RE Field                  */
/** @} */

/** @name PUSHR - PUSH TX FIFO Register In Master Mode */ /** @{ */
#define SPI_PUSHR_TXDATA_MASK                    (0xFFFFU)                                           /**< SPI0_PUSHR.TXDATA Mask                  */
#define SPI_PUSHR_TXDATA_SHIFT                   (0U)                                                /**< SPI0_PUSHR.TXDATA Position              */
#define SPI_PUSHR_TXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_TXDATA_SHIFT))&SPI_PUSHR_TXDATA_MASK) /**< SPI0_PUSHR.TXDATA Field                 */
#define SPI_PUSHR_PCS_MASK                       (0x3F0000U)                                         /**< SPI0_PUSHR.PCS Mask                     */
#define SPI_PUSHR_PCS_SHIFT                      (16U)                                               /**< SPI0_PUSHR.PCS Position                 */
#define SPI_PUSHR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_PCS_SHIFT))&SPI_PUSHR_PCS_MASK) /**< SPI0_PUSHR.PCS Field                    */
#define SPI_PUSHR_CTCNT_MASK                     (0x4000000U)                                        /**< SPI0_PUSHR.CTCNT Mask                   */
#define SPI_PUSHR_CTCNT_SHIFT                    (26U)                                               /**< SPI0_PUSHR.CTCNT Position               */
#define SPI_PUSHR_CTCNT(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_CTCNT_SHIFT))&SPI_PUSHR_CTCNT_MASK) /**< SPI0_PUSHR.CTCNT Field                  */
#define SPI_PUSHR_EOQ_MASK                       (0x8000000U)                                        /**< SPI0_PUSHR.EOQ Mask                     */
#define SPI_PUSHR_EOQ_SHIFT                      (27U)                                               /**< SPI0_PUSHR.EOQ Position                 */
#define SPI_PUSHR_EOQ(x)                         (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_EOQ_SHIFT))&SPI_PUSHR_EOQ_MASK) /**< SPI0_PUSHR.EOQ Field                    */
#define SPI_PUSHR_CTAS_MASK                      (0x70000000U)                                       /**< SPI0_PUSHR.CTAS Mask                    */
#define SPI_PUSHR_CTAS_SHIFT                     (28U)                                               /**< SPI0_PUSHR.CTAS Position                */
#define SPI_PUSHR_CTAS(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_CTAS_SHIFT))&SPI_PUSHR_CTAS_MASK) /**< SPI0_PUSHR.CTAS Field                   */
#define SPI_PUSHR_CONT_MASK                      (0x80000000U)                                       /**< SPI0_PUSHR.CONT Mask                    */
#define SPI_PUSHR_CONT_SHIFT                     (31U)                                               /**< SPI0_PUSHR.CONT Position                */
#define SPI_PUSHR_CONT(x)                        (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_CONT_SHIFT))&SPI_PUSHR_CONT_MASK) /**< SPI0_PUSHR.CONT Field                   */
/** @} */

/** @name PUSHR_SLAVE - PUSH TX FIFO Register In Slave Mode */ /** @{ */
#define SPI_PUSHR_SLAVE_TXDATA_MASK              (0xFFFFU)                                           /**< SPI0_PUSHR_SLAVE.TXDATA Mask            */
#define SPI_PUSHR_SLAVE_TXDATA_SHIFT             (0U)                                                /**< SPI0_PUSHR_SLAVE.TXDATA Position        */
#define SPI_PUSHR_SLAVE_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<SPI_PUSHR_SLAVE_TXDATA_SHIFT))&SPI_PUSHR_SLAVE_TXDATA_MASK) /**< SPI0_PUSHR_SLAVE.TXDATA Field           */
/** @} */

/** @name POPR - POP RX FIFO Register */ /** @{ */
#define SPI_POPR_RXDATA_MASK                     (0xFFFFFFFFU)                                       /**< SPI0_POPR.RXDATA Mask                   */
#define SPI_POPR_RXDATA_SHIFT                    (0U)                                                /**< SPI0_POPR.RXDATA Position               */
#define SPI_POPR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_POPR_RXDATA_SHIFT))&SPI_POPR_RXDATA_MASK) /**< SPI0_POPR.RXDATA Field                  */
/** @} */

/** @name TXFR - Transmit FIFO */ /** @{ */
#define SPI_TXFR_TXDATA_MASK                     (0xFFFFU)                                           /**< SPI0_TXFR.TXDATA Mask                   */
#define SPI_TXFR_TXDATA_SHIFT                    (0U)                                                /**< SPI0_TXFR.TXDATA Position               */
#define SPI_TXFR_TXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_TXFR_TXDATA_SHIFT))&SPI_TXFR_TXDATA_MASK) /**< SPI0_TXFR.TXDATA Field                  */
#define SPI_TXFR_TXCMD_TXDATA_MASK               (0xFFFF0000U)                                       /**< SPI0_TXFR.TXCMD_TXDATA Mask             */
#define SPI_TXFR_TXCMD_TXDATA_SHIFT              (16U)                                               /**< SPI0_TXFR.TXCMD_TXDATA Position         */
#define SPI_TXFR_TXCMD_TXDATA(x)                 (((uint32_t)(((uint32_t)(x))<<SPI_TXFR_TXCMD_TXDATA_SHIFT))&SPI_TXFR_TXCMD_TXDATA_MASK) /**< SPI0_TXFR.TXCMD_TXDATA Field            */
/** @} */

/** @name RXFR - Receive FIFO */ /** @{ */
#define SPI_RXFR_RXDATA_MASK                     (0xFFFFFFFFU)                                       /**< SPI0_RXFR.RXDATA Mask                   */
#define SPI_RXFR_RXDATA_SHIFT                    (0U)                                                /**< SPI0_RXFR.RXDATA Position               */
#define SPI_RXFR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<SPI_RXFR_RXDATA_SHIFT))&SPI_RXFR_RXDATA_MASK) /**< SPI0_RXFR.RXDATA Field                  */
/** @} */

/** @} */ /* End group SPI_Register_Masks_GROUP */


/* SPI0 - Peripheral instance base addresses */
#define SPI0_BasePtr                   0x4002C000UL //!< Peripheral base address
#define SPI0                           ((SPI_Type *) SPI0_BasePtr) //!< Freescale base pointer
#define SPI0_BASE_PTR                  (SPI0) //!< Freescale style base pointer
#define SPI0_IRQS { SPI0_IRQn,  }


/** @} */ /* End group SPI_Peripheral_access_layer_GROUP */


/** @brief C Struct for SPI */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SPI_Peripheral_access_layer_GROUP SPI Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SPI1 (derived from SPI0)             ================ */
/* ================================================================================ */

/**
 * @brief Serial Peripheral Interface
 */

/* SPI1 - Peripheral instance base addresses */
#define SPI1_BasePtr                   0x4002D000UL //!< Peripheral base address
#define SPI1                           ((SPI_Type *) SPI1_BasePtr) //!< Freescale base pointer
#define SPI1_BASE_PTR                  (SPI1) //!< Freescale style base pointer
#define SPI1_IRQS { SPI1_IRQn,  }


/** @} */ /* End group SPI_Peripheral_access_layer_GROUP */


/** @brief C Struct for SPI */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SPI_Peripheral_access_layer_GROUP SPI Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SPI2 (derived from SPI0)             ================ */
/* ================================================================================ */

/**
 * @brief Serial Peripheral Interface
 */

/* SPI2 - Peripheral instance base addresses */
#define SPI2_BasePtr                   0x400AC000UL //!< Peripheral base address
#define SPI2                           ((SPI_Type *) SPI2_BasePtr) //!< Freescale base pointer
#define SPI2_BASE_PTR                  (SPI2) //!< Freescale style base pointer
#define SPI2_IRQS { SPI2_IRQn,  }


/** @} */ /* End group SPI_Peripheral_access_layer_GROUP */


/** @brief C Struct for SYST */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup SYST_Peripheral_access_layer_GROUP SYST Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           SYST (file:SYST)                     ================ */
/* ================================================================================ */

/**
 * @brief System timer
 */
/**
 * @struct SYST_Type
 * @brief  C Struct allowing access to SYST registers
 */
typedef struct SYST_Type {
   __IO uint32_t  CSR;                          /**< 0000: Control and Status Register                                  */
   __IO uint32_t  RVR;                          /**< 0004: Reload Value Register                                        */
   __IO uint32_t  CVR;                          /**< 0008: Current Value Register                                       */
   __I  uint32_t  CALIB;                        /**< 000C: Calibration Value Register                                   */
} SYST_Type;


/** @brief Register Masks for SYST */

/* -------------------------------------------------------------------------------- */
/* -----------     'SYST' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup SYST_Register_Masks_GROUP SYST Register Masks */
/** @{ */

/** @name CSR - Control and Status Register */ /** @{ */
#define SYST_CSR_ENABLE_MASK                     (0x1U)                                              /**< SYST_CSR.ENABLE Mask                    */
#define SYST_CSR_ENABLE_SHIFT                    (0U)                                                /**< SYST_CSR.ENABLE Position                */
#define SYST_CSR_ENABLE(x)                       (((uint32_t)(((uint32_t)(x))<<SYST_CSR_ENABLE_SHIFT))&SYST_CSR_ENABLE_MASK) /**< SYST_CSR.ENABLE Field                   */
#define SYST_CSR_TICKINT_MASK                    (0x2U)                                              /**< SYST_CSR.TICKINT Mask                   */
#define SYST_CSR_TICKINT_SHIFT                   (1U)                                                /**< SYST_CSR.TICKINT Position               */
#define SYST_CSR_TICKINT(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CSR_TICKINT_SHIFT))&SYST_CSR_TICKINT_MASK) /**< SYST_CSR.TICKINT Field                  */
#define SYST_CSR_CLKSOURCE_MASK                  (0x4U)                                              /**< SYST_CSR.CLKSOURCE Mask                 */
#define SYST_CSR_CLKSOURCE_SHIFT                 (2U)                                                /**< SYST_CSR.CLKSOURCE Position             */
#define SYST_CSR_CLKSOURCE(x)                    (((uint32_t)(((uint32_t)(x))<<SYST_CSR_CLKSOURCE_SHIFT))&SYST_CSR_CLKSOURCE_MASK) /**< SYST_CSR.CLKSOURCE Field                */
#define SYST_CSR_COUNTFLAG_MASK                  (0x10000U)                                          /**< SYST_CSR.COUNTFLAG Mask                 */
#define SYST_CSR_COUNTFLAG_SHIFT                 (16U)                                               /**< SYST_CSR.COUNTFLAG Position             */
#define SYST_CSR_COUNTFLAG(x)                    (((uint32_t)(((uint32_t)(x))<<SYST_CSR_COUNTFLAG_SHIFT))&SYST_CSR_COUNTFLAG_MASK) /**< SYST_CSR.COUNTFLAG Field                */
/** @} */

/** @name RVR - Reload Value Register */ /** @{ */
#define SYST_RVR_RELOAD_MASK                     (0xFFFFFFU)                                         /**< SYST_RVR.RELOAD Mask                    */
#define SYST_RVR_RELOAD_SHIFT                    (0U)                                                /**< SYST_RVR.RELOAD Position                */
#define SYST_RVR_RELOAD(x)                       (((uint32_t)(((uint32_t)(x))<<SYST_RVR_RELOAD_SHIFT))&SYST_RVR_RELOAD_MASK) /**< SYST_RVR.RELOAD Field                   */
/** @} */

/** @name CVR - Current Value Register */ /** @{ */
#define SYST_CVR_CURRENT_MASK                    (0xFFFFFFU)                                         /**< SYST_CVR.CURRENT Mask                   */
#define SYST_CVR_CURRENT_SHIFT                   (0U)                                                /**< SYST_CVR.CURRENT Position               */
#define SYST_CVR_CURRENT(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CVR_CURRENT_SHIFT))&SYST_CVR_CURRENT_MASK) /**< SYST_CVR.CURRENT Field                  */
/** @} */

/** @name CALIB - Calibration Value Register */ /** @{ */
#define SYST_CALIB_TENMS_MASK                    (0xFFFFFFU)                                         /**< SYST_CALIB.TENMS Mask                   */
#define SYST_CALIB_TENMS_SHIFT                   (0U)                                                /**< SYST_CALIB.TENMS Position               */
#define SYST_CALIB_TENMS(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CALIB_TENMS_SHIFT))&SYST_CALIB_TENMS_MASK) /**< SYST_CALIB.TENMS Field                  */
#define SYST_CALIB_SKEW_MASK                     (0x40000000U)                                       /**< SYST_CALIB.SKEW Mask                    */
#define SYST_CALIB_SKEW_SHIFT                    (30U)                                               /**< SYST_CALIB.SKEW Position                */
#define SYST_CALIB_SKEW(x)                       (((uint32_t)(((uint32_t)(x))<<SYST_CALIB_SKEW_SHIFT))&SYST_CALIB_SKEW_MASK) /**< SYST_CALIB.SKEW Field                   */
#define SYST_CALIB_NOREF_MASK                    (0x80000000U)                                       /**< SYST_CALIB.NOREF Mask                   */
#define SYST_CALIB_NOREF_SHIFT                   (31U)                                               /**< SYST_CALIB.NOREF Position               */
#define SYST_CALIB_NOREF(x)                      (((uint32_t)(((uint32_t)(x))<<SYST_CALIB_NOREF_SHIFT))&SYST_CALIB_NOREF_MASK) /**< SYST_CALIB.NOREF Field                  */
/** @} */

/** @} */ /* End group SYST_Register_Masks_GROUP */


/* SYST - Peripheral instance base addresses */
#define SYST_BasePtr                   0xE000E010UL //!< Peripheral base address
#define SYST                           ((SYST_Type *) SYST_BasePtr) //!< Freescale base pointer
#define SYST_BASE_PTR                  (SYST) //!< Freescale style base pointer

/** @} */ /* End group SYST_Peripheral_access_layer_GROUP */


/** @brief C Struct for TPIU */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup TPIU_Peripheral_access_layer_GROUP TPIU Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           TPIU (file:TPIU_0)                   ================ */
/* ================================================================================ */

/**
 * @brief Trace Port Interface Unit
 */
/**
 * @struct TPIU_Type
 * @brief  C Struct allowing access to TPIU registers
 */
typedef struct TPIU_Type {
   __I  uint32_t  SSPSR;                        /**< 0000: Supported Parallel Port Size Register                        */
   __IO uint32_t  CSPSR;                        /**< 0004: Current Parallel Port Size Register                          */
        uint8_t   RESERVED_0[8];                /**< 0008: 0x8 bytes                                                    */
   __IO uint32_t  ACPR;                         /**< 0010: Asynchronous Clock Prescaler Register                        */
        uint8_t   RESERVED_1[220];              /**< 0014: 0xDC bytes                                                   */
   __IO uint32_t  SPPR;                         /**< 00F0: Selected Pin Protocol Register                               */
        uint8_t   RESERVED_2[524];              /**< 00F4: 0x20C bytes                                                  */
   __I  uint32_t  FFSR;                         /**< 0300: Formatter and Flush Status Register                          */
   __IO uint32_t  FFCR;                         /**< 0304: Formatter and Flush Control Register                         */
   __IO uint32_t  FSCR;                         /**< 0308: Formatter Synchronization Counter Register                   */
        uint8_t   RESERVED_3[3036];             /**< 030C: 0xBDC bytes                                                  */
   __I  uint32_t  TRIGGER;                      /**< 0EE8: Trigger Register                                             */
   __I  uint32_t  FIFODATA0;                    /**< 0EEC: FIFODATA0 Register                                           */
   __I  uint32_t  ITATBCTR2;                    /**< 0EF0: Integration Test ATB Control 2 Register                      */
        uint8_t   RESERVED_4[4];                /**< 0EF4: 0x4 bytes                                                    */
   __I  uint32_t  ITATBCTR0;                    /**< 0EF8: Integration Test ATB Control 0 Register                      */
   __I  uint32_t  FIFODATA1;                    /**< 0EFC: FIFODATA1 Register                                           */
   __IO uint32_t  ITCTRL;                       /**< 0F00: Integration Mode Control Register                            */
        uint8_t   RESERVED_5[156];              /**< 0F04: 0x9C bytes                                                   */
   __IO uint32_t  CLAIMSET;                     /**< 0FA0: Claim Tag Set Register                                       */
   __IO uint32_t  CLAIMCLR;                     /**< 0FA4: Claim Tag Clear Register                                     */
        uint8_t   RESERVED_6[32];               /**< 0FA8: 0x20 bytes                                                   */
   __I  uint32_t  DEVID;                        /**< 0FC8: TPIU_DEVID Register                                          */
        uint8_t   RESERVED_7[4];                /**< 0FCC: 0x4 bytes                                                    */
   __I  uint32_t  PID4;                         /**< 0FD0: Peripheral Identification Register 4                         */
   __I  uint32_t  PID5;                         /**< 0FD4: Peripheral Identification Register 5                         */
   __I  uint32_t  PID6;                         /**< 0FD8: Peripheral Identification Register 6                         */
   __I  uint32_t  PID7;                         /**< 0FDC: Peripheral Identification Register 7                         */
   __I  uint32_t  PID0;                         /**< 0FE0: Peripheral Identification Register 0                         */
   __I  uint32_t  PID1;                         /**< 0FE4: Peripheral Identification Register 1                         */
   __I  uint32_t  PID2;                         /**< 0FE8: Peripheral Identification Register 2                         */
   __I  uint32_t  PID3;                         /**< 0FEC: Peripheral Identification Register 3                         */
   __I  uint32_t  CID0;                         /**< 0FF0: Component Identification Register 0                          */
   __I  uint32_t  CID1;                         /**< 0FF4: Component Identification Register 1                          */
   __I  uint32_t  CID2;                         /**< 0FF8: Component Identification Register 2                          */
   __I  uint32_t  CID3;                         /**< 0FFC: Component Identification Register 3                          */
} TPIU_Type;


/** @brief Register Masks for TPIU */

/* -------------------------------------------------------------------------------- */
/* -----------     'TPIU' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup TPIU_Register_Masks_GROUP TPIU Register Masks */
/** @{ */

/** @name SSPSR - Supported Parallel Port Size Register */ /** @{ */
#define TPIU_SSPSR_SWIDTH_MASK                   (0xFFFFFFFFU)                                       /**< TPIU_SSPSR.SWIDTH Mask                  */
#define TPIU_SSPSR_SWIDTH_SHIFT                  (0U)                                                /**< TPIU_SSPSR.SWIDTH Position              */
#define TPIU_SSPSR_SWIDTH(x)                     (((uint32_t)(((uint32_t)(x))<<TPIU_SSPSR_SWIDTH_SHIFT))&TPIU_SSPSR_SWIDTH_MASK) /**< TPIU_SSPSR.SWIDTH Field                 */
/** @} */

/** @name CSPSR - Current Parallel Port Size Register */ /** @{ */
#define TPIU_CSPSR_CWIDTH_MASK                   (0xFFFFFFFFU)                                       /**< TPIU_CSPSR.CWIDTH Mask                  */
#define TPIU_CSPSR_CWIDTH_SHIFT                  (0U)                                                /**< TPIU_CSPSR.CWIDTH Position              */
#define TPIU_CSPSR_CWIDTH(x)                     (((uint32_t)(((uint32_t)(x))<<TPIU_CSPSR_CWIDTH_SHIFT))&TPIU_CSPSR_CWIDTH_MASK) /**< TPIU_CSPSR.CWIDTH Field                 */
/** @} */

/** @name ACPR - Asynchronous Clock Prescaler Register */ /** @{ */
#define TPIU_ACPR_PRESCALER_MASK                 (0x1FFFU)                                           /**< TPIU_ACPR.PRESCALER Mask                */
#define TPIU_ACPR_PRESCALER_SHIFT                (0U)                                                /**< TPIU_ACPR.PRESCALER Position            */
#define TPIU_ACPR_PRESCALER(x)                   (((uint32_t)(((uint32_t)(x))<<TPIU_ACPR_PRESCALER_SHIFT))&TPIU_ACPR_PRESCALER_MASK) /**< TPIU_ACPR.PRESCALER Field               */
/** @} */

/** @name SPPR - Selected Pin Protocol Register */ /** @{ */
#define TPIU_SPPR_TXMODE_MASK                    (0x3U)                                              /**< TPIU_SPPR.TXMODE Mask                   */
#define TPIU_SPPR_TXMODE_SHIFT                   (0U)                                                /**< TPIU_SPPR.TXMODE Position               */
#define TPIU_SPPR_TXMODE(x)                      (((uint32_t)(((uint32_t)(x))<<TPIU_SPPR_TXMODE_SHIFT))&TPIU_SPPR_TXMODE_MASK) /**< TPIU_SPPR.TXMODE Field                  */
/** @} */

/** @name FFSR - Formatter and Flush Status Register */ /** @{ */
#define TPIU_FFSR_F1InProg_MASK                  (0x1U)                                              /**< TPIU_FFSR.F1InProg Mask                 */
#define TPIU_FFSR_F1InProg_SHIFT                 (0U)                                                /**< TPIU_FFSR.F1InProg Position             */
#define TPIU_FFSR_F1InProg(x)                    (((uint32_t)(((uint32_t)(x))<<TPIU_FFSR_F1InProg_SHIFT))&TPIU_FFSR_F1InProg_MASK) /**< TPIU_FFSR.F1InProg Field                */
#define TPIU_FFSR_FtStopped_MASK                 (0x2U)                                              /**< TPIU_FFSR.FtStopped Mask                */
#define TPIU_FFSR_FtStopped_SHIFT                (1U)                                                /**< TPIU_FFSR.FtStopped Position            */
#define TPIU_FFSR_FtStopped(x)                   (((uint32_t)(((uint32_t)(x))<<TPIU_FFSR_FtStopped_SHIFT))&TPIU_FFSR_FtStopped_MASK) /**< TPIU_FFSR.FtStopped Field               */
#define TPIU_FFSR_TCPresent_MASK                 (0x4U)                                              /**< TPIU_FFSR.TCPresent Mask                */
#define TPIU_FFSR_TCPresent_SHIFT                (2U)                                                /**< TPIU_FFSR.TCPresent Position            */
#define TPIU_FFSR_TCPresent(x)                   (((uint32_t)(((uint32_t)(x))<<TPIU_FFSR_TCPresent_SHIFT))&TPIU_FFSR_TCPresent_MASK) /**< TPIU_FFSR.TCPresent Field               */
#define TPIU_FFSR_FtNonStop_MASK                 (0x8U)                                              /**< TPIU_FFSR.FtNonStop Mask                */
#define TPIU_FFSR_FtNonStop_SHIFT                (3U)                                                /**< TPIU_FFSR.FtNonStop Position            */
#define TPIU_FFSR_FtNonStop(x)                   (((uint32_t)(((uint32_t)(x))<<TPIU_FFSR_FtNonStop_SHIFT))&TPIU_FFSR_FtNonStop_MASK) /**< TPIU_FFSR.FtNonStop Field               */
/** @} */

/** @name FFCR - Formatter and Flush Control Register */ /** @{ */
#define TPIU_FFCR_EnFCont_MASK                   (0x2U)                                              /**< TPIU_FFCR.EnFCont Mask                  */
#define TPIU_FFCR_EnFCont_SHIFT                  (1U)                                                /**< TPIU_FFCR.EnFCont Position              */
#define TPIU_FFCR_EnFCont(x)                     (((uint32_t)(((uint32_t)(x))<<TPIU_FFCR_EnFCont_SHIFT))&TPIU_FFCR_EnFCont_MASK) /**< TPIU_FFCR.EnFCont Field                 */
#define TPIU_FFCR_TrigIn_MASK                    (0x100U)                                            /**< TPIU_FFCR.TrigIn Mask                   */
#define TPIU_FFCR_TrigIn_SHIFT                   (8U)                                                /**< TPIU_FFCR.TrigIn Position               */
#define TPIU_FFCR_TrigIn(x)                      (((uint32_t)(((uint32_t)(x))<<TPIU_FFCR_TrigIn_SHIFT))&TPIU_FFCR_TrigIn_MASK) /**< TPIU_FFCR.TrigIn Field                  */
/** @} */

/** @name FSCR - Formatter Synchronization Counter Register */ /** @{ */
#define TPIU_FSCR_CycCount_MASK                  (0xFFFU)                                            /**< TPIU_FSCR.CycCount Mask                 */
#define TPIU_FSCR_CycCount_SHIFT                 (0U)                                                /**< TPIU_FSCR.CycCount Position             */
#define TPIU_FSCR_CycCount(x)                    (((uint32_t)(((uint32_t)(x))<<TPIU_FSCR_CycCount_SHIFT))&TPIU_FSCR_CycCount_MASK) /**< TPIU_FSCR.CycCount Field                */
/** @} */

/** @name TRIGGER - Trigger Register */ /** @{ */
#define TPIU_TRIGGER_TRIGGER_MASK                (0x1U)                                              /**< TPIU_TRIGGER.TRIGGER Mask               */
#define TPIU_TRIGGER_TRIGGER_SHIFT               (0U)                                                /**< TPIU_TRIGGER.TRIGGER Position           */
#define TPIU_TRIGGER_TRIGGER(x)                  (((uint32_t)(((uint32_t)(x))<<TPIU_TRIGGER_TRIGGER_SHIFT))&TPIU_TRIGGER_TRIGGER_MASK) /**< TPIU_TRIGGER.TRIGGER Field              */
/** @} */

/** @name FIFODATA0 - FIFODATA0 Register */ /** @{ */
#define TPIU_FIFODATA0_ETMdata0_MASK             (0xFFU)                                             /**< TPIU_FIFODATA0.ETMdata0 Mask            */
#define TPIU_FIFODATA0_ETMdata0_SHIFT            (0U)                                                /**< TPIU_FIFODATA0.ETMdata0 Position        */
#define TPIU_FIFODATA0_ETMdata0(x)               (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA0_ETMdata0_SHIFT))&TPIU_FIFODATA0_ETMdata0_MASK) /**< TPIU_FIFODATA0.ETMdata0 Field           */
#define TPIU_FIFODATA0_ETMdata1_MASK             (0xFF00U)                                           /**< TPIU_FIFODATA0.ETMdata1 Mask            */
#define TPIU_FIFODATA0_ETMdata1_SHIFT            (8U)                                                /**< TPIU_FIFODATA0.ETMdata1 Position        */
#define TPIU_FIFODATA0_ETMdata1(x)               (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA0_ETMdata1_SHIFT))&TPIU_FIFODATA0_ETMdata1_MASK) /**< TPIU_FIFODATA0.ETMdata1 Field           */
#define TPIU_FIFODATA0_ETMdata2_MASK             (0xFF0000U)                                         /**< TPIU_FIFODATA0.ETMdata2 Mask            */
#define TPIU_FIFODATA0_ETMdata2_SHIFT            (16U)                                               /**< TPIU_FIFODATA0.ETMdata2 Position        */
#define TPIU_FIFODATA0_ETMdata2(x)               (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA0_ETMdata2_SHIFT))&TPIU_FIFODATA0_ETMdata2_MASK) /**< TPIU_FIFODATA0.ETMdata2 Field           */
#define TPIU_FIFODATA0_ETMbytecount_MASK         (0x3000000U)                                        /**< TPIU_FIFODATA0.ETMbytecount Mask        */
#define TPIU_FIFODATA0_ETMbytecount_SHIFT        (24U)                                               /**< TPIU_FIFODATA0.ETMbytecount Position    */
#define TPIU_FIFODATA0_ETMbytecount(x)           (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA0_ETMbytecount_SHIFT))&TPIU_FIFODATA0_ETMbytecount_MASK) /**< TPIU_FIFODATA0.ETMbytecount Field       */
#define TPIU_FIFODATA0_ETMATVALID_MASK           (0x4000000U)                                        /**< TPIU_FIFODATA0.ETMATVALID Mask          */
#define TPIU_FIFODATA0_ETMATVALID_SHIFT          (26U)                                               /**< TPIU_FIFODATA0.ETMATVALID Position      */
#define TPIU_FIFODATA0_ETMATVALID(x)             (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA0_ETMATVALID_SHIFT))&TPIU_FIFODATA0_ETMATVALID_MASK) /**< TPIU_FIFODATA0.ETMATVALID Field         */
#define TPIU_FIFODATA0_ITMbytecount_MASK         (0x18000000U)                                       /**< TPIU_FIFODATA0.ITMbytecount Mask        */
#define TPIU_FIFODATA0_ITMbytecount_SHIFT        (27U)                                               /**< TPIU_FIFODATA0.ITMbytecount Position    */
#define TPIU_FIFODATA0_ITMbytecount(x)           (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA0_ITMbytecount_SHIFT))&TPIU_FIFODATA0_ITMbytecount_MASK) /**< TPIU_FIFODATA0.ITMbytecount Field       */
#define TPIU_FIFODATA0_ITMATVALID_MASK           (0x20000000U)                                       /**< TPIU_FIFODATA0.ITMATVALID Mask          */
#define TPIU_FIFODATA0_ITMATVALID_SHIFT          (29U)                                               /**< TPIU_FIFODATA0.ITMATVALID Position      */
#define TPIU_FIFODATA0_ITMATVALID(x)             (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA0_ITMATVALID_SHIFT))&TPIU_FIFODATA0_ITMATVALID_MASK) /**< TPIU_FIFODATA0.ITMATVALID Field         */
/** @} */

/** @name ITATBCTR2 - Integration Test ATB Control 2 Register */ /** @{ */
#define TPIU_ITATBCTR2_ATREADY1_ATREADY2_MASK    (0x1U)                                              /**< TPIU_ITATBCTR2.ATREADY1_ATREADY2 Mask   */
#define TPIU_ITATBCTR2_ATREADY1_ATREADY2_SHIFT   (0U)                                                /**< TPIU_ITATBCTR2.ATREADY1_ATREADY2 Position*/
#define TPIU_ITATBCTR2_ATREADY1_ATREADY2(x)      (((uint32_t)(((uint32_t)(x))<<TPIU_ITATBCTR2_ATREADY1_ATREADY2_SHIFT))&TPIU_ITATBCTR2_ATREADY1_ATREADY2_MASK) /**< TPIU_ITATBCTR2.ATREADY1_ATREADY2 Field  */
/** @} */

/** @name ITATBCTR0 - Integration Test ATB Control 0 Register */ /** @{ */
#define TPIU_ITATBCTR0_ATVALID1_ATVALID2_MASK    (0x1U)                                              /**< TPIU_ITATBCTR0.ATVALID1_ATVALID2 Mask   */
#define TPIU_ITATBCTR0_ATVALID1_ATVALID2_SHIFT   (0U)                                                /**< TPIU_ITATBCTR0.ATVALID1_ATVALID2 Position*/
#define TPIU_ITATBCTR0_ATVALID1_ATVALID2(x)      (((uint32_t)(((uint32_t)(x))<<TPIU_ITATBCTR0_ATVALID1_ATVALID2_SHIFT))&TPIU_ITATBCTR0_ATVALID1_ATVALID2_MASK) /**< TPIU_ITATBCTR0.ATVALID1_ATVALID2 Field  */
/** @} */

/** @name FIFODATA1 - FIFODATA1 Register */ /** @{ */
#define TPIU_FIFODATA1_ITMdata0_MASK             (0xFFU)                                             /**< TPIU_FIFODATA1.ITMdata0 Mask            */
#define TPIU_FIFODATA1_ITMdata0_SHIFT            (0U)                                                /**< TPIU_FIFODATA1.ITMdata0 Position        */
#define TPIU_FIFODATA1_ITMdata0(x)               (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA1_ITMdata0_SHIFT))&TPIU_FIFODATA1_ITMdata0_MASK) /**< TPIU_FIFODATA1.ITMdata0 Field           */
#define TPIU_FIFODATA1_ITMdata1_MASK             (0xFF00U)                                           /**< TPIU_FIFODATA1.ITMdata1 Mask            */
#define TPIU_FIFODATA1_ITMdata1_SHIFT            (8U)                                                /**< TPIU_FIFODATA1.ITMdata1 Position        */
#define TPIU_FIFODATA1_ITMdata1(x)               (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA1_ITMdata1_SHIFT))&TPIU_FIFODATA1_ITMdata1_MASK) /**< TPIU_FIFODATA1.ITMdata1 Field           */
#define TPIU_FIFODATA1_ITMdata2_MASK             (0xFF0000U)                                         /**< TPIU_FIFODATA1.ITMdata2 Mask            */
#define TPIU_FIFODATA1_ITMdata2_SHIFT            (16U)                                               /**< TPIU_FIFODATA1.ITMdata2 Position        */
#define TPIU_FIFODATA1_ITMdata2(x)               (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA1_ITMdata2_SHIFT))&TPIU_FIFODATA1_ITMdata2_MASK) /**< TPIU_FIFODATA1.ITMdata2 Field           */
#define TPIU_FIFODATA1_ETMbytecount_MASK         (0x3000000U)                                        /**< TPIU_FIFODATA1.ETMbytecount Mask        */
#define TPIU_FIFODATA1_ETMbytecount_SHIFT        (24U)                                               /**< TPIU_FIFODATA1.ETMbytecount Position    */
#define TPIU_FIFODATA1_ETMbytecount(x)           (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA1_ETMbytecount_SHIFT))&TPIU_FIFODATA1_ETMbytecount_MASK) /**< TPIU_FIFODATA1.ETMbytecount Field       */
#define TPIU_FIFODATA1_ETMATVALID_MASK           (0x4000000U)                                        /**< TPIU_FIFODATA1.ETMATVALID Mask          */
#define TPIU_FIFODATA1_ETMATVALID_SHIFT          (26U)                                               /**< TPIU_FIFODATA1.ETMATVALID Position      */
#define TPIU_FIFODATA1_ETMATVALID(x)             (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA1_ETMATVALID_SHIFT))&TPIU_FIFODATA1_ETMATVALID_MASK) /**< TPIU_FIFODATA1.ETMATVALID Field         */
#define TPIU_FIFODATA1_ITMbytecount_MASK         (0x18000000U)                                       /**< TPIU_FIFODATA1.ITMbytecount Mask        */
#define TPIU_FIFODATA1_ITMbytecount_SHIFT        (27U)                                               /**< TPIU_FIFODATA1.ITMbytecount Position    */
#define TPIU_FIFODATA1_ITMbytecount(x)           (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA1_ITMbytecount_SHIFT))&TPIU_FIFODATA1_ITMbytecount_MASK) /**< TPIU_FIFODATA1.ITMbytecount Field       */
#define TPIU_FIFODATA1_ITMATVALID_MASK           (0x20000000U)                                       /**< TPIU_FIFODATA1.ITMATVALID Mask          */
#define TPIU_FIFODATA1_ITMATVALID_SHIFT          (29U)                                               /**< TPIU_FIFODATA1.ITMATVALID Position      */
#define TPIU_FIFODATA1_ITMATVALID(x)             (((uint32_t)(((uint32_t)(x))<<TPIU_FIFODATA1_ITMATVALID_SHIFT))&TPIU_FIFODATA1_ITMATVALID_MASK) /**< TPIU_FIFODATA1.ITMATVALID Field         */
/** @} */

/** @name ITCTRL - Integration Mode Control Register */ /** @{ */
#define TPIU_ITCTRL_Mode_MASK                    (0x3U)                                              /**< TPIU_ITCTRL.Mode Mask                   */
#define TPIU_ITCTRL_Mode_SHIFT                   (0U)                                                /**< TPIU_ITCTRL.Mode Position               */
#define TPIU_ITCTRL_Mode(x)                      (((uint32_t)(((uint32_t)(x))<<TPIU_ITCTRL_Mode_SHIFT))&TPIU_ITCTRL_Mode_MASK) /**< TPIU_ITCTRL.Mode Field                  */
/** @} */

/** @name CLAIMSET - Claim Tag Set Register */ /** @{ */
#define TPIU_CLAIMSET_CLAIMSET_MASK              (0xFU)                                              /**< TPIU_CLAIMSET.CLAIMSET Mask             */
#define TPIU_CLAIMSET_CLAIMSET_SHIFT             (0U)                                                /**< TPIU_CLAIMSET.CLAIMSET Position         */
#define TPIU_CLAIMSET_CLAIMSET(x)                (((uint32_t)(((uint32_t)(x))<<TPIU_CLAIMSET_CLAIMSET_SHIFT))&TPIU_CLAIMSET_CLAIMSET_MASK) /**< TPIU_CLAIMSET.CLAIMSET Field            */
/** @} */

/** @name CLAIMCLR - Claim Tag Clear Register */ /** @{ */
#define TPIU_CLAIMCLR_CLAIMCLR_MASK              (0xFU)                                              /**< TPIU_CLAIMCLR.CLAIMCLR Mask             */
#define TPIU_CLAIMCLR_CLAIMCLR_SHIFT             (0U)                                                /**< TPIU_CLAIMCLR.CLAIMCLR Position         */
#define TPIU_CLAIMCLR_CLAIMCLR(x)                (((uint32_t)(((uint32_t)(x))<<TPIU_CLAIMCLR_CLAIMCLR_SHIFT))&TPIU_CLAIMCLR_CLAIMCLR_MASK) /**< TPIU_CLAIMCLR.CLAIMCLR Field            */
/** @} */

/** @name DEVID - TPIU_DEVID Register */ /** @{ */
#define TPIU_DEVID_NumberOfTraceInputs_MASK      (0x1FU)                                             /**< TPIU_DEVID.NumberOfTraceInputs Mask     */
#define TPIU_DEVID_NumberOfTraceInputs_SHIFT     (0U)                                                /**< TPIU_DEVID.NumberOfTraceInputs Position */
#define TPIU_DEVID_NumberOfTraceInputs(x)        (((uint32_t)(((uint32_t)(x))<<TPIU_DEVID_NumberOfTraceInputs_SHIFT))&TPIU_DEVID_NumberOfTraceInputs_MASK) /**< TPIU_DEVID.NumberOfTraceInputs Field    */
#define TPIU_DEVID_TRACECELKIN_MASK              (0x20U)                                             /**< TPIU_DEVID.TRACECELKIN Mask             */
#define TPIU_DEVID_TRACECELKIN_SHIFT             (5U)                                                /**< TPIU_DEVID.TRACECELKIN Position         */
#define TPIU_DEVID_TRACECELKIN(x)                (((uint32_t)(((uint32_t)(x))<<TPIU_DEVID_TRACECELKIN_SHIFT))&TPIU_DEVID_TRACECELKIN_MASK) /**< TPIU_DEVID.TRACECELKIN Field            */
#define TPIU_DEVID_MinimumBufferSize_MASK        (0x1C0U)                                            /**< TPIU_DEVID.MinimumBufferSize Mask       */
#define TPIU_DEVID_MinimumBufferSize_SHIFT       (6U)                                                /**< TPIU_DEVID.MinimumBufferSize Position   */
#define TPIU_DEVID_MinimumBufferSize(x)          (((uint32_t)(((uint32_t)(x))<<TPIU_DEVID_MinimumBufferSize_SHIFT))&TPIU_DEVID_MinimumBufferSize_MASK) /**< TPIU_DEVID.MinimumBufferSize Field      */
#define TPIU_DEVID_TraceAndClockModes_MASK       (0x200U)                                            /**< TPIU_DEVID.TraceAndClockModes Mask      */
#define TPIU_DEVID_TraceAndClockModes_SHIFT      (9U)                                                /**< TPIU_DEVID.TraceAndClockModes Position  */
#define TPIU_DEVID_TraceAndClockModes(x)         (((uint32_t)(((uint32_t)(x))<<TPIU_DEVID_TraceAndClockModes_SHIFT))&TPIU_DEVID_TraceAndClockModes_MASK) /**< TPIU_DEVID.TraceAndClockModes Field     */
#define TPIU_DEVID_Manchester_MASK               (0x400U)                                            /**< TPIU_DEVID.Manchester Mask              */
#define TPIU_DEVID_Manchester_SHIFT              (10U)                                               /**< TPIU_DEVID.Manchester Position          */
#define TPIU_DEVID_Manchester(x)                 (((uint32_t)(((uint32_t)(x))<<TPIU_DEVID_Manchester_SHIFT))&TPIU_DEVID_Manchester_MASK) /**< TPIU_DEVID.Manchester Field             */
#define TPIU_DEVID_NRZ_MASK                      (0x800U)                                            /**< TPIU_DEVID.NRZ Mask                     */
#define TPIU_DEVID_NRZ_SHIFT                     (11U)                                               /**< TPIU_DEVID.NRZ Position                 */
#define TPIU_DEVID_NRZ(x)                        (((uint32_t)(((uint32_t)(x))<<TPIU_DEVID_NRZ_SHIFT))&TPIU_DEVID_NRZ_MASK) /**< TPIU_DEVID.NRZ Field                    */
/** @} */

/** @name PID4 - Peripheral Identification Register 4 */ /** @{ */
#define TPIU_PID4_JEP106_MASK                    (0xFU)                                              /**< TPIU_PID4.JEP106 Mask                   */
#define TPIU_PID4_JEP106_SHIFT                   (0U)                                                /**< TPIU_PID4.JEP106 Position               */
#define TPIU_PID4_JEP106(x)                      (((uint32_t)(((uint32_t)(x))<<TPIU_PID4_JEP106_SHIFT))&TPIU_PID4_JEP106_MASK) /**< TPIU_PID4.JEP106 Field                  */
#define TPIU_PID4_c4KB_MASK                      (0xF0U)                                             /**< TPIU_PID4.c4KB Mask                     */
#define TPIU_PID4_c4KB_SHIFT                     (4U)                                                /**< TPIU_PID4.c4KB Position                 */
#define TPIU_PID4_c4KB(x)                        (((uint32_t)(((uint32_t)(x))<<TPIU_PID4_c4KB_SHIFT))&TPIU_PID4_c4KB_MASK) /**< TPIU_PID4.c4KB Field                    */
/** @} */

/** @name PID0 - Peripheral Identification Register 0 */ /** @{ */
#define TPIU_PID0_PartNumber_MASK                (0xFFU)                                             /**< TPIU_PID0.PartNumber Mask               */
#define TPIU_PID0_PartNumber_SHIFT               (0U)                                                /**< TPIU_PID0.PartNumber Position           */
#define TPIU_PID0_PartNumber(x)                  (((uint32_t)(((uint32_t)(x))<<TPIU_PID0_PartNumber_SHIFT))&TPIU_PID0_PartNumber_MASK) /**< TPIU_PID0.PartNumber Field              */
/** @} */

/** @name PID1 - Peripheral Identification Register 1 */ /** @{ */
#define TPIU_PID1_PartNumber_MASK                (0xFU)                                              /**< TPIU_PID1.PartNumber Mask               */
#define TPIU_PID1_PartNumber_SHIFT               (0U)                                                /**< TPIU_PID1.PartNumber Position           */
#define TPIU_PID1_PartNumber(x)                  (((uint32_t)(((uint32_t)(x))<<TPIU_PID1_PartNumber_SHIFT))&TPIU_PID1_PartNumber_MASK) /**< TPIU_PID1.PartNumber Field              */
#define TPIU_PID1_JEP106_identity_code_MASK      (0xF0U)                                             /**< TPIU_PID1.JEP106_identity_code Mask     */
#define TPIU_PID1_JEP106_identity_code_SHIFT     (4U)                                                /**< TPIU_PID1.JEP106_identity_code Position */
#define TPIU_PID1_JEP106_identity_code(x)        (((uint32_t)(((uint32_t)(x))<<TPIU_PID1_JEP106_identity_code_SHIFT))&TPIU_PID1_JEP106_identity_code_MASK) /**< TPIU_PID1.JEP106_identity_code Field    */
/** @} */

/** @name PID2 - Peripheral Identification Register 2 */ /** @{ */
#define TPIU_PID2_JEP106_identity_code_MASK      (0x7U)                                              /**< TPIU_PID2.JEP106_identity_code Mask     */
#define TPIU_PID2_JEP106_identity_code_SHIFT     (0U)                                                /**< TPIU_PID2.JEP106_identity_code Position */
#define TPIU_PID2_JEP106_identity_code(x)        (((uint32_t)(((uint32_t)(x))<<TPIU_PID2_JEP106_identity_code_SHIFT))&TPIU_PID2_JEP106_identity_code_MASK) /**< TPIU_PID2.JEP106_identity_code Field    */
#define TPIU_PID2_Revision_MASK                  (0xF0U)                                             /**< TPIU_PID2.Revision Mask                 */
#define TPIU_PID2_Revision_SHIFT                 (4U)                                                /**< TPIU_PID2.Revision Position             */
#define TPIU_PID2_Revision(x)                    (((uint32_t)(((uint32_t)(x))<<TPIU_PID2_Revision_SHIFT))&TPIU_PID2_Revision_MASK) /**< TPIU_PID2.Revision Field                */
/** @} */

/** @name PID3 - Peripheral Identification Register 3 */ /** @{ */
#define TPIU_PID3_CustomerModified_MASK          (0xFU)                                              /**< TPIU_PID3.CustomerModified Mask         */
#define TPIU_PID3_CustomerModified_SHIFT         (0U)                                                /**< TPIU_PID3.CustomerModified Position     */
#define TPIU_PID3_CustomerModified(x)            (((uint32_t)(((uint32_t)(x))<<TPIU_PID3_CustomerModified_SHIFT))&TPIU_PID3_CustomerModified_MASK) /**< TPIU_PID3.CustomerModified Field        */
#define TPIU_PID3_RevAnd_MASK                    (0xF0U)                                             /**< TPIU_PID3.RevAnd Mask                   */
#define TPIU_PID3_RevAnd_SHIFT                   (4U)                                                /**< TPIU_PID3.RevAnd Position               */
#define TPIU_PID3_RevAnd(x)                      (((uint32_t)(((uint32_t)(x))<<TPIU_PID3_RevAnd_SHIFT))&TPIU_PID3_RevAnd_MASK) /**< TPIU_PID3.RevAnd Field                  */
/** @} */

/** @name CID0 - Component Identification Register 0 */ /** @{ */
#define TPIU_CID0_Preamble_MASK                  (0xFFU)                                             /**< TPIU_CID0.Preamble Mask                 */
#define TPIU_CID0_Preamble_SHIFT                 (0U)                                                /**< TPIU_CID0.Preamble Position             */
#define TPIU_CID0_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<TPIU_CID0_Preamble_SHIFT))&TPIU_CID0_Preamble_MASK) /**< TPIU_CID0.Preamble Field                */
/** @} */

/** @name CID1 - Component Identification Register 1 */ /** @{ */
#define TPIU_CID1_Preamble_MASK                  (0xFU)                                              /**< TPIU_CID1.Preamble Mask                 */
#define TPIU_CID1_Preamble_SHIFT                 (0U)                                                /**< TPIU_CID1.Preamble Position             */
#define TPIU_CID1_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<TPIU_CID1_Preamble_SHIFT))&TPIU_CID1_Preamble_MASK) /**< TPIU_CID1.Preamble Field                */
#define TPIU_CID1_ComponentClass_MASK            (0xF0U)                                             /**< TPIU_CID1.ComponentClass Mask           */
#define TPIU_CID1_ComponentClass_SHIFT           (4U)                                                /**< TPIU_CID1.ComponentClass Position       */
#define TPIU_CID1_ComponentClass(x)              (((uint32_t)(((uint32_t)(x))<<TPIU_CID1_ComponentClass_SHIFT))&TPIU_CID1_ComponentClass_MASK) /**< TPIU_CID1.ComponentClass Field          */
/** @} */

/** @name CID2 - Component Identification Register 2 */ /** @{ */
#define TPIU_CID2_Preamble_MASK                  (0xFFU)                                             /**< TPIU_CID2.Preamble Mask                 */
#define TPIU_CID2_Preamble_SHIFT                 (0U)                                                /**< TPIU_CID2.Preamble Position             */
#define TPIU_CID2_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<TPIU_CID2_Preamble_SHIFT))&TPIU_CID2_Preamble_MASK) /**< TPIU_CID2.Preamble Field                */
/** @} */

/** @name CID3 - Component Identification Register 3 */ /** @{ */
#define TPIU_CID3_Preamble_MASK                  (0xFFU)                                             /**< TPIU_CID3.Preamble Mask                 */
#define TPIU_CID3_Preamble_SHIFT                 (0U)                                                /**< TPIU_CID3.Preamble Position             */
#define TPIU_CID3_Preamble(x)                    (((uint32_t)(((uint32_t)(x))<<TPIU_CID3_Preamble_SHIFT))&TPIU_CID3_Preamble_MASK) /**< TPIU_CID3.Preamble Field                */
/** @} */

/** @} */ /* End group TPIU_Register_Masks_GROUP */


/* TPIU - Peripheral instance base addresses */
#define TPIU_BasePtr                   0xE0040000UL //!< Peripheral base address
#define TPIU                           ((TPIU_Type *) TPIU_BasePtr) //!< Freescale base pointer
#define TPIU_BASE_PTR                  (TPIU) //!< Freescale style base pointer

/** @} */ /* End group TPIU_Peripheral_access_layer_GROUP */


/** @brief C Struct for TSI */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup TSI_Peripheral_access_layer_GROUP TSI Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           TSI0 (file:TSI0_MK)                  ================ */
/* ================================================================================ */

/**
 * @brief Touch Sensing Input
 */
/**
 * @struct TSI_Type
 * @brief  C Struct allowing access to TSI registers
 */
typedef struct TSI_Type {
   __IO uint32_t  GENCS;                        /**< 0000: General Control and Status Register                          */
   __IO uint32_t  SCANC;                        /**< 0004: SCAN Control Register                                        */
   __IO uint32_t  PEN;                          /**< 0008: Pin Enable Register                                          */
   __I  uint32_t  WUCNTR;                       /**< 000C: Wake-Up Channel Counter Register                             */
        uint8_t   RESERVED_0[240];              /**< 0010: 0xF0 bytes                                                   */
   union {                                      /**< 0100: (size=0020)                                                  */
      struct {                                  /**< 0100: (size=0020)                                                  */
      __I  uint32_t  CNTR1;                     /**< 0100: Counter Register 1                                           */
      __I  uint32_t  CNTR3;                     /**< 0104: Counter Register 3                                           */
      __I  uint32_t  CNTR5;                     /**< 0108: Counter Register 5                                           */
      __I  uint32_t  CNTR7;                     /**< 010C: Counter Register 7                                           */
      __I  uint32_t  CNTR9;                     /**< 0110: Counter Register 9                                           */
      __I  uint32_t  CNTR11;                    /**< 0114: Counter Register 11                                          */
      __I  uint32_t  CNTR13;                    /**< 0118: Counter Register 13                                          */
      __I  uint32_t  CNTR15;                    /**< 011C: Counter Register 15                                          */
      };
      __I  uint16_t  CNTR[16];                  /**< 0100: Counter Register                                             */
   };
   __IO uint32_t  THRESHOLD;                    /**< 0120: Low Power Channel Threshold Register                         */
} TSI_Type;


/** @brief Register Masks for TSI */

/* -------------------------------------------------------------------------------- */
/* -----------     'TSI0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup TSI_Register_Masks_GROUP TSI Register Masks */
/** @{ */

/** @name GENCS - General Control and Status Register */ /** @{ */
#define TSI_GENCS_STPE_MASK                      (0x1U)                                              /**< TSI0_GENCS.STPE Mask                    */
#define TSI_GENCS_STPE_SHIFT                     (0U)                                                /**< TSI0_GENCS.STPE Position                */
#define TSI_GENCS_STPE(x)                        (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_STPE_SHIFT))&TSI_GENCS_STPE_MASK) /**< TSI0_GENCS.STPE Field                   */
#define TSI_GENCS_STM_MASK                       (0x2U)                                              /**< TSI0_GENCS.STM Mask                     */
#define TSI_GENCS_STM_SHIFT                      (1U)                                                /**< TSI0_GENCS.STM Position                 */
#define TSI_GENCS_STM(x)                         (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_STM_SHIFT))&TSI_GENCS_STM_MASK) /**< TSI0_GENCS.STM Field                    */
#define TSI_GENCS_ESOR_MASK                      (0x10U)                                             /**< TSI0_GENCS.ESOR Mask                    */
#define TSI_GENCS_ESOR_SHIFT                     (4U)                                                /**< TSI0_GENCS.ESOR Position                */
#define TSI_GENCS_ESOR(x)                        (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_ESOR_SHIFT))&TSI_GENCS_ESOR_MASK) /**< TSI0_GENCS.ESOR Field                   */
#define TSI_GENCS_ERIE_MASK                      (0x20U)                                             /**< TSI0_GENCS.ERIE Mask                    */
#define TSI_GENCS_ERIE_SHIFT                     (5U)                                                /**< TSI0_GENCS.ERIE Position                */
#define TSI_GENCS_ERIE(x)                        (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_ERIE_SHIFT))&TSI_GENCS_ERIE_MASK) /**< TSI0_GENCS.ERIE Field                   */
#define TSI_GENCS_TSIIE_MASK                     (0x40U)                                             /**< TSI0_GENCS.TSIIE Mask                   */
#define TSI_GENCS_TSIIE_SHIFT                    (6U)                                                /**< TSI0_GENCS.TSIIE Position               */
#define TSI_GENCS_TSIIE(x)                       (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_TSIIE_SHIFT))&TSI_GENCS_TSIIE_MASK) /**< TSI0_GENCS.TSIIE Field                  */
#define TSI_GENCS_TSIEN_MASK                     (0x80U)                                             /**< TSI0_GENCS.TSIEN Mask                   */
#define TSI_GENCS_TSIEN_SHIFT                    (7U)                                                /**< TSI0_GENCS.TSIEN Position               */
#define TSI_GENCS_TSIEN(x)                       (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_TSIEN_SHIFT))&TSI_GENCS_TSIEN_MASK) /**< TSI0_GENCS.TSIEN Field                  */
#define TSI_GENCS_SWTS_MASK                      (0x100U)                                            /**< TSI0_GENCS.SWTS Mask                    */
#define TSI_GENCS_SWTS_SHIFT                     (8U)                                                /**< TSI0_GENCS.SWTS Position                */
#define TSI_GENCS_SWTS(x)                        (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_SWTS_SHIFT))&TSI_GENCS_SWTS_MASK) /**< TSI0_GENCS.SWTS Field                   */
#define TSI_GENCS_SCNIP_MASK                     (0x200U)                                            /**< TSI0_GENCS.SCNIP Mask                   */
#define TSI_GENCS_SCNIP_SHIFT                    (9U)                                                /**< TSI0_GENCS.SCNIP Position               */
#define TSI_GENCS_SCNIP(x)                       (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_SCNIP_SHIFT))&TSI_GENCS_SCNIP_MASK) /**< TSI0_GENCS.SCNIP Field                  */
#define TSI_GENCS_OVRF_MASK                      (0x1000U)                                           /**< TSI0_GENCS.OVRF Mask                    */
#define TSI_GENCS_OVRF_SHIFT                     (12U)                                               /**< TSI0_GENCS.OVRF Position                */
#define TSI_GENCS_OVRF(x)                        (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_OVRF_SHIFT))&TSI_GENCS_OVRF_MASK) /**< TSI0_GENCS.OVRF Field                   */
#define TSI_GENCS_EXTERF_MASK                    (0x2000U)                                           /**< TSI0_GENCS.EXTERF Mask                  */
#define TSI_GENCS_EXTERF_SHIFT                   (13U)                                               /**< TSI0_GENCS.EXTERF Position              */
#define TSI_GENCS_EXTERF(x)                      (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_EXTERF_SHIFT))&TSI_GENCS_EXTERF_MASK) /**< TSI0_GENCS.EXTERF Field                 */
#define TSI_GENCS_OUTRGF_MASK                    (0x4000U)                                           /**< TSI0_GENCS.OUTRGF Mask                  */
#define TSI_GENCS_OUTRGF_SHIFT                   (14U)                                               /**< TSI0_GENCS.OUTRGF Position              */
#define TSI_GENCS_OUTRGF(x)                      (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_OUTRGF_SHIFT))&TSI_GENCS_OUTRGF_MASK) /**< TSI0_GENCS.OUTRGF Field                 */
#define TSI_GENCS_EOSF_MASK                      (0x8000U)                                           /**< TSI0_GENCS.EOSF Mask                    */
#define TSI_GENCS_EOSF_SHIFT                     (15U)                                               /**< TSI0_GENCS.EOSF Position                */
#define TSI_GENCS_EOSF(x)                        (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_EOSF_SHIFT))&TSI_GENCS_EOSF_MASK) /**< TSI0_GENCS.EOSF Field                   */
#define TSI_GENCS_PS_MASK                        (0x70000U)                                          /**< TSI0_GENCS.PS Mask                      */
#define TSI_GENCS_PS_SHIFT                       (16U)                                               /**< TSI0_GENCS.PS Position                  */
#define TSI_GENCS_PS(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_PS_SHIFT))&TSI_GENCS_PS_MASK) /**< TSI0_GENCS.PS Field                     */
#define TSI_GENCS_NSCN_MASK                      (0xF80000U)                                         /**< TSI0_GENCS.NSCN Mask                    */
#define TSI_GENCS_NSCN_SHIFT                     (19U)                                               /**< TSI0_GENCS.NSCN Position                */
#define TSI_GENCS_NSCN(x)                        (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_NSCN_SHIFT))&TSI_GENCS_NSCN_MASK) /**< TSI0_GENCS.NSCN Field                   */
#define TSI_GENCS_LPSCNITV_MASK                  (0xF000000U)                                        /**< TSI0_GENCS.LPSCNITV Mask                */
#define TSI_GENCS_LPSCNITV_SHIFT                 (24U)                                               /**< TSI0_GENCS.LPSCNITV Position            */
#define TSI_GENCS_LPSCNITV(x)                    (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_LPSCNITV_SHIFT))&TSI_GENCS_LPSCNITV_MASK) /**< TSI0_GENCS.LPSCNITV Field               */
#define TSI_GENCS_LPCLKS_MASK                    (0x10000000U)                                       /**< TSI0_GENCS.LPCLKS Mask                  */
#define TSI_GENCS_LPCLKS_SHIFT                   (28U)                                               /**< TSI0_GENCS.LPCLKS Position              */
#define TSI_GENCS_LPCLKS(x)                      (((uint32_t)(((uint32_t)(x))<<TSI_GENCS_LPCLKS_SHIFT))&TSI_GENCS_LPCLKS_MASK) /**< TSI0_GENCS.LPCLKS Field                 */
/** @} */

/** @name SCANC - SCAN Control Register */ /** @{ */
#define TSI_SCANC_AMPSC_MASK                     (0x7U)                                              /**< TSI0_SCANC.AMPSC Mask                   */
#define TSI_SCANC_AMPSC_SHIFT                    (0U)                                                /**< TSI0_SCANC.AMPSC Position               */
#define TSI_SCANC_AMPSC(x)                       (((uint32_t)(((uint32_t)(x))<<TSI_SCANC_AMPSC_SHIFT))&TSI_SCANC_AMPSC_MASK) /**< TSI0_SCANC.AMPSC Field                  */
#define TSI_SCANC_AMCLKS_MASK                    (0x18U)                                             /**< TSI0_SCANC.AMCLKS Mask                  */
#define TSI_SCANC_AMCLKS_SHIFT                   (3U)                                                /**< TSI0_SCANC.AMCLKS Position              */
#define TSI_SCANC_AMCLKS(x)                      (((uint32_t)(((uint32_t)(x))<<TSI_SCANC_AMCLKS_SHIFT))&TSI_SCANC_AMCLKS_MASK) /**< TSI0_SCANC.AMCLKS Field                 */
#define TSI_SCANC_SMOD_MASK                      (0xFF00U)                                           /**< TSI0_SCANC.SMOD Mask                    */
#define TSI_SCANC_SMOD_SHIFT                     (8U)                                                /**< TSI0_SCANC.SMOD Position                */
#define TSI_SCANC_SMOD(x)                        (((uint32_t)(((uint32_t)(x))<<TSI_SCANC_SMOD_SHIFT))&TSI_SCANC_SMOD_MASK) /**< TSI0_SCANC.SMOD Field                   */
#define TSI_SCANC_EXTCHRG_MASK                   (0xF0000U)                                          /**< TSI0_SCANC.EXTCHRG Mask                 */
#define TSI_SCANC_EXTCHRG_SHIFT                  (16U)                                               /**< TSI0_SCANC.EXTCHRG Position             */
#define TSI_SCANC_EXTCHRG(x)                     (((uint32_t)(((uint32_t)(x))<<TSI_SCANC_EXTCHRG_SHIFT))&TSI_SCANC_EXTCHRG_MASK) /**< TSI0_SCANC.EXTCHRG Field                */
#define TSI_SCANC_REFCHRG_MASK                   (0xF000000U)                                        /**< TSI0_SCANC.REFCHRG Mask                 */
#define TSI_SCANC_REFCHRG_SHIFT                  (24U)                                               /**< TSI0_SCANC.REFCHRG Position             */
#define TSI_SCANC_REFCHRG(x)                     (((uint32_t)(((uint32_t)(x))<<TSI_SCANC_REFCHRG_SHIFT))&TSI_SCANC_REFCHRG_MASK) /**< TSI0_SCANC.REFCHRG Field                */
/** @} */

/** @name PEN - Pin Enable Register */ /** @{ */
#define TSI_PEN_PEN_MASK                         (0xFFFFU)                                           /**< TSI0_PEN.PEN Mask                       */
#define TSI_PEN_PEN_SHIFT                        (0U)                                                /**< TSI0_PEN.PEN Position                   */
#define TSI_PEN_PEN(x)                           (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN_SHIFT))&TSI_PEN_PEN_MASK) /**< TSI0_PEN.PEN Field                      */
#define TSI_PEN_PEN0_MASK                        (0x1U)                                              /**< TSI0_PEN.PEN0 Mask                      */
#define TSI_PEN_PEN0_SHIFT                       (0U)                                                /**< TSI0_PEN.PEN0 Position                  */
#define TSI_PEN_PEN0(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN0_SHIFT))&TSI_PEN_PEN0_MASK) /**< TSI0_PEN.PEN0 Field                     */
#define TSI_PEN_PEN1_MASK                        (0x2U)                                              /**< TSI0_PEN.PEN1 Mask                      */
#define TSI_PEN_PEN1_SHIFT                       (1U)                                                /**< TSI0_PEN.PEN1 Position                  */
#define TSI_PEN_PEN1(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN1_SHIFT))&TSI_PEN_PEN1_MASK) /**< TSI0_PEN.PEN1 Field                     */
#define TSI_PEN_PEN2_MASK                        (0x4U)                                              /**< TSI0_PEN.PEN2 Mask                      */
#define TSI_PEN_PEN2_SHIFT                       (2U)                                                /**< TSI0_PEN.PEN2 Position                  */
#define TSI_PEN_PEN2(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN2_SHIFT))&TSI_PEN_PEN2_MASK) /**< TSI0_PEN.PEN2 Field                     */
#define TSI_PEN_PEN3_MASK                        (0x8U)                                              /**< TSI0_PEN.PEN3 Mask                      */
#define TSI_PEN_PEN3_SHIFT                       (3U)                                                /**< TSI0_PEN.PEN3 Position                  */
#define TSI_PEN_PEN3(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN3_SHIFT))&TSI_PEN_PEN3_MASK) /**< TSI0_PEN.PEN3 Field                     */
#define TSI_PEN_PEN4_MASK                        (0x10U)                                             /**< TSI0_PEN.PEN4 Mask                      */
#define TSI_PEN_PEN4_SHIFT                       (4U)                                                /**< TSI0_PEN.PEN4 Position                  */
#define TSI_PEN_PEN4(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN4_SHIFT))&TSI_PEN_PEN4_MASK) /**< TSI0_PEN.PEN4 Field                     */
#define TSI_PEN_PEN5_MASK                        (0x20U)                                             /**< TSI0_PEN.PEN5 Mask                      */
#define TSI_PEN_PEN5_SHIFT                       (5U)                                                /**< TSI0_PEN.PEN5 Position                  */
#define TSI_PEN_PEN5(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN5_SHIFT))&TSI_PEN_PEN5_MASK) /**< TSI0_PEN.PEN5 Field                     */
#define TSI_PEN_PEN6_MASK                        (0x40U)                                             /**< TSI0_PEN.PEN6 Mask                      */
#define TSI_PEN_PEN6_SHIFT                       (6U)                                                /**< TSI0_PEN.PEN6 Position                  */
#define TSI_PEN_PEN6(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN6_SHIFT))&TSI_PEN_PEN6_MASK) /**< TSI0_PEN.PEN6 Field                     */
#define TSI_PEN_PEN7_MASK                        (0x80U)                                             /**< TSI0_PEN.PEN7 Mask                      */
#define TSI_PEN_PEN7_SHIFT                       (7U)                                                /**< TSI0_PEN.PEN7 Position                  */
#define TSI_PEN_PEN7(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN7_SHIFT))&TSI_PEN_PEN7_MASK) /**< TSI0_PEN.PEN7 Field                     */
#define TSI_PEN_PEN8_MASK                        (0x100U)                                            /**< TSI0_PEN.PEN8 Mask                      */
#define TSI_PEN_PEN8_SHIFT                       (8U)                                                /**< TSI0_PEN.PEN8 Position                  */
#define TSI_PEN_PEN8(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN8_SHIFT))&TSI_PEN_PEN8_MASK) /**< TSI0_PEN.PEN8 Field                     */
#define TSI_PEN_PEN9_MASK                        (0x200U)                                            /**< TSI0_PEN.PEN9 Mask                      */
#define TSI_PEN_PEN9_SHIFT                       (9U)                                                /**< TSI0_PEN.PEN9 Position                  */
#define TSI_PEN_PEN9(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN9_SHIFT))&TSI_PEN_PEN9_MASK) /**< TSI0_PEN.PEN9 Field                     */
#define TSI_PEN_PEN10_MASK                       (0x400U)                                            /**< TSI0_PEN.PEN10 Mask                     */
#define TSI_PEN_PEN10_SHIFT                      (10U)                                               /**< TSI0_PEN.PEN10 Position                 */
#define TSI_PEN_PEN10(x)                         (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN10_SHIFT))&TSI_PEN_PEN10_MASK) /**< TSI0_PEN.PEN10 Field                    */
#define TSI_PEN_PEN11_MASK                       (0x800U)                                            /**< TSI0_PEN.PEN11 Mask                     */
#define TSI_PEN_PEN11_SHIFT                      (11U)                                               /**< TSI0_PEN.PEN11 Position                 */
#define TSI_PEN_PEN11(x)                         (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN11_SHIFT))&TSI_PEN_PEN11_MASK) /**< TSI0_PEN.PEN11 Field                    */
#define TSI_PEN_PEN12_MASK                       (0x1000U)                                           /**< TSI0_PEN.PEN12 Mask                     */
#define TSI_PEN_PEN12_SHIFT                      (12U)                                               /**< TSI0_PEN.PEN12 Position                 */
#define TSI_PEN_PEN12(x)                         (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN12_SHIFT))&TSI_PEN_PEN12_MASK) /**< TSI0_PEN.PEN12 Field                    */
#define TSI_PEN_PEN13_MASK                       (0x2000U)                                           /**< TSI0_PEN.PEN13 Mask                     */
#define TSI_PEN_PEN13_SHIFT                      (13U)                                               /**< TSI0_PEN.PEN13 Position                 */
#define TSI_PEN_PEN13(x)                         (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN13_SHIFT))&TSI_PEN_PEN13_MASK) /**< TSI0_PEN.PEN13 Field                    */
#define TSI_PEN_PEN14_MASK                       (0x4000U)                                           /**< TSI0_PEN.PEN14 Mask                     */
#define TSI_PEN_PEN14_SHIFT                      (14U)                                               /**< TSI0_PEN.PEN14 Position                 */
#define TSI_PEN_PEN14(x)                         (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN14_SHIFT))&TSI_PEN_PEN14_MASK) /**< TSI0_PEN.PEN14 Field                    */
#define TSI_PEN_PEN15_MASK                       (0x8000U)                                           /**< TSI0_PEN.PEN15 Mask                     */
#define TSI_PEN_PEN15_SHIFT                      (15U)                                               /**< TSI0_PEN.PEN15 Position                 */
#define TSI_PEN_PEN15(x)                         (((uint32_t)(((uint32_t)(x))<<TSI_PEN_PEN15_SHIFT))&TSI_PEN_PEN15_MASK) /**< TSI0_PEN.PEN15 Field                    */
#define TSI_PEN_LPSP_MASK                        (0xF0000U)                                          /**< TSI0_PEN.LPSP Mask                      */
#define TSI_PEN_LPSP_SHIFT                       (16U)                                               /**< TSI0_PEN.LPSP Position                  */
#define TSI_PEN_LPSP(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_PEN_LPSP_SHIFT))&TSI_PEN_LPSP_MASK) /**< TSI0_PEN.LPSP Field                     */
/** @} */

/** @name WUCNTR - Wake-Up Channel Counter Register */ /** @{ */
#define TSI_WUCNTR_WUCNT_MASK                    (0xFFFFU)                                           /**< TSI0_WUCNTR.WUCNT Mask                  */
#define TSI_WUCNTR_WUCNT_SHIFT                   (0U)                                                /**< TSI0_WUCNTR.WUCNT Position              */
#define TSI_WUCNTR_WUCNT(x)                      (((uint32_t)(((uint32_t)(x))<<TSI_WUCNTR_WUCNT_SHIFT))&TSI_WUCNTR_WUCNT_MASK) /**< TSI0_WUCNTR.WUCNT Field                 */
/** @} */

/** @name CNTR - Counter Register %s */ /** @{ */
#define TSI_CNTR_CTN1_MASK                       (0xFFFFU)                                           /**< TSI0_CNTR.CTN1 Mask                     */
#define TSI_CNTR_CTN1_SHIFT                      (0U)                                                /**< TSI0_CNTR.CTN1 Position                 */
#define TSI_CNTR_CTN1(x)                         (((uint32_t)(((uint32_t)(x))<<TSI_CNTR_CTN1_SHIFT))&TSI_CNTR_CTN1_MASK) /**< TSI0_CNTR.CTN1 Field                    */
#define TSI_CNTR_CTN_MASK                        (0xFFFF0000U)                                       /**< TSI0_CNTR.CTN Mask                      */
#define TSI_CNTR_CTN_SHIFT                       (16U)                                               /**< TSI0_CNTR.CTN Position                  */
#define TSI_CNTR_CTN(x)                          (((uint32_t)(((uint32_t)(x))<<TSI_CNTR_CTN_SHIFT))&TSI_CNTR_CTN_MASK) /**< TSI0_CNTR.CTN Field                     */
/** @} */

/** @name CNTR - Counter Register %s */ /** @{ */
#define TSI_CNTR_CNT_MASK                        (0xFFFFU)                                           /**< TSI0_CNTR.CNT Mask                      */
#define TSI_CNTR_CNT_SHIFT                       (0U)                                                /**< TSI0_CNTR.CNT Position                  */
#define TSI_CNTR_CNT(x)                          (((uint16_t)(((uint16_t)(x))<<TSI_CNTR_CNT_SHIFT))&TSI_CNTR_CNT_MASK) /**< TSI0_CNTR.CNT Field                     */
/** @} */

/** @name THRESHOLD - Low Power Channel Threshold Register */ /** @{ */
#define TSI_THRESHOLD_HTHH_MASK                  (0xFFFFU)                                           /**< TSI0_THRESHOLD.HTHH Mask                */
#define TSI_THRESHOLD_HTHH_SHIFT                 (0U)                                                /**< TSI0_THRESHOLD.HTHH Position            */
#define TSI_THRESHOLD_HTHH(x)                    (((uint32_t)(((uint32_t)(x))<<TSI_THRESHOLD_HTHH_SHIFT))&TSI_THRESHOLD_HTHH_MASK) /**< TSI0_THRESHOLD.HTHH Field               */
#define TSI_THRESHOLD_LTHH_MASK                  (0xFFFF0000U)                                       /**< TSI0_THRESHOLD.LTHH Mask                */
#define TSI_THRESHOLD_LTHH_SHIFT                 (16U)                                               /**< TSI0_THRESHOLD.LTHH Position            */
#define TSI_THRESHOLD_LTHH(x)                    (((uint32_t)(((uint32_t)(x))<<TSI_THRESHOLD_LTHH_SHIFT))&TSI_THRESHOLD_LTHH_MASK) /**< TSI0_THRESHOLD.LTHH Field               */
/** @} */

/** @} */ /* End group TSI_Register_Masks_GROUP */


/* TSI0 - Peripheral instance base addresses */
#define TSI0_BasePtr                   0x40045000UL //!< Peripheral base address
#define TSI0                           ((TSI_Type *) TSI0_BasePtr) //!< Freescale base pointer
#define TSI0_BASE_PTR                  (TSI0) //!< Freescale style base pointer
#define TSI0_IRQS { TSI0_IRQn,  }


/** @} */ /* End group TSI_Peripheral_access_layer_GROUP */


/** @brief C Struct for UART */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup UART_Peripheral_access_layer_GROUP UART Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           UART0 (file:UART0_MK10D10_C7816_CEA709)       ================ */
/* ================================================================================ */

/**
 * @brief Universal Asynchronous Receiver/Transmitter (C7816, CEA709)
 */
/**
 * @struct UART_Type
 * @brief  C Struct allowing access to UART registers
 */
typedef struct UART_Type {
   __IO uint8_t   BDH;                          /**< 0000: Baud Rate Register: High                                     */
   __IO uint8_t   BDL;                          /**< 0001: Baud Rate Register: Low                                      */
   __IO uint8_t   C1;                           /**< 0002: Control Register 1                                           */
   __IO uint8_t   C2;                           /**< 0003: Control Register 2                                           */
   __I  uint8_t   S1;                           /**< 0004: Status Register 1                                            */
   __IO uint8_t   S2;                           /**< 0005: Status Register 2                                            */
   __IO uint8_t   C3;                           /**< 0006: Control Register 3                                           */
   __IO uint8_t   D;                            /**< 0007: Data Register                                                */
   __IO uint8_t   MA1;                          /**< 0008: Match Address Registers 1                                    */
   __IO uint8_t   MA2;                          /**< 0009: Match Address Registers 2                                    */
   __IO uint8_t   C4;                           /**< 000A: Control Register 4                                           */
   __IO uint8_t   C5;                           /**< 000B: Control Register 5                                           */
   __I  uint8_t   ED;                           /**< 000C: Extended Data Register                                       */
   __IO uint8_t   MODEM;                        /**< 000D: Modem Register                                               */
   __IO uint8_t   IR;                           /**< 000E: Infrared Register                                            */
        uint8_t   RESERVED_0;                   /**< 000F: 0x1 bytes                                                    */
   __IO uint8_t   PFIFO;                        /**< 0010: FIFO Parameters                                              */
   __IO uint8_t   CFIFO;                        /**< 0011: FIFO Control Register                                        */
   __IO uint8_t   SFIFO;                        /**< 0012: FIFO Status Register                                         */
   __IO uint8_t   TWFIFO;                       /**< 0013: FIFO Transmit Watermark                                      */
   __I  uint8_t   TCFIFO;                       /**< 0014: FIFO Transmit Count                                          */
   __IO uint8_t   RWFIFO;                       /**< 0015: FIFO Receive Watermark                                       */
   __I  uint8_t   RCFIFO;                       /**< 0016: FIFO Receive Count                                           */
        uint8_t   RESERVED_1;                   /**< 0017: 0x1 bytes                                                    */
   __IO uint8_t   C7816;                        /**< 0018: 7816 Control Register                                        */
   __IO uint8_t   IE7816;                       /**< 0019: 7816 Interrupt Enable Register                               */
   __IO uint8_t   IS7816;                       /**< 001A: 7816 Interrupt Status Register                               */
   union {                                      /**< 001B: (size=0001)                                                  */
      __IO uint8_t   WP7816T0;                  /**< 001B: 7816 Wait Parameter Register                                 */
      __IO uint8_t   WP7816T1;                  /**< 001B: 7816 Wait Parameter Register                                 */
   };
   __IO uint8_t   WN7816;                       /**< 001C: 7816 Wait N Register                                         */
   __IO uint8_t   WF7816;                       /**< 001D: 7816 Wait FD Register                                        */
   __IO uint8_t   ET7816;                       /**< 001E: 7816 Error Threshold Register                                */
   __IO uint8_t   TL7816;                       /**< 001F: 7816 Transmit Length Register                                */
        uint8_t   RESERVED_2;                   /**< 0020: 0x1 bytes                                                    */
   __IO uint8_t   C6;                           /**< 0021: CEA709.1-B Control Register 6                                */
   __IO uint8_t   PCTH;                         /**< 0022: CEA709.1-B Packet Cycle Time Counter High                    */
   __IO uint8_t   PCTL;                         /**< 0023: CEA709.1-B Packet Cycle Time Counter Low                     */
   __IO uint8_t   B1T;                          /**< 0024: CEA709.1-B Beta1 Timer                                       */
   __IO uint8_t   SDTH;                         /**< 0025: CEA709.1-B Secondary Delay Timer High                        */
   __IO uint8_t   SDTL;                         /**< 0026: CEA709.1-B Secondary Delay Timer Low                         */
   __IO uint8_t   PRE;                          /**< 0027: CEA709.1-B Preamble                                          */
   __IO uint8_t   TPL;                          /**< 0028: CEA709.1-B Transmit Packet Length                            */
   __IO uint8_t   IE;                           /**< 0029: CEA709.1-B Interrupt Enable Register                         */
   __IO uint8_t   WB;                           /**< 002A: CEA709.1-B WBASE                                             */
   __IO uint8_t   S3;                           /**< 002B: CEA709.1-B Status Register                                   */
   __IO uint8_t   S4;                           /**< 002C: CEA709.1-B Status Register                                   */
   __I  uint8_t   RPL;                          /**< 002D: CEA709.1-B Received Packet Length                            */
   __I  uint8_t   RPREL;                        /**< 002E: CEA709.1-B Received Preamble Length                          */
   __IO uint8_t   CPW;                          /**< 002F: CEA709.1-B Collision Pulse Width                             */
   __IO uint8_t   RIDT;                         /**< 0030: CEA709.1-B Receive Indeterminate Time                        */
   __IO uint8_t   TIDT;                         /**< 0031: CEA709.1-B Transmit Indeterminate Time                       */
} UART_Type;


/** @brief Register Masks for UART */

/* -------------------------------------------------------------------------------- */
/* -----------     'UART0' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup UART_Register_Masks_GROUP UART Register Masks */
/** @{ */

/** @name BDH - Baud Rate Register: High */ /** @{ */
#define UART_BDH_SBR_MASK                        (0x1FU)                                             /**< UART0_BDH.SBR Mask                      */
#define UART_BDH_SBR_SHIFT                       (0U)                                                /**< UART0_BDH.SBR Position                  */
#define UART_BDH_SBR(x)                          (((uint8_t)(((uint8_t)(x))<<UART_BDH_SBR_SHIFT))&UART_BDH_SBR_MASK) /**< UART0_BDH.SBR Field                     */
#define UART_BDH_RXEDGIE_MASK                    (0x40U)                                             /**< UART0_BDH.RXEDGIE Mask                  */
#define UART_BDH_RXEDGIE_SHIFT                   (6U)                                                /**< UART0_BDH.RXEDGIE Position              */
#define UART_BDH_RXEDGIE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_BDH_RXEDGIE_SHIFT))&UART_BDH_RXEDGIE_MASK) /**< UART0_BDH.RXEDGIE Field                 */
#define UART_BDH_LBKDIE_MASK                     (0x80U)                                             /**< UART0_BDH.LBKDIE Mask                   */
#define UART_BDH_LBKDIE_SHIFT                    (7U)                                                /**< UART0_BDH.LBKDIE Position               */
#define UART_BDH_LBKDIE(x)                       (((uint8_t)(((uint8_t)(x))<<UART_BDH_LBKDIE_SHIFT))&UART_BDH_LBKDIE_MASK) /**< UART0_BDH.LBKDIE Field                  */
/** @} */

/** @name BDL - Baud Rate Register: Low */ /** @{ */
#define UART_BDL_SBR_MASK                        (0xFFU)                                             /**< UART0_BDL.SBR Mask                      */
#define UART_BDL_SBR_SHIFT                       (0U)                                                /**< UART0_BDL.SBR Position                  */
#define UART_BDL_SBR(x)                          (((uint8_t)(((uint8_t)(x))<<UART_BDL_SBR_SHIFT))&UART_BDL_SBR_MASK) /**< UART0_BDL.SBR Field                     */
/** @} */

/** @name C1 - Control Register 1 */ /** @{ */
#define UART_C1_PT_MASK                          (0x1U)                                              /**< UART0_C1.PT Mask                        */
#define UART_C1_PT_SHIFT                         (0U)                                                /**< UART0_C1.PT Position                    */
#define UART_C1_PT(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C1_PT_SHIFT))&UART_C1_PT_MASK) /**< UART0_C1.PT Field                       */
#define UART_C1_PE_MASK                          (0x2U)                                              /**< UART0_C1.PE Mask                        */
#define UART_C1_PE_SHIFT                         (1U)                                                /**< UART0_C1.PE Position                    */
#define UART_C1_PE(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C1_PE_SHIFT))&UART_C1_PE_MASK) /**< UART0_C1.PE Field                       */
#define UART_C1_ILT_MASK                         (0x4U)                                              /**< UART0_C1.ILT Mask                       */
#define UART_C1_ILT_SHIFT                        (2U)                                                /**< UART0_C1.ILT Position                   */
#define UART_C1_ILT(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C1_ILT_SHIFT))&UART_C1_ILT_MASK) /**< UART0_C1.ILT Field                      */
#define UART_C1_WAKE_MASK                        (0x8U)                                              /**< UART0_C1.WAKE Mask                      */
#define UART_C1_WAKE_SHIFT                       (3U)                                                /**< UART0_C1.WAKE Position                  */
#define UART_C1_WAKE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C1_WAKE_SHIFT))&UART_C1_WAKE_MASK) /**< UART0_C1.WAKE Field                     */
#define UART_C1_M_MASK                           (0x10U)                                             /**< UART0_C1.M Mask                         */
#define UART_C1_M_SHIFT                          (4U)                                                /**< UART0_C1.M Position                     */
#define UART_C1_M(x)                             (((uint8_t)(((uint8_t)(x))<<UART_C1_M_SHIFT))&UART_C1_M_MASK) /**< UART0_C1.M Field                        */
#define UART_C1_RSRC_MASK                        (0x20U)                                             /**< UART0_C1.RSRC Mask                      */
#define UART_C1_RSRC_SHIFT                       (5U)                                                /**< UART0_C1.RSRC Position                  */
#define UART_C1_RSRC(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C1_RSRC_SHIFT))&UART_C1_RSRC_MASK) /**< UART0_C1.RSRC Field                     */
#define UART_C1_UARTSWAI_MASK                    (0x40U)                                             /**< UART0_C1.UARTSWAI Mask                  */
#define UART_C1_UARTSWAI_SHIFT                   (6U)                                                /**< UART0_C1.UARTSWAI Position              */
#define UART_C1_UARTSWAI(x)                      (((uint8_t)(((uint8_t)(x))<<UART_C1_UARTSWAI_SHIFT))&UART_C1_UARTSWAI_MASK) /**< UART0_C1.UARTSWAI Field                 */
#define UART_C1_LOOPS_MASK                       (0x80U)                                             /**< UART0_C1.LOOPS Mask                     */
#define UART_C1_LOOPS_SHIFT                      (7U)                                                /**< UART0_C1.LOOPS Position                 */
#define UART_C1_LOOPS(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C1_LOOPS_SHIFT))&UART_C1_LOOPS_MASK) /**< UART0_C1.LOOPS Field                    */
/** @} */

/** @name C2 - Control Register 2 */ /** @{ */
#define UART_C2_SBK_MASK                         (0x1U)                                              /**< UART0_C2.SBK Mask                       */
#define UART_C2_SBK_SHIFT                        (0U)                                                /**< UART0_C2.SBK Position                   */
#define UART_C2_SBK(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C2_SBK_SHIFT))&UART_C2_SBK_MASK) /**< UART0_C2.SBK Field                      */
#define UART_C2_RWU_MASK                         (0x2U)                                              /**< UART0_C2.RWU Mask                       */
#define UART_C2_RWU_SHIFT                        (1U)                                                /**< UART0_C2.RWU Position                   */
#define UART_C2_RWU(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C2_RWU_SHIFT))&UART_C2_RWU_MASK) /**< UART0_C2.RWU Field                      */
#define UART_C2_RE_MASK                          (0x4U)                                              /**< UART0_C2.RE Mask                        */
#define UART_C2_RE_SHIFT                         (2U)                                                /**< UART0_C2.RE Position                    */
#define UART_C2_RE(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C2_RE_SHIFT))&UART_C2_RE_MASK) /**< UART0_C2.RE Field                       */
#define UART_C2_TE_MASK                          (0x8U)                                              /**< UART0_C2.TE Mask                        */
#define UART_C2_TE_SHIFT                         (3U)                                                /**< UART0_C2.TE Position                    */
#define UART_C2_TE(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C2_TE_SHIFT))&UART_C2_TE_MASK) /**< UART0_C2.TE Field                       */
#define UART_C2_ILIE_MASK                        (0x10U)                                             /**< UART0_C2.ILIE Mask                      */
#define UART_C2_ILIE_SHIFT                       (4U)                                                /**< UART0_C2.ILIE Position                  */
#define UART_C2_ILIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C2_ILIE_SHIFT))&UART_C2_ILIE_MASK) /**< UART0_C2.ILIE Field                     */
#define UART_C2_RIE_MASK                         (0x20U)                                             /**< UART0_C2.RIE Mask                       */
#define UART_C2_RIE_SHIFT                        (5U)                                                /**< UART0_C2.RIE Position                   */
#define UART_C2_RIE(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C2_RIE_SHIFT))&UART_C2_RIE_MASK) /**< UART0_C2.RIE Field                      */
#define UART_C2_TCIE_MASK                        (0x40U)                                             /**< UART0_C2.TCIE Mask                      */
#define UART_C2_TCIE_SHIFT                       (6U)                                                /**< UART0_C2.TCIE Position                  */
#define UART_C2_TCIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C2_TCIE_SHIFT))&UART_C2_TCIE_MASK) /**< UART0_C2.TCIE Field                     */
#define UART_C2_TIE_MASK                         (0x80U)                                             /**< UART0_C2.TIE Mask                       */
#define UART_C2_TIE_SHIFT                        (7U)                                                /**< UART0_C2.TIE Position                   */
#define UART_C2_TIE(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C2_TIE_SHIFT))&UART_C2_TIE_MASK) /**< UART0_C2.TIE Field                      */
/** @} */

/** @name S1 - Status Register 1 */ /** @{ */
#define UART_S1_PF_MASK                          (0x1U)                                              /**< UART0_S1.PF Mask                        */
#define UART_S1_PF_SHIFT                         (0U)                                                /**< UART0_S1.PF Position                    */
#define UART_S1_PF(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S1_PF_SHIFT))&UART_S1_PF_MASK) /**< UART0_S1.PF Field                       */
#define UART_S1_FE_MASK                          (0x2U)                                              /**< UART0_S1.FE Mask                        */
#define UART_S1_FE_SHIFT                         (1U)                                                /**< UART0_S1.FE Position                    */
#define UART_S1_FE(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S1_FE_SHIFT))&UART_S1_FE_MASK) /**< UART0_S1.FE Field                       */
#define UART_S1_NF_MASK                          (0x4U)                                              /**< UART0_S1.NF Mask                        */
#define UART_S1_NF_SHIFT                         (2U)                                                /**< UART0_S1.NF Position                    */
#define UART_S1_NF(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S1_NF_SHIFT))&UART_S1_NF_MASK) /**< UART0_S1.NF Field                       */
#define UART_S1_OR_MASK                          (0x8U)                                              /**< UART0_S1.OR Mask                        */
#define UART_S1_OR_SHIFT                         (3U)                                                /**< UART0_S1.OR Position                    */
#define UART_S1_OR(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S1_OR_SHIFT))&UART_S1_OR_MASK) /**< UART0_S1.OR Field                       */
#define UART_S1_IDLE_MASK                        (0x10U)                                             /**< UART0_S1.IDLE Mask                      */
#define UART_S1_IDLE_SHIFT                       (4U)                                                /**< UART0_S1.IDLE Position                  */
#define UART_S1_IDLE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S1_IDLE_SHIFT))&UART_S1_IDLE_MASK) /**< UART0_S1.IDLE Field                     */
#define UART_S1_RDRF_MASK                        (0x20U)                                             /**< UART0_S1.RDRF Mask                      */
#define UART_S1_RDRF_SHIFT                       (5U)                                                /**< UART0_S1.RDRF Position                  */
#define UART_S1_RDRF(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S1_RDRF_SHIFT))&UART_S1_RDRF_MASK) /**< UART0_S1.RDRF Field                     */
#define UART_S1_TC_MASK                          (0x40U)                                             /**< UART0_S1.TC Mask                        */
#define UART_S1_TC_SHIFT                         (6U)                                                /**< UART0_S1.TC Position                    */
#define UART_S1_TC(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S1_TC_SHIFT))&UART_S1_TC_MASK) /**< UART0_S1.TC Field                       */
#define UART_S1_TDRE_MASK                        (0x80U)                                             /**< UART0_S1.TDRE Mask                      */
#define UART_S1_TDRE_SHIFT                       (7U)                                                /**< UART0_S1.TDRE Position                  */
#define UART_S1_TDRE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S1_TDRE_SHIFT))&UART_S1_TDRE_MASK) /**< UART0_S1.TDRE Field                     */
/** @} */

/** @name S2 - Status Register 2 */ /** @{ */
#define UART_S2_RAF_MASK                         (0x1U)                                              /**< UART0_S2.RAF Mask                       */
#define UART_S2_RAF_SHIFT                        (0U)                                                /**< UART0_S2.RAF Position                   */
#define UART_S2_RAF(x)                           (((uint8_t)(((uint8_t)(x))<<UART_S2_RAF_SHIFT))&UART_S2_RAF_MASK) /**< UART0_S2.RAF Field                      */
#define UART_S2_LBKDE_MASK                       (0x2U)                                              /**< UART0_S2.LBKDE Mask                     */
#define UART_S2_LBKDE_SHIFT                      (1U)                                                /**< UART0_S2.LBKDE Position                 */
#define UART_S2_LBKDE(x)                         (((uint8_t)(((uint8_t)(x))<<UART_S2_LBKDE_SHIFT))&UART_S2_LBKDE_MASK) /**< UART0_S2.LBKDE Field                    */
#define UART_S2_BRK13_MASK                       (0x4U)                                              /**< UART0_S2.BRK13 Mask                     */
#define UART_S2_BRK13_SHIFT                      (2U)                                                /**< UART0_S2.BRK13 Position                 */
#define UART_S2_BRK13(x)                         (((uint8_t)(((uint8_t)(x))<<UART_S2_BRK13_SHIFT))&UART_S2_BRK13_MASK) /**< UART0_S2.BRK13 Field                    */
#define UART_S2_RWUID_MASK                       (0x8U)                                              /**< UART0_S2.RWUID Mask                     */
#define UART_S2_RWUID_SHIFT                      (3U)                                                /**< UART0_S2.RWUID Position                 */
#define UART_S2_RWUID(x)                         (((uint8_t)(((uint8_t)(x))<<UART_S2_RWUID_SHIFT))&UART_S2_RWUID_MASK) /**< UART0_S2.RWUID Field                    */
#define UART_S2_RXINV_MASK                       (0x10U)                                             /**< UART0_S2.RXINV Mask                     */
#define UART_S2_RXINV_SHIFT                      (4U)                                                /**< UART0_S2.RXINV Position                 */
#define UART_S2_RXINV(x)                         (((uint8_t)(((uint8_t)(x))<<UART_S2_RXINV_SHIFT))&UART_S2_RXINV_MASK) /**< UART0_S2.RXINV Field                    */
#define UART_S2_MSBF_MASK                        (0x20U)                                             /**< UART0_S2.MSBF Mask                      */
#define UART_S2_MSBF_SHIFT                       (5U)                                                /**< UART0_S2.MSBF Position                  */
#define UART_S2_MSBF(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S2_MSBF_SHIFT))&UART_S2_MSBF_MASK) /**< UART0_S2.MSBF Field                     */
#define UART_S2_RXEDGIF_MASK                     (0x40U)                                             /**< UART0_S2.RXEDGIF Mask                   */
#define UART_S2_RXEDGIF_SHIFT                    (6U)                                                /**< UART0_S2.RXEDGIF Position               */
#define UART_S2_RXEDGIF(x)                       (((uint8_t)(((uint8_t)(x))<<UART_S2_RXEDGIF_SHIFT))&UART_S2_RXEDGIF_MASK) /**< UART0_S2.RXEDGIF Field                  */
#define UART_S2_LBKDIF_MASK                      (0x80U)                                             /**< UART0_S2.LBKDIF Mask                    */
#define UART_S2_LBKDIF_SHIFT                     (7U)                                                /**< UART0_S2.LBKDIF Position                */
#define UART_S2_LBKDIF(x)                        (((uint8_t)(((uint8_t)(x))<<UART_S2_LBKDIF_SHIFT))&UART_S2_LBKDIF_MASK) /**< UART0_S2.LBKDIF Field                   */
/** @} */

/** @name C3 - Control Register 3 */ /** @{ */
#define UART_C3_PEIE_MASK                        (0x1U)                                              /**< UART0_C3.PEIE Mask                      */
#define UART_C3_PEIE_SHIFT                       (0U)                                                /**< UART0_C3.PEIE Position                  */
#define UART_C3_PEIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C3_PEIE_SHIFT))&UART_C3_PEIE_MASK) /**< UART0_C3.PEIE Field                     */
#define UART_C3_FEIE_MASK                        (0x2U)                                              /**< UART0_C3.FEIE Mask                      */
#define UART_C3_FEIE_SHIFT                       (1U)                                                /**< UART0_C3.FEIE Position                  */
#define UART_C3_FEIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C3_FEIE_SHIFT))&UART_C3_FEIE_MASK) /**< UART0_C3.FEIE Field                     */
#define UART_C3_NEIE_MASK                        (0x4U)                                              /**< UART0_C3.NEIE Mask                      */
#define UART_C3_NEIE_SHIFT                       (2U)                                                /**< UART0_C3.NEIE Position                  */
#define UART_C3_NEIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C3_NEIE_SHIFT))&UART_C3_NEIE_MASK) /**< UART0_C3.NEIE Field                     */
#define UART_C3_ORIE_MASK                        (0x8U)                                              /**< UART0_C3.ORIE Mask                      */
#define UART_C3_ORIE_SHIFT                       (3U)                                                /**< UART0_C3.ORIE Position                  */
#define UART_C3_ORIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C3_ORIE_SHIFT))&UART_C3_ORIE_MASK) /**< UART0_C3.ORIE Field                     */
#define UART_C3_TXINV_MASK                       (0x10U)                                             /**< UART0_C3.TXINV Mask                     */
#define UART_C3_TXINV_SHIFT                      (4U)                                                /**< UART0_C3.TXINV Position                 */
#define UART_C3_TXINV(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C3_TXINV_SHIFT))&UART_C3_TXINV_MASK) /**< UART0_C3.TXINV Field                    */
#define UART_C3_TXDIR_MASK                       (0x20U)                                             /**< UART0_C3.TXDIR Mask                     */
#define UART_C3_TXDIR_SHIFT                      (5U)                                                /**< UART0_C3.TXDIR Position                 */
#define UART_C3_TXDIR(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C3_TXDIR_SHIFT))&UART_C3_TXDIR_MASK) /**< UART0_C3.TXDIR Field                    */
#define UART_C3_T8_MASK                          (0x40U)                                             /**< UART0_C3.T8 Mask                        */
#define UART_C3_T8_SHIFT                         (6U)                                                /**< UART0_C3.T8 Position                    */
#define UART_C3_T8(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C3_T8_SHIFT))&UART_C3_T8_MASK) /**< UART0_C3.T8 Field                       */
#define UART_C3_R8_MASK                          (0x80U)                                             /**< UART0_C3.R8 Mask                        */
#define UART_C3_R8_SHIFT                         (7U)                                                /**< UART0_C3.R8 Position                    */
#define UART_C3_R8(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C3_R8_SHIFT))&UART_C3_R8_MASK) /**< UART0_C3.R8 Field                       */
/** @} */

/** @name D - Data Register */ /** @{ */
#define UART_D_RT_MASK                           (0xFFU)                                             /**< UART0_D.RT Mask                         */
#define UART_D_RT_SHIFT                          (0U)                                                /**< UART0_D.RT Position                     */
#define UART_D_RT(x)                             (((uint8_t)(((uint8_t)(x))<<UART_D_RT_SHIFT))&UART_D_RT_MASK) /**< UART0_D.RT Field                        */
/** @} */

/** @name MA - Match Address Registers %s */ /** @{ */
#define UART_MA_MA_MASK                          (0xFFU)                                             /**< UART0_MA.MA Mask                        */
#define UART_MA_MA_SHIFT                         (0U)                                                /**< UART0_MA.MA Position                    */
#define UART_MA_MA(x)                            (((uint8_t)(((uint8_t)(x))<<UART_MA_MA_SHIFT))&UART_MA_MA_MASK) /**< UART0_MA.MA Field                       */
/** @} */

/** @name C4 - Control Register 4 */ /** @{ */
#define UART_C4_BRFA_MASK                        (0x1FU)                                             /**< UART0_C4.BRFA Mask                      */
#define UART_C4_BRFA_SHIFT                       (0U)                                                /**< UART0_C4.BRFA Position                  */
#define UART_C4_BRFA(x)                          (((uint8_t)(((uint8_t)(x))<<UART_C4_BRFA_SHIFT))&UART_C4_BRFA_MASK) /**< UART0_C4.BRFA Field                     */
#define UART_C4_M10_MASK                         (0x20U)                                             /**< UART0_C4.M10 Mask                       */
#define UART_C4_M10_SHIFT                        (5U)                                                /**< UART0_C4.M10 Position                   */
#define UART_C4_M10(x)                           (((uint8_t)(((uint8_t)(x))<<UART_C4_M10_SHIFT))&UART_C4_M10_MASK) /**< UART0_C4.M10 Field                      */
#define UART_C4_MAEN2_MASK                       (0x40U)                                             /**< UART0_C4.MAEN2 Mask                     */
#define UART_C4_MAEN2_SHIFT                      (6U)                                                /**< UART0_C4.MAEN2 Position                 */
#define UART_C4_MAEN2(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C4_MAEN2_SHIFT))&UART_C4_MAEN2_MASK) /**< UART0_C4.MAEN2 Field                    */
#define UART_C4_MAEN1_MASK                       (0x80U)                                             /**< UART0_C4.MAEN1 Mask                     */
#define UART_C4_MAEN1_SHIFT                      (7U)                                                /**< UART0_C4.MAEN1 Position                 */
#define UART_C4_MAEN1(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C4_MAEN1_SHIFT))&UART_C4_MAEN1_MASK) /**< UART0_C4.MAEN1 Field                    */
/** @} */

/** @name C5 - Control Register 5 */ /** @{ */
#define UART_C5_RDMAS_MASK                       (0x20U)                                             /**< UART0_C5.RDMAS Mask                     */
#define UART_C5_RDMAS_SHIFT                      (5U)                                                /**< UART0_C5.RDMAS Position                 */
#define UART_C5_RDMAS(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C5_RDMAS_SHIFT))&UART_C5_RDMAS_MASK) /**< UART0_C5.RDMAS Field                    */
#define UART_C5_TDMAS_MASK                       (0x80U)                                             /**< UART0_C5.TDMAS Mask                     */
#define UART_C5_TDMAS_SHIFT                      (7U)                                                /**< UART0_C5.TDMAS Position                 */
#define UART_C5_TDMAS(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C5_TDMAS_SHIFT))&UART_C5_TDMAS_MASK) /**< UART0_C5.TDMAS Field                    */
/** @} */

/** @name ED - Extended Data Register */ /** @{ */
#define UART_ED_PARITYE_MASK                     (0x40U)                                             /**< UART0_ED.PARITYE Mask                   */
#define UART_ED_PARITYE_SHIFT                    (6U)                                                /**< UART0_ED.PARITYE Position               */
#define UART_ED_PARITYE(x)                       (((uint8_t)(((uint8_t)(x))<<UART_ED_PARITYE_SHIFT))&UART_ED_PARITYE_MASK) /**< UART0_ED.PARITYE Field                  */
#define UART_ED_NOISY_MASK                       (0x80U)                                             /**< UART0_ED.NOISY Mask                     */
#define UART_ED_NOISY_SHIFT                      (7U)                                                /**< UART0_ED.NOISY Position                 */
#define UART_ED_NOISY(x)                         (((uint8_t)(((uint8_t)(x))<<UART_ED_NOISY_SHIFT))&UART_ED_NOISY_MASK) /**< UART0_ED.NOISY Field                    */
/** @} */

/** @name MODEM - Modem Register */ /** @{ */
#define UART_MODEM_TXCTSE_MASK                   (0x1U)                                              /**< UART0_MODEM.TXCTSE Mask                 */
#define UART_MODEM_TXCTSE_SHIFT                  (0U)                                                /**< UART0_MODEM.TXCTSE Position             */
#define UART_MODEM_TXCTSE(x)                     (((uint8_t)(((uint8_t)(x))<<UART_MODEM_TXCTSE_SHIFT))&UART_MODEM_TXCTSE_MASK) /**< UART0_MODEM.TXCTSE Field                */
#define UART_MODEM_TXRTSE_MASK                   (0x2U)                                              /**< UART0_MODEM.TXRTSE Mask                 */
#define UART_MODEM_TXRTSE_SHIFT                  (1U)                                                /**< UART0_MODEM.TXRTSE Position             */
#define UART_MODEM_TXRTSE(x)                     (((uint8_t)(((uint8_t)(x))<<UART_MODEM_TXRTSE_SHIFT))&UART_MODEM_TXRTSE_MASK) /**< UART0_MODEM.TXRTSE Field                */
#define UART_MODEM_TXRTSPOL_MASK                 (0x4U)                                              /**< UART0_MODEM.TXRTSPOL Mask               */
#define UART_MODEM_TXRTSPOL_SHIFT                (2U)                                                /**< UART0_MODEM.TXRTSPOL Position           */
#define UART_MODEM_TXRTSPOL(x)                   (((uint8_t)(((uint8_t)(x))<<UART_MODEM_TXRTSPOL_SHIFT))&UART_MODEM_TXRTSPOL_MASK) /**< UART0_MODEM.TXRTSPOL Field              */
#define UART_MODEM_RXRTSE_MASK                   (0x8U)                                              /**< UART0_MODEM.RXRTSE Mask                 */
#define UART_MODEM_RXRTSE_SHIFT                  (3U)                                                /**< UART0_MODEM.RXRTSE Position             */
#define UART_MODEM_RXRTSE(x)                     (((uint8_t)(((uint8_t)(x))<<UART_MODEM_RXRTSE_SHIFT))&UART_MODEM_RXRTSE_MASK) /**< UART0_MODEM.RXRTSE Field                */
/** @} */

/** @name IR - Infrared Register */ /** @{ */
#define UART_IR_TNP_MASK                         (0x3U)                                              /**< UART0_IR.TNP Mask                       */
#define UART_IR_TNP_SHIFT                        (0U)                                                /**< UART0_IR.TNP Position                   */
#define UART_IR_TNP(x)                           (((uint8_t)(((uint8_t)(x))<<UART_IR_TNP_SHIFT))&UART_IR_TNP_MASK) /**< UART0_IR.TNP Field                      */
#define UART_IR_IREN_MASK                        (0x4U)                                              /**< UART0_IR.IREN Mask                      */
#define UART_IR_IREN_SHIFT                       (2U)                                                /**< UART0_IR.IREN Position                  */
#define UART_IR_IREN(x)                          (((uint8_t)(((uint8_t)(x))<<UART_IR_IREN_SHIFT))&UART_IR_IREN_MASK) /**< UART0_IR.IREN Field                     */
/** @} */

/** @name PFIFO - FIFO Parameters */ /** @{ */
#define UART_PFIFO_RXFIFOSIZE_MASK               (0x7U)                                              /**< UART0_PFIFO.RXFIFOSIZE Mask             */
#define UART_PFIFO_RXFIFOSIZE_SHIFT              (0U)                                                /**< UART0_PFIFO.RXFIFOSIZE Position         */
#define UART_PFIFO_RXFIFOSIZE(x)                 (((uint8_t)(((uint8_t)(x))<<UART_PFIFO_RXFIFOSIZE_SHIFT))&UART_PFIFO_RXFIFOSIZE_MASK) /**< UART0_PFIFO.RXFIFOSIZE Field            */
#define UART_PFIFO_RXFE_MASK                     (0x8U)                                              /**< UART0_PFIFO.RXFE Mask                   */
#define UART_PFIFO_RXFE_SHIFT                    (3U)                                                /**< UART0_PFIFO.RXFE Position               */
#define UART_PFIFO_RXFE(x)                       (((uint8_t)(((uint8_t)(x))<<UART_PFIFO_RXFE_SHIFT))&UART_PFIFO_RXFE_MASK) /**< UART0_PFIFO.RXFE Field                  */
#define UART_PFIFO_TXFIFOSIZE_MASK               (0x70U)                                             /**< UART0_PFIFO.TXFIFOSIZE Mask             */
#define UART_PFIFO_TXFIFOSIZE_SHIFT              (4U)                                                /**< UART0_PFIFO.TXFIFOSIZE Position         */
#define UART_PFIFO_TXFIFOSIZE(x)                 (((uint8_t)(((uint8_t)(x))<<UART_PFIFO_TXFIFOSIZE_SHIFT))&UART_PFIFO_TXFIFOSIZE_MASK) /**< UART0_PFIFO.TXFIFOSIZE Field            */
#define UART_PFIFO_TXFE_MASK                     (0x80U)                                             /**< UART0_PFIFO.TXFE Mask                   */
#define UART_PFIFO_TXFE_SHIFT                    (7U)                                                /**< UART0_PFIFO.TXFE Position               */
#define UART_PFIFO_TXFE(x)                       (((uint8_t)(((uint8_t)(x))<<UART_PFIFO_TXFE_SHIFT))&UART_PFIFO_TXFE_MASK) /**< UART0_PFIFO.TXFE Field                  */
/** @} */

/** @name CFIFO - FIFO Control Register */ /** @{ */
#define UART_CFIFO_RXUFE_MASK                    (0x1U)                                              /**< UART0_CFIFO.RXUFE Mask                  */
#define UART_CFIFO_RXUFE_SHIFT                   (0U)                                                /**< UART0_CFIFO.RXUFE Position              */
#define UART_CFIFO_RXUFE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_CFIFO_RXUFE_SHIFT))&UART_CFIFO_RXUFE_MASK) /**< UART0_CFIFO.RXUFE Field                 */
#define UART_CFIFO_TXOFE_MASK                    (0x2U)                                              /**< UART0_CFIFO.TXOFE Mask                  */
#define UART_CFIFO_TXOFE_SHIFT                   (1U)                                                /**< UART0_CFIFO.TXOFE Position              */
#define UART_CFIFO_TXOFE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_CFIFO_TXOFE_SHIFT))&UART_CFIFO_TXOFE_MASK) /**< UART0_CFIFO.TXOFE Field                 */
#define UART_CFIFO_RXOFE_MASK                    (0x4U)                                              /**< UART0_CFIFO.RXOFE Mask                  */
#define UART_CFIFO_RXOFE_SHIFT                   (2U)                                                /**< UART0_CFIFO.RXOFE Position              */
#define UART_CFIFO_RXOFE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_CFIFO_RXOFE_SHIFT))&UART_CFIFO_RXOFE_MASK) /**< UART0_CFIFO.RXOFE Field                 */
#define UART_CFIFO_RXFLUSH_MASK                  (0x40U)                                             /**< UART0_CFIFO.RXFLUSH Mask                */
#define UART_CFIFO_RXFLUSH_SHIFT                 (6U)                                                /**< UART0_CFIFO.RXFLUSH Position            */
#define UART_CFIFO_RXFLUSH(x)                    (((uint8_t)(((uint8_t)(x))<<UART_CFIFO_RXFLUSH_SHIFT))&UART_CFIFO_RXFLUSH_MASK) /**< UART0_CFIFO.RXFLUSH Field               */
#define UART_CFIFO_TXFLUSH_MASK                  (0x80U)                                             /**< UART0_CFIFO.TXFLUSH Mask                */
#define UART_CFIFO_TXFLUSH_SHIFT                 (7U)                                                /**< UART0_CFIFO.TXFLUSH Position            */
#define UART_CFIFO_TXFLUSH(x)                    (((uint8_t)(((uint8_t)(x))<<UART_CFIFO_TXFLUSH_SHIFT))&UART_CFIFO_TXFLUSH_MASK) /**< UART0_CFIFO.TXFLUSH Field               */
/** @} */

/** @name SFIFO - FIFO Status Register */ /** @{ */
#define UART_SFIFO_RXUF_MASK                     (0x1U)                                              /**< UART0_SFIFO.RXUF Mask                   */
#define UART_SFIFO_RXUF_SHIFT                    (0U)                                                /**< UART0_SFIFO.RXUF Position               */
#define UART_SFIFO_RXUF(x)                       (((uint8_t)(((uint8_t)(x))<<UART_SFIFO_RXUF_SHIFT))&UART_SFIFO_RXUF_MASK) /**< UART0_SFIFO.RXUF Field                  */
#define UART_SFIFO_TXOF_MASK                     (0x2U)                                              /**< UART0_SFIFO.TXOF Mask                   */
#define UART_SFIFO_TXOF_SHIFT                    (1U)                                                /**< UART0_SFIFO.TXOF Position               */
#define UART_SFIFO_TXOF(x)                       (((uint8_t)(((uint8_t)(x))<<UART_SFIFO_TXOF_SHIFT))&UART_SFIFO_TXOF_MASK) /**< UART0_SFIFO.TXOF Field                  */
#define UART_SFIFO_RXOF_MASK                     (0x4U)                                              /**< UART0_SFIFO.RXOF Mask                   */
#define UART_SFIFO_RXOF_SHIFT                    (2U)                                                /**< UART0_SFIFO.RXOF Position               */
#define UART_SFIFO_RXOF(x)                       (((uint8_t)(((uint8_t)(x))<<UART_SFIFO_RXOF_SHIFT))&UART_SFIFO_RXOF_MASK) /**< UART0_SFIFO.RXOF Field                  */
#define UART_SFIFO_RXEMPT_MASK                   (0x40U)                                             /**< UART0_SFIFO.RXEMPT Mask                 */
#define UART_SFIFO_RXEMPT_SHIFT                  (6U)                                                /**< UART0_SFIFO.RXEMPT Position             */
#define UART_SFIFO_RXEMPT(x)                     (((uint8_t)(((uint8_t)(x))<<UART_SFIFO_RXEMPT_SHIFT))&UART_SFIFO_RXEMPT_MASK) /**< UART0_SFIFO.RXEMPT Field                */
#define UART_SFIFO_TXEMPT_MASK                   (0x80U)                                             /**< UART0_SFIFO.TXEMPT Mask                 */
#define UART_SFIFO_TXEMPT_SHIFT                  (7U)                                                /**< UART0_SFIFO.TXEMPT Position             */
#define UART_SFIFO_TXEMPT(x)                     (((uint8_t)(((uint8_t)(x))<<UART_SFIFO_TXEMPT_SHIFT))&UART_SFIFO_TXEMPT_MASK) /**< UART0_SFIFO.TXEMPT Field                */
/** @} */

/** @name TWFIFO - FIFO Transmit Watermark */ /** @{ */
#define UART_TWFIFO_TXWATER_MASK                 (0xFFU)                                             /**< UART0_TWFIFO.TXWATER Mask               */
#define UART_TWFIFO_TXWATER_SHIFT                (0U)                                                /**< UART0_TWFIFO.TXWATER Position           */
#define UART_TWFIFO_TXWATER(x)                   (((uint8_t)(((uint8_t)(x))<<UART_TWFIFO_TXWATER_SHIFT))&UART_TWFIFO_TXWATER_MASK) /**< UART0_TWFIFO.TXWATER Field              */
/** @} */

/** @name TCFIFO - FIFO Transmit Count */ /** @{ */
#define UART_TCFIFO_TXCOUNT_MASK                 (0xFFU)                                             /**< UART0_TCFIFO.TXCOUNT Mask               */
#define UART_TCFIFO_TXCOUNT_SHIFT                (0U)                                                /**< UART0_TCFIFO.TXCOUNT Position           */
#define UART_TCFIFO_TXCOUNT(x)                   (((uint8_t)(((uint8_t)(x))<<UART_TCFIFO_TXCOUNT_SHIFT))&UART_TCFIFO_TXCOUNT_MASK) /**< UART0_TCFIFO.TXCOUNT Field              */
/** @} */

/** @name RWFIFO - FIFO Receive Watermark */ /** @{ */
#define UART_RWFIFO_RXWATER_MASK                 (0xFFU)                                             /**< UART0_RWFIFO.RXWATER Mask               */
#define UART_RWFIFO_RXWATER_SHIFT                (0U)                                                /**< UART0_RWFIFO.RXWATER Position           */
#define UART_RWFIFO_RXWATER(x)                   (((uint8_t)(((uint8_t)(x))<<UART_RWFIFO_RXWATER_SHIFT))&UART_RWFIFO_RXWATER_MASK) /**< UART0_RWFIFO.RXWATER Field              */
/** @} */

/** @name RCFIFO - FIFO Receive Count */ /** @{ */
#define UART_RCFIFO_RXCOUNT_MASK                 (0xFFU)                                             /**< UART0_RCFIFO.RXCOUNT Mask               */
#define UART_RCFIFO_RXCOUNT_SHIFT                (0U)                                                /**< UART0_RCFIFO.RXCOUNT Position           */
#define UART_RCFIFO_RXCOUNT(x)                   (((uint8_t)(((uint8_t)(x))<<UART_RCFIFO_RXCOUNT_SHIFT))&UART_RCFIFO_RXCOUNT_MASK) /**< UART0_RCFIFO.RXCOUNT Field              */
/** @} */

/** @name C7816 - 7816 Control Register */ /** @{ */
#define UART_C7816_ISO_7816E_MASK                (0x1U)                                              /**< UART0_C7816.ISO_7816E Mask              */
#define UART_C7816_ISO_7816E_SHIFT               (0U)                                                /**< UART0_C7816.ISO_7816E Position          */
#define UART_C7816_ISO_7816E(x)                  (((uint8_t)(((uint8_t)(x))<<UART_C7816_ISO_7816E_SHIFT))&UART_C7816_ISO_7816E_MASK) /**< UART0_C7816.ISO_7816E Field             */
#define UART_C7816_TTYPE_MASK                    (0x2U)                                              /**< UART0_C7816.TTYPE Mask                  */
#define UART_C7816_TTYPE_SHIFT                   (1U)                                                /**< UART0_C7816.TTYPE Position              */
#define UART_C7816_TTYPE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_C7816_TTYPE_SHIFT))&UART_C7816_TTYPE_MASK) /**< UART0_C7816.TTYPE Field                 */
#define UART_C7816_INIT_MASK                     (0x4U)                                              /**< UART0_C7816.INIT Mask                   */
#define UART_C7816_INIT_SHIFT                    (2U)                                                /**< UART0_C7816.INIT Position               */
#define UART_C7816_INIT(x)                       (((uint8_t)(((uint8_t)(x))<<UART_C7816_INIT_SHIFT))&UART_C7816_INIT_MASK) /**< UART0_C7816.INIT Field                  */
#define UART_C7816_ANACK_MASK                    (0x8U)                                              /**< UART0_C7816.ANACK Mask                  */
#define UART_C7816_ANACK_SHIFT                   (3U)                                                /**< UART0_C7816.ANACK Position              */
#define UART_C7816_ANACK(x)                      (((uint8_t)(((uint8_t)(x))<<UART_C7816_ANACK_SHIFT))&UART_C7816_ANACK_MASK) /**< UART0_C7816.ANACK Field                 */
#define UART_C7816_ONACK_MASK                    (0x10U)                                             /**< UART0_C7816.ONACK Mask                  */
#define UART_C7816_ONACK_SHIFT                   (4U)                                                /**< UART0_C7816.ONACK Position              */
#define UART_C7816_ONACK(x)                      (((uint8_t)(((uint8_t)(x))<<UART_C7816_ONACK_SHIFT))&UART_C7816_ONACK_MASK) /**< UART0_C7816.ONACK Field                 */
/** @} */

/** @name IE7816 - 7816 Interrupt Enable Register */ /** @{ */
#define UART_IE7816_RXTE_MASK                    (0x1U)                                              /**< UART0_IE7816.RXTE Mask                  */
#define UART_IE7816_RXTE_SHIFT                   (0U)                                                /**< UART0_IE7816.RXTE Position              */
#define UART_IE7816_RXTE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_IE7816_RXTE_SHIFT))&UART_IE7816_RXTE_MASK) /**< UART0_IE7816.RXTE Field                 */
#define UART_IE7816_TXTE_MASK                    (0x2U)                                              /**< UART0_IE7816.TXTE Mask                  */
#define UART_IE7816_TXTE_SHIFT                   (1U)                                                /**< UART0_IE7816.TXTE Position              */
#define UART_IE7816_TXTE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_IE7816_TXTE_SHIFT))&UART_IE7816_TXTE_MASK) /**< UART0_IE7816.TXTE Field                 */
#define UART_IE7816_GTVE_MASK                    (0x4U)                                              /**< UART0_IE7816.GTVE Mask                  */
#define UART_IE7816_GTVE_SHIFT                   (2U)                                                /**< UART0_IE7816.GTVE Position              */
#define UART_IE7816_GTVE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_IE7816_GTVE_SHIFT))&UART_IE7816_GTVE_MASK) /**< UART0_IE7816.GTVE Field                 */
#define UART_IE7816_INITDE_MASK                  (0x10U)                                             /**< UART0_IE7816.INITDE Mask                */
#define UART_IE7816_INITDE_SHIFT                 (4U)                                                /**< UART0_IE7816.INITDE Position            */
#define UART_IE7816_INITDE(x)                    (((uint8_t)(((uint8_t)(x))<<UART_IE7816_INITDE_SHIFT))&UART_IE7816_INITDE_MASK) /**< UART0_IE7816.INITDE Field               */
#define UART_IE7816_BWTE_MASK                    (0x20U)                                             /**< UART0_IE7816.BWTE Mask                  */
#define UART_IE7816_BWTE_SHIFT                   (5U)                                                /**< UART0_IE7816.BWTE Position              */
#define UART_IE7816_BWTE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_IE7816_BWTE_SHIFT))&UART_IE7816_BWTE_MASK) /**< UART0_IE7816.BWTE Field                 */
#define UART_IE7816_CWTE_MASK                    (0x40U)                                             /**< UART0_IE7816.CWTE Mask                  */
#define UART_IE7816_CWTE_SHIFT                   (6U)                                                /**< UART0_IE7816.CWTE Position              */
#define UART_IE7816_CWTE(x)                      (((uint8_t)(((uint8_t)(x))<<UART_IE7816_CWTE_SHIFT))&UART_IE7816_CWTE_MASK) /**< UART0_IE7816.CWTE Field                 */
#define UART_IE7816_WTE_MASK                     (0x80U)                                             /**< UART0_IE7816.WTE Mask                   */
#define UART_IE7816_WTE_SHIFT                    (7U)                                                /**< UART0_IE7816.WTE Position               */
#define UART_IE7816_WTE(x)                       (((uint8_t)(((uint8_t)(x))<<UART_IE7816_WTE_SHIFT))&UART_IE7816_WTE_MASK) /**< UART0_IE7816.WTE Field                  */
/** @} */

/** @name IS7816 - 7816 Interrupt Status Register */ /** @{ */
#define UART_IS7816_RXT_MASK                     (0x1U)                                              /**< UART0_IS7816.RXT Mask                   */
#define UART_IS7816_RXT_SHIFT                    (0U)                                                /**< UART0_IS7816.RXT Position               */
#define UART_IS7816_RXT(x)                       (((uint8_t)(((uint8_t)(x))<<UART_IS7816_RXT_SHIFT))&UART_IS7816_RXT_MASK) /**< UART0_IS7816.RXT Field                  */
#define UART_IS7816_TXT_MASK                     (0x2U)                                              /**< UART0_IS7816.TXT Mask                   */
#define UART_IS7816_TXT_SHIFT                    (1U)                                                /**< UART0_IS7816.TXT Position               */
#define UART_IS7816_TXT(x)                       (((uint8_t)(((uint8_t)(x))<<UART_IS7816_TXT_SHIFT))&UART_IS7816_TXT_MASK) /**< UART0_IS7816.TXT Field                  */
#define UART_IS7816_GTV_MASK                     (0x4U)                                              /**< UART0_IS7816.GTV Mask                   */
#define UART_IS7816_GTV_SHIFT                    (2U)                                                /**< UART0_IS7816.GTV Position               */
#define UART_IS7816_GTV(x)                       (((uint8_t)(((uint8_t)(x))<<UART_IS7816_GTV_SHIFT))&UART_IS7816_GTV_MASK) /**< UART0_IS7816.GTV Field                  */
#define UART_IS7816_INITD_MASK                   (0x10U)                                             /**< UART0_IS7816.INITD Mask                 */
#define UART_IS7816_INITD_SHIFT                  (4U)                                                /**< UART0_IS7816.INITD Position             */
#define UART_IS7816_INITD(x)                     (((uint8_t)(((uint8_t)(x))<<UART_IS7816_INITD_SHIFT))&UART_IS7816_INITD_MASK) /**< UART0_IS7816.INITD Field                */
#define UART_IS7816_BWT_MASK                     (0x20U)                                             /**< UART0_IS7816.BWT Mask                   */
#define UART_IS7816_BWT_SHIFT                    (5U)                                                /**< UART0_IS7816.BWT Position               */
#define UART_IS7816_BWT(x)                       (((uint8_t)(((uint8_t)(x))<<UART_IS7816_BWT_SHIFT))&UART_IS7816_BWT_MASK) /**< UART0_IS7816.BWT Field                  */
#define UART_IS7816_CWT_MASK                     (0x40U)                                             /**< UART0_IS7816.CWT Mask                   */
#define UART_IS7816_CWT_SHIFT                    (6U)                                                /**< UART0_IS7816.CWT Position               */
#define UART_IS7816_CWT(x)                       (((uint8_t)(((uint8_t)(x))<<UART_IS7816_CWT_SHIFT))&UART_IS7816_CWT_MASK) /**< UART0_IS7816.CWT Field                  */
#define UART_IS7816_WT_MASK                      (0x80U)                                             /**< UART0_IS7816.WT Mask                    */
#define UART_IS7816_WT_SHIFT                     (7U)                                                /**< UART0_IS7816.WT Position                */
#define UART_IS7816_WT(x)                        (((uint8_t)(((uint8_t)(x))<<UART_IS7816_WT_SHIFT))&UART_IS7816_WT_MASK) /**< UART0_IS7816.WT Field                   */
/** @} */

/** @name WP7816T0 - 7816 Wait Parameter Register */ /** @{ */
#define UART_WP7816T0_WI_MASK                    (0xFFU)                                             /**< UART0_WP7816T0.WI Mask                  */
#define UART_WP7816T0_WI_SHIFT                   (0U)                                                /**< UART0_WP7816T0.WI Position              */
#define UART_WP7816T0_WI(x)                      (((uint8_t)(((uint8_t)(x))<<UART_WP7816T0_WI_SHIFT))&UART_WP7816T0_WI_MASK) /**< UART0_WP7816T0.WI Field                 */
/** @} */

/** @name WP7816T1 - 7816 Wait Parameter Register */ /** @{ */
#define UART_WP7816T1_BWI_MASK                   (0xFU)                                              /**< UART0_WP7816T1.BWI Mask                 */
#define UART_WP7816T1_BWI_SHIFT                  (0U)                                                /**< UART0_WP7816T1.BWI Position             */
#define UART_WP7816T1_BWI(x)                     (((uint8_t)(((uint8_t)(x))<<UART_WP7816T1_BWI_SHIFT))&UART_WP7816T1_BWI_MASK) /**< UART0_WP7816T1.BWI Field                */
#define UART_WP7816T1_CWI_MASK                   (0xF0U)                                             /**< UART0_WP7816T1.CWI Mask                 */
#define UART_WP7816T1_CWI_SHIFT                  (4U)                                                /**< UART0_WP7816T1.CWI Position             */
#define UART_WP7816T1_CWI(x)                     (((uint8_t)(((uint8_t)(x))<<UART_WP7816T1_CWI_SHIFT))&UART_WP7816T1_CWI_MASK) /**< UART0_WP7816T1.CWI Field                */
/** @} */

/** @name WN7816 - 7816 Wait N Register */ /** @{ */
#define UART_WN7816_GTN_MASK                     (0xFFU)                                             /**< UART0_WN7816.GTN Mask                   */
#define UART_WN7816_GTN_SHIFT                    (0U)                                                /**< UART0_WN7816.GTN Position               */
#define UART_WN7816_GTN(x)                       (((uint8_t)(((uint8_t)(x))<<UART_WN7816_GTN_SHIFT))&UART_WN7816_GTN_MASK) /**< UART0_WN7816.GTN Field                  */
/** @} */

/** @name WF7816 - 7816 Wait FD Register */ /** @{ */
#define UART_WF7816_GTFD_MASK                    (0xFFU)                                             /**< UART0_WF7816.GTFD Mask                  */
#define UART_WF7816_GTFD_SHIFT                   (0U)                                                /**< UART0_WF7816.GTFD Position              */
#define UART_WF7816_GTFD(x)                      (((uint8_t)(((uint8_t)(x))<<UART_WF7816_GTFD_SHIFT))&UART_WF7816_GTFD_MASK) /**< UART0_WF7816.GTFD Field                 */
/** @} */

/** @name ET7816 - 7816 Error Threshold Register */ /** @{ */
#define UART_ET7816_RXTHRESHOLD_MASK             (0xFU)                                              /**< UART0_ET7816.RXTHRESHOLD Mask           */
#define UART_ET7816_RXTHRESHOLD_SHIFT            (0U)                                                /**< UART0_ET7816.RXTHRESHOLD Position       */
#define UART_ET7816_RXTHRESHOLD(x)               (((uint8_t)(((uint8_t)(x))<<UART_ET7816_RXTHRESHOLD_SHIFT))&UART_ET7816_RXTHRESHOLD_MASK) /**< UART0_ET7816.RXTHRESHOLD Field          */
#define UART_ET7816_TXTHRESHOLD_MASK             (0xF0U)                                             /**< UART0_ET7816.TXTHRESHOLD Mask           */
#define UART_ET7816_TXTHRESHOLD_SHIFT            (4U)                                                /**< UART0_ET7816.TXTHRESHOLD Position       */
#define UART_ET7816_TXTHRESHOLD(x)               (((uint8_t)(((uint8_t)(x))<<UART_ET7816_TXTHRESHOLD_SHIFT))&UART_ET7816_TXTHRESHOLD_MASK) /**< UART0_ET7816.TXTHRESHOLD Field          */
/** @} */

/** @name TL7816 - 7816 Transmit Length Register */ /** @{ */
#define UART_TL7816_TLEN_MASK                    (0xFFU)                                             /**< UART0_TL7816.TLEN Mask                  */
#define UART_TL7816_TLEN_SHIFT                   (0U)                                                /**< UART0_TL7816.TLEN Position              */
#define UART_TL7816_TLEN(x)                      (((uint8_t)(((uint8_t)(x))<<UART_TL7816_TLEN_SHIFT))&UART_TL7816_TLEN_MASK) /**< UART0_TL7816.TLEN Field                 */
/** @} */

/** @name C6 - CEA709.1-B Control Register 6 */ /** @{ */
#define UART_C6_CP_MASK                          (0x10U)                                             /**< UART0_C6.CP Mask                        */
#define UART_C6_CP_SHIFT                         (4U)                                                /**< UART0_C6.CP Position                    */
#define UART_C6_CP(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C6_CP_SHIFT))&UART_C6_CP_MASK) /**< UART0_C6.CP Field                       */
#define UART_C6_CE_MASK                          (0x20U)                                             /**< UART0_C6.CE Mask                        */
#define UART_C6_CE_SHIFT                         (5U)                                                /**< UART0_C6.CE Position                    */
#define UART_C6_CE(x)                            (((uint8_t)(((uint8_t)(x))<<UART_C6_CE_SHIFT))&UART_C6_CE_MASK) /**< UART0_C6.CE Field                       */
#define UART_C6_TX709_MASK                       (0x40U)                                             /**< UART0_C6.TX709 Mask                     */
#define UART_C6_TX709_SHIFT                      (6U)                                                /**< UART0_C6.TX709 Position                 */
#define UART_C6_TX709(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C6_TX709_SHIFT))&UART_C6_TX709_MASK) /**< UART0_C6.TX709 Field                    */
#define UART_C6_EN709_MASK                       (0x80U)                                             /**< UART0_C6.EN709 Mask                     */
#define UART_C6_EN709_SHIFT                      (7U)                                                /**< UART0_C6.EN709 Position                 */
#define UART_C6_EN709(x)                         (((uint8_t)(((uint8_t)(x))<<UART_C6_EN709_SHIFT))&UART_C6_EN709_MASK) /**< UART0_C6.EN709 Field                    */
/** @} */

/** @name PCTH - CEA709.1-B Packet Cycle Time Counter High */ /** @{ */
#define UART_PCTH_PCTH_MASK                      (0xFFU)                                             /**< UART0_PCTH.PCTH Mask                    */
#define UART_PCTH_PCTH_SHIFT                     (0U)                                                /**< UART0_PCTH.PCTH Position                */
#define UART_PCTH_PCTH(x)                        (((uint8_t)(((uint8_t)(x))<<UART_PCTH_PCTH_SHIFT))&UART_PCTH_PCTH_MASK) /**< UART0_PCTH.PCTH Field                   */
/** @} */

/** @name PCTL - CEA709.1-B Packet Cycle Time Counter Low */ /** @{ */
#define UART_PCTL_PCTL_MASK                      (0xFFU)                                             /**< UART0_PCTL.PCTL Mask                    */
#define UART_PCTL_PCTL_SHIFT                     (0U)                                                /**< UART0_PCTL.PCTL Position                */
#define UART_PCTL_PCTL(x)                        (((uint8_t)(((uint8_t)(x))<<UART_PCTL_PCTL_SHIFT))&UART_PCTL_PCTL_MASK) /**< UART0_PCTL.PCTL Field                   */
/** @} */

/** @name B1T - CEA709.1-B Beta1 Timer */ /** @{ */
#define UART_B1T_B1T_MASK                        (0xFFU)                                             /**< UART0_B1T.B1T Mask                      */
#define UART_B1T_B1T_SHIFT                       (0U)                                                /**< UART0_B1T.B1T Position                  */
#define UART_B1T_B1T(x)                          (((uint8_t)(((uint8_t)(x))<<UART_B1T_B1T_SHIFT))&UART_B1T_B1T_MASK) /**< UART0_B1T.B1T Field                     */
/** @} */

/** @name SDTH - CEA709.1-B Secondary Delay Timer High */ /** @{ */
#define UART_SDTH_SDTH_MASK                      (0xFFU)                                             /**< UART0_SDTH.SDTH Mask                    */
#define UART_SDTH_SDTH_SHIFT                     (0U)                                                /**< UART0_SDTH.SDTH Position                */
#define UART_SDTH_SDTH(x)                        (((uint8_t)(((uint8_t)(x))<<UART_SDTH_SDTH_SHIFT))&UART_SDTH_SDTH_MASK) /**< UART0_SDTH.SDTH Field                   */
/** @} */

/** @name SDTL - CEA709.1-B Secondary Delay Timer Low */ /** @{ */
#define UART_SDTL_SDTL_MASK                      (0xFFU)                                             /**< UART0_SDTL.SDTL Mask                    */
#define UART_SDTL_SDTL_SHIFT                     (0U)                                                /**< UART0_SDTL.SDTL Position                */
#define UART_SDTL_SDTL(x)                        (((uint8_t)(((uint8_t)(x))<<UART_SDTL_SDTL_SHIFT))&UART_SDTL_SDTL_MASK) /**< UART0_SDTL.SDTL Field                   */
/** @} */

/** @name PRE - CEA709.1-B Preamble */ /** @{ */
#define UART_PRE_PREAMBLE_MASK                   (0xFFU)                                             /**< UART0_PRE.PREAMBLE Mask                 */
#define UART_PRE_PREAMBLE_SHIFT                  (0U)                                                /**< UART0_PRE.PREAMBLE Position             */
#define UART_PRE_PREAMBLE(x)                     (((uint8_t)(((uint8_t)(x))<<UART_PRE_PREAMBLE_SHIFT))&UART_PRE_PREAMBLE_MASK) /**< UART0_PRE.PREAMBLE Field                */
/** @} */

/** @name TPL - CEA709.1-B Transmit Packet Length */ /** @{ */
#define UART_TPL_TPL_MASK                        (0xFFU)                                             /**< UART0_TPL.TPL Mask                      */
#define UART_TPL_TPL_SHIFT                       (0U)                                                /**< UART0_TPL.TPL Position                  */
#define UART_TPL_TPL(x)                          (((uint8_t)(((uint8_t)(x))<<UART_TPL_TPL_SHIFT))&UART_TPL_TPL_MASK) /**< UART0_TPL.TPL Field                     */
/** @} */

/** @name IE - CEA709.1-B Interrupt Enable Register */ /** @{ */
#define UART_IE_TXFIE_MASK                       (0x1U)                                              /**< UART0_IE.TXFIE Mask                     */
#define UART_IE_TXFIE_SHIFT                      (0U)                                                /**< UART0_IE.TXFIE Position                 */
#define UART_IE_TXFIE(x)                         (((uint8_t)(((uint8_t)(x))<<UART_IE_TXFIE_SHIFT))&UART_IE_TXFIE_MASK) /**< UART0_IE.TXFIE Field                    */
#define UART_IE_PSIE_MASK                        (0x2U)                                              /**< UART0_IE.PSIE Mask                      */
#define UART_IE_PSIE_SHIFT                       (1U)                                                /**< UART0_IE.PSIE Position                  */
#define UART_IE_PSIE(x)                          (((uint8_t)(((uint8_t)(x))<<UART_IE_PSIE_SHIFT))&UART_IE_PSIE_MASK) /**< UART0_IE.PSIE Field                     */
#define UART_IE_PCTEIE_MASK                      (0x4U)                                              /**< UART0_IE.PCTEIE Mask                    */
#define UART_IE_PCTEIE_SHIFT                     (2U)                                                /**< UART0_IE.PCTEIE Position                */
#define UART_IE_PCTEIE(x)                        (((uint8_t)(((uint8_t)(x))<<UART_IE_PCTEIE_SHIFT))&UART_IE_PCTEIE_MASK) /**< UART0_IE.PCTEIE Field                   */
#define UART_IE_PTXIE_MASK                       (0x8U)                                              /**< UART0_IE.PTXIE Mask                     */
#define UART_IE_PTXIE_SHIFT                      (3U)                                                /**< UART0_IE.PTXIE Position                 */
#define UART_IE_PTXIE(x)                         (((uint8_t)(((uint8_t)(x))<<UART_IE_PTXIE_SHIFT))&UART_IE_PTXIE_MASK) /**< UART0_IE.PTXIE Field                    */
#define UART_IE_PRXIE_MASK                       (0x10U)                                             /**< UART0_IE.PRXIE Mask                     */
#define UART_IE_PRXIE_SHIFT                      (4U)                                                /**< UART0_IE.PRXIE Position                 */
#define UART_IE_PRXIE(x)                         (((uint8_t)(((uint8_t)(x))<<UART_IE_PRXIE_SHIFT))&UART_IE_PRXIE_MASK) /**< UART0_IE.PRXIE Field                    */
#define UART_IE_ISDIE_MASK                       (0x20U)                                             /**< UART0_IE.ISDIE Mask                     */
#define UART_IE_ISDIE_SHIFT                      (5U)                                                /**< UART0_IE.ISDIE Position                 */
#define UART_IE_ISDIE(x)                         (((uint8_t)(((uint8_t)(x))<<UART_IE_ISDIE_SHIFT))&UART_IE_ISDIE_MASK) /**< UART0_IE.ISDIE Field                    */
#define UART_IE_WBEIE_MASK                       (0x40U)                                             /**< UART0_IE.WBEIE Mask                     */
#define UART_IE_WBEIE_SHIFT                      (6U)                                                /**< UART0_IE.WBEIE Position                 */
#define UART_IE_WBEIE(x)                         (((uint8_t)(((uint8_t)(x))<<UART_IE_WBEIE_SHIFT))&UART_IE_WBEIE_MASK) /**< UART0_IE.WBEIE Field                    */
/** @} */

/** @name WB - CEA709.1-B WBASE */ /** @{ */
#define UART_WB_WBASE_MASK                       (0xFFU)                                             /**< UART0_WB.WBASE Mask                     */
#define UART_WB_WBASE_SHIFT                      (0U)                                                /**< UART0_WB.WBASE Position                 */
#define UART_WB_WBASE(x)                         (((uint8_t)(((uint8_t)(x))<<UART_WB_WBASE_SHIFT))&UART_WB_WBASE_MASK) /**< UART0_WB.WBASE Field                    */
/** @} */

/** @name S3 - CEA709.1-B Status Register */ /** @{ */
#define UART_S3_TXFF_MASK                        (0x1U)                                              /**< UART0_S3.TXFF Mask                      */
#define UART_S3_TXFF_SHIFT                       (0U)                                                /**< UART0_S3.TXFF Position                  */
#define UART_S3_TXFF(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S3_TXFF_SHIFT))&UART_S3_TXFF_MASK) /**< UART0_S3.TXFF Field                     */
#define UART_S3_PSF_MASK                         (0x2U)                                              /**< UART0_S3.PSF Mask                       */
#define UART_S3_PSF_SHIFT                        (1U)                                                /**< UART0_S3.PSF Position                   */
#define UART_S3_PSF(x)                           (((uint8_t)(((uint8_t)(x))<<UART_S3_PSF_SHIFT))&UART_S3_PSF_MASK) /**< UART0_S3.PSF Field                      */
#define UART_S3_PCTEF_MASK                       (0x4U)                                              /**< UART0_S3.PCTEF Mask                     */
#define UART_S3_PCTEF_SHIFT                      (2U)                                                /**< UART0_S3.PCTEF Position                 */
#define UART_S3_PCTEF(x)                         (((uint8_t)(((uint8_t)(x))<<UART_S3_PCTEF_SHIFT))&UART_S3_PCTEF_MASK) /**< UART0_S3.PCTEF Field                    */
#define UART_S3_PTXF_MASK                        (0x8U)                                              /**< UART0_S3.PTXF Mask                      */
#define UART_S3_PTXF_SHIFT                       (3U)                                                /**< UART0_S3.PTXF Position                  */
#define UART_S3_PTXF(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S3_PTXF_SHIFT))&UART_S3_PTXF_MASK) /**< UART0_S3.PTXF Field                     */
#define UART_S3_PRXF_MASK                        (0x10U)                                             /**< UART0_S3.PRXF Mask                      */
#define UART_S3_PRXF_SHIFT                       (4U)                                                /**< UART0_S3.PRXF Position                  */
#define UART_S3_PRXF(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S3_PRXF_SHIFT))&UART_S3_PRXF_MASK) /**< UART0_S3.PRXF Field                     */
#define UART_S3_ISD_MASK                         (0x20U)                                             /**< UART0_S3.ISD Mask                       */
#define UART_S3_ISD_SHIFT                        (5U)                                                /**< UART0_S3.ISD Position                   */
#define UART_S3_ISD(x)                           (((uint8_t)(((uint8_t)(x))<<UART_S3_ISD_SHIFT))&UART_S3_ISD_MASK) /**< UART0_S3.ISD Field                      */
#define UART_S3_WBEF_MASK                        (0x40U)                                             /**< UART0_S3.WBEF Mask                      */
#define UART_S3_WBEF_SHIFT                       (6U)                                                /**< UART0_S3.WBEF Position                  */
#define UART_S3_WBEF(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S3_WBEF_SHIFT))&UART_S3_WBEF_MASK) /**< UART0_S3.WBEF Field                     */
#define UART_S3_PEF_MASK                         (0x80U)                                             /**< UART0_S3.PEF Mask                       */
#define UART_S3_PEF_SHIFT                        (7U)                                                /**< UART0_S3.PEF Position                   */
#define UART_S3_PEF(x)                           (((uint8_t)(((uint8_t)(x))<<UART_S3_PEF_SHIFT))&UART_S3_PEF_MASK) /**< UART0_S3.PEF Field                      */
/** @} */

/** @name S4 - CEA709.1-B Status Register */ /** @{ */
#define UART_S4_FE_MASK                          (0x1U)                                              /**< UART0_S4.FE Mask                        */
#define UART_S4_FE_SHIFT                         (0U)                                                /**< UART0_S4.FE Position                    */
#define UART_S4_FE(x)                            (((uint8_t)(((uint8_t)(x))<<UART_S4_FE_SHIFT))&UART_S4_FE_MASK) /**< UART0_S4.FE Field                       */
#define UART_S4_ILCV_MASK                        (0x2U)                                              /**< UART0_S4.ILCV Mask                      */
#define UART_S4_ILCV_SHIFT                       (1U)                                                /**< UART0_S4.ILCV Position                  */
#define UART_S4_ILCV(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S4_ILCV_SHIFT))&UART_S4_ILCV_MASK) /**< UART0_S4.ILCV Field                     */
#define UART_S4_CDET_MASK                        (0xCU)                                              /**< UART0_S4.CDET Mask                      */
#define UART_S4_CDET_SHIFT                       (2U)                                                /**< UART0_S4.CDET Position                  */
#define UART_S4_CDET(x)                          (((uint8_t)(((uint8_t)(x))<<UART_S4_CDET_SHIFT))&UART_S4_CDET_MASK) /**< UART0_S4.CDET Field                     */
#define UART_S4_INITF_MASK                       (0x10U)                                             /**< UART0_S4.INITF Mask                     */
#define UART_S4_INITF_SHIFT                      (4U)                                                /**< UART0_S4.INITF Position                 */
#define UART_S4_INITF(x)                         (((uint8_t)(((uint8_t)(x))<<UART_S4_INITF_SHIFT))&UART_S4_INITF_MASK) /**< UART0_S4.INITF Field                    */
/** @} */

/** @name RPL - CEA709.1-B Received Packet Length */ /** @{ */
#define UART_RPL_RPL_MASK                        (0xFFU)                                             /**< UART0_RPL.RPL Mask                      */
#define UART_RPL_RPL_SHIFT                       (0U)                                                /**< UART0_RPL.RPL Position                  */
#define UART_RPL_RPL(x)                          (((uint8_t)(((uint8_t)(x))<<UART_RPL_RPL_SHIFT))&UART_RPL_RPL_MASK) /**< UART0_RPL.RPL Field                     */
/** @} */

/** @name RPREL - CEA709.1-B Received Preamble Length */ /** @{ */
#define UART_RPREL_RPREL_MASK                    (0xFFU)                                             /**< UART0_RPREL.RPREL Mask                  */
#define UART_RPREL_RPREL_SHIFT                   (0U)                                                /**< UART0_RPREL.RPREL Position              */
#define UART_RPREL_RPREL(x)                      (((uint8_t)(((uint8_t)(x))<<UART_RPREL_RPREL_SHIFT))&UART_RPREL_RPREL_MASK) /**< UART0_RPREL.RPREL Field                 */
/** @} */

/** @name CPW - CEA709.1-B Collision Pulse Width */ /** @{ */
#define UART_CPW_CPW_MASK                        (0xFFU)                                             /**< UART0_CPW.CPW Mask                      */
#define UART_CPW_CPW_SHIFT                       (0U)                                                /**< UART0_CPW.CPW Position                  */
#define UART_CPW_CPW(x)                          (((uint8_t)(((uint8_t)(x))<<UART_CPW_CPW_SHIFT))&UART_CPW_CPW_MASK) /**< UART0_CPW.CPW Field                     */
/** @} */

/** @name RIDT - CEA709.1-B Receive Indeterminate Time */ /** @{ */
#define UART_RIDT_RIDT_MASK                      (0xFFU)                                             /**< UART0_RIDT.RIDT Mask                    */
#define UART_RIDT_RIDT_SHIFT                     (0U)                                                /**< UART0_RIDT.RIDT Position                */
#define UART_RIDT_RIDT(x)                        (((uint8_t)(((uint8_t)(x))<<UART_RIDT_RIDT_SHIFT))&UART_RIDT_RIDT_MASK) /**< UART0_RIDT.RIDT Field                   */
/** @} */

/** @name TIDT - CEA709.1-B Transmit Indeterminate Time */ /** @{ */
#define UART_TIDT_TIDT_MASK                      (0xFFU)                                             /**< UART0_TIDT.TIDT Mask                    */
#define UART_TIDT_TIDT_SHIFT                     (0U)                                                /**< UART0_TIDT.TIDT Position                */
#define UART_TIDT_TIDT(x)                        (((uint8_t)(((uint8_t)(x))<<UART_TIDT_TIDT_SHIFT))&UART_TIDT_TIDT_MASK) /**< UART0_TIDT.TIDT Field                   */
/** @} */

/** @} */ /* End group UART_Register_Masks_GROUP */


/* UART0 - Peripheral instance base addresses */
#define UART0_BasePtr                  0x4006A000UL //!< Peripheral base address
#define UART0                          ((UART_Type *) UART0_BasePtr) //!< Freescale base pointer
#define UART0_BASE_PTR                 (UART0) //!< Freescale style base pointer
#define UART0_IRQS { UART0_Lon_IRQn, UART0_RxTx_IRQn, UART0_Error_IRQn,  }


/** @} */ /* End group UART_Peripheral_access_layer_GROUP */


/** @brief C Struct for UART */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup UART_Peripheral_access_layer_GROUP UART Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           UART1 (file:UART1_MK10D10)           ================ */
/* ================================================================================ */

/**
 * @brief Universal Asynchronous Receiver/Transmitter
 */
/**
 * @struct UART1_Type
 * @brief  C Struct allowing access to UART registers
 */
typedef struct UART1_Type {
   __IO uint8_t   BDH;                          /**< 0000: Baud Rate Register: High                                     */
   __IO uint8_t   BDL;                          /**< 0001: Baud Rate Register: Low                                      */
   __IO uint8_t   C1;                           /**< 0002: Control Register 1                                           */
   __IO uint8_t   C2;                           /**< 0003: Control Register 2                                           */
   __I  uint8_t   S1;                           /**< 0004: Status Register 1                                            */
   __IO uint8_t   S2;                           /**< 0005: Status Register 2                                            */
   __IO uint8_t   C3;                           /**< 0006: Control Register 3                                           */
   __IO uint8_t   D;                            /**< 0007: Data Register                                                */
   __IO uint8_t   MA1;                          /**< 0008: Match Address Registers 1                                    */
   __IO uint8_t   MA2;                          /**< 0009: Match Address Registers 2                                    */
   __IO uint8_t   C4;                           /**< 000A: Control Register 4                                           */
   __IO uint8_t   C5;                           /**< 000B: Control Register 5                                           */
   __I  uint8_t   ED;                           /**< 000C: Extended Data Register                                       */
   __IO uint8_t   MODEM;                        /**< 000D: Modem Register                                               */
   __IO uint8_t   IR;                           /**< 000E: Infrared Register                                            */
        uint8_t   RESERVED_0;                   /**< 000F: 0x1 bytes                                                    */
   __IO uint8_t   PFIFO;                        /**< 0010: FIFO Parameters                                              */
   __IO uint8_t   CFIFO;                        /**< 0011: FIFO Control Register                                        */
   __IO uint8_t   SFIFO;                        /**< 0012: FIFO Status Register                                         */
   __IO uint8_t   TWFIFO;                       /**< 0013: FIFO Transmit Watermark                                      */
   __I  uint8_t   TCFIFO;                       /**< 0014: FIFO Transmit Count                                          */
   __IO uint8_t   RWFIFO;                       /**< 0015: FIFO Receive Watermark                                       */
   __I  uint8_t   RCFIFO;                       /**< 0016: FIFO Receive Count                                           */
} UART1_Type;


/** @brief Register Masks for UART */

/* -------------------------------------------------------------------------------- */
/* -----------     'UART1' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup UART_Register_Masks_GROUP UART Register Masks */
/** @{ */

/** @} */ /* End group UART_Register_Masks_GROUP */


/* UART1 - Peripheral instance base addresses */
#define UART1_BasePtr                  0x4006B000UL //!< Peripheral base address
#define UART1                          ((UART1_Type *) UART1_BasePtr) //!< Freescale base pointer
#define UART1_BASE_PTR                 (UART1) //!< Freescale style base pointer
#define UART1_IRQS { UART1_RxTx_IRQn, UART1_Error_IRQn,  }


/** @} */ /* End group UART_Peripheral_access_layer_GROUP */


/** @brief C Struct for UART */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup UART_Peripheral_access_layer_GROUP UART Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           UART2 (derived from UART1)           ================ */
/* ================================================================================ */

/**
 * @brief Universal Asynchronous Receiver/Transmitter
 */

/* UART2 - Peripheral instance base addresses */
#define UART2_BasePtr                  0x4006C000UL //!< Peripheral base address
#define UART2                          ((UART1_Type *) UART2_BasePtr) //!< Freescale base pointer
#define UART2_BASE_PTR                 (UART2) //!< Freescale style base pointer
#define UART2_IRQS { UART2_RxTx_IRQn, UART2_Error_IRQn,  }


/** @} */ /* End group UART_Peripheral_access_layer_GROUP */


/** @brief C Struct for UART */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup UART_Peripheral_access_layer_GROUP UART Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           UART3 (derived from UART1)           ================ */
/* ================================================================================ */

/**
 * @brief Universal Asynchronous Receiver/Transmitter
 */

/* UART3 - Peripheral instance base addresses */
#define UART3_BasePtr                  0x4006D000UL //!< Peripheral base address
#define UART3                          ((UART1_Type *) UART3_BasePtr) //!< Freescale base pointer
#define UART3_BASE_PTR                 (UART3) //!< Freescale style base pointer
#define UART3_IRQS { UART3_RxTx_IRQn, UART3_Error_IRQn,  }


/** @} */ /* End group UART_Peripheral_access_layer_GROUP */


/** @brief C Struct for UART */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup UART_Peripheral_access_layer_GROUP UART Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           UART4 (derived from UART1)           ================ */
/* ================================================================================ */

/**
 * @brief Universal Asynchronous Receiver/Transmitter
 */

/* UART4 - Peripheral instance base addresses */
#define UART4_BasePtr                  0x400EA000UL //!< Peripheral base address
#define UART4                          ((UART1_Type *) UART4_BasePtr) //!< Freescale base pointer
#define UART4_BASE_PTR                 (UART4) //!< Freescale style base pointer
#define UART4_IRQS { UART4_RxTx_IRQn, UART4_Error_IRQn,  }


/** @} */ /* End group UART_Peripheral_access_layer_GROUP */


/** @brief C Struct for UART */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup UART_Peripheral_access_layer_GROUP UART Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           UART5 (derived from UART1)           ================ */
/* ================================================================================ */

/**
 * @brief Universal Asynchronous Receiver/Transmitter
 */

/* UART5 - Peripheral instance base addresses */
#define UART5_BasePtr                  0x400EB000UL //!< Peripheral base address
#define UART5                          ((UART1_Type *) UART5_BasePtr) //!< Freescale base pointer
#define UART5_BASE_PTR                 (UART5) //!< Freescale style base pointer
#define UART5_IRQS { UART5_RxTx_IRQn, UART5_Error_IRQn,  }


/** @} */ /* End group UART_Peripheral_access_layer_GROUP */


/** @brief C Struct for USB */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup USB_Peripheral_access_layer_GROUP USB Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           USB0 (file:USB0_OTG_C)               ================ */
/* ================================================================================ */

/**
 * @brief USB OTG Controller
 */
/**
 * @struct USB_Type
 * @brief  C Struct allowing access to USB registers
 */
typedef struct USB_Type {
   __I  uint8_t   PERID;                        /**< 0000: Peripheral ID Register                                       */
        uint8_t   RESERVED_0[3];                /**< 0001: 0x3 bytes                                                    */
   __I  uint8_t   IDCOMP;                       /**< 0004: Peripheral ID Complement Register                            */
        uint8_t   RESERVED_1[3];                /**< 0005: 0x3 bytes                                                    */
   __I  uint8_t   REV;                          /**< 0008: Peripheral Revision Register                                 */
        uint8_t   RESERVED_2[3];                /**< 0009: 0x3 bytes                                                    */
   __I  uint8_t   ADDINFO;                      /**< 000C: Peripheral Additional Info Register                          */
        uint8_t   RESERVED_3[3];                /**< 000D: 0x3 bytes                                                    */
   __IO uint8_t   OTGISTAT;                     /**< 0010: OTG Interrupt Status Register                                */
        uint8_t   RESERVED_4[3];                /**< 0011: 0x3 bytes                                                    */
   __IO uint8_t   OTGICR;                       /**< 0014: OTG Interrupt Control Register                               */
        uint8_t   RESERVED_5[3];                /**< 0015: 0x3 bytes                                                    */
   __IO uint8_t   OTGSTAT;                      /**< 0018: OTG Status Register                                          */
        uint8_t   RESERVED_6[3];                /**< 0019: 0x3 bytes                                                    */
   __IO uint8_t   OTGCTL;                       /**< 001C: OTG Control Register                                         */
        uint8_t   RESERVED_7[99];               /**< 001D: 0x63 bytes                                                   */
   __IO uint8_t   ISTAT;                        /**< 0080: Interrupt Status Register                                    */
        uint8_t   RESERVED_8[3];                /**< 0081: 0x3 bytes                                                    */
   __IO uint8_t   INTEN;                        /**< 0084: Interrupt Enable Register                                    */
        uint8_t   RESERVED_9[3];                /**< 0085: 0x3 bytes                                                    */
   __IO uint8_t   ERRSTAT;                      /**< 0088: Error Interrupt Status Register                              */
        uint8_t   RESERVED_10[3];               /**< 0089: 0x3 bytes                                                    */
   __IO uint8_t   ERREN;                        /**< 008C: Error Interrupt Enable Register                              */
        uint8_t   RESERVED_11[3];               /**< 008D: 0x3 bytes                                                    */
   __I  uint8_t   STAT;                         /**< 0090: Status Register                                              */
        uint8_t   RESERVED_12[3];               /**< 0091: 0x3 bytes                                                    */
   __IO uint8_t   CTL;                          /**< 0094: Control Register                                             */
        uint8_t   RESERVED_13[3];               /**< 0095: 0x3 bytes                                                    */
   __IO uint8_t   ADDR;                         /**< 0098: Address Register                                             */
        uint8_t   RESERVED_14[3];               /**< 0099: 0x3 bytes                                                    */
   __IO uint8_t   BDTPAGE1;                     /**< 009C: BDT Page Register 1                                          */
        uint8_t   RESERVED_15[3];               /**< 009D: 0x3 bytes                                                    */
   __IO uint8_t   FRMNUML;                      /**< 00A0: Frame Number Register Low                                    */
        uint8_t   RESERVED_16[3];               /**< 00A1: 0x3 bytes                                                    */
   __IO uint8_t   FRMNUMH;                      /**< 00A4: Frame Number Register High                                   */
        uint8_t   RESERVED_17[3];               /**< 00A5: 0x3 bytes                                                    */
   __IO uint8_t   TOKEN;                        /**< 00A8: Token Register                                               */
        uint8_t   RESERVED_18[3];               /**< 00A9: 0x3 bytes                                                    */
   __IO uint8_t   SOFTHLD;                      /**< 00AC: SOF Threshold Register                                       */
        uint8_t   RESERVED_19[3];               /**< 00AD: 0x3 bytes                                                    */
   __IO uint8_t   BDTPAGE2;                     /**< 00B0: BDT Page Register 2                                          */
        uint8_t   RESERVED_20[3];               /**< 00B1: 0x3 bytes                                                    */
   __IO uint8_t   BDTPAGE3;                     /**< 00B4: BDT Page Register 3                                          */
        uint8_t   RESERVED_21[11];              /**< 00B5: 0xB bytes                                                    */
   struct {
      __IO uint8_t   ENDPT;                     /**< 00C0: Endpoint Control Register                                    */
           uint8_t   RESERVED_22[3];            /**< 00C1: 0x3 bytes                                                    */
   } ENDPOINT[16];                              /**< 00C0: (cluster: size=0x0040, 64)                                   */
   __IO uint8_t   USBCTRL;                      /**< 0100: USB Control Register                                         */
        uint8_t   RESERVED_23[3];               /**< 0101: 0x3 bytes                                                    */
   __I  uint8_t   OBSERVE;                      /**< 0104: USB OTG Observe Register                                     */
        uint8_t   RESERVED_24[3];               /**< 0105: 0x3 bytes                                                    */
   __IO uint8_t   CONTROL;                      /**< 0108: USB OTG Control Register                                     */
        uint8_t   RESERVED_25[3];               /**< 0109: 0x3 bytes                                                    */
   __IO uint8_t   USBTRC0;                      /**< 010C: USB Transceiver Control Register 0                           */
        uint8_t   RESERVED_26[7];               /**< 010D: 0x7 bytes                                                    */
   __IO uint8_t   USBFRMADJUST;                 /**< 0114: Frame Adjust Register                                        */
} USB_Type;


/** @brief Register Masks for USB */

/* -------------------------------------------------------------------------------- */
/* -----------     'USB0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup USB_Register_Masks_GROUP USB Register Masks */
/** @{ */

/** @name PERID - Peripheral ID Register */ /** @{ */
#define USB_PERID_ID_MASK                        (0x3FU)                                             /**< USB0_PERID.ID Mask                      */
#define USB_PERID_ID_SHIFT                       (0U)                                                /**< USB0_PERID.ID Position                  */
#define USB_PERID_ID(x)                          (((uint8_t)(((uint8_t)(x))<<USB_PERID_ID_SHIFT))&USB_PERID_ID_MASK) /**< USB0_PERID.ID Field                     */
/** @} */

/** @name IDCOMP - Peripheral ID Complement Register */ /** @{ */
#define USB_IDCOMP_NID_MASK                      (0x3FU)                                             /**< USB0_IDCOMP.NID Mask                    */
#define USB_IDCOMP_NID_SHIFT                     (0U)                                                /**< USB0_IDCOMP.NID Position                */
#define USB_IDCOMP_NID(x)                        (((uint8_t)(((uint8_t)(x))<<USB_IDCOMP_NID_SHIFT))&USB_IDCOMP_NID_MASK) /**< USB0_IDCOMP.NID Field                   */
/** @} */

/** @name REV - Peripheral Revision Register */ /** @{ */
#define USB_REV_REV_MASK                         (0xFFU)                                             /**< USB0_REV.REV Mask                       */
#define USB_REV_REV_SHIFT                        (0U)                                                /**< USB0_REV.REV Position                   */
#define USB_REV_REV(x)                           (((uint8_t)(((uint8_t)(x))<<USB_REV_REV_SHIFT))&USB_REV_REV_MASK) /**< USB0_REV.REV Field                      */
/** @} */

/** @name ADDINFO - Peripheral Additional Info Register */ /** @{ */
#define USB_ADDINFO_IEHOST_MASK                  (0x1U)                                              /**< USB0_ADDINFO.IEHOST Mask                */
#define USB_ADDINFO_IEHOST_SHIFT                 (0U)                                                /**< USB0_ADDINFO.IEHOST Position            */
#define USB_ADDINFO_IEHOST(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ADDINFO_IEHOST_SHIFT))&USB_ADDINFO_IEHOST_MASK) /**< USB0_ADDINFO.IEHOST Field               */
#define USB_ADDINFO_IRQNUM_MASK                  (0xF8U)                                             /**< USB0_ADDINFO.IRQNUM Mask                */
#define USB_ADDINFO_IRQNUM_SHIFT                 (3U)                                                /**< USB0_ADDINFO.IRQNUM Position            */
#define USB_ADDINFO_IRQNUM(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ADDINFO_IRQNUM_SHIFT))&USB_ADDINFO_IRQNUM_MASK) /**< USB0_ADDINFO.IRQNUM Field               */
/** @} */

/** @name OTGISTAT - OTG Interrupt Status Register */ /** @{ */
#define USB_OTGISTAT_AVBUSCHG_MASK               (0x1U)                                              /**< USB0_OTGISTAT.AVBUSCHG Mask             */
#define USB_OTGISTAT_AVBUSCHG_SHIFT              (0U)                                                /**< USB0_OTGISTAT.AVBUSCHG Position         */
#define USB_OTGISTAT_AVBUSCHG(x)                 (((uint8_t)(((uint8_t)(x))<<USB_OTGISTAT_AVBUSCHG_SHIFT))&USB_OTGISTAT_AVBUSCHG_MASK) /**< USB0_OTGISTAT.AVBUSCHG Field            */
#define USB_OTGISTAT_B_SESS_CHG_MASK             (0x4U)                                              /**< USB0_OTGISTAT.B_SESS_CHG Mask           */
#define USB_OTGISTAT_B_SESS_CHG_SHIFT            (2U)                                                /**< USB0_OTGISTAT.B_SESS_CHG Position       */
#define USB_OTGISTAT_B_SESS_CHG(x)               (((uint8_t)(((uint8_t)(x))<<USB_OTGISTAT_B_SESS_CHG_SHIFT))&USB_OTGISTAT_B_SESS_CHG_MASK) /**< USB0_OTGISTAT.B_SESS_CHG Field          */
#define USB_OTGISTAT_SESSVLDCHG_MASK             (0x8U)                                              /**< USB0_OTGISTAT.SESSVLDCHG Mask           */
#define USB_OTGISTAT_SESSVLDCHG_SHIFT            (3U)                                                /**< USB0_OTGISTAT.SESSVLDCHG Position       */
#define USB_OTGISTAT_SESSVLDCHG(x)               (((uint8_t)(((uint8_t)(x))<<USB_OTGISTAT_SESSVLDCHG_SHIFT))&USB_OTGISTAT_SESSVLDCHG_MASK) /**< USB0_OTGISTAT.SESSVLDCHG Field          */
#define USB_OTGISTAT_LINE_STATE_CHG_MASK         (0x20U)                                             /**< USB0_OTGISTAT.LINE_STATE_CHG Mask       */
#define USB_OTGISTAT_LINE_STATE_CHG_SHIFT        (5U)                                                /**< USB0_OTGISTAT.LINE_STATE_CHG Position   */
#define USB_OTGISTAT_LINE_STATE_CHG(x)           (((uint8_t)(((uint8_t)(x))<<USB_OTGISTAT_LINE_STATE_CHG_SHIFT))&USB_OTGISTAT_LINE_STATE_CHG_MASK) /**< USB0_OTGISTAT.LINE_STATE_CHG Field      */
#define USB_OTGISTAT_ONEMSEC_MASK                (0x40U)                                             /**< USB0_OTGISTAT.ONEMSEC Mask              */
#define USB_OTGISTAT_ONEMSEC_SHIFT               (6U)                                                /**< USB0_OTGISTAT.ONEMSEC Position          */
#define USB_OTGISTAT_ONEMSEC(x)                  (((uint8_t)(((uint8_t)(x))<<USB_OTGISTAT_ONEMSEC_SHIFT))&USB_OTGISTAT_ONEMSEC_MASK) /**< USB0_OTGISTAT.ONEMSEC Field             */
#define USB_OTGISTAT_IDCHG_MASK                  (0x80U)                                             /**< USB0_OTGISTAT.IDCHG Mask                */
#define USB_OTGISTAT_IDCHG_SHIFT                 (7U)                                                /**< USB0_OTGISTAT.IDCHG Position            */
#define USB_OTGISTAT_IDCHG(x)                    (((uint8_t)(((uint8_t)(x))<<USB_OTGISTAT_IDCHG_SHIFT))&USB_OTGISTAT_IDCHG_MASK) /**< USB0_OTGISTAT.IDCHG Field               */
/** @} */

/** @name OTGICR - OTG Interrupt Control Register */ /** @{ */
#define USB_OTGICR_AVBUSEN_MASK                  (0x1U)                                              /**< USB0_OTGICR.AVBUSEN Mask                */
#define USB_OTGICR_AVBUSEN_SHIFT                 (0U)                                                /**< USB0_OTGICR.AVBUSEN Position            */
#define USB_OTGICR_AVBUSEN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_OTGICR_AVBUSEN_SHIFT))&USB_OTGICR_AVBUSEN_MASK) /**< USB0_OTGICR.AVBUSEN Field               */
#define USB_OTGICR_BSESSEN_MASK                  (0x4U)                                              /**< USB0_OTGICR.BSESSEN Mask                */
#define USB_OTGICR_BSESSEN_SHIFT                 (2U)                                                /**< USB0_OTGICR.BSESSEN Position            */
#define USB_OTGICR_BSESSEN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_OTGICR_BSESSEN_SHIFT))&USB_OTGICR_BSESSEN_MASK) /**< USB0_OTGICR.BSESSEN Field               */
#define USB_OTGICR_SESSVLDEN_MASK                (0x8U)                                              /**< USB0_OTGICR.SESSVLDEN Mask              */
#define USB_OTGICR_SESSVLDEN_SHIFT               (3U)                                                /**< USB0_OTGICR.SESSVLDEN Position          */
#define USB_OTGICR_SESSVLDEN(x)                  (((uint8_t)(((uint8_t)(x))<<USB_OTGICR_SESSVLDEN_SHIFT))&USB_OTGICR_SESSVLDEN_MASK) /**< USB0_OTGICR.SESSVLDEN Field             */
#define USB_OTGICR_LINESTATEEN_MASK              (0x20U)                                             /**< USB0_OTGICR.LINESTATEEN Mask            */
#define USB_OTGICR_LINESTATEEN_SHIFT             (5U)                                                /**< USB0_OTGICR.LINESTATEEN Position        */
#define USB_OTGICR_LINESTATEEN(x)                (((uint8_t)(((uint8_t)(x))<<USB_OTGICR_LINESTATEEN_SHIFT))&USB_OTGICR_LINESTATEEN_MASK) /**< USB0_OTGICR.LINESTATEEN Field           */
#define USB_OTGICR_ONEMSECEN_MASK                (0x40U)                                             /**< USB0_OTGICR.ONEMSECEN Mask              */
#define USB_OTGICR_ONEMSECEN_SHIFT               (6U)                                                /**< USB0_OTGICR.ONEMSECEN Position          */
#define USB_OTGICR_ONEMSECEN(x)                  (((uint8_t)(((uint8_t)(x))<<USB_OTGICR_ONEMSECEN_SHIFT))&USB_OTGICR_ONEMSECEN_MASK) /**< USB0_OTGICR.ONEMSECEN Field             */
#define USB_OTGICR_IDEN_MASK                     (0x80U)                                             /**< USB0_OTGICR.IDEN Mask                   */
#define USB_OTGICR_IDEN_SHIFT                    (7U)                                                /**< USB0_OTGICR.IDEN Position               */
#define USB_OTGICR_IDEN(x)                       (((uint8_t)(((uint8_t)(x))<<USB_OTGICR_IDEN_SHIFT))&USB_OTGICR_IDEN_MASK) /**< USB0_OTGICR.IDEN Field                  */
/** @} */

/** @name OTGSTAT - OTG Status Register */ /** @{ */
#define USB_OTGSTAT_AVBUSVLD_MASK                (0x1U)                                              /**< USB0_OTGSTAT.AVBUSVLD Mask              */
#define USB_OTGSTAT_AVBUSVLD_SHIFT               (0U)                                                /**< USB0_OTGSTAT.AVBUSVLD Position          */
#define USB_OTGSTAT_AVBUSVLD(x)                  (((uint8_t)(((uint8_t)(x))<<USB_OTGSTAT_AVBUSVLD_SHIFT))&USB_OTGSTAT_AVBUSVLD_MASK) /**< USB0_OTGSTAT.AVBUSVLD Field             */
#define USB_OTGSTAT_BSESSEND_MASK                (0x4U)                                              /**< USB0_OTGSTAT.BSESSEND Mask              */
#define USB_OTGSTAT_BSESSEND_SHIFT               (2U)                                                /**< USB0_OTGSTAT.BSESSEND Position          */
#define USB_OTGSTAT_BSESSEND(x)                  (((uint8_t)(((uint8_t)(x))<<USB_OTGSTAT_BSESSEND_SHIFT))&USB_OTGSTAT_BSESSEND_MASK) /**< USB0_OTGSTAT.BSESSEND Field             */
#define USB_OTGSTAT_SESS_VLD_MASK                (0x8U)                                              /**< USB0_OTGSTAT.SESS_VLD Mask              */
#define USB_OTGSTAT_SESS_VLD_SHIFT               (3U)                                                /**< USB0_OTGSTAT.SESS_VLD Position          */
#define USB_OTGSTAT_SESS_VLD(x)                  (((uint8_t)(((uint8_t)(x))<<USB_OTGSTAT_SESS_VLD_SHIFT))&USB_OTGSTAT_SESS_VLD_MASK) /**< USB0_OTGSTAT.SESS_VLD Field             */
#define USB_OTGSTAT_LINESTATESTABLE_MASK         (0x20U)                                             /**< USB0_OTGSTAT.LINESTATESTABLE Mask       */
#define USB_OTGSTAT_LINESTATESTABLE_SHIFT        (5U)                                                /**< USB0_OTGSTAT.LINESTATESTABLE Position   */
#define USB_OTGSTAT_LINESTATESTABLE(x)           (((uint8_t)(((uint8_t)(x))<<USB_OTGSTAT_LINESTATESTABLE_SHIFT))&USB_OTGSTAT_LINESTATESTABLE_MASK) /**< USB0_OTGSTAT.LINESTATESTABLE Field      */
#define USB_OTGSTAT_ONEMSECEN_MASK               (0x40U)                                             /**< USB0_OTGSTAT.ONEMSECEN Mask             */
#define USB_OTGSTAT_ONEMSECEN_SHIFT              (6U)                                                /**< USB0_OTGSTAT.ONEMSECEN Position         */
#define USB_OTGSTAT_ONEMSECEN(x)                 (((uint8_t)(((uint8_t)(x))<<USB_OTGSTAT_ONEMSECEN_SHIFT))&USB_OTGSTAT_ONEMSECEN_MASK) /**< USB0_OTGSTAT.ONEMSECEN Field            */
#define USB_OTGSTAT_ID_MASK                      (0x80U)                                             /**< USB0_OTGSTAT.ID Mask                    */
#define USB_OTGSTAT_ID_SHIFT                     (7U)                                                /**< USB0_OTGSTAT.ID Position                */
#define USB_OTGSTAT_ID(x)                        (((uint8_t)(((uint8_t)(x))<<USB_OTGSTAT_ID_SHIFT))&USB_OTGSTAT_ID_MASK) /**< USB0_OTGSTAT.ID Field                   */
/** @} */

/** @name OTGCTL - OTG Control Register */ /** @{ */
#define USB_OTGCTL_OTGEN_MASK                    (0x4U)                                              /**< USB0_OTGCTL.OTGEN Mask                  */
#define USB_OTGCTL_OTGEN_SHIFT                   (2U)                                                /**< USB0_OTGCTL.OTGEN Position              */
#define USB_OTGCTL_OTGEN(x)                      (((uint8_t)(((uint8_t)(x))<<USB_OTGCTL_OTGEN_SHIFT))&USB_OTGCTL_OTGEN_MASK) /**< USB0_OTGCTL.OTGEN Field                 */
#define USB_OTGCTL_DMLOW_MASK                    (0x10U)                                             /**< USB0_OTGCTL.DMLOW Mask                  */
#define USB_OTGCTL_DMLOW_SHIFT                   (4U)                                                /**< USB0_OTGCTL.DMLOW Position              */
#define USB_OTGCTL_DMLOW(x)                      (((uint8_t)(((uint8_t)(x))<<USB_OTGCTL_DMLOW_SHIFT))&USB_OTGCTL_DMLOW_MASK) /**< USB0_OTGCTL.DMLOW Field                 */
#define USB_OTGCTL_DPLOW_MASK                    (0x20U)                                             /**< USB0_OTGCTL.DPLOW Mask                  */
#define USB_OTGCTL_DPLOW_SHIFT                   (5U)                                                /**< USB0_OTGCTL.DPLOW Position              */
#define USB_OTGCTL_DPLOW(x)                      (((uint8_t)(((uint8_t)(x))<<USB_OTGCTL_DPLOW_SHIFT))&USB_OTGCTL_DPLOW_MASK) /**< USB0_OTGCTL.DPLOW Field                 */
#define USB_OTGCTL_DPHIGH_MASK                   (0x80U)                                             /**< USB0_OTGCTL.DPHIGH Mask                 */
#define USB_OTGCTL_DPHIGH_SHIFT                  (7U)                                                /**< USB0_OTGCTL.DPHIGH Position             */
#define USB_OTGCTL_DPHIGH(x)                     (((uint8_t)(((uint8_t)(x))<<USB_OTGCTL_DPHIGH_SHIFT))&USB_OTGCTL_DPHIGH_MASK) /**< USB0_OTGCTL.DPHIGH Field                */
/** @} */

/** @name ISTAT - Interrupt Status Register */ /** @{ */
#define USB_ISTAT_USBRST_MASK                    (0x1U)                                              /**< USB0_ISTAT.USBRST Mask                  */
#define USB_ISTAT_USBRST_SHIFT                   (0U)                                                /**< USB0_ISTAT.USBRST Position              */
#define USB_ISTAT_USBRST(x)                      (((uint8_t)(((uint8_t)(x))<<USB_ISTAT_USBRST_SHIFT))&USB_ISTAT_USBRST_MASK) /**< USB0_ISTAT.USBRST Field                 */
#define USB_ISTAT_ERROR_MASK                     (0x2U)                                              /**< USB0_ISTAT.ERROR Mask                   */
#define USB_ISTAT_ERROR_SHIFT                    (1U)                                                /**< USB0_ISTAT.ERROR Position               */
#define USB_ISTAT_ERROR(x)                       (((uint8_t)(((uint8_t)(x))<<USB_ISTAT_ERROR_SHIFT))&USB_ISTAT_ERROR_MASK) /**< USB0_ISTAT.ERROR Field                  */
#define USB_ISTAT_SOFTOK_MASK                    (0x4U)                                              /**< USB0_ISTAT.SOFTOK Mask                  */
#define USB_ISTAT_SOFTOK_SHIFT                   (2U)                                                /**< USB0_ISTAT.SOFTOK Position              */
#define USB_ISTAT_SOFTOK(x)                      (((uint8_t)(((uint8_t)(x))<<USB_ISTAT_SOFTOK_SHIFT))&USB_ISTAT_SOFTOK_MASK) /**< USB0_ISTAT.SOFTOK Field                 */
#define USB_ISTAT_TOKDNE_MASK                    (0x8U)                                              /**< USB0_ISTAT.TOKDNE Mask                  */
#define USB_ISTAT_TOKDNE_SHIFT                   (3U)                                                /**< USB0_ISTAT.TOKDNE Position              */
#define USB_ISTAT_TOKDNE(x)                      (((uint8_t)(((uint8_t)(x))<<USB_ISTAT_TOKDNE_SHIFT))&USB_ISTAT_TOKDNE_MASK) /**< USB0_ISTAT.TOKDNE Field                 */
#define USB_ISTAT_SLEEP_MASK                     (0x10U)                                             /**< USB0_ISTAT.SLEEP Mask                   */
#define USB_ISTAT_SLEEP_SHIFT                    (4U)                                                /**< USB0_ISTAT.SLEEP Position               */
#define USB_ISTAT_SLEEP(x)                       (((uint8_t)(((uint8_t)(x))<<USB_ISTAT_SLEEP_SHIFT))&USB_ISTAT_SLEEP_MASK) /**< USB0_ISTAT.SLEEP Field                  */
#define USB_ISTAT_RESUME_MASK                    (0x20U)                                             /**< USB0_ISTAT.RESUME Mask                  */
#define USB_ISTAT_RESUME_SHIFT                   (5U)                                                /**< USB0_ISTAT.RESUME Position              */
#define USB_ISTAT_RESUME(x)                      (((uint8_t)(((uint8_t)(x))<<USB_ISTAT_RESUME_SHIFT))&USB_ISTAT_RESUME_MASK) /**< USB0_ISTAT.RESUME Field                 */
#define USB_ISTAT_ATTACH_MASK                    (0x40U)                                             /**< USB0_ISTAT.ATTACH Mask                  */
#define USB_ISTAT_ATTACH_SHIFT                   (6U)                                                /**< USB0_ISTAT.ATTACH Position              */
#define USB_ISTAT_ATTACH(x)                      (((uint8_t)(((uint8_t)(x))<<USB_ISTAT_ATTACH_SHIFT))&USB_ISTAT_ATTACH_MASK) /**< USB0_ISTAT.ATTACH Field                 */
#define USB_ISTAT_STALL_MASK                     (0x80U)                                             /**< USB0_ISTAT.STALL Mask                   */
#define USB_ISTAT_STALL_SHIFT                    (7U)                                                /**< USB0_ISTAT.STALL Position               */
#define USB_ISTAT_STALL(x)                       (((uint8_t)(((uint8_t)(x))<<USB_ISTAT_STALL_SHIFT))&USB_ISTAT_STALL_MASK) /**< USB0_ISTAT.STALL Field                  */
/** @} */

/** @name INTEN - Interrupt Enable Register */ /** @{ */
#define USB_INTEN_USBRSTEN_MASK                  (0x1U)                                              /**< USB0_INTEN.USBRSTEN Mask                */
#define USB_INTEN_USBRSTEN_SHIFT                 (0U)                                                /**< USB0_INTEN.USBRSTEN Position            */
#define USB_INTEN_USBRSTEN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_INTEN_USBRSTEN_SHIFT))&USB_INTEN_USBRSTEN_MASK) /**< USB0_INTEN.USBRSTEN Field               */
#define USB_INTEN_ERROREN_MASK                   (0x2U)                                              /**< USB0_INTEN.ERROREN Mask                 */
#define USB_INTEN_ERROREN_SHIFT                  (1U)                                                /**< USB0_INTEN.ERROREN Position             */
#define USB_INTEN_ERROREN(x)                     (((uint8_t)(((uint8_t)(x))<<USB_INTEN_ERROREN_SHIFT))&USB_INTEN_ERROREN_MASK) /**< USB0_INTEN.ERROREN Field                */
#define USB_INTEN_SOFTOKEN_MASK                  (0x4U)                                              /**< USB0_INTEN.SOFTOKEN Mask                */
#define USB_INTEN_SOFTOKEN_SHIFT                 (2U)                                                /**< USB0_INTEN.SOFTOKEN Position            */
#define USB_INTEN_SOFTOKEN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_INTEN_SOFTOKEN_SHIFT))&USB_INTEN_SOFTOKEN_MASK) /**< USB0_INTEN.SOFTOKEN Field               */
#define USB_INTEN_TOKDNEEN_MASK                  (0x8U)                                              /**< USB0_INTEN.TOKDNEEN Mask                */
#define USB_INTEN_TOKDNEEN_SHIFT                 (3U)                                                /**< USB0_INTEN.TOKDNEEN Position            */
#define USB_INTEN_TOKDNEEN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_INTEN_TOKDNEEN_SHIFT))&USB_INTEN_TOKDNEEN_MASK) /**< USB0_INTEN.TOKDNEEN Field               */
#define USB_INTEN_SLEEPEN_MASK                   (0x10U)                                             /**< USB0_INTEN.SLEEPEN Mask                 */
#define USB_INTEN_SLEEPEN_SHIFT                  (4U)                                                /**< USB0_INTEN.SLEEPEN Position             */
#define USB_INTEN_SLEEPEN(x)                     (((uint8_t)(((uint8_t)(x))<<USB_INTEN_SLEEPEN_SHIFT))&USB_INTEN_SLEEPEN_MASK) /**< USB0_INTEN.SLEEPEN Field                */
#define USB_INTEN_RESUMEEN_MASK                  (0x20U)                                             /**< USB0_INTEN.RESUMEEN Mask                */
#define USB_INTEN_RESUMEEN_SHIFT                 (5U)                                                /**< USB0_INTEN.RESUMEEN Position            */
#define USB_INTEN_RESUMEEN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_INTEN_RESUMEEN_SHIFT))&USB_INTEN_RESUMEEN_MASK) /**< USB0_INTEN.RESUMEEN Field               */
#define USB_INTEN_ATTACHEN_MASK                  (0x40U)                                             /**< USB0_INTEN.ATTACHEN Mask                */
#define USB_INTEN_ATTACHEN_SHIFT                 (6U)                                                /**< USB0_INTEN.ATTACHEN Position            */
#define USB_INTEN_ATTACHEN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_INTEN_ATTACHEN_SHIFT))&USB_INTEN_ATTACHEN_MASK) /**< USB0_INTEN.ATTACHEN Field               */
#define USB_INTEN_STALLEN_MASK                   (0x80U)                                             /**< USB0_INTEN.STALLEN Mask                 */
#define USB_INTEN_STALLEN_SHIFT                  (7U)                                                /**< USB0_INTEN.STALLEN Position             */
#define USB_INTEN_STALLEN(x)                     (((uint8_t)(((uint8_t)(x))<<USB_INTEN_STALLEN_SHIFT))&USB_INTEN_STALLEN_MASK) /**< USB0_INTEN.STALLEN Field                */
/** @} */

/** @name ERRSTAT - Error Interrupt Status Register */ /** @{ */
#define USB_ERRSTAT_PIDERR_MASK                  (0x1U)                                              /**< USB0_ERRSTAT.PIDERR Mask                */
#define USB_ERRSTAT_PIDERR_SHIFT                 (0U)                                                /**< USB0_ERRSTAT.PIDERR Position            */
#define USB_ERRSTAT_PIDERR(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ERRSTAT_PIDERR_SHIFT))&USB_ERRSTAT_PIDERR_MASK) /**< USB0_ERRSTAT.PIDERR Field               */
#define USB_ERRSTAT_CRC5EOF_MASK                 (0x2U)                                              /**< USB0_ERRSTAT.CRC5EOF Mask               */
#define USB_ERRSTAT_CRC5EOF_SHIFT                (1U)                                                /**< USB0_ERRSTAT.CRC5EOF Position           */
#define USB_ERRSTAT_CRC5EOF(x)                   (((uint8_t)(((uint8_t)(x))<<USB_ERRSTAT_CRC5EOF_SHIFT))&USB_ERRSTAT_CRC5EOF_MASK) /**< USB0_ERRSTAT.CRC5EOF Field              */
#define USB_ERRSTAT_CRC16_MASK                   (0x4U)                                              /**< USB0_ERRSTAT.CRC16 Mask                 */
#define USB_ERRSTAT_CRC16_SHIFT                  (2U)                                                /**< USB0_ERRSTAT.CRC16 Position             */
#define USB_ERRSTAT_CRC16(x)                     (((uint8_t)(((uint8_t)(x))<<USB_ERRSTAT_CRC16_SHIFT))&USB_ERRSTAT_CRC16_MASK) /**< USB0_ERRSTAT.CRC16 Field                */
#define USB_ERRSTAT_DFN8_MASK                    (0x8U)                                              /**< USB0_ERRSTAT.DFN8 Mask                  */
#define USB_ERRSTAT_DFN8_SHIFT                   (3U)                                                /**< USB0_ERRSTAT.DFN8 Position              */
#define USB_ERRSTAT_DFN8(x)                      (((uint8_t)(((uint8_t)(x))<<USB_ERRSTAT_DFN8_SHIFT))&USB_ERRSTAT_DFN8_MASK) /**< USB0_ERRSTAT.DFN8 Field                 */
#define USB_ERRSTAT_BTOERR_MASK                  (0x10U)                                             /**< USB0_ERRSTAT.BTOERR Mask                */
#define USB_ERRSTAT_BTOERR_SHIFT                 (4U)                                                /**< USB0_ERRSTAT.BTOERR Position            */
#define USB_ERRSTAT_BTOERR(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ERRSTAT_BTOERR_SHIFT))&USB_ERRSTAT_BTOERR_MASK) /**< USB0_ERRSTAT.BTOERR Field               */
#define USB_ERRSTAT_DMAERR_MASK                  (0x20U)                                             /**< USB0_ERRSTAT.DMAERR Mask                */
#define USB_ERRSTAT_DMAERR_SHIFT                 (5U)                                                /**< USB0_ERRSTAT.DMAERR Position            */
#define USB_ERRSTAT_DMAERR(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ERRSTAT_DMAERR_SHIFT))&USB_ERRSTAT_DMAERR_MASK) /**< USB0_ERRSTAT.DMAERR Field               */
#define USB_ERRSTAT_BTSERR_MASK                  (0x80U)                                             /**< USB0_ERRSTAT.BTSERR Mask                */
#define USB_ERRSTAT_BTSERR_SHIFT                 (7U)                                                /**< USB0_ERRSTAT.BTSERR Position            */
#define USB_ERRSTAT_BTSERR(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ERRSTAT_BTSERR_SHIFT))&USB_ERRSTAT_BTSERR_MASK) /**< USB0_ERRSTAT.BTSERR Field               */
/** @} */

/** @name ERREN - Error Interrupt Enable Register */ /** @{ */
#define USB_ERREN_PIDERREN_MASK                  (0x1U)                                              /**< USB0_ERREN.PIDERREN Mask                */
#define USB_ERREN_PIDERREN_SHIFT                 (0U)                                                /**< USB0_ERREN.PIDERREN Position            */
#define USB_ERREN_PIDERREN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ERREN_PIDERREN_SHIFT))&USB_ERREN_PIDERREN_MASK) /**< USB0_ERREN.PIDERREN Field               */
#define USB_ERREN_CRC5EOFEN_MASK                 (0x2U)                                              /**< USB0_ERREN.CRC5EOFEN Mask               */
#define USB_ERREN_CRC5EOFEN_SHIFT                (1U)                                                /**< USB0_ERREN.CRC5EOFEN Position           */
#define USB_ERREN_CRC5EOFEN(x)                   (((uint8_t)(((uint8_t)(x))<<USB_ERREN_CRC5EOFEN_SHIFT))&USB_ERREN_CRC5EOFEN_MASK) /**< USB0_ERREN.CRC5EOFEN Field              */
#define USB_ERREN_CRC16EN_MASK                   (0x4U)                                              /**< USB0_ERREN.CRC16EN Mask                 */
#define USB_ERREN_CRC16EN_SHIFT                  (2U)                                                /**< USB0_ERREN.CRC16EN Position             */
#define USB_ERREN_CRC16EN(x)                     (((uint8_t)(((uint8_t)(x))<<USB_ERREN_CRC16EN_SHIFT))&USB_ERREN_CRC16EN_MASK) /**< USB0_ERREN.CRC16EN Field                */
#define USB_ERREN_DFN8EN_MASK                    (0x8U)                                              /**< USB0_ERREN.DFN8EN Mask                  */
#define USB_ERREN_DFN8EN_SHIFT                   (3U)                                                /**< USB0_ERREN.DFN8EN Position              */
#define USB_ERREN_DFN8EN(x)                      (((uint8_t)(((uint8_t)(x))<<USB_ERREN_DFN8EN_SHIFT))&USB_ERREN_DFN8EN_MASK) /**< USB0_ERREN.DFN8EN Field                 */
#define USB_ERREN_BTOERREN_MASK                  (0x10U)                                             /**< USB0_ERREN.BTOERREN Mask                */
#define USB_ERREN_BTOERREN_SHIFT                 (4U)                                                /**< USB0_ERREN.BTOERREN Position            */
#define USB_ERREN_BTOERREN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ERREN_BTOERREN_SHIFT))&USB_ERREN_BTOERREN_MASK) /**< USB0_ERREN.BTOERREN Field               */
#define USB_ERREN_DMAERREN_MASK                  (0x20U)                                             /**< USB0_ERREN.DMAERREN Mask                */
#define USB_ERREN_DMAERREN_SHIFT                 (5U)                                                /**< USB0_ERREN.DMAERREN Position            */
#define USB_ERREN_DMAERREN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ERREN_DMAERREN_SHIFT))&USB_ERREN_DMAERREN_MASK) /**< USB0_ERREN.DMAERREN Field               */
#define USB_ERREN_BTSERREN_MASK                  (0x80U)                                             /**< USB0_ERREN.BTSERREN Mask                */
#define USB_ERREN_BTSERREN_SHIFT                 (7U)                                                /**< USB0_ERREN.BTSERREN Position            */
#define USB_ERREN_BTSERREN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ERREN_BTSERREN_SHIFT))&USB_ERREN_BTSERREN_MASK) /**< USB0_ERREN.BTSERREN Field               */
/** @} */

/** @name STAT - Status Register */ /** @{ */
#define USB_STAT_ODD_MASK                        (0x4U)                                              /**< USB0_STAT.ODD Mask                      */
#define USB_STAT_ODD_SHIFT                       (2U)                                                /**< USB0_STAT.ODD Position                  */
#define USB_STAT_ODD(x)                          (((uint8_t)(((uint8_t)(x))<<USB_STAT_ODD_SHIFT))&USB_STAT_ODD_MASK) /**< USB0_STAT.ODD Field                     */
#define USB_STAT_TX_MASK                         (0x8U)                                              /**< USB0_STAT.TX Mask                       */
#define USB_STAT_TX_SHIFT                        (3U)                                                /**< USB0_STAT.TX Position                   */
#define USB_STAT_TX(x)                           (((uint8_t)(((uint8_t)(x))<<USB_STAT_TX_SHIFT))&USB_STAT_TX_MASK) /**< USB0_STAT.TX Field                      */
#define USB_STAT_ENDP_MASK                       (0xF0U)                                             /**< USB0_STAT.ENDP Mask                     */
#define USB_STAT_ENDP_SHIFT                      (4U)                                                /**< USB0_STAT.ENDP Position                 */
#define USB_STAT_ENDP(x)                         (((uint8_t)(((uint8_t)(x))<<USB_STAT_ENDP_SHIFT))&USB_STAT_ENDP_MASK) /**< USB0_STAT.ENDP Field                    */
/** @} */

/** @name CTL - Control Register */ /** @{ */
#define USB_CTL_USBENSOFEN_MASK                  (0x1U)                                              /**< USB0_CTL.USBENSOFEN Mask                */
#define USB_CTL_USBENSOFEN_SHIFT                 (0U)                                                /**< USB0_CTL.USBENSOFEN Position            */
#define USB_CTL_USBENSOFEN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_CTL_USBENSOFEN_SHIFT))&USB_CTL_USBENSOFEN_MASK) /**< USB0_CTL.USBENSOFEN Field               */
#define USB_CTL_ODDRST_MASK                      (0x2U)                                              /**< USB0_CTL.ODDRST Mask                    */
#define USB_CTL_ODDRST_SHIFT                     (1U)                                                /**< USB0_CTL.ODDRST Position                */
#define USB_CTL_ODDRST(x)                        (((uint8_t)(((uint8_t)(x))<<USB_CTL_ODDRST_SHIFT))&USB_CTL_ODDRST_MASK) /**< USB0_CTL.ODDRST Field                   */
#define USB_CTL_RESUME_MASK                      (0x4U)                                              /**< USB0_CTL.RESUME Mask                    */
#define USB_CTL_RESUME_SHIFT                     (2U)                                                /**< USB0_CTL.RESUME Position                */
#define USB_CTL_RESUME(x)                        (((uint8_t)(((uint8_t)(x))<<USB_CTL_RESUME_SHIFT))&USB_CTL_RESUME_MASK) /**< USB0_CTL.RESUME Field                   */
#define USB_CTL_HOSTMODEEN_MASK                  (0x8U)                                              /**< USB0_CTL.HOSTMODEEN Mask                */
#define USB_CTL_HOSTMODEEN_SHIFT                 (3U)                                                /**< USB0_CTL.HOSTMODEEN Position            */
#define USB_CTL_HOSTMODEEN(x)                    (((uint8_t)(((uint8_t)(x))<<USB_CTL_HOSTMODEEN_SHIFT))&USB_CTL_HOSTMODEEN_MASK) /**< USB0_CTL.HOSTMODEEN Field               */
#define USB_CTL_RESET_MASK                       (0x10U)                                             /**< USB0_CTL.RESET Mask                     */
#define USB_CTL_RESET_SHIFT                      (4U)                                                /**< USB0_CTL.RESET Position                 */
#define USB_CTL_RESET(x)                         (((uint8_t)(((uint8_t)(x))<<USB_CTL_RESET_SHIFT))&USB_CTL_RESET_MASK) /**< USB0_CTL.RESET Field                    */
#define USB_CTL_TXSUSPENDTOKENBUSY_MASK          (0x20U)                                             /**< USB0_CTL.TXSUSPENDTOKENBUSY Mask        */
#define USB_CTL_TXSUSPENDTOKENBUSY_SHIFT         (5U)                                                /**< USB0_CTL.TXSUSPENDTOKENBUSY Position    */
#define USB_CTL_TXSUSPENDTOKENBUSY(x)            (((uint8_t)(((uint8_t)(x))<<USB_CTL_TXSUSPENDTOKENBUSY_SHIFT))&USB_CTL_TXSUSPENDTOKENBUSY_MASK) /**< USB0_CTL.TXSUSPENDTOKENBUSY Field       */
#define USB_CTL_SE0_MASK                         (0x40U)                                             /**< USB0_CTL.SE0 Mask                       */
#define USB_CTL_SE0_SHIFT                        (6U)                                                /**< USB0_CTL.SE0 Position                   */
#define USB_CTL_SE0(x)                           (((uint8_t)(((uint8_t)(x))<<USB_CTL_SE0_SHIFT))&USB_CTL_SE0_MASK) /**< USB0_CTL.SE0 Field                      */
#define USB_CTL_JSTATE_MASK                      (0x80U)                                             /**< USB0_CTL.JSTATE Mask                    */
#define USB_CTL_JSTATE_SHIFT                     (7U)                                                /**< USB0_CTL.JSTATE Position                */
#define USB_CTL_JSTATE(x)                        (((uint8_t)(((uint8_t)(x))<<USB_CTL_JSTATE_SHIFT))&USB_CTL_JSTATE_MASK) /**< USB0_CTL.JSTATE Field                   */
/** @} */

/** @name ADDR - Address Register */ /** @{ */
#define USB_ADDR_ADDR_MASK                       (0x7FU)                                             /**< USB0_ADDR.ADDR Mask                     */
#define USB_ADDR_ADDR_SHIFT                      (0U)                                                /**< USB0_ADDR.ADDR Position                 */
#define USB_ADDR_ADDR(x)                         (((uint8_t)(((uint8_t)(x))<<USB_ADDR_ADDR_SHIFT))&USB_ADDR_ADDR_MASK) /**< USB0_ADDR.ADDR Field                    */
#define USB_ADDR_LSEN_MASK                       (0x80U)                                             /**< USB0_ADDR.LSEN Mask                     */
#define USB_ADDR_LSEN_SHIFT                      (7U)                                                /**< USB0_ADDR.LSEN Position                 */
#define USB_ADDR_LSEN(x)                         (((uint8_t)(((uint8_t)(x))<<USB_ADDR_LSEN_SHIFT))&USB_ADDR_LSEN_MASK) /**< USB0_ADDR.LSEN Field                    */
/** @} */

/** @name BDTPAGE1 - BDT Page Register 1 */ /** @{ */
#define USB_BDTPAGE1_BDTBA_MASK                  (0xFEU)                                             /**< USB0_BDTPAGE1.BDTBA Mask                */
#define USB_BDTPAGE1_BDTBA_SHIFT                 (1U)                                                /**< USB0_BDTPAGE1.BDTBA Position            */
#define USB_BDTPAGE1_BDTBA(x)                    (((uint8_t)(((uint8_t)(x))<<USB_BDTPAGE1_BDTBA_SHIFT))&USB_BDTPAGE1_BDTBA_MASK) /**< USB0_BDTPAGE1.BDTBA Field               */
/** @} */

/** @name FRMNUML - Frame Number Register Low */ /** @{ */
#define USB_FRMNUML_FRM_MASK                     (0xFFU)                                             /**< USB0_FRMNUML.FRM Mask                   */
#define USB_FRMNUML_FRM_SHIFT                    (0U)                                                /**< USB0_FRMNUML.FRM Position               */
#define USB_FRMNUML_FRM(x)                       (((uint8_t)(((uint8_t)(x))<<USB_FRMNUML_FRM_SHIFT))&USB_FRMNUML_FRM_MASK) /**< USB0_FRMNUML.FRM Field                  */
/** @} */

/** @name FRMNUMH - Frame Number Register High */ /** @{ */
#define USB_FRMNUMH_FRM_MASK                     (0x7U)                                              /**< USB0_FRMNUMH.FRM Mask                   */
#define USB_FRMNUMH_FRM_SHIFT                    (0U)                                                /**< USB0_FRMNUMH.FRM Position               */
#define USB_FRMNUMH_FRM(x)                       (((uint8_t)(((uint8_t)(x))<<USB_FRMNUMH_FRM_SHIFT))&USB_FRMNUMH_FRM_MASK) /**< USB0_FRMNUMH.FRM Field                  */
/** @} */

/** @name TOKEN - Token Register */ /** @{ */
#define USB_TOKEN_TOKENENDPT_MASK                (0xFU)                                              /**< USB0_TOKEN.TOKENENDPT Mask              */
#define USB_TOKEN_TOKENENDPT_SHIFT               (0U)                                                /**< USB0_TOKEN.TOKENENDPT Position          */
#define USB_TOKEN_TOKENENDPT(x)                  (((uint8_t)(((uint8_t)(x))<<USB_TOKEN_TOKENENDPT_SHIFT))&USB_TOKEN_TOKENENDPT_MASK) /**< USB0_TOKEN.TOKENENDPT Field             */
#define USB_TOKEN_TOKENPID_MASK                  (0xF0U)                                             /**< USB0_TOKEN.TOKENPID Mask                */
#define USB_TOKEN_TOKENPID_SHIFT                 (4U)                                                /**< USB0_TOKEN.TOKENPID Position            */
#define USB_TOKEN_TOKENPID(x)                    (((uint8_t)(((uint8_t)(x))<<USB_TOKEN_TOKENPID_SHIFT))&USB_TOKEN_TOKENPID_MASK) /**< USB0_TOKEN.TOKENPID Field               */
/** @} */

/** @name SOFTHLD - SOF Threshold Register */ /** @{ */
#define USB_SOFTHLD_CNT_MASK                     (0xFFU)                                             /**< USB0_SOFTHLD.CNT Mask                   */
#define USB_SOFTHLD_CNT_SHIFT                    (0U)                                                /**< USB0_SOFTHLD.CNT Position               */
#define USB_SOFTHLD_CNT(x)                       (((uint8_t)(((uint8_t)(x))<<USB_SOFTHLD_CNT_SHIFT))&USB_SOFTHLD_CNT_MASK) /**< USB0_SOFTHLD.CNT Field                  */
/** @} */

/** @name BDTPAGE2 - BDT Page Register 2 */ /** @{ */
#define USB_BDTPAGE2_BDTBA_MASK                  (0xFFU)                                             /**< USB0_BDTPAGE2.BDTBA Mask                */
#define USB_BDTPAGE2_BDTBA_SHIFT                 (0U)                                                /**< USB0_BDTPAGE2.BDTBA Position            */
#define USB_BDTPAGE2_BDTBA(x)                    (((uint8_t)(((uint8_t)(x))<<USB_BDTPAGE2_BDTBA_SHIFT))&USB_BDTPAGE2_BDTBA_MASK) /**< USB0_BDTPAGE2.BDTBA Field               */
/** @} */

/** @name BDTPAGE3 - BDT Page Register 3 */ /** @{ */
#define USB_BDTPAGE3_BDTBA_MASK                  (0xFFU)                                             /**< USB0_BDTPAGE3.BDTBA Mask                */
#define USB_BDTPAGE3_BDTBA_SHIFT                 (0U)                                                /**< USB0_BDTPAGE3.BDTBA Position            */
#define USB_BDTPAGE3_BDTBA(x)                    (((uint8_t)(((uint8_t)(x))<<USB_BDTPAGE3_BDTBA_SHIFT))&USB_BDTPAGE3_BDTBA_MASK) /**< USB0_BDTPAGE3.BDTBA Field               */
/** @} */

/** @name ENDPT - Endpoint Control Register */ /** @{ */
#define USB_ENDPT_EPHSHK_MASK                    (0x1U)                                              /**< USB0_ENDPT.EPHSHK Mask                  */
#define USB_ENDPT_EPHSHK_SHIFT                   (0U)                                                /**< USB0_ENDPT.EPHSHK Position              */
#define USB_ENDPT_EPHSHK(x)                      (((uint8_t)(((uint8_t)(x))<<USB_ENDPT_EPHSHK_SHIFT))&USB_ENDPT_EPHSHK_MASK) /**< USB0_ENDPT.EPHSHK Field                 */
#define USB_ENDPT_EPSTALL_MASK                   (0x2U)                                              /**< USB0_ENDPT.EPSTALL Mask                 */
#define USB_ENDPT_EPSTALL_SHIFT                  (1U)                                                /**< USB0_ENDPT.EPSTALL Position             */
#define USB_ENDPT_EPSTALL(x)                     (((uint8_t)(((uint8_t)(x))<<USB_ENDPT_EPSTALL_SHIFT))&USB_ENDPT_EPSTALL_MASK) /**< USB0_ENDPT.EPSTALL Field                */
#define USB_ENDPT_EPTXEN_MASK                    (0x4U)                                              /**< USB0_ENDPT.EPTXEN Mask                  */
#define USB_ENDPT_EPTXEN_SHIFT                   (2U)                                                /**< USB0_ENDPT.EPTXEN Position              */
#define USB_ENDPT_EPTXEN(x)                      (((uint8_t)(((uint8_t)(x))<<USB_ENDPT_EPTXEN_SHIFT))&USB_ENDPT_EPTXEN_MASK) /**< USB0_ENDPT.EPTXEN Field                 */
#define USB_ENDPT_EPRXEN_MASK                    (0x8U)                                              /**< USB0_ENDPT.EPRXEN Mask                  */
#define USB_ENDPT_EPRXEN_SHIFT                   (3U)                                                /**< USB0_ENDPT.EPRXEN Position              */
#define USB_ENDPT_EPRXEN(x)                      (((uint8_t)(((uint8_t)(x))<<USB_ENDPT_EPRXEN_SHIFT))&USB_ENDPT_EPRXEN_MASK) /**< USB0_ENDPT.EPRXEN Field                 */
#define USB_ENDPT_EPCTLDIS_MASK                  (0x10U)                                             /**< USB0_ENDPT.EPCTLDIS Mask                */
#define USB_ENDPT_EPCTLDIS_SHIFT                 (4U)                                                /**< USB0_ENDPT.EPCTLDIS Position            */
#define USB_ENDPT_EPCTLDIS(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ENDPT_EPCTLDIS_SHIFT))&USB_ENDPT_EPCTLDIS_MASK) /**< USB0_ENDPT.EPCTLDIS Field               */
#define USB_ENDPT_RETRYDIS_MASK                  (0x40U)                                             /**< USB0_ENDPT.RETRYDIS Mask                */
#define USB_ENDPT_RETRYDIS_SHIFT                 (6U)                                                /**< USB0_ENDPT.RETRYDIS Position            */
#define USB_ENDPT_RETRYDIS(x)                    (((uint8_t)(((uint8_t)(x))<<USB_ENDPT_RETRYDIS_SHIFT))&USB_ENDPT_RETRYDIS_MASK) /**< USB0_ENDPT.RETRYDIS Field               */
#define USB_ENDPT_HOSTWOHUB_MASK                 (0x80U)                                             /**< USB0_ENDPT.HOSTWOHUB Mask               */
#define USB_ENDPT_HOSTWOHUB_SHIFT                (7U)                                                /**< USB0_ENDPT.HOSTWOHUB Position           */
#define USB_ENDPT_HOSTWOHUB(x)                   (((uint8_t)(((uint8_t)(x))<<USB_ENDPT_HOSTWOHUB_SHIFT))&USB_ENDPT_HOSTWOHUB_MASK) /**< USB0_ENDPT.HOSTWOHUB Field              */
/** @} */

/** @name USBCTRL - USB Control Register */ /** @{ */
#define USB_USBCTRL_PDE_MASK                     (0x40U)                                             /**< USB0_USBCTRL.PDE Mask                   */
#define USB_USBCTRL_PDE_SHIFT                    (6U)                                                /**< USB0_USBCTRL.PDE Position               */
#define USB_USBCTRL_PDE(x)                       (((uint8_t)(((uint8_t)(x))<<USB_USBCTRL_PDE_SHIFT))&USB_USBCTRL_PDE_MASK) /**< USB0_USBCTRL.PDE Field                  */
#define USB_USBCTRL_SUSP_MASK                    (0x80U)                                             /**< USB0_USBCTRL.SUSP Mask                  */
#define USB_USBCTRL_SUSP_SHIFT                   (7U)                                                /**< USB0_USBCTRL.SUSP Position              */
#define USB_USBCTRL_SUSP(x)                      (((uint8_t)(((uint8_t)(x))<<USB_USBCTRL_SUSP_SHIFT))&USB_USBCTRL_SUSP_MASK) /**< USB0_USBCTRL.SUSP Field                 */
/** @} */

/** @name OBSERVE - USB OTG Observe Register */ /** @{ */
#define USB_OBSERVE_DMPD_MASK                    (0x10U)                                             /**< USB0_OBSERVE.DMPD Mask                  */
#define USB_OBSERVE_DMPD_SHIFT                   (4U)                                                /**< USB0_OBSERVE.DMPD Position              */
#define USB_OBSERVE_DMPD(x)                      (((uint8_t)(((uint8_t)(x))<<USB_OBSERVE_DMPD_SHIFT))&USB_OBSERVE_DMPD_MASK) /**< USB0_OBSERVE.DMPD Field                 */
#define USB_OBSERVE_DPPD_MASK                    (0x40U)                                             /**< USB0_OBSERVE.DPPD Mask                  */
#define USB_OBSERVE_DPPD_SHIFT                   (6U)                                                /**< USB0_OBSERVE.DPPD Position              */
#define USB_OBSERVE_DPPD(x)                      (((uint8_t)(((uint8_t)(x))<<USB_OBSERVE_DPPD_SHIFT))&USB_OBSERVE_DPPD_MASK) /**< USB0_OBSERVE.DPPD Field                 */
#define USB_OBSERVE_DPPU_MASK                    (0x80U)                                             /**< USB0_OBSERVE.DPPU Mask                  */
#define USB_OBSERVE_DPPU_SHIFT                   (7U)                                                /**< USB0_OBSERVE.DPPU Position              */
#define USB_OBSERVE_DPPU(x)                      (((uint8_t)(((uint8_t)(x))<<USB_OBSERVE_DPPU_SHIFT))&USB_OBSERVE_DPPU_MASK) /**< USB0_OBSERVE.DPPU Field                 */
/** @} */

/** @name CONTROL - USB OTG Control Register */ /** @{ */
#define USB_CONTROL_DPPULLUPNONOTG_MASK          (0x10U)                                             /**< USB0_CONTROL.DPPULLUPNONOTG Mask        */
#define USB_CONTROL_DPPULLUPNONOTG_SHIFT         (4U)                                                /**< USB0_CONTROL.DPPULLUPNONOTG Position    */
#define USB_CONTROL_DPPULLUPNONOTG(x)            (((uint8_t)(((uint8_t)(x))<<USB_CONTROL_DPPULLUPNONOTG_SHIFT))&USB_CONTROL_DPPULLUPNONOTG_MASK) /**< USB0_CONTROL.DPPULLUPNONOTG Field       */
/** @} */

/** @name USBTRC0 - USB Transceiver Control Register 0 */ /** @{ */
#define USB_USBTRC0_USB_RESUME_INT_MASK          (0x1U)                                              /**< USB0_USBTRC0.USB_RESUME_INT Mask        */
#define USB_USBTRC0_USB_RESUME_INT_SHIFT         (0U)                                                /**< USB0_USBTRC0.USB_RESUME_INT Position    */
#define USB_USBTRC0_USB_RESUME_INT(x)            (((uint8_t)(((uint8_t)(x))<<USB_USBTRC0_USB_RESUME_INT_SHIFT))&USB_USBTRC0_USB_RESUME_INT_MASK) /**< USB0_USBTRC0.USB_RESUME_INT Field       */
#define USB_USBTRC0_SYNC_DET_MASK                (0x2U)                                              /**< USB0_USBTRC0.SYNC_DET Mask              */
#define USB_USBTRC0_SYNC_DET_SHIFT               (1U)                                                /**< USB0_USBTRC0.SYNC_DET Position          */
#define USB_USBTRC0_SYNC_DET(x)                  (((uint8_t)(((uint8_t)(x))<<USB_USBTRC0_SYNC_DET_SHIFT))&USB_USBTRC0_SYNC_DET_MASK) /**< USB0_USBTRC0.SYNC_DET Field             */
#define USB_USBTRC0_USBRESMEN_MASK               (0x20U)                                             /**< USB0_USBTRC0.USBRESMEN Mask             */
#define USB_USBTRC0_USBRESMEN_SHIFT              (5U)                                                /**< USB0_USBTRC0.USBRESMEN Position         */
#define USB_USBTRC0_USBRESMEN(x)                 (((uint8_t)(((uint8_t)(x))<<USB_USBTRC0_USBRESMEN_SHIFT))&USB_USBTRC0_USBRESMEN_MASK) /**< USB0_USBTRC0.USBRESMEN Field            */
#define USB_USBTRC0_USBRESET_MASK                (0x80U)                                             /**< USB0_USBTRC0.USBRESET Mask              */
#define USB_USBTRC0_USBRESET_SHIFT               (7U)                                                /**< USB0_USBTRC0.USBRESET Position          */
#define USB_USBTRC0_USBRESET(x)                  (((uint8_t)(((uint8_t)(x))<<USB_USBTRC0_USBRESET_SHIFT))&USB_USBTRC0_USBRESET_MASK) /**< USB0_USBTRC0.USBRESET Field             */
/** @} */

/** @name USBFRMADJUST - Frame Adjust Register */ /** @{ */
#define USB_USBFRMADJUST_ADJ_MASK                (0xFFU)                                             /**< USB0_USBFRMADJUST.ADJ Mask              */
#define USB_USBFRMADJUST_ADJ_SHIFT               (0U)                                                /**< USB0_USBFRMADJUST.ADJ Position          */
#define USB_USBFRMADJUST_ADJ(x)                  (((uint8_t)(((uint8_t)(x))<<USB_USBFRMADJUST_ADJ_SHIFT))&USB_USBFRMADJUST_ADJ_MASK) /**< USB0_USBFRMADJUST.ADJ Field             */
/** @} */

/** @} */ /* End group USB_Register_Masks_GROUP */


/* USB0 - Peripheral instance base addresses */
#define USB0_BasePtr                   0x40072000UL //!< Peripheral base address
#define USB0                           ((USB_Type *) USB0_BasePtr) //!< Freescale base pointer
#define USB0_BASE_PTR                  (USB0) //!< Freescale style base pointer
#define USB0_IRQS { USB0_IRQn,  }


/** @} */ /* End group USB_Peripheral_access_layer_GROUP */


/** @brief C Struct for USBDCD */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup USBDCD_Peripheral_access_layer_GROUP USBDCD Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           USBDCD0 (file:USBDCD0_V1_1)          ================ */
/* ================================================================================ */

/**
 * @brief USB Device Charger Detection module (USB DCD V1.1)
 */
/**
 * @struct USBDCD_Type
 * @brief  C Struct allowing access to USBDCD registers
 */
typedef struct USBDCD_Type {
   __IO uint32_t  CONTROL;                      /**< 0000: Control Register                                             */
   __IO uint32_t  CLOCK;                        /**< 0004: Clock Register                                               */
   __I  uint32_t  STATUS;                       /**< 0008: Status Register                                              */
        uint8_t   RESERVED_0[4];                /**< 000C: 0x4 bytes                                                    */
   __IO uint32_t  TIMER0;                       /**< 0010: TIMER0 Register                                              */
   __IO uint32_t  TIMER1;                       /**< 0014: Timing parameters for USBDCD                                 */
   __IO uint32_t  TIMER2;                       /**< 0018: Timing parameters for USBDCD                                 */
} USBDCD_Type;


/** @brief Register Masks for USBDCD */

/* -------------------------------------------------------------------------------- */
/* -----------     'USBDCD0' Position & Mask macros                     ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup USBDCD_Register_Masks_GROUP USBDCD Register Masks */
/** @{ */

/** @name CONTROL - Control Register */ /** @{ */
#define USBDCD_CONTROL_IACK_MASK                 (0x1U)                                              /**< USBDCD0_CONTROL.IACK Mask               */
#define USBDCD_CONTROL_IACK_SHIFT                (0U)                                                /**< USBDCD0_CONTROL.IACK Position           */
#define USBDCD_CONTROL_IACK(x)                   (((uint32_t)(((uint32_t)(x))<<USBDCD_CONTROL_IACK_SHIFT))&USBDCD_CONTROL_IACK_MASK) /**< USBDCD0_CONTROL.IACK Field              */
#define USBDCD_CONTROL_IF_MASK                   (0x100U)                                            /**< USBDCD0_CONTROL.IF Mask                 */
#define USBDCD_CONTROL_IF_SHIFT                  (8U)                                                /**< USBDCD0_CONTROL.IF Position             */
#define USBDCD_CONTROL_IF(x)                     (((uint32_t)(((uint32_t)(x))<<USBDCD_CONTROL_IF_SHIFT))&USBDCD_CONTROL_IF_MASK) /**< USBDCD0_CONTROL.IF Field                */
#define USBDCD_CONTROL_IE_MASK                   (0x10000U)                                          /**< USBDCD0_CONTROL.IE Mask                 */
#define USBDCD_CONTROL_IE_SHIFT                  (16U)                                               /**< USBDCD0_CONTROL.IE Position             */
#define USBDCD_CONTROL_IE(x)                     (((uint32_t)(((uint32_t)(x))<<USBDCD_CONTROL_IE_SHIFT))&USBDCD_CONTROL_IE_MASK) /**< USBDCD0_CONTROL.IE Field                */
#define USBDCD_CONTROL_START_MASK                (0x1000000U)                                        /**< USBDCD0_CONTROL.START Mask              */
#define USBDCD_CONTROL_START_SHIFT               (24U)                                               /**< USBDCD0_CONTROL.START Position          */
#define USBDCD_CONTROL_START(x)                  (((uint32_t)(((uint32_t)(x))<<USBDCD_CONTROL_START_SHIFT))&USBDCD_CONTROL_START_MASK) /**< USBDCD0_CONTROL.START Field             */
#define USBDCD_CONTROL_SR_MASK                   (0x2000000U)                                        /**< USBDCD0_CONTROL.SR Mask                 */
#define USBDCD_CONTROL_SR_SHIFT                  (25U)                                               /**< USBDCD0_CONTROL.SR Position             */
#define USBDCD_CONTROL_SR(x)                     (((uint32_t)(((uint32_t)(x))<<USBDCD_CONTROL_SR_SHIFT))&USBDCD_CONTROL_SR_MASK) /**< USBDCD0_CONTROL.SR Field                */
/** @} */

/** @name CLOCK - Clock Register */ /** @{ */
#define USBDCD_CLOCK_CLOCK_UNIT_MASK             (0x1U)                                              /**< USBDCD0_CLOCK.CLOCK_UNIT Mask           */
#define USBDCD_CLOCK_CLOCK_UNIT_SHIFT            (0U)                                                /**< USBDCD0_CLOCK.CLOCK_UNIT Position       */
#define USBDCD_CLOCK_CLOCK_UNIT(x)               (((uint32_t)(((uint32_t)(x))<<USBDCD_CLOCK_CLOCK_UNIT_SHIFT))&USBDCD_CLOCK_CLOCK_UNIT_MASK) /**< USBDCD0_CLOCK.CLOCK_UNIT Field          */
#define USBDCD_CLOCK_CLOCK_SPEED_MASK            (0xFFCU)                                            /**< USBDCD0_CLOCK.CLOCK_SPEED Mask          */
#define USBDCD_CLOCK_CLOCK_SPEED_SHIFT           (2U)                                                /**< USBDCD0_CLOCK.CLOCK_SPEED Position      */
#define USBDCD_CLOCK_CLOCK_SPEED(x)              (((uint32_t)(((uint32_t)(x))<<USBDCD_CLOCK_CLOCK_SPEED_SHIFT))&USBDCD_CLOCK_CLOCK_SPEED_MASK) /**< USBDCD0_CLOCK.CLOCK_SPEED Field         */
/** @} */

/** @name STATUS - Status Register */ /** @{ */
#define USBDCD_STATUS_SEQ_RES_MASK               (0x30000U)                                          /**< USBDCD0_STATUS.SEQ_RES Mask             */
#define USBDCD_STATUS_SEQ_RES_SHIFT              (16U)                                               /**< USBDCD0_STATUS.SEQ_RES Position         */
#define USBDCD_STATUS_SEQ_RES(x)                 (((uint32_t)(((uint32_t)(x))<<USBDCD_STATUS_SEQ_RES_SHIFT))&USBDCD_STATUS_SEQ_RES_MASK) /**< USBDCD0_STATUS.SEQ_RES Field            */
#define USBDCD_STATUS_SEQ_STAT_MASK              (0xC0000U)                                          /**< USBDCD0_STATUS.SEQ_STAT Mask            */
#define USBDCD_STATUS_SEQ_STAT_SHIFT             (18U)                                               /**< USBDCD0_STATUS.SEQ_STAT Position        */
#define USBDCD_STATUS_SEQ_STAT(x)                (((uint32_t)(((uint32_t)(x))<<USBDCD_STATUS_SEQ_STAT_SHIFT))&USBDCD_STATUS_SEQ_STAT_MASK) /**< USBDCD0_STATUS.SEQ_STAT Field           */
#define USBDCD_STATUS_ERR_MASK                   (0x100000U)                                         /**< USBDCD0_STATUS.ERR Mask                 */
#define USBDCD_STATUS_ERR_SHIFT                  (20U)                                               /**< USBDCD0_STATUS.ERR Position             */
#define USBDCD_STATUS_ERR(x)                     (((uint32_t)(((uint32_t)(x))<<USBDCD_STATUS_ERR_SHIFT))&USBDCD_STATUS_ERR_MASK) /**< USBDCD0_STATUS.ERR Field                */
#define USBDCD_STATUS_TO_MASK                    (0x200000U)                                         /**< USBDCD0_STATUS.TO Mask                  */
#define USBDCD_STATUS_TO_SHIFT                   (21U)                                               /**< USBDCD0_STATUS.TO Position              */
#define USBDCD_STATUS_TO(x)                      (((uint32_t)(((uint32_t)(x))<<USBDCD_STATUS_TO_SHIFT))&USBDCD_STATUS_TO_MASK) /**< USBDCD0_STATUS.TO Field                 */
#define USBDCD_STATUS_ACTIVE_MASK                (0x400000U)                                         /**< USBDCD0_STATUS.ACTIVE Mask              */
#define USBDCD_STATUS_ACTIVE_SHIFT               (22U)                                               /**< USBDCD0_STATUS.ACTIVE Position          */
#define USBDCD_STATUS_ACTIVE(x)                  (((uint32_t)(((uint32_t)(x))<<USBDCD_STATUS_ACTIVE_SHIFT))&USBDCD_STATUS_ACTIVE_MASK) /**< USBDCD0_STATUS.ACTIVE Field             */
/** @} */

/** @name TIMER0 - TIMER0 Register */ /** @{ */
#define USBDCD_TIMER0_TUNITCON_MASK              (0xFFFU)                                            /**< USBDCD0_TIMER0.TUNITCON Mask            */
#define USBDCD_TIMER0_TUNITCON_SHIFT             (0U)                                                /**< USBDCD0_TIMER0.TUNITCON Position        */
#define USBDCD_TIMER0_TUNITCON(x)                (((uint32_t)(((uint32_t)(x))<<USBDCD_TIMER0_TUNITCON_SHIFT))&USBDCD_TIMER0_TUNITCON_MASK) /**< USBDCD0_TIMER0.TUNITCON Field           */
#define USBDCD_TIMER0_TSEQ_INIT_MASK             (0x3FF0000U)                                        /**< USBDCD0_TIMER0.TSEQ_INIT Mask           */
#define USBDCD_TIMER0_TSEQ_INIT_SHIFT            (16U)                                               /**< USBDCD0_TIMER0.TSEQ_INIT Position       */
#define USBDCD_TIMER0_TSEQ_INIT(x)               (((uint32_t)(((uint32_t)(x))<<USBDCD_TIMER0_TSEQ_INIT_SHIFT))&USBDCD_TIMER0_TSEQ_INIT_MASK) /**< USBDCD0_TIMER0.TSEQ_INIT Field          */
/** @} */

/** @name TIMER1 - Timing parameters for USBDCD */ /** @{ */
#define USBDCD_TIMER1_TVDPSRC_ON_MASK            (0x3FFU)                                            /**< USBDCD0_TIMER1.TVDPSRC_ON Mask          */
#define USBDCD_TIMER1_TVDPSRC_ON_SHIFT           (0U)                                                /**< USBDCD0_TIMER1.TVDPSRC_ON Position      */
#define USBDCD_TIMER1_TVDPSRC_ON(x)              (((uint32_t)(((uint32_t)(x))<<USBDCD_TIMER1_TVDPSRC_ON_SHIFT))&USBDCD_TIMER1_TVDPSRC_ON_MASK) /**< USBDCD0_TIMER1.TVDPSRC_ON Field         */
#define USBDCD_TIMER1_TDCD_DBNC_MASK             (0x3FF0000U)                                        /**< USBDCD0_TIMER1.TDCD_DBNC Mask           */
#define USBDCD_TIMER1_TDCD_DBNC_SHIFT            (16U)                                               /**< USBDCD0_TIMER1.TDCD_DBNC Position       */
#define USBDCD_TIMER1_TDCD_DBNC(x)               (((uint32_t)(((uint32_t)(x))<<USBDCD_TIMER1_TDCD_DBNC_SHIFT))&USBDCD_TIMER1_TDCD_DBNC_MASK) /**< USBDCD0_TIMER1.TDCD_DBNC Field          */
/** @} */

/** @name TIMER2 - Timing parameters for USBDCD */ /** @{ */
#define USBDCD_TIMER2_CHECK_DM_MASK              (0xFU)                                              /**< USBDCD0_TIMER2.CHECK_DM Mask            */
#define USBDCD_TIMER2_CHECK_DM_SHIFT             (0U)                                                /**< USBDCD0_TIMER2.CHECK_DM Position        */
#define USBDCD_TIMER2_CHECK_DM(x)                (((uint32_t)(((uint32_t)(x))<<USBDCD_TIMER2_CHECK_DM_SHIFT))&USBDCD_TIMER2_CHECK_DM_MASK) /**< USBDCD0_TIMER2.CHECK_DM Field           */
#define USBDCD_TIMER2_TVDPSRC_CON_MASK           (0x3FF0000U)                                        /**< USBDCD0_TIMER2.TVDPSRC_CON Mask         */
#define USBDCD_TIMER2_TVDPSRC_CON_SHIFT          (16U)                                               /**< USBDCD0_TIMER2.TVDPSRC_CON Position     */
#define USBDCD_TIMER2_TVDPSRC_CON(x)             (((uint32_t)(((uint32_t)(x))<<USBDCD_TIMER2_TVDPSRC_CON_SHIFT))&USBDCD_TIMER2_TVDPSRC_CON_MASK) /**< USBDCD0_TIMER2.TVDPSRC_CON Field        */
/** @} */

/** @} */ /* End group USBDCD_Register_Masks_GROUP */


/* USBDCD0 - Peripheral instance base addresses */
#define USBDCD0_BasePtr                0x40035000UL //!< Peripheral base address
#define USBDCD0                        ((USBDCD_Type *) USBDCD0_BasePtr) //!< Freescale base pointer
#define USBDCD0_BASE_PTR               (USBDCD0) //!< Freescale style base pointer
#define USBDCD0_IRQS { USBDCD0_IRQn,  }


/** @} */ /* End group USBDCD_Peripheral_access_layer_GROUP */


/** @brief C Struct for VREF */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup VREF_Peripheral_access_layer_GROUP VREF Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           VREF (file:VREF_C)                   ================ */
/* ================================================================================ */

/**
 * @brief Voltage Reference
 */
/**
 * @struct VREF_Type
 * @brief  C Struct allowing access to VREF registers
 */
typedef struct VREF_Type {
   __IO uint8_t   TRM;                          /**< 0000: Trim Register                                                */
   __IO uint8_t   SC;                           /**< 0001: Status and Control Register                                  */
} VREF_Type;


/** @brief Register Masks for VREF */

/* -------------------------------------------------------------------------------- */
/* -----------     'VREF' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup VREF_Register_Masks_GROUP VREF Register Masks */
/** @{ */

/** @name TRM - Trim Register */ /** @{ */
#define VREF_TRM_TRIM_MASK                       (0x3FU)                                             /**< VREF_TRM.TRIM Mask                      */
#define VREF_TRM_TRIM_SHIFT                      (0U)                                                /**< VREF_TRM.TRIM Position                  */
#define VREF_TRM_TRIM(x)                         (((uint8_t)(((uint8_t)(x))<<VREF_TRM_TRIM_SHIFT))&VREF_TRM_TRIM_MASK) /**< VREF_TRM.TRIM Field                     */
#define VREF_TRM_CHOPEN_MASK                     (0x40U)                                             /**< VREF_TRM.CHOPEN Mask                    */
#define VREF_TRM_CHOPEN_SHIFT                    (6U)                                                /**< VREF_TRM.CHOPEN Position                */
#define VREF_TRM_CHOPEN(x)                       (((uint8_t)(((uint8_t)(x))<<VREF_TRM_CHOPEN_SHIFT))&VREF_TRM_CHOPEN_MASK) /**< VREF_TRM.CHOPEN Field                   */
/** @} */

/** @name SC - Status and Control Register */ /** @{ */
#define VREF_SC_MODE_LV_MASK                     (0x3U)                                              /**< VREF_SC.MODE_LV Mask                    */
#define VREF_SC_MODE_LV_SHIFT                    (0U)                                                /**< VREF_SC.MODE_LV Position                */
#define VREF_SC_MODE_LV(x)                       (((uint8_t)(((uint8_t)(x))<<VREF_SC_MODE_LV_SHIFT))&VREF_SC_MODE_LV_MASK) /**< VREF_SC.MODE_LV Field                   */
#define VREF_SC_VREFST_MASK                      (0x4U)                                              /**< VREF_SC.VREFST Mask                     */
#define VREF_SC_VREFST_SHIFT                     (2U)                                                /**< VREF_SC.VREFST Position                 */
#define VREF_SC_VREFST(x)                        (((uint8_t)(((uint8_t)(x))<<VREF_SC_VREFST_SHIFT))&VREF_SC_VREFST_MASK) /**< VREF_SC.VREFST Field                    */
#define VREF_SC_ICOMPEN_MASK                     (0x20U)                                             /**< VREF_SC.ICOMPEN Mask                    */
#define VREF_SC_ICOMPEN_SHIFT                    (5U)                                                /**< VREF_SC.ICOMPEN Position                */
#define VREF_SC_ICOMPEN(x)                       (((uint8_t)(((uint8_t)(x))<<VREF_SC_ICOMPEN_SHIFT))&VREF_SC_ICOMPEN_MASK) /**< VREF_SC.ICOMPEN Field                   */
#define VREF_SC_REGEN_MASK                       (0x40U)                                             /**< VREF_SC.REGEN Mask                      */
#define VREF_SC_REGEN_SHIFT                      (6U)                                                /**< VREF_SC.REGEN Position                  */
#define VREF_SC_REGEN(x)                         (((uint8_t)(((uint8_t)(x))<<VREF_SC_REGEN_SHIFT))&VREF_SC_REGEN_MASK) /**< VREF_SC.REGEN Field                     */
#define VREF_SC_VREFEN_MASK                      (0x80U)                                             /**< VREF_SC.VREFEN Mask                     */
#define VREF_SC_VREFEN_SHIFT                     (7U)                                                /**< VREF_SC.VREFEN Position                 */
#define VREF_SC_VREFEN(x)                        (((uint8_t)(((uint8_t)(x))<<VREF_SC_VREFEN_SHIFT))&VREF_SC_VREFEN_MASK) /**< VREF_SC.VREFEN Field                    */
/** @} */

/** @} */ /* End group VREF_Register_Masks_GROUP */


/* VREF - Peripheral instance base addresses */
#define VREF_BasePtr                   0x40074000UL //!< Peripheral base address
#define VREF                           ((VREF_Type *) VREF_BasePtr) //!< Freescale base pointer
#define VREF_BASE_PTR                  (VREF) //!< Freescale style base pointer

/** @} */ /* End group VREF_Peripheral_access_layer_GROUP */


/** @brief C Struct for WDOG */
/** @ingroup Peripheral_access_layer_GROUP */
/** @addtogroup WDOG_Peripheral_access_layer_GROUP WDOG Peripheral Access Layer */
/** @{ */

/* ================================================================================ */
/* ================           WDOG (file:WDOG_MK)                  ================ */
/* ================================================================================ */

/**
 * @brief Watchdog Timer
 */
/**
 * @struct WDOG_Type
 * @brief  C Struct allowing access to WDOG registers
 */
typedef struct WDOG_Type {
   __IO uint16_t  STCTRLH;                      /**< 0000: Status and Control Register High                             */
   __IO uint16_t  STCTRLL;                      /**< 0002: Status and Control Register Low                              */
   __IO uint16_t  TOVALH;                       /**< 0004: Time-out Value Register High                                 */
   __IO uint16_t  TOVALL;                       /**< 0006: Time-out Value Register Low                                  */
   __IO uint16_t  WINH;                         /**< 0008: Window Register High                                         */
   __IO uint16_t  WINL;                         /**< 000A: Window Register Low                                          */
   __IO uint16_t  REFRESH;                      /**< 000C: Refresh Register                                             */
   __IO uint16_t  UNLOCK;                       /**< 000E: Unlock Register                                              */
   __IO uint16_t  TMROUTH;                      /**< 0010: Timer Output Register High                                   */
   __IO uint16_t  TMROUTL;                      /**< 0012: Timer Output Register Low                                    */
   __IO uint16_t  RSTCNT;                       /**< 0014: Reset Count Register                                         */
   __IO uint16_t  PRESC;                        /**< 0016: Prescaler Register                                           */
} WDOG_Type;


/** @brief Register Masks for WDOG */

/* -------------------------------------------------------------------------------- */
/* -----------     'WDOG' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/** @addtogroup WDOG_Register_Masks_GROUP WDOG Register Masks */
/** @{ */

/** @name STCTRLH - Status and Control Register High */ /** @{ */
#define WDOG_STCTRLH_WDOGEN_MASK                 (0x1U)                                              /**< WDOG_STCTRLH.WDOGEN Mask                */
#define WDOG_STCTRLH_WDOGEN_SHIFT                (0U)                                                /**< WDOG_STCTRLH.WDOGEN Position            */
#define WDOG_STCTRLH_WDOGEN(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_WDOGEN_SHIFT))&WDOG_STCTRLH_WDOGEN_MASK) /**< WDOG_STCTRLH.WDOGEN Field               */
#define WDOG_STCTRLH_CLKSRC_MASK                 (0x2U)                                              /**< WDOG_STCTRLH.CLKSRC Mask                */
#define WDOG_STCTRLH_CLKSRC_SHIFT                (1U)                                                /**< WDOG_STCTRLH.CLKSRC Position            */
#define WDOG_STCTRLH_CLKSRC(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_CLKSRC_SHIFT))&WDOG_STCTRLH_CLKSRC_MASK) /**< WDOG_STCTRLH.CLKSRC Field               */
#define WDOG_STCTRLH_IRQRSTEN_MASK               (0x4U)                                              /**< WDOG_STCTRLH.IRQRSTEN Mask              */
#define WDOG_STCTRLH_IRQRSTEN_SHIFT              (2U)                                                /**< WDOG_STCTRLH.IRQRSTEN Position          */
#define WDOG_STCTRLH_IRQRSTEN(x)                 (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_IRQRSTEN_SHIFT))&WDOG_STCTRLH_IRQRSTEN_MASK) /**< WDOG_STCTRLH.IRQRSTEN Field             */
#define WDOG_STCTRLH_WINEN_MASK                  (0x8U)                                              /**< WDOG_STCTRLH.WINEN Mask                 */
#define WDOG_STCTRLH_WINEN_SHIFT                 (3U)                                                /**< WDOG_STCTRLH.WINEN Position             */
#define WDOG_STCTRLH_WINEN(x)                    (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_WINEN_SHIFT))&WDOG_STCTRLH_WINEN_MASK) /**< WDOG_STCTRLH.WINEN Field                */
#define WDOG_STCTRLH_ALLOWUPDATE_MASK            (0x10U)                                             /**< WDOG_STCTRLH.ALLOWUPDATE Mask           */
#define WDOG_STCTRLH_ALLOWUPDATE_SHIFT           (4U)                                                /**< WDOG_STCTRLH.ALLOWUPDATE Position       */
#define WDOG_STCTRLH_ALLOWUPDATE(x)              (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_ALLOWUPDATE_SHIFT))&WDOG_STCTRLH_ALLOWUPDATE_MASK) /**< WDOG_STCTRLH.ALLOWUPDATE Field          */
#define WDOG_STCTRLH_DBGEN_MASK                  (0x20U)                                             /**< WDOG_STCTRLH.DBGEN Mask                 */
#define WDOG_STCTRLH_DBGEN_SHIFT                 (5U)                                                /**< WDOG_STCTRLH.DBGEN Position             */
#define WDOG_STCTRLH_DBGEN(x)                    (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_DBGEN_SHIFT))&WDOG_STCTRLH_DBGEN_MASK) /**< WDOG_STCTRLH.DBGEN Field                */
#define WDOG_STCTRLH_STOPEN_MASK                 (0x40U)                                             /**< WDOG_STCTRLH.STOPEN Mask                */
#define WDOG_STCTRLH_STOPEN_SHIFT                (6U)                                                /**< WDOG_STCTRLH.STOPEN Position            */
#define WDOG_STCTRLH_STOPEN(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_STOPEN_SHIFT))&WDOG_STCTRLH_STOPEN_MASK) /**< WDOG_STCTRLH.STOPEN Field               */
#define WDOG_STCTRLH_WAITEN_MASK                 (0x80U)                                             /**< WDOG_STCTRLH.WAITEN Mask                */
#define WDOG_STCTRLH_WAITEN_SHIFT                (7U)                                                /**< WDOG_STCTRLH.WAITEN Position            */
#define WDOG_STCTRLH_WAITEN(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_WAITEN_SHIFT))&WDOG_STCTRLH_WAITEN_MASK) /**< WDOG_STCTRLH.WAITEN Field               */
#define WDOG_STCTRLH_TESTWDOG_MASK               (0x400U)                                            /**< WDOG_STCTRLH.TESTWDOG Mask              */
#define WDOG_STCTRLH_TESTWDOG_SHIFT              (10U)                                               /**< WDOG_STCTRLH.TESTWDOG Position          */
#define WDOG_STCTRLH_TESTWDOG(x)                 (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_TESTWDOG_SHIFT))&WDOG_STCTRLH_TESTWDOG_MASK) /**< WDOG_STCTRLH.TESTWDOG Field             */
#define WDOG_STCTRLH_TESTSEL_MASK                (0x800U)                                            /**< WDOG_STCTRLH.TESTSEL Mask               */
#define WDOG_STCTRLH_TESTSEL_SHIFT               (11U)                                               /**< WDOG_STCTRLH.TESTSEL Position           */
#define WDOG_STCTRLH_TESTSEL(x)                  (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_TESTSEL_SHIFT))&WDOG_STCTRLH_TESTSEL_MASK) /**< WDOG_STCTRLH.TESTSEL Field              */
#define WDOG_STCTRLH_BYTESEL_MASK                (0x3000U)                                           /**< WDOG_STCTRLH.BYTESEL Mask               */
#define WDOG_STCTRLH_BYTESEL_SHIFT               (12U)                                               /**< WDOG_STCTRLH.BYTESEL Position           */
#define WDOG_STCTRLH_BYTESEL(x)                  (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_BYTESEL_SHIFT))&WDOG_STCTRLH_BYTESEL_MASK) /**< WDOG_STCTRLH.BYTESEL Field              */
#define WDOG_STCTRLH_DISTESTWDOG_MASK            (0x4000U)                                           /**< WDOG_STCTRLH.DISTESTWDOG Mask           */
#define WDOG_STCTRLH_DISTESTWDOG_SHIFT           (14U)                                               /**< WDOG_STCTRLH.DISTESTWDOG Position       */
#define WDOG_STCTRLH_DISTESTWDOG(x)              (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLH_DISTESTWDOG_SHIFT))&WDOG_STCTRLH_DISTESTWDOG_MASK) /**< WDOG_STCTRLH.DISTESTWDOG Field          */
/** @} */

/** @name STCTRLL - Status and Control Register Low */ /** @{ */
#define WDOG_STCTRLL_INTFLG_MASK                 (0x8000U)                                           /**< WDOG_STCTRLL.INTFLG Mask                */
#define WDOG_STCTRLL_INTFLG_SHIFT                (15U)                                               /**< WDOG_STCTRLL.INTFLG Position            */
#define WDOG_STCTRLL_INTFLG(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_STCTRLL_INTFLG_SHIFT))&WDOG_STCTRLL_INTFLG_MASK) /**< WDOG_STCTRLL.INTFLG Field               */
/** @} */

/** @name TOVALH - Time-out Value Register High */ /** @{ */
#define WDOG_TOVALH_TOVALHIGH_MASK               (0xFFFFU)                                           /**< WDOG_TOVALH.TOVALHIGH Mask              */
#define WDOG_TOVALH_TOVALHIGH_SHIFT              (0U)                                                /**< WDOG_TOVALH.TOVALHIGH Position          */
#define WDOG_TOVALH_TOVALHIGH(x)                 (((uint16_t)(((uint16_t)(x))<<WDOG_TOVALH_TOVALHIGH_SHIFT))&WDOG_TOVALH_TOVALHIGH_MASK) /**< WDOG_TOVALH.TOVALHIGH Field             */
/** @} */

/** @name TOVALL - Time-out Value Register Low */ /** @{ */
#define WDOG_TOVALL_TOVALLOW_MASK                (0xFFFFU)                                           /**< WDOG_TOVALL.TOVALLOW Mask               */
#define WDOG_TOVALL_TOVALLOW_SHIFT               (0U)                                                /**< WDOG_TOVALL.TOVALLOW Position           */
#define WDOG_TOVALL_TOVALLOW(x)                  (((uint16_t)(((uint16_t)(x))<<WDOG_TOVALL_TOVALLOW_SHIFT))&WDOG_TOVALL_TOVALLOW_MASK) /**< WDOG_TOVALL.TOVALLOW Field              */
/** @} */

/** @name WINH - Window Register High */ /** @{ */
#define WDOG_WINH_WINHIGH_MASK                   (0xFFFFU)                                           /**< WDOG_WINH.WINHIGH Mask                  */
#define WDOG_WINH_WINHIGH_SHIFT                  (0U)                                                /**< WDOG_WINH.WINHIGH Position              */
#define WDOG_WINH_WINHIGH(x)                     (((uint16_t)(((uint16_t)(x))<<WDOG_WINH_WINHIGH_SHIFT))&WDOG_WINH_WINHIGH_MASK) /**< WDOG_WINH.WINHIGH Field                 */
/** @} */

/** @name WINL - Window Register Low */ /** @{ */
#define WDOG_WINL_WINLOW_MASK                    (0xFFFFU)                                           /**< WDOG_WINL.WINLOW Mask                   */
#define WDOG_WINL_WINLOW_SHIFT                   (0U)                                                /**< WDOG_WINL.WINLOW Position               */
#define WDOG_WINL_WINLOW(x)                      (((uint16_t)(((uint16_t)(x))<<WDOG_WINL_WINLOW_SHIFT))&WDOG_WINL_WINLOW_MASK) /**< WDOG_WINL.WINLOW Field                  */
/** @} */

/** @name REFRESH - Refresh Register */ /** @{ */
#define WDOG_REFRESH_WDOGREFRESH_MASK            (0xFFFFU)                                           /**< WDOG_REFRESH.WDOGREFRESH Mask           */
#define WDOG_REFRESH_WDOGREFRESH_SHIFT           (0U)                                                /**< WDOG_REFRESH.WDOGREFRESH Position       */
#define WDOG_REFRESH_WDOGREFRESH(x)              (((uint16_t)(((uint16_t)(x))<<WDOG_REFRESH_WDOGREFRESH_SHIFT))&WDOG_REFRESH_WDOGREFRESH_MASK) /**< WDOG_REFRESH.WDOGREFRESH Field          */
/** @} */

/** @name UNLOCK - Unlock Register */ /** @{ */
#define WDOG_UNLOCK_WDOGUNLOCK_MASK              (0xFFFFU)                                           /**< WDOG_UNLOCK.WDOGUNLOCK Mask             */
#define WDOG_UNLOCK_WDOGUNLOCK_SHIFT             (0U)                                                /**< WDOG_UNLOCK.WDOGUNLOCK Position         */
#define WDOG_UNLOCK_WDOGUNLOCK(x)                (((uint16_t)(((uint16_t)(x))<<WDOG_UNLOCK_WDOGUNLOCK_SHIFT))&WDOG_UNLOCK_WDOGUNLOCK_MASK) /**< WDOG_UNLOCK.WDOGUNLOCK Field            */
/** @} */

/** @name TMROUTH - Timer Output Register High */ /** @{ */
#define WDOG_TMROUTH_TIMEROUTHIGH_MASK           (0xFFFFU)                                           /**< WDOG_TMROUTH.TIMEROUTHIGH Mask          */
#define WDOG_TMROUTH_TIMEROUTHIGH_SHIFT          (0U)                                                /**< WDOG_TMROUTH.TIMEROUTHIGH Position      */
#define WDOG_TMROUTH_TIMEROUTHIGH(x)             (((uint16_t)(((uint16_t)(x))<<WDOG_TMROUTH_TIMEROUTHIGH_SHIFT))&WDOG_TMROUTH_TIMEROUTHIGH_MASK) /**< WDOG_TMROUTH.TIMEROUTHIGH Field         */
/** @} */

/** @name TMROUTL - Timer Output Register Low */ /** @{ */
#define WDOG_TMROUTL_TIMEROUTLOW_MASK            (0xFFFFU)                                           /**< WDOG_TMROUTL.TIMEROUTLOW Mask           */
#define WDOG_TMROUTL_TIMEROUTLOW_SHIFT           (0U)                                                /**< WDOG_TMROUTL.TIMEROUTLOW Position       */
#define WDOG_TMROUTL_TIMEROUTLOW(x)              (((uint16_t)(((uint16_t)(x))<<WDOG_TMROUTL_TIMEROUTLOW_SHIFT))&WDOG_TMROUTL_TIMEROUTLOW_MASK) /**< WDOG_TMROUTL.TIMEROUTLOW Field          */
/** @} */

/** @name RSTCNT - Reset Count Register */ /** @{ */
#define WDOG_RSTCNT_RSTCNT_MASK                  (0xFFFFU)                                           /**< WDOG_RSTCNT.RSTCNT Mask                 */
#define WDOG_RSTCNT_RSTCNT_SHIFT                 (0U)                                                /**< WDOG_RSTCNT.RSTCNT Position             */
#define WDOG_RSTCNT_RSTCNT(x)                    (((uint16_t)(((uint16_t)(x))<<WDOG_RSTCNT_RSTCNT_SHIFT))&WDOG_RSTCNT_RSTCNT_MASK) /**< WDOG_RSTCNT.RSTCNT Field                */
/** @} */

/** @name PRESC - Prescaler Register */ /** @{ */
#define WDOG_PRESC_PRESCVAL_MASK                 (0x700U)                                            /**< WDOG_PRESC.PRESCVAL Mask                */
#define WDOG_PRESC_PRESCVAL_SHIFT                (8U)                                                /**< WDOG_PRESC.PRESCVAL Position            */
#define WDOG_PRESC_PRESCVAL(x)                   (((uint16_t)(((uint16_t)(x))<<WDOG_PRESC_PRESCVAL_SHIFT))&WDOG_PRESC_PRESCVAL_MASK) /**< WDOG_PRESC.PRESCVAL Field               */
/** @} */

/** @} */ /* End group WDOG_Register_Masks_GROUP */


/* WDOG - Peripheral instance base addresses */
#define WDOG_BasePtr                   0x40052000UL //!< Peripheral base address
#define WDOG                           ((WDOG_Type *) WDOG_BasePtr) //!< Freescale base pointer
#define WDOG_BASE_PTR                  (WDOG) //!< Freescale style base pointer
#define WDOG_IRQS { WDOG_IRQn,  }


/** @} */ /* End group WDOG_Peripheral_access_layer_GROUP */

/* --------------------  End of section using anonymous unions  ------------------- */
#if defined(__CC_ARM)
  #pragma pop
#elif defined(__ICCARM__)
  /* leave anonymous unions enabled */
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined(__TASKING__)
  #pragma warning restore
#else
  #warning Not supported compiler type
#endif

#ifdef __cplusplus
}
#endif


#endif  /* MCU_MK60D10 */

