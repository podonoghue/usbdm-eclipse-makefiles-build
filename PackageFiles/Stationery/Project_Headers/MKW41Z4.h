/****************************************************************************************************//**
 * @file     MKW41Z4.h
 *
 * @brief    CMSIS Cortex-M Peripheral Access Layer Header File for MKW41Z4.
 *           Equivalent: 
 *
 * @version  V1.6
 * @date     2021/08
 *
 *******************************************************************************************************/

#ifndef MCU_MKW41Z4
#define MCU_MKW41Z4

#include <stdint.h>
#ifdef __cplusplus
extern "C" {
#endif

/**
* @addtogroup Interrupt_vector_numbers_GROUP Interrupt vector numbers
* @brief Vector numbers required for NVIC functions
* @{
*/
/* -------------------------  Interrupt Number Definition  ------------------------ */

/**
 * Interrupt vector numbers
 */
typedef enum {
/* ------------------------  Processor Exceptions Numbers  ------------------------- */
  Reset_IRQn                    = -15,   /**<   1 Reset Vector, invoked on Power up and warm reset                                 */
  NonMaskableInt_IRQn           = -14,   /**<   2 Non maskable Interrupt, cannot be stopped or preempted                           */
  HardFault_IRQn                = -13,   /**<   3 Hard Fault, all classes of Fault                                                 */
  SVCall_IRQn                   =  -5,   /**<  11 System Service Call via SVC instruction                                          */
  PendSV_IRQn                   =  -2,   /**<  14 Pendable request for system service                                              */
  SysTick_IRQn                  =  -1,   /**<  15 System Tick Timer                                                                */
/* ----------------------   MKW41Z4 VectorTable                      ---------------------- */
  DMA0_IRQn                     =   0,   /**<  16 Enhanced direct memory access controller                                         */
  DMA1_IRQn                     =   1,   /**<  17 Enhanced direct memory access controller                                         */
  DMA2_IRQn                     =   2,   /**<  18 Enhanced direct memory access controller                                         */
  DMA3_IRQn                     =   3,   /**<  19 Enhanced direct memory access controller                                         */
  FTFA_IRQn                     =   5,   /**<  21 Flash Memory Interface                                                           */
  PMC_DCDC_IRQn                 =   6,   /**<  22 Power Management Controller, DC-DC converter                                     */
  LLWU_IRQn                     =   7,   /**<  23 Low leakage wakeup unit                                                          */
  I2C0_IRQn                     =   8,   /**<  24 Inter-Integrated Circuit                                                         */
  I2C1_IRQn                     =   9,   /**<  25 Inter-Integrated Circuit                                                         */
  SPI0_IRQn                     =  10,   /**<  26 Serial Peripheral Interface                                                      */
  TSI0_IRQn                     =  11,   /**<  27 Touch sense input                                                                */
  LPUART0_IRQn                  =  12,   /**<  28 Universal Asynchronous Receiver/Transmitter                                      */
  TRNG0_IRQn                    =  13,   /**<  29 Random Number Generator Accelerator                                              */
  CMT_IRQn                      =  14,   /**<  30 Carrier Modulator Transmitter                                                    */
  ADC0_IRQn                     =  15,   /**<  31 Analog-to-Digital Converter                                                      */
  CMP0_IRQn                     =  16,   /**<  32 High-Speed Comparator (CMP), Voltage Reference (VREF) Digital-to-Analog Converter (DAC), and Analog Mux */
  TPM0_IRQn                     =  17,   /**<  33 Timer/PWM Module                                                                 */
  TPM1_IRQn                     =  18,   /**<  34 Timer/PWM Module                                                                 */
  TPM2_IRQn                     =  19,   /**<  35 Timer/PWM Module                                                                 */
  RTC_Alarm_IRQn                =  20,   /**<  36 Secure Real Time Clock                                                           */
  RTC_Seconds_IRQn              =  21,   /**<  37 Secure Real Time Clock                                                           */
  PIT_IRQn                      =  22,   /**<  38 Periodic Interrupt Timer                                                         */
  LTC0_IRQn                     =  23,   /**<  39 LTC                                                                              */
  Radio_0_IRQn                  =  24,   /**<  40 Radio 0                                                                          */
  DAC0_IRQn                     =  25,   /**<  41 12-Bit Digital-to-Analog Converter                                               */
  Radio_1_IRQn                  =  26,   /**<  42 Radio 0                                                                          */
  MCG_IRQn                      =  27,   /**<  43 Multipurpose Clock Generator module                                              */
  LPTMR0_IRQn                   =  28,   /**<  44 Low Power Timer                                                                  */
  SPI1_IRQn                     =  29,   /**<  45 Serial Peripheral Interface                                                      */
  PORTA_IRQn                    =  30,   /**<  46 General Purpose Input/Output                                                     */
  PORTB_PORTC_IRQn              =  31,   /**<  47 General Purpose Input/Output                                                     */
} IRQn_Type;

/**
 * @} */ /* End group Interrupt_vector_numbers_GROUP 
 */
/**
* @addtogroup Interrupt_handler_prototypes_GROUP Interrupt handler prototypes
* @brief Prototypes for interrupt handlers
* @{
*/
/* -------------------------  Exception Handlers  ------------------------ */
extern void NMI_Handler(void);                       /**< Non maskable Interrupt, cannot be stopped or preempted                           */
extern void HardFault_Handler(void);                 /**< Hard Fault, all classes of Fault                                                 */
extern void SVC_Handler(void);                       /**< System Service Call via SVC instruction                                          */
extern void PendSV_Handler(void);                    /**< Pendable request for system service                                              */
extern void SysTick_Handler(void);                   /**< System Tick Timer                                                                */
extern void DMA0_IRQHandler(void);                   /**< Enhanced direct memory access controller                                         */
extern void DMA1_IRQHandler(void);                   /**< Enhanced direct memory access controller                                         */
extern void DMA2_IRQHandler(void);                   /**< Enhanced direct memory access controller                                         */
extern void DMA3_IRQHandler(void);                   /**< Enhanced direct memory access controller                                         */
extern void FTFA_IRQHandler(void);                   /**< Flash Memory Interface                                                           */
extern void PMC_DCDC_IRQHandler(void);               /**< Power Management Controller, DC-DC converter                                     */
extern void LLWU_IRQHandler(void);                   /**< Low leakage wakeup unit                                                          */
extern void I2C0_IRQHandler(void);                   /**< Inter-Integrated Circuit                                                         */
extern void I2C1_IRQHandler(void);                   /**< Inter-Integrated Circuit                                                         */
extern void SPI0_IRQHandler(void);                   /**< Serial Peripheral Interface                                                      */
extern void TSI0_IRQHandler(void);                   /**< Touch sense input                                                                */
extern void LPUART0_IRQHandler(void);                /**< Universal Asynchronous Receiver/Transmitter                                      */
extern void TRNG0_IRQHandler(void);                  /**< Random Number Generator Accelerator                                              */
extern void CMT_IRQHandler(void);                    /**< Carrier Modulator Transmitter                                                    */
extern void ADC0_IRQHandler(void);                   /**< Analog-to-Digital Converter                                                      */
extern void CMP0_IRQHandler(void);                   /**< High-Speed Comparator (CMP), Voltage Reference (VREF) Digital-to-Analog Converter (DAC), and Analog Mux */
extern void TPM0_IRQHandler(void);                   /**< Timer/PWM Module                                                                 */
extern void TPM1_IRQHandler(void);                   /**< Timer/PWM Module                                                                 */
extern void TPM2_IRQHandler(void);                   /**< Timer/PWM Module                                                                 */
extern void RTC_Alarm_IRQHandler(void);              /**< Secure Real Time Clock                                                           */
extern void RTC_Seconds_IRQHandler(void);            /**< Secure Real Time Clock                                                           */
extern void PIT_IRQHandler(void);                    /**< Periodic Interrupt Timer                                                         */
extern void LTC0_IRQHandler(void);                   /**< LTC                                                                              */
extern void Radio_0_IRQHandler(void);                /**< Radio 0                                                                          */
extern void DAC0_IRQHandler(void);                   /**< 12-Bit Digital-to-Analog Converter                                               */
extern void Radio_1_IRQHandler(void);                /**< Radio 0                                                                          */
extern void MCG_IRQHandler(void);                    /**< Multipurpose Clock Generator module                                              */
extern void LPTMR0_IRQHandler(void);                 /**< Low Power Timer                                                                  */
extern void SPI1_IRQHandler(void);                   /**< Serial Peripheral Interface                                                      */
extern void PORTA_IRQHandler(void);                  /**< General Purpose Input/Output                                                     */
extern void PORTB_PORTC_IRQHandler(void);            /**< General Purpose Input/Output                                                     */

/**
 * @} */ /* End group Interrupt_handler_prototypes_GROUP 
 */
/* ================================================================================ */
/* ================      Processor and Core Peripheral Section     ================ */
/* ================================================================================ */

/**
* @addtogroup Cortex_Core_Configuration_GROUP Cortex Core Configuration
* @brief Configuration of the cm4 Processor and Core Peripherals
* @{
*/
#define __CM0PLUS_REV             0x0000     /**< CPU Revision                                        */
#define __MPU_PRESENT             0          /**< Whether MPU is present                              */
#define __NVIC_PRIO_BITS          2          /**< Number of implemented bits in NVIC PRIO register    */
#define __Vendor_SysTickConfig    0          /**< Whether Vendor implemented SYSTICK timer is present */
#define __FPU_PRESENT             0          /**< Whether FPU is present                              */
#define __VTOR_PRESENT            1          /**< Whether VTOR register is present                    */

/**
 * @} */ /* End group Cortex_Core_Configuration_GROUP 
 */
#include "core_cm0plus.h"       /* Processor and core peripherals     */
#include "system.h"             /* Device specific configuration file */

#ifndef __IO
#define __IO volatile 
#endif

#ifndef __I
#define __I volatile const
#endif

#ifndef __O
#define __O volatile
#endif


/* ================================================================================ */
/* ================       Device Specific Peripheral Section       ================ */
/* ================================================================================ */



/* -------------------  Start of section using anonymous unions  ------------------ */
#if defined(__CC_ARM)
  #pragma push
  #pragma anon_unions
#elif defined(__ICCARM__)
  #pragma language=extended
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__TMS470__)
/* anonymous unions are enabled by default */
#elif defined(__TASKING__)
  #pragma warning 586
#else
  #warning Not supported compiler type
#endif
/**
* @addtogroup Peripheral_access_layer_GROUP Device Peripheral Access Layer
* @brief C structs allowing access to peripheral registers
* @{
*/
/**
* @addtogroup ADC_Peripheral_access_layer_GROUP ADC Peripheral Access Layer
* @brief C Struct for ADC
* @{
*/

/* ================================================================================ */
/* ================           ADC0 (file:ADC0_DIFF_A)              ================ */
/* ================================================================================ */

/**
 * @brief Analog-to-Digital Converter
 */
#define ADC_SC1_COUNT        2          /**< Number of ADC channels                             */
/**
* @addtogroup ADC_structs_GROUP ADC struct
* @brief Struct for ADC
* @{
*/
typedef struct ADC_Type {
   __IO uint32_t  SC1[ADC_SC1_COUNT];           /**< 0000: Status and Control Register 1                                */
   __IO uint32_t  CFG1;                         /**< 0008: Configuration Register 1                                     */
   __IO uint32_t  CFG2;                         /**< 000C: Configuration Register 2                                     */
   __I  uint32_t  R[ADC_SC1_COUNT];             /**< 0010: Data Result Register                                         */
   __IO uint32_t  CV1;                          /**< 0018: Compare Value                                                */
   __IO uint32_t  CV2;                          /**< 001C: Compare Value                                                */
   __IO uint32_t  SC2;                          /**< 0020: Status and Control Register 2                                */
   __IO uint32_t  SC3;                          /**< 0024: Status and Control Register 3                                */
   __IO uint32_t  OFS;                          /**< 0028: Offset Correction Register                                   */
   __IO uint32_t  PG;                           /**< 002C: Plus-Side Gain Register                                      */
   __IO uint32_t  MG;                           /**< 0030: Minus-Side Gain Register                                     */
   __IO uint32_t  CLPD;                         /**< 0034: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLPS;                         /**< 0038: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLP4;                         /**< 003C: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLP3;                         /**< 0040: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLP2;                         /**< 0044: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLP1;                         /**< 0048: Plus-Side General Calibration Value                          */
   __IO uint32_t  CLP0;                         /**< 004C: Plus-Side General Calibration Value                          */
        uint8_t   RESERVED_0[4];                /**< 0050: 0x4 bytes                                                    */
   __IO uint32_t  CLMD;                         /**< 0054: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLMS;                         /**< 0058: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLM4;                         /**< 005C: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLM3;                         /**< 0060: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLM2;                         /**< 0064: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLM1;                         /**< 0068: Minus-Side General Calibration Value                         */
   __IO uint32_t  CLM0;                         /**< 006C: Minus-Side General Calibration Value                         */
} ADC_Type;

/**
 * @} */ /* End group ADC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'ADC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup ADC_Register_Masks_GROUP ADC Register Masks
* @brief Register Masks for ADC
* @{
*/
/* ------- SC1 Bit Fields                           ------ */
#define ADC_SC1_ADCH_MASK                        (0x1FU)                                             /*!< ADC0_SC1.ADCH Mask                      */
#define ADC_SC1_ADCH_SHIFT                       (0U)                                                /*!< ADC0_SC1.ADCH Position                  */
#define ADC_SC1_ADCH(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1FUL)          /*!< ADC0_SC1.ADCH Field                     */
#define ADC_SC1_DIFF_MASK                        (0x20U)                                             /*!< ADC0_SC1.DIFF Mask                      */
#define ADC_SC1_DIFF_SHIFT                       (5U)                                                /*!< ADC0_SC1.DIFF Position                  */
#define ADC_SC1_DIFF(x)                          (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< ADC0_SC1.DIFF Field                     */
#define ADC_SC1_AIEN_MASK                        (0x40U)                                             /*!< ADC0_SC1.AIEN Mask                      */
#define ADC_SC1_AIEN_SHIFT                       (6U)                                                /*!< ADC0_SC1.AIEN Position                  */
#define ADC_SC1_AIEN(x)                          (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< ADC0_SC1.AIEN Field                     */
#define ADC_SC1_COCO_MASK                        (0x80U)                                             /*!< ADC0_SC1.COCO Mask                      */
#define ADC_SC1_COCO_SHIFT                       (7U)                                                /*!< ADC0_SC1.COCO Position                  */
#define ADC_SC1_COCO(x)                          (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ADC0_SC1.COCO Field                     */
/* ------- CFG1 Bit Fields                          ------ */
#define ADC_CFG1_ADICLK_MASK                     (0x3U)                                              /*!< ADC0_CFG1.ADICLK Mask                   */
#define ADC_CFG1_ADICLK_SHIFT                    (0U)                                                /*!< ADC0_CFG1.ADICLK Position               */
#define ADC_CFG1_ADICLK(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< ADC0_CFG1.ADICLK Field                  */
#define ADC_CFG1_MODE_MASK                       (0xCU)                                              /*!< ADC0_CFG1.MODE Mask                     */
#define ADC_CFG1_MODE_SHIFT                      (2U)                                                /*!< ADC0_CFG1.MODE Position                 */
#define ADC_CFG1_MODE(x)                         (((uint32_t)(((uint32_t)(x))<<2U))&0xCUL)           /*!< ADC0_CFG1.MODE Field                    */
#define ADC_CFG1_ADLSMP_MASK                     (0x10U)                                             /*!< ADC0_CFG1.ADLSMP Mask                   */
#define ADC_CFG1_ADLSMP_SHIFT                    (4U)                                                /*!< ADC0_CFG1.ADLSMP Position               */
#define ADC_CFG1_ADLSMP(x)                       (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< ADC0_CFG1.ADLSMP Field                  */
#define ADC_CFG1_ADIV_MASK                       (0x60U)                                             /*!< ADC0_CFG1.ADIV Mask                     */
#define ADC_CFG1_ADIV_SHIFT                      (5U)                                                /*!< ADC0_CFG1.ADIV Position                 */
#define ADC_CFG1_ADIV(x)                         (((uint32_t)(((uint32_t)(x))<<5U))&0x60UL)          /*!< ADC0_CFG1.ADIV Field                    */
#define ADC_CFG1_ADLPC_MASK                      (0x80U)                                             /*!< ADC0_CFG1.ADLPC Mask                    */
#define ADC_CFG1_ADLPC_SHIFT                     (7U)                                                /*!< ADC0_CFG1.ADLPC Position                */
#define ADC_CFG1_ADLPC(x)                        (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ADC0_CFG1.ADLPC Field                   */
/* ------- CFG2 Bit Fields                          ------ */
#define ADC_CFG2_ADLSTS_MASK                     (0x3U)                                              /*!< ADC0_CFG2.ADLSTS Mask                   */
#define ADC_CFG2_ADLSTS_SHIFT                    (0U)                                                /*!< ADC0_CFG2.ADLSTS Position               */
#define ADC_CFG2_ADLSTS(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< ADC0_CFG2.ADLSTS Field                  */
#define ADC_CFG2_ADHSC_MASK                      (0x4U)                                              /*!< ADC0_CFG2.ADHSC Mask                    */
#define ADC_CFG2_ADHSC_SHIFT                     (2U)                                                /*!< ADC0_CFG2.ADHSC Position                */
#define ADC_CFG2_ADHSC(x)                        (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ADC0_CFG2.ADHSC Field                   */
#define ADC_CFG2_ADACKEN_MASK                    (0x8U)                                              /*!< ADC0_CFG2.ADACKEN Mask                  */
#define ADC_CFG2_ADACKEN_SHIFT                   (3U)                                                /*!< ADC0_CFG2.ADACKEN Position              */
#define ADC_CFG2_ADACKEN(x)                      (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< ADC0_CFG2.ADACKEN Field                 */
#define ADC_CFG2_MUXSEL_MASK                     (0x10U)                                             /*!< ADC0_CFG2.MUXSEL Mask                   */
#define ADC_CFG2_MUXSEL_SHIFT                    (4U)                                                /*!< ADC0_CFG2.MUXSEL Position               */
#define ADC_CFG2_MUXSEL(x)                       (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< ADC0_CFG2.MUXSEL Field                  */
/* ------- R Bit Fields                             ------ */
#define ADC_R_D_MASK                             (0xFFFFU)                                           /*!< ADC0_R.D Mask                           */
#define ADC_R_D_SHIFT                            (0U)                                                /*!< ADC0_R.D Position                       */
#define ADC_R_D(x)                               (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< ADC0_R.D Field                          */
/* ------- CV Bit Fields                            ------ */
#define ADC_CV_CV_MASK                           (0xFFFFU)                                           /*!< ADC0_CV.CV Mask                         */
#define ADC_CV_CV_SHIFT                          (0U)                                                /*!< ADC0_CV.CV Position                     */
#define ADC_CV_CV(x)                             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< ADC0_CV.CV Field                        */
/* ------- SC2 Bit Fields                           ------ */
#define ADC_SC2_REFSEL_MASK                      (0x3U)                                              /*!< ADC0_SC2.REFSEL Mask                    */
#define ADC_SC2_REFSEL_SHIFT                     (0U)                                                /*!< ADC0_SC2.REFSEL Position                */
#define ADC_SC2_REFSEL(x)                        (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< ADC0_SC2.REFSEL Field                   */
#define ADC_SC2_DMAEN_MASK                       (0x4U)                                              /*!< ADC0_SC2.DMAEN Mask                     */
#define ADC_SC2_DMAEN_SHIFT                      (2U)                                                /*!< ADC0_SC2.DMAEN Position                 */
#define ADC_SC2_DMAEN(x)                         (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ADC0_SC2.DMAEN Field                    */
#define ADC_SC2_ACREN_MASK                       (0x8U)                                              /*!< ADC0_SC2.ACREN Mask                     */
#define ADC_SC2_ACREN_SHIFT                      (3U)                                                /*!< ADC0_SC2.ACREN Position                 */
#define ADC_SC2_ACREN(x)                         (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< ADC0_SC2.ACREN Field                    */
#define ADC_SC2_ACFGT_MASK                       (0x10U)                                             /*!< ADC0_SC2.ACFGT Mask                     */
#define ADC_SC2_ACFGT_SHIFT                      (4U)                                                /*!< ADC0_SC2.ACFGT Position                 */
#define ADC_SC2_ACFGT(x)                         (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< ADC0_SC2.ACFGT Field                    */
#define ADC_SC2_ACFE_MASK                        (0x20U)                                             /*!< ADC0_SC2.ACFE Mask                      */
#define ADC_SC2_ACFE_SHIFT                       (5U)                                                /*!< ADC0_SC2.ACFE Position                  */
#define ADC_SC2_ACFE(x)                          (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< ADC0_SC2.ACFE Field                     */
#define ADC_SC2_ADTRG_MASK                       (0x40U)                                             /*!< ADC0_SC2.ADTRG Mask                     */
#define ADC_SC2_ADTRG_SHIFT                      (6U)                                                /*!< ADC0_SC2.ADTRG Position                 */
#define ADC_SC2_ADTRG(x)                         (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< ADC0_SC2.ADTRG Field                    */
#define ADC_SC2_ADACT_MASK                       (0x80U)                                             /*!< ADC0_SC2.ADACT Mask                     */
#define ADC_SC2_ADACT_SHIFT                      (7U)                                                /*!< ADC0_SC2.ADACT Position                 */
#define ADC_SC2_ADACT(x)                         (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ADC0_SC2.ADACT Field                    */
/* ------- SC3 Bit Fields                           ------ */
#define ADC_SC3_AVGS_MASK                        (0x3U)                                              /*!< ADC0_SC3.AVGS Mask                      */
#define ADC_SC3_AVGS_SHIFT                       (0U)                                                /*!< ADC0_SC3.AVGS Position                  */
#define ADC_SC3_AVGS(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< ADC0_SC3.AVGS Field                     */
#define ADC_SC3_AVGE_MASK                        (0x4U)                                              /*!< ADC0_SC3.AVGE Mask                      */
#define ADC_SC3_AVGE_SHIFT                       (2U)                                                /*!< ADC0_SC3.AVGE Position                  */
#define ADC_SC3_AVGE(x)                          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ADC0_SC3.AVGE Field                     */
#define ADC_SC3_ADCO_MASK                        (0x8U)                                              /*!< ADC0_SC3.ADCO Mask                      */
#define ADC_SC3_ADCO_SHIFT                       (3U)                                                /*!< ADC0_SC3.ADCO Position                  */
#define ADC_SC3_ADCO(x)                          (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< ADC0_SC3.ADCO Field                     */
#define ADC_SC3_CALF_MASK                        (0x40U)                                             /*!< ADC0_SC3.CALF Mask                      */
#define ADC_SC3_CALF_SHIFT                       (6U)                                                /*!< ADC0_SC3.CALF Position                  */
#define ADC_SC3_CALF(x)                          (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< ADC0_SC3.CALF Field                     */
#define ADC_SC3_CAL_MASK                         (0x80U)                                             /*!< ADC0_SC3.CAL Mask                       */
#define ADC_SC3_CAL_SHIFT                        (7U)                                                /*!< ADC0_SC3.CAL Position                   */
#define ADC_SC3_CAL(x)                           (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ADC0_SC3.CAL Field                      */
/* ------- OFS Bit Fields                           ------ */
#define ADC_OFS_OFS_MASK                         (0xFFFFU)                                           /*!< ADC0_OFS.OFS Mask                       */
#define ADC_OFS_OFS_SHIFT                        (0U)                                                /*!< ADC0_OFS.OFS Position                   */
#define ADC_OFS_OFS(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< ADC0_OFS.OFS Field                      */
/* ------- PG Bit Fields                            ------ */
#define ADC_PG_PG_MASK                           (0xFFFFU)                                           /*!< ADC0_PG.PG Mask                         */
#define ADC_PG_PG_SHIFT                          (0U)                                                /*!< ADC0_PG.PG Position                     */
#define ADC_PG_PG(x)                             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< ADC0_PG.PG Field                        */
/* ------- MG Bit Fields                            ------ */
#define ADC_MG_MG_MASK                           (0xFFFFU)                                           /*!< ADC0_MG.MG Mask                         */
#define ADC_MG_MG_SHIFT                          (0U)                                                /*!< ADC0_MG.MG Position                     */
#define ADC_MG_MG(x)                             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< ADC0_MG.MG Field                        */
/* ------- CLPD Bit Fields                          ------ */
#define ADC_CLPD_CLPD_MASK                       (0x3FU)                                             /*!< ADC0_CLPD.CLPD Mask                     */
#define ADC_CLPD_CLPD_SHIFT                      (0U)                                                /*!< ADC0_CLPD.CLPD Position                 */
#define ADC_CLPD_CLPD(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< ADC0_CLPD.CLPD Field                    */
/* ------- CLPS Bit Fields                          ------ */
#define ADC_CLPS_CLPS_MASK                       (0x3FU)                                             /*!< ADC0_CLPS.CLPS Mask                     */
#define ADC_CLPS_CLPS_SHIFT                      (0U)                                                /*!< ADC0_CLPS.CLPS Position                 */
#define ADC_CLPS_CLPS(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< ADC0_CLPS.CLPS Field                    */
/* ------- CLP4 Bit Fields                          ------ */
#define ADC_CLP4_CLP4_MASK                       (0x3FFU)                                            /*!< ADC0_CLP4.CLP4 Mask                     */
#define ADC_CLP4_CLP4_SHIFT                      (0U)                                                /*!< ADC0_CLP4.CLP4 Position                 */
#define ADC_CLP4_CLP4(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)         /*!< ADC0_CLP4.CLP4 Field                    */
/* ------- CLP3 Bit Fields                          ------ */
#define ADC_CLP3_CLP3_MASK                       (0x1FFU)                                            /*!< ADC0_CLP3.CLP3 Mask                     */
#define ADC_CLP3_CLP3_SHIFT                      (0U)                                                /*!< ADC0_CLP3.CLP3 Position                 */
#define ADC_CLP3_CLP3(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFUL)         /*!< ADC0_CLP3.CLP3 Field                    */
/* ------- CLP2 Bit Fields                          ------ */
#define ADC_CLP2_CLP2_MASK                       (0xFFU)                                             /*!< ADC0_CLP2.CLP2 Mask                     */
#define ADC_CLP2_CLP2_SHIFT                      (0U)                                                /*!< ADC0_CLP2.CLP2 Position                 */
#define ADC_CLP2_CLP2(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< ADC0_CLP2.CLP2 Field                    */
/* ------- CLP1 Bit Fields                          ------ */
#define ADC_CLP1_CLP1_MASK                       (0x7FU)                                             /*!< ADC0_CLP1.CLP1 Mask                     */
#define ADC_CLP1_CLP1_SHIFT                      (0U)                                                /*!< ADC0_CLP1.CLP1 Position                 */
#define ADC_CLP1_CLP1(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< ADC0_CLP1.CLP1 Field                    */
/* ------- CLP0 Bit Fields                          ------ */
#define ADC_CLP0_CLP0_MASK                       (0x3FU)                                             /*!< ADC0_CLP0.CLP0 Mask                     */
#define ADC_CLP0_CLP0_SHIFT                      (0U)                                                /*!< ADC0_CLP0.CLP0 Position                 */
#define ADC_CLP0_CLP0(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< ADC0_CLP0.CLP0 Field                    */
/* ------- CLMD Bit Fields                          ------ */
#define ADC_CLMD_CLMD_MASK                       (0x3FU)                                             /*!< ADC0_CLMD.CLMD Mask                     */
#define ADC_CLMD_CLMD_SHIFT                      (0U)                                                /*!< ADC0_CLMD.CLMD Position                 */
#define ADC_CLMD_CLMD(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< ADC0_CLMD.CLMD Field                    */
/* ------- CLMS Bit Fields                          ------ */
#define ADC_CLMS_CLMS_MASK                       (0x3FU)                                             /*!< ADC0_CLMS.CLMS Mask                     */
#define ADC_CLMS_CLMS_SHIFT                      (0U)                                                /*!< ADC0_CLMS.CLMS Position                 */
#define ADC_CLMS_CLMS(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< ADC0_CLMS.CLMS Field                    */
/* ------- CLM4 Bit Fields                          ------ */
#define ADC_CLM4_CLM4_MASK                       (0x3FFU)                                            /*!< ADC0_CLM4.CLM4 Mask                     */
#define ADC_CLM4_CLM4_SHIFT                      (0U)                                                /*!< ADC0_CLM4.CLM4 Position                 */
#define ADC_CLM4_CLM4(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)         /*!< ADC0_CLM4.CLM4 Field                    */
/* ------- CLM3 Bit Fields                          ------ */
#define ADC_CLM3_CLM3_MASK                       (0x1FFU)                                            /*!< ADC0_CLM3.CLM3 Mask                     */
#define ADC_CLM3_CLM3_SHIFT                      (0U)                                                /*!< ADC0_CLM3.CLM3 Position                 */
#define ADC_CLM3_CLM3(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFUL)         /*!< ADC0_CLM3.CLM3 Field                    */
/* ------- CLM2 Bit Fields                          ------ */
#define ADC_CLM2_CLM2_MASK                       (0xFFU)                                             /*!< ADC0_CLM2.CLM2 Mask                     */
#define ADC_CLM2_CLM2_SHIFT                      (0U)                                                /*!< ADC0_CLM2.CLM2 Position                 */
#define ADC_CLM2_CLM2(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< ADC0_CLM2.CLM2 Field                    */
/* ------- CLM1 Bit Fields                          ------ */
#define ADC_CLM1_CLM1_MASK                       (0x7FU)                                             /*!< ADC0_CLM1.CLM1 Mask                     */
#define ADC_CLM1_CLM1_SHIFT                      (0U)                                                /*!< ADC0_CLM1.CLM1 Position                 */
#define ADC_CLM1_CLM1(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< ADC0_CLM1.CLM1 Field                    */
/* ------- CLM0 Bit Fields                          ------ */
#define ADC_CLM0_CLM0_MASK                       (0x3FU)                                             /*!< ADC0_CLM0.CLM0 Mask                     */
#define ADC_CLM0_CLM0_SHIFT                      (0U)                                                /*!< ADC0_CLM0.CLM0 Position                 */
#define ADC_CLM0_CLM0(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< ADC0_CLM0.CLM0 Field                    */
/**
 * @} */ /* End group ADC_Register_Masks_GROUP 
 */

/* ADC0 - Peripheral instance base addresses */
#define ADC0_BasePtr                   0x4003B000UL //!< Peripheral base address
#define ADC0                           ((ADC_Type *) ADC0_BasePtr) //!< Freescale base pointer
#define ADC0_BASE_PTR                  (ADC0) //!< Freescale style base pointer
#define ADC0_IRQS { ADC0_IRQn,  }

/**
 * @} */ /* End group ADC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup ANT_Peripheral_access_layer_GROUP ANT Peripheral Access Layer
* @brief C Struct for ANT
* @{
*/

/* ================================================================================ */
/* ================           ANT (file:ANT_MKW41Z4)               ================ */
/* ================================================================================ */

/**
 * @brief ANT
 */
/**
* @addtogroup ANT_structs_GROUP ANT struct
* @brief Struct for ANT
* @{
*/
typedef struct ANT_Type {
   __IO uint32_t  IRQ_CTRL;                     /**< 0000: IRQ CONTROL                                                  */
   __IO uint32_t  EVENT_TMR;                    /**< 0004: EVENT TIMER                                                  */
   __IO uint32_t  T1_CMP;                       /**< 0008: T1 COMPARE                                                   */
   __IO uint32_t  T2_CMP;                       /**< 000C: T2 COMPARE                                                   */
   __I  uint32_t  TIMESTAMP;                    /**< 0010: TIMESTAMP                                                    */
   __IO uint32_t  XCVR_CTRL;                    /**< 0014: TRANSCEIVER CONTROL                                          */
   __I  uint32_t  XCVR_STS;                     /**< 0018: TRANSCEIVER STATUS                                           */
   __IO uint32_t  XCVR_CFG;                     /**< 001C: TRANSCEIVER CONFIGURATION                                    */
   __IO uint32_t  CHANNEL_NUM;                  /**< 0020: CHANNEL NUMBER                                               */
   __IO uint32_t  TX_POWER;                     /**< 0024: TRANSMIT POWER                                               */
   __IO uint32_t  NTW_ADR_CTRL;                 /**< 0028: NETWORK ADDRESS CONTROL                                      */
   __IO uint32_t  NTW_ADR_[4];                  /**< 002C: NETWORK ADDRESS                                              */
   __IO uint32_t  RX_WATERMARK;                 /**< 003C: RX WATERMARK                                                 */
   __O  uint32_t  DSM_CTRL;                     /**< 0040: DSM CONTROL                                                  */
   __I  uint32_t  PART_ID;                      /**< 0044: PART ID                                                      */
        uint8_t   RESERVED_0[184];              /**< 0048: 0xB8 bytes                                                   */
   __IO uint16_t  PACKET_BUFFER_[64];           /**< 0100: PACKET BUFFER                                                */
} ANT_Type;

/**
 * @} */ /* End group ANT_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'ANT' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup ANT_Register_Masks_GROUP ANT Register Masks
* @brief Register Masks for ANT
* @{
*/
/* ------- IRQ_CTRL Bit Fields                      ------ */
#define ANT_IRQ_CTRL_SEQ_END_IRQ_MASK            (0x1U)                                              /*!< ANT_IRQ_CTRL.SEQ_END_IRQ Mask           */
#define ANT_IRQ_CTRL_SEQ_END_IRQ_SHIFT           (0U)                                                /*!< ANT_IRQ_CTRL.SEQ_END_IRQ Position       */
#define ANT_IRQ_CTRL_SEQ_END_IRQ(x)              (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ANT_IRQ_CTRL.SEQ_END_IRQ Field          */
#define ANT_IRQ_CTRL_TX_IRQ_MASK                 (0x2U)                                              /*!< ANT_IRQ_CTRL.TX_IRQ Mask                */
#define ANT_IRQ_CTRL_TX_IRQ_SHIFT                (1U)                                                /*!< ANT_IRQ_CTRL.TX_IRQ Position            */
#define ANT_IRQ_CTRL_TX_IRQ(x)                   (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< ANT_IRQ_CTRL.TX_IRQ Field               */
#define ANT_IRQ_CTRL_RX_IRQ_MASK                 (0x4U)                                              /*!< ANT_IRQ_CTRL.RX_IRQ Mask                */
#define ANT_IRQ_CTRL_RX_IRQ_SHIFT                (2U)                                                /*!< ANT_IRQ_CTRL.RX_IRQ Position            */
#define ANT_IRQ_CTRL_RX_IRQ(x)                   (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ANT_IRQ_CTRL.RX_IRQ Field               */
#define ANT_IRQ_CTRL_NTW_ADR_IRQ_MASK            (0x8U)                                              /*!< ANT_IRQ_CTRL.NTW_ADR_IRQ Mask           */
#define ANT_IRQ_CTRL_NTW_ADR_IRQ_SHIFT           (3U)                                                /*!< ANT_IRQ_CTRL.NTW_ADR_IRQ Position       */
#define ANT_IRQ_CTRL_NTW_ADR_IRQ(x)              (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< ANT_IRQ_CTRL.NTW_ADR_IRQ Field          */
#define ANT_IRQ_CTRL_T1_IRQ_MASK                 (0x10U)                                             /*!< ANT_IRQ_CTRL.T1_IRQ Mask                */
#define ANT_IRQ_CTRL_T1_IRQ_SHIFT                (4U)                                                /*!< ANT_IRQ_CTRL.T1_IRQ Position            */
#define ANT_IRQ_CTRL_T1_IRQ(x)                   (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< ANT_IRQ_CTRL.T1_IRQ Field               */
#define ANT_IRQ_CTRL_T2_IRQ_MASK                 (0x20U)                                             /*!< ANT_IRQ_CTRL.T2_IRQ Mask                */
#define ANT_IRQ_CTRL_T2_IRQ_SHIFT                (5U)                                                /*!< ANT_IRQ_CTRL.T2_IRQ Position            */
#define ANT_IRQ_CTRL_T2_IRQ(x)                   (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< ANT_IRQ_CTRL.T2_IRQ Field               */
#define ANT_IRQ_CTRL_PLL_UNLOCK_IRQ_MASK         (0x40U)                                             /*!< ANT_IRQ_CTRL.PLL_UNLOCK_IRQ Mask        */
#define ANT_IRQ_CTRL_PLL_UNLOCK_IRQ_SHIFT        (6U)                                                /*!< ANT_IRQ_CTRL.PLL_UNLOCK_IRQ Position    */
#define ANT_IRQ_CTRL_PLL_UNLOCK_IRQ(x)           (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< ANT_IRQ_CTRL.PLL_UNLOCK_IRQ Field       */
#define ANT_IRQ_CTRL_WAKE_IRQ_MASK               (0x80U)                                             /*!< ANT_IRQ_CTRL.WAKE_IRQ Mask              */
#define ANT_IRQ_CTRL_WAKE_IRQ_SHIFT              (7U)                                                /*!< ANT_IRQ_CTRL.WAKE_IRQ Position          */
#define ANT_IRQ_CTRL_WAKE_IRQ(x)                 (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ANT_IRQ_CTRL.WAKE_IRQ Field             */
#define ANT_IRQ_CTRL_RX_WATERMARK_IRQ_MASK       (0x100U)                                            /*!< ANT_IRQ_CTRL.RX_WATERMARK_IRQ Mask      */
#define ANT_IRQ_CTRL_RX_WATERMARK_IRQ_SHIFT      (8U)                                                /*!< ANT_IRQ_CTRL.RX_WATERMARK_IRQ Position  */
#define ANT_IRQ_CTRL_RX_WATERMARK_IRQ(x)         (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< ANT_IRQ_CTRL.RX_WATERMARK_IRQ Field     */
#define ANT_IRQ_CTRL_TSM_IRQ_MASK                (0x200U)                                            /*!< ANT_IRQ_CTRL.TSM_IRQ Mask               */
#define ANT_IRQ_CTRL_TSM_IRQ_SHIFT               (9U)                                                /*!< ANT_IRQ_CTRL.TSM_IRQ Position           */
#define ANT_IRQ_CTRL_TSM_IRQ(x)                  (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< ANT_IRQ_CTRL.TSM_IRQ Field              */
#define ANT_IRQ_CTRL_SEQ_END_IRQ_EN_MASK         (0x10000U)                                          /*!< ANT_IRQ_CTRL.SEQ_END_IRQ_EN Mask        */
#define ANT_IRQ_CTRL_SEQ_END_IRQ_EN_SHIFT        (16U)                                               /*!< ANT_IRQ_CTRL.SEQ_END_IRQ_EN Position    */
#define ANT_IRQ_CTRL_SEQ_END_IRQ_EN(x)           (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< ANT_IRQ_CTRL.SEQ_END_IRQ_EN Field       */
#define ANT_IRQ_CTRL_TX_IRQ_EN_MASK              (0x20000U)                                          /*!< ANT_IRQ_CTRL.TX_IRQ_EN Mask             */
#define ANT_IRQ_CTRL_TX_IRQ_EN_SHIFT             (17U)                                               /*!< ANT_IRQ_CTRL.TX_IRQ_EN Position         */
#define ANT_IRQ_CTRL_TX_IRQ_EN(x)                (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< ANT_IRQ_CTRL.TX_IRQ_EN Field            */
#define ANT_IRQ_CTRL_RX_IRQ_EN_MASK              (0x40000U)                                          /*!< ANT_IRQ_CTRL.RX_IRQ_EN Mask             */
#define ANT_IRQ_CTRL_RX_IRQ_EN_SHIFT             (18U)                                               /*!< ANT_IRQ_CTRL.RX_IRQ_EN Position         */
#define ANT_IRQ_CTRL_RX_IRQ_EN(x)                (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< ANT_IRQ_CTRL.RX_IRQ_EN Field            */
#define ANT_IRQ_CTRL_NTW_ADR_IRQ_EN_MASK         (0x80000U)                                          /*!< ANT_IRQ_CTRL.NTW_ADR_IRQ_EN Mask        */
#define ANT_IRQ_CTRL_NTW_ADR_IRQ_EN_SHIFT        (19U)                                               /*!< ANT_IRQ_CTRL.NTW_ADR_IRQ_EN Position    */
#define ANT_IRQ_CTRL_NTW_ADR_IRQ_EN(x)           (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< ANT_IRQ_CTRL.NTW_ADR_IRQ_EN Field       */
#define ANT_IRQ_CTRL_T1_IRQ_EN_MASK              (0x100000U)                                         /*!< ANT_IRQ_CTRL.T1_IRQ_EN Mask             */
#define ANT_IRQ_CTRL_T1_IRQ_EN_SHIFT             (20U)                                               /*!< ANT_IRQ_CTRL.T1_IRQ_EN Position         */
#define ANT_IRQ_CTRL_T1_IRQ_EN(x)                (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< ANT_IRQ_CTRL.T1_IRQ_EN Field            */
#define ANT_IRQ_CTRL_T2_IRQ_EN_MASK              (0x200000U)                                         /*!< ANT_IRQ_CTRL.T2_IRQ_EN Mask             */
#define ANT_IRQ_CTRL_T2_IRQ_EN_SHIFT             (21U)                                               /*!< ANT_IRQ_CTRL.T2_IRQ_EN Position         */
#define ANT_IRQ_CTRL_T2_IRQ_EN(x)                (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< ANT_IRQ_CTRL.T2_IRQ_EN Field            */
#define ANT_IRQ_CTRL_PLL_UNLOCK_IRQ_EN_MASK      (0x400000U)                                         /*!< ANT_IRQ_CTRL.PLL_UNLOCK_IRQ_EN Mask     */
#define ANT_IRQ_CTRL_PLL_UNLOCK_IRQ_EN_SHIFT     (22U)                                               /*!< ANT_IRQ_CTRL.PLL_UNLOCK_IRQ_EN Position */
#define ANT_IRQ_CTRL_PLL_UNLOCK_IRQ_EN(x)        (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< ANT_IRQ_CTRL.PLL_UNLOCK_IRQ_EN Field    */
#define ANT_IRQ_CTRL_WAKE_IRQ_EN_MASK            (0x800000U)                                         /*!< ANT_IRQ_CTRL.WAKE_IRQ_EN Mask           */
#define ANT_IRQ_CTRL_WAKE_IRQ_EN_SHIFT           (23U)                                               /*!< ANT_IRQ_CTRL.WAKE_IRQ_EN Position       */
#define ANT_IRQ_CTRL_WAKE_IRQ_EN(x)              (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< ANT_IRQ_CTRL.WAKE_IRQ_EN Field          */
#define ANT_IRQ_CTRL_RX_WATERMARK_IRQ_EN_MASK    (0x1000000U)                                        /*!< ANT_IRQ_CTRL.RX_WATERMARK_IRQ_EN Mask   */
#define ANT_IRQ_CTRL_RX_WATERMARK_IRQ_EN_SHIFT   (24U)                                               /*!< ANT_IRQ_CTRL.RX_WATERMARK_IRQ_EN Position*/
#define ANT_IRQ_CTRL_RX_WATERMARK_IRQ_EN(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< ANT_IRQ_CTRL.RX_WATERMARK_IRQ_EN Field  */
#define ANT_IRQ_CTRL_TSM_IRQ_EN_MASK             (0x2000000U)                                        /*!< ANT_IRQ_CTRL.TSM_IRQ_EN Mask            */
#define ANT_IRQ_CTRL_TSM_IRQ_EN_SHIFT            (25U)                                               /*!< ANT_IRQ_CTRL.TSM_IRQ_EN Position        */
#define ANT_IRQ_CTRL_TSM_IRQ_EN(x)               (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< ANT_IRQ_CTRL.TSM_IRQ_EN Field           */
#define ANT_IRQ_CTRL_ANT_IRQ_EN_MASK             (0x4000000U)                                        /*!< ANT_IRQ_CTRL.ANT_IRQ_EN Mask            */
#define ANT_IRQ_CTRL_ANT_IRQ_EN_SHIFT            (26U)                                               /*!< ANT_IRQ_CTRL.ANT_IRQ_EN Position        */
#define ANT_IRQ_CTRL_ANT_IRQ_EN(x)               (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< ANT_IRQ_CTRL.ANT_IRQ_EN Field           */
#define ANT_IRQ_CTRL_CRC_IGNORE_MASK             (0x8000000U)                                        /*!< ANT_IRQ_CTRL.CRC_IGNORE Mask            */
#define ANT_IRQ_CTRL_CRC_IGNORE_SHIFT            (27U)                                               /*!< ANT_IRQ_CTRL.CRC_IGNORE Position        */
#define ANT_IRQ_CTRL_CRC_IGNORE(x)               (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< ANT_IRQ_CTRL.CRC_IGNORE Field           */
#define ANT_IRQ_CTRL_CRC_VALID_MASK              (0x80000000U)                                       /*!< ANT_IRQ_CTRL.CRC_VALID Mask             */
#define ANT_IRQ_CTRL_CRC_VALID_SHIFT             (31U)                                               /*!< ANT_IRQ_CTRL.CRC_VALID Position         */
#define ANT_IRQ_CTRL_CRC_VALID(x)                (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< ANT_IRQ_CTRL.CRC_VALID Field            */
/* ------- EVENT_TMR Bit Fields                     ------ */
#define ANT_EVENT_TMR_EVENT_TMR_MASK             (0xFFFFFFU)                                         /*!< ANT_EVENT_TMR.EVENT_TMR Mask            */
#define ANT_EVENT_TMR_EVENT_TMR_SHIFT            (0U)                                                /*!< ANT_EVENT_TMR.EVENT_TMR Position        */
#define ANT_EVENT_TMR_EVENT_TMR(x)               (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< ANT_EVENT_TMR.EVENT_TMR Field           */
#define ANT_EVENT_TMR_EVENT_TMR_LD_MASK          (0x1000000U)                                        /*!< ANT_EVENT_TMR.EVENT_TMR_LD Mask         */
#define ANT_EVENT_TMR_EVENT_TMR_LD_SHIFT         (24U)                                               /*!< ANT_EVENT_TMR.EVENT_TMR_LD Position     */
#define ANT_EVENT_TMR_EVENT_TMR_LD(x)            (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< ANT_EVENT_TMR.EVENT_TMR_LD Field        */
#define ANT_EVENT_TMR_EVENT_TMR_ADD_MASK         (0x2000000U)                                        /*!< ANT_EVENT_TMR.EVENT_TMR_ADD Mask        */
#define ANT_EVENT_TMR_EVENT_TMR_ADD_SHIFT        (25U)                                               /*!< ANT_EVENT_TMR.EVENT_TMR_ADD Position    */
#define ANT_EVENT_TMR_EVENT_TMR_ADD(x)           (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< ANT_EVENT_TMR.EVENT_TMR_ADD Field       */
/* ------- T1_CMP Bit Fields                        ------ */
#define ANT_T1_CMP_T1_CMP_MASK                   (0xFFFFFFU)                                         /*!< ANT_T1_CMP.T1_CMP Mask                  */
#define ANT_T1_CMP_T1_CMP_SHIFT                  (0U)                                                /*!< ANT_T1_CMP.T1_CMP Position              */
#define ANT_T1_CMP_T1_CMP(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< ANT_T1_CMP.T1_CMP Field                 */
#define ANT_T1_CMP_T1_CMP_EN_MASK                (0x1000000U)                                        /*!< ANT_T1_CMP.T1_CMP_EN Mask               */
#define ANT_T1_CMP_T1_CMP_EN_SHIFT               (24U)                                               /*!< ANT_T1_CMP.T1_CMP_EN Position           */
#define ANT_T1_CMP_T1_CMP_EN(x)                  (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< ANT_T1_CMP.T1_CMP_EN Field              */
/* ------- T2_CMP Bit Fields                        ------ */
#define ANT_T2_CMP_T2_CMP_MASK                   (0xFFFFFFU)                                         /*!< ANT_T2_CMP.T2_CMP Mask                  */
#define ANT_T2_CMP_T2_CMP_SHIFT                  (0U)                                                /*!< ANT_T2_CMP.T2_CMP Position              */
#define ANT_T2_CMP_T2_CMP(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< ANT_T2_CMP.T2_CMP Field                 */
#define ANT_T2_CMP_T2_CMP_EN_MASK                (0x1000000U)                                        /*!< ANT_T2_CMP.T2_CMP_EN Mask               */
#define ANT_T2_CMP_T2_CMP_EN_SHIFT               (24U)                                               /*!< ANT_T2_CMP.T2_CMP_EN Position           */
#define ANT_T2_CMP_T2_CMP_EN(x)                  (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< ANT_T2_CMP.T2_CMP_EN Field              */
/* ------- TIMESTAMP Bit Fields                     ------ */
#define ANT_TIMESTAMP_TIMESTAMP_MASK             (0xFFFFFFU)                                         /*!< ANT_TIMESTAMP.TIMESTAMP Mask            */
#define ANT_TIMESTAMP_TIMESTAMP_SHIFT            (0U)                                                /*!< ANT_TIMESTAMP.TIMESTAMP Position        */
#define ANT_TIMESTAMP_TIMESTAMP(x)               (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< ANT_TIMESTAMP.TIMESTAMP Field           */
/* ------- XCVR_CTRL Bit Fields                     ------ */
#define ANT_XCVR_CTRL_SEQCMD_MASK                (0xFU)                                              /*!< ANT_XCVR_CTRL.SEQCMD Mask               */
#define ANT_XCVR_CTRL_SEQCMD_SHIFT               (0U)                                                /*!< ANT_XCVR_CTRL.SEQCMD Position           */
#define ANT_XCVR_CTRL_SEQCMD(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< ANT_XCVR_CTRL.SEQCMD Field              */
#define ANT_XCVR_CTRL_TX_PKT_LENGTH_MASK         (0x3F00U)                                           /*!< ANT_XCVR_CTRL.TX_PKT_LENGTH Mask        */
#define ANT_XCVR_CTRL_TX_PKT_LENGTH_SHIFT        (8U)                                                /*!< ANT_XCVR_CTRL.TX_PKT_LENGTH Position    */
#define ANT_XCVR_CTRL_TX_PKT_LENGTH(x)           (((uint32_t)(((uint32_t)(x))<<8U))&0x3F00UL)        /*!< ANT_XCVR_CTRL.TX_PKT_LENGTH Field       */
#define ANT_XCVR_CTRL_RX_PKT_LENGTH_MASK         (0x3F0000U)                                         /*!< ANT_XCVR_CTRL.RX_PKT_LENGTH Mask        */
#define ANT_XCVR_CTRL_RX_PKT_LENGTH_SHIFT        (16U)                                               /*!< ANT_XCVR_CTRL.RX_PKT_LENGTH Position    */
#define ANT_XCVR_CTRL_RX_PKT_LENGTH(x)           (((uint32_t)(((uint32_t)(x))<<16U))&0x3F0000UL)     /*!< ANT_XCVR_CTRL.RX_PKT_LENGTH Field       */
#define ANT_XCVR_CTRL_CMDDEC_CS_MASK             (0x7000000U)                                        /*!< ANT_XCVR_CTRL.CMDDEC_CS Mask            */
#define ANT_XCVR_CTRL_CMDDEC_CS_SHIFT            (24U)                                               /*!< ANT_XCVR_CTRL.CMDDEC_CS Position        */
#define ANT_XCVR_CTRL_CMDDEC_CS(x)               (((uint32_t)(((uint32_t)(x))<<24U))&0x7000000UL)    /*!< ANT_XCVR_CTRL.CMDDEC_CS Field           */
#define ANT_XCVR_CTRL_XCVR_BUSY_MASK             (0x80000000U)                                       /*!< ANT_XCVR_CTRL.XCVR_BUSY Mask            */
#define ANT_XCVR_CTRL_XCVR_BUSY_SHIFT            (31U)                                               /*!< ANT_XCVR_CTRL.XCVR_BUSY Position        */
#define ANT_XCVR_CTRL_XCVR_BUSY(x)               (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< ANT_XCVR_CTRL.XCVR_BUSY Field           */
/* ------- XCVR_STS Bit Fields                      ------ */
#define ANT_XCVR_STS_TX_START_T1_PEND_MASK       (0x1U)                                              /*!< ANT_XCVR_STS.TX_START_T1_PEND Mask      */
#define ANT_XCVR_STS_TX_START_T1_PEND_SHIFT      (0U)                                                /*!< ANT_XCVR_STS.TX_START_T1_PEND Position  */
#define ANT_XCVR_STS_TX_START_T1_PEND(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ANT_XCVR_STS.TX_START_T1_PEND Field     */
#define ANT_XCVR_STS_TX_START_T2_PEND_MASK       (0x2U)                                              /*!< ANT_XCVR_STS.TX_START_T2_PEND Mask      */
#define ANT_XCVR_STS_TX_START_T2_PEND_SHIFT      (1U)                                                /*!< ANT_XCVR_STS.TX_START_T2_PEND Position  */
#define ANT_XCVR_STS_TX_START_T2_PEND(x)         (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< ANT_XCVR_STS.TX_START_T2_PEND Field     */
#define ANT_XCVR_STS_TX_IN_WARMUP_MASK           (0x4U)                                              /*!< ANT_XCVR_STS.TX_IN_WARMUP Mask          */
#define ANT_XCVR_STS_TX_IN_WARMUP_SHIFT          (2U)                                                /*!< ANT_XCVR_STS.TX_IN_WARMUP Position      */
#define ANT_XCVR_STS_TX_IN_WARMUP(x)             (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ANT_XCVR_STS.TX_IN_WARMUP Field         */
#define ANT_XCVR_STS_TX_IN_PROGRESS_MASK         (0x8U)                                              /*!< ANT_XCVR_STS.TX_IN_PROGRESS Mask        */
#define ANT_XCVR_STS_TX_IN_PROGRESS_SHIFT        (3U)                                                /*!< ANT_XCVR_STS.TX_IN_PROGRESS Position    */
#define ANT_XCVR_STS_TX_IN_PROGRESS(x)           (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< ANT_XCVR_STS.TX_IN_PROGRESS Field       */
#define ANT_XCVR_STS_TX_IN_WARMDN_MASK           (0x10U)                                             /*!< ANT_XCVR_STS.TX_IN_WARMDN Mask          */
#define ANT_XCVR_STS_TX_IN_WARMDN_SHIFT          (4U)                                                /*!< ANT_XCVR_STS.TX_IN_WARMDN Position      */
#define ANT_XCVR_STS_TX_IN_WARMDN(x)             (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< ANT_XCVR_STS.TX_IN_WARMDN Field         */
#define ANT_XCVR_STS_RX_START_T1_PEND_MASK       (0x20U)                                             /*!< ANT_XCVR_STS.RX_START_T1_PEND Mask      */
#define ANT_XCVR_STS_RX_START_T1_PEND_SHIFT      (5U)                                                /*!< ANT_XCVR_STS.RX_START_T1_PEND Position  */
#define ANT_XCVR_STS_RX_START_T1_PEND(x)         (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< ANT_XCVR_STS.RX_START_T1_PEND Field     */
#define ANT_XCVR_STS_RX_START_T2_PEND_MASK       (0x40U)                                             /*!< ANT_XCVR_STS.RX_START_T2_PEND Mask      */
#define ANT_XCVR_STS_RX_START_T2_PEND_SHIFT      (6U)                                                /*!< ANT_XCVR_STS.RX_START_T2_PEND Position  */
#define ANT_XCVR_STS_RX_START_T2_PEND(x)         (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< ANT_XCVR_STS.RX_START_T2_PEND Field     */
#define ANT_XCVR_STS_RX_STOP_T1_PEND_MASK        (0x80U)                                             /*!< ANT_XCVR_STS.RX_STOP_T1_PEND Mask       */
#define ANT_XCVR_STS_RX_STOP_T1_PEND_SHIFT       (7U)                                                /*!< ANT_XCVR_STS.RX_STOP_T1_PEND Position   */
#define ANT_XCVR_STS_RX_STOP_T1_PEND(x)          (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ANT_XCVR_STS.RX_STOP_T1_PEND Field      */
#define ANT_XCVR_STS_RX_STOP_T2_PEND_MASK        (0x100U)                                            /*!< ANT_XCVR_STS.RX_STOP_T2_PEND Mask       */
#define ANT_XCVR_STS_RX_STOP_T2_PEND_SHIFT       (8U)                                                /*!< ANT_XCVR_STS.RX_STOP_T2_PEND Position   */
#define ANT_XCVR_STS_RX_STOP_T2_PEND(x)          (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< ANT_XCVR_STS.RX_STOP_T2_PEND Field      */
#define ANT_XCVR_STS_RX_IN_WARMUP_MASK           (0x200U)                                            /*!< ANT_XCVR_STS.RX_IN_WARMUP Mask          */
#define ANT_XCVR_STS_RX_IN_WARMUP_SHIFT          (9U)                                                /*!< ANT_XCVR_STS.RX_IN_WARMUP Position      */
#define ANT_XCVR_STS_RX_IN_WARMUP(x)             (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< ANT_XCVR_STS.RX_IN_WARMUP Field         */
#define ANT_XCVR_STS_RX_IN_SEARCH_MASK           (0x400U)                                            /*!< ANT_XCVR_STS.RX_IN_SEARCH Mask          */
#define ANT_XCVR_STS_RX_IN_SEARCH_SHIFT          (10U)                                               /*!< ANT_XCVR_STS.RX_IN_SEARCH Position      */
#define ANT_XCVR_STS_RX_IN_SEARCH(x)             (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< ANT_XCVR_STS.RX_IN_SEARCH Field         */
#define ANT_XCVR_STS_RX_IN_PROGRESS_MASK         (0x800U)                                            /*!< ANT_XCVR_STS.RX_IN_PROGRESS Mask        */
#define ANT_XCVR_STS_RX_IN_PROGRESS_SHIFT        (11U)                                               /*!< ANT_XCVR_STS.RX_IN_PROGRESS Position    */
#define ANT_XCVR_STS_RX_IN_PROGRESS(x)           (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< ANT_XCVR_STS.RX_IN_PROGRESS Field       */
#define ANT_XCVR_STS_RX_IN_WARMDN_MASK           (0x1000U)                                           /*!< ANT_XCVR_STS.RX_IN_WARMDN Mask          */
#define ANT_XCVR_STS_RX_IN_WARMDN_SHIFT          (12U)                                               /*!< ANT_XCVR_STS.RX_IN_WARMDN Position      */
#define ANT_XCVR_STS_RX_IN_WARMDN(x)             (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< ANT_XCVR_STS.RX_IN_WARMDN Field         */
#define ANT_XCVR_STS_CRC_VALID_MASK              (0x8000U)                                           /*!< ANT_XCVR_STS.CRC_VALID Mask             */
#define ANT_XCVR_STS_CRC_VALID_SHIFT             (15U)                                               /*!< ANT_XCVR_STS.CRC_VALID Position         */
#define ANT_XCVR_STS_CRC_VALID(x)                (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< ANT_XCVR_STS.CRC_VALID Field            */
#define ANT_XCVR_STS_RSSI_MASK                   (0xFF0000U)                                         /*!< ANT_XCVR_STS.RSSI Mask                  */
#define ANT_XCVR_STS_RSSI_SHIFT                  (16U)                                               /*!< ANT_XCVR_STS.RSSI Position              */
#define ANT_XCVR_STS_RSSI(x)                     (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< ANT_XCVR_STS.RSSI Field                 */
/* ------- XCVR_CFG Bit Fields                      ------ */
#define ANT_XCVR_CFG_TX_WHITEN_DIS_MASK          (0x1U)                                              /*!< ANT_XCVR_CFG.TX_WHITEN_DIS Mask         */
#define ANT_XCVR_CFG_TX_WHITEN_DIS_SHIFT         (0U)                                                /*!< ANT_XCVR_CFG.TX_WHITEN_DIS Position     */
#define ANT_XCVR_CFG_TX_WHITEN_DIS(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ANT_XCVR_CFG.TX_WHITEN_DIS Field        */
#define ANT_XCVR_CFG_RX_DEWHITEN_DIS_MASK        (0x2U)                                              /*!< ANT_XCVR_CFG.RX_DEWHITEN_DIS Mask       */
#define ANT_XCVR_CFG_RX_DEWHITEN_DIS_SHIFT       (1U)                                                /*!< ANT_XCVR_CFG.RX_DEWHITEN_DIS Position   */
#define ANT_XCVR_CFG_RX_DEWHITEN_DIS(x)          (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< ANT_XCVR_CFG.RX_DEWHITEN_DIS Field      */
#define ANT_XCVR_CFG_SW_CRC_EN_MASK              (0x4U)                                              /*!< ANT_XCVR_CFG.SW_CRC_EN Mask             */
#define ANT_XCVR_CFG_SW_CRC_EN_SHIFT             (2U)                                                /*!< ANT_XCVR_CFG.SW_CRC_EN Position         */
#define ANT_XCVR_CFG_SW_CRC_EN(x)                (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ANT_XCVR_CFG.SW_CRC_EN Field            */
#define ANT_XCVR_CFG_PREAMBLE_SZ_MASK            (0x30U)                                             /*!< ANT_XCVR_CFG.PREAMBLE_SZ Mask           */
#define ANT_XCVR_CFG_PREAMBLE_SZ_SHIFT           (4U)                                                /*!< ANT_XCVR_CFG.PREAMBLE_SZ Position       */
#define ANT_XCVR_CFG_PREAMBLE_SZ(x)              (((uint32_t)(((uint32_t)(x))<<4U))&0x30UL)          /*!< ANT_XCVR_CFG.PREAMBLE_SZ Field          */
#define ANT_XCVR_CFG_TX_WARMUP_MASK              (0xFF00U)                                           /*!< ANT_XCVR_CFG.TX_WARMUP Mask             */
#define ANT_XCVR_CFG_TX_WARMUP_SHIFT             (8U)                                                /*!< ANT_XCVR_CFG.TX_WARMUP Position         */
#define ANT_XCVR_CFG_TX_WARMUP(x)                (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< ANT_XCVR_CFG.TX_WARMUP Field            */
#define ANT_XCVR_CFG_RX_WARMUP_MASK              (0xFF0000U)                                         /*!< ANT_XCVR_CFG.RX_WARMUP Mask             */
#define ANT_XCVR_CFG_RX_WARMUP_SHIFT             (16U)                                               /*!< ANT_XCVR_CFG.RX_WARMUP Position         */
#define ANT_XCVR_CFG_RX_WARMUP(x)                (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< ANT_XCVR_CFG.RX_WARMUP Field            */
/* ------- CHANNEL_NUM Bit Fields                   ------ */
#define ANT_CHANNEL_NUM_CHANNEL_NUM_MASK         (0x7FU)                                             /*!< ANT_CHANNEL_NUM.CHANNEL_NUM Mask        */
#define ANT_CHANNEL_NUM_CHANNEL_NUM_SHIFT        (0U)                                                /*!< ANT_CHANNEL_NUM.CHANNEL_NUM Position    */
#define ANT_CHANNEL_NUM_CHANNEL_NUM(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< ANT_CHANNEL_NUM.CHANNEL_NUM Field       */
/* ------- TX_POWER Bit Fields                      ------ */
#define ANT_TX_POWER_TX_POWER_MASK               (0x3FU)                                             /*!< ANT_TX_POWER.TX_POWER Mask              */
#define ANT_TX_POWER_TX_POWER_SHIFT              (0U)                                                /*!< ANT_TX_POWER.TX_POWER Position          */
#define ANT_TX_POWER_TX_POWER(x)                 (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< ANT_TX_POWER.TX_POWER Field             */
/* ------- NTW_ADR_CTRL Bit Fields                  ------ */
#define ANT_NTW_ADR_CTRL_NTW_ADR_EN_MASK         (0xFU)                                              /*!< ANT_NTW_ADR_CTRL.NTW_ADR_EN Mask        */
#define ANT_NTW_ADR_CTRL_NTW_ADR_EN_SHIFT        (0U)                                                /*!< ANT_NTW_ADR_CTRL.NTW_ADR_EN Position    */
#define ANT_NTW_ADR_CTRL_NTW_ADR_EN(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< ANT_NTW_ADR_CTRL.NTW_ADR_EN Field       */
#define ANT_NTW_ADR_CTRL_NTW_ADR_MCH_MASK        (0xF0U)                                             /*!< ANT_NTW_ADR_CTRL.NTW_ADR_MCH Mask       */
#define ANT_NTW_ADR_CTRL_NTW_ADR_MCH_SHIFT       (4U)                                                /*!< ANT_NTW_ADR_CTRL.NTW_ADR_MCH Position   */
#define ANT_NTW_ADR_CTRL_NTW_ADR_MCH(x)          (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)          /*!< ANT_NTW_ADR_CTRL.NTW_ADR_MCH Field      */
#define ANT_NTW_ADR_CTRL_NTW_ADR0_SZ_MASK        (0x300U)                                            /*!< ANT_NTW_ADR_CTRL.NTW_ADR0_SZ Mask       */
#define ANT_NTW_ADR_CTRL_NTW_ADR0_SZ_SHIFT       (8U)                                                /*!< ANT_NTW_ADR_CTRL.NTW_ADR0_SZ Position   */
#define ANT_NTW_ADR_CTRL_NTW_ADR0_SZ(x)          (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)         /*!< ANT_NTW_ADR_CTRL.NTW_ADR0_SZ Field      */
#define ANT_NTW_ADR_CTRL_NTW_ADR1_SZ_MASK        (0xC00U)                                            /*!< ANT_NTW_ADR_CTRL.NTW_ADR1_SZ Mask       */
#define ANT_NTW_ADR_CTRL_NTW_ADR1_SZ_SHIFT       (10U)                                               /*!< ANT_NTW_ADR_CTRL.NTW_ADR1_SZ Position   */
#define ANT_NTW_ADR_CTRL_NTW_ADR1_SZ(x)          (((uint32_t)(((uint32_t)(x))<<10U))&0xC00UL)        /*!< ANT_NTW_ADR_CTRL.NTW_ADR1_SZ Field      */
#define ANT_NTW_ADR_CTRL_NTW_ADR2_SZ_MASK        (0x3000U)                                           /*!< ANT_NTW_ADR_CTRL.NTW_ADR2_SZ Mask       */
#define ANT_NTW_ADR_CTRL_NTW_ADR2_SZ_SHIFT       (12U)                                               /*!< ANT_NTW_ADR_CTRL.NTW_ADR2_SZ Position   */
#define ANT_NTW_ADR_CTRL_NTW_ADR2_SZ(x)          (((uint32_t)(((uint32_t)(x))<<12U))&0x3000UL)       /*!< ANT_NTW_ADR_CTRL.NTW_ADR2_SZ Field      */
#define ANT_NTW_ADR_CTRL_NTW_ADR3_SZ_MASK        (0xC000U)                                           /*!< ANT_NTW_ADR_CTRL.NTW_ADR3_SZ Mask       */
#define ANT_NTW_ADR_CTRL_NTW_ADR3_SZ_SHIFT       (14U)                                               /*!< ANT_NTW_ADR_CTRL.NTW_ADR3_SZ Position   */
#define ANT_NTW_ADR_CTRL_NTW_ADR3_SZ(x)          (((uint32_t)(((uint32_t)(x))<<14U))&0xC000UL)       /*!< ANT_NTW_ADR_CTRL.NTW_ADR3_SZ Field      */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR0_MASK       (0x70000U)                                          /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR0 Mask      */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR0_SHIFT      (16U)                                               /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR0 Position  */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR0(x)         (((uint32_t)(((uint32_t)(x))<<16U))&0x70000UL)      /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR0 Field     */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR1_MASK       (0x700000U)                                         /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR1 Mask      */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR1_SHIFT      (20U)                                               /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR1 Position  */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR1(x)         (((uint32_t)(((uint32_t)(x))<<20U))&0x700000UL)     /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR1 Field     */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR2_MASK       (0x7000000U)                                        /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR2 Mask      */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR2_SHIFT      (24U)                                               /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR2 Position  */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR2(x)         (((uint32_t)(((uint32_t)(x))<<24U))&0x7000000UL)    /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR2 Field     */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR3_MASK       (0x70000000U)                                       /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR3 Mask      */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR3_SHIFT      (28U)                                               /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR3 Position  */
#define ANT_NTW_ADR_CTRL_NTW_ADR_THR3(x)         (((uint32_t)(((uint32_t)(x))<<28U))&0x70000000UL)   /*!< ANT_NTW_ADR_CTRL.NTW_ADR_THR3 Field     */
/* ------- NTW_ADR_ Bit Fields                      ------ */
#define ANT_NTW_ADR__NTW_ADR_0_MASK              (0xFFFFFFFFU)                                       /*!< ANT_NTW_ADR_.NTW_ADR_0 Mask             */
#define ANT_NTW_ADR__NTW_ADR_0_SHIFT             (0U)                                                /*!< ANT_NTW_ADR_.NTW_ADR_0 Position         */
#define ANT_NTW_ADR__NTW_ADR_0(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< ANT_NTW_ADR_.NTW_ADR_0 Field            */
/* ------- RX_WATERMARK Bit Fields                  ------ */
#define ANT_RX_WATERMARK_RX_WATERMARK_MASK       (0x7FU)                                             /*!< ANT_RX_WATERMARK.RX_WATERMARK Mask      */
#define ANT_RX_WATERMARK_RX_WATERMARK_SHIFT      (0U)                                                /*!< ANT_RX_WATERMARK.RX_WATERMARK Position  */
#define ANT_RX_WATERMARK_RX_WATERMARK(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< ANT_RX_WATERMARK.RX_WATERMARK Field     */
#define ANT_RX_WATERMARK_BYTE_COUNTER_MASK       (0x7F0000U)                                         /*!< ANT_RX_WATERMARK.BYTE_COUNTER Mask      */
#define ANT_RX_WATERMARK_BYTE_COUNTER_SHIFT      (16U)                                               /*!< ANT_RX_WATERMARK.BYTE_COUNTER Position  */
#define ANT_RX_WATERMARK_BYTE_COUNTER(x)         (((uint32_t)(((uint32_t)(x))<<16U))&0x7F0000UL)     /*!< ANT_RX_WATERMARK.BYTE_COUNTER Field     */
/* ------- DSM_CTRL Bit Fields                      ------ */
#define ANT_DSM_CTRL_ANT_SLEEP_EN_MASK           (0x1U)                                              /*!< ANT_DSM_CTRL.ANT_SLEEP_EN Mask          */
#define ANT_DSM_CTRL_ANT_SLEEP_EN_SHIFT          (0U)                                                /*!< ANT_DSM_CTRL.ANT_SLEEP_EN Position      */
#define ANT_DSM_CTRL_ANT_SLEEP_EN(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ANT_DSM_CTRL.ANT_SLEEP_EN Field         */
/* ------- PART_ID Bit Fields                       ------ */
#define ANT_PART_ID_PART_ID_MASK                 (0xFFU)                                             /*!< ANT_PART_ID.PART_ID Mask                */
#define ANT_PART_ID_PART_ID_SHIFT                (0U)                                                /*!< ANT_PART_ID.PART_ID Position            */
#define ANT_PART_ID_PART_ID(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< ANT_PART_ID.PART_ID Field               */
/* ------- PACKET_BUFFER_ Bit Fields                ------ */
#define ANT_PACKET_BUFFER__PACKET_BUFFER_MASK    (0xFFFFU)                                           /*!< ANT_PACKET_BUFFER_.PACKET_BUFFER Mask   */
#define ANT_PACKET_BUFFER__PACKET_BUFFER_SHIFT   (0U)                                                /*!< ANT_PACKET_BUFFER_.PACKET_BUFFER Position*/
#define ANT_PACKET_BUFFER__PACKET_BUFFER(x)      (((uint16_t)(((uint16_t)(x))<<0U))&0xFFFFUL)        /*!< ANT_PACKET_BUFFER_.PACKET_BUFFER Field  */
/**
 * @} */ /* End group ANT_Register_Masks_GROUP 
 */

/* ANT - Peripheral instance base addresses */
#define ANT_BasePtr                    0x4005E000UL //!< Peripheral base address
#define ANT                            ((ANT_Type *) ANT_BasePtr) //!< Freescale base pointer
#define ANT_BASE_PTR                   (ANT) //!< Freescale style base pointer
/**
 * @} */ /* End group ANT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup BTLE_RF_Peripheral_access_layer_GROUP BTLE_RF Peripheral Access Layer
* @brief C Struct for BTLE_RF
* @{
*/

/* ================================================================================ */
/* ================           BTLE_RF (file:BTLE_RF_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief BLE_RF
 */
/**
* @addtogroup BTLE_RF_structs_GROUP BTLE_RF struct
* @brief Struct for BTLE_RF
* @{
*/
typedef struct BTLE_RF_Type {
        uint8_t   RESERVED_0[1536];             /**< 0000: 0x600 bytes                                                  */
   __I  uint16_t  BLE_PART_ID;                  /**< 0600: BLUETOOTH LOW ENERGY PART ID                                 */
        uint8_t   RESERVED_1[2];                /**< 0602: 0x2 bytes                                                    */
   __I  uint16_t  DSM_STATUS;                   /**< 0604: BLE DSM STATUS                                               */
        uint8_t   RESERVED_2[2];                /**< 0606: 0x2 bytes                                                    */
   __IO uint16_t  MISC_CTRL;                    /**< 0608: BLUETOOTH LOW ENERGY MISCELLANEOUS CONTROL                   */
} BTLE_RF_Type;

/**
 * @} */ /* End group BTLE_RF_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'BTLE_RF' Position & Mask macros                     ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup BTLE_RF_Register_Masks_GROUP BTLE_RF Register Masks
* @brief Register Masks for BTLE_RF
* @{
*/
/* ------- BLE_PART_ID Bit Fields                   ------ */
#define BTLE_RF_BLE_PART_ID_BLE_PART_ID_MASK     (0xFFFFU)                                           /*!< BTLE_RF_BLE_PART_ID.BLE_PART_ID Mask    */
#define BTLE_RF_BLE_PART_ID_BLE_PART_ID_SHIFT    (0U)                                                /*!< BTLE_RF_BLE_PART_ID.BLE_PART_ID Position*/
#define BTLE_RF_BLE_PART_ID_BLE_PART_ID(x)       (((uint16_t)(((uint16_t)(x))<<0U))&0xFFFFUL)        /*!< BTLE_RF_BLE_PART_ID.BLE_PART_ID Field   */
/* ------- DSM_STATUS Bit Fields                    ------ */
#define BTLE_RF_DSM_STATUS_ORF_SYSCLK_REQ_MASK   (0x1U)                                              /*!< BTLE_RF_DSM_STATUS.ORF_SYSCLK_REQ Mask  */
#define BTLE_RF_DSM_STATUS_ORF_SYSCLK_REQ_SHIFT  (0U)                                                /*!< BTLE_RF_DSM_STATUS.ORF_SYSCLK_REQ Position*/
#define BTLE_RF_DSM_STATUS_ORF_SYSCLK_REQ(x)     (((uint16_t)(((uint16_t)(x))<<0U))&0x1UL)           /*!< BTLE_RF_DSM_STATUS.ORF_SYSCLK_REQ Field */
#define BTLE_RF_DSM_STATUS_RIF_LL_ACTIVE_MASK    (0x2U)                                              /*!< BTLE_RF_DSM_STATUS.RIF_LL_ACTIVE Mask   */
#define BTLE_RF_DSM_STATUS_RIF_LL_ACTIVE_SHIFT   (1U)                                                /*!< BTLE_RF_DSM_STATUS.RIF_LL_ACTIVE Position*/
#define BTLE_RF_DSM_STATUS_RIF_LL_ACTIVE(x)      (((uint16_t)(((uint16_t)(x))<<1U))&0x2UL)           /*!< BTLE_RF_DSM_STATUS.RIF_LL_ACTIVE Field  */
#define BTLE_RF_DSM_STATUS_XCVR_BUSY_MASK        (0x4U)                                              /*!< BTLE_RF_DSM_STATUS.XCVR_BUSY Mask       */
#define BTLE_RF_DSM_STATUS_XCVR_BUSY_SHIFT       (2U)                                                /*!< BTLE_RF_DSM_STATUS.XCVR_BUSY Position   */
#define BTLE_RF_DSM_STATUS_XCVR_BUSY(x)          (((uint16_t)(((uint16_t)(x))<<2U))&0x4UL)           /*!< BTLE_RF_DSM_STATUS.XCVR_BUSY Field      */
/* ------- MISC_CTRL Bit Fields                     ------ */
#define BTLE_RF_MISC_CTRL_TSM_INTR_EN_MASK       (0x2U)                                              /*!< BTLE_RF_MISC_CTRL.TSM_INTR_EN Mask      */
#define BTLE_RF_MISC_CTRL_TSM_INTR_EN_SHIFT      (1U)                                                /*!< BTLE_RF_MISC_CTRL.TSM_INTR_EN Position  */
#define BTLE_RF_MISC_CTRL_TSM_INTR_EN(x)         (((uint16_t)(((uint16_t)(x))<<1U))&0x2UL)           /*!< BTLE_RF_MISC_CTRL.TSM_INTR_EN Field     */
/**
 * @} */ /* End group BTLE_RF_Register_Masks_GROUP 
 */

/* BTLE_RF - Peripheral instance base addresses */
#define BTLE_RF_BasePtr                0x4005B000UL //!< Peripheral base address
#define BTLE_RF                        ((BTLE_RF_Type *) BTLE_RF_BasePtr) //!< Freescale base pointer
#define BTLE_RF_BASE_PTR               (BTLE_RF) //!< Freescale style base pointer
/**
 * @} */ /* End group BTLE_RF_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup CMP_Peripheral_access_layer_GROUP CMP Peripheral Access Layer
* @brief C Struct for CMP
* @{
*/

/* ================================================================================ */
/* ================           CMP0 (file:CMP0_PSTM_TRIGM)          ================ */
/* ================================================================================ */

/**
 * @brief Comparator, Voltage Ref, D-to-A Converter and Analog Mux
 */
/**
* @addtogroup CMP_structs_GROUP CMP struct
* @brief Struct for CMP
* @{
*/
typedef struct CMP_Type {
   __IO uint8_t   CR0;                          /**< 0000: CMP Control Register 0                                       */
   __IO uint8_t   CR1;                          /**< 0001: CMP Control Register 1                                       */
   __IO uint8_t   FPR;                          /**< 0002: CMP Filter Period Register                                   */
   __IO uint8_t   SCR;                          /**< 0003: CMP Status and Control Register                              */
   __IO uint8_t   DACCR;                        /**< 0004: DAC Control Register                                         */
   __IO uint8_t   MUXCR;                        /**< 0005: MUX Control Register                                         */
} CMP_Type;

/**
 * @} */ /* End group CMP_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'CMP0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup CMP_Register_Masks_GROUP CMP Register Masks
* @brief Register Masks for CMP
* @{
*/
/* ------- CR0 Bit Fields                           ------ */
#define CMP_CR0_HYSTCTR_MASK                     (0x3U)                                              /*!< CMP0_CR0.HYSTCTR Mask                   */
#define CMP_CR0_HYSTCTR_SHIFT                    (0U)                                                /*!< CMP0_CR0.HYSTCTR Position               */
#define CMP_CR0_HYSTCTR(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< CMP0_CR0.HYSTCTR Field                  */
#define CMP_CR0_FILTER_CNT_MASK                  (0x70U)                                             /*!< CMP0_CR0.FILTER_CNT Mask                */
#define CMP_CR0_FILTER_CNT_SHIFT                 (4U)                                                /*!< CMP0_CR0.FILTER_CNT Position            */
#define CMP_CR0_FILTER_CNT(x)                    (((uint8_t)(((uint8_t)(x))<<4U))&0x70UL)            /*!< CMP0_CR0.FILTER_CNT Field               */
/* ------- CR1 Bit Fields                           ------ */
#define CMP_CR1_EN_MASK                          (0x1U)                                              /*!< CMP0_CR1.EN Mask                        */
#define CMP_CR1_EN_SHIFT                         (0U)                                                /*!< CMP0_CR1.EN Position                    */
#define CMP_CR1_EN(x)                            (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< CMP0_CR1.EN Field                       */
#define CMP_CR1_OPE_MASK                         (0x2U)                                              /*!< CMP0_CR1.OPE Mask                       */
#define CMP_CR1_OPE_SHIFT                        (1U)                                                /*!< CMP0_CR1.OPE Position                   */
#define CMP_CR1_OPE(x)                           (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< CMP0_CR1.OPE Field                      */
#define CMP_CR1_COS_MASK                         (0x4U)                                              /*!< CMP0_CR1.COS Mask                       */
#define CMP_CR1_COS_SHIFT                        (2U)                                                /*!< CMP0_CR1.COS Position                   */
#define CMP_CR1_COS(x)                           (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< CMP0_CR1.COS Field                      */
#define CMP_CR1_INV_MASK                         (0x8U)                                              /*!< CMP0_CR1.INV Mask                       */
#define CMP_CR1_INV_SHIFT                        (3U)                                                /*!< CMP0_CR1.INV Position                   */
#define CMP_CR1_INV(x)                           (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< CMP0_CR1.INV Field                      */
#define CMP_CR1_PMODE_MASK                       (0x10U)                                             /*!< CMP0_CR1.PMODE Mask                     */
#define CMP_CR1_PMODE_SHIFT                      (4U)                                                /*!< CMP0_CR1.PMODE Position                 */
#define CMP_CR1_PMODE(x)                         (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< CMP0_CR1.PMODE Field                    */
#define CMP_CR1_TRIGM_MASK                       (0x20U)                                             /*!< CMP0_CR1.TRIGM Mask                     */
#define CMP_CR1_TRIGM_SHIFT                      (5U)                                                /*!< CMP0_CR1.TRIGM Position                 */
#define CMP_CR1_TRIGM(x)                         (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< CMP0_CR1.TRIGM Field                    */
#define CMP_CR1_WE_MASK                          (0x40U)                                             /*!< CMP0_CR1.WE Mask                        */
#define CMP_CR1_WE_SHIFT                         (6U)                                                /*!< CMP0_CR1.WE Position                    */
#define CMP_CR1_WE(x)                            (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< CMP0_CR1.WE Field                       */
#define CMP_CR1_SE_MASK                          (0x80U)                                             /*!< CMP0_CR1.SE Mask                        */
#define CMP_CR1_SE_SHIFT                         (7U)                                                /*!< CMP0_CR1.SE Position                    */
#define CMP_CR1_SE(x)                            (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< CMP0_CR1.SE Field                       */
/* ------- FPR Bit Fields                           ------ */
#define CMP_FPR_FILT_PER_MASK                    (0xFFU)                                             /*!< CMP0_FPR.FILT_PER Mask                  */
#define CMP_FPR_FILT_PER_SHIFT                   (0U)                                                /*!< CMP0_FPR.FILT_PER Position              */
#define CMP_FPR_FILT_PER(x)                      (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< CMP0_FPR.FILT_PER Field                 */
/* ------- SCR Bit Fields                           ------ */
#define CMP_SCR_COUT_MASK                        (0x1U)                                              /*!< CMP0_SCR.COUT Mask                      */
#define CMP_SCR_COUT_SHIFT                       (0U)                                                /*!< CMP0_SCR.COUT Position                  */
#define CMP_SCR_COUT(x)                          (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< CMP0_SCR.COUT Field                     */
#define CMP_SCR_CFF_MASK                         (0x2U)                                              /*!< CMP0_SCR.CFF Mask                       */
#define CMP_SCR_CFF_SHIFT                        (1U)                                                /*!< CMP0_SCR.CFF Position                   */
#define CMP_SCR_CFF(x)                           (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< CMP0_SCR.CFF Field                      */
#define CMP_SCR_CFR_MASK                         (0x4U)                                              /*!< CMP0_SCR.CFR Mask                       */
#define CMP_SCR_CFR_SHIFT                        (2U)                                                /*!< CMP0_SCR.CFR Position                   */
#define CMP_SCR_CFR(x)                           (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< CMP0_SCR.CFR Field                      */
#define CMP_SCR_IEF_MASK                         (0x8U)                                              /*!< CMP0_SCR.IEF Mask                       */
#define CMP_SCR_IEF_SHIFT                        (3U)                                                /*!< CMP0_SCR.IEF Position                   */
#define CMP_SCR_IEF(x)                           (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< CMP0_SCR.IEF Field                      */
#define CMP_SCR_IER_MASK                         (0x10U)                                             /*!< CMP0_SCR.IER Mask                       */
#define CMP_SCR_IER_SHIFT                        (4U)                                                /*!< CMP0_SCR.IER Position                   */
#define CMP_SCR_IER(x)                           (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< CMP0_SCR.IER Field                      */
#define CMP_SCR_DMAEN_MASK                       (0x40U)                                             /*!< CMP0_SCR.DMAEN Mask                     */
#define CMP_SCR_DMAEN_SHIFT                      (6U)                                                /*!< CMP0_SCR.DMAEN Position                 */
#define CMP_SCR_DMAEN(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< CMP0_SCR.DMAEN Field                    */
/* ------- DACCR Bit Fields                         ------ */
#define CMP_DACCR_VOSEL_MASK                     (0x3FU)                                             /*!< CMP0_DACCR.VOSEL Mask                   */
#define CMP_DACCR_VOSEL_SHIFT                    (0U)                                                /*!< CMP0_DACCR.VOSEL Position               */
#define CMP_DACCR_VOSEL(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x3FUL)            /*!< CMP0_DACCR.VOSEL Field                  */
#define CMP_DACCR_VRSEL_MASK                     (0x40U)                                             /*!< CMP0_DACCR.VRSEL Mask                   */
#define CMP_DACCR_VRSEL_SHIFT                    (6U)                                                /*!< CMP0_DACCR.VRSEL Position               */
#define CMP_DACCR_VRSEL(x)                       (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< CMP0_DACCR.VRSEL Field                  */
#define CMP_DACCR_DACEN_MASK                     (0x80U)                                             /*!< CMP0_DACCR.DACEN Mask                   */
#define CMP_DACCR_DACEN_SHIFT                    (7U)                                                /*!< CMP0_DACCR.DACEN Position               */
#define CMP_DACCR_DACEN(x)                       (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< CMP0_DACCR.DACEN Field                  */
/* ------- MUXCR Bit Fields                         ------ */
#define CMP_MUXCR_MSEL_MASK                      (0x7U)                                              /*!< CMP0_MUXCR.MSEL Mask                    */
#define CMP_MUXCR_MSEL_SHIFT                     (0U)                                                /*!< CMP0_MUXCR.MSEL Position                */
#define CMP_MUXCR_MSEL(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0x7UL)             /*!< CMP0_MUXCR.MSEL Field                   */
#define CMP_MUXCR_PSEL_MASK                      (0x38U)                                             /*!< CMP0_MUXCR.PSEL Mask                    */
#define CMP_MUXCR_PSEL_SHIFT                     (3U)                                                /*!< CMP0_MUXCR.PSEL Position                */
#define CMP_MUXCR_PSEL(x)                        (((uint8_t)(((uint8_t)(x))<<3U))&0x38UL)            /*!< CMP0_MUXCR.PSEL Field                   */
#define CMP_MUXCR_PSTM_MASK                      (0x80U)                                             /*!< CMP0_MUXCR.PSTM Mask                    */
#define CMP_MUXCR_PSTM_SHIFT                     (7U)                                                /*!< CMP0_MUXCR.PSTM Position                */
#define CMP_MUXCR_PSTM(x)                        (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< CMP0_MUXCR.PSTM Field                   */
/**
 * @} */ /* End group CMP_Register_Masks_GROUP 
 */

/* CMP0 - Peripheral instance base addresses */
#define CMP0_BasePtr                   0x40073000UL //!< Peripheral base address
#define CMP0                           ((CMP_Type *) CMP0_BasePtr) //!< Freescale base pointer
#define CMP0_BASE_PTR                  (CMP0) //!< Freescale style base pointer
#define CMP0_IRQS { CMP0_IRQn,  }

/**
 * @} */ /* End group CMP_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup CMT_Peripheral_access_layer_GROUP CMT Peripheral Access Layer
* @brief C Struct for CMT
* @{
*/

/* ================================================================================ */
/* ================           CMT (file:CMT_0)                     ================ */
/* ================================================================================ */

/**
 * @brief Carrier Modulator Transmitter
 */
/**
* @addtogroup CMT_structs_GROUP CMT struct
* @brief Struct for CMT
* @{
*/
typedef struct CMT_Type {
   __IO uint8_t   CGH1;                         /**< 0000: Carrier Generator High Data Register 1                       */
   __IO uint8_t   CGL1;                         /**< 0001: Carrier Generator Low Data Register 1                        */
   __IO uint8_t   CGH2;                         /**< 0002: Carrier Generator High Data Register 2                       */
   __IO uint8_t   CGL2;                         /**< 0003: Carrier Generator Low Data Register 2                        */
   __IO uint8_t   OC;                           /**< 0004: Output Control Register                                      */
   __IO uint8_t   MSC;                          /**< 0005: Modulator Status and Control Register                        */
   __IO uint8_t   CMD1;                         /**< 0006: Modulator Data Register Mark High                            */
   __IO uint8_t   CMD2;                         /**< 0007: Modulator Data Register Mark Low                             */
   __IO uint8_t   CMD3;                         /**< 0008: Modulator Data Register Space High                           */
   __IO uint8_t   CMD4;                         /**< 0009: Modulator Data Register Space Low                            */
   __IO uint8_t   PPS;                          /**< 000A: Primary Prescaler Register                                   */
   __IO uint8_t   DMA;                          /**< 000B: Direct Memory Access                                         */
} CMT_Type;

/**
 * @} */ /* End group CMT_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'CMT' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup CMT_Register_Masks_GROUP CMT Register Masks
* @brief Register Masks for CMT
* @{
*/
/* ------- CGH1 Bit Fields                          ------ */
#define CMT_CGH1_PH_MASK                         (0xFFU)                                             /*!< CMT_CGH1.PH Mask                        */
#define CMT_CGH1_PH_SHIFT                        (0U)                                                /*!< CMT_CGH1.PH Position                    */
#define CMT_CGH1_PH(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< CMT_CGH1.PH Field                       */
/* ------- CGL1 Bit Fields                          ------ */
#define CMT_CGL1_PL_MASK                         (0xFFU)                                             /*!< CMT_CGL1.PL Mask                        */
#define CMT_CGL1_PL_SHIFT                        (0U)                                                /*!< CMT_CGL1.PL Position                    */
#define CMT_CGL1_PL(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< CMT_CGL1.PL Field                       */
/* ------- CGH2 Bit Fields                          ------ */
#define CMT_CGH2_SH_MASK                         (0xFFU)                                             /*!< CMT_CGH2.SH Mask                        */
#define CMT_CGH2_SH_SHIFT                        (0U)                                                /*!< CMT_CGH2.SH Position                    */
#define CMT_CGH2_SH(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< CMT_CGH2.SH Field                       */
/* ------- CGL2 Bit Fields                          ------ */
#define CMT_CGL2_SL_MASK                         (0xFFU)                                             /*!< CMT_CGL2.SL Mask                        */
#define CMT_CGL2_SL_SHIFT                        (0U)                                                /*!< CMT_CGL2.SL Position                    */
#define CMT_CGL2_SL(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< CMT_CGL2.SL Field                       */
/* ------- OC Bit Fields                            ------ */
#define CMT_OC_IROPEN_MASK                       (0x20U)                                             /*!< CMT_OC.IROPEN Mask                      */
#define CMT_OC_IROPEN_SHIFT                      (5U)                                                /*!< CMT_OC.IROPEN Position                  */
#define CMT_OC_IROPEN(x)                         (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< CMT_OC.IROPEN Field                     */
#define CMT_OC_CMTPOL_MASK                       (0x40U)                                             /*!< CMT_OC.CMTPOL Mask                      */
#define CMT_OC_CMTPOL_SHIFT                      (6U)                                                /*!< CMT_OC.CMTPOL Position                  */
#define CMT_OC_CMTPOL(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< CMT_OC.CMTPOL Field                     */
#define CMT_OC_IROL_MASK                         (0x80U)                                             /*!< CMT_OC.IROL Mask                        */
#define CMT_OC_IROL_SHIFT                        (7U)                                                /*!< CMT_OC.IROL Position                    */
#define CMT_OC_IROL(x)                           (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< CMT_OC.IROL Field                       */
/* ------- MSC Bit Fields                           ------ */
#define CMT_MSC_MCGEN_MASK                       (0x1U)                                              /*!< CMT_MSC.MCGEN Mask                      */
#define CMT_MSC_MCGEN_SHIFT                      (0U)                                                /*!< CMT_MSC.MCGEN Position                  */
#define CMT_MSC_MCGEN(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< CMT_MSC.MCGEN Field                     */
#define CMT_MSC_EOCIE_MASK                       (0x2U)                                              /*!< CMT_MSC.EOCIE Mask                      */
#define CMT_MSC_EOCIE_SHIFT                      (1U)                                                /*!< CMT_MSC.EOCIE Position                  */
#define CMT_MSC_EOCIE(x)                         (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< CMT_MSC.EOCIE Field                     */
#define CMT_MSC_FSK_MASK                         (0x4U)                                              /*!< CMT_MSC.FSK Mask                        */
#define CMT_MSC_FSK_SHIFT                        (2U)                                                /*!< CMT_MSC.FSK Position                    */
#define CMT_MSC_FSK(x)                           (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< CMT_MSC.FSK Field                       */
#define CMT_MSC_BASE_MASK                        (0x8U)                                              /*!< CMT_MSC.BASE Mask                       */
#define CMT_MSC_BASE_SHIFT                       (3U)                                                /*!< CMT_MSC.BASE Position                   */
#define CMT_MSC_BASE(x)                          (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< CMT_MSC.BASE Field                      */
#define CMT_MSC_EXSPC_MASK                       (0x10U)                                             /*!< CMT_MSC.EXSPC Mask                      */
#define CMT_MSC_EXSPC_SHIFT                      (4U)                                                /*!< CMT_MSC.EXSPC Position                  */
#define CMT_MSC_EXSPC(x)                         (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< CMT_MSC.EXSPC Field                     */
#define CMT_MSC_CMTDIV_MASK                      (0x60U)                                             /*!< CMT_MSC.CMTDIV Mask                     */
#define CMT_MSC_CMTDIV_SHIFT                     (5U)                                                /*!< CMT_MSC.CMTDIV Position                 */
#define CMT_MSC_CMTDIV(x)                        (((uint8_t)(((uint8_t)(x))<<5U))&0x60UL)            /*!< CMT_MSC.CMTDIV Field                    */
#define CMT_MSC_EOCF_MASK                        (0x80U)                                             /*!< CMT_MSC.EOCF Mask                       */
#define CMT_MSC_EOCF_SHIFT                       (7U)                                                /*!< CMT_MSC.EOCF Position                   */
#define CMT_MSC_EOCF(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< CMT_MSC.EOCF Field                      */
/* ------- CMD1 Bit Fields                          ------ */
#define CMT_CMD1_MB_MASK                         (0xFFU)                                             /*!< CMT_CMD1.MB Mask                        */
#define CMT_CMD1_MB_SHIFT                        (0U)                                                /*!< CMT_CMD1.MB Position                    */
#define CMT_CMD1_MB(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< CMT_CMD1.MB Field                       */
/* ------- CMD2 Bit Fields                          ------ */
#define CMT_CMD2_MB_MASK                         (0xFFU)                                             /*!< CMT_CMD2.MB Mask                        */
#define CMT_CMD2_MB_SHIFT                        (0U)                                                /*!< CMT_CMD2.MB Position                    */
#define CMT_CMD2_MB(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< CMT_CMD2.MB Field                       */
/* ------- CMD3 Bit Fields                          ------ */
#define CMT_CMD3_SB_MASK                         (0xFFU)                                             /*!< CMT_CMD3.SB Mask                        */
#define CMT_CMD3_SB_SHIFT                        (0U)                                                /*!< CMT_CMD3.SB Position                    */
#define CMT_CMD3_SB(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< CMT_CMD3.SB Field                       */
/* ------- CMD4 Bit Fields                          ------ */
#define CMT_CMD4_SB_MASK                         (0xFFU)                                             /*!< CMT_CMD4.SB Mask                        */
#define CMT_CMD4_SB_SHIFT                        (0U)                                                /*!< CMT_CMD4.SB Position                    */
#define CMT_CMD4_SB(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< CMT_CMD4.SB Field                       */
/* ------- PPS Bit Fields                           ------ */
#define CMT_PPS_PPSDIV_MASK                      (0xFU)                                              /*!< CMT_PPS.PPSDIV Mask                     */
#define CMT_PPS_PPSDIV_SHIFT                     (0U)                                                /*!< CMT_PPS.PPSDIV Position                 */
#define CMT_PPS_PPSDIV(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0xFUL)             /*!< CMT_PPS.PPSDIV Field                    */
/* ------- DMA Bit Fields                           ------ */
#define CMT_DMA_DMA_MASK                         (0x1U)                                              /*!< CMT_DMA.DMA Mask                        */
#define CMT_DMA_DMA_SHIFT                        (0U)                                                /*!< CMT_DMA.DMA Position                    */
#define CMT_DMA_DMA(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< CMT_DMA.DMA Field                       */
/**
 * @} */ /* End group CMT_Register_Masks_GROUP 
 */

/* CMT - Peripheral instance base addresses */
#define CMT_BasePtr                    0x40062000UL //!< Peripheral base address
#define CMT                            ((CMT_Type *) CMT_BasePtr) //!< Freescale base pointer
#define CMT_BASE_PTR                   (CMT) //!< Freescale style base pointer
#define CMT_IRQS { CMT_IRQn,  }

/**
 * @} */ /* End group CMT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup DAC_Peripheral_access_layer_GROUP DAC Peripheral Access Layer
* @brief C Struct for DAC
* @{
*/

/* ================================================================================ */
/* ================           DAC0 (file:DAC0_2CH_MKW41Z4)         ================ */
/* ================================================================================ */

/**
 * @brief 12-Bit Digital-to-Analog Converter
 */
/**
* @addtogroup DAC_structs_GROUP DAC struct
* @brief Struct for DAC
* @{
*/
typedef struct DAC_Type {
   union {                                      /**< 0000: (size=0004)                                                  */
      struct {
         __IO uint8_t   DATL;                   /**< 0000: Data Low Register                                            */
         __IO uint8_t   DATH;                   /**< 0001: Data High Register                                           */
      } DAT[2];                                 /**< 0000: (cluster: size=0x0004, 4)                                    */
      __IO uint16_t  DATA[2];                   /**< 0000: Data Register                                                */
   };
        uint8_t   RESERVED_1[28];               /**< 0004: 0x1C bytes                                                   */
   __IO uint8_t   SR;                           /**< 0020: Status Register                                              */
   __IO uint8_t   C0;                           /**< 0021: Control Register 0                                           */
   __IO uint8_t   C1;                           /**< 0022: Control Register 1                                           */
   __IO uint8_t   C2;                           /**< 0023: Control Register 2                                           */
} DAC_Type;

/**
 * @} */ /* End group DAC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'DAC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup DAC_Register_Masks_GROUP DAC Register Masks
* @brief Register Masks for DAC
* @{
*/
/* ------- DATL Bit Fields                          ------ */
#define DAC_DATL_DATA_MASK                       (0xFFU)                                             /*!< DAC0_DATL.DATA Mask                     */
#define DAC_DATL_DATA_SHIFT                      (0U)                                                /*!< DAC0_DATL.DATA Position                 */
#define DAC_DATL_DATA(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< DAC0_DATL.DATA Field                    */
/* ------- DATH Bit Fields                          ------ */
#define DAC_DATH_DATA_MASK                       (0xFU)                                              /*!< DAC0_DATH.DATA Mask                     */
#define DAC_DATH_DATA_SHIFT                      (0U)                                                /*!< DAC0_DATH.DATA Position                 */
#define DAC_DATH_DATA(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0xFUL)             /*!< DAC0_DATH.DATA Field                    */
/* ------- DATA Bit Fields                          ------ */
#define DAC_DATA_DATA_MASK                       (0xFFFU)                                            /*!< DAC0_DATA.DATA Mask                     */
#define DAC_DATA_DATA_SHIFT                      (0U)                                                /*!< DAC0_DATA.DATA Position                 */
#define DAC_DATA_DATA(x)                         (((uint16_t)(((uint16_t)(x))<<0U))&0xFFFUL)         /*!< DAC0_DATA.DATA Field                    */
/* ------- SR Bit Fields                            ------ */
#define DAC_SR_DACBFRPBF_MASK                    (0x1U)                                              /*!< DAC0_SR.DACBFRPBF Mask                  */
#define DAC_SR_DACBFRPBF_SHIFT                   (0U)                                                /*!< DAC0_SR.DACBFRPBF Position              */
#define DAC_SR_DACBFRPBF(x)                      (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< DAC0_SR.DACBFRPBF Field                 */
#define DAC_SR_DACBFRPTF_MASK                    (0x2U)                                              /*!< DAC0_SR.DACBFRPTF Mask                  */
#define DAC_SR_DACBFRPTF_SHIFT                   (1U)                                                /*!< DAC0_SR.DACBFRPTF Position              */
#define DAC_SR_DACBFRPTF(x)                      (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< DAC0_SR.DACBFRPTF Field                 */
#define DAC_SR_DACBFWMF_MASK                     (0x4U)                                              /*!< DAC0_SR.DACBFWMF Mask                   */
#define DAC_SR_DACBFWMF_SHIFT                    (2U)                                                /*!< DAC0_SR.DACBFWMF Position               */
#define DAC_SR_DACBFWMF(x)                       (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< DAC0_SR.DACBFWMF Field                  */
/* ------- C0 Bit Fields                            ------ */
#define DAC_C0_DACBBIEN_MASK                     (0x1U)                                              /*!< DAC0_C0.DACBBIEN Mask                   */
#define DAC_C0_DACBBIEN_SHIFT                    (0U)                                                /*!< DAC0_C0.DACBBIEN Position               */
#define DAC_C0_DACBBIEN(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< DAC0_C0.DACBBIEN Field                  */
#define DAC_C0_DACBTIEN_MASK                     (0x2U)                                              /*!< DAC0_C0.DACBTIEN Mask                   */
#define DAC_C0_DACBTIEN_SHIFT                    (1U)                                                /*!< DAC0_C0.DACBTIEN Position               */
#define DAC_C0_DACBTIEN(x)                       (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< DAC0_C0.DACBTIEN Field                  */
#define DAC_C0_DACBWIEN_MASK                     (0x4U)                                              /*!< DAC0_C0.DACBWIEN Mask                   */
#define DAC_C0_DACBWIEN_SHIFT                    (2U)                                                /*!< DAC0_C0.DACBWIEN Position               */
#define DAC_C0_DACBWIEN(x)                       (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< DAC0_C0.DACBWIEN Field                  */
#define DAC_C0_LPEN_MASK                         (0x8U)                                              /*!< DAC0_C0.LPEN Mask                       */
#define DAC_C0_LPEN_SHIFT                        (3U)                                                /*!< DAC0_C0.LPEN Position                   */
#define DAC_C0_LPEN(x)                           (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< DAC0_C0.LPEN Field                      */
#define DAC_C0_DACSWTRG_MASK                     (0x10U)                                             /*!< DAC0_C0.DACSWTRG Mask                   */
#define DAC_C0_DACSWTRG_SHIFT                    (4U)                                                /*!< DAC0_C0.DACSWTRG Position               */
#define DAC_C0_DACSWTRG(x)                       (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< DAC0_C0.DACSWTRG Field                  */
#define DAC_C0_DACTRGSEL_MASK                    (0x20U)                                             /*!< DAC0_C0.DACTRGSEL Mask                  */
#define DAC_C0_DACTRGSEL_SHIFT                   (5U)                                                /*!< DAC0_C0.DACTRGSEL Position              */
#define DAC_C0_DACTRGSEL(x)                      (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< DAC0_C0.DACTRGSEL Field                 */
#define DAC_C0_DACRFS_MASK                       (0x40U)                                             /*!< DAC0_C0.DACRFS Mask                     */
#define DAC_C0_DACRFS_SHIFT                      (6U)                                                /*!< DAC0_C0.DACRFS Position                 */
#define DAC_C0_DACRFS(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DAC0_C0.DACRFS Field                    */
#define DAC_C0_DACEN_MASK                        (0x80U)                                             /*!< DAC0_C0.DACEN Mask                      */
#define DAC_C0_DACEN_SHIFT                       (7U)                                                /*!< DAC0_C0.DACEN Position                  */
#define DAC_C0_DACEN(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DAC0_C0.DACEN Field                     */
/* ------- C1 Bit Fields                            ------ */
#define DAC_C1_DACBFEN_MASK                      (0x1U)                                              /*!< DAC0_C1.DACBFEN Mask                    */
#define DAC_C1_DACBFEN_SHIFT                     (0U)                                                /*!< DAC0_C1.DACBFEN Position                */
#define DAC_C1_DACBFEN(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< DAC0_C1.DACBFEN Field                   */
#define DAC_C1_DACBFMD_MASK                      (0x4U)                                              /*!< DAC0_C1.DACBFMD Mask                    */
#define DAC_C1_DACBFMD_SHIFT                     (2U)                                                /*!< DAC0_C1.DACBFMD Position                */
#define DAC_C1_DACBFMD(x)                        (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< DAC0_C1.DACBFMD Field                   */
#define DAC_C1_DACBFWM_MASK                      (0x18U)                                             /*!< DAC0_C1.DACBFWM Mask                    */
#define DAC_C1_DACBFWM_SHIFT                     (3U)                                                /*!< DAC0_C1.DACBFWM Position                */
#define DAC_C1_DACBFWM(x)                        (((uint8_t)(((uint8_t)(x))<<3U))&0x18UL)            /*!< DAC0_C1.DACBFWM Field                   */
#define DAC_C1_DMAEN_MASK                        (0x80U)                                             /*!< DAC0_C1.DMAEN Mask                      */
#define DAC_C1_DMAEN_SHIFT                       (7U)                                                /*!< DAC0_C1.DMAEN Position                  */
#define DAC_C1_DMAEN(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DAC0_C1.DMAEN Field                     */
/* ------- C2 Bit Fields                            ------ */
#define DAC_C2_DACBFUP_MASK                      (0x1U)                                              /*!< DAC0_C2.DACBFUP Mask                    */
#define DAC_C2_DACBFUP_SHIFT                     (0U)                                                /*!< DAC0_C2.DACBFUP Position                */
#define DAC_C2_DACBFUP(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< DAC0_C2.DACBFUP Field                   */
#define DAC_C2_DACBFRP_MASK                      (0x10U)                                             /*!< DAC0_C2.DACBFRP Mask                    */
#define DAC_C2_DACBFRP_SHIFT                     (4U)                                                /*!< DAC0_C2.DACBFRP Position                */
#define DAC_C2_DACBFRP(x)                        (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< DAC0_C2.DACBFRP Field                   */
/**
 * @} */ /* End group DAC_Register_Masks_GROUP 
 */

/* DAC0 - Peripheral instance base addresses */
#define DAC0_BasePtr                   0x4003F000UL //!< Peripheral base address
#define DAC0                           ((DAC_Type *) DAC0_BasePtr) //!< Freescale base pointer
#define DAC0_BASE_PTR                  (DAC0) //!< Freescale style base pointer
#define DAC0_IRQS { DAC0_IRQn,  }

/**
 * @} */ /* End group DAC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup DCDC_Peripheral_access_layer_GROUP DCDC Peripheral Access Layer
* @brief C Struct for DCDC
* @{
*/

/* ================================================================================ */
/* ================           DCDC (file:DCDC_MKW41Z4)             ================ */
/* ================================================================================ */

/**
 * @brief DC to DC Converter
 */
/**
* @addtogroup DCDC_structs_GROUP DCDC struct
* @brief Struct for DCDC
* @{
*/
typedef struct DCDC_Type {
   __IO uint32_t  REG0;                         /**< 0000: DCDC REGISTER 0                                              */
   __IO uint32_t  REG1;                         /**< 0004: DCDC REGISTER 1                                              */
   __IO uint32_t  REG2;                         /**< 0008: DCDC REGISTER 2                                              */
   __IO uint32_t  REG3;                         /**< 000C: DCDC REGISTER 3                                              */
   __IO uint32_t  REG4;                         /**< 0010: DCDC REGISTER 4                                              */
        uint8_t   RESERVED_0[4];                /**< 0014: 0x4 bytes                                                    */
   __IO uint32_t  REG6;                         /**< 0018: DCDC REGISTER 6                                              */
   __IO uint32_t  REG7;                         /**< 001C: DCDC REGISTER 7                                              */
} DCDC_Type;

/**
 * @} */ /* End group DCDC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'DCDC' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup DCDC_Register_Masks_GROUP DCDC Register Masks
* @brief Register Masks for DCDC
* @{
*/
/* ------- REG0 Bit Fields                          ------ */
#define DCDC_REG0_DCDC_DISABLE_AUTO_CLK_SWITCH_MASK (0x2U)                                           /*!< DCDC_REG0.DCDC_DISABLE_AUTO_CLK_SWITCH Mask*/
#define DCDC_REG0_DCDC_DISABLE_AUTO_CLK_SWITCH_SHIFT (1U)                                            /*!< DCDC_REG0.DCDC_DISABLE_AUTO_CLK_SWITCH Position*/
#define DCDC_REG0_DCDC_DISABLE_AUTO_CLK_SWITCH(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)          /*!< DCDC_REG0.DCDC_DISABLE_AUTO_CLK_SWITCH Field*/
#define DCDC_REG0_DCDC_SEL_CLK_MASK              (0x4U)                                              /*!< DCDC_REG0.DCDC_SEL_CLK Mask             */
#define DCDC_REG0_DCDC_SEL_CLK_SHIFT             (2U)                                                /*!< DCDC_REG0.DCDC_SEL_CLK Position         */
#define DCDC_REG0_DCDC_SEL_CLK(x)                (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< DCDC_REG0.DCDC_SEL_CLK Field            */
#define DCDC_REG0_DCDC_PWD_OSC_INT_MASK          (0x8U)                                              /*!< DCDC_REG0.DCDC_PWD_OSC_INT Mask         */
#define DCDC_REG0_DCDC_PWD_OSC_INT_SHIFT         (3U)                                                /*!< DCDC_REG0.DCDC_PWD_OSC_INT Position     */
#define DCDC_REG0_DCDC_PWD_OSC_INT(x)            (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< DCDC_REG0.DCDC_PWD_OSC_INT Field        */
#define DCDC_REG0_DCDC_LP_DF_CMP_ENABLE_MASK     (0x200U)                                            /*!< DCDC_REG0.DCDC_LP_DF_CMP_ENABLE Mask    */
#define DCDC_REG0_DCDC_LP_DF_CMP_ENABLE_SHIFT    (9U)                                                /*!< DCDC_REG0.DCDC_LP_DF_CMP_ENABLE Position*/
#define DCDC_REG0_DCDC_LP_DF_CMP_ENABLE(x)       (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< DCDC_REG0.DCDC_LP_DF_CMP_ENABLE Field   */
#define DCDC_REG0_DCDC_VBAT_DIV_CTRL_MASK        (0xC00U)                                            /*!< DCDC_REG0.DCDC_VBAT_DIV_CTRL Mask       */
#define DCDC_REG0_DCDC_VBAT_DIV_CTRL_SHIFT       (10U)                                               /*!< DCDC_REG0.DCDC_VBAT_DIV_CTRL Position   */
#define DCDC_REG0_DCDC_VBAT_DIV_CTRL(x)          (((uint32_t)(((uint32_t)(x))<<10U))&0xC00UL)        /*!< DCDC_REG0.DCDC_VBAT_DIV_CTRL Field      */
#define DCDC_REG0_DCDC_LP_STATE_HYS_L_MASK       (0x60000U)                                          /*!< DCDC_REG0.DCDC_LP_STATE_HYS_L Mask      */
#define DCDC_REG0_DCDC_LP_STATE_HYS_L_SHIFT      (17U)                                               /*!< DCDC_REG0.DCDC_LP_STATE_HYS_L Position  */
#define DCDC_REG0_DCDC_LP_STATE_HYS_L(x)         (((uint32_t)(((uint32_t)(x))<<17U))&0x60000UL)      /*!< DCDC_REG0.DCDC_LP_STATE_HYS_L Field     */
#define DCDC_REG0_DCDC_LP_STATE_HYS_H_MASK       (0x180000U)                                         /*!< DCDC_REG0.DCDC_LP_STATE_HYS_H Mask      */
#define DCDC_REG0_DCDC_LP_STATE_HYS_H_SHIFT      (19U)                                               /*!< DCDC_REG0.DCDC_LP_STATE_HYS_H Position  */
#define DCDC_REG0_DCDC_LP_STATE_HYS_H(x)         (((uint32_t)(((uint32_t)(x))<<19U))&0x180000UL)     /*!< DCDC_REG0.DCDC_LP_STATE_HYS_H Field     */
#define DCDC_REG0_HYST_LP_COMP_ADJ_MASK          (0x200000U)                                         /*!< DCDC_REG0.HYST_LP_COMP_ADJ Mask         */
#define DCDC_REG0_HYST_LP_COMP_ADJ_SHIFT         (21U)                                               /*!< DCDC_REG0.HYST_LP_COMP_ADJ Position     */
#define DCDC_REG0_HYST_LP_COMP_ADJ(x)            (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< DCDC_REG0.HYST_LP_COMP_ADJ Field        */
#define DCDC_REG0_HYST_LP_CMP_DISABLE_MASK       (0x400000U)                                         /*!< DCDC_REG0.HYST_LP_CMP_DISABLE Mask      */
#define DCDC_REG0_HYST_LP_CMP_DISABLE_SHIFT      (22U)                                               /*!< DCDC_REG0.HYST_LP_CMP_DISABLE Position  */
#define DCDC_REG0_HYST_LP_CMP_DISABLE(x)         (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< DCDC_REG0.HYST_LP_CMP_DISABLE Field     */
#define DCDC_REG0_OFFSET_RSNS_LP_ADJ_MASK        (0x800000U)                                         /*!< DCDC_REG0.OFFSET_RSNS_LP_ADJ Mask       */
#define DCDC_REG0_OFFSET_RSNS_LP_ADJ_SHIFT       (23U)                                               /*!< DCDC_REG0.OFFSET_RSNS_LP_ADJ Position   */
#define DCDC_REG0_OFFSET_RSNS_LP_ADJ(x)          (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< DCDC_REG0.OFFSET_RSNS_LP_ADJ Field      */
#define DCDC_REG0_OFFSET_RSNS_LP_DISABLE_MASK    (0x1000000U)                                        /*!< DCDC_REG0.OFFSET_RSNS_LP_DISABLE Mask   */
#define DCDC_REG0_OFFSET_RSNS_LP_DISABLE_SHIFT   (24U)                                               /*!< DCDC_REG0.OFFSET_RSNS_LP_DISABLE Position*/
#define DCDC_REG0_OFFSET_RSNS_LP_DISABLE(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< DCDC_REG0.OFFSET_RSNS_LP_DISABLE Field  */
#define DCDC_REG0_DCDC_LESS_I_MASK               (0x2000000U)                                        /*!< DCDC_REG0.DCDC_LESS_I Mask              */
#define DCDC_REG0_DCDC_LESS_I_SHIFT              (25U)                                               /*!< DCDC_REG0.DCDC_LESS_I Position          */
#define DCDC_REG0_DCDC_LESS_I(x)                 (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< DCDC_REG0.DCDC_LESS_I Field             */
#define DCDC_REG0_PWD_CMP_OFFSET_MASK            (0x4000000U)                                        /*!< DCDC_REG0.PWD_CMP_OFFSET Mask           */
#define DCDC_REG0_PWD_CMP_OFFSET_SHIFT           (26U)                                               /*!< DCDC_REG0.PWD_CMP_OFFSET Position       */
#define DCDC_REG0_PWD_CMP_OFFSET(x)              (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< DCDC_REG0.PWD_CMP_OFFSET Field          */
#define DCDC_REG0_DCDC_XTALOK_DISABLE_MASK       (0x8000000U)                                        /*!< DCDC_REG0.DCDC_XTALOK_DISABLE Mask      */
#define DCDC_REG0_DCDC_XTALOK_DISABLE_SHIFT      (27U)                                               /*!< DCDC_REG0.DCDC_XTALOK_DISABLE Position  */
#define DCDC_REG0_DCDC_XTALOK_DISABLE(x)         (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< DCDC_REG0.DCDC_XTALOK_DISABLE Field     */
#define DCDC_REG0_PSWITCH_STATUS_MASK            (0x10000000U)                                       /*!< DCDC_REG0.PSWITCH_STATUS Mask           */
#define DCDC_REG0_PSWITCH_STATUS_SHIFT           (28U)                                               /*!< DCDC_REG0.PSWITCH_STATUS Position       */
#define DCDC_REG0_PSWITCH_STATUS(x)              (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< DCDC_REG0.PSWITCH_STATUS Field          */
#define DCDC_REG0_VLPS_CONFIG_DCDC_HP_MASK       (0x20000000U)                                       /*!< DCDC_REG0.VLPS_CONFIG_DCDC_HP Mask      */
#define DCDC_REG0_VLPS_CONFIG_DCDC_HP_SHIFT      (29U)                                               /*!< DCDC_REG0.VLPS_CONFIG_DCDC_HP Position  */
#define DCDC_REG0_VLPS_CONFIG_DCDC_HP(x)         (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< DCDC_REG0.VLPS_CONFIG_DCDC_HP Field     */
#define DCDC_REG0_VLPR_VLPW_CONFIG_DCDC_HP_MASK  (0x40000000U)                                       /*!< DCDC_REG0.VLPR_VLPW_CONFIG_DCDC_HP Mask */
#define DCDC_REG0_VLPR_VLPW_CONFIG_DCDC_HP_SHIFT (30U)                                               /*!< DCDC_REG0.VLPR_VLPW_CONFIG_DCDC_HP Position*/
#define DCDC_REG0_VLPR_VLPW_CONFIG_DCDC_HP(x)    (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< DCDC_REG0.VLPR_VLPW_CONFIG_DCDC_HP Field*/
#define DCDC_REG0_DCDC_STS_DC_OK_MASK            (0x80000000U)                                       /*!< DCDC_REG0.DCDC_STS_DC_OK Mask           */
#define DCDC_REG0_DCDC_STS_DC_OK_SHIFT           (31U)                                               /*!< DCDC_REG0.DCDC_STS_DC_OK Position       */
#define DCDC_REG0_DCDC_STS_DC_OK(x)              (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< DCDC_REG0.DCDC_STS_DC_OK Field          */
/* ------- REG1 Bit Fields                          ------ */
#define DCDC_REG1_POSLIMIT_BUCK_IN_MASK          (0x7FU)                                             /*!< DCDC_REG1.POSLIMIT_BUCK_IN Mask         */
#define DCDC_REG1_POSLIMIT_BUCK_IN_SHIFT         (0U)                                                /*!< DCDC_REG1.POSLIMIT_BUCK_IN Position     */
#define DCDC_REG1_POSLIMIT_BUCK_IN(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< DCDC_REG1.POSLIMIT_BUCK_IN Field        */
#define DCDC_REG1_POSLIMIT_BOOST_IN_MASK         (0x3F80U)                                           /*!< DCDC_REG1.POSLIMIT_BOOST_IN Mask        */
#define DCDC_REG1_POSLIMIT_BOOST_IN_SHIFT        (7U)                                                /*!< DCDC_REG1.POSLIMIT_BOOST_IN Position    */
#define DCDC_REG1_POSLIMIT_BOOST_IN(x)           (((uint32_t)(((uint32_t)(x))<<7U))&0x3F80UL)        /*!< DCDC_REG1.POSLIMIT_BOOST_IN Field       */
#define DCDC_REG1_DCDC_LOOPCTRL_CM_HST_THRESH_MASK (0x200000U)                                       /*!< DCDC_REG1.DCDC_LOOPCTRL_CM_HST_THRESH Mask*/
#define DCDC_REG1_DCDC_LOOPCTRL_CM_HST_THRESH_SHIFT (21U)                                            /*!< DCDC_REG1.DCDC_LOOPCTRL_CM_HST_THRESH Position*/
#define DCDC_REG1_DCDC_LOOPCTRL_CM_HST_THRESH(x) (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< DCDC_REG1.DCDC_LOOPCTRL_CM_HST_THRESH Field*/
#define DCDC_REG1_DCDC_LOOPCTRL_DF_HST_THRESH_MASK (0x400000U)                                       /*!< DCDC_REG1.DCDC_LOOPCTRL_DF_HST_THRESH Mask*/
#define DCDC_REG1_DCDC_LOOPCTRL_DF_HST_THRESH_SHIFT (22U)                                            /*!< DCDC_REG1.DCDC_LOOPCTRL_DF_HST_THRESH Position*/
#define DCDC_REG1_DCDC_LOOPCTRL_DF_HST_THRESH(x) (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< DCDC_REG1.DCDC_LOOPCTRL_DF_HST_THRESH Field*/
#define DCDC_REG1_DCDC_LOOPCTRL_EN_CM_HYST_MASK  (0x800000U)                                         /*!< DCDC_REG1.DCDC_LOOPCTRL_EN_CM_HYST Mask */
#define DCDC_REG1_DCDC_LOOPCTRL_EN_CM_HYST_SHIFT (23U)                                               /*!< DCDC_REG1.DCDC_LOOPCTRL_EN_CM_HYST Position*/
#define DCDC_REG1_DCDC_LOOPCTRL_EN_CM_HYST(x)    (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< DCDC_REG1.DCDC_LOOPCTRL_EN_CM_HYST Field*/
#define DCDC_REG1_DCDC_LOOPCTRL_EN_DF_HYST_MASK  (0x1000000U)                                        /*!< DCDC_REG1.DCDC_LOOPCTRL_EN_DF_HYST Mask */
#define DCDC_REG1_DCDC_LOOPCTRL_EN_DF_HYST_SHIFT (24U)                                               /*!< DCDC_REG1.DCDC_LOOPCTRL_EN_DF_HYST Position*/
#define DCDC_REG1_DCDC_LOOPCTRL_EN_DF_HYST(x)    (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< DCDC_REG1.DCDC_LOOPCTRL_EN_DF_HYST Field*/
/* ------- REG2 Bit Fields                          ------ */
#define DCDC_REG2_DCDC_LOOPCTRL_HYST_SIGN_MASK   (0x2000U)                                           /*!< DCDC_REG2.DCDC_LOOPCTRL_HYST_SIGN Mask  */
#define DCDC_REG2_DCDC_LOOPCTRL_HYST_SIGN_SHIFT  (13U)                                               /*!< DCDC_REG2.DCDC_LOOPCTRL_HYST_SIGN Position*/
#define DCDC_REG2_DCDC_LOOPCTRL_HYST_SIGN(x)     (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< DCDC_REG2.DCDC_LOOPCTRL_HYST_SIGN Field */
#define DCDC_REG2_DCDC_BATTMONITOR_EN_BATADJ_MASK (0x8000U)                                          /*!< DCDC_REG2.DCDC_BATTMONITOR_EN_BATADJ Mask*/
#define DCDC_REG2_DCDC_BATTMONITOR_EN_BATADJ_SHIFT (15U)                                             /*!< DCDC_REG2.DCDC_BATTMONITOR_EN_BATADJ Position*/
#define DCDC_REG2_DCDC_BATTMONITOR_EN_BATADJ(x)  (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< DCDC_REG2.DCDC_BATTMONITOR_EN_BATADJ Field*/
#define DCDC_REG2_DCDC_BATTMONITOR_BATT_VAL_MASK (0x3FF0000U)                                        /*!< DCDC_REG2.DCDC_BATTMONITOR_BATT_VAL Mask*/
#define DCDC_REG2_DCDC_BATTMONITOR_BATT_VAL_SHIFT (16U)                                              /*!< DCDC_REG2.DCDC_BATTMONITOR_BATT_VAL Position*/
#define DCDC_REG2_DCDC_BATTMONITOR_BATT_VAL(x)   (((uint32_t)(((uint32_t)(x))<<16U))&0x3FF0000UL)    /*!< DCDC_REG2.DCDC_BATTMONITOR_BATT_VAL Field*/
/* ------- REG3 Bit Fields                          ------ */
#define DCDC_REG3_DCDC_VDD1P8CTRL_TRG_MASK       (0x3FU)                                             /*!< DCDC_REG3.DCDC_VDD1P8CTRL_TRG Mask      */
#define DCDC_REG3_DCDC_VDD1P8CTRL_TRG_SHIFT      (0U)                                                /*!< DCDC_REG3.DCDC_VDD1P8CTRL_TRG Position  */
#define DCDC_REG3_DCDC_VDD1P8CTRL_TRG(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< DCDC_REG3.DCDC_VDD1P8CTRL_TRG Field     */
#define DCDC_REG3_DCDC_VDD1P5CTRL_TRG_BUCK_MASK  (0x7C0U)                                            /*!< DCDC_REG3.DCDC_VDD1P5CTRL_TRG_BUCK Mask */
#define DCDC_REG3_DCDC_VDD1P5CTRL_TRG_BUCK_SHIFT (6U)                                                /*!< DCDC_REG3.DCDC_VDD1P5CTRL_TRG_BUCK Position*/
#define DCDC_REG3_DCDC_VDD1P5CTRL_TRG_BUCK(x)    (((uint32_t)(((uint32_t)(x))<<6U))&0x7C0UL)         /*!< DCDC_REG3.DCDC_VDD1P5CTRL_TRG_BUCK Field*/
#define DCDC_REG3_DCDC_VDD1P5CTRL_TRG_BOOST_MASK (0xF800U)                                           /*!< DCDC_REG3.DCDC_VDD1P5CTRL_TRG_BOOST Mask*/
#define DCDC_REG3_DCDC_VDD1P5CTRL_TRG_BOOST_SHIFT (11U)                                              /*!< DCDC_REG3.DCDC_VDD1P5CTRL_TRG_BOOST Position*/
#define DCDC_REG3_DCDC_VDD1P5CTRL_TRG_BOOST(x)   (((uint32_t)(((uint32_t)(x))<<11U))&0xF800UL)       /*!< DCDC_REG3.DCDC_VDD1P5CTRL_TRG_BOOST Field*/
#define DCDC_REG3_DCDC_VDD1P5CTRL_ADJTN_MASK     (0x1E0000U)                                         /*!< DCDC_REG3.DCDC_VDD1P5CTRL_ADJTN Mask    */
#define DCDC_REG3_DCDC_VDD1P5CTRL_ADJTN_SHIFT    (17U)                                               /*!< DCDC_REG3.DCDC_VDD1P5CTRL_ADJTN Position*/
#define DCDC_REG3_DCDC_VDD1P5CTRL_ADJTN(x)       (((uint32_t)(((uint32_t)(x))<<17U))&0x1E0000UL)     /*!< DCDC_REG3.DCDC_VDD1P5CTRL_ADJTN Field   */
#define DCDC_REG3_DCDC_MINPWR_DC_HALFCLK_PULSED_MASK (0x200000U)                                     /*!< DCDC_REG3.DCDC_MINPWR_DC_HALFCLK_PULSED Mask*/
#define DCDC_REG3_DCDC_MINPWR_DC_HALFCLK_PULSED_SHIFT (21U)                                          /*!< DCDC_REG3.DCDC_MINPWR_DC_HALFCLK_PULSED Position*/
#define DCDC_REG3_DCDC_MINPWR_DC_HALFCLK_PULSED(x) (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)   /*!< DCDC_REG3.DCDC_MINPWR_DC_HALFCLK_PULSED Field*/
#define DCDC_REG3_DCDC_MINPWR_DOUBLE_FETS_PULSED_MASK (0x400000U)                                    /*!< DCDC_REG3.DCDC_MINPWR_DOUBLE_FETS_PULSED Mask*/
#define DCDC_REG3_DCDC_MINPWR_DOUBLE_FETS_PULSED_SHIFT (22U)                                         /*!< DCDC_REG3.DCDC_MINPWR_DOUBLE_FETS_PULSED Position*/
#define DCDC_REG3_DCDC_MINPWR_DOUBLE_FETS_PULSED(x) (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)  /*!< DCDC_REG3.DCDC_MINPWR_DOUBLE_FETS_PULSED Field*/
#define DCDC_REG3_DCDC_MINPWR_HALF_FETS_PULSED_MASK (0x800000U)                                      /*!< DCDC_REG3.DCDC_MINPWR_HALF_FETS_PULSED Mask*/
#define DCDC_REG3_DCDC_MINPWR_HALF_FETS_PULSED_SHIFT (23U)                                           /*!< DCDC_REG3.DCDC_MINPWR_HALF_FETS_PULSED Position*/
#define DCDC_REG3_DCDC_MINPWR_HALF_FETS_PULSED(x) (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)    /*!< DCDC_REG3.DCDC_MINPWR_HALF_FETS_PULSED Field*/
#define DCDC_REG3_DCDC_MINPWR_DC_HALFCLK_MASK    (0x1000000U)                                        /*!< DCDC_REG3.DCDC_MINPWR_DC_HALFCLK Mask   */
#define DCDC_REG3_DCDC_MINPWR_DC_HALFCLK_SHIFT   (24U)                                               /*!< DCDC_REG3.DCDC_MINPWR_DC_HALFCLK Position*/
#define DCDC_REG3_DCDC_MINPWR_DC_HALFCLK(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< DCDC_REG3.DCDC_MINPWR_DC_HALFCLK Field  */
#define DCDC_REG3_DCDC_MINPWR_DOUBLE_FETS_MASK   (0x2000000U)                                        /*!< DCDC_REG3.DCDC_MINPWR_DOUBLE_FETS Mask  */
#define DCDC_REG3_DCDC_MINPWR_DOUBLE_FETS_SHIFT  (25U)                                               /*!< DCDC_REG3.DCDC_MINPWR_DOUBLE_FETS Position*/
#define DCDC_REG3_DCDC_MINPWR_DOUBLE_FETS(x)     (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< DCDC_REG3.DCDC_MINPWR_DOUBLE_FETS Field */
#define DCDC_REG3_DCDC_MINPWR_HALF_FETS_MASK     (0x4000000U)                                        /*!< DCDC_REG3.DCDC_MINPWR_HALF_FETS Mask    */
#define DCDC_REG3_DCDC_MINPWR_HALF_FETS_SHIFT    (26U)                                               /*!< DCDC_REG3.DCDC_MINPWR_HALF_FETS Position*/
#define DCDC_REG3_DCDC_MINPWR_HALF_FETS(x)       (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< DCDC_REG3.DCDC_MINPWR_HALF_FETS Field   */
#define DCDC_REG3_DCDC_VDD1P5CTRL_DISABLE_STEP_MASK (0x20000000U)                                    /*!< DCDC_REG3.DCDC_VDD1P5CTRL_DISABLE_STEP Mask*/
#define DCDC_REG3_DCDC_VDD1P5CTRL_DISABLE_STEP_SHIFT (29U)                                           /*!< DCDC_REG3.DCDC_VDD1P5CTRL_DISABLE_STEP Position*/
#define DCDC_REG3_DCDC_VDD1P5CTRL_DISABLE_STEP(x) (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)  /*!< DCDC_REG3.DCDC_VDD1P5CTRL_DISABLE_STEP Field*/
#define DCDC_REG3_DCDC_VDD1P8CTRL_DISABLE_STEP_MASK (0x40000000U)                                    /*!< DCDC_REG3.DCDC_VDD1P8CTRL_DISABLE_STEP Mask*/
#define DCDC_REG3_DCDC_VDD1P8CTRL_DISABLE_STEP_SHIFT (30U)                                           /*!< DCDC_REG3.DCDC_VDD1P8CTRL_DISABLE_STEP Position*/
#define DCDC_REG3_DCDC_VDD1P8CTRL_DISABLE_STEP(x) (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)  /*!< DCDC_REG3.DCDC_VDD1P8CTRL_DISABLE_STEP Field*/
/* ------- REG4 Bit Fields                          ------ */
#define DCDC_REG4_DCDC_SW_SHUTDOWN_MASK          (0x1U)                                              /*!< DCDC_REG4.DCDC_SW_SHUTDOWN Mask         */
#define DCDC_REG4_DCDC_SW_SHUTDOWN_SHIFT         (0U)                                                /*!< DCDC_REG4.DCDC_SW_SHUTDOWN Position     */
#define DCDC_REG4_DCDC_SW_SHUTDOWN(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< DCDC_REG4.DCDC_SW_SHUTDOWN Field        */
#define DCDC_REG4_UNLOCK_MASK                    (0xFFFF0000U)                                       /*!< DCDC_REG4.UNLOCK Mask                   */
#define DCDC_REG4_UNLOCK_SHIFT                   (16U)                                               /*!< DCDC_REG4.UNLOCK Position               */
#define DCDC_REG4_UNLOCK(x)                      (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< DCDC_REG4.UNLOCK Field                  */
/* ------- REG6 Bit Fields                          ------ */
#define DCDC_REG6_PSWITCH_INT_RISE_EN_MASK       (0x1U)                                              /*!< DCDC_REG6.PSWITCH_INT_RISE_EN Mask      */
#define DCDC_REG6_PSWITCH_INT_RISE_EN_SHIFT      (0U)                                                /*!< DCDC_REG6.PSWITCH_INT_RISE_EN Position  */
#define DCDC_REG6_PSWITCH_INT_RISE_EN(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< DCDC_REG6.PSWITCH_INT_RISE_EN Field     */
#define DCDC_REG6_PSWITCH_INT_FALL_EN_MASK       (0x2U)                                              /*!< DCDC_REG6.PSWITCH_INT_FALL_EN Mask      */
#define DCDC_REG6_PSWITCH_INT_FALL_EN_SHIFT      (1U)                                                /*!< DCDC_REG6.PSWITCH_INT_FALL_EN Position  */
#define DCDC_REG6_PSWITCH_INT_FALL_EN(x)         (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< DCDC_REG6.PSWITCH_INT_FALL_EN Field     */
#define DCDC_REG6_PSWITCH_INT_CLEAR_MASK         (0x4U)                                              /*!< DCDC_REG6.PSWITCH_INT_CLEAR Mask        */
#define DCDC_REG6_PSWITCH_INT_CLEAR_SHIFT        (2U)                                                /*!< DCDC_REG6.PSWITCH_INT_CLEAR Position    */
#define DCDC_REG6_PSWITCH_INT_CLEAR(x)           (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< DCDC_REG6.PSWITCH_INT_CLEAR Field       */
#define DCDC_REG6_PSWITCH_INT_MUTE_MASK          (0x8U)                                              /*!< DCDC_REG6.PSWITCH_INT_MUTE Mask         */
#define DCDC_REG6_PSWITCH_INT_MUTE_SHIFT         (3U)                                                /*!< DCDC_REG6.PSWITCH_INT_MUTE Position     */
#define DCDC_REG6_PSWITCH_INT_MUTE(x)            (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< DCDC_REG6.PSWITCH_INT_MUTE Field        */
#define DCDC_REG6_PSWITCH_INT_STS_MASK           (0x80000000U)                                       /*!< DCDC_REG6.PSWITCH_INT_STS Mask          */
#define DCDC_REG6_PSWITCH_INT_STS_SHIFT          (31U)                                               /*!< DCDC_REG6.PSWITCH_INT_STS Position      */
#define DCDC_REG6_PSWITCH_INT_STS(x)             (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< DCDC_REG6.PSWITCH_INT_STS Field         */
/* ------- REG7 Bit Fields                          ------ */
#define DCDC_REG7_INTEGRATOR_VALUE_MASK          (0x7FFFFU)                                          /*!< DCDC_REG7.INTEGRATOR_VALUE Mask         */
#define DCDC_REG7_INTEGRATOR_VALUE_SHIFT         (0U)                                                /*!< DCDC_REG7.INTEGRATOR_VALUE Position     */
#define DCDC_REG7_INTEGRATOR_VALUE(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFFFUL)       /*!< DCDC_REG7.INTEGRATOR_VALUE Field        */
#define DCDC_REG7_INTEGRATOR_VALUE_SEL_MASK      (0x80000U)                                          /*!< DCDC_REG7.INTEGRATOR_VALUE_SEL Mask     */
#define DCDC_REG7_INTEGRATOR_VALUE_SEL_SHIFT     (19U)                                               /*!< DCDC_REG7.INTEGRATOR_VALUE_SEL Position */
#define DCDC_REG7_INTEGRATOR_VALUE_SEL(x)        (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< DCDC_REG7.INTEGRATOR_VALUE_SEL Field    */
#define DCDC_REG7_PULSE_RUN_SPEEDUP_MASK         (0x100000U)                                         /*!< DCDC_REG7.PULSE_RUN_SPEEDUP Mask        */
#define DCDC_REG7_PULSE_RUN_SPEEDUP_SHIFT        (20U)                                               /*!< DCDC_REG7.PULSE_RUN_SPEEDUP Position    */
#define DCDC_REG7_PULSE_RUN_SPEEDUP(x)           (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< DCDC_REG7.PULSE_RUN_SPEEDUP Field       */
/**
 * @} */ /* End group DCDC_Register_Masks_GROUP 
 */

/* DCDC - Peripheral instance base addresses */
#define DCDC_BasePtr                   0x4005A000UL //!< Peripheral base address
#define DCDC                           ((DCDC_Type *) DCDC_BasePtr) //!< Freescale base pointer
#define DCDC_BASE_PTR                  (DCDC) //!< Freescale style base pointer
/**
 * @} */ /* End group DCDC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup DMA0_Peripheral_access_layer_GROUP DMA0 Peripheral Access Layer
* @brief C Struct for DMA0
* @{
*/

/* ================================================================================ */
/* ================           DMA0 (file:DMA0_4CH_EARS_ACTIVE)       ================ */
/* ================================================================================ */

/**
 * @brief Enhanced direct memory access controller
 */
/**
* @addtogroup DMA0_structs_GROUP DMA0 struct
* @brief Struct for DMA0
* @{
*/
typedef struct DMA_Type {
   __IO uint32_t  CR;                           /**< 0000: Control Register                                             */
   __I  uint32_t  ES;                           /**< 0004: Error Status Register                                        */
        uint8_t   RESERVED_0[4];                /**< 0008: 0x4 bytes                                                    */
   __IO uint32_t  ERQ;                          /**< 000C: Enable Request Register                                      */
        uint8_t   RESERVED_1[4];                /**< 0010: 0x4 bytes                                                    */
   __IO uint32_t  EEI;                          /**< 0014: Enable Error Interrupt Register                              */
   __O  uint8_t   CEEI;                         /**< 0018: Clear Enable Error Interrupt Register                        */
   __O  uint8_t   SEEI;                         /**< 0019: Set Enable Error Interrupt Register                          */
   __O  uint8_t   CERQ;                         /**< 001A: Clear Enable Request Register                                */
   __O  uint8_t   SERQ;                         /**< 001B: Set Enable Request Register                                  */
   __O  uint8_t   CDNE;                         /**< 001C: Clear DONE Status Bit Register                               */
   __O  uint8_t   SSRT;                         /**< 001D: Set START Bit Register                                       */
   __O  uint8_t   CERR;                         /**< 001E: Clear Error Register                                         */
   __O  uint8_t   CINT;                         /**< 001F: Clear Interrupt Request Register                             */
        uint8_t   RESERVED_2[4];                /**< 0020: 0x4 bytes                                                    */
   __IO uint32_t  INT;                          /**< 0024: Interrupt Request Register                                   */
        uint8_t   RESERVED_3[4];                /**< 0028: 0x4 bytes                                                    */
   __IO uint32_t  ERR;                          /**< 002C: Error Register                                               */
        uint8_t   RESERVED_4[4];                /**< 0030: 0x4 bytes                                                    */
   __I  uint32_t  HRS;                          /**< 0034: Hardware Request Status Register                             */
        uint8_t   RESERVED_5[12];               /**< 0038: 0xC bytes                                                    */
   __IO uint32_t  EARS;                         /**< 0044: Enable Asynchronous Request in Stop Register                 */
        uint8_t   RESERVED_6[184];              /**< 0048: 0xB8 bytes                                                   */
   union {                                      /**< 0100: (size=0004)                                                  */
      struct {                                  /**< 0100: (size=0004)                                                  */
      __IO uint8_t   DCHPRI3;                   /**< 0100: Channel 3 Priority Register                                  */
      __IO uint8_t   DCHPRI2;                   /**< 0101: Channel 2 Priority Register                                  */
      __IO uint8_t   DCHPRI1;                   /**< 0102: Channel 1 Priority Register                                  */
      __IO uint8_t   DCHPRI0;                   /**< 0103: Channel 0 Priority Register                                  */
      };
      __IO uint8_t   DCHPRI[4];                 /**< 0100: Channel  Priority Register                                   */
   };
        uint8_t   RESERVED_7[3836];             /**< 0104: 0xEFC bytes                                                  */
   struct {
      __IO uint32_t  SADDR;                     /**< 1000: Source Address                                               */
      __IO uint16_t  SOFF;                      /**< 1004: Signed Source Address Offset                                 */
      __IO uint16_t  ATTR;                      /**< 1006: Transfer Attributes                                          */
      union {                                   /**< 1008: (size=0004)                                                  */
         __IO uint32_t  NBYTES_MLNO;            /**< 1008: Minor Byte Count (Minor Loop Disabled)                       */
         __IO uint32_t  NBYTES_MLOFFNO;         /**< 1008: Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled) */
         __IO uint32_t  NBYTES_MLOFFYES;        /**< 1008: Signed Minor Loop Offset (Minor Loop and Offset Enabled)     */
      };
      __IO uint32_t  SLAST;                     /**< 100C: Last Source Address Adjustment                               */
      __IO uint32_t  DADDR;                     /**< 1010: Destination Address                                          */
      __IO uint16_t  DOFF;                      /**< 1014: Signed Destination Address Offset                            */
      union {                                   /**< 1016: (size=0002)                                                  */
         __IO uint16_t  CITER_ELINKNO;          /**< 1016: Current Minor Loop Link, Major Loop Count (Channel Linking Disabled) */
         __IO uint16_t  CITER_ELINKYES;         /**< 1016: Current Minor Loop Link, Major Loop Count (Channel Linking Enabled) */
      };
      __IO uint32_t  DLASTSGA;                  /**< 1018: Last Destination Address Adjustment/Scatter Gather Address   */
      __IO uint16_t  CSR;                       /**< 101C: Control and Status                                           */
      union {                                   /**< 101E: (size=0002)                                                  */
         __IO uint16_t  BITER_ELINKNO;          /**< 101E: Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled) */
         __IO uint16_t  BITER_ELINKYES;         /**< 101E: Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled) */
      };
   } TCD[4];                                    /**< 1000: (cluster: size=0x0080, 128)                                  */
} DMA_Type;

/**
 * @} */ /* End group DMA0_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'DMA0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup DMA0_Register_Masks_GROUP DMA0 Register Masks
* @brief Register Masks for DMA0
* @{
*/
/* ------- CR Bit Fields                            ------ */
#define DMA_CR_EDBG_MASK                         (0x2U)                                              /*!< DMA0_CR.EDBG Mask                       */
#define DMA_CR_EDBG_SHIFT                        (1U)                                                /*!< DMA0_CR.EDBG Position                   */
#define DMA_CR_EDBG(x)                           (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< DMA0_CR.EDBG Field                      */
#define DMA_CR_ERCA_MASK                         (0x4U)                                              /*!< DMA0_CR.ERCA Mask                       */
#define DMA_CR_ERCA_SHIFT                        (2U)                                                /*!< DMA0_CR.ERCA Position                   */
#define DMA_CR_ERCA(x)                           (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< DMA0_CR.ERCA Field                      */
#define DMA_CR_HOE_MASK                          (0x10U)                                             /*!< DMA0_CR.HOE Mask                        */
#define DMA_CR_HOE_SHIFT                         (4U)                                                /*!< DMA0_CR.HOE Position                    */
#define DMA_CR_HOE(x)                            (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< DMA0_CR.HOE Field                       */
#define DMA_CR_HALT_MASK                         (0x20U)                                             /*!< DMA0_CR.HALT Mask                       */
#define DMA_CR_HALT_SHIFT                        (5U)                                                /*!< DMA0_CR.HALT Position                   */
#define DMA_CR_HALT(x)                           (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< DMA0_CR.HALT Field                      */
#define DMA_CR_CLM_MASK                          (0x40U)                                             /*!< DMA0_CR.CLM Mask                        */
#define DMA_CR_CLM_SHIFT                         (6U)                                                /*!< DMA0_CR.CLM Position                    */
#define DMA_CR_CLM(x)                            (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< DMA0_CR.CLM Field                       */
#define DMA_CR_EMLM_MASK                         (0x80U)                                             /*!< DMA0_CR.EMLM Mask                       */
#define DMA_CR_EMLM_SHIFT                        (7U)                                                /*!< DMA0_CR.EMLM Position                   */
#define DMA_CR_EMLM(x)                           (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< DMA0_CR.EMLM Field                      */
#define DMA_CR_ECX_MASK                          (0x10000U)                                          /*!< DMA0_CR.ECX Mask                        */
#define DMA_CR_ECX_SHIFT                         (16U)                                               /*!< DMA0_CR.ECX Position                    */
#define DMA_CR_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< DMA0_CR.ECX Field                       */
#define DMA_CR_CX_MASK                           (0x20000U)                                          /*!< DMA0_CR.CX Mask                         */
#define DMA_CR_CX_SHIFT                          (17U)                                               /*!< DMA0_CR.CX Position                     */
#define DMA_CR_CX(x)                             (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< DMA0_CR.CX Field                        */
#define DMA_CR_ACTIVE_MASK                       (0x80000000U)                                       /*!< DMA0_CR.ACTIVE Mask                     */
#define DMA_CR_ACTIVE_SHIFT                      (31U)                                               /*!< DMA0_CR.ACTIVE Position                 */
#define DMA_CR_ACTIVE(x)                         (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< DMA0_CR.ACTIVE Field                    */
/* ------- ES Bit Fields                            ------ */
#define DMA_ES_DBE_MASK                          (0x1U)                                              /*!< DMA0_ES.DBE Mask                        */
#define DMA_ES_DBE_SHIFT                         (0U)                                                /*!< DMA0_ES.DBE Position                    */
#define DMA_ES_DBE(x)                            (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< DMA0_ES.DBE Field                       */
#define DMA_ES_SBE_MASK                          (0x2U)                                              /*!< DMA0_ES.SBE Mask                        */
#define DMA_ES_SBE_SHIFT                         (1U)                                                /*!< DMA0_ES.SBE Position                    */
#define DMA_ES_SBE(x)                            (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< DMA0_ES.SBE Field                       */
#define DMA_ES_SGE_MASK                          (0x4U)                                              /*!< DMA0_ES.SGE Mask                        */
#define DMA_ES_SGE_SHIFT                         (2U)                                                /*!< DMA0_ES.SGE Position                    */
#define DMA_ES_SGE(x)                            (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< DMA0_ES.SGE Field                       */
#define DMA_ES_NCE_MASK                          (0x8U)                                              /*!< DMA0_ES.NCE Mask                        */
#define DMA_ES_NCE_SHIFT                         (3U)                                                /*!< DMA0_ES.NCE Position                    */
#define DMA_ES_NCE(x)                            (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< DMA0_ES.NCE Field                       */
#define DMA_ES_DOE_MASK                          (0x10U)                                             /*!< DMA0_ES.DOE Mask                        */
#define DMA_ES_DOE_SHIFT                         (4U)                                                /*!< DMA0_ES.DOE Position                    */
#define DMA_ES_DOE(x)                            (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< DMA0_ES.DOE Field                       */
#define DMA_ES_DAE_MASK                          (0x20U)                                             /*!< DMA0_ES.DAE Mask                        */
#define DMA_ES_DAE_SHIFT                         (5U)                                                /*!< DMA0_ES.DAE Position                    */
#define DMA_ES_DAE(x)                            (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< DMA0_ES.DAE Field                       */
#define DMA_ES_SOE_MASK                          (0x40U)                                             /*!< DMA0_ES.SOE Mask                        */
#define DMA_ES_SOE_SHIFT                         (6U)                                                /*!< DMA0_ES.SOE Position                    */
#define DMA_ES_SOE(x)                            (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< DMA0_ES.SOE Field                       */
#define DMA_ES_SAE_MASK                          (0x80U)                                             /*!< DMA0_ES.SAE Mask                        */
#define DMA_ES_SAE_SHIFT                         (7U)                                                /*!< DMA0_ES.SAE Position                    */
#define DMA_ES_SAE(x)                            (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< DMA0_ES.SAE Field                       */
#define DMA_ES_ERRCHN_MASK                       (0x300U)                                            /*!< DMA0_ES.ERRCHN Mask                     */
#define DMA_ES_ERRCHN_SHIFT                      (8U)                                                /*!< DMA0_ES.ERRCHN Position                 */
#define DMA_ES_ERRCHN(x)                         (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)         /*!< DMA0_ES.ERRCHN Field                    */
#define DMA_ES_CPE_MASK                          (0x4000U)                                           /*!< DMA0_ES.CPE Mask                        */
#define DMA_ES_CPE_SHIFT                         (14U)                                               /*!< DMA0_ES.CPE Position                    */
#define DMA_ES_CPE(x)                            (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< DMA0_ES.CPE Field                       */
#define DMA_ES_ECX_MASK                          (0x10000U)                                          /*!< DMA0_ES.ECX Mask                        */
#define DMA_ES_ECX_SHIFT                         (16U)                                               /*!< DMA0_ES.ECX Position                    */
#define DMA_ES_ECX(x)                            (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< DMA0_ES.ECX Field                       */
#define DMA_ES_VLD_MASK                          (0x80000000U)                                       /*!< DMA0_ES.VLD Mask                        */
#define DMA_ES_VLD_SHIFT                         (31U)                                               /*!< DMA0_ES.VLD Position                    */
#define DMA_ES_VLD(x)                            (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< DMA0_ES.VLD Field                       */
/* ------- ERQ Bit Fields                           ------ */
#define DMA_ERQ_ERQ0_MASK                        (0x1U)                                              /*!< DMA0_ERQ.ERQ0 Mask                      */
#define DMA_ERQ_ERQ0_SHIFT                       (0U)                                                /*!< DMA0_ERQ.ERQ0 Position                  */
#define DMA_ERQ_ERQ0(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< DMA0_ERQ.ERQ0 Field                     */
#define DMA_ERQ_ERQ1_MASK                        (0x2U)                                              /*!< DMA0_ERQ.ERQ1 Mask                      */
#define DMA_ERQ_ERQ1_SHIFT                       (1U)                                                /*!< DMA0_ERQ.ERQ1 Position                  */
#define DMA_ERQ_ERQ1(x)                          (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< DMA0_ERQ.ERQ1 Field                     */
#define DMA_ERQ_ERQ2_MASK                        (0x4U)                                              /*!< DMA0_ERQ.ERQ2 Mask                      */
#define DMA_ERQ_ERQ2_SHIFT                       (2U)                                                /*!< DMA0_ERQ.ERQ2 Position                  */
#define DMA_ERQ_ERQ2(x)                          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< DMA0_ERQ.ERQ2 Field                     */
#define DMA_ERQ_ERQ3_MASK                        (0x8U)                                              /*!< DMA0_ERQ.ERQ3 Mask                      */
#define DMA_ERQ_ERQ3_SHIFT                       (3U)                                                /*!< DMA0_ERQ.ERQ3 Position                  */
#define DMA_ERQ_ERQ3(x)                          (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< DMA0_ERQ.ERQ3 Field                     */
/* ------- EEI Bit Fields                           ------ */
#define DMA_EEI_EEI0_MASK                        (0x1U)                                              /*!< DMA0_EEI.EEI0 Mask                      */
#define DMA_EEI_EEI0_SHIFT                       (0U)                                                /*!< DMA0_EEI.EEI0 Position                  */
#define DMA_EEI_EEI0(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< DMA0_EEI.EEI0 Field                     */
#define DMA_EEI_EEI1_MASK                        (0x2U)                                              /*!< DMA0_EEI.EEI1 Mask                      */
#define DMA_EEI_EEI1_SHIFT                       (1U)                                                /*!< DMA0_EEI.EEI1 Position                  */
#define DMA_EEI_EEI1(x)                          (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< DMA0_EEI.EEI1 Field                     */
#define DMA_EEI_EEI2_MASK                        (0x4U)                                              /*!< DMA0_EEI.EEI2 Mask                      */
#define DMA_EEI_EEI2_SHIFT                       (2U)                                                /*!< DMA0_EEI.EEI2 Position                  */
#define DMA_EEI_EEI2(x)                          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< DMA0_EEI.EEI2 Field                     */
#define DMA_EEI_EEI3_MASK                        (0x8U)                                              /*!< DMA0_EEI.EEI3 Mask                      */
#define DMA_EEI_EEI3_SHIFT                       (3U)                                                /*!< DMA0_EEI.EEI3 Position                  */
#define DMA_EEI_EEI3(x)                          (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< DMA0_EEI.EEI3 Field                     */
/* ------- CEEI Bit Fields                          ------ */
#define DMA_CEEI_CEEI_MASK                       (0x3U)                                              /*!< DMA0_CEEI.CEEI Mask                     */
#define DMA_CEEI_CEEI_SHIFT                      (0U)                                                /*!< DMA0_CEEI.CEEI Position                 */
#define DMA_CEEI_CEEI(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< DMA0_CEEI.CEEI Field                    */
#define DMA_CEEI_CAEE_MASK                       (0x40U)                                             /*!< DMA0_CEEI.CAEE Mask                     */
#define DMA_CEEI_CAEE_SHIFT                      (6U)                                                /*!< DMA0_CEEI.CAEE Position                 */
#define DMA_CEEI_CAEE(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DMA0_CEEI.CAEE Field                    */
#define DMA_CEEI_NOP_MASK                        (0x80U)                                             /*!< DMA0_CEEI.NOP Mask                      */
#define DMA_CEEI_NOP_SHIFT                       (7U)                                                /*!< DMA0_CEEI.NOP Position                  */
#define DMA_CEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DMA0_CEEI.NOP Field                     */
/* ------- SEEI Bit Fields                          ------ */
#define DMA_SEEI_SEEI_MASK                       (0x3U)                                              /*!< DMA0_SEEI.SEEI Mask                     */
#define DMA_SEEI_SEEI_SHIFT                      (0U)                                                /*!< DMA0_SEEI.SEEI Position                 */
#define DMA_SEEI_SEEI(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< DMA0_SEEI.SEEI Field                    */
#define DMA_SEEI_SAEE_MASK                       (0x40U)                                             /*!< DMA0_SEEI.SAEE Mask                     */
#define DMA_SEEI_SAEE_SHIFT                      (6U)                                                /*!< DMA0_SEEI.SAEE Position                 */
#define DMA_SEEI_SAEE(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DMA0_SEEI.SAEE Field                    */
#define DMA_SEEI_NOP_MASK                        (0x80U)                                             /*!< DMA0_SEEI.NOP Mask                      */
#define DMA_SEEI_NOP_SHIFT                       (7U)                                                /*!< DMA0_SEEI.NOP Position                  */
#define DMA_SEEI_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DMA0_SEEI.NOP Field                     */
/* ------- CERQ Bit Fields                          ------ */
#define DMA_CERQ_CERQ_MASK                       (0x3U)                                              /*!< DMA0_CERQ.CERQ Mask                     */
#define DMA_CERQ_CERQ_SHIFT                      (0U)                                                /*!< DMA0_CERQ.CERQ Position                 */
#define DMA_CERQ_CERQ(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< DMA0_CERQ.CERQ Field                    */
#define DMA_CERQ_CAER_MASK                       (0x40U)                                             /*!< DMA0_CERQ.CAER Mask                     */
#define DMA_CERQ_CAER_SHIFT                      (6U)                                                /*!< DMA0_CERQ.CAER Position                 */
#define DMA_CERQ_CAER(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DMA0_CERQ.CAER Field                    */
#define DMA_CERQ_NOP_MASK                        (0x80U)                                             /*!< DMA0_CERQ.NOP Mask                      */
#define DMA_CERQ_NOP_SHIFT                       (7U)                                                /*!< DMA0_CERQ.NOP Position                  */
#define DMA_CERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DMA0_CERQ.NOP Field                     */
/* ------- SERQ Bit Fields                          ------ */
#define DMA_SERQ_SERQ_MASK                       (0x3U)                                              /*!< DMA0_SERQ.SERQ Mask                     */
#define DMA_SERQ_SERQ_SHIFT                      (0U)                                                /*!< DMA0_SERQ.SERQ Position                 */
#define DMA_SERQ_SERQ(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< DMA0_SERQ.SERQ Field                    */
#define DMA_SERQ_SAER_MASK                       (0x40U)                                             /*!< DMA0_SERQ.SAER Mask                     */
#define DMA_SERQ_SAER_SHIFT                      (6U)                                                /*!< DMA0_SERQ.SAER Position                 */
#define DMA_SERQ_SAER(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DMA0_SERQ.SAER Field                    */
#define DMA_SERQ_NOP_MASK                        (0x80U)                                             /*!< DMA0_SERQ.NOP Mask                      */
#define DMA_SERQ_NOP_SHIFT                       (7U)                                                /*!< DMA0_SERQ.NOP Position                  */
#define DMA_SERQ_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DMA0_SERQ.NOP Field                     */
/* ------- CDNE Bit Fields                          ------ */
#define DMA_CDNE_CDNE_MASK                       (0x3U)                                              /*!< DMA0_CDNE.CDNE Mask                     */
#define DMA_CDNE_CDNE_SHIFT                      (0U)                                                /*!< DMA0_CDNE.CDNE Position                 */
#define DMA_CDNE_CDNE(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< DMA0_CDNE.CDNE Field                    */
#define DMA_CDNE_CADN_MASK                       (0x40U)                                             /*!< DMA0_CDNE.CADN Mask                     */
#define DMA_CDNE_CADN_SHIFT                      (6U)                                                /*!< DMA0_CDNE.CADN Position                 */
#define DMA_CDNE_CADN(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DMA0_CDNE.CADN Field                    */
#define DMA_CDNE_NOP_MASK                        (0x80U)                                             /*!< DMA0_CDNE.NOP Mask                      */
#define DMA_CDNE_NOP_SHIFT                       (7U)                                                /*!< DMA0_CDNE.NOP Position                  */
#define DMA_CDNE_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DMA0_CDNE.NOP Field                     */
/* ------- SSRT Bit Fields                          ------ */
#define DMA_SSRT_SSRT_MASK                       (0x3U)                                              /*!< DMA0_SSRT.SSRT Mask                     */
#define DMA_SSRT_SSRT_SHIFT                      (0U)                                                /*!< DMA0_SSRT.SSRT Position                 */
#define DMA_SSRT_SSRT(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< DMA0_SSRT.SSRT Field                    */
#define DMA_SSRT_SAST_MASK                       (0x40U)                                             /*!< DMA0_SSRT.SAST Mask                     */
#define DMA_SSRT_SAST_SHIFT                      (6U)                                                /*!< DMA0_SSRT.SAST Position                 */
#define DMA_SSRT_SAST(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DMA0_SSRT.SAST Field                    */
#define DMA_SSRT_NOP_MASK                        (0x80U)                                             /*!< DMA0_SSRT.NOP Mask                      */
#define DMA_SSRT_NOP_SHIFT                       (7U)                                                /*!< DMA0_SSRT.NOP Position                  */
#define DMA_SSRT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DMA0_SSRT.NOP Field                     */
/* ------- CERR Bit Fields                          ------ */
#define DMA_CERR_CERR_MASK                       (0x3U)                                              /*!< DMA0_CERR.CERR Mask                     */
#define DMA_CERR_CERR_SHIFT                      (0U)                                                /*!< DMA0_CERR.CERR Position                 */
#define DMA_CERR_CERR(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< DMA0_CERR.CERR Field                    */
#define DMA_CERR_CAEI_MASK                       (0x40U)                                             /*!< DMA0_CERR.CAEI Mask                     */
#define DMA_CERR_CAEI_SHIFT                      (6U)                                                /*!< DMA0_CERR.CAEI Position                 */
#define DMA_CERR_CAEI(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DMA0_CERR.CAEI Field                    */
#define DMA_CERR_NOP_MASK                        (0x80U)                                             /*!< DMA0_CERR.NOP Mask                      */
#define DMA_CERR_NOP_SHIFT                       (7U)                                                /*!< DMA0_CERR.NOP Position                  */
#define DMA_CERR_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DMA0_CERR.NOP Field                     */
/* ------- CINT Bit Fields                          ------ */
#define DMA_CINT_CINT_MASK                       (0x3U)                                              /*!< DMA0_CINT.CINT Mask                     */
#define DMA_CINT_CINT_SHIFT                      (0U)                                                /*!< DMA0_CINT.CINT Position                 */
#define DMA_CINT_CINT(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< DMA0_CINT.CINT Field                    */
#define DMA_CINT_CAIR_MASK                       (0x40U)                                             /*!< DMA0_CINT.CAIR Mask                     */
#define DMA_CINT_CAIR_SHIFT                      (6U)                                                /*!< DMA0_CINT.CAIR Position                 */
#define DMA_CINT_CAIR(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DMA0_CINT.CAIR Field                    */
#define DMA_CINT_NOP_MASK                        (0x80U)                                             /*!< DMA0_CINT.NOP Mask                      */
#define DMA_CINT_NOP_SHIFT                       (7U)                                                /*!< DMA0_CINT.NOP Position                  */
#define DMA_CINT_NOP(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DMA0_CINT.NOP Field                     */
/* ------- INT Bit Fields                           ------ */
#define DMA_INT_INT0_MASK                        (0x1U)                                              /*!< DMA0_INT.INT0 Mask                      */
#define DMA_INT_INT0_SHIFT                       (0U)                                                /*!< DMA0_INT.INT0 Position                  */
#define DMA_INT_INT0(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< DMA0_INT.INT0 Field                     */
#define DMA_INT_INT1_MASK                        (0x2U)                                              /*!< DMA0_INT.INT1 Mask                      */
#define DMA_INT_INT1_SHIFT                       (1U)                                                /*!< DMA0_INT.INT1 Position                  */
#define DMA_INT_INT1(x)                          (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< DMA0_INT.INT1 Field                     */
#define DMA_INT_INT2_MASK                        (0x4U)                                              /*!< DMA0_INT.INT2 Mask                      */
#define DMA_INT_INT2_SHIFT                       (2U)                                                /*!< DMA0_INT.INT2 Position                  */
#define DMA_INT_INT2(x)                          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< DMA0_INT.INT2 Field                     */
#define DMA_INT_INT3_MASK                        (0x8U)                                              /*!< DMA0_INT.INT3 Mask                      */
#define DMA_INT_INT3_SHIFT                       (3U)                                                /*!< DMA0_INT.INT3 Position                  */
#define DMA_INT_INT3(x)                          (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< DMA0_INT.INT3 Field                     */
/* ------- ERR Bit Fields                           ------ */
#define DMA_ERR_ERR0_MASK                        (0x1U)                                              /*!< DMA0_ERR.ERR0 Mask                      */
#define DMA_ERR_ERR0_SHIFT                       (0U)                                                /*!< DMA0_ERR.ERR0 Position                  */
#define DMA_ERR_ERR0(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< DMA0_ERR.ERR0 Field                     */
#define DMA_ERR_ERR1_MASK                        (0x2U)                                              /*!< DMA0_ERR.ERR1 Mask                      */
#define DMA_ERR_ERR1_SHIFT                       (1U)                                                /*!< DMA0_ERR.ERR1 Position                  */
#define DMA_ERR_ERR1(x)                          (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< DMA0_ERR.ERR1 Field                     */
#define DMA_ERR_ERR2_MASK                        (0x4U)                                              /*!< DMA0_ERR.ERR2 Mask                      */
#define DMA_ERR_ERR2_SHIFT                       (2U)                                                /*!< DMA0_ERR.ERR2 Position                  */
#define DMA_ERR_ERR2(x)                          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< DMA0_ERR.ERR2 Field                     */
#define DMA_ERR_ERR3_MASK                        (0x8U)                                              /*!< DMA0_ERR.ERR3 Mask                      */
#define DMA_ERR_ERR3_SHIFT                       (3U)                                                /*!< DMA0_ERR.ERR3 Position                  */
#define DMA_ERR_ERR3(x)                          (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< DMA0_ERR.ERR3 Field                     */
/* ------- HRS Bit Fields                           ------ */
#define DMA_HRS_HRS0_MASK                        (0x1U)                                              /*!< DMA0_HRS.HRS0 Mask                      */
#define DMA_HRS_HRS0_SHIFT                       (0U)                                                /*!< DMA0_HRS.HRS0 Position                  */
#define DMA_HRS_HRS0(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< DMA0_HRS.HRS0 Field                     */
#define DMA_HRS_HRS1_MASK                        (0x2U)                                              /*!< DMA0_HRS.HRS1 Mask                      */
#define DMA_HRS_HRS1_SHIFT                       (1U)                                                /*!< DMA0_HRS.HRS1 Position                  */
#define DMA_HRS_HRS1(x)                          (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< DMA0_HRS.HRS1 Field                     */
#define DMA_HRS_HRS2_MASK                        (0x4U)                                              /*!< DMA0_HRS.HRS2 Mask                      */
#define DMA_HRS_HRS2_SHIFT                       (2U)                                                /*!< DMA0_HRS.HRS2 Position                  */
#define DMA_HRS_HRS2(x)                          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< DMA0_HRS.HRS2 Field                     */
#define DMA_HRS_HRS3_MASK                        (0x8U)                                              /*!< DMA0_HRS.HRS3 Mask                      */
#define DMA_HRS_HRS3_SHIFT                       (3U)                                                /*!< DMA0_HRS.HRS3 Position                  */
#define DMA_HRS_HRS3(x)                          (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< DMA0_HRS.HRS3 Field                     */
/* ------- EARS Bit Fields                          ------ */
#define DMA_EARS_EDREQ_0_MASK                    (0x1U)                                              /*!< DMA0_EARS.EDREQ_0 Mask                  */
#define DMA_EARS_EDREQ_0_SHIFT                   (0U)                                                /*!< DMA0_EARS.EDREQ_0 Position              */
#define DMA_EARS_EDREQ_0(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< DMA0_EARS.EDREQ_0 Field                 */
#define DMA_EARS_EDREQ_1_MASK                    (0x2U)                                              /*!< DMA0_EARS.EDREQ_1 Mask                  */
#define DMA_EARS_EDREQ_1_SHIFT                   (1U)                                                /*!< DMA0_EARS.EDREQ_1 Position              */
#define DMA_EARS_EDREQ_1(x)                      (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< DMA0_EARS.EDREQ_1 Field                 */
#define DMA_EARS_EDREQ_2_MASK                    (0x4U)                                              /*!< DMA0_EARS.EDREQ_2 Mask                  */
#define DMA_EARS_EDREQ_2_SHIFT                   (2U)                                                /*!< DMA0_EARS.EDREQ_2 Position              */
#define DMA_EARS_EDREQ_2(x)                      (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< DMA0_EARS.EDREQ_2 Field                 */
#define DMA_EARS_EDREQ_3_MASK                    (0x8U)                                              /*!< DMA0_EARS.EDREQ_3 Mask                  */
#define DMA_EARS_EDREQ_3_SHIFT                   (3U)                                                /*!< DMA0_EARS.EDREQ_3 Position              */
#define DMA_EARS_EDREQ_3(x)                      (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< DMA0_EARS.EDREQ_3 Field                 */
/* ------- DCHPRI Bit Fields                        ------ */
#define DMA_DCHPRI_CHPRI_MASK                    (0x3U)                                              /*!< DMA0_DCHPRI.CHPRI Mask                  */
#define DMA_DCHPRI_CHPRI_SHIFT                   (0U)                                                /*!< DMA0_DCHPRI.CHPRI Position              */
#define DMA_DCHPRI_CHPRI(x)                      (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< DMA0_DCHPRI.CHPRI Field                 */
#define DMA_DCHPRI_DPA_MASK                      (0x40U)                                             /*!< DMA0_DCHPRI.DPA Mask                    */
#define DMA_DCHPRI_DPA_SHIFT                     (6U)                                                /*!< DMA0_DCHPRI.DPA Position                */
#define DMA_DCHPRI_DPA(x)                        (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DMA0_DCHPRI.DPA Field                   */
#define DMA_DCHPRI_ECP_MASK                      (0x80U)                                             /*!< DMA0_DCHPRI.ECP Mask                    */
#define DMA_DCHPRI_ECP_SHIFT                     (7U)                                                /*!< DMA0_DCHPRI.ECP Position                */
#define DMA_DCHPRI_ECP(x)                        (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DMA0_DCHPRI.ECP Field                   */
/* ------- DCHPRI Bit Fields                        ------ */
/* ------- SADDR Bit Fields                         ------ */
#define DMA_SADDR_SADDR_MASK                     (0xFFFFFFFFU)                                       /*!< DMA0_SADDR.SADDR Mask                   */
#define DMA_SADDR_SADDR_SHIFT                    (0U)                                                /*!< DMA0_SADDR.SADDR Position               */
#define DMA_SADDR_SADDR(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< DMA0_SADDR.SADDR Field                  */
/* ------- SOFF Bit Fields                          ------ */
#define DMA_SOFF_SOFF_MASK                       (0xFFFFU)                                           /*!< DMA0_SOFF.SOFF Mask                     */
#define DMA_SOFF_SOFF_SHIFT                      (0U)                                                /*!< DMA0_SOFF.SOFF Position                 */
#define DMA_SOFF_SOFF(x)                         (((uint16_t)(((uint16_t)(x))<<0U))&0xFFFFUL)        /*!< DMA0_SOFF.SOFF Field                    */
/* ------- ATTR Bit Fields                          ------ */
#define DMA_ATTR_DSIZE_MASK                      (0x7U)                                              /*!< DMA0_ATTR.DSIZE Mask                    */
#define DMA_ATTR_DSIZE_SHIFT                     (0U)                                                /*!< DMA0_ATTR.DSIZE Position                */
#define DMA_ATTR_DSIZE(x)                        (((uint16_t)(((uint16_t)(x))<<0U))&0x7UL)           /*!< DMA0_ATTR.DSIZE Field                   */
#define DMA_ATTR_DMOD_MASK                       (0xF8U)                                             /*!< DMA0_ATTR.DMOD Mask                     */
#define DMA_ATTR_DMOD_SHIFT                      (3U)                                                /*!< DMA0_ATTR.DMOD Position                 */
#define DMA_ATTR_DMOD(x)                         (((uint16_t)(((uint16_t)(x))<<3U))&0xF8UL)          /*!< DMA0_ATTR.DMOD Field                    */
#define DMA_ATTR_SSIZE_MASK                      (0x700U)                                            /*!< DMA0_ATTR.SSIZE Mask                    */
#define DMA_ATTR_SSIZE_SHIFT                     (8U)                                                /*!< DMA0_ATTR.SSIZE Position                */
#define DMA_ATTR_SSIZE(x)                        (((uint16_t)(((uint16_t)(x))<<8U))&0x700UL)         /*!< DMA0_ATTR.SSIZE Field                   */
#define DMA_ATTR_SMOD_MASK                       (0xF800U)                                           /*!< DMA0_ATTR.SMOD Mask                     */
#define DMA_ATTR_SMOD_SHIFT                      (11U)                                               /*!< DMA0_ATTR.SMOD Position                 */
#define DMA_ATTR_SMOD(x)                         (((uint16_t)(((uint16_t)(x))<<11U))&0xF800UL)       /*!< DMA0_ATTR.SMOD Field                    */
/* ------- NBYTES_MLNO Bit Fields                   ------ */
#define DMA_NBYTES_MLNO_NBYTES_MASK              (0xFFFFFFFFU)                                       /*!< DMA0_NBYTES_MLNO.NBYTES Mask            */
#define DMA_NBYTES_MLNO_NBYTES_SHIFT             (0U)                                                /*!< DMA0_NBYTES_MLNO.NBYTES Position        */
#define DMA_NBYTES_MLNO_NBYTES(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< DMA0_NBYTES_MLNO.NBYTES Field           */
/* ------- NBYTES_MLOFFNO Bit Fields                ------ */
#define DMA_NBYTES_MLOFFNO_NBYTES_MASK           (0x3FFFFFFFU)                                       /*!< DMA0_NBYTES_MLOFFNO.NBYTES Mask         */
#define DMA_NBYTES_MLOFFNO_NBYTES_SHIFT          (0U)                                                /*!< DMA0_NBYTES_MLOFFNO.NBYTES Position     */
#define DMA_NBYTES_MLOFFNO_NBYTES(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFFFFFFUL)    /*!< DMA0_NBYTES_MLOFFNO.NBYTES Field        */
#define DMA_NBYTES_MLOFFNO_DMLOE_MASK            (0x40000000U)                                       /*!< DMA0_NBYTES_MLOFFNO.DMLOE Mask          */
#define DMA_NBYTES_MLOFFNO_DMLOE_SHIFT           (30U)                                               /*!< DMA0_NBYTES_MLOFFNO.DMLOE Position      */
#define DMA_NBYTES_MLOFFNO_DMLOE(x)              (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< DMA0_NBYTES_MLOFFNO.DMLOE Field         */
#define DMA_NBYTES_MLOFFNO_SMLOE_MASK            (0x80000000U)                                       /*!< DMA0_NBYTES_MLOFFNO.SMLOE Mask          */
#define DMA_NBYTES_MLOFFNO_SMLOE_SHIFT           (31U)                                               /*!< DMA0_NBYTES_MLOFFNO.SMLOE Position      */
#define DMA_NBYTES_MLOFFNO_SMLOE(x)              (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< DMA0_NBYTES_MLOFFNO.SMLOE Field         */
/* ------- NBYTES_MLOFFYES Bit Fields               ------ */
#define DMA_NBYTES_MLOFFYES_NBYTES_MASK          (0x3FFU)                                            /*!< DMA0_NBYTES_MLOFFYES.NBYTES Mask        */
#define DMA_NBYTES_MLOFFYES_NBYTES_SHIFT         (0U)                                                /*!< DMA0_NBYTES_MLOFFYES.NBYTES Position    */
#define DMA_NBYTES_MLOFFYES_NBYTES(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)         /*!< DMA0_NBYTES_MLOFFYES.NBYTES Field       */
#define DMA_NBYTES_MLOFFYES_MLOFF_MASK           (0x3FFFFC00U)                                       /*!< DMA0_NBYTES_MLOFFYES.MLOFF Mask         */
#define DMA_NBYTES_MLOFFYES_MLOFF_SHIFT          (10U)                                               /*!< DMA0_NBYTES_MLOFFYES.MLOFF Position     */
#define DMA_NBYTES_MLOFFYES_MLOFF(x)             (((uint32_t)(((uint32_t)(x))<<10U))&0x3FFFFC00UL)   /*!< DMA0_NBYTES_MLOFFYES.MLOFF Field        */
#define DMA_NBYTES_MLOFFYES_DMLOE_MASK           (0x40000000U)                                       /*!< DMA0_NBYTES_MLOFFYES.DMLOE Mask         */
#define DMA_NBYTES_MLOFFYES_DMLOE_SHIFT          (30U)                                               /*!< DMA0_NBYTES_MLOFFYES.DMLOE Position     */
#define DMA_NBYTES_MLOFFYES_DMLOE(x)             (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< DMA0_NBYTES_MLOFFYES.DMLOE Field        */
#define DMA_NBYTES_MLOFFYES_SMLOE_MASK           (0x80000000U)                                       /*!< DMA0_NBYTES_MLOFFYES.SMLOE Mask         */
#define DMA_NBYTES_MLOFFYES_SMLOE_SHIFT          (31U)                                               /*!< DMA0_NBYTES_MLOFFYES.SMLOE Position     */
#define DMA_NBYTES_MLOFFYES_SMLOE(x)             (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< DMA0_NBYTES_MLOFFYES.SMLOE Field        */
/* ------- SLAST Bit Fields                         ------ */
#define DMA_SLAST_SLAST_MASK                     (0xFFFFFFFFU)                                       /*!< DMA0_SLAST.SLAST Mask                   */
#define DMA_SLAST_SLAST_SHIFT                    (0U)                                                /*!< DMA0_SLAST.SLAST Position               */
#define DMA_SLAST_SLAST(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< DMA0_SLAST.SLAST Field                  */
/* ------- DADDR Bit Fields                         ------ */
#define DMA_DADDR_DADDR_MASK                     (0xFFFFFFFFU)                                       /*!< DMA0_DADDR.DADDR Mask                   */
#define DMA_DADDR_DADDR_SHIFT                    (0U)                                                /*!< DMA0_DADDR.DADDR Position               */
#define DMA_DADDR_DADDR(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< DMA0_DADDR.DADDR Field                  */
/* ------- DOFF Bit Fields                          ------ */
#define DMA_DOFF_DOFF_MASK                       (0xFFFFU)                                           /*!< DMA0_DOFF.DOFF Mask                     */
#define DMA_DOFF_DOFF_SHIFT                      (0U)                                                /*!< DMA0_DOFF.DOFF Position                 */
#define DMA_DOFF_DOFF(x)                         (((uint16_t)(((uint16_t)(x))<<0U))&0xFFFFUL)        /*!< DMA0_DOFF.DOFF Field                    */
/* ------- CITER_ELINKNO Bit Fields                 ------ */
#define DMA_CITER_ELINKNO_CITER_MASK             (0x7FFFU)                                           /*!< DMA0_CITER_ELINKNO.CITER Mask           */
#define DMA_CITER_ELINKNO_CITER_SHIFT            (0U)                                                /*!< DMA0_CITER_ELINKNO.CITER Position       */
#define DMA_CITER_ELINKNO_CITER(x)               (((uint16_t)(((uint16_t)(x))<<0U))&0x7FFFUL)        /*!< DMA0_CITER_ELINKNO.CITER Field          */
#define DMA_CITER_ELINKNO_ELINK_MASK             (0x8000U)                                           /*!< DMA0_CITER_ELINKNO.ELINK Mask           */
#define DMA_CITER_ELINKNO_ELINK_SHIFT            (15U)                                               /*!< DMA0_CITER_ELINKNO.ELINK Position       */
#define DMA_CITER_ELINKNO_ELINK(x)               (((uint16_t)(((uint16_t)(x))<<15U))&0x8000UL)       /*!< DMA0_CITER_ELINKNO.ELINK Field          */
/* ------- CITER_ELINKYES Bit Fields                ------ */
#define DMA_CITER_ELINKYES_CITER_MASK            (0x1FFU)                                            /*!< DMA0_CITER_ELINKYES.CITER Mask          */
#define DMA_CITER_ELINKYES_CITER_SHIFT           (0U)                                                /*!< DMA0_CITER_ELINKYES.CITER Position      */
#define DMA_CITER_ELINKYES_CITER(x)              (((uint16_t)(((uint16_t)(x))<<0U))&0x1FFUL)         /*!< DMA0_CITER_ELINKYES.CITER Field         */
#define DMA_CITER_ELINKYES_LINKCH_MASK           (0x600U)                                            /*!< DMA0_CITER_ELINKYES.LINKCH Mask         */
#define DMA_CITER_ELINKYES_LINKCH_SHIFT          (9U)                                                /*!< DMA0_CITER_ELINKYES.LINKCH Position     */
#define DMA_CITER_ELINKYES_LINKCH(x)             (((uint16_t)(((uint16_t)(x))<<9U))&0x600UL)         /*!< DMA0_CITER_ELINKYES.LINKCH Field        */
#define DMA_CITER_ELINKYES_ELINK_MASK            (0x8000U)                                           /*!< DMA0_CITER_ELINKYES.ELINK Mask          */
#define DMA_CITER_ELINKYES_ELINK_SHIFT           (15U)                                               /*!< DMA0_CITER_ELINKYES.ELINK Position      */
#define DMA_CITER_ELINKYES_ELINK(x)              (((uint16_t)(((uint16_t)(x))<<15U))&0x8000UL)       /*!< DMA0_CITER_ELINKYES.ELINK Field         */
/* ------- DLASTSGA Bit Fields                      ------ */
#define DMA_DLASTSGA_DLASTSGA_MASK               (0xFFFFFFFFU)                                       /*!< DMA0_DLASTSGA.DLASTSGA Mask             */
#define DMA_DLASTSGA_DLASTSGA_SHIFT              (0U)                                                /*!< DMA0_DLASTSGA.DLASTSGA Position         */
#define DMA_DLASTSGA_DLASTSGA(x)                 (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< DMA0_DLASTSGA.DLASTSGA Field            */
/* ------- CSR Bit Fields                           ------ */
#define DMA_CSR_START_MASK                       (0x1U)                                              /*!< DMA0_CSR.START Mask                     */
#define DMA_CSR_START_SHIFT                      (0U)                                                /*!< DMA0_CSR.START Position                 */
#define DMA_CSR_START(x)                         (((uint16_t)(((uint16_t)(x))<<0U))&0x1UL)           /*!< DMA0_CSR.START Field                    */
#define DMA_CSR_INTMAJOR_MASK                    (0x2U)                                              /*!< DMA0_CSR.INTMAJOR Mask                  */
#define DMA_CSR_INTMAJOR_SHIFT                   (1U)                                                /*!< DMA0_CSR.INTMAJOR Position              */
#define DMA_CSR_INTMAJOR(x)                      (((uint16_t)(((uint16_t)(x))<<1U))&0x2UL)           /*!< DMA0_CSR.INTMAJOR Field                 */
#define DMA_CSR_INTHALF_MASK                     (0x4U)                                              /*!< DMA0_CSR.INTHALF Mask                   */
#define DMA_CSR_INTHALF_SHIFT                    (2U)                                                /*!< DMA0_CSR.INTHALF Position               */
#define DMA_CSR_INTHALF(x)                       (((uint16_t)(((uint16_t)(x))<<2U))&0x4UL)           /*!< DMA0_CSR.INTHALF Field                  */
#define DMA_CSR_DREQ_MASK                        (0x8U)                                              /*!< DMA0_CSR.DREQ Mask                      */
#define DMA_CSR_DREQ_SHIFT                       (3U)                                                /*!< DMA0_CSR.DREQ Position                  */
#define DMA_CSR_DREQ(x)                          (((uint16_t)(((uint16_t)(x))<<3U))&0x8UL)           /*!< DMA0_CSR.DREQ Field                     */
#define DMA_CSR_ESG_MASK                         (0x10U)                                             /*!< DMA0_CSR.ESG Mask                       */
#define DMA_CSR_ESG_SHIFT                        (4U)                                                /*!< DMA0_CSR.ESG Position                   */
#define DMA_CSR_ESG(x)                           (((uint16_t)(((uint16_t)(x))<<4U))&0x10UL)          /*!< DMA0_CSR.ESG Field                      */
#define DMA_CSR_MAJORELINK_MASK                  (0x20U)                                             /*!< DMA0_CSR.MAJORELINK Mask                */
#define DMA_CSR_MAJORELINK_SHIFT                 (5U)                                                /*!< DMA0_CSR.MAJORELINK Position            */
#define DMA_CSR_MAJORELINK(x)                    (((uint16_t)(((uint16_t)(x))<<5U))&0x20UL)          /*!< DMA0_CSR.MAJORELINK Field               */
#define DMA_CSR_ACTIVE_MASK                      (0x40U)                                             /*!< DMA0_CSR.ACTIVE Mask                    */
#define DMA_CSR_ACTIVE_SHIFT                     (6U)                                                /*!< DMA0_CSR.ACTIVE Position                */
#define DMA_CSR_ACTIVE(x)                        (((uint16_t)(((uint16_t)(x))<<6U))&0x40UL)          /*!< DMA0_CSR.ACTIVE Field                   */
#define DMA_CSR_DONE_MASK                        (0x80U)                                             /*!< DMA0_CSR.DONE Mask                      */
#define DMA_CSR_DONE_SHIFT                       (7U)                                                /*!< DMA0_CSR.DONE Position                  */
#define DMA_CSR_DONE(x)                          (((uint16_t)(((uint16_t)(x))<<7U))&0x80UL)          /*!< DMA0_CSR.DONE Field                     */
#define DMA_CSR_MAJORLINKCH_MASK                 (0x300U)                                            /*!< DMA0_CSR.MAJORLINKCH Mask               */
#define DMA_CSR_MAJORLINKCH_SHIFT                (8U)                                                /*!< DMA0_CSR.MAJORLINKCH Position           */
#define DMA_CSR_MAJORLINKCH(x)                   (((uint16_t)(((uint16_t)(x))<<8U))&0x300UL)         /*!< DMA0_CSR.MAJORLINKCH Field              */
#define DMA_CSR_BWC_MASK                         (0xC000U)                                           /*!< DMA0_CSR.BWC Mask                       */
#define DMA_CSR_BWC_SHIFT                        (14U)                                               /*!< DMA0_CSR.BWC Position                   */
#define DMA_CSR_BWC(x)                           (((uint16_t)(((uint16_t)(x))<<14U))&0xC000UL)       /*!< DMA0_CSR.BWC Field                      */
/* ------- BITER_ELINKNO Bit Fields                 ------ */
#define DMA_BITER_ELINKNO_BITER_MASK             (0x7FFFU)                                           /*!< DMA0_BITER_ELINKNO.BITER Mask           */
#define DMA_BITER_ELINKNO_BITER_SHIFT            (0U)                                                /*!< DMA0_BITER_ELINKNO.BITER Position       */
#define DMA_BITER_ELINKNO_BITER(x)               (((uint16_t)(((uint16_t)(x))<<0U))&0x7FFFUL)        /*!< DMA0_BITER_ELINKNO.BITER Field          */
#define DMA_BITER_ELINKNO_ELINK_MASK             (0x8000U)                                           /*!< DMA0_BITER_ELINKNO.ELINK Mask           */
#define DMA_BITER_ELINKNO_ELINK_SHIFT            (15U)                                               /*!< DMA0_BITER_ELINKNO.ELINK Position       */
#define DMA_BITER_ELINKNO_ELINK(x)               (((uint16_t)(((uint16_t)(x))<<15U))&0x8000UL)       /*!< DMA0_BITER_ELINKNO.ELINK Field          */
/* ------- BITER_ELINKYES Bit Fields                ------ */
#define DMA_BITER_ELINKYES_BITER_MASK            (0x1FFU)                                            /*!< DMA0_BITER_ELINKYES.BITER Mask          */
#define DMA_BITER_ELINKYES_BITER_SHIFT           (0U)                                                /*!< DMA0_BITER_ELINKYES.BITER Position      */
#define DMA_BITER_ELINKYES_BITER(x)              (((uint16_t)(((uint16_t)(x))<<0U))&0x1FFUL)         /*!< DMA0_BITER_ELINKYES.BITER Field         */
#define DMA_BITER_ELINKYES_LINKCH_MASK           (0x600U)                                            /*!< DMA0_BITER_ELINKYES.LINKCH Mask         */
#define DMA_BITER_ELINKYES_LINKCH_SHIFT          (9U)                                                /*!< DMA0_BITER_ELINKYES.LINKCH Position     */
#define DMA_BITER_ELINKYES_LINKCH(x)             (((uint16_t)(((uint16_t)(x))<<9U))&0x600UL)         /*!< DMA0_BITER_ELINKYES.LINKCH Field        */
#define DMA_BITER_ELINKYES_ELINK_MASK            (0x8000U)                                           /*!< DMA0_BITER_ELINKYES.ELINK Mask          */
#define DMA_BITER_ELINKYES_ELINK_SHIFT           (15U)                                               /*!< DMA0_BITER_ELINKYES.ELINK Position      */
#define DMA_BITER_ELINKYES_ELINK(x)              (((uint16_t)(((uint16_t)(x))<<15U))&0x8000UL)       /*!< DMA0_BITER_ELINKYES.ELINK Field         */
/**
 * @} */ /* End group DMA0_Register_Masks_GROUP 
 */

/* DMA0 - Peripheral instance base addresses */
#define DMA0_BasePtr                   0x40008000UL //!< Peripheral base address
#define DMA0                           ((DMA_Type *) DMA0_BasePtr) //!< Freescale base pointer
#define DMA0_BASE_PTR                  (DMA0) //!< Freescale style base pointer
#define DMA0_IRQS { DMA0_IRQn, DMA1_IRQn, DMA2_IRQn, DMA3_IRQn,  }

/**
 * @} */ /* End group DMA0_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup DMAMUX_Peripheral_access_layer_GROUP DMAMUX Peripheral Access Layer
* @brief C Struct for DMAMUX
* @{
*/

/* ================================================================================ */
/* ================           DMAMUX0 (file:DMAMUX0_4CH_TRIG_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief DMA channel multiplexor
 */
/**
* @addtogroup DMAMUX_structs_GROUP DMAMUX struct
* @brief Struct for DMAMUX
* @{
*/
typedef struct DMAMUX_Type {
   __IO uint8_t   CHCFG[4];                     /**< 0000: Channel Configuration Register                               */
} DMAMUX_Type;

/**
 * @} */ /* End group DMAMUX_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'DMAMUX0' Position & Mask macros                     ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup DMAMUX_Register_Masks_GROUP DMAMUX Register Masks
* @brief Register Masks for DMAMUX
* @{
*/
/* ------- CHCFG Bit Fields                         ------ */
#define DMAMUX_CHCFG_SOURCE_MASK                 (0x3FU)                                             /*!< DMAMUX0_CHCFG.SOURCE Mask               */
#define DMAMUX_CHCFG_SOURCE_SHIFT                (0U)                                                /*!< DMAMUX0_CHCFG.SOURCE Position           */
#define DMAMUX_CHCFG_SOURCE(x)                   (((uint8_t)(((uint8_t)(x))<<0U))&0x3FUL)            /*!< DMAMUX0_CHCFG.SOURCE Field              */
#define DMAMUX_CHCFG_TRIG_MASK                   (0x40U)                                             /*!< DMAMUX0_CHCFG.TRIG Mask                 */
#define DMAMUX_CHCFG_TRIG_SHIFT                  (6U)                                                /*!< DMAMUX0_CHCFG.TRIG Position             */
#define DMAMUX_CHCFG_TRIG(x)                     (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< DMAMUX0_CHCFG.TRIG Field                */
#define DMAMUX_CHCFG_ENBL_MASK                   (0x80U)                                             /*!< DMAMUX0_CHCFG.ENBL Mask                 */
#define DMAMUX_CHCFG_ENBL_SHIFT                  (7U)                                                /*!< DMAMUX0_CHCFG.ENBL Position             */
#define DMAMUX_CHCFG_ENBL(x)                     (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< DMAMUX0_CHCFG.ENBL Field                */
/**
 * @} */ /* End group DMAMUX_Register_Masks_GROUP 
 */

/* DMAMUX0 - Peripheral instance base addresses */
#define DMAMUX0_BasePtr                0x40021000UL //!< Peripheral base address
#define DMAMUX0                        ((DMAMUX_Type *) DMAMUX0_BasePtr) //!< Freescale base pointer
#define DMAMUX0_BASE_PTR               (DMAMUX0) //!< Freescale style base pointer

/**
 * DMA multiplexor slot (source) numbers
 */
typedef enum DmaSlot {
   Dma0Slot_Disabled                   =        0, //!<  Disabled
   Dma0Slot_LPUART0_Rx                 =        2, //!<  LPUART0 Receive
   Dma0Slot_LPUART0_Tx                 =        3, //!<  LPUART0 Transmit
   Dma0Slot_Radio                      =       11, //!<  Radio
   Dma0Slot_SPI0_Rx                    =       16, //!<  SPI0 Receive
   Dma0Slot_SPI0_Tx                    =       17, //!<  SPI0 Transmit
   Dma0Slot_SPI1_Rx                    =       18, //!<  SPI1 Receive
   Dma0Slot_SPI1_Tx                    =       19, //!<  SPI1 Transmit
   Dma0Slot_LTC0_Input_FIFO            =       20, //!<  LTC0_Input_FIFO
   Dma0Slot_LTC0_Output_FIFO           =       21, //!<  LTC0_Output_FIFO
   Dma0Slot_I2C0                       =       22, //!<  I2C0
   Dma0Slot_I2C1                       =       23, //!<  I2C1
   Dma0Slot_TPM0_Ch0                   =       24, //!<  TPM0 Channel 0
   Dma0Slot_TPM0_Ch1                   =       25, //!<  TPM0 Channel 1
   Dma0Slot_TPM0_Ch2                   =       26, //!<  TPM0 Channel 2
   Dma0Slot_TPM0_Ch3                   =       27, //!<  TPM0 Channel 3
   Dma0Slot_TPM1_Ch0                   =       32, //!<  TPM1 Channel 0
   Dma0Slot_TPM1_Ch1                   =       33, //!<  TPM1 Channel 1
   Dma0Slot_TPM2_Ch0                   =       34, //!<  TPM2 Channel 0
   Dma0Slot_TPM2_Ch1                   =       35, //!<  TPM2 Channel 1
   Dma0Slot_ADC0                       =       40, //!<  ADC0
   Dma0Slot_CMP0                       =       42, //!<  CMP0
   Dma0Slot_DAC0                       =       45, //!<  DAC0
   Dma0Slot_CMT                        =       47, //!<  CMT
   Dma0Slot_PortA                      =       49, //!<  Port A
   Dma0Slot_PortB                      =       50, //!<  Port B
   Dma0Slot_PortC                      =       51, //!<  Port C
   Dma0Slot_TPM0_Overflow              =       54, //!<  TPM0 Overflow
   Dma0Slot_TPM1_Overflow              =       55, //!<  TPM1 Overflow
   Dma0Slot_TPM2_Overflow              =       56, //!<  TPM2 Overflow
   Dma0Slot_TSI                        =       57, //!<  TSI
   Dma0Slot_AlwaysEnabled60            =       60, //!<  AlwaysEnabled60
   Dma0Slot_AlwaysEnabled61            =       61, //!<  AlwaysEnabled61
   Dma0Slot_AlwaysEnabled62            =       62, //!<  AlwaysEnabled62
   Dma0Slot_AlwaysEnabled63            =       63, //!<  AlwaysEnabled63
} DmaSlot;

/**
 * @} */ /* End group DMAMUX_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup FGPIO_Peripheral_access_layer_GROUP FGPIO Peripheral Access Layer
* @brief C Struct for FGPIO
* @{
*/

/* ================================================================================ */
/* ================           FGPIOA (file:FGPIOA_0xF8000000)       ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */
/**
* @addtogroup FGPIO_structs_GROUP FGPIO struct
* @brief Struct for FGPIO
* @{
*/
typedef struct GPIO_Type {
   __IO uint32_t  PDOR;                         /**< 0000: Port Data Output Register                                    */
   __O  uint32_t  PSOR;                         /**< 0004: Port Set Output Register                                     */
   __O  uint32_t  PCOR;                         /**< 0008: Port Clear Output Register                                   */
   __O  uint32_t  PTOR;                         /**< 000C: Port Toggle Output Register                                  */
   __I  uint32_t  PDIR;                         /**< 0010: Port Data Input Register                                     */
   __IO uint32_t  PDDR;                         /**< 0014: Port Data Direction Register                                 */
} GPIO_Type;

/**
 * @} */ /* End group FGPIO_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'FGPIOA' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup FGPIO_Register_Masks_GROUP FGPIO Register Masks
* @brief Register Masks for FGPIO
* @{
*/
/* ------- PDOR Bit Fields                          ------ */
/* ------- PSOR Bit Fields                          ------ */
/* ------- PCOR Bit Fields                          ------ */
/* ------- PTOR Bit Fields                          ------ */
/* ------- PDIR Bit Fields                          ------ */
/* ------- PDDR Bit Fields                          ------ */
/**
 * @} */ /* End group FGPIO_Register_Masks_GROUP 
 */

/* FGPIOA - Peripheral instance base addresses */
#define FGPIOA_BasePtr                 0xF8000000UL //!< Peripheral base address
#define FGPIOA                         ((GPIO_Type *) FGPIOA_BasePtr) //!< Freescale base pointer
#define FGPIOA_BASE_PTR                (FGPIOA) //!< Freescale style base pointer
/**
 * @} */ /* End group FGPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup FGPIO_Peripheral_access_layer_GROUP FGPIO Peripheral Access Layer
* @brief C Struct for FGPIO
* @{
*/

/* ================================================================================ */
/* ================           FGPIOB (derived from FGPIOA)         ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* FGPIOB - Peripheral instance base addresses */
#define FGPIOB_BasePtr                 0xF8000040UL //!< Peripheral base address
#define FGPIOB                         ((GPIO_Type *) FGPIOB_BasePtr) //!< Freescale base pointer
#define FGPIOB_BASE_PTR                (FGPIOB) //!< Freescale style base pointer
/**
 * @} */ /* End group FGPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup FGPIO_Peripheral_access_layer_GROUP FGPIO Peripheral Access Layer
* @brief C Struct for FGPIO
* @{
*/

/* ================================================================================ */
/* ================           FGPIOC (derived from FGPIOA)         ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* FGPIOC - Peripheral instance base addresses */
#define FGPIOC_BasePtr                 0xF8000080UL //!< Peripheral base address
#define FGPIOC                         ((GPIO_Type *) FGPIOC_BasePtr) //!< Freescale base pointer
#define FGPIOC_BASE_PTR                (FGPIOC) //!< Freescale style base pointer
/**
 * @} */ /* End group FGPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup FTFA_Peripheral_access_layer_GROUP FTFA Peripheral Access Layer
* @brief C Struct for FTFA
* @{
*/

/* ================================================================================ */
/* ================           FTFA (file:FTFA_XACCH)               ================ */
/* ================================================================================ */

/**
 * @brief Flash Memory Interface
 */
/**
* @addtogroup FTFA_structs_GROUP FTFA struct
* @brief Struct for FTFA
* @{
*/
typedef struct FTFA_Type {
   __IO uint8_t   FSTAT;                        /**< 0000: Flash Status Register                                        */
   __IO uint8_t   FCNFG;                        /**< 0001: Flash Configuration Register                                 */
   __I  uint8_t   FSEC;                         /**< 0002: Flash Security Register                                      */
   __I  uint8_t   FOPT;                         /**< 0003: Flash Option Register                                        */
   __IO uint8_t   FCCOB3;                       /**< 0004: FCCOB 3 - Usually Flash address [7..0]                       */
   __IO uint8_t   FCCOB2;                       /**< 0005: FCCOB 2 - Usually Flash address [15..8]                      */
   __IO uint8_t   FCCOB1;                       /**< 0006: FCCOB 1 - Usually Flash address [23..16]                     */
   __IO uint8_t   FCCOB0;                       /**< 0007: FCCOB 0 - Usually FCMD (Flash command)                       */
   __IO uint8_t   FCCOB7;                       /**< 0008: FCCOB 7 - Usually Data Byte 3                                */
   __IO uint8_t   FCCOB6;                       /**< 0009: FCCOB 6 - Usually Data Byte 2                                */
   __IO uint8_t   FCCOB5;                       /**< 000A: FCCOB 5 - Usually Data Byte 1                                */
   __IO uint8_t   FCCOB4;                       /**< 000B: FCCOB 4 - Usually Data Byte 0                                */
   __IO uint8_t   FCCOBB;                       /**< 000C: FCCOB B - Usually Data Byte 7                                */
   __IO uint8_t   FCCOBA;                       /**< 000D: FCCOB A - Usually Data Byte 6                                */
   __IO uint8_t   FCCOB9;                       /**< 000E: FCCOB 9 - Usually Data Byte 5                                */
   __IO uint8_t   FCCOB8;                       /**< 000F: FCCOB 8 - Usually Data Byte 4                                */
   __IO uint8_t   FPROT3;                       /**< 0010: Program Flash Protection                                     */
   __IO uint8_t   FPROT2;                       /**< 0011: Program Flash Protection                                     */
   __IO uint8_t   FPROT1;                       /**< 0012: Program Flash Protection                                     */
   __IO uint8_t   FPROT0;                       /**< 0013: Program Flash Protection                                     */
        uint8_t   RESERVED_0[4];                /**< 0014: 0x4 bytes                                                    */
   __I  uint8_t   XACCH3;                       /**< 0018: Execute-only Access Registers (high)                         */
   __I  uint8_t   XACCH2;                       /**< 0019: Execute-only Access Registers (high)                         */
   __I  uint8_t   XACCH1;                       /**< 001A: Execute-only Access Registers (high)                         */
   __I  uint8_t   XACCH0;                       /**< 001B: Execute-only Access Registers (high)                         */
   __I  uint8_t   XACCL3;                       /**< 001C: Execute-only Access Registers (low)                          */
   __I  uint8_t   XACCL2;                       /**< 001D: Execute-only Access Registers (low)                          */
   __I  uint8_t   XACCL1;                       /**< 001E: Execute-only Access Registers (low)                          */
   __I  uint8_t   XACCL0;                       /**< 001F: Execute-only Access Registers (low)                          */
   __I  uint8_t   SACCH3;                       /**< 0020: Supervisor-only Access Registers (high)                      */
   __I  uint8_t   SACCH2;                       /**< 0021: Supervisor-only Access Registers (high)                      */
   __I  uint8_t   SACCH1;                       /**< 0022: Supervisor-only Access Registers (high)                      */
   __I  uint8_t   SACCH0;                       /**< 0023: Supervisor-only Access Registers (high)                      */
   __I  uint8_t   SACCL3;                       /**< 0024: Supervisor-only Access Registers (low)                       */
   __I  uint8_t   SACCL2;                       /**< 0025: Supervisor-only Access Registers (low)                       */
   __I  uint8_t   SACCL1;                       /**< 0026: Supervisor-only Access Registers (low)                       */
   __I  uint8_t   SACCL0;                       /**< 0027: Supervisor-only Access Registers (low)                       */
   __I  uint8_t   FACSS;                        /**< 0028: Flash Access Segment Size Register                           */
        uint8_t   RESERVED_1[2];                /**< 0029: 0x2 bytes                                                    */
   __I  uint8_t   FACSN;                        /**< 002B: Flash Access Segment Number Register                         */
} FTFA_Type;

/**
 * @} */ /* End group FTFA_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'FTFA' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup FTFA_Register_Masks_GROUP FTFA Register Masks
* @brief Register Masks for FTFA
* @{
*/
/* ------- FSTAT Bit Fields                         ------ */
#define FTFA_FSTAT_MGSTAT0_MASK                  (0x1U)                                              /*!< FTFA_FSTAT.MGSTAT0 Mask                 */
#define FTFA_FSTAT_MGSTAT0_SHIFT                 (0U)                                                /*!< FTFA_FSTAT.MGSTAT0 Position             */
#define FTFA_FSTAT_MGSTAT0(x)                    (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< FTFA_FSTAT.MGSTAT0 Field                */
#define FTFA_FSTAT_FPVIOL_MASK                   (0x10U)                                             /*!< FTFA_FSTAT.FPVIOL Mask                  */
#define FTFA_FSTAT_FPVIOL_SHIFT                  (4U)                                                /*!< FTFA_FSTAT.FPVIOL Position              */
#define FTFA_FSTAT_FPVIOL(x)                     (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< FTFA_FSTAT.FPVIOL Field                 */
#define FTFA_FSTAT_ACCERR_MASK                   (0x20U)                                             /*!< FTFA_FSTAT.ACCERR Mask                  */
#define FTFA_FSTAT_ACCERR_SHIFT                  (5U)                                                /*!< FTFA_FSTAT.ACCERR Position              */
#define FTFA_FSTAT_ACCERR(x)                     (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< FTFA_FSTAT.ACCERR Field                 */
#define FTFA_FSTAT_RDCOLERR_MASK                 (0x40U)                                             /*!< FTFA_FSTAT.RDCOLERR Mask                */
#define FTFA_FSTAT_RDCOLERR_SHIFT                (6U)                                                /*!< FTFA_FSTAT.RDCOLERR Position            */
#define FTFA_FSTAT_RDCOLERR(x)                   (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< FTFA_FSTAT.RDCOLERR Field               */
#define FTFA_FSTAT_CCIF_MASK                     (0x80U)                                             /*!< FTFA_FSTAT.CCIF Mask                    */
#define FTFA_FSTAT_CCIF_SHIFT                    (7U)                                                /*!< FTFA_FSTAT.CCIF Position                */
#define FTFA_FSTAT_CCIF(x)                       (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< FTFA_FSTAT.CCIF Field                   */
/* ------- FCNFG Bit Fields                         ------ */
#define FTFA_FCNFG_ERSSUSP_MASK                  (0x10U)                                             /*!< FTFA_FCNFG.ERSSUSP Mask                 */
#define FTFA_FCNFG_ERSSUSP_SHIFT                 (4U)                                                /*!< FTFA_FCNFG.ERSSUSP Position             */
#define FTFA_FCNFG_ERSSUSP(x)                    (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< FTFA_FCNFG.ERSSUSP Field                */
#define FTFA_FCNFG_ERSAREQ_MASK                  (0x20U)                                             /*!< FTFA_FCNFG.ERSAREQ Mask                 */
#define FTFA_FCNFG_ERSAREQ_SHIFT                 (5U)                                                /*!< FTFA_FCNFG.ERSAREQ Position             */
#define FTFA_FCNFG_ERSAREQ(x)                    (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< FTFA_FCNFG.ERSAREQ Field                */
#define FTFA_FCNFG_RDCOLLIE_MASK                 (0x40U)                                             /*!< FTFA_FCNFG.RDCOLLIE Mask                */
#define FTFA_FCNFG_RDCOLLIE_SHIFT                (6U)                                                /*!< FTFA_FCNFG.RDCOLLIE Position            */
#define FTFA_FCNFG_RDCOLLIE(x)                   (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< FTFA_FCNFG.RDCOLLIE Field               */
#define FTFA_FCNFG_CCIE_MASK                     (0x80U)                                             /*!< FTFA_FCNFG.CCIE Mask                    */
#define FTFA_FCNFG_CCIE_SHIFT                    (7U)                                                /*!< FTFA_FCNFG.CCIE Position                */
#define FTFA_FCNFG_CCIE(x)                       (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< FTFA_FCNFG.CCIE Field                   */
/* ------- FSEC Bit Fields                          ------ */
#define FTFA_FSEC_SEC_MASK                       (0x3U)                                              /*!< FTFA_FSEC.SEC Mask                      */
#define FTFA_FSEC_SEC_SHIFT                      (0U)                                                /*!< FTFA_FSEC.SEC Position                  */
#define FTFA_FSEC_SEC(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< FTFA_FSEC.SEC Field                     */
#define FTFA_FSEC_FSLACC_MASK                    (0xCU)                                              /*!< FTFA_FSEC.FSLACC Mask                   */
#define FTFA_FSEC_FSLACC_SHIFT                   (2U)                                                /*!< FTFA_FSEC.FSLACC Position               */
#define FTFA_FSEC_FSLACC(x)                      (((uint8_t)(((uint8_t)(x))<<2U))&0xCUL)             /*!< FTFA_FSEC.FSLACC Field                  */
#define FTFA_FSEC_MEEN_MASK                      (0x30U)                                             /*!< FTFA_FSEC.MEEN Mask                     */
#define FTFA_FSEC_MEEN_SHIFT                     (4U)                                                /*!< FTFA_FSEC.MEEN Position                 */
#define FTFA_FSEC_MEEN(x)                        (((uint8_t)(((uint8_t)(x))<<4U))&0x30UL)            /*!< FTFA_FSEC.MEEN Field                    */
#define FTFA_FSEC_KEYEN_MASK                     (0xC0U)                                             /*!< FTFA_FSEC.KEYEN Mask                    */
#define FTFA_FSEC_KEYEN_SHIFT                    (6U)                                                /*!< FTFA_FSEC.KEYEN Position                */
#define FTFA_FSEC_KEYEN(x)                       (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< FTFA_FSEC.KEYEN Field                   */
/* ------- FOPT Bit Fields                          ------ */
#define FTFA_FOPT_OPT_MASK                       (0xFFU)                                             /*!< FTFA_FOPT.OPT Mask                      */
#define FTFA_FOPT_OPT_SHIFT                      (0U)                                                /*!< FTFA_FOPT.OPT Position                  */
#define FTFA_FOPT_OPT(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< FTFA_FOPT.OPT Field                     */
/* ------- FCCOB Bit Fields                         ------ */
#define FTFA_FCCOB_CCOBn_MASK                    (0xFFU)                                             /*!< FTFA_FCCOB.CCOBn Mask                   */
#define FTFA_FCCOB_CCOBn_SHIFT                   (0U)                                                /*!< FTFA_FCCOB.CCOBn Position               */
#define FTFA_FCCOB_CCOBn(x)                      (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< FTFA_FCCOB.CCOBn Field                  */
/* ------- FPROT Bit Fields                         ------ */
#define FTFA_FPROT_PROT_MASK                     (0xFFU)                                             /*!< FTFA_FPROT.PROT Mask                    */
#define FTFA_FPROT_PROT_SHIFT                    (0U)                                                /*!< FTFA_FPROT.PROT Position                */
#define FTFA_FPROT_PROT(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< FTFA_FPROT.PROT Field                   */
/* ------- XACCH Bit Fields                         ------ */
#define FTFA_XACCH_XA_MASK                       (0xFFU)                                             /*!< FTFA_XACCH.XA Mask                      */
#define FTFA_XACCH_XA_SHIFT                      (0U)                                                /*!< FTFA_XACCH.XA Position                  */
#define FTFA_XACCH_XA(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< FTFA_XACCH.XA Field                     */
/* ------- XACCL Bit Fields                         ------ */
#define FTFA_XACCL_XA_MASK                       (0xFFU)                                             /*!< FTFA_XACCL.XA Mask                      */
#define FTFA_XACCL_XA_SHIFT                      (0U)                                                /*!< FTFA_XACCL.XA Position                  */
#define FTFA_XACCL_XA(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< FTFA_XACCL.XA Field                     */
/* ------- SACCH Bit Fields                         ------ */
#define FTFA_SACCH_SA_MASK                       (0xFFU)                                             /*!< FTFA_SACCH.SA Mask                      */
#define FTFA_SACCH_SA_SHIFT                      (0U)                                                /*!< FTFA_SACCH.SA Position                  */
#define FTFA_SACCH_SA(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< FTFA_SACCH.SA Field                     */
/* ------- SACCL Bit Fields                         ------ */
#define FTFA_SACCL_SA_MASK                       (0xFFU)                                             /*!< FTFA_SACCL.SA Mask                      */
#define FTFA_SACCL_SA_SHIFT                      (0U)                                                /*!< FTFA_SACCL.SA Position                  */
#define FTFA_SACCL_SA(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< FTFA_SACCL.SA Field                     */
/* ------- FACSS Bit Fields                         ------ */
#define FTFA_FACSS_SGSIZE_MASK                   (0xFFU)                                             /*!< FTFA_FACSS.SGSIZE Mask                  */
#define FTFA_FACSS_SGSIZE_SHIFT                  (0U)                                                /*!< FTFA_FACSS.SGSIZE Position              */
#define FTFA_FACSS_SGSIZE(x)                     (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< FTFA_FACSS.SGSIZE Field                 */
/* ------- FACSN Bit Fields                         ------ */
#define FTFA_FACSN_NUMSG_MASK                    (0xFFU)                                             /*!< FTFA_FACSN.NUMSG Mask                   */
#define FTFA_FACSN_NUMSG_SHIFT                   (0U)                                                /*!< FTFA_FACSN.NUMSG Position               */
#define FTFA_FACSN_NUMSG(x)                      (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< FTFA_FACSN.NUMSG Field                  */
/**
 * @} */ /* End group FTFA_Register_Masks_GROUP 
 */

/* FTFA - Peripheral instance base addresses */
#define FTFA_BasePtr                   0x40020000UL //!< Peripheral base address
#define FTFA                           ((FTFA_Type *) FTFA_BasePtr) //!< Freescale base pointer
#define FTFA_BASE_PTR                  (FTFA) //!< Freescale style base pointer
#define FTFA_IRQS { FTFA_IRQn,  }

/**
 * @} */ /* End group FTFA_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup GENFSK_Peripheral_access_layer_GROUP GENFSK Peripheral Access Layer
* @brief C Struct for GENFSK
* @{
*/

/* ================================================================================ */
/* ================           GENFSK (file:GENFSK_MKW41Z4)         ================ */
/* ================================================================================ */

/**
 * @brief GENERIC_FSK
 */
/**
* @addtogroup GENFSK_structs_GROUP GENFSK struct
* @brief Struct for GENFSK
* @{
*/
typedef struct GENFSK_Type {
   __IO uint32_t  IRQ_CTRL;                     /**< 0000: IRQ CONTROL                                                  */
   __IO uint32_t  EVENT_TMR;                    /**< 0004: EVENT TIMER                                                  */
   __IO uint32_t  T1_CMP;                       /**< 0008: T1 COMPARE                                                   */
   __IO uint32_t  T2_CMP;                       /**< 000C: T2 COMPARE                                                   */
   __I  uint32_t  TIMESTAMP;                    /**< 0010: TIMESTAMP                                                    */
   __IO uint32_t  XCVR_CTRL;                    /**< 0014: TRANSCEIVER CONTROL                                          */
   __I  uint32_t  XCVR_STS;                     /**< 0018: TRANSCEIVER STATUS                                           */
   __IO uint32_t  XCVR_CFG;                     /**< 001C: TRANSCEIVER CONFIGURATION                                    */
   __IO uint32_t  CHANNEL_NUM;                  /**< 0020: CHANNEL NUMBER                                               */
   __IO uint32_t  TX_POWER;                     /**< 0024: TRANSMIT POWER                                               */
   __IO uint32_t  NTW_ADR_CTRL;                 /**< 0028: NETWORK ADDRESS CONTROL                                      */
   __IO uint32_t  NTW_ADR_[4];                  /**< 002C: NETWORK ADDRESS                                              */
   __IO uint32_t  RX_WATERMARK;                 /**< 003C: RECEIVE WATERMARK                                            */
   __O  uint32_t  DSM_CTRL;                     /**< 0040: DSM CONTROL                                                  */
   __I  uint32_t  PART_ID;                      /**< 0044: PART ID                                                      */
        uint8_t   RESERVED_0[24];               /**< 0048: 0x18 bytes                                                   */
   __IO uint32_t  PACKET_CFG;                   /**< 0060: PACKET CONFIGURATION                                         */
   __IO uint32_t  H0_CFG;                       /**< 0064: H0 CONFIGURATION                                             */
   __IO uint32_t  H1_CFG;                       /**< 0068: H1 CONFIGURATION                                             */
   __IO uint32_t  CRC_CFG;                      /**< 006C: CRC CONFIGURATION                                            */
   __IO uint32_t  CRC_INIT;                     /**< 0070: CRC INITIALIZATION                                           */
   __IO uint32_t  CRC_POLY;                     /**< 0074: CRC POLYNOMIAL                                               */
   __IO uint32_t  CRC_XOR_OUT;                  /**< 0078: CRC XOR OUT                                                  */
   __IO uint32_t  WHITEN_CFG;                   /**< 007C: WHITENER CONFIGURATION                                       */
   __IO uint32_t  WHITEN_POLY;                  /**< 0080: WHITENER POLYNOMIAL                                          */
   __IO uint32_t  WHITEN_SZ_THR;                /**< 0084: WHITENER SIZE THRESHOLD                                      */
   __IO uint32_t  BITRATE;                      /**< 0088: BIT RATE                                                     */
   __IO uint32_t  PB_PARTITION;                 /**< 008C: PACKET BUFFER PARTITION POINT                                */
} GENFSK_Type;

/**
 * @} */ /* End group GENFSK_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'GENFSK' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup GENFSK_Register_Masks_GROUP GENFSK Register Masks
* @brief Register Masks for GENFSK
* @{
*/
/* ------- IRQ_CTRL Bit Fields                      ------ */
#define GENFSK_IRQ_CTRL_SEQ_END_IRQ_MASK         (0x1U)                                              /*!< GENFSK_IRQ_CTRL.SEQ_END_IRQ Mask        */
#define GENFSK_IRQ_CTRL_SEQ_END_IRQ_SHIFT        (0U)                                                /*!< GENFSK_IRQ_CTRL.SEQ_END_IRQ Position    */
#define GENFSK_IRQ_CTRL_SEQ_END_IRQ(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< GENFSK_IRQ_CTRL.SEQ_END_IRQ Field       */
#define GENFSK_IRQ_CTRL_TX_IRQ_MASK              (0x2U)                                              /*!< GENFSK_IRQ_CTRL.TX_IRQ Mask             */
#define GENFSK_IRQ_CTRL_TX_IRQ_SHIFT             (1U)                                                /*!< GENFSK_IRQ_CTRL.TX_IRQ Position         */
#define GENFSK_IRQ_CTRL_TX_IRQ(x)                (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< GENFSK_IRQ_CTRL.TX_IRQ Field            */
#define GENFSK_IRQ_CTRL_RX_IRQ_MASK              (0x4U)                                              /*!< GENFSK_IRQ_CTRL.RX_IRQ Mask             */
#define GENFSK_IRQ_CTRL_RX_IRQ_SHIFT             (2U)                                                /*!< GENFSK_IRQ_CTRL.RX_IRQ Position         */
#define GENFSK_IRQ_CTRL_RX_IRQ(x)                (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< GENFSK_IRQ_CTRL.RX_IRQ Field            */
#define GENFSK_IRQ_CTRL_NTW_ADR_IRQ_MASK         (0x8U)                                              /*!< GENFSK_IRQ_CTRL.NTW_ADR_IRQ Mask        */
#define GENFSK_IRQ_CTRL_NTW_ADR_IRQ_SHIFT        (3U)                                                /*!< GENFSK_IRQ_CTRL.NTW_ADR_IRQ Position    */
#define GENFSK_IRQ_CTRL_NTW_ADR_IRQ(x)           (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< GENFSK_IRQ_CTRL.NTW_ADR_IRQ Field       */
#define GENFSK_IRQ_CTRL_T1_IRQ_MASK              (0x10U)                                             /*!< GENFSK_IRQ_CTRL.T1_IRQ Mask             */
#define GENFSK_IRQ_CTRL_T1_IRQ_SHIFT             (4U)                                                /*!< GENFSK_IRQ_CTRL.T1_IRQ Position         */
#define GENFSK_IRQ_CTRL_T1_IRQ(x)                (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< GENFSK_IRQ_CTRL.T1_IRQ Field            */
#define GENFSK_IRQ_CTRL_T2_IRQ_MASK              (0x20U)                                             /*!< GENFSK_IRQ_CTRL.T2_IRQ Mask             */
#define GENFSK_IRQ_CTRL_T2_IRQ_SHIFT             (5U)                                                /*!< GENFSK_IRQ_CTRL.T2_IRQ Position         */
#define GENFSK_IRQ_CTRL_T2_IRQ(x)                (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< GENFSK_IRQ_CTRL.T2_IRQ Field            */
#define GENFSK_IRQ_CTRL_PLL_UNLOCK_IRQ_MASK      (0x40U)                                             /*!< GENFSK_IRQ_CTRL.PLL_UNLOCK_IRQ Mask     */
#define GENFSK_IRQ_CTRL_PLL_UNLOCK_IRQ_SHIFT     (6U)                                                /*!< GENFSK_IRQ_CTRL.PLL_UNLOCK_IRQ Position */
#define GENFSK_IRQ_CTRL_PLL_UNLOCK_IRQ(x)        (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< GENFSK_IRQ_CTRL.PLL_UNLOCK_IRQ Field    */
#define GENFSK_IRQ_CTRL_WAKE_IRQ_MASK            (0x80U)                                             /*!< GENFSK_IRQ_CTRL.WAKE_IRQ Mask           */
#define GENFSK_IRQ_CTRL_WAKE_IRQ_SHIFT           (7U)                                                /*!< GENFSK_IRQ_CTRL.WAKE_IRQ Position       */
#define GENFSK_IRQ_CTRL_WAKE_IRQ(x)              (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< GENFSK_IRQ_CTRL.WAKE_IRQ Field          */
#define GENFSK_IRQ_CTRL_RX_WATERMARK_IRQ_MASK    (0x100U)                                            /*!< GENFSK_IRQ_CTRL.RX_WATERMARK_IRQ Mask   */
#define GENFSK_IRQ_CTRL_RX_WATERMARK_IRQ_SHIFT   (8U)                                                /*!< GENFSK_IRQ_CTRL.RX_WATERMARK_IRQ Position*/
#define GENFSK_IRQ_CTRL_RX_WATERMARK_IRQ(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< GENFSK_IRQ_CTRL.RX_WATERMARK_IRQ Field  */
#define GENFSK_IRQ_CTRL_TSM_IRQ_MASK             (0x200U)                                            /*!< GENFSK_IRQ_CTRL.TSM_IRQ Mask            */
#define GENFSK_IRQ_CTRL_TSM_IRQ_SHIFT            (9U)                                                /*!< GENFSK_IRQ_CTRL.TSM_IRQ Position        */
#define GENFSK_IRQ_CTRL_TSM_IRQ(x)               (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< GENFSK_IRQ_CTRL.TSM_IRQ Field           */
#define GENFSK_IRQ_CTRL_SEQ_END_IRQ_EN_MASK      (0x10000U)                                          /*!< GENFSK_IRQ_CTRL.SEQ_END_IRQ_EN Mask     */
#define GENFSK_IRQ_CTRL_SEQ_END_IRQ_EN_SHIFT     (16U)                                               /*!< GENFSK_IRQ_CTRL.SEQ_END_IRQ_EN Position */
#define GENFSK_IRQ_CTRL_SEQ_END_IRQ_EN(x)        (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< GENFSK_IRQ_CTRL.SEQ_END_IRQ_EN Field    */
#define GENFSK_IRQ_CTRL_TX_IRQ_EN_MASK           (0x20000U)                                          /*!< GENFSK_IRQ_CTRL.TX_IRQ_EN Mask          */
#define GENFSK_IRQ_CTRL_TX_IRQ_EN_SHIFT          (17U)                                               /*!< GENFSK_IRQ_CTRL.TX_IRQ_EN Position      */
#define GENFSK_IRQ_CTRL_TX_IRQ_EN(x)             (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< GENFSK_IRQ_CTRL.TX_IRQ_EN Field         */
#define GENFSK_IRQ_CTRL_RX_IRQ_EN_MASK           (0x40000U)                                          /*!< GENFSK_IRQ_CTRL.RX_IRQ_EN Mask          */
#define GENFSK_IRQ_CTRL_RX_IRQ_EN_SHIFT          (18U)                                               /*!< GENFSK_IRQ_CTRL.RX_IRQ_EN Position      */
#define GENFSK_IRQ_CTRL_RX_IRQ_EN(x)             (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< GENFSK_IRQ_CTRL.RX_IRQ_EN Field         */
#define GENFSK_IRQ_CTRL_NTW_ADR_IRQ_EN_MASK      (0x80000U)                                          /*!< GENFSK_IRQ_CTRL.NTW_ADR_IRQ_EN Mask     */
#define GENFSK_IRQ_CTRL_NTW_ADR_IRQ_EN_SHIFT     (19U)                                               /*!< GENFSK_IRQ_CTRL.NTW_ADR_IRQ_EN Position */
#define GENFSK_IRQ_CTRL_NTW_ADR_IRQ_EN(x)        (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< GENFSK_IRQ_CTRL.NTW_ADR_IRQ_EN Field    */
#define GENFSK_IRQ_CTRL_T1_IRQ_EN_MASK           (0x100000U)                                         /*!< GENFSK_IRQ_CTRL.T1_IRQ_EN Mask          */
#define GENFSK_IRQ_CTRL_T1_IRQ_EN_SHIFT          (20U)                                               /*!< GENFSK_IRQ_CTRL.T1_IRQ_EN Position      */
#define GENFSK_IRQ_CTRL_T1_IRQ_EN(x)             (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< GENFSK_IRQ_CTRL.T1_IRQ_EN Field         */
#define GENFSK_IRQ_CTRL_T2_IRQ_EN_MASK           (0x200000U)                                         /*!< GENFSK_IRQ_CTRL.T2_IRQ_EN Mask          */
#define GENFSK_IRQ_CTRL_T2_IRQ_EN_SHIFT          (21U)                                               /*!< GENFSK_IRQ_CTRL.T2_IRQ_EN Position      */
#define GENFSK_IRQ_CTRL_T2_IRQ_EN(x)             (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< GENFSK_IRQ_CTRL.T2_IRQ_EN Field         */
#define GENFSK_IRQ_CTRL_PLL_UNLOCK_IRQ_EN_MASK   (0x400000U)                                         /*!< GENFSK_IRQ_CTRL.PLL_UNLOCK_IRQ_EN Mask  */
#define GENFSK_IRQ_CTRL_PLL_UNLOCK_IRQ_EN_SHIFT  (22U)                                               /*!< GENFSK_IRQ_CTRL.PLL_UNLOCK_IRQ_EN Position*/
#define GENFSK_IRQ_CTRL_PLL_UNLOCK_IRQ_EN(x)     (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< GENFSK_IRQ_CTRL.PLL_UNLOCK_IRQ_EN Field */
#define GENFSK_IRQ_CTRL_WAKE_IRQ_EN_MASK         (0x800000U)                                         /*!< GENFSK_IRQ_CTRL.WAKE_IRQ_EN Mask        */
#define GENFSK_IRQ_CTRL_WAKE_IRQ_EN_SHIFT        (23U)                                               /*!< GENFSK_IRQ_CTRL.WAKE_IRQ_EN Position    */
#define GENFSK_IRQ_CTRL_WAKE_IRQ_EN(x)           (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< GENFSK_IRQ_CTRL.WAKE_IRQ_EN Field       */
#define GENFSK_IRQ_CTRL_RX_WATERMARK_IRQ_EN_MASK (0x1000000U)                                        /*!< GENFSK_IRQ_CTRL.RX_WATERMARK_IRQ_EN Mask*/
#define GENFSK_IRQ_CTRL_RX_WATERMARK_IRQ_EN_SHIFT (24U)                                              /*!< GENFSK_IRQ_CTRL.RX_WATERMARK_IRQ_EN Position*/
#define GENFSK_IRQ_CTRL_RX_WATERMARK_IRQ_EN(x)   (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< GENFSK_IRQ_CTRL.RX_WATERMARK_IRQ_EN Field*/
#define GENFSK_IRQ_CTRL_TSM_IRQ_EN_MASK          (0x2000000U)                                        /*!< GENFSK_IRQ_CTRL.TSM_IRQ_EN Mask         */
#define GENFSK_IRQ_CTRL_TSM_IRQ_EN_SHIFT         (25U)                                               /*!< GENFSK_IRQ_CTRL.TSM_IRQ_EN Position     */
#define GENFSK_IRQ_CTRL_TSM_IRQ_EN(x)            (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< GENFSK_IRQ_CTRL.TSM_IRQ_EN Field        */
#define GENFSK_IRQ_CTRL_GENERIC_FSK_IRQ_EN_MASK  (0x4000000U)                                        /*!< GENFSK_IRQ_CTRL.GENERIC_FSK_IRQ_EN Mask */
#define GENFSK_IRQ_CTRL_GENERIC_FSK_IRQ_EN_SHIFT (26U)                                               /*!< GENFSK_IRQ_CTRL.GENERIC_FSK_IRQ_EN Position*/
#define GENFSK_IRQ_CTRL_GENERIC_FSK_IRQ_EN(x)    (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< GENFSK_IRQ_CTRL.GENERIC_FSK_IRQ_EN Field*/
#define GENFSK_IRQ_CTRL_CRC_IGNORE_MASK          (0x8000000U)                                        /*!< GENFSK_IRQ_CTRL.CRC_IGNORE Mask         */
#define GENFSK_IRQ_CTRL_CRC_IGNORE_SHIFT         (27U)                                               /*!< GENFSK_IRQ_CTRL.CRC_IGNORE Position     */
#define GENFSK_IRQ_CTRL_CRC_IGNORE(x)            (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< GENFSK_IRQ_CTRL.CRC_IGNORE Field        */
#define GENFSK_IRQ_CTRL_CRC_VALID_MASK           (0x80000000U)                                       /*!< GENFSK_IRQ_CTRL.CRC_VALID Mask          */
#define GENFSK_IRQ_CTRL_CRC_VALID_SHIFT          (31U)                                               /*!< GENFSK_IRQ_CTRL.CRC_VALID Position      */
#define GENFSK_IRQ_CTRL_CRC_VALID(x)             (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< GENFSK_IRQ_CTRL.CRC_VALID Field         */
/* ------- EVENT_TMR Bit Fields                     ------ */
#define GENFSK_EVENT_TMR_EVENT_TMR_MASK          (0xFFFFFFU)                                         /*!< GENFSK_EVENT_TMR.EVENT_TMR Mask         */
#define GENFSK_EVENT_TMR_EVENT_TMR_SHIFT         (0U)                                                /*!< GENFSK_EVENT_TMR.EVENT_TMR Position     */
#define GENFSK_EVENT_TMR_EVENT_TMR(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< GENFSK_EVENT_TMR.EVENT_TMR Field        */
#define GENFSK_EVENT_TMR_EVENT_TMR_LD_MASK       (0x1000000U)                                        /*!< GENFSK_EVENT_TMR.EVENT_TMR_LD Mask      */
#define GENFSK_EVENT_TMR_EVENT_TMR_LD_SHIFT      (24U)                                               /*!< GENFSK_EVENT_TMR.EVENT_TMR_LD Position  */
#define GENFSK_EVENT_TMR_EVENT_TMR_LD(x)         (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< GENFSK_EVENT_TMR.EVENT_TMR_LD Field     */
#define GENFSK_EVENT_TMR_EVENT_TMR_ADD_MASK      (0x2000000U)                                        /*!< GENFSK_EVENT_TMR.EVENT_TMR_ADD Mask     */
#define GENFSK_EVENT_TMR_EVENT_TMR_ADD_SHIFT     (25U)                                               /*!< GENFSK_EVENT_TMR.EVENT_TMR_ADD Position */
#define GENFSK_EVENT_TMR_EVENT_TMR_ADD(x)        (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< GENFSK_EVENT_TMR.EVENT_TMR_ADD Field    */
/* ------- T1_CMP Bit Fields                        ------ */
#define GENFSK_T1_CMP_T1_CMP_MASK                (0xFFFFFFU)                                         /*!< GENFSK_T1_CMP.T1_CMP Mask               */
#define GENFSK_T1_CMP_T1_CMP_SHIFT               (0U)                                                /*!< GENFSK_T1_CMP.T1_CMP Position           */
#define GENFSK_T1_CMP_T1_CMP(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< GENFSK_T1_CMP.T1_CMP Field              */
#define GENFSK_T1_CMP_T1_CMP_EN_MASK             (0x1000000U)                                        /*!< GENFSK_T1_CMP.T1_CMP_EN Mask            */
#define GENFSK_T1_CMP_T1_CMP_EN_SHIFT            (24U)                                               /*!< GENFSK_T1_CMP.T1_CMP_EN Position        */
#define GENFSK_T1_CMP_T1_CMP_EN(x)               (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< GENFSK_T1_CMP.T1_CMP_EN Field           */
/* ------- T2_CMP Bit Fields                        ------ */
#define GENFSK_T2_CMP_T2_CMP_MASK                (0xFFFFFFU)                                         /*!< GENFSK_T2_CMP.T2_CMP Mask               */
#define GENFSK_T2_CMP_T2_CMP_SHIFT               (0U)                                                /*!< GENFSK_T2_CMP.T2_CMP Position           */
#define GENFSK_T2_CMP_T2_CMP(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< GENFSK_T2_CMP.T2_CMP Field              */
#define GENFSK_T2_CMP_T2_CMP_EN_MASK             (0x1000000U)                                        /*!< GENFSK_T2_CMP.T2_CMP_EN Mask            */
#define GENFSK_T2_CMP_T2_CMP_EN_SHIFT            (24U)                                               /*!< GENFSK_T2_CMP.T2_CMP_EN Position        */
#define GENFSK_T2_CMP_T2_CMP_EN(x)               (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< GENFSK_T2_CMP.T2_CMP_EN Field           */
/* ------- TIMESTAMP Bit Fields                     ------ */
#define GENFSK_TIMESTAMP_TIMESTAMP_MASK          (0xFFFFFFU)                                         /*!< GENFSK_TIMESTAMP.TIMESTAMP Mask         */
#define GENFSK_TIMESTAMP_TIMESTAMP_SHIFT         (0U)                                                /*!< GENFSK_TIMESTAMP.TIMESTAMP Position     */
#define GENFSK_TIMESTAMP_TIMESTAMP(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< GENFSK_TIMESTAMP.TIMESTAMP Field        */
/* ------- XCVR_CTRL Bit Fields                     ------ */
#define GENFSK_XCVR_CTRL_SEQCMD_MASK             (0xFU)                                              /*!< GENFSK_XCVR_CTRL.SEQCMD Mask            */
#define GENFSK_XCVR_CTRL_SEQCMD_SHIFT            (0U)                                                /*!< GENFSK_XCVR_CTRL.SEQCMD Position        */
#define GENFSK_XCVR_CTRL_SEQCMD(x)               (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< GENFSK_XCVR_CTRL.SEQCMD Field           */
#define GENFSK_XCVR_CTRL_CMDDEC_CS_MASK          (0x7000000U)                                        /*!< GENFSK_XCVR_CTRL.CMDDEC_CS Mask         */
#define GENFSK_XCVR_CTRL_CMDDEC_CS_SHIFT         (24U)                                               /*!< GENFSK_XCVR_CTRL.CMDDEC_CS Position     */
#define GENFSK_XCVR_CTRL_CMDDEC_CS(x)            (((uint32_t)(((uint32_t)(x))<<24U))&0x7000000UL)    /*!< GENFSK_XCVR_CTRL.CMDDEC_CS Field        */
#define GENFSK_XCVR_CTRL_XCVR_BUSY_MASK          (0x80000000U)                                       /*!< GENFSK_XCVR_CTRL.XCVR_BUSY Mask         */
#define GENFSK_XCVR_CTRL_XCVR_BUSY_SHIFT         (31U)                                               /*!< GENFSK_XCVR_CTRL.XCVR_BUSY Position     */
#define GENFSK_XCVR_CTRL_XCVR_BUSY(x)            (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< GENFSK_XCVR_CTRL.XCVR_BUSY Field        */
/* ------- XCVR_STS Bit Fields                      ------ */
#define GENFSK_XCVR_STS_TX_START_T1_PEND_MASK    (0x1U)                                              /*!< GENFSK_XCVR_STS.TX_START_T1_PEND Mask   */
#define GENFSK_XCVR_STS_TX_START_T1_PEND_SHIFT   (0U)                                                /*!< GENFSK_XCVR_STS.TX_START_T1_PEND Position*/
#define GENFSK_XCVR_STS_TX_START_T1_PEND(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< GENFSK_XCVR_STS.TX_START_T1_PEND Field  */
#define GENFSK_XCVR_STS_TX_START_T2_PEND_MASK    (0x2U)                                              /*!< GENFSK_XCVR_STS.TX_START_T2_PEND Mask   */
#define GENFSK_XCVR_STS_TX_START_T2_PEND_SHIFT   (1U)                                                /*!< GENFSK_XCVR_STS.TX_START_T2_PEND Position*/
#define GENFSK_XCVR_STS_TX_START_T2_PEND(x)      (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< GENFSK_XCVR_STS.TX_START_T2_PEND Field  */
#define GENFSK_XCVR_STS_TX_IN_WARMUP_MASK        (0x4U)                                              /*!< GENFSK_XCVR_STS.TX_IN_WARMUP Mask       */
#define GENFSK_XCVR_STS_TX_IN_WARMUP_SHIFT       (2U)                                                /*!< GENFSK_XCVR_STS.TX_IN_WARMUP Position   */
#define GENFSK_XCVR_STS_TX_IN_WARMUP(x)          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< GENFSK_XCVR_STS.TX_IN_WARMUP Field      */
#define GENFSK_XCVR_STS_TX_IN_PROGRESS_MASK      (0x8U)                                              /*!< GENFSK_XCVR_STS.TX_IN_PROGRESS Mask     */
#define GENFSK_XCVR_STS_TX_IN_PROGRESS_SHIFT     (3U)                                                /*!< GENFSK_XCVR_STS.TX_IN_PROGRESS Position */
#define GENFSK_XCVR_STS_TX_IN_PROGRESS(x)        (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< GENFSK_XCVR_STS.TX_IN_PROGRESS Field    */
#define GENFSK_XCVR_STS_TX_IN_WARMDN_MASK        (0x10U)                                             /*!< GENFSK_XCVR_STS.TX_IN_WARMDN Mask       */
#define GENFSK_XCVR_STS_TX_IN_WARMDN_SHIFT       (4U)                                                /*!< GENFSK_XCVR_STS.TX_IN_WARMDN Position   */
#define GENFSK_XCVR_STS_TX_IN_WARMDN(x)          (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< GENFSK_XCVR_STS.TX_IN_WARMDN Field      */
#define GENFSK_XCVR_STS_RX_START_T1_PEND_MASK    (0x20U)                                             /*!< GENFSK_XCVR_STS.RX_START_T1_PEND Mask   */
#define GENFSK_XCVR_STS_RX_START_T1_PEND_SHIFT   (5U)                                                /*!< GENFSK_XCVR_STS.RX_START_T1_PEND Position*/
#define GENFSK_XCVR_STS_RX_START_T1_PEND(x)      (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< GENFSK_XCVR_STS.RX_START_T1_PEND Field  */
#define GENFSK_XCVR_STS_RX_START_T2_PEND_MASK    (0x40U)                                             /*!< GENFSK_XCVR_STS.RX_START_T2_PEND Mask   */
#define GENFSK_XCVR_STS_RX_START_T2_PEND_SHIFT   (6U)                                                /*!< GENFSK_XCVR_STS.RX_START_T2_PEND Position*/
#define GENFSK_XCVR_STS_RX_START_T2_PEND(x)      (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< GENFSK_XCVR_STS.RX_START_T2_PEND Field  */
#define GENFSK_XCVR_STS_RX_STOP_T1_PEND_MASK     (0x80U)                                             /*!< GENFSK_XCVR_STS.RX_STOP_T1_PEND Mask    */
#define GENFSK_XCVR_STS_RX_STOP_T1_PEND_SHIFT    (7U)                                                /*!< GENFSK_XCVR_STS.RX_STOP_T1_PEND Position*/
#define GENFSK_XCVR_STS_RX_STOP_T1_PEND(x)       (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< GENFSK_XCVR_STS.RX_STOP_T1_PEND Field   */
#define GENFSK_XCVR_STS_RX_STOP_T2_PEND_MASK     (0x100U)                                            /*!< GENFSK_XCVR_STS.RX_STOP_T2_PEND Mask    */
#define GENFSK_XCVR_STS_RX_STOP_T2_PEND_SHIFT    (8U)                                                /*!< GENFSK_XCVR_STS.RX_STOP_T2_PEND Position*/
#define GENFSK_XCVR_STS_RX_STOP_T2_PEND(x)       (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< GENFSK_XCVR_STS.RX_STOP_T2_PEND Field   */
#define GENFSK_XCVR_STS_RX_IN_WARMUP_MASK        (0x200U)                                            /*!< GENFSK_XCVR_STS.RX_IN_WARMUP Mask       */
#define GENFSK_XCVR_STS_RX_IN_WARMUP_SHIFT       (9U)                                                /*!< GENFSK_XCVR_STS.RX_IN_WARMUP Position   */
#define GENFSK_XCVR_STS_RX_IN_WARMUP(x)          (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< GENFSK_XCVR_STS.RX_IN_WARMUP Field      */
#define GENFSK_XCVR_STS_RX_IN_SEARCH_MASK        (0x400U)                                            /*!< GENFSK_XCVR_STS.RX_IN_SEARCH Mask       */
#define GENFSK_XCVR_STS_RX_IN_SEARCH_SHIFT       (10U)                                               /*!< GENFSK_XCVR_STS.RX_IN_SEARCH Position   */
#define GENFSK_XCVR_STS_RX_IN_SEARCH(x)          (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< GENFSK_XCVR_STS.RX_IN_SEARCH Field      */
#define GENFSK_XCVR_STS_RX_IN_PROGRESS_MASK      (0x800U)                                            /*!< GENFSK_XCVR_STS.RX_IN_PROGRESS Mask     */
#define GENFSK_XCVR_STS_RX_IN_PROGRESS_SHIFT     (11U)                                               /*!< GENFSK_XCVR_STS.RX_IN_PROGRESS Position */
#define GENFSK_XCVR_STS_RX_IN_PROGRESS(x)        (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< GENFSK_XCVR_STS.RX_IN_PROGRESS Field    */
#define GENFSK_XCVR_STS_RX_IN_WARMDN_MASK        (0x1000U)                                           /*!< GENFSK_XCVR_STS.RX_IN_WARMDN Mask       */
#define GENFSK_XCVR_STS_RX_IN_WARMDN_SHIFT       (12U)                                               /*!< GENFSK_XCVR_STS.RX_IN_WARMDN Position   */
#define GENFSK_XCVR_STS_RX_IN_WARMDN(x)          (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< GENFSK_XCVR_STS.RX_IN_WARMDN Field      */
#define GENFSK_XCVR_STS_LQI_VALID_MASK           (0x4000U)                                           /*!< GENFSK_XCVR_STS.LQI_VALID Mask          */
#define GENFSK_XCVR_STS_LQI_VALID_SHIFT          (14U)                                               /*!< GENFSK_XCVR_STS.LQI_VALID Position      */
#define GENFSK_XCVR_STS_LQI_VALID(x)             (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< GENFSK_XCVR_STS.LQI_VALID Field         */
#define GENFSK_XCVR_STS_CRC_VALID_MASK           (0x8000U)                                           /*!< GENFSK_XCVR_STS.CRC_VALID Mask          */
#define GENFSK_XCVR_STS_CRC_VALID_SHIFT          (15U)                                               /*!< GENFSK_XCVR_STS.CRC_VALID Position      */
#define GENFSK_XCVR_STS_CRC_VALID(x)             (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< GENFSK_XCVR_STS.CRC_VALID Field         */
#define GENFSK_XCVR_STS_RSSI_MASK                (0xFF0000U)                                         /*!< GENFSK_XCVR_STS.RSSI Mask               */
#define GENFSK_XCVR_STS_RSSI_SHIFT               (16U)                                               /*!< GENFSK_XCVR_STS.RSSI Position           */
#define GENFSK_XCVR_STS_RSSI(x)                  (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< GENFSK_XCVR_STS.RSSI Field              */
#define GENFSK_XCVR_STS_LQI_MASK                 (0xFF000000U)                                       /*!< GENFSK_XCVR_STS.LQI Mask                */
#define GENFSK_XCVR_STS_LQI_SHIFT                (24U)                                               /*!< GENFSK_XCVR_STS.LQI Position            */
#define GENFSK_XCVR_STS_LQI(x)                   (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< GENFSK_XCVR_STS.LQI Field               */
/* ------- XCVR_CFG Bit Fields                      ------ */
#define GENFSK_XCVR_CFG_TX_WHITEN_DIS_MASK       (0x1U)                                              /*!< GENFSK_XCVR_CFG.TX_WHITEN_DIS Mask      */
#define GENFSK_XCVR_CFG_TX_WHITEN_DIS_SHIFT      (0U)                                                /*!< GENFSK_XCVR_CFG.TX_WHITEN_DIS Position  */
#define GENFSK_XCVR_CFG_TX_WHITEN_DIS(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< GENFSK_XCVR_CFG.TX_WHITEN_DIS Field     */
#define GENFSK_XCVR_CFG_RX_DEWHITEN_DIS_MASK     (0x2U)                                              /*!< GENFSK_XCVR_CFG.RX_DEWHITEN_DIS Mask    */
#define GENFSK_XCVR_CFG_RX_DEWHITEN_DIS_SHIFT    (1U)                                                /*!< GENFSK_XCVR_CFG.RX_DEWHITEN_DIS Position*/
#define GENFSK_XCVR_CFG_RX_DEWHITEN_DIS(x)       (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< GENFSK_XCVR_CFG.RX_DEWHITEN_DIS Field   */
#define GENFSK_XCVR_CFG_SW_CRC_EN_MASK           (0x4U)                                              /*!< GENFSK_XCVR_CFG.SW_CRC_EN Mask          */
#define GENFSK_XCVR_CFG_SW_CRC_EN_SHIFT          (2U)                                                /*!< GENFSK_XCVR_CFG.SW_CRC_EN Position      */
#define GENFSK_XCVR_CFG_SW_CRC_EN(x)             (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< GENFSK_XCVR_CFG.SW_CRC_EN Field         */
#define GENFSK_XCVR_CFG_PREAMBLE_SZ_MASK         (0x70U)                                             /*!< GENFSK_XCVR_CFG.PREAMBLE_SZ Mask        */
#define GENFSK_XCVR_CFG_PREAMBLE_SZ_SHIFT        (4U)                                                /*!< GENFSK_XCVR_CFG.PREAMBLE_SZ Position    */
#define GENFSK_XCVR_CFG_PREAMBLE_SZ(x)           (((uint32_t)(((uint32_t)(x))<<4U))&0x70UL)          /*!< GENFSK_XCVR_CFG.PREAMBLE_SZ Field       */
#define GENFSK_XCVR_CFG_TX_WARMUP_MASK           (0xFF00U)                                           /*!< GENFSK_XCVR_CFG.TX_WARMUP Mask          */
#define GENFSK_XCVR_CFG_TX_WARMUP_SHIFT          (8U)                                                /*!< GENFSK_XCVR_CFG.TX_WARMUP Position      */
#define GENFSK_XCVR_CFG_TX_WARMUP(x)             (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< GENFSK_XCVR_CFG.TX_WARMUP Field         */
#define GENFSK_XCVR_CFG_RX_WARMUP_MASK           (0xFF0000U)                                         /*!< GENFSK_XCVR_CFG.RX_WARMUP Mask          */
#define GENFSK_XCVR_CFG_RX_WARMUP_SHIFT          (16U)                                               /*!< GENFSK_XCVR_CFG.RX_WARMUP Position      */
#define GENFSK_XCVR_CFG_RX_WARMUP(x)             (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< GENFSK_XCVR_CFG.RX_WARMUP Field         */
/* ------- CHANNEL_NUM Bit Fields                   ------ */
#define GENFSK_CHANNEL_NUM_CHANNEL_NUM_MASK      (0x7FU)                                             /*!< GENFSK_CHANNEL_NUM.CHANNEL_NUM Mask     */
#define GENFSK_CHANNEL_NUM_CHANNEL_NUM_SHIFT     (0U)                                                /*!< GENFSK_CHANNEL_NUM.CHANNEL_NUM Position */
#define GENFSK_CHANNEL_NUM_CHANNEL_NUM(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< GENFSK_CHANNEL_NUM.CHANNEL_NUM Field    */
/* ------- TX_POWER Bit Fields                      ------ */
#define GENFSK_TX_POWER_TX_POWER_MASK            (0x3FU)                                             /*!< GENFSK_TX_POWER.TX_POWER Mask           */
#define GENFSK_TX_POWER_TX_POWER_SHIFT           (0U)                                                /*!< GENFSK_TX_POWER.TX_POWER Position       */
#define GENFSK_TX_POWER_TX_POWER(x)              (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< GENFSK_TX_POWER.TX_POWER Field          */
/* ------- NTW_ADR_CTRL Bit Fields                  ------ */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_EN_MASK      (0xFU)                                              /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_EN Mask     */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_EN_SHIFT     (0U)                                                /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_EN Position */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_EN(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_EN Field    */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_MCH_MASK     (0xF0U)                                             /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_MCH Mask    */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_MCH_SHIFT    (4U)                                                /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_MCH Position*/
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_MCH(x)       (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)          /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_MCH Field   */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR0_SZ_MASK     (0x300U)                                            /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR0_SZ Mask    */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR0_SZ_SHIFT    (8U)                                                /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR0_SZ Position*/
#define GENFSK_NTW_ADR_CTRL_NTW_ADR0_SZ(x)       (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)         /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR0_SZ Field   */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR1_SZ_MASK     (0xC00U)                                            /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR1_SZ Mask    */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR1_SZ_SHIFT    (10U)                                               /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR1_SZ Position*/
#define GENFSK_NTW_ADR_CTRL_NTW_ADR1_SZ(x)       (((uint32_t)(((uint32_t)(x))<<10U))&0xC00UL)        /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR1_SZ Field   */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR2_SZ_MASK     (0x3000U)                                           /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR2_SZ Mask    */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR2_SZ_SHIFT    (12U)                                               /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR2_SZ Position*/
#define GENFSK_NTW_ADR_CTRL_NTW_ADR2_SZ(x)       (((uint32_t)(((uint32_t)(x))<<12U))&0x3000UL)       /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR2_SZ Field   */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR3_SZ_MASK     (0xC000U)                                           /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR3_SZ Mask    */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR3_SZ_SHIFT    (14U)                                               /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR3_SZ Position*/
#define GENFSK_NTW_ADR_CTRL_NTW_ADR3_SZ(x)       (((uint32_t)(((uint32_t)(x))<<14U))&0xC000UL)       /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR3_SZ Field   */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR0_MASK    (0x70000U)                                          /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR0 Mask   */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR0_SHIFT   (16U)                                               /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR0 Position*/
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR0(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0x70000UL)      /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR0 Field  */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR1_MASK    (0x700000U)                                         /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR1 Mask   */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR1_SHIFT   (20U)                                               /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR1 Position*/
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR1(x)      (((uint32_t)(((uint32_t)(x))<<20U))&0x700000UL)     /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR1 Field  */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR2_MASK    (0x7000000U)                                        /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR2 Mask   */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR2_SHIFT   (24U)                                               /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR2 Position*/
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR2(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0x7000000UL)    /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR2 Field  */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR3_MASK    (0x70000000U)                                       /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR3 Mask   */
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR3_SHIFT   (28U)                                               /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR3 Position*/
#define GENFSK_NTW_ADR_CTRL_NTW_ADR_THR3(x)      (((uint32_t)(((uint32_t)(x))<<28U))&0x70000000UL)   /*!< GENFSK_NTW_ADR_CTRL.NTW_ADR_THR3 Field  */
/* ------- NTW_ADR_ Bit Fields                      ------ */
#define GENFSK_NTW_ADR__NTW_ADR_0_MASK           (0xFFFFFFFFU)                                       /*!< GENFSK_NTW_ADR_.NTW_ADR_0 Mask          */
#define GENFSK_NTW_ADR__NTW_ADR_0_SHIFT          (0U)                                                /*!< GENFSK_NTW_ADR_.NTW_ADR_0 Position      */
#define GENFSK_NTW_ADR__NTW_ADR_0(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< GENFSK_NTW_ADR_.NTW_ADR_0 Field         */
/* ------- RX_WATERMARK Bit Fields                  ------ */
#define GENFSK_RX_WATERMARK_RX_WATERMARK_MASK    (0x1FFFU)                                           /*!< GENFSK_RX_WATERMARK.RX_WATERMARK Mask   */
#define GENFSK_RX_WATERMARK_RX_WATERMARK_SHIFT   (0U)                                                /*!< GENFSK_RX_WATERMARK.RX_WATERMARK Position*/
#define GENFSK_RX_WATERMARK_RX_WATERMARK(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)        /*!< GENFSK_RX_WATERMARK.RX_WATERMARK Field  */
#define GENFSK_RX_WATERMARK_BYTE_COUNTER_MASK    (0x1FFF0000U)                                       /*!< GENFSK_RX_WATERMARK.BYTE_COUNTER Mask   */
#define GENFSK_RX_WATERMARK_BYTE_COUNTER_SHIFT   (16U)                                               /*!< GENFSK_RX_WATERMARK.BYTE_COUNTER Position*/
#define GENFSK_RX_WATERMARK_BYTE_COUNTER(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0x1FFF0000UL)   /*!< GENFSK_RX_WATERMARK.BYTE_COUNTER Field  */
/* ------- DSM_CTRL Bit Fields                      ------ */
#define GENFSK_DSM_CTRL_GENERIC_FSK_SLEEP_EN_MASK (0x1U)                                             /*!< GENFSK_DSM_CTRL.GENERIC_FSK_SLEEP_EN Mask*/
#define GENFSK_DSM_CTRL_GENERIC_FSK_SLEEP_EN_SHIFT (0U)                                              /*!< GENFSK_DSM_CTRL.GENERIC_FSK_SLEEP_EN Position*/
#define GENFSK_DSM_CTRL_GENERIC_FSK_SLEEP_EN(x)  (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< GENFSK_DSM_CTRL.GENERIC_FSK_SLEEP_EN Field*/
/* ------- PART_ID Bit Fields                       ------ */
#define GENFSK_PART_ID_PART_ID_MASK              (0xFFU)                                             /*!< GENFSK_PART_ID.PART_ID Mask             */
#define GENFSK_PART_ID_PART_ID_SHIFT             (0U)                                                /*!< GENFSK_PART_ID.PART_ID Position         */
#define GENFSK_PART_ID_PART_ID(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< GENFSK_PART_ID.PART_ID Field            */
/* ------- PACKET_CFG Bit Fields                    ------ */
#define GENFSK_PACKET_CFG_LENGTH_SZ_MASK         (0x1FU)                                             /*!< GENFSK_PACKET_CFG.LENGTH_SZ Mask        */
#define GENFSK_PACKET_CFG_LENGTH_SZ_SHIFT        (0U)                                                /*!< GENFSK_PACKET_CFG.LENGTH_SZ Position    */
#define GENFSK_PACKET_CFG_LENGTH_SZ(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0x1FUL)          /*!< GENFSK_PACKET_CFG.LENGTH_SZ Field       */
#define GENFSK_PACKET_CFG_LENGTH_BIT_ORD_MASK    (0x20U)                                             /*!< GENFSK_PACKET_CFG.LENGTH_BIT_ORD Mask   */
#define GENFSK_PACKET_CFG_LENGTH_BIT_ORD_SHIFT   (5U)                                                /*!< GENFSK_PACKET_CFG.LENGTH_BIT_ORD Position*/
#define GENFSK_PACKET_CFG_LENGTH_BIT_ORD(x)      (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< GENFSK_PACKET_CFG.LENGTH_BIT_ORD Field  */
#define GENFSK_PACKET_CFG_SYNC_ADDR_SZ_MASK      (0xC0U)                                             /*!< GENFSK_PACKET_CFG.SYNC_ADDR_SZ Mask     */
#define GENFSK_PACKET_CFG_SYNC_ADDR_SZ_SHIFT     (6U)                                                /*!< GENFSK_PACKET_CFG.SYNC_ADDR_SZ Position */
#define GENFSK_PACKET_CFG_SYNC_ADDR_SZ(x)        (((uint32_t)(((uint32_t)(x))<<6U))&0xC0UL)          /*!< GENFSK_PACKET_CFG.SYNC_ADDR_SZ Field    */
#define GENFSK_PACKET_CFG_LENGTH_ADJ_MASK        (0x3F00U)                                           /*!< GENFSK_PACKET_CFG.LENGTH_ADJ Mask       */
#define GENFSK_PACKET_CFG_LENGTH_ADJ_SHIFT       (8U)                                                /*!< GENFSK_PACKET_CFG.LENGTH_ADJ Position   */
#define GENFSK_PACKET_CFG_LENGTH_ADJ(x)          (((uint32_t)(((uint32_t)(x))<<8U))&0x3F00UL)        /*!< GENFSK_PACKET_CFG.LENGTH_ADJ Field      */
#define GENFSK_PACKET_CFG_LENGTH_FAIL_MASK       (0x8000U)                                           /*!< GENFSK_PACKET_CFG.LENGTH_FAIL Mask      */
#define GENFSK_PACKET_CFG_LENGTH_FAIL_SHIFT      (15U)                                               /*!< GENFSK_PACKET_CFG.LENGTH_FAIL Position  */
#define GENFSK_PACKET_CFG_LENGTH_FAIL(x)         (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< GENFSK_PACKET_CFG.LENGTH_FAIL Field     */
#define GENFSK_PACKET_CFG_H0_SZ_MASK             (0x1F0000U)                                         /*!< GENFSK_PACKET_CFG.H0_SZ Mask            */
#define GENFSK_PACKET_CFG_H0_SZ_SHIFT            (16U)                                               /*!< GENFSK_PACKET_CFG.H0_SZ Position        */
#define GENFSK_PACKET_CFG_H0_SZ(x)               (((uint32_t)(((uint32_t)(x))<<16U))&0x1F0000UL)     /*!< GENFSK_PACKET_CFG.H0_SZ Field           */
#define GENFSK_PACKET_CFG_H0_FAIL_MASK           (0x800000U)                                         /*!< GENFSK_PACKET_CFG.H0_FAIL Mask          */
#define GENFSK_PACKET_CFG_H0_FAIL_SHIFT          (23U)                                               /*!< GENFSK_PACKET_CFG.H0_FAIL Position      */
#define GENFSK_PACKET_CFG_H0_FAIL(x)             (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< GENFSK_PACKET_CFG.H0_FAIL Field         */
#define GENFSK_PACKET_CFG_H1_SZ_MASK             (0x1F000000U)                                       /*!< GENFSK_PACKET_CFG.H1_SZ Mask            */
#define GENFSK_PACKET_CFG_H1_SZ_SHIFT            (24U)                                               /*!< GENFSK_PACKET_CFG.H1_SZ Position        */
#define GENFSK_PACKET_CFG_H1_SZ(x)               (((uint32_t)(((uint32_t)(x))<<24U))&0x1F000000UL)   /*!< GENFSK_PACKET_CFG.H1_SZ Field           */
#define GENFSK_PACKET_CFG_H1_FAIL_MASK           (0x80000000U)                                       /*!< GENFSK_PACKET_CFG.H1_FAIL Mask          */
#define GENFSK_PACKET_CFG_H1_FAIL_SHIFT          (31U)                                               /*!< GENFSK_PACKET_CFG.H1_FAIL Position      */
#define GENFSK_PACKET_CFG_H1_FAIL(x)             (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< GENFSK_PACKET_CFG.H1_FAIL Field         */
/* ------- H0_CFG Bit Fields                        ------ */
#define GENFSK_H0_CFG_H0_MATCH_MASK              (0xFFFFU)                                           /*!< GENFSK_H0_CFG.H0_MATCH Mask             */
#define GENFSK_H0_CFG_H0_MATCH_SHIFT             (0U)                                                /*!< GENFSK_H0_CFG.H0_MATCH Position         */
#define GENFSK_H0_CFG_H0_MATCH(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< GENFSK_H0_CFG.H0_MATCH Field            */
#define GENFSK_H0_CFG_H0_MASK_MASK               (0xFFFF0000U)                                       /*!< GENFSK_H0_CFG.H0_MASK Mask              */
#define GENFSK_H0_CFG_H0_MASK_SHIFT              (16U)                                               /*!< GENFSK_H0_CFG.H0_MASK Position          */
#define GENFSK_H0_CFG_H0_MASK(x)                 (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< GENFSK_H0_CFG.H0_MASK Field             */
/* ------- H1_CFG Bit Fields                        ------ */
#define GENFSK_H1_CFG_H1_MATCH_MASK              (0xFFFFU)                                           /*!< GENFSK_H1_CFG.H1_MATCH Mask             */
#define GENFSK_H1_CFG_H1_MATCH_SHIFT             (0U)                                                /*!< GENFSK_H1_CFG.H1_MATCH Position         */
#define GENFSK_H1_CFG_H1_MATCH(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< GENFSK_H1_CFG.H1_MATCH Field            */
#define GENFSK_H1_CFG_H1_MASK_MASK               (0xFFFF0000U)                                       /*!< GENFSK_H1_CFG.H1_MASK Mask              */
#define GENFSK_H1_CFG_H1_MASK_SHIFT              (16U)                                               /*!< GENFSK_H1_CFG.H1_MASK Position          */
#define GENFSK_H1_CFG_H1_MASK(x)                 (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< GENFSK_H1_CFG.H1_MASK Field             */
/* ------- CRC_CFG Bit Fields                       ------ */
#define GENFSK_CRC_CFG_CRC_SZ_MASK               (0x7U)                                              /*!< GENFSK_CRC_CFG.CRC_SZ Mask              */
#define GENFSK_CRC_CFG_CRC_SZ_SHIFT              (0U)                                                /*!< GENFSK_CRC_CFG.CRC_SZ Position          */
#define GENFSK_CRC_CFG_CRC_SZ(x)                 (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< GENFSK_CRC_CFG.CRC_SZ Field             */
#define GENFSK_CRC_CFG_CRC_START_BYTE_MASK       (0xF00U)                                            /*!< GENFSK_CRC_CFG.CRC_START_BYTE Mask      */
#define GENFSK_CRC_CFG_CRC_START_BYTE_SHIFT      (8U)                                                /*!< GENFSK_CRC_CFG.CRC_START_BYTE Position  */
#define GENFSK_CRC_CFG_CRC_START_BYTE(x)         (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< GENFSK_CRC_CFG.CRC_START_BYTE Field     */
#define GENFSK_CRC_CFG_CRC_REF_IN_MASK           (0x10000U)                                          /*!< GENFSK_CRC_CFG.CRC_REF_IN Mask          */
#define GENFSK_CRC_CFG_CRC_REF_IN_SHIFT          (16U)                                               /*!< GENFSK_CRC_CFG.CRC_REF_IN Position      */
#define GENFSK_CRC_CFG_CRC_REF_IN(x)             (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< GENFSK_CRC_CFG.CRC_REF_IN Field         */
#define GENFSK_CRC_CFG_CRC_REF_OUT_MASK          (0x20000U)                                          /*!< GENFSK_CRC_CFG.CRC_REF_OUT Mask         */
#define GENFSK_CRC_CFG_CRC_REF_OUT_SHIFT         (17U)                                               /*!< GENFSK_CRC_CFG.CRC_REF_OUT Position     */
#define GENFSK_CRC_CFG_CRC_REF_OUT(x)            (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< GENFSK_CRC_CFG.CRC_REF_OUT Field        */
#define GENFSK_CRC_CFG_CRC_BYTE_ORD_MASK         (0x40000U)                                          /*!< GENFSK_CRC_CFG.CRC_BYTE_ORD Mask        */
#define GENFSK_CRC_CFG_CRC_BYTE_ORD_SHIFT        (18U)                                               /*!< GENFSK_CRC_CFG.CRC_BYTE_ORD Position    */
#define GENFSK_CRC_CFG_CRC_BYTE_ORD(x)           (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< GENFSK_CRC_CFG.CRC_BYTE_ORD Field       */
/* ------- CRC_INIT Bit Fields                      ------ */
#define GENFSK_CRC_INIT_CRC_SEED_MASK            (0xFFFFFFFFU)                                       /*!< GENFSK_CRC_INIT.CRC_SEED Mask           */
#define GENFSK_CRC_INIT_CRC_SEED_SHIFT           (0U)                                                /*!< GENFSK_CRC_INIT.CRC_SEED Position       */
#define GENFSK_CRC_INIT_CRC_SEED(x)              (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< GENFSK_CRC_INIT.CRC_SEED Field          */
/* ------- CRC_POLY Bit Fields                      ------ */
#define GENFSK_CRC_POLY_CRC_POLY_MASK            (0xFFFFFFFFU)                                       /*!< GENFSK_CRC_POLY.CRC_POLY Mask           */
#define GENFSK_CRC_POLY_CRC_POLY_SHIFT           (0U)                                                /*!< GENFSK_CRC_POLY.CRC_POLY Position       */
#define GENFSK_CRC_POLY_CRC_POLY(x)              (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< GENFSK_CRC_POLY.CRC_POLY Field          */
/* ------- CRC_XOR_OUT Bit Fields                   ------ */
#define GENFSK_CRC_XOR_OUT_CRC_XOR_OUT_MASK      (0xFFFFFFFFU)                                       /*!< GENFSK_CRC_XOR_OUT.CRC_XOR_OUT Mask     */
#define GENFSK_CRC_XOR_OUT_CRC_XOR_OUT_SHIFT     (0U)                                                /*!< GENFSK_CRC_XOR_OUT.CRC_XOR_OUT Position */
#define GENFSK_CRC_XOR_OUT_CRC_XOR_OUT(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< GENFSK_CRC_XOR_OUT.CRC_XOR_OUT Field    */
/* ------- WHITEN_CFG Bit Fields                    ------ */
#define GENFSK_WHITEN_CFG_WHITEN_START_MASK      (0x3U)                                              /*!< GENFSK_WHITEN_CFG.WHITEN_START Mask     */
#define GENFSK_WHITEN_CFG_WHITEN_START_SHIFT     (0U)                                                /*!< GENFSK_WHITEN_CFG.WHITEN_START Position */
#define GENFSK_WHITEN_CFG_WHITEN_START(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< GENFSK_WHITEN_CFG.WHITEN_START Field    */
#define GENFSK_WHITEN_CFG_WHITEN_END_MASK        (0x4U)                                              /*!< GENFSK_WHITEN_CFG.WHITEN_END Mask       */
#define GENFSK_WHITEN_CFG_WHITEN_END_SHIFT       (2U)                                                /*!< GENFSK_WHITEN_CFG.WHITEN_END Position   */
#define GENFSK_WHITEN_CFG_WHITEN_END(x)          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< GENFSK_WHITEN_CFG.WHITEN_END Field      */
#define GENFSK_WHITEN_CFG_WHITEN_B4_CRC_MASK     (0x8U)                                              /*!< GENFSK_WHITEN_CFG.WHITEN_B4_CRC Mask    */
#define GENFSK_WHITEN_CFG_WHITEN_B4_CRC_SHIFT    (3U)                                                /*!< GENFSK_WHITEN_CFG.WHITEN_B4_CRC Position*/
#define GENFSK_WHITEN_CFG_WHITEN_B4_CRC(x)       (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< GENFSK_WHITEN_CFG.WHITEN_B4_CRC Field   */
#define GENFSK_WHITEN_CFG_WHITEN_POLY_TYPE_MASK  (0x10U)                                             /*!< GENFSK_WHITEN_CFG.WHITEN_POLY_TYPE Mask */
#define GENFSK_WHITEN_CFG_WHITEN_POLY_TYPE_SHIFT (4U)                                                /*!< GENFSK_WHITEN_CFG.WHITEN_POLY_TYPE Position*/
#define GENFSK_WHITEN_CFG_WHITEN_POLY_TYPE(x)    (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< GENFSK_WHITEN_CFG.WHITEN_POLY_TYPE Field*/
#define GENFSK_WHITEN_CFG_WHITEN_REF_IN_MASK     (0x20U)                                             /*!< GENFSK_WHITEN_CFG.WHITEN_REF_IN Mask    */
#define GENFSK_WHITEN_CFG_WHITEN_REF_IN_SHIFT    (5U)                                                /*!< GENFSK_WHITEN_CFG.WHITEN_REF_IN Position*/
#define GENFSK_WHITEN_CFG_WHITEN_REF_IN(x)       (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< GENFSK_WHITEN_CFG.WHITEN_REF_IN Field   */
#define GENFSK_WHITEN_CFG_WHITEN_PAYLOAD_REINIT_MASK (0x40U)                                         /*!< GENFSK_WHITEN_CFG.WHITEN_PAYLOAD_REINIT Mask*/
#define GENFSK_WHITEN_CFG_WHITEN_PAYLOAD_REINIT_SHIFT (6U)                                           /*!< GENFSK_WHITEN_CFG.WHITEN_PAYLOAD_REINIT Position*/
#define GENFSK_WHITEN_CFG_WHITEN_PAYLOAD_REINIT(x) (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)        /*!< GENFSK_WHITEN_CFG.WHITEN_PAYLOAD_REINIT Field*/
#define GENFSK_WHITEN_CFG_WHITEN_SIZE_MASK       (0xF00U)                                            /*!< GENFSK_WHITEN_CFG.WHITEN_SIZE Mask      */
#define GENFSK_WHITEN_CFG_WHITEN_SIZE_SHIFT      (8U)                                                /*!< GENFSK_WHITEN_CFG.WHITEN_SIZE Position  */
#define GENFSK_WHITEN_CFG_WHITEN_SIZE(x)         (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< GENFSK_WHITEN_CFG.WHITEN_SIZE Field     */
#define GENFSK_WHITEN_CFG_MANCHESTER_EN_MASK     (0x1000U)                                           /*!< GENFSK_WHITEN_CFG.MANCHESTER_EN Mask    */
#define GENFSK_WHITEN_CFG_MANCHESTER_EN_SHIFT    (12U)                                               /*!< GENFSK_WHITEN_CFG.MANCHESTER_EN Position*/
#define GENFSK_WHITEN_CFG_MANCHESTER_EN(x)       (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< GENFSK_WHITEN_CFG.MANCHESTER_EN Field   */
#define GENFSK_WHITEN_CFG_MANCHESTER_INV_MASK    (0x2000U)                                           /*!< GENFSK_WHITEN_CFG.MANCHESTER_INV Mask   */
#define GENFSK_WHITEN_CFG_MANCHESTER_INV_SHIFT   (13U)                                               /*!< GENFSK_WHITEN_CFG.MANCHESTER_INV Position*/
#define GENFSK_WHITEN_CFG_MANCHESTER_INV(x)      (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< GENFSK_WHITEN_CFG.MANCHESTER_INV Field  */
#define GENFSK_WHITEN_CFG_MANCHESTER_START_MASK  (0x4000U)                                           /*!< GENFSK_WHITEN_CFG.MANCHESTER_START Mask */
#define GENFSK_WHITEN_CFG_MANCHESTER_START_SHIFT (14U)                                               /*!< GENFSK_WHITEN_CFG.MANCHESTER_START Position*/
#define GENFSK_WHITEN_CFG_MANCHESTER_START(x)    (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< GENFSK_WHITEN_CFG.MANCHESTER_START Field*/
#define GENFSK_WHITEN_CFG_WHITEN_INIT_MASK       (0x1FF0000U)                                        /*!< GENFSK_WHITEN_CFG.WHITEN_INIT Mask      */
#define GENFSK_WHITEN_CFG_WHITEN_INIT_SHIFT      (16U)                                               /*!< GENFSK_WHITEN_CFG.WHITEN_INIT Position  */
#define GENFSK_WHITEN_CFG_WHITEN_INIT(x)         (((uint32_t)(((uint32_t)(x))<<16U))&0x1FF0000UL)    /*!< GENFSK_WHITEN_CFG.WHITEN_INIT Field     */
/* ------- WHITEN_POLY Bit Fields                   ------ */
#define GENFSK_WHITEN_POLY_WHITEN_POLY_MASK      (0x1FFU)                                            /*!< GENFSK_WHITEN_POLY.WHITEN_POLY Mask     */
#define GENFSK_WHITEN_POLY_WHITEN_POLY_SHIFT     (0U)                                                /*!< GENFSK_WHITEN_POLY.WHITEN_POLY Position */
#define GENFSK_WHITEN_POLY_WHITEN_POLY(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFUL)         /*!< GENFSK_WHITEN_POLY.WHITEN_POLY Field    */
/* ------- WHITEN_SZ_THR Bit Fields                 ------ */
#define GENFSK_WHITEN_SZ_THR_WHITEN_SZ_THR_MASK  (0xFFFU)                                            /*!< GENFSK_WHITEN_SZ_THR.WHITEN_SZ_THR Mask */
#define GENFSK_WHITEN_SZ_THR_WHITEN_SZ_THR_SHIFT (0U)                                                /*!< GENFSK_WHITEN_SZ_THR.WHITEN_SZ_THR Position*/
#define GENFSK_WHITEN_SZ_THR_WHITEN_SZ_THR(x)    (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFUL)         /*!< GENFSK_WHITEN_SZ_THR.WHITEN_SZ_THR Field*/
#define GENFSK_WHITEN_SZ_THR_LENGTH_MAX_MASK     (0x7F0000U)                                         /*!< GENFSK_WHITEN_SZ_THR.LENGTH_MAX Mask    */
#define GENFSK_WHITEN_SZ_THR_LENGTH_MAX_SHIFT    (16U)                                               /*!< GENFSK_WHITEN_SZ_THR.LENGTH_MAX Position*/
#define GENFSK_WHITEN_SZ_THR_LENGTH_MAX(x)       (((uint32_t)(((uint32_t)(x))<<16U))&0x7F0000UL)     /*!< GENFSK_WHITEN_SZ_THR.LENGTH_MAX Field   */
#define GENFSK_WHITEN_SZ_THR_REC_BAD_PKT_MASK    (0x800000U)                                         /*!< GENFSK_WHITEN_SZ_THR.REC_BAD_PKT Mask   */
#define GENFSK_WHITEN_SZ_THR_REC_BAD_PKT_SHIFT   (23U)                                               /*!< GENFSK_WHITEN_SZ_THR.REC_BAD_PKT Position*/
#define GENFSK_WHITEN_SZ_THR_REC_BAD_PKT(x)      (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< GENFSK_WHITEN_SZ_THR.REC_BAD_PKT Field  */
/* ------- BITRATE Bit Fields                       ------ */
#define GENFSK_BITRATE_BITRATE_MASK              (0x3U)                                              /*!< GENFSK_BITRATE.BITRATE Mask             */
#define GENFSK_BITRATE_BITRATE_SHIFT             (0U)                                                /*!< GENFSK_BITRATE.BITRATE Position         */
#define GENFSK_BITRATE_BITRATE(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< GENFSK_BITRATE.BITRATE Field            */
/* ------- PB_PARTITION Bit Fields                  ------ */
#define GENFSK_PB_PARTITION_PB_PARTITION_MASK    (0x7FFU)                                            /*!< GENFSK_PB_PARTITION.PB_PARTITION Mask   */
#define GENFSK_PB_PARTITION_PB_PARTITION_SHIFT   (0U)                                                /*!< GENFSK_PB_PARTITION.PB_PARTITION Position*/
#define GENFSK_PB_PARTITION_PB_PARTITION(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFUL)         /*!< GENFSK_PB_PARTITION.PB_PARTITION Field  */
/**
 * @} */ /* End group GENFSK_Register_Masks_GROUP 
 */

/* GENFSK - Peripheral instance base addresses */
#define GENFSK_BasePtr                 0x4005F000UL //!< Peripheral base address
#define GENFSK                         ((GENFSK_Type *) GENFSK_BasePtr) //!< Freescale base pointer
#define GENFSK_BASE_PTR                (GENFSK) //!< Freescale style base pointer
/**
 * @} */ /* End group GENFSK_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer
* @brief C Struct for GPIO
* @{
*/

/* ================================================================================ */
/* ================           GPIOA (derived from FGPIOA)          ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOA - Peripheral instance base addresses */
#define GPIOA_BasePtr                  0x400FF000UL //!< Peripheral base address
#define GPIOA                          ((GPIO_Type *) GPIOA_BasePtr) //!< Freescale base pointer
#define GPIOA_BASE_PTR                 (GPIOA) //!< Freescale style base pointer
/**
 * @} */ /* End group GPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer
* @brief C Struct for GPIO
* @{
*/

/* ================================================================================ */
/* ================           GPIOB (derived from FGPIOA)          ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOB - Peripheral instance base addresses */
#define GPIOB_BasePtr                  0x400FF040UL //!< Peripheral base address
#define GPIOB                          ((GPIO_Type *) GPIOB_BasePtr) //!< Freescale base pointer
#define GPIOB_BASE_PTR                 (GPIOB) //!< Freescale style base pointer
/**
 * @} */ /* End group GPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup GPIO_Peripheral_access_layer_GROUP GPIO Peripheral Access Layer
* @brief C Struct for GPIO
* @{
*/

/* ================================================================================ */
/* ================           GPIOC (derived from FGPIOA)          ================ */
/* ================================================================================ */

/**
 * @brief General Purpose Input/Output
 */

/* GPIOC - Peripheral instance base addresses */
#define GPIOC_BasePtr                  0x400FF080UL //!< Peripheral base address
#define GPIOC                          ((GPIO_Type *) GPIOC_BasePtr) //!< Freescale base pointer
#define GPIOC_BASE_PTR                 (GPIOC) //!< Freescale style base pointer
/**
 * @} */ /* End group GPIO_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup I2C_Peripheral_access_layer_GROUP I2C Peripheral Access Layer
* @brief C Struct for I2C
* @{
*/

/* ================================================================================ */
/* ================           I2C0 (file:I2C0_MKL82Z7)             ================ */
/* ================================================================================ */

/**
 * @brief Inter-Integrated Circuit
 */
/**
* @addtogroup I2C_structs_GROUP I2C struct
* @brief Struct for I2C
* @{
*/
typedef struct I2C_Type {
   __IO uint8_t   A1;                           /**< 0000: Address Register 1                                           */
   __IO uint8_t   F;                            /**< 0001: Frequency Divider register                                   */
   __IO uint8_t   C1;                           /**< 0002: Control Register 1                                           */
   __IO uint8_t   S;                            /**< 0003: Status Register                                              */
   __IO uint8_t   D;                            /**< 0004: Data I/O register                                            */
   __IO uint8_t   C2;                           /**< 0005: Control Register 2                                           */
   __IO uint8_t   FLT;                          /**< 0006: Programmable Input Glitch Filter register                    */
   __IO uint8_t   RA;                           /**< 0007: Range Address register                                       */
   __IO uint8_t   SMB;                          /**< 0008: SMBus Control and Status register                            */
   __IO uint8_t   A2;                           /**< 0009: Address Register 2                                           */
   __IO uint8_t   SLTH;                         /**< 000A: SCL Low Timeout Register High                                */
   __IO uint8_t   SLTL;                         /**< 000B: SCL Low Timeout Register Low                                 */
   __IO uint8_t   S2;                           /**< 000C: Status register 2                                            */
} I2C_Type;

/**
 * @} */ /* End group I2C_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'I2C0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup I2C_Register_Masks_GROUP I2C Register Masks
* @brief Register Masks for I2C
* @{
*/
/* ------- A1 Bit Fields                            ------ */
#define I2C_A1_AD_MASK                           (0xFEU)                                             /*!< I2C0_A1.AD Mask                         */
#define I2C_A1_AD_SHIFT                          (1U)                                                /*!< I2C0_A1.AD Position                     */
#define I2C_A1_AD(x)                             (((uint8_t)(((uint8_t)(x))<<1U))&0xFEUL)            /*!< I2C0_A1.AD Field                        */
/* ------- F Bit Fields                             ------ */
#define I2C_F_ICR_MASK                           (0x3FU)                                             /*!< I2C0_F.ICR Mask                         */
#define I2C_F_ICR_SHIFT                          (0U)                                                /*!< I2C0_F.ICR Position                     */
#define I2C_F_ICR(x)                             (((uint8_t)(((uint8_t)(x))<<0U))&0x3FUL)            /*!< I2C0_F.ICR Field                        */
#define I2C_F_MULT_MASK                          (0xC0U)                                             /*!< I2C0_F.MULT Mask                        */
#define I2C_F_MULT_SHIFT                         (6U)                                                /*!< I2C0_F.MULT Position                    */
#define I2C_F_MULT(x)                            (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< I2C0_F.MULT Field                       */
/* ------- C1 Bit Fields                            ------ */
#define I2C_C1_DMAEN_MASK                        (0x1U)                                              /*!< I2C0_C1.DMAEN Mask                      */
#define I2C_C1_DMAEN_SHIFT                       (0U)                                                /*!< I2C0_C1.DMAEN Position                  */
#define I2C_C1_DMAEN(x)                          (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< I2C0_C1.DMAEN Field                     */
#define I2C_C1_WUEN_MASK                         (0x2U)                                              /*!< I2C0_C1.WUEN Mask                       */
#define I2C_C1_WUEN_SHIFT                        (1U)                                                /*!< I2C0_C1.WUEN Position                   */
#define I2C_C1_WUEN(x)                           (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< I2C0_C1.WUEN Field                      */
#define I2C_C1_RSTA_MASK                         (0x4U)                                              /*!< I2C0_C1.RSTA Mask                       */
#define I2C_C1_RSTA_SHIFT                        (2U)                                                /*!< I2C0_C1.RSTA Position                   */
#define I2C_C1_RSTA(x)                           (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< I2C0_C1.RSTA Field                      */
#define I2C_C1_TXAK_MASK                         (0x8U)                                              /*!< I2C0_C1.TXAK Mask                       */
#define I2C_C1_TXAK_SHIFT                        (3U)                                                /*!< I2C0_C1.TXAK Position                   */
#define I2C_C1_TXAK(x)                           (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< I2C0_C1.TXAK Field                      */
#define I2C_C1_TX_MASK                           (0x10U)                                             /*!< I2C0_C1.TX Mask                         */
#define I2C_C1_TX_SHIFT                          (4U)                                                /*!< I2C0_C1.TX Position                     */
#define I2C_C1_TX(x)                             (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< I2C0_C1.TX Field                        */
#define I2C_C1_MST_MASK                          (0x20U)                                             /*!< I2C0_C1.MST Mask                        */
#define I2C_C1_MST_SHIFT                         (5U)                                                /*!< I2C0_C1.MST Position                    */
#define I2C_C1_MST(x)                            (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< I2C0_C1.MST Field                       */
#define I2C_C1_IICIE_MASK                        (0x40U)                                             /*!< I2C0_C1.IICIE Mask                      */
#define I2C_C1_IICIE_SHIFT                       (6U)                                                /*!< I2C0_C1.IICIE Position                  */
#define I2C_C1_IICIE(x)                          (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< I2C0_C1.IICIE Field                     */
#define I2C_C1_IICEN_MASK                        (0x80U)                                             /*!< I2C0_C1.IICEN Mask                      */
#define I2C_C1_IICEN_SHIFT                       (7U)                                                /*!< I2C0_C1.IICEN Position                  */
#define I2C_C1_IICEN(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< I2C0_C1.IICEN Field                     */
/* ------- S Bit Fields                             ------ */
#define I2C_S_RXAK_MASK                          (0x1U)                                              /*!< I2C0_S.RXAK Mask                        */
#define I2C_S_RXAK_SHIFT                         (0U)                                                /*!< I2C0_S.RXAK Position                    */
#define I2C_S_RXAK(x)                            (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< I2C0_S.RXAK Field                       */
#define I2C_S_IICIF_MASK                         (0x2U)                                              /*!< I2C0_S.IICIF Mask                       */
#define I2C_S_IICIF_SHIFT                        (1U)                                                /*!< I2C0_S.IICIF Position                   */
#define I2C_S_IICIF(x)                           (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< I2C0_S.IICIF Field                      */
#define I2C_S_SRW_MASK                           (0x4U)                                              /*!< I2C0_S.SRW Mask                         */
#define I2C_S_SRW_SHIFT                          (2U)                                                /*!< I2C0_S.SRW Position                     */
#define I2C_S_SRW(x)                             (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< I2C0_S.SRW Field                        */
#define I2C_S_RAM_MASK                           (0x8U)                                              /*!< I2C0_S.RAM Mask                         */
#define I2C_S_RAM_SHIFT                          (3U)                                                /*!< I2C0_S.RAM Position                     */
#define I2C_S_RAM(x)                             (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< I2C0_S.RAM Field                        */
#define I2C_S_ARBL_MASK                          (0x10U)                                             /*!< I2C0_S.ARBL Mask                        */
#define I2C_S_ARBL_SHIFT                         (4U)                                                /*!< I2C0_S.ARBL Position                    */
#define I2C_S_ARBL(x)                            (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< I2C0_S.ARBL Field                       */
#define I2C_S_BUSY_MASK                          (0x20U)                                             /*!< I2C0_S.BUSY Mask                        */
#define I2C_S_BUSY_SHIFT                         (5U)                                                /*!< I2C0_S.BUSY Position                    */
#define I2C_S_BUSY(x)                            (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< I2C0_S.BUSY Field                       */
#define I2C_S_IAAS_MASK                          (0x40U)                                             /*!< I2C0_S.IAAS Mask                        */
#define I2C_S_IAAS_SHIFT                         (6U)                                                /*!< I2C0_S.IAAS Position                    */
#define I2C_S_IAAS(x)                            (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< I2C0_S.IAAS Field                       */
#define I2C_S_TCF_MASK                           (0x80U)                                             /*!< I2C0_S.TCF Mask                         */
#define I2C_S_TCF_SHIFT                          (7U)                                                /*!< I2C0_S.TCF Position                     */
#define I2C_S_TCF(x)                             (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< I2C0_S.TCF Field                        */
/* ------- D Bit Fields                             ------ */
#define I2C_D_DATA_MASK                          (0xFFU)                                             /*!< I2C0_D.DATA Mask                        */
#define I2C_D_DATA_SHIFT                         (0U)                                                /*!< I2C0_D.DATA Position                    */
#define I2C_D_DATA(x)                            (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< I2C0_D.DATA Field                       */
/* ------- C2 Bit Fields                            ------ */
#define I2C_C2_AD_MASK                           (0x7U)                                              /*!< I2C0_C2.AD Mask                         */
#define I2C_C2_AD_SHIFT                          (0U)                                                /*!< I2C0_C2.AD Position                     */
#define I2C_C2_AD(x)                             (((uint8_t)(((uint8_t)(x))<<0U))&0x7UL)             /*!< I2C0_C2.AD Field                        */
#define I2C_C2_RMEN_MASK                         (0x8U)                                              /*!< I2C0_C2.RMEN Mask                       */
#define I2C_C2_RMEN_SHIFT                        (3U)                                                /*!< I2C0_C2.RMEN Position                   */
#define I2C_C2_RMEN(x)                           (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< I2C0_C2.RMEN Field                      */
#define I2C_C2_SBRC_MASK                         (0x10U)                                             /*!< I2C0_C2.SBRC Mask                       */
#define I2C_C2_SBRC_SHIFT                        (4U)                                                /*!< I2C0_C2.SBRC Position                   */
#define I2C_C2_SBRC(x)                           (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< I2C0_C2.SBRC Field                      */
#define I2C_C2_HDRS_MASK                         (0x20U)                                             /*!< I2C0_C2.HDRS Mask                       */
#define I2C_C2_HDRS_SHIFT                        (5U)                                                /*!< I2C0_C2.HDRS Position                   */
#define I2C_C2_HDRS(x)                           (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< I2C0_C2.HDRS Field                      */
#define I2C_C2_ADEXT_MASK                        (0x40U)                                             /*!< I2C0_C2.ADEXT Mask                      */
#define I2C_C2_ADEXT_SHIFT                       (6U)                                                /*!< I2C0_C2.ADEXT Position                  */
#define I2C_C2_ADEXT(x)                          (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< I2C0_C2.ADEXT Field                     */
#define I2C_C2_GCAEN_MASK                        (0x80U)                                             /*!< I2C0_C2.GCAEN Mask                      */
#define I2C_C2_GCAEN_SHIFT                       (7U)                                                /*!< I2C0_C2.GCAEN Position                  */
#define I2C_C2_GCAEN(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< I2C0_C2.GCAEN Field                     */
/* ------- FLT Bit Fields                           ------ */
#define I2C_FLT_FLT_MASK                         (0xFU)                                              /*!< I2C0_FLT.FLT Mask                       */
#define I2C_FLT_FLT_SHIFT                        (0U)                                                /*!< I2C0_FLT.FLT Position                   */
#define I2C_FLT_FLT(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0xFUL)             /*!< I2C0_FLT.FLT Field                      */
#define I2C_FLT_STARTF_MASK                      (0x10U)                                             /*!< I2C0_FLT.STARTF Mask                    */
#define I2C_FLT_STARTF_SHIFT                     (4U)                                                /*!< I2C0_FLT.STARTF Position                */
#define I2C_FLT_STARTF(x)                        (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< I2C0_FLT.STARTF Field                   */
#define I2C_FLT_SSIE_MASK                        (0x20U)                                             /*!< I2C0_FLT.SSIE Mask                      */
#define I2C_FLT_SSIE_SHIFT                       (5U)                                                /*!< I2C0_FLT.SSIE Position                  */
#define I2C_FLT_SSIE(x)                          (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< I2C0_FLT.SSIE Field                     */
#define I2C_FLT_STOPF_MASK                       (0x40U)                                             /*!< I2C0_FLT.STOPF Mask                     */
#define I2C_FLT_STOPF_SHIFT                      (6U)                                                /*!< I2C0_FLT.STOPF Position                 */
#define I2C_FLT_STOPF(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< I2C0_FLT.STOPF Field                    */
#define I2C_FLT_SHEN_MASK                        (0x80U)                                             /*!< I2C0_FLT.SHEN Mask                      */
#define I2C_FLT_SHEN_SHIFT                       (7U)                                                /*!< I2C0_FLT.SHEN Position                  */
#define I2C_FLT_SHEN(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< I2C0_FLT.SHEN Field                     */
/* ------- RA Bit Fields                            ------ */
#define I2C_RA_RAD_MASK                          (0xFEU)                                             /*!< I2C0_RA.RAD Mask                        */
#define I2C_RA_RAD_SHIFT                         (1U)                                                /*!< I2C0_RA.RAD Position                    */
#define I2C_RA_RAD(x)                            (((uint8_t)(((uint8_t)(x))<<1U))&0xFEUL)            /*!< I2C0_RA.RAD Field                       */
/* ------- SMB Bit Fields                           ------ */
#define I2C_SMB_SHTF2IE_MASK                     (0x1U)                                              /*!< I2C0_SMB.SHTF2IE Mask                   */
#define I2C_SMB_SHTF2IE_SHIFT                    (0U)                                                /*!< I2C0_SMB.SHTF2IE Position               */
#define I2C_SMB_SHTF2IE(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< I2C0_SMB.SHTF2IE Field                  */
#define I2C_SMB_SHTF2_MASK                       (0x2U)                                              /*!< I2C0_SMB.SHTF2 Mask                     */
#define I2C_SMB_SHTF2_SHIFT                      (1U)                                                /*!< I2C0_SMB.SHTF2 Position                 */
#define I2C_SMB_SHTF2(x)                         (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< I2C0_SMB.SHTF2 Field                    */
#define I2C_SMB_SHTF1_MASK                       (0x4U)                                              /*!< I2C0_SMB.SHTF1 Mask                     */
#define I2C_SMB_SHTF1_SHIFT                      (2U)                                                /*!< I2C0_SMB.SHTF1 Position                 */
#define I2C_SMB_SHTF1(x)                         (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< I2C0_SMB.SHTF1 Field                    */
#define I2C_SMB_SLTF_MASK                        (0x8U)                                              /*!< I2C0_SMB.SLTF Mask                      */
#define I2C_SMB_SLTF_SHIFT                       (3U)                                                /*!< I2C0_SMB.SLTF Position                  */
#define I2C_SMB_SLTF(x)                          (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< I2C0_SMB.SLTF Field                     */
#define I2C_SMB_TCKSEL_MASK                      (0x10U)                                             /*!< I2C0_SMB.TCKSEL Mask                    */
#define I2C_SMB_TCKSEL_SHIFT                     (4U)                                                /*!< I2C0_SMB.TCKSEL Position                */
#define I2C_SMB_TCKSEL(x)                        (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< I2C0_SMB.TCKSEL Field                   */
#define I2C_SMB_SIICAEN_MASK                     (0x20U)                                             /*!< I2C0_SMB.SIICAEN Mask                   */
#define I2C_SMB_SIICAEN_SHIFT                    (5U)                                                /*!< I2C0_SMB.SIICAEN Position               */
#define I2C_SMB_SIICAEN(x)                       (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< I2C0_SMB.SIICAEN Field                  */
#define I2C_SMB_ALERTEN_MASK                     (0x40U)                                             /*!< I2C0_SMB.ALERTEN Mask                   */
#define I2C_SMB_ALERTEN_SHIFT                    (6U)                                                /*!< I2C0_SMB.ALERTEN Position               */
#define I2C_SMB_ALERTEN(x)                       (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< I2C0_SMB.ALERTEN Field                  */
#define I2C_SMB_FACK_MASK                        (0x80U)                                             /*!< I2C0_SMB.FACK Mask                      */
#define I2C_SMB_FACK_SHIFT                       (7U)                                                /*!< I2C0_SMB.FACK Position                  */
#define I2C_SMB_FACK(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< I2C0_SMB.FACK Field                     */
/* ------- A2 Bit Fields                            ------ */
#define I2C_A2_SAD_MASK                          (0xFEU)                                             /*!< I2C0_A2.SAD Mask                        */
#define I2C_A2_SAD_SHIFT                         (1U)                                                /*!< I2C0_A2.SAD Position                    */
#define I2C_A2_SAD(x)                            (((uint8_t)(((uint8_t)(x))<<1U))&0xFEUL)            /*!< I2C0_A2.SAD Field                       */
/* ------- SLTH Bit Fields                          ------ */
#define I2C_SLTH_SSLT_MASK                       (0xFFU)                                             /*!< I2C0_SLTH.SSLT Mask                     */
#define I2C_SLTH_SSLT_SHIFT                      (0U)                                                /*!< I2C0_SLTH.SSLT Position                 */
#define I2C_SLTH_SSLT(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< I2C0_SLTH.SSLT Field                    */
/* ------- SLTL Bit Fields                          ------ */
#define I2C_SLTL_SSLT_MASK                       (0xFFU)                                             /*!< I2C0_SLTL.SSLT Mask                     */
#define I2C_SLTL_SSLT_SHIFT                      (0U)                                                /*!< I2C0_SLTL.SSLT Position                 */
#define I2C_SLTL_SSLT(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< I2C0_SLTL.SSLT Field                    */
/* ------- S2 Bit Fields                            ------ */
#define I2C_S2_EMPTY_MASK                        (0x1U)                                              /*!< I2C0_S2.EMPTY Mask                      */
#define I2C_S2_EMPTY_SHIFT                       (0U)                                                /*!< I2C0_S2.EMPTY Position                  */
#define I2C_S2_EMPTY(x)                          (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< I2C0_S2.EMPTY Field                     */
#define I2C_S2_ERROR_MASK                        (0x2U)                                              /*!< I2C0_S2.ERROR Mask                      */
#define I2C_S2_ERROR_SHIFT                       (1U)                                                /*!< I2C0_S2.ERROR Position                  */
#define I2C_S2_ERROR(x)                          (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< I2C0_S2.ERROR Field                     */
#define I2C_S2_DFEN_MASK                         (0x4U)                                              /*!< I2C0_S2.DFEN Mask                       */
#define I2C_S2_DFEN_SHIFT                        (2U)                                                /*!< I2C0_S2.DFEN Position                   */
#define I2C_S2_DFEN(x)                           (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< I2C0_S2.DFEN Field                      */
/**
 * @} */ /* End group I2C_Register_Masks_GROUP 
 */

/* I2C0 - Peripheral instance base addresses */
#define I2C0_BasePtr                   0x40066000UL //!< Peripheral base address
#define I2C0                           ((I2C_Type *) I2C0_BasePtr) //!< Freescale base pointer
#define I2C0_BASE_PTR                  (I2C0) //!< Freescale style base pointer
#define I2C0_IRQS { I2C0_IRQn,  }

/**
 * @} */ /* End group I2C_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup I2C_Peripheral_access_layer_GROUP I2C Peripheral Access Layer
* @brief C Struct for I2C
* @{
*/

/* ================================================================================ */
/* ================           I2C1 (derived from I2C0)             ================ */
/* ================================================================================ */

/**
 * @brief Inter-Integrated Circuit
 */

/* I2C1 - Peripheral instance base addresses */
#define I2C1_BasePtr                   0x40067000UL //!< Peripheral base address
#define I2C1                           ((I2C_Type *) I2C1_BasePtr) //!< Freescale base pointer
#define I2C1_BASE_PTR                  (I2C1) //!< Freescale style base pointer
#define I2C1_IRQS { I2C1_IRQn,  }

/**
 * @} */ /* End group I2C_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup LLWU_Peripheral_access_layer_GROUP LLWU Peripheral Access Layer
* @brief C Struct for LLWU
* @{
*/

/* ================================================================================ */
/* ================           LLWU (file:LLWU_PE4_FILT2_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief Low leakage wakeup unit
 */
/**
* @addtogroup LLWU_structs_GROUP LLWU struct
* @brief Struct for LLWU
* @{
*/
typedef struct LLWU_Type {
   union {                                      /**< 0000: (size=0004)                                                  */
      __IO uint8_t   PE[4];                     /**< 0000: Pin Enable  Register                                         */
      struct {                                  /**< 0000: (size=0004)                                                  */
         __IO uint8_t   PE1;                    /**< 0000: Pin Enable 1 Register                                        */
         __IO uint8_t   PE2;                    /**< 0001: Pin Enable 2 Register                                        */
         __IO uint8_t   PE3;                    /**< 0002: Pin Enable 3 Register                                        */
         __IO uint8_t   PE4;                    /**< 0003: Pin Enable 4 Register                                        */
      };
   };
   __IO uint8_t   ME;                           /**< 0004: Module Enable Register                                       */
   union {                                      /**< 0005: (size=0002)                                                  */
      __IO uint8_t   PF[2];                     /**< 0005: Pin Flag  Register                                           */
      struct {                                  /**< 0005: (size=0002)                                                  */
         __IO uint8_t   PF1;                    /**< 0005: Pin Flag 1 Register                                          */
         __IO uint8_t   PF2;                    /**< 0006: Pin Flag 2 Register                                          */
      };
   };
   __I  uint8_t   MF;                           /**< 0007: Module Flag Register                                         */
   union {                                      /**< 0008: (size=0002)                                                  */
      __IO uint8_t   FILT[2];                   /**< 0008: Pin Filter register                                          */
      struct {                                  /**< 0008: (size=0002)                                                  */
         __IO uint8_t   FILT1;                  /**< 0008: Pin Filter register                                          */
         __IO uint8_t   FILT2;                  /**< 0009: Pin Filter register                                          */
      };
   };
} LLWU_Type;

/**
 * @} */ /* End group LLWU_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'LLWU' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup LLWU_Register_Masks_GROUP LLWU Register Masks
* @brief Register Masks for LLWU
* @{
*/
/* ------- PE Bit Fields                            ------ */
#define LLWU_PE_WUPE0_MASK                       (0x3U)                                              /*!< LLWU_PE.WUPE0 Mask                      */
#define LLWU_PE_WUPE0_SHIFT                      (0U)                                                /*!< LLWU_PE.WUPE0 Position                  */
#define LLWU_PE_WUPE0(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< LLWU_PE.WUPE0 Field                     */
#define LLWU_PE_WUPE1_MASK                       (0xCU)                                              /*!< LLWU_PE.WUPE1 Mask                      */
#define LLWU_PE_WUPE1_SHIFT                      (2U)                                                /*!< LLWU_PE.WUPE1 Position                  */
#define LLWU_PE_WUPE1(x)                         (((uint8_t)(((uint8_t)(x))<<2U))&0xCUL)             /*!< LLWU_PE.WUPE1 Field                     */
#define LLWU_PE_WUPE2_MASK                       (0x30U)                                             /*!< LLWU_PE.WUPE2 Mask                      */
#define LLWU_PE_WUPE2_SHIFT                      (4U)                                                /*!< LLWU_PE.WUPE2 Position                  */
#define LLWU_PE_WUPE2(x)                         (((uint8_t)(((uint8_t)(x))<<4U))&0x30UL)            /*!< LLWU_PE.WUPE2 Field                     */
#define LLWU_PE_WUPE3_MASK                       (0xC0U)                                             /*!< LLWU_PE.WUPE3 Mask                      */
#define LLWU_PE_WUPE3_SHIFT                      (6U)                                                /*!< LLWU_PE.WUPE3 Position                  */
#define LLWU_PE_WUPE3(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< LLWU_PE.WUPE3 Field                     */
/* ------- PE1 Bit Fields                           ------ */
#define LLWU_PE1_WUPE0_MASK                      (0x3U)                                              /*!< LLWU_PE1.WUPE0 Mask                     */
#define LLWU_PE1_WUPE0_SHIFT                     (0U)                                                /*!< LLWU_PE1.WUPE0 Position                 */
#define LLWU_PE1_WUPE0(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< LLWU_PE1.WUPE0 Field                    */
#define LLWU_PE1_WUPE1_MASK                      (0xCU)                                              /*!< LLWU_PE1.WUPE1 Mask                     */
#define LLWU_PE1_WUPE1_SHIFT                     (2U)                                                /*!< LLWU_PE1.WUPE1 Position                 */
#define LLWU_PE1_WUPE1(x)                        (((uint8_t)(((uint8_t)(x))<<2U))&0xCUL)             /*!< LLWU_PE1.WUPE1 Field                    */
#define LLWU_PE1_WUPE2_MASK                      (0x30U)                                             /*!< LLWU_PE1.WUPE2 Mask                     */
#define LLWU_PE1_WUPE2_SHIFT                     (4U)                                                /*!< LLWU_PE1.WUPE2 Position                 */
#define LLWU_PE1_WUPE2(x)                        (((uint8_t)(((uint8_t)(x))<<4U))&0x30UL)            /*!< LLWU_PE1.WUPE2 Field                    */
#define LLWU_PE1_WUPE3_MASK                      (0xC0U)                                             /*!< LLWU_PE1.WUPE3 Mask                     */
#define LLWU_PE1_WUPE3_SHIFT                     (6U)                                                /*!< LLWU_PE1.WUPE3 Position                 */
#define LLWU_PE1_WUPE3(x)                        (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< LLWU_PE1.WUPE3 Field                    */
/* ------- PE2 Bit Fields                           ------ */
#define LLWU_PE2_WUPE4_MASK                      (0x3U)                                              /*!< LLWU_PE2.WUPE4 Mask                     */
#define LLWU_PE2_WUPE4_SHIFT                     (0U)                                                /*!< LLWU_PE2.WUPE4 Position                 */
#define LLWU_PE2_WUPE4(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< LLWU_PE2.WUPE4 Field                    */
#define LLWU_PE2_WUPE5_MASK                      (0xCU)                                              /*!< LLWU_PE2.WUPE5 Mask                     */
#define LLWU_PE2_WUPE5_SHIFT                     (2U)                                                /*!< LLWU_PE2.WUPE5 Position                 */
#define LLWU_PE2_WUPE5(x)                        (((uint8_t)(((uint8_t)(x))<<2U))&0xCUL)             /*!< LLWU_PE2.WUPE5 Field                    */
#define LLWU_PE2_WUPE6_MASK                      (0x30U)                                             /*!< LLWU_PE2.WUPE6 Mask                     */
#define LLWU_PE2_WUPE6_SHIFT                     (4U)                                                /*!< LLWU_PE2.WUPE6 Position                 */
#define LLWU_PE2_WUPE6(x)                        (((uint8_t)(((uint8_t)(x))<<4U))&0x30UL)            /*!< LLWU_PE2.WUPE6 Field                    */
#define LLWU_PE2_WUPE7_MASK                      (0xC0U)                                             /*!< LLWU_PE2.WUPE7 Mask                     */
#define LLWU_PE2_WUPE7_SHIFT                     (6U)                                                /*!< LLWU_PE2.WUPE7 Position                 */
#define LLWU_PE2_WUPE7(x)                        (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< LLWU_PE2.WUPE7 Field                    */
/* ------- PE3 Bit Fields                           ------ */
#define LLWU_PE3_WUPE8_MASK                      (0x3U)                                              /*!< LLWU_PE3.WUPE8 Mask                     */
#define LLWU_PE3_WUPE8_SHIFT                     (0U)                                                /*!< LLWU_PE3.WUPE8 Position                 */
#define LLWU_PE3_WUPE8(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< LLWU_PE3.WUPE8 Field                    */
#define LLWU_PE3_WUPE9_MASK                      (0xCU)                                              /*!< LLWU_PE3.WUPE9 Mask                     */
#define LLWU_PE3_WUPE9_SHIFT                     (2U)                                                /*!< LLWU_PE3.WUPE9 Position                 */
#define LLWU_PE3_WUPE9(x)                        (((uint8_t)(((uint8_t)(x))<<2U))&0xCUL)             /*!< LLWU_PE3.WUPE9 Field                    */
#define LLWU_PE3_WUPE10_MASK                     (0x30U)                                             /*!< LLWU_PE3.WUPE10 Mask                    */
#define LLWU_PE3_WUPE10_SHIFT                    (4U)                                                /*!< LLWU_PE3.WUPE10 Position                */
#define LLWU_PE3_WUPE10(x)                       (((uint8_t)(((uint8_t)(x))<<4U))&0x30UL)            /*!< LLWU_PE3.WUPE10 Field                   */
#define LLWU_PE3_WUPE11_MASK                     (0xC0U)                                             /*!< LLWU_PE3.WUPE11 Mask                    */
#define LLWU_PE3_WUPE11_SHIFT                    (6U)                                                /*!< LLWU_PE3.WUPE11 Position                */
#define LLWU_PE3_WUPE11(x)                       (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< LLWU_PE3.WUPE11 Field                   */
/* ------- PE4 Bit Fields                           ------ */
#define LLWU_PE4_WUPE12_MASK                     (0x3U)                                              /*!< LLWU_PE4.WUPE12 Mask                    */
#define LLWU_PE4_WUPE12_SHIFT                    (0U)                                                /*!< LLWU_PE4.WUPE12 Position                */
#define LLWU_PE4_WUPE12(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< LLWU_PE4.WUPE12 Field                   */
#define LLWU_PE4_WUPE13_MASK                     (0xCU)                                              /*!< LLWU_PE4.WUPE13 Mask                    */
#define LLWU_PE4_WUPE13_SHIFT                    (2U)                                                /*!< LLWU_PE4.WUPE13 Position                */
#define LLWU_PE4_WUPE13(x)                       (((uint8_t)(((uint8_t)(x))<<2U))&0xCUL)             /*!< LLWU_PE4.WUPE13 Field                   */
#define LLWU_PE4_WUPE14_MASK                     (0x30U)                                             /*!< LLWU_PE4.WUPE14 Mask                    */
#define LLWU_PE4_WUPE14_SHIFT                    (4U)                                                /*!< LLWU_PE4.WUPE14 Position                */
#define LLWU_PE4_WUPE14(x)                       (((uint8_t)(((uint8_t)(x))<<4U))&0x30UL)            /*!< LLWU_PE4.WUPE14 Field                   */
#define LLWU_PE4_WUPE15_MASK                     (0xC0U)                                             /*!< LLWU_PE4.WUPE15 Mask                    */
#define LLWU_PE4_WUPE15_SHIFT                    (6U)                                                /*!< LLWU_PE4.WUPE15 Position                */
#define LLWU_PE4_WUPE15(x)                       (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< LLWU_PE4.WUPE15 Field                   */
/* ------- ME Bit Fields                            ------ */
#define LLWU_ME_WUME0_MASK                       (0x1U)                                              /*!< LLWU_ME.WUME0 Mask                      */
#define LLWU_ME_WUME0_SHIFT                      (0U)                                                /*!< LLWU_ME.WUME0 Position                  */
#define LLWU_ME_WUME0(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< LLWU_ME.WUME0 Field                     */
#define LLWU_ME_WUME1_MASK                       (0x2U)                                              /*!< LLWU_ME.WUME1 Mask                      */
#define LLWU_ME_WUME1_SHIFT                      (1U)                                                /*!< LLWU_ME.WUME1 Position                  */
#define LLWU_ME_WUME1(x)                         (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< LLWU_ME.WUME1 Field                     */
#define LLWU_ME_WUME2_MASK                       (0x4U)                                              /*!< LLWU_ME.WUME2 Mask                      */
#define LLWU_ME_WUME2_SHIFT                      (2U)                                                /*!< LLWU_ME.WUME2 Position                  */
#define LLWU_ME_WUME2(x)                         (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< LLWU_ME.WUME2 Field                     */
#define LLWU_ME_WUME3_MASK                       (0x8U)                                              /*!< LLWU_ME.WUME3 Mask                      */
#define LLWU_ME_WUME3_SHIFT                      (3U)                                                /*!< LLWU_ME.WUME3 Position                  */
#define LLWU_ME_WUME3(x)                         (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< LLWU_ME.WUME3 Field                     */
#define LLWU_ME_WUME4_MASK                       (0x10U)                                             /*!< LLWU_ME.WUME4 Mask                      */
#define LLWU_ME_WUME4_SHIFT                      (4U)                                                /*!< LLWU_ME.WUME4 Position                  */
#define LLWU_ME_WUME4(x)                         (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< LLWU_ME.WUME4 Field                     */
#define LLWU_ME_WUME5_MASK                       (0x20U)                                             /*!< LLWU_ME.WUME5 Mask                      */
#define LLWU_ME_WUME5_SHIFT                      (5U)                                                /*!< LLWU_ME.WUME5 Position                  */
#define LLWU_ME_WUME5(x)                         (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< LLWU_ME.WUME5 Field                     */
#define LLWU_ME_WUME6_MASK                       (0x40U)                                             /*!< LLWU_ME.WUME6 Mask                      */
#define LLWU_ME_WUME6_SHIFT                      (6U)                                                /*!< LLWU_ME.WUME6 Position                  */
#define LLWU_ME_WUME6(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< LLWU_ME.WUME6 Field                     */
#define LLWU_ME_WUME7_MASK                       (0x80U)                                             /*!< LLWU_ME.WUME7 Mask                      */
#define LLWU_ME_WUME7_SHIFT                      (7U)                                                /*!< LLWU_ME.WUME7 Position                  */
#define LLWU_ME_WUME7(x)                         (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< LLWU_ME.WUME7 Field                     */
/* ------- PF Bit Fields                            ------ */
#define LLWU_PF_WUF0_MASK                        (0x1U)                                              /*!< LLWU_PF.WUF0 Mask                       */
#define LLWU_PF_WUF0_SHIFT                       (0U)                                                /*!< LLWU_PF.WUF0 Position                   */
#define LLWU_PF_WUF0(x)                          (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< LLWU_PF.WUF0 Field                      */
#define LLWU_PF_WUF1_MASK                        (0x2U)                                              /*!< LLWU_PF.WUF1 Mask                       */
#define LLWU_PF_WUF1_SHIFT                       (1U)                                                /*!< LLWU_PF.WUF1 Position                   */
#define LLWU_PF_WUF1(x)                          (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< LLWU_PF.WUF1 Field                      */
#define LLWU_PF_WUF2_MASK                        (0x4U)                                              /*!< LLWU_PF.WUF2 Mask                       */
#define LLWU_PF_WUF2_SHIFT                       (2U)                                                /*!< LLWU_PF.WUF2 Position                   */
#define LLWU_PF_WUF2(x)                          (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< LLWU_PF.WUF2 Field                      */
#define LLWU_PF_WUF3_MASK                        (0x8U)                                              /*!< LLWU_PF.WUF3 Mask                       */
#define LLWU_PF_WUF3_SHIFT                       (3U)                                                /*!< LLWU_PF.WUF3 Position                   */
#define LLWU_PF_WUF3(x)                          (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< LLWU_PF.WUF3 Field                      */
#define LLWU_PF_WUF4_MASK                        (0x10U)                                             /*!< LLWU_PF.WUF4 Mask                       */
#define LLWU_PF_WUF4_SHIFT                       (4U)                                                /*!< LLWU_PF.WUF4 Position                   */
#define LLWU_PF_WUF4(x)                          (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< LLWU_PF.WUF4 Field                      */
#define LLWU_PF_WUF5_MASK                        (0x20U)                                             /*!< LLWU_PF.WUF5 Mask                       */
#define LLWU_PF_WUF5_SHIFT                       (5U)                                                /*!< LLWU_PF.WUF5 Position                   */
#define LLWU_PF_WUF5(x)                          (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< LLWU_PF.WUF5 Field                      */
#define LLWU_PF_WUF6_MASK                        (0x40U)                                             /*!< LLWU_PF.WUF6 Mask                       */
#define LLWU_PF_WUF6_SHIFT                       (6U)                                                /*!< LLWU_PF.WUF6 Position                   */
#define LLWU_PF_WUF6(x)                          (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< LLWU_PF.WUF6 Field                      */
#define LLWU_PF_WUF7_MASK                        (0x80U)                                             /*!< LLWU_PF.WUF7 Mask                       */
#define LLWU_PF_WUF7_SHIFT                       (7U)                                                /*!< LLWU_PF.WUF7 Position                   */
#define LLWU_PF_WUF7(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< LLWU_PF.WUF7 Field                      */
/* ------- PF1 Bit Fields                           ------ */
#define LLWU_PF1_WUF0_MASK                       (0x1U)                                              /*!< LLWU_PF1.WUF0 Mask                      */
#define LLWU_PF1_WUF0_SHIFT                      (0U)                                                /*!< LLWU_PF1.WUF0 Position                  */
#define LLWU_PF1_WUF0(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< LLWU_PF1.WUF0 Field                     */
#define LLWU_PF1_WUF1_MASK                       (0x2U)                                              /*!< LLWU_PF1.WUF1 Mask                      */
#define LLWU_PF1_WUF1_SHIFT                      (1U)                                                /*!< LLWU_PF1.WUF1 Position                  */
#define LLWU_PF1_WUF1(x)                         (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< LLWU_PF1.WUF1 Field                     */
#define LLWU_PF1_WUF2_MASK                       (0x4U)                                              /*!< LLWU_PF1.WUF2 Mask                      */
#define LLWU_PF1_WUF2_SHIFT                      (2U)                                                /*!< LLWU_PF1.WUF2 Position                  */
#define LLWU_PF1_WUF2(x)                         (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< LLWU_PF1.WUF2 Field                     */
#define LLWU_PF1_WUF3_MASK                       (0x8U)                                              /*!< LLWU_PF1.WUF3 Mask                      */
#define LLWU_PF1_WUF3_SHIFT                      (3U)                                                /*!< LLWU_PF1.WUF3 Position                  */
#define LLWU_PF1_WUF3(x)                         (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< LLWU_PF1.WUF3 Field                     */
#define LLWU_PF1_WUF4_MASK                       (0x10U)                                             /*!< LLWU_PF1.WUF4 Mask                      */
#define LLWU_PF1_WUF4_SHIFT                      (4U)                                                /*!< LLWU_PF1.WUF4 Position                  */
#define LLWU_PF1_WUF4(x)                         (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< LLWU_PF1.WUF4 Field                     */
#define LLWU_PF1_WUF5_MASK                       (0x20U)                                             /*!< LLWU_PF1.WUF5 Mask                      */
#define LLWU_PF1_WUF5_SHIFT                      (5U)                                                /*!< LLWU_PF1.WUF5 Position                  */
#define LLWU_PF1_WUF5(x)                         (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< LLWU_PF1.WUF5 Field                     */
#define LLWU_PF1_WUF6_MASK                       (0x40U)                                             /*!< LLWU_PF1.WUF6 Mask                      */
#define LLWU_PF1_WUF6_SHIFT                      (6U)                                                /*!< LLWU_PF1.WUF6 Position                  */
#define LLWU_PF1_WUF6(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< LLWU_PF1.WUF6 Field                     */
#define LLWU_PF1_WUF7_MASK                       (0x80U)                                             /*!< LLWU_PF1.WUF7 Mask                      */
#define LLWU_PF1_WUF7_SHIFT                      (7U)                                                /*!< LLWU_PF1.WUF7 Position                  */
#define LLWU_PF1_WUF7(x)                         (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< LLWU_PF1.WUF7 Field                     */
/* ------- PF2 Bit Fields                           ------ */
#define LLWU_PF2_WUF8_MASK                       (0x1U)                                              /*!< LLWU_PF2.WUF8 Mask                      */
#define LLWU_PF2_WUF8_SHIFT                      (0U)                                                /*!< LLWU_PF2.WUF8 Position                  */
#define LLWU_PF2_WUF8(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< LLWU_PF2.WUF8 Field                     */
#define LLWU_PF2_WUF9_MASK                       (0x2U)                                              /*!< LLWU_PF2.WUF9 Mask                      */
#define LLWU_PF2_WUF9_SHIFT                      (1U)                                                /*!< LLWU_PF2.WUF9 Position                  */
#define LLWU_PF2_WUF9(x)                         (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< LLWU_PF2.WUF9 Field                     */
#define LLWU_PF2_WUF10_MASK                      (0x4U)                                              /*!< LLWU_PF2.WUF10 Mask                     */
#define LLWU_PF2_WUF10_SHIFT                     (2U)                                                /*!< LLWU_PF2.WUF10 Position                 */
#define LLWU_PF2_WUF10(x)                        (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< LLWU_PF2.WUF10 Field                    */
#define LLWU_PF2_WUF11_MASK                      (0x8U)                                              /*!< LLWU_PF2.WUF11 Mask                     */
#define LLWU_PF2_WUF11_SHIFT                     (3U)                                                /*!< LLWU_PF2.WUF11 Position                 */
#define LLWU_PF2_WUF11(x)                        (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< LLWU_PF2.WUF11 Field                    */
#define LLWU_PF2_WUF12_MASK                      (0x10U)                                             /*!< LLWU_PF2.WUF12 Mask                     */
#define LLWU_PF2_WUF12_SHIFT                     (4U)                                                /*!< LLWU_PF2.WUF12 Position                 */
#define LLWU_PF2_WUF12(x)                        (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< LLWU_PF2.WUF12 Field                    */
#define LLWU_PF2_WUF13_MASK                      (0x20U)                                             /*!< LLWU_PF2.WUF13 Mask                     */
#define LLWU_PF2_WUF13_SHIFT                     (5U)                                                /*!< LLWU_PF2.WUF13 Position                 */
#define LLWU_PF2_WUF13(x)                        (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< LLWU_PF2.WUF13 Field                    */
#define LLWU_PF2_WUF14_MASK                      (0x40U)                                             /*!< LLWU_PF2.WUF14 Mask                     */
#define LLWU_PF2_WUF14_SHIFT                     (6U)                                                /*!< LLWU_PF2.WUF14 Position                 */
#define LLWU_PF2_WUF14(x)                        (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< LLWU_PF2.WUF14 Field                    */
#define LLWU_PF2_WUF15_MASK                      (0x80U)                                             /*!< LLWU_PF2.WUF15 Mask                     */
#define LLWU_PF2_WUF15_SHIFT                     (7U)                                                /*!< LLWU_PF2.WUF15 Position                 */
#define LLWU_PF2_WUF15(x)                        (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< LLWU_PF2.WUF15 Field                    */
/* ------- MF Bit Fields                            ------ */
#define LLWU_MF_MWUF0_MASK                       (0x1U)                                              /*!< LLWU_MF.MWUF0 Mask                      */
#define LLWU_MF_MWUF0_SHIFT                      (0U)                                                /*!< LLWU_MF.MWUF0 Position                  */
#define LLWU_MF_MWUF0(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< LLWU_MF.MWUF0 Field                     */
#define LLWU_MF_MWUF1_MASK                       (0x2U)                                              /*!< LLWU_MF.MWUF1 Mask                      */
#define LLWU_MF_MWUF1_SHIFT                      (1U)                                                /*!< LLWU_MF.MWUF1 Position                  */
#define LLWU_MF_MWUF1(x)                         (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< LLWU_MF.MWUF1 Field                     */
#define LLWU_MF_MWUF2_MASK                       (0x4U)                                              /*!< LLWU_MF.MWUF2 Mask                      */
#define LLWU_MF_MWUF2_SHIFT                      (2U)                                                /*!< LLWU_MF.MWUF2 Position                  */
#define LLWU_MF_MWUF2(x)                         (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< LLWU_MF.MWUF2 Field                     */
#define LLWU_MF_MWUF3_MASK                       (0x8U)                                              /*!< LLWU_MF.MWUF3 Mask                      */
#define LLWU_MF_MWUF3_SHIFT                      (3U)                                                /*!< LLWU_MF.MWUF3 Position                  */
#define LLWU_MF_MWUF3(x)                         (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< LLWU_MF.MWUF3 Field                     */
#define LLWU_MF_MWUF4_MASK                       (0x10U)                                             /*!< LLWU_MF.MWUF4 Mask                      */
#define LLWU_MF_MWUF4_SHIFT                      (4U)                                                /*!< LLWU_MF.MWUF4 Position                  */
#define LLWU_MF_MWUF4(x)                         (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< LLWU_MF.MWUF4 Field                     */
#define LLWU_MF_MWUF5_MASK                       (0x20U)                                             /*!< LLWU_MF.MWUF5 Mask                      */
#define LLWU_MF_MWUF5_SHIFT                      (5U)                                                /*!< LLWU_MF.MWUF5 Position                  */
#define LLWU_MF_MWUF5(x)                         (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< LLWU_MF.MWUF5 Field                     */
#define LLWU_MF_MWUF6_MASK                       (0x40U)                                             /*!< LLWU_MF.MWUF6 Mask                      */
#define LLWU_MF_MWUF6_SHIFT                      (6U)                                                /*!< LLWU_MF.MWUF6 Position                  */
#define LLWU_MF_MWUF6(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< LLWU_MF.MWUF6 Field                     */
#define LLWU_MF_MWUF7_MASK                       (0x80U)                                             /*!< LLWU_MF.MWUF7 Mask                      */
#define LLWU_MF_MWUF7_SHIFT                      (7U)                                                /*!< LLWU_MF.MWUF7 Position                  */
#define LLWU_MF_MWUF7(x)                         (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< LLWU_MF.MWUF7 Field                     */
/* ------- FILT Bit Fields                          ------ */
#define LLWU_FILT_FILTSEL_MASK                   (0xFU)                                              /*!< LLWU_FILT.FILTSEL Mask                  */
#define LLWU_FILT_FILTSEL_SHIFT                  (0U)                                                /*!< LLWU_FILT.FILTSEL Position              */
#define LLWU_FILT_FILTSEL(x)                     (((uint8_t)(((uint8_t)(x))<<0U))&0xFUL)             /*!< LLWU_FILT.FILTSEL Field                 */
#define LLWU_FILT_FILTE_MASK                     (0x60U)                                             /*!< LLWU_FILT.FILTE Mask                    */
#define LLWU_FILT_FILTE_SHIFT                    (5U)                                                /*!< LLWU_FILT.FILTE Position                */
#define LLWU_FILT_FILTE(x)                       (((uint8_t)(((uint8_t)(x))<<5U))&0x60UL)            /*!< LLWU_FILT.FILTE Field                   */
#define LLWU_FILT_FILTF_MASK                     (0x80U)                                             /*!< LLWU_FILT.FILTF Mask                    */
#define LLWU_FILT_FILTF_SHIFT                    (7U)                                                /*!< LLWU_FILT.FILTF Position                */
#define LLWU_FILT_FILTF(x)                       (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< LLWU_FILT.FILTF Field                   */
/* ------- FILT1 Bit Fields                         ------ */
#define LLWU_FILT1_FILTSEL_MASK                  (0xFU)                                              /*!< LLWU_FILT1.FILTSEL Mask                 */
#define LLWU_FILT1_FILTSEL_SHIFT                 (0U)                                                /*!< LLWU_FILT1.FILTSEL Position             */
#define LLWU_FILT1_FILTSEL(x)                    (((uint8_t)(((uint8_t)(x))<<0U))&0xFUL)             /*!< LLWU_FILT1.FILTSEL Field                */
#define LLWU_FILT1_FILTE_MASK                    (0x60U)                                             /*!< LLWU_FILT1.FILTE Mask                   */
#define LLWU_FILT1_FILTE_SHIFT                   (5U)                                                /*!< LLWU_FILT1.FILTE Position               */
#define LLWU_FILT1_FILTE(x)                      (((uint8_t)(((uint8_t)(x))<<5U))&0x60UL)            /*!< LLWU_FILT1.FILTE Field                  */
#define LLWU_FILT1_FILTF_MASK                    (0x80U)                                             /*!< LLWU_FILT1.FILTF Mask                   */
#define LLWU_FILT1_FILTF_SHIFT                   (7U)                                                /*!< LLWU_FILT1.FILTF Position               */
#define LLWU_FILT1_FILTF(x)                      (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< LLWU_FILT1.FILTF Field                  */
/* ------- FILT2 Bit Fields                         ------ */
#define LLWU_FILT2_FILTSEL_MASK                  (0xFU)                                              /*!< LLWU_FILT2.FILTSEL Mask                 */
#define LLWU_FILT2_FILTSEL_SHIFT                 (0U)                                                /*!< LLWU_FILT2.FILTSEL Position             */
#define LLWU_FILT2_FILTSEL(x)                    (((uint8_t)(((uint8_t)(x))<<0U))&0xFUL)             /*!< LLWU_FILT2.FILTSEL Field                */
#define LLWU_FILT2_FILTE_MASK                    (0x60U)                                             /*!< LLWU_FILT2.FILTE Mask                   */
#define LLWU_FILT2_FILTE_SHIFT                   (5U)                                                /*!< LLWU_FILT2.FILTE Position               */
#define LLWU_FILT2_FILTE(x)                      (((uint8_t)(((uint8_t)(x))<<5U))&0x60UL)            /*!< LLWU_FILT2.FILTE Field                  */
#define LLWU_FILT2_FILTF_MASK                    (0x80U)                                             /*!< LLWU_FILT2.FILTF Mask                   */
#define LLWU_FILT2_FILTF_SHIFT                   (7U)                                                /*!< LLWU_FILT2.FILTF Position               */
#define LLWU_FILT2_FILTF(x)                      (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< LLWU_FILT2.FILTF Field                  */
/**
 * @} */ /* End group LLWU_Register_Masks_GROUP 
 */

/* LLWU - Peripheral instance base addresses */
#define LLWU_BasePtr                   0x4007C000UL //!< Peripheral base address
#define LLWU                           ((LLWU_Type *) LLWU_BasePtr) //!< Freescale base pointer
#define LLWU_BASE_PTR                  (LLWU) //!< Freescale style base pointer
#define LLWU_IRQS { LLWU_IRQn,  }

/**
 * @} */ /* End group LLWU_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup LPTMR_Peripheral_access_layer_GROUP LPTMR Peripheral Access Layer
* @brief C Struct for LPTMR
* @{
*/

/* ================================================================================ */
/* ================           LPTMR0 (file:LPTMR0)                 ================ */
/* ================================================================================ */

/**
 * @brief Low Power Timer
 */
/**
* @addtogroup LPTMR_structs_GROUP LPTMR struct
* @brief Struct for LPTMR
* @{
*/
typedef struct LPTMR_Type {
   __IO uint32_t  CSR;                          /**< 0000: Control Status Register                                      */
   __IO uint32_t  PSR;                          /**< 0004: Prescale Register                                            */
   __IO uint32_t  CMR;                          /**< 0008: Compare Register                                             */
   __IO uint32_t  CNR;                          /**< 000C: Counter Register                                             */
} LPTMR_Type;

/**
 * @} */ /* End group LPTMR_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'LPTMR0' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup LPTMR_Register_Masks_GROUP LPTMR Register Masks
* @brief Register Masks for LPTMR
* @{
*/
/* ------- CSR Bit Fields                           ------ */
#define LPTMR_CSR_TEN_MASK                       (0x1U)                                              /*!< LPTMR0_CSR.TEN Mask                     */
#define LPTMR_CSR_TEN_SHIFT                      (0U)                                                /*!< LPTMR0_CSR.TEN Position                 */
#define LPTMR_CSR_TEN(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< LPTMR0_CSR.TEN Field                    */
#define LPTMR_CSR_TMS_MASK                       (0x2U)                                              /*!< LPTMR0_CSR.TMS Mask                     */
#define LPTMR_CSR_TMS_SHIFT                      (1U)                                                /*!< LPTMR0_CSR.TMS Position                 */
#define LPTMR_CSR_TMS(x)                         (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< LPTMR0_CSR.TMS Field                    */
#define LPTMR_CSR_TFC_MASK                       (0x4U)                                              /*!< LPTMR0_CSR.TFC Mask                     */
#define LPTMR_CSR_TFC_SHIFT                      (2U)                                                /*!< LPTMR0_CSR.TFC Position                 */
#define LPTMR_CSR_TFC(x)                         (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< LPTMR0_CSR.TFC Field                    */
#define LPTMR_CSR_TPP_MASK                       (0x8U)                                              /*!< LPTMR0_CSR.TPP Mask                     */
#define LPTMR_CSR_TPP_SHIFT                      (3U)                                                /*!< LPTMR0_CSR.TPP Position                 */
#define LPTMR_CSR_TPP(x)                         (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< LPTMR0_CSR.TPP Field                    */
#define LPTMR_CSR_TPS_MASK                       (0x30U)                                             /*!< LPTMR0_CSR.TPS Mask                     */
#define LPTMR_CSR_TPS_SHIFT                      (4U)                                                /*!< LPTMR0_CSR.TPS Position                 */
#define LPTMR_CSR_TPS(x)                         (((uint32_t)(((uint32_t)(x))<<4U))&0x30UL)          /*!< LPTMR0_CSR.TPS Field                    */
#define LPTMR_CSR_TIE_MASK                       (0x40U)                                             /*!< LPTMR0_CSR.TIE Mask                     */
#define LPTMR_CSR_TIE_SHIFT                      (6U)                                                /*!< LPTMR0_CSR.TIE Position                 */
#define LPTMR_CSR_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< LPTMR0_CSR.TIE Field                    */
#define LPTMR_CSR_TCF_MASK                       (0x80U)                                             /*!< LPTMR0_CSR.TCF Mask                     */
#define LPTMR_CSR_TCF_SHIFT                      (7U)                                                /*!< LPTMR0_CSR.TCF Position                 */
#define LPTMR_CSR_TCF(x)                         (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< LPTMR0_CSR.TCF Field                    */
/* ------- PSR Bit Fields                           ------ */
#define LPTMR_PSR_PCS_MASK                       (0x3U)                                              /*!< LPTMR0_PSR.PCS Mask                     */
#define LPTMR_PSR_PCS_SHIFT                      (0U)                                                /*!< LPTMR0_PSR.PCS Position                 */
#define LPTMR_PSR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< LPTMR0_PSR.PCS Field                    */
#define LPTMR_PSR_PBYP_MASK                      (0x4U)                                              /*!< LPTMR0_PSR.PBYP Mask                    */
#define LPTMR_PSR_PBYP_SHIFT                     (2U)                                                /*!< LPTMR0_PSR.PBYP Position                */
#define LPTMR_PSR_PBYP(x)                        (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< LPTMR0_PSR.PBYP Field                   */
#define LPTMR_PSR_PRESCALE_MASK                  (0x78U)                                             /*!< LPTMR0_PSR.PRESCALE Mask                */
#define LPTMR_PSR_PRESCALE_SHIFT                 (3U)                                                /*!< LPTMR0_PSR.PRESCALE Position            */
#define LPTMR_PSR_PRESCALE(x)                    (((uint32_t)(((uint32_t)(x))<<3U))&0x78UL)          /*!< LPTMR0_PSR.PRESCALE Field               */
/* ------- CMR Bit Fields                           ------ */
#define LPTMR_CMR_COMPARE_MASK                   (0xFFFFU)                                           /*!< LPTMR0_CMR.COMPARE Mask                 */
#define LPTMR_CMR_COMPARE_SHIFT                  (0U)                                                /*!< LPTMR0_CMR.COMPARE Position             */
#define LPTMR_CMR_COMPARE(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< LPTMR0_CMR.COMPARE Field                */
/* ------- CNR Bit Fields                           ------ */
#define LPTMR_CNR_COUNTER_MASK                   (0xFFFFU)                                           /*!< LPTMR0_CNR.COUNTER Mask                 */
#define LPTMR_CNR_COUNTER_SHIFT                  (0U)                                                /*!< LPTMR0_CNR.COUNTER Position             */
#define LPTMR_CNR_COUNTER(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< LPTMR0_CNR.COUNTER Field                */
/**
 * @} */ /* End group LPTMR_Register_Masks_GROUP 
 */

/* LPTMR0 - Peripheral instance base addresses */
#define LPTMR0_BasePtr                 0x40040000UL //!< Peripheral base address
#define LPTMR0                         ((LPTMR_Type *) LPTMR0_BasePtr) //!< Freescale base pointer
#define LPTMR0_BASE_PTR                (LPTMR0) //!< Freescale style base pointer
#define LPTMR0_IRQS { LPTMR0_IRQn,  }

/**
 * @} */ /* End group LPTMR_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup LPUART_Peripheral_access_layer_GROUP LPUART Peripheral Access Layer
* @brief C Struct for LPUART
* @{
*/

/* ================================================================================ */
/* ================           LPUART0 (file:LPUART0_MODIR_0x40054000)       ================ */
/* ================================================================================ */

/**
 * @brief Universal Asynchronous Receiver/Transmitter
 */
/**
* @addtogroup LPUART_structs_GROUP LPUART struct
* @brief Struct for LPUART
* @{
*/
typedef struct LPUART_Type {
   __IO uint32_t  BAUD;                         /**< 0000: Baud Rate Register                                           */
   __IO uint32_t  STAT;                         /**< 0004: Status Register                                              */
   __IO uint32_t  CTRL;                         /**< 0008: Control Register                                             */
   __IO uint32_t  DATA;                         /**< 000C: Data Register                                                */
   __IO uint32_t  MATCH;                        /**< 0010: Match Address Register                                       */
   __IO uint32_t  MODIR;                        /**< 0014: MODEM IrDA register                                          */
} LPUART_Type;

/**
 * @} */ /* End group LPUART_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'LPUART0' Position & Mask macros                     ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup LPUART_Register_Masks_GROUP LPUART Register Masks
* @brief Register Masks for LPUART
* @{
*/
/* ------- BAUD Bit Fields                          ------ */
#define LPUART_BAUD_SBR_MASK                     (0x1FFFU)                                           /*!< LPUART0_BAUD.SBR Mask                   */
#define LPUART_BAUD_SBR_SHIFT                    (0U)                                                /*!< LPUART0_BAUD.SBR Position               */
#define LPUART_BAUD_SBR(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)        /*!< LPUART0_BAUD.SBR Field                  */
#define LPUART_BAUD_SBNS_MASK                    (0x2000U)                                           /*!< LPUART0_BAUD.SBNS Mask                  */
#define LPUART_BAUD_SBNS_SHIFT                   (13U)                                               /*!< LPUART0_BAUD.SBNS Position              */
#define LPUART_BAUD_SBNS(x)                      (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< LPUART0_BAUD.SBNS Field                 */
#define LPUART_BAUD_RXEDGIE_MASK                 (0x4000U)                                           /*!< LPUART0_BAUD.RXEDGIE Mask               */
#define LPUART_BAUD_RXEDGIE_SHIFT                (14U)                                               /*!< LPUART0_BAUD.RXEDGIE Position           */
#define LPUART_BAUD_RXEDGIE(x)                   (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< LPUART0_BAUD.RXEDGIE Field              */
#define LPUART_BAUD_LBKDIE_MASK                  (0x8000U)                                           /*!< LPUART0_BAUD.LBKDIE Mask                */
#define LPUART_BAUD_LBKDIE_SHIFT                 (15U)                                               /*!< LPUART0_BAUD.LBKDIE Position            */
#define LPUART_BAUD_LBKDIE(x)                    (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< LPUART0_BAUD.LBKDIE Field               */
#define LPUART_BAUD_RESYNCDIS_MASK               (0x10000U)                                          /*!< LPUART0_BAUD.RESYNCDIS Mask             */
#define LPUART_BAUD_RESYNCDIS_SHIFT              (16U)                                               /*!< LPUART0_BAUD.RESYNCDIS Position         */
#define LPUART_BAUD_RESYNCDIS(x)                 (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< LPUART0_BAUD.RESYNCDIS Field            */
#define LPUART_BAUD_BOTHEDGE_MASK                (0x20000U)                                          /*!< LPUART0_BAUD.BOTHEDGE Mask              */
#define LPUART_BAUD_BOTHEDGE_SHIFT               (17U)                                               /*!< LPUART0_BAUD.BOTHEDGE Position          */
#define LPUART_BAUD_BOTHEDGE(x)                  (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< LPUART0_BAUD.BOTHEDGE Field             */
#define LPUART_BAUD_MATCFG_MASK                  (0xC0000U)                                          /*!< LPUART0_BAUD.MATCFG Mask                */
#define LPUART_BAUD_MATCFG_SHIFT                 (18U)                                               /*!< LPUART0_BAUD.MATCFG Position            */
#define LPUART_BAUD_MATCFG(x)                    (((uint32_t)(((uint32_t)(x))<<18U))&0xC0000UL)      /*!< LPUART0_BAUD.MATCFG Field               */
#define LPUART_BAUD_RDMAE_MASK                   (0x200000U)                                         /*!< LPUART0_BAUD.RDMAE Mask                 */
#define LPUART_BAUD_RDMAE_SHIFT                  (21U)                                               /*!< LPUART0_BAUD.RDMAE Position             */
#define LPUART_BAUD_RDMAE(x)                     (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< LPUART0_BAUD.RDMAE Field                */
#define LPUART_BAUD_TDMAE_MASK                   (0x800000U)                                         /*!< LPUART0_BAUD.TDMAE Mask                 */
#define LPUART_BAUD_TDMAE_SHIFT                  (23U)                                               /*!< LPUART0_BAUD.TDMAE Position             */
#define LPUART_BAUD_TDMAE(x)                     (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< LPUART0_BAUD.TDMAE Field                */
#define LPUART_BAUD_OSR_MASK                     (0x1F000000U)                                       /*!< LPUART0_BAUD.OSR Mask                   */
#define LPUART_BAUD_OSR_SHIFT                    (24U)                                               /*!< LPUART0_BAUD.OSR Position               */
#define LPUART_BAUD_OSR(x)                       (((uint32_t)(((uint32_t)(x))<<24U))&0x1F000000UL)   /*!< LPUART0_BAUD.OSR Field                  */
#define LPUART_BAUD_M10_MASK                     (0x20000000U)                                       /*!< LPUART0_BAUD.M10 Mask                   */
#define LPUART_BAUD_M10_SHIFT                    (29U)                                               /*!< LPUART0_BAUD.M10 Position               */
#define LPUART_BAUD_M10(x)                       (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< LPUART0_BAUD.M10 Field                  */
#define LPUART_BAUD_MAEN2_MASK                   (0x40000000U)                                       /*!< LPUART0_BAUD.MAEN2 Mask                 */
#define LPUART_BAUD_MAEN2_SHIFT                  (30U)                                               /*!< LPUART0_BAUD.MAEN2 Position             */
#define LPUART_BAUD_MAEN2(x)                     (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< LPUART0_BAUD.MAEN2 Field                */
#define LPUART_BAUD_MAEN1_MASK                   (0x80000000U)                                       /*!< LPUART0_BAUD.MAEN1 Mask                 */
#define LPUART_BAUD_MAEN1_SHIFT                  (31U)                                               /*!< LPUART0_BAUD.MAEN1 Position             */
#define LPUART_BAUD_MAEN1(x)                     (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< LPUART0_BAUD.MAEN1 Field                */
/* ------- STAT Bit Fields                          ------ */
#define LPUART_STAT_MA2F_MASK                    (0x4000U)                                           /*!< LPUART0_STAT.MA2F Mask                  */
#define LPUART_STAT_MA2F_SHIFT                   (14U)                                               /*!< LPUART0_STAT.MA2F Position              */
#define LPUART_STAT_MA2F(x)                      (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< LPUART0_STAT.MA2F Field                 */
#define LPUART_STAT_MA1F_MASK                    (0x8000U)                                           /*!< LPUART0_STAT.MA1F Mask                  */
#define LPUART_STAT_MA1F_SHIFT                   (15U)                                               /*!< LPUART0_STAT.MA1F Position              */
#define LPUART_STAT_MA1F(x)                      (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< LPUART0_STAT.MA1F Field                 */
#define LPUART_STAT_PF_MASK                      (0x10000U)                                          /*!< LPUART0_STAT.PF Mask                    */
#define LPUART_STAT_PF_SHIFT                     (16U)                                               /*!< LPUART0_STAT.PF Position                */
#define LPUART_STAT_PF(x)                        (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< LPUART0_STAT.PF Field                   */
#define LPUART_STAT_FE_MASK                      (0x20000U)                                          /*!< LPUART0_STAT.FE Mask                    */
#define LPUART_STAT_FE_SHIFT                     (17U)                                               /*!< LPUART0_STAT.FE Position                */
#define LPUART_STAT_FE(x)                        (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< LPUART0_STAT.FE Field                   */
#define LPUART_STAT_NF_MASK                      (0x40000U)                                          /*!< LPUART0_STAT.NF Mask                    */
#define LPUART_STAT_NF_SHIFT                     (18U)                                               /*!< LPUART0_STAT.NF Position                */
#define LPUART_STAT_NF(x)                        (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< LPUART0_STAT.NF Field                   */
#define LPUART_STAT_OR_MASK                      (0x80000U)                                          /*!< LPUART0_STAT.OR Mask                    */
#define LPUART_STAT_OR_SHIFT                     (19U)                                               /*!< LPUART0_STAT.OR Position                */
#define LPUART_STAT_OR(x)                        (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< LPUART0_STAT.OR Field                   */
#define LPUART_STAT_IDLE_MASK                    (0x100000U)                                         /*!< LPUART0_STAT.IDLE Mask                  */
#define LPUART_STAT_IDLE_SHIFT                   (20U)                                               /*!< LPUART0_STAT.IDLE Position              */
#define LPUART_STAT_IDLE(x)                      (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< LPUART0_STAT.IDLE Field                 */
#define LPUART_STAT_RDRF_MASK                    (0x200000U)                                         /*!< LPUART0_STAT.RDRF Mask                  */
#define LPUART_STAT_RDRF_SHIFT                   (21U)                                               /*!< LPUART0_STAT.RDRF Position              */
#define LPUART_STAT_RDRF(x)                      (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< LPUART0_STAT.RDRF Field                 */
#define LPUART_STAT_TC_MASK                      (0x400000U)                                         /*!< LPUART0_STAT.TC Mask                    */
#define LPUART_STAT_TC_SHIFT                     (22U)                                               /*!< LPUART0_STAT.TC Position                */
#define LPUART_STAT_TC(x)                        (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< LPUART0_STAT.TC Field                   */
#define LPUART_STAT_TDRE_MASK                    (0x800000U)                                         /*!< LPUART0_STAT.TDRE Mask                  */
#define LPUART_STAT_TDRE_SHIFT                   (23U)                                               /*!< LPUART0_STAT.TDRE Position              */
#define LPUART_STAT_TDRE(x)                      (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< LPUART0_STAT.TDRE Field                 */
#define LPUART_STAT_RAF_MASK                     (0x1000000U)                                        /*!< LPUART0_STAT.RAF Mask                   */
#define LPUART_STAT_RAF_SHIFT                    (24U)                                               /*!< LPUART0_STAT.RAF Position               */
#define LPUART_STAT_RAF(x)                       (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< LPUART0_STAT.RAF Field                  */
#define LPUART_STAT_LBKDE_MASK                   (0x2000000U)                                        /*!< LPUART0_STAT.LBKDE Mask                 */
#define LPUART_STAT_LBKDE_SHIFT                  (25U)                                               /*!< LPUART0_STAT.LBKDE Position             */
#define LPUART_STAT_LBKDE(x)                     (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< LPUART0_STAT.LBKDE Field                */
#define LPUART_STAT_BRK13_MASK                   (0x4000000U)                                        /*!< LPUART0_STAT.BRK13 Mask                 */
#define LPUART_STAT_BRK13_SHIFT                  (26U)                                               /*!< LPUART0_STAT.BRK13 Position             */
#define LPUART_STAT_BRK13(x)                     (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< LPUART0_STAT.BRK13 Field                */
#define LPUART_STAT_RWUID_MASK                   (0x8000000U)                                        /*!< LPUART0_STAT.RWUID Mask                 */
#define LPUART_STAT_RWUID_SHIFT                  (27U)                                               /*!< LPUART0_STAT.RWUID Position             */
#define LPUART_STAT_RWUID(x)                     (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< LPUART0_STAT.RWUID Field                */
#define LPUART_STAT_RXINV_MASK                   (0x10000000U)                                       /*!< LPUART0_STAT.RXINV Mask                 */
#define LPUART_STAT_RXINV_SHIFT                  (28U)                                               /*!< LPUART0_STAT.RXINV Position             */
#define LPUART_STAT_RXINV(x)                     (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< LPUART0_STAT.RXINV Field                */
#define LPUART_STAT_MSBF_MASK                    (0x20000000U)                                       /*!< LPUART0_STAT.MSBF Mask                  */
#define LPUART_STAT_MSBF_SHIFT                   (29U)                                               /*!< LPUART0_STAT.MSBF Position              */
#define LPUART_STAT_MSBF(x)                      (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< LPUART0_STAT.MSBF Field                 */
#define LPUART_STAT_RXEDGIF_MASK                 (0x40000000U)                                       /*!< LPUART0_STAT.RXEDGIF Mask               */
#define LPUART_STAT_RXEDGIF_SHIFT                (30U)                                               /*!< LPUART0_STAT.RXEDGIF Position           */
#define LPUART_STAT_RXEDGIF(x)                   (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< LPUART0_STAT.RXEDGIF Field              */
#define LPUART_STAT_LBKDIF_MASK                  (0x80000000U)                                       /*!< LPUART0_STAT.LBKDIF Mask                */
#define LPUART_STAT_LBKDIF_SHIFT                 (31U)                                               /*!< LPUART0_STAT.LBKDIF Position            */
#define LPUART_STAT_LBKDIF(x)                    (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< LPUART0_STAT.LBKDIF Field               */
/* ------- CTRL Bit Fields                          ------ */
#define LPUART_CTRL_PT_MASK                      (0x1U)                                              /*!< LPUART0_CTRL.PT Mask                    */
#define LPUART_CTRL_PT_SHIFT                     (0U)                                                /*!< LPUART0_CTRL.PT Position                */
#define LPUART_CTRL_PT(x)                        (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< LPUART0_CTRL.PT Field                   */
#define LPUART_CTRL_PE_MASK                      (0x2U)                                              /*!< LPUART0_CTRL.PE Mask                    */
#define LPUART_CTRL_PE_SHIFT                     (1U)                                                /*!< LPUART0_CTRL.PE Position                */
#define LPUART_CTRL_PE(x)                        (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< LPUART0_CTRL.PE Field                   */
#define LPUART_CTRL_ILT_MASK                     (0x4U)                                              /*!< LPUART0_CTRL.ILT Mask                   */
#define LPUART_CTRL_ILT_SHIFT                    (2U)                                                /*!< LPUART0_CTRL.ILT Position               */
#define LPUART_CTRL_ILT(x)                       (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< LPUART0_CTRL.ILT Field                  */
#define LPUART_CTRL_WAKE_MASK                    (0x8U)                                              /*!< LPUART0_CTRL.WAKE Mask                  */
#define LPUART_CTRL_WAKE_SHIFT                   (3U)                                                /*!< LPUART0_CTRL.WAKE Position              */
#define LPUART_CTRL_WAKE(x)                      (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< LPUART0_CTRL.WAKE Field                 */
#define LPUART_CTRL_M_MASK                       (0x10U)                                             /*!< LPUART0_CTRL.M Mask                     */
#define LPUART_CTRL_M_SHIFT                      (4U)                                                /*!< LPUART0_CTRL.M Position                 */
#define LPUART_CTRL_M(x)                         (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< LPUART0_CTRL.M Field                    */
#define LPUART_CTRL_RSRC_MASK                    (0x20U)                                             /*!< LPUART0_CTRL.RSRC Mask                  */
#define LPUART_CTRL_RSRC_SHIFT                   (5U)                                                /*!< LPUART0_CTRL.RSRC Position              */
#define LPUART_CTRL_RSRC(x)                      (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< LPUART0_CTRL.RSRC Field                 */
#define LPUART_CTRL_DOZEEN_MASK                  (0x40U)                                             /*!< LPUART0_CTRL.DOZEEN Mask                */
#define LPUART_CTRL_DOZEEN_SHIFT                 (6U)                                                /*!< LPUART0_CTRL.DOZEEN Position            */
#define LPUART_CTRL_DOZEEN(x)                    (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< LPUART0_CTRL.DOZEEN Field               */
#define LPUART_CTRL_LOOPS_MASK                   (0x80U)                                             /*!< LPUART0_CTRL.LOOPS Mask                 */
#define LPUART_CTRL_LOOPS_SHIFT                  (7U)                                                /*!< LPUART0_CTRL.LOOPS Position             */
#define LPUART_CTRL_LOOPS(x)                     (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< LPUART0_CTRL.LOOPS Field                */
#define LPUART_CTRL_IDLECFG_MASK                 (0x700U)                                            /*!< LPUART0_CTRL.IDLECFG Mask               */
#define LPUART_CTRL_IDLECFG_SHIFT                (8U)                                                /*!< LPUART0_CTRL.IDLECFG Position           */
#define LPUART_CTRL_IDLECFG(x)                   (((uint32_t)(((uint32_t)(x))<<8U))&0x700UL)         /*!< LPUART0_CTRL.IDLECFG Field              */
#define LPUART_CTRL_MA2IE_MASK                   (0x4000U)                                           /*!< LPUART0_CTRL.MA2IE Mask                 */
#define LPUART_CTRL_MA2IE_SHIFT                  (14U)                                               /*!< LPUART0_CTRL.MA2IE Position             */
#define LPUART_CTRL_MA2IE(x)                     (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< LPUART0_CTRL.MA2IE Field                */
#define LPUART_CTRL_MA1IE_MASK                   (0x8000U)                                           /*!< LPUART0_CTRL.MA1IE Mask                 */
#define LPUART_CTRL_MA1IE_SHIFT                  (15U)                                               /*!< LPUART0_CTRL.MA1IE Position             */
#define LPUART_CTRL_MA1IE(x)                     (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< LPUART0_CTRL.MA1IE Field                */
#define LPUART_CTRL_SBK_MASK                     (0x10000U)                                          /*!< LPUART0_CTRL.SBK Mask                   */
#define LPUART_CTRL_SBK_SHIFT                    (16U)                                               /*!< LPUART0_CTRL.SBK Position               */
#define LPUART_CTRL_SBK(x)                       (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< LPUART0_CTRL.SBK Field                  */
#define LPUART_CTRL_RWU_MASK                     (0x20000U)                                          /*!< LPUART0_CTRL.RWU Mask                   */
#define LPUART_CTRL_RWU_SHIFT                    (17U)                                               /*!< LPUART0_CTRL.RWU Position               */
#define LPUART_CTRL_RWU(x)                       (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< LPUART0_CTRL.RWU Field                  */
#define LPUART_CTRL_RE_MASK                      (0x40000U)                                          /*!< LPUART0_CTRL.RE Mask                    */
#define LPUART_CTRL_RE_SHIFT                     (18U)                                               /*!< LPUART0_CTRL.RE Position                */
#define LPUART_CTRL_RE(x)                        (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< LPUART0_CTRL.RE Field                   */
#define LPUART_CTRL_TE_MASK                      (0x80000U)                                          /*!< LPUART0_CTRL.TE Mask                    */
#define LPUART_CTRL_TE_SHIFT                     (19U)                                               /*!< LPUART0_CTRL.TE Position                */
#define LPUART_CTRL_TE(x)                        (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< LPUART0_CTRL.TE Field                   */
#define LPUART_CTRL_ILIE_MASK                    (0x100000U)                                         /*!< LPUART0_CTRL.ILIE Mask                  */
#define LPUART_CTRL_ILIE_SHIFT                   (20U)                                               /*!< LPUART0_CTRL.ILIE Position              */
#define LPUART_CTRL_ILIE(x)                      (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< LPUART0_CTRL.ILIE Field                 */
#define LPUART_CTRL_RIE_MASK                     (0x200000U)                                         /*!< LPUART0_CTRL.RIE Mask                   */
#define LPUART_CTRL_RIE_SHIFT                    (21U)                                               /*!< LPUART0_CTRL.RIE Position               */
#define LPUART_CTRL_RIE(x)                       (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< LPUART0_CTRL.RIE Field                  */
#define LPUART_CTRL_TCIE_MASK                    (0x400000U)                                         /*!< LPUART0_CTRL.TCIE Mask                  */
#define LPUART_CTRL_TCIE_SHIFT                   (22U)                                               /*!< LPUART0_CTRL.TCIE Position              */
#define LPUART_CTRL_TCIE(x)                      (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< LPUART0_CTRL.TCIE Field                 */
#define LPUART_CTRL_TIE_MASK                     (0x800000U)                                         /*!< LPUART0_CTRL.TIE Mask                   */
#define LPUART_CTRL_TIE_SHIFT                    (23U)                                               /*!< LPUART0_CTRL.TIE Position               */
#define LPUART_CTRL_TIE(x)                       (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< LPUART0_CTRL.TIE Field                  */
#define LPUART_CTRL_PEIE_MASK                    (0x1000000U)                                        /*!< LPUART0_CTRL.PEIE Mask                  */
#define LPUART_CTRL_PEIE_SHIFT                   (24U)                                               /*!< LPUART0_CTRL.PEIE Position              */
#define LPUART_CTRL_PEIE(x)                      (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< LPUART0_CTRL.PEIE Field                 */
#define LPUART_CTRL_FEIE_MASK                    (0x2000000U)                                        /*!< LPUART0_CTRL.FEIE Mask                  */
#define LPUART_CTRL_FEIE_SHIFT                   (25U)                                               /*!< LPUART0_CTRL.FEIE Position              */
#define LPUART_CTRL_FEIE(x)                      (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< LPUART0_CTRL.FEIE Field                 */
#define LPUART_CTRL_NEIE_MASK                    (0x4000000U)                                        /*!< LPUART0_CTRL.NEIE Mask                  */
#define LPUART_CTRL_NEIE_SHIFT                   (26U)                                               /*!< LPUART0_CTRL.NEIE Position              */
#define LPUART_CTRL_NEIE(x)                      (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< LPUART0_CTRL.NEIE Field                 */
#define LPUART_CTRL_ORIE_MASK                    (0x8000000U)                                        /*!< LPUART0_CTRL.ORIE Mask                  */
#define LPUART_CTRL_ORIE_SHIFT                   (27U)                                               /*!< LPUART0_CTRL.ORIE Position              */
#define LPUART_CTRL_ORIE(x)                      (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< LPUART0_CTRL.ORIE Field                 */
#define LPUART_CTRL_TXINV_MASK                   (0x10000000U)                                       /*!< LPUART0_CTRL.TXINV Mask                 */
#define LPUART_CTRL_TXINV_SHIFT                  (28U)                                               /*!< LPUART0_CTRL.TXINV Position             */
#define LPUART_CTRL_TXINV(x)                     (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< LPUART0_CTRL.TXINV Field                */
#define LPUART_CTRL_TXDIR_MASK                   (0x20000000U)                                       /*!< LPUART0_CTRL.TXDIR Mask                 */
#define LPUART_CTRL_TXDIR_SHIFT                  (29U)                                               /*!< LPUART0_CTRL.TXDIR Position             */
#define LPUART_CTRL_TXDIR(x)                     (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< LPUART0_CTRL.TXDIR Field                */
#define LPUART_CTRL_R9T8_MASK                    (0x40000000U)                                       /*!< LPUART0_CTRL.R9T8 Mask                  */
#define LPUART_CTRL_R9T8_SHIFT                   (30U)                                               /*!< LPUART0_CTRL.R9T8 Position              */
#define LPUART_CTRL_R9T8(x)                      (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< LPUART0_CTRL.R9T8 Field                 */
#define LPUART_CTRL_R8T9_MASK                    (0x80000000U)                                       /*!< LPUART0_CTRL.R8T9 Mask                  */
#define LPUART_CTRL_R8T9_SHIFT                   (31U)                                               /*!< LPUART0_CTRL.R8T9 Position              */
#define LPUART_CTRL_R8T9(x)                      (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< LPUART0_CTRL.R8T9 Field                 */
/* ------- DATA Bit Fields                          ------ */
#define LPUART_DATA_RT_MASK                      (0x3FFU)                                            /*!< LPUART0_DATA.RT Mask                    */
#define LPUART_DATA_RT_SHIFT                     (0U)                                                /*!< LPUART0_DATA.RT Position                */
#define LPUART_DATA_RT(x)                        (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)         /*!< LPUART0_DATA.RT Field                   */
#define LPUART_DATA_IDLINE_MASK                  (0x800U)                                            /*!< LPUART0_DATA.IDLINE Mask                */
#define LPUART_DATA_IDLINE_SHIFT                 (11U)                                               /*!< LPUART0_DATA.IDLINE Position            */
#define LPUART_DATA_IDLINE(x)                    (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< LPUART0_DATA.IDLINE Field               */
#define LPUART_DATA_RXEMPT_MASK                  (0x1000U)                                           /*!< LPUART0_DATA.RXEMPT Mask                */
#define LPUART_DATA_RXEMPT_SHIFT                 (12U)                                               /*!< LPUART0_DATA.RXEMPT Position            */
#define LPUART_DATA_RXEMPT(x)                    (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< LPUART0_DATA.RXEMPT Field               */
#define LPUART_DATA_FRETSC_MASK                  (0x2000U)                                           /*!< LPUART0_DATA.FRETSC Mask                */
#define LPUART_DATA_FRETSC_SHIFT                 (13U)                                               /*!< LPUART0_DATA.FRETSC Position            */
#define LPUART_DATA_FRETSC(x)                    (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< LPUART0_DATA.FRETSC Field               */
#define LPUART_DATA_PARITYE_MASK                 (0x4000U)                                           /*!< LPUART0_DATA.PARITYE Mask               */
#define LPUART_DATA_PARITYE_SHIFT                (14U)                                               /*!< LPUART0_DATA.PARITYE Position           */
#define LPUART_DATA_PARITYE(x)                   (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< LPUART0_DATA.PARITYE Field              */
#define LPUART_DATA_NOISY_MASK                   (0x8000U)                                           /*!< LPUART0_DATA.NOISY Mask                 */
#define LPUART_DATA_NOISY_SHIFT                  (15U)                                               /*!< LPUART0_DATA.NOISY Position             */
#define LPUART_DATA_NOISY(x)                     (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< LPUART0_DATA.NOISY Field                */
/* ------- MATCH Bit Fields                         ------ */
#define LPUART_MATCH_MA1_MASK                    (0x3FFU)                                            /*!< LPUART0_MATCH.MA1 Mask                  */
#define LPUART_MATCH_MA1_SHIFT                   (0U)                                                /*!< LPUART0_MATCH.MA1 Position              */
#define LPUART_MATCH_MA1(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)         /*!< LPUART0_MATCH.MA1 Field                 */
#define LPUART_MATCH_MA2_MASK                    (0x3FF0000U)                                        /*!< LPUART0_MATCH.MA2 Mask                  */
#define LPUART_MATCH_MA2_SHIFT                   (16U)                                               /*!< LPUART0_MATCH.MA2 Position              */
#define LPUART_MATCH_MA2(x)                      (((uint32_t)(((uint32_t)(x))<<16U))&0x3FF0000UL)    /*!< LPUART0_MATCH.MA2 Field                 */
/* ------- MODIR Bit Fields                         ------ */
#define LPUART_MODIR_TXCTSE_MASK                 (0x1U)                                              /*!< LPUART0_MODIR.TXCTSE Mask               */
#define LPUART_MODIR_TXCTSE_SHIFT                (0U)                                                /*!< LPUART0_MODIR.TXCTSE Position           */
#define LPUART_MODIR_TXCTSE(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< LPUART0_MODIR.TXCTSE Field              */
#define LPUART_MODIR_TXRTSE_MASK                 (0x2U)                                              /*!< LPUART0_MODIR.TXRTSE Mask               */
#define LPUART_MODIR_TXRTSE_SHIFT                (1U)                                                /*!< LPUART0_MODIR.TXRTSE Position           */
#define LPUART_MODIR_TXRTSE(x)                   (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< LPUART0_MODIR.TXRTSE Field              */
#define LPUART_MODIR_TXRTSPOL_MASK               (0x4U)                                              /*!< LPUART0_MODIR.TXRTSPOL Mask             */
#define LPUART_MODIR_TXRTSPOL_SHIFT              (2U)                                                /*!< LPUART0_MODIR.TXRTSPOL Position         */
#define LPUART_MODIR_TXRTSPOL(x)                 (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< LPUART0_MODIR.TXRTSPOL Field            */
#define LPUART_MODIR_RXRTSE_MASK                 (0x8U)                                              /*!< LPUART0_MODIR.RXRTSE Mask               */
#define LPUART_MODIR_RXRTSE_SHIFT                (3U)                                                /*!< LPUART0_MODIR.RXRTSE Position           */
#define LPUART_MODIR_RXRTSE(x)                   (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< LPUART0_MODIR.RXRTSE Field              */
#define LPUART_MODIR_TXCTSC_MASK                 (0x10U)                                             /*!< LPUART0_MODIR.TXCTSC Mask               */
#define LPUART_MODIR_TXCTSC_SHIFT                (4U)                                                /*!< LPUART0_MODIR.TXCTSC Position           */
#define LPUART_MODIR_TXCTSC(x)                   (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< LPUART0_MODIR.TXCTSC Field              */
#define LPUART_MODIR_TXCTSSRC_MASK               (0x20U)                                             /*!< LPUART0_MODIR.TXCTSSRC Mask             */
#define LPUART_MODIR_TXCTSSRC_SHIFT              (5U)                                                /*!< LPUART0_MODIR.TXCTSSRC Position         */
#define LPUART_MODIR_TXCTSSRC(x)                 (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< LPUART0_MODIR.TXCTSSRC Field            */
#define LPUART_MODIR_TNP_MASK                    (0x30000U)                                          /*!< LPUART0_MODIR.TNP Mask                  */
#define LPUART_MODIR_TNP_SHIFT                   (16U)                                               /*!< LPUART0_MODIR.TNP Position              */
#define LPUART_MODIR_TNP(x)                      (((uint32_t)(((uint32_t)(x))<<16U))&0x30000UL)      /*!< LPUART0_MODIR.TNP Field                 */
#define LPUART_MODIR_IREN_MASK                   (0x40000U)                                          /*!< LPUART0_MODIR.IREN Mask                 */
#define LPUART_MODIR_IREN_SHIFT                  (18U)                                               /*!< LPUART0_MODIR.IREN Position             */
#define LPUART_MODIR_IREN(x)                     (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< LPUART0_MODIR.IREN Field                */
/**
 * @} */ /* End group LPUART_Register_Masks_GROUP 
 */

/* LPUART0 - Peripheral instance base addresses */
#define LPUART0_BasePtr                0x40054000UL //!< Peripheral base address
#define LPUART0                        ((LPUART_Type *) LPUART0_BasePtr) //!< Freescale base pointer
#define LPUART0_BASE_PTR               (LPUART0) //!< Freescale style base pointer
#define LPUART0_IRQS { LPUART0_IRQn,  }

/**
 * @} */ /* End group LPUART_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup LTC_Peripheral_access_layer_GROUP LTC Peripheral Access Layer
* @brief C Struct for LTC
* @{
*/

/* ================================================================================ */
/* ================           LTC0 (file:LTC0_MKW41Z4)             ================ */
/* ================================================================================ */

/**
 * @brief LP Trusted Cryptography
 */
/**
* @addtogroup LTC_structs_GROUP LTC struct
* @brief Struct for LTC
* @{
*/
typedef struct LTC_Type {
   __IO uint32_t  MD;                           /**< 0000: Mode Register                                                */
        uint8_t   RESERVED_0[4];                /**< 0004: 0x4 bytes                                                    */
   __O  uint32_t  KS;                           /**< 0008: Key Size Register                                            */
        uint8_t   RESERVED_1[4];                /**< 000C: 0x4 bytes                                                    */
   __IO uint32_t  DS;                           /**< 0010: Data Size Register                                           */
        uint8_t   RESERVED_2[4];                /**< 0014: 0x4 bytes                                                    */
   __IO uint32_t  ICVS;                         /**< 0018: ICV Size Register                                            */
        uint8_t   RESERVED_3[20];               /**< 001C: 0x14 bytes                                                   */
   __O  uint32_t  COM;                          /**< 0030: Command Register                                             */
   __IO uint32_t  CTL;                          /**< 0034: Control Register                                             */
        uint8_t   RESERVED_4[8];                /**< 0038: 0x8 bytes                                                    */
   __O  uint32_t  CW;                           /**< 0040: Clear Written Register                                       */
        uint8_t   RESERVED_5[4];                /**< 0044: 0x4 bytes                                                    */
   __IO uint32_t  STA;                          /**< 0048: Status Register                                              */
   __I  uint32_t  ESTA;                         /**< 004C: Error Status Register                                        */
        uint8_t   RESERVED_6[8];                /**< 0050: 0x8 bytes                                                    */
   __IO uint32_t  AADSZ;                        /**< 0058: AAD Size Register                                            */
        uint8_t   RESERVED_7[164];              /**< 005C: 0xA4 bytes                                                   */
   __IO uint32_t  CTX[14];                      /**< 0100: Context Register                                             */
        uint8_t   RESERVED_8[200];              /**< 0138: 0xC8 bytes                                                   */
   __IO uint32_t  KEY[4];                       /**< 0200: Key                                                          */
        uint8_t   RESERVED_9[736];              /**< 0210: 0x2E0 bytes                                                  */
   __I  uint32_t  VID1;                         /**< 04F0: Version ID Register                                          */
   __I  uint32_t  VID2;                         /**< 04F4: Version ID 2 Register                                        */
   __I  uint32_t  CHAVID;                       /**< 04F8: CHA Version ID Register                                      */
        uint8_t   RESERVED_10[708];             /**< 04FC: 0x2C4 bytes                                                  */
   __I  uint32_t  FIFOSTA;                      /**< 07C0: FIFO Status Register                                         */
        uint8_t   RESERVED_11[28];              /**< 07C4: 0x1C bytes                                                   */
   __O  uint32_t  IFIFO;                        /**< 07E0: Input Data FIFO                                              */
        uint8_t   RESERVED_12[12];              /**< 07E4: 0xC bytes                                                    */
   __I  uint32_t  OFIFO;                        /**< 07F0: Output Data FIFO                                             */
} LTC_Type;

/**
 * @} */ /* End group LTC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'LTC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup LTC_Register_Masks_GROUP LTC Register Masks
* @brief Register Masks for LTC
* @{
*/
/* ------- MD Bit Fields                            ------ */
#define LTC_MD_ENC_MASK                          (0x1U)                                              /*!< LTC0_MD.ENC Mask                        */
#define LTC_MD_ENC_SHIFT                         (0U)                                                /*!< LTC0_MD.ENC Position                    */
#define LTC_MD_ENC(x)                            (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< LTC0_MD.ENC Field                       */
#define LTC_MD_ICV_TEST_MASK                     (0x2U)                                              /*!< LTC0_MD.ICV_TEST Mask                   */
#define LTC_MD_ICV_TEST_SHIFT                    (1U)                                                /*!< LTC0_MD.ICV_TEST Position               */
#define LTC_MD_ICV_TEST(x)                       (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< LTC0_MD.ICV_TEST Field                  */
#define LTC_MD_AS_MASK                           (0xCU)                                              /*!< LTC0_MD.AS Mask                         */
#define LTC_MD_AS_SHIFT                          (2U)                                                /*!< LTC0_MD.AS Position                     */
#define LTC_MD_AS(x)                             (((uint32_t)(((uint32_t)(x))<<2U))&0xCUL)           /*!< LTC0_MD.AS Field                        */
#define LTC_MD_AAI_MASK                          (0x1FF0U)                                           /*!< LTC0_MD.AAI Mask                        */
#define LTC_MD_AAI_SHIFT                         (4U)                                                /*!< LTC0_MD.AAI Position                    */
#define LTC_MD_AAI(x)                            (((uint32_t)(((uint32_t)(x))<<4U))&0x1FF0UL)        /*!< LTC0_MD.AAI Field                       */
#define LTC_MD_ALG_MASK                          (0xFF0000U)                                         /*!< LTC0_MD.ALG Mask                        */
#define LTC_MD_ALG_SHIFT                         (16U)                                               /*!< LTC0_MD.ALG Position                    */
#define LTC_MD_ALG(x)                            (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< LTC0_MD.ALG Field                       */
/* ------- KS Bit Fields                            ------ */
#define LTC_KS_KS_MASK                           (0x1FU)                                             /*!< LTC0_KS.KS Mask                         */
#define LTC_KS_KS_SHIFT                          (0U)                                                /*!< LTC0_KS.KS Position                     */
#define LTC_KS_KS(x)                             (((uint32_t)(((uint32_t)(x))<<0U))&0x1FUL)          /*!< LTC0_KS.KS Field                        */
/* ------- DS Bit Fields                            ------ */
#define LTC_DS_DS_MASK                           (0xFFFU)                                            /*!< LTC0_DS.DS Mask                         */
#define LTC_DS_DS_SHIFT                          (0U)                                                /*!< LTC0_DS.DS Position                     */
#define LTC_DS_DS(x)                             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFUL)         /*!< LTC0_DS.DS Field                        */
/* ------- ICVS Bit Fields                          ------ */
#define LTC_ICVS_ICVS_MASK                       (0x1FU)                                             /*!< LTC0_ICVS.ICVS Mask                     */
#define LTC_ICVS_ICVS_SHIFT                      (0U)                                                /*!< LTC0_ICVS.ICVS Position                 */
#define LTC_ICVS_ICVS(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x1FUL)          /*!< LTC0_ICVS.ICVS Field                    */
/* ------- COM Bit Fields                           ------ */
#define LTC_COM_ALL_MASK                         (0x1U)                                              /*!< LTC0_COM.ALL Mask                       */
#define LTC_COM_ALL_SHIFT                        (0U)                                                /*!< LTC0_COM.ALL Position                   */
#define LTC_COM_ALL(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< LTC0_COM.ALL Field                      */
#define LTC_COM_AES_MASK                         (0x2U)                                              /*!< LTC0_COM.AES Mask                       */
#define LTC_COM_AES_SHIFT                        (1U)                                                /*!< LTC0_COM.AES Position                   */
#define LTC_COM_AES(x)                           (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< LTC0_COM.AES Field                      */
/* ------- CTL Bit Fields                           ------ */
#define LTC_CTL_IM_MASK                          (0x1U)                                              /*!< LTC0_CTL.IM Mask                        */
#define LTC_CTL_IM_SHIFT                         (0U)                                                /*!< LTC0_CTL.IM Position                    */
#define LTC_CTL_IM(x)                            (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< LTC0_CTL.IM Field                       */
#define LTC_CTL_IFE_MASK                         (0x100U)                                            /*!< LTC0_CTL.IFE Mask                       */
#define LTC_CTL_IFE_SHIFT                        (8U)                                                /*!< LTC0_CTL.IFE Position                   */
#define LTC_CTL_IFE(x)                           (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< LTC0_CTL.IFE Field                      */
#define LTC_CTL_IFR_MASK                         (0x200U)                                            /*!< LTC0_CTL.IFR Mask                       */
#define LTC_CTL_IFR_SHIFT                        (9U)                                                /*!< LTC0_CTL.IFR Position                   */
#define LTC_CTL_IFR(x)                           (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< LTC0_CTL.IFR Field                      */
#define LTC_CTL_OFE_MASK                         (0x1000U)                                           /*!< LTC0_CTL.OFE Mask                       */
#define LTC_CTL_OFE_SHIFT                        (12U)                                               /*!< LTC0_CTL.OFE Position                   */
#define LTC_CTL_OFE(x)                           (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< LTC0_CTL.OFE Field                      */
#define LTC_CTL_OFR_MASK                         (0x2000U)                                           /*!< LTC0_CTL.OFR Mask                       */
#define LTC_CTL_OFR_SHIFT                        (13U)                                               /*!< LTC0_CTL.OFR Position                   */
#define LTC_CTL_OFR(x)                           (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< LTC0_CTL.OFR Field                      */
#define LTC_CTL_IFS_MASK                         (0x10000U)                                          /*!< LTC0_CTL.IFS Mask                       */
#define LTC_CTL_IFS_SHIFT                        (16U)                                               /*!< LTC0_CTL.IFS Position                   */
#define LTC_CTL_IFS(x)                           (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< LTC0_CTL.IFS Field                      */
#define LTC_CTL_OFS_MASK                         (0x20000U)                                          /*!< LTC0_CTL.OFS Mask                       */
#define LTC_CTL_OFS_SHIFT                        (17U)                                               /*!< LTC0_CTL.OFS Position                   */
#define LTC_CTL_OFS(x)                           (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< LTC0_CTL.OFS Field                      */
#define LTC_CTL_KIS_MASK                         (0x100000U)                                         /*!< LTC0_CTL.KIS Mask                       */
#define LTC_CTL_KIS_SHIFT                        (20U)                                               /*!< LTC0_CTL.KIS Position                   */
#define LTC_CTL_KIS(x)                           (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< LTC0_CTL.KIS Field                      */
#define LTC_CTL_KOS_MASK                         (0x200000U)                                         /*!< LTC0_CTL.KOS Mask                       */
#define LTC_CTL_KOS_SHIFT                        (21U)                                               /*!< LTC0_CTL.KOS Position                   */
#define LTC_CTL_KOS(x)                           (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< LTC0_CTL.KOS Field                      */
#define LTC_CTL_CIS_MASK                         (0x400000U)                                         /*!< LTC0_CTL.CIS Mask                       */
#define LTC_CTL_CIS_SHIFT                        (22U)                                               /*!< LTC0_CTL.CIS Position                   */
#define LTC_CTL_CIS(x)                           (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< LTC0_CTL.CIS Field                      */
#define LTC_CTL_COS_MASK                         (0x800000U)                                         /*!< LTC0_CTL.COS Mask                       */
#define LTC_CTL_COS_SHIFT                        (23U)                                               /*!< LTC0_CTL.COS Position                   */
#define LTC_CTL_COS(x)                           (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< LTC0_CTL.COS Field                      */
#define LTC_CTL_KAL_MASK                         (0x80000000U)                                       /*!< LTC0_CTL.KAL Mask                       */
#define LTC_CTL_KAL_SHIFT                        (31U)                                               /*!< LTC0_CTL.KAL Position                   */
#define LTC_CTL_KAL(x)                           (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< LTC0_CTL.KAL Field                      */
/* ------- CW Bit Fields                            ------ */
#define LTC_CW_CM_MASK                           (0x1U)                                              /*!< LTC0_CW.CM Mask                         */
#define LTC_CW_CM_SHIFT                          (0U)                                                /*!< LTC0_CW.CM Position                     */
#define LTC_CW_CM(x)                             (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< LTC0_CW.CM Field                        */
#define LTC_CW_CDS_MASK                          (0x4U)                                              /*!< LTC0_CW.CDS Mask                        */
#define LTC_CW_CDS_SHIFT                         (2U)                                                /*!< LTC0_CW.CDS Position                    */
#define LTC_CW_CDS(x)                            (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< LTC0_CW.CDS Field                       */
#define LTC_CW_CICV_MASK                         (0x8U)                                              /*!< LTC0_CW.CICV Mask                       */
#define LTC_CW_CICV_SHIFT                        (3U)                                                /*!< LTC0_CW.CICV Position                   */
#define LTC_CW_CICV(x)                           (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< LTC0_CW.CICV Field                      */
#define LTC_CW_CCR_MASK                          (0x20U)                                             /*!< LTC0_CW.CCR Mask                        */
#define LTC_CW_CCR_SHIFT                         (5U)                                                /*!< LTC0_CW.CCR Position                    */
#define LTC_CW_CCR(x)                            (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< LTC0_CW.CCR Field                       */
#define LTC_CW_CKR_MASK                          (0x40U)                                             /*!< LTC0_CW.CKR Mask                        */
#define LTC_CW_CKR_SHIFT                         (6U)                                                /*!< LTC0_CW.CKR Position                    */
#define LTC_CW_CKR(x)                            (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< LTC0_CW.CKR Field                       */
#define LTC_CW_COF_MASK                          (0x40000000U)                                       /*!< LTC0_CW.COF Mask                        */
#define LTC_CW_COF_SHIFT                         (30U)                                               /*!< LTC0_CW.COF Position                    */
#define LTC_CW_COF(x)                            (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< LTC0_CW.COF Field                       */
#define LTC_CW_CIF_MASK                          (0x80000000U)                                       /*!< LTC0_CW.CIF Mask                        */
#define LTC_CW_CIF_SHIFT                         (31U)                                               /*!< LTC0_CW.CIF Position                    */
#define LTC_CW_CIF(x)                            (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< LTC0_CW.CIF Field                       */
/* ------- STA Bit Fields                           ------ */
#define LTC_STA_AB_MASK                          (0x2U)                                              /*!< LTC0_STA.AB Mask                        */
#define LTC_STA_AB_SHIFT                         (1U)                                                /*!< LTC0_STA.AB Position                    */
#define LTC_STA_AB(x)                            (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< LTC0_STA.AB Field                       */
#define LTC_STA_DI_MASK                          (0x10000U)                                          /*!< LTC0_STA.DI Mask                        */
#define LTC_STA_DI_SHIFT                         (16U)                                               /*!< LTC0_STA.DI Position                    */
#define LTC_STA_DI(x)                            (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< LTC0_STA.DI Field                       */
#define LTC_STA_EI_MASK                          (0x100000U)                                         /*!< LTC0_STA.EI Mask                        */
#define LTC_STA_EI_SHIFT                         (20U)                                               /*!< LTC0_STA.EI Position                    */
#define LTC_STA_EI(x)                            (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< LTC0_STA.EI Field                       */
/* ------- ESTA Bit Fields                          ------ */
#define LTC_ESTA_ERRID1_MASK                     (0xFU)                                              /*!< LTC0_ESTA.ERRID1 Mask                   */
#define LTC_ESTA_ERRID1_SHIFT                    (0U)                                                /*!< LTC0_ESTA.ERRID1 Position               */
#define LTC_ESTA_ERRID1(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< LTC0_ESTA.ERRID1 Field                  */
#define LTC_ESTA_CL1_MASK                        (0xF00U)                                            /*!< LTC0_ESTA.CL1 Mask                      */
#define LTC_ESTA_CL1_SHIFT                       (8U)                                                /*!< LTC0_ESTA.CL1 Position                  */
#define LTC_ESTA_CL1(x)                          (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< LTC0_ESTA.CL1 Field                     */
/* ------- AADSZ Bit Fields                         ------ */
#define LTC_AADSZ_AADSZ_MASK                     (0xFU)                                              /*!< LTC0_AADSZ.AADSZ Mask                   */
#define LTC_AADSZ_AADSZ_SHIFT                    (0U)                                                /*!< LTC0_AADSZ.AADSZ Position               */
#define LTC_AADSZ_AADSZ(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< LTC0_AADSZ.AADSZ Field                  */
#define LTC_AADSZ_AL_MASK                        (0x80000000U)                                       /*!< LTC0_AADSZ.AL Mask                      */
#define LTC_AADSZ_AL_SHIFT                       (31U)                                               /*!< LTC0_AADSZ.AL Position                  */
#define LTC_AADSZ_AL(x)                          (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< LTC0_AADSZ.AL Field                     */
/* ------- CTX Bit Fields                           ------ */
#define LTC_CTX_CTX_MASK                         (0xFFFFFFFFU)                                       /*!< LTC0_CTX.CTX Mask                       */
#define LTC_CTX_CTX_SHIFT                        (0U)                                                /*!< LTC0_CTX.CTX Position                   */
#define LTC_CTX_CTX(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< LTC0_CTX.CTX Field                      */
/* ------- KEY Bit Fields                           ------ */
#define LTC_KEY_KEY_MASK                         (0xFFFFFFFFU)                                       /*!< LTC0_KEY.KEY Mask                       */
#define LTC_KEY_KEY_SHIFT                        (0U)                                                /*!< LTC0_KEY.KEY Position                   */
#define LTC_KEY_KEY(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< LTC0_KEY.KEY Field                      */
/* ------- VID1 Bit Fields                          ------ */
#define LTC_VID1_MIN_REV_MASK                    (0xFFU)                                             /*!< LTC0_VID1.MIN_REV Mask                  */
#define LTC_VID1_MIN_REV_SHIFT                   (0U)                                                /*!< LTC0_VID1.MIN_REV Position              */
#define LTC_VID1_MIN_REV(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< LTC0_VID1.MIN_REV Field                 */
#define LTC_VID1_MAJ_REV_MASK                    (0xFF00U)                                           /*!< LTC0_VID1.MAJ_REV Mask                  */
#define LTC_VID1_MAJ_REV_SHIFT                   (8U)                                                /*!< LTC0_VID1.MAJ_REV Position              */
#define LTC_VID1_MAJ_REV(x)                      (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< LTC0_VID1.MAJ_REV Field                 */
#define LTC_VID1_IP_ID_MASK                      (0xFFFF0000U)                                       /*!< LTC0_VID1.IP_ID Mask                    */
#define LTC_VID1_IP_ID_SHIFT                     (16U)                                               /*!< LTC0_VID1.IP_ID Position                */
#define LTC_VID1_IP_ID(x)                        (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< LTC0_VID1.IP_ID Field                   */
/* ------- VID2 Bit Fields                          ------ */
#define LTC_VID2_ECO_REV_MASK                    (0xFFU)                                             /*!< LTC0_VID2.ECO_REV Mask                  */
#define LTC_VID2_ECO_REV_SHIFT                   (0U)                                                /*!< LTC0_VID2.ECO_REV Position              */
#define LTC_VID2_ECO_REV(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< LTC0_VID2.ECO_REV Field                 */
#define LTC_VID2_ARCH_ERA_MASK                   (0xFF00U)                                           /*!< LTC0_VID2.ARCH_ERA Mask                 */
#define LTC_VID2_ARCH_ERA_SHIFT                  (8U)                                                /*!< LTC0_VID2.ARCH_ERA Position             */
#define LTC_VID2_ARCH_ERA(x)                     (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< LTC0_VID2.ARCH_ERA Field                */
/* ------- CHAVID Bit Fields                        ------ */
#define LTC_CHAVID_AESREV_MASK                   (0xFU)                                              /*!< LTC0_CHAVID.AESREV Mask                 */
#define LTC_CHAVID_AESREV_SHIFT                  (0U)                                                /*!< LTC0_CHAVID.AESREV Position             */
#define LTC_CHAVID_AESREV(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< LTC0_CHAVID.AESREV Field                */
#define LTC_CHAVID_AESVID_MASK                   (0xF0U)                                             /*!< LTC0_CHAVID.AESVID Mask                 */
#define LTC_CHAVID_AESVID_SHIFT                  (4U)                                                /*!< LTC0_CHAVID.AESVID Position             */
#define LTC_CHAVID_AESVID(x)                     (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)          /*!< LTC0_CHAVID.AESVID Field                */
/* ------- FIFOSTA Bit Fields                       ------ */
#define LTC_FIFOSTA_IFL_MASK                     (0x7FU)                                             /*!< LTC0_FIFOSTA.IFL Mask                   */
#define LTC_FIFOSTA_IFL_SHIFT                    (0U)                                                /*!< LTC0_FIFOSTA.IFL Position               */
#define LTC_FIFOSTA_IFL(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< LTC0_FIFOSTA.IFL Field                  */
#define LTC_FIFOSTA_IFF_MASK                     (0x8000U)                                           /*!< LTC0_FIFOSTA.IFF Mask                   */
#define LTC_FIFOSTA_IFF_SHIFT                    (15U)                                               /*!< LTC0_FIFOSTA.IFF Position               */
#define LTC_FIFOSTA_IFF(x)                       (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< LTC0_FIFOSTA.IFF Field                  */
#define LTC_FIFOSTA_OFL_MASK                     (0x7F0000U)                                         /*!< LTC0_FIFOSTA.OFL Mask                   */
#define LTC_FIFOSTA_OFL_SHIFT                    (16U)                                               /*!< LTC0_FIFOSTA.OFL Position               */
#define LTC_FIFOSTA_OFL(x)                       (((uint32_t)(((uint32_t)(x))<<16U))&0x7F0000UL)     /*!< LTC0_FIFOSTA.OFL Field                  */
#define LTC_FIFOSTA_OFF_MASK                     (0x80000000U)                                       /*!< LTC0_FIFOSTA.OFF Mask                   */
#define LTC_FIFOSTA_OFF_SHIFT                    (31U)                                               /*!< LTC0_FIFOSTA.OFF Position               */
#define LTC_FIFOSTA_OFF(x)                       (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< LTC0_FIFOSTA.OFF Field                  */
/* ------- IFIFO Bit Fields                         ------ */
#define LTC_IFIFO_IFIFO_MASK                     (0xFFFFFFFFU)                                       /*!< LTC0_IFIFO.IFIFO Mask                   */
#define LTC_IFIFO_IFIFO_SHIFT                    (0U)                                                /*!< LTC0_IFIFO.IFIFO Position               */
#define LTC_IFIFO_IFIFO(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< LTC0_IFIFO.IFIFO Field                  */
/* ------- OFIFO Bit Fields                         ------ */
#define LTC_OFIFO_OFIFO_MASK                     (0xFFFFFFFFU)                                       /*!< LTC0_OFIFO.OFIFO Mask                   */
#define LTC_OFIFO_OFIFO_SHIFT                    (0U)                                                /*!< LTC0_OFIFO.OFIFO Position               */
#define LTC_OFIFO_OFIFO(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< LTC0_OFIFO.OFIFO Field                  */
/**
 * @} */ /* End group LTC_Register_Masks_GROUP 
 */

/* LTC0 - Peripheral instance base addresses */
#define LTC0_BasePtr                   0x40058000UL //!< Peripheral base address
#define LTC0                           ((LTC_Type *) LTC0_BasePtr) //!< Freescale base pointer
#define LTC0_BASE_PTR                  (LTC0) //!< Freescale style base pointer
#define LTC0_IRQS { LTC0_IRQn,  }

/**
 * @} */ /* End group LTC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup MCG_Peripheral_access_layer_GROUP MCG Peripheral Access Layer
* @brief C Struct for MCG
* @{
*/

/* ================================================================================ */
/* ================           MCG (file:MCG_NOPLL_MKW41Z4)         ================ */
/* ================================================================================ */

/**
 * @brief Multipurpose Clock Generator module
 */
/**
* @addtogroup MCG_structs_GROUP MCG struct
* @brief Struct for MCG
* @{
*/
typedef struct MCG_Type {
   __IO uint8_t   C1;                           /**< 0000: Control 1 Register                                           */
   __IO uint8_t   C2;                           /**< 0001: Control 2 Register                                           */
   __IO uint8_t   C3;                           /**< 0002: Control 3 Register                                           */
   __IO uint8_t   C4;                           /**< 0003: Control 4 Register                                           */
        uint8_t   RESERVED_0;                   /**< 0004: 0x1 bytes                                                    */
   __IO uint8_t   C6;                           /**< 0005: Control 6 Register                                           */
   __I  uint8_t   S;                            /**< 0006: Status Register                                              */
        uint8_t   RESERVED_1;                   /**< 0007: 0x1 bytes                                                    */
   __IO uint8_t   SC;                           /**< 0008: Status and Control Register                                  */
        uint8_t   RESERVED_2;                   /**< 0009: 0x1 bytes                                                    */
   __IO uint8_t   ATCVH;                        /**< 000A: ATM Compare Value High                                       */
   __IO uint8_t   ATCVL;                        /**< 000B: ATM Compare Value Low                                        */
   __IO uint8_t   C7;                           /**< 000C: Control 7 Register                                           */
   __IO uint8_t   C8;                           /**< 000D: Control 8 Register                                           */
} MCG_Type;

/**
 * @} */ /* End group MCG_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'MCG' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup MCG_Register_Masks_GROUP MCG Register Masks
* @brief Register Masks for MCG
* @{
*/
/* ------- C1 Bit Fields                            ------ */
#define MCG_C1_IREFSTEN_MASK                     (0x1U)                                              /*!< MCG_C1.IREFSTEN Mask                    */
#define MCG_C1_IREFSTEN_SHIFT                    (0U)                                                /*!< MCG_C1.IREFSTEN Position                */
#define MCG_C1_IREFSTEN(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< MCG_C1.IREFSTEN Field                   */
#define MCG_C1_IRCLKEN_MASK                      (0x2U)                                              /*!< MCG_C1.IRCLKEN Mask                     */
#define MCG_C1_IRCLKEN_SHIFT                     (1U)                                                /*!< MCG_C1.IRCLKEN Position                 */
#define MCG_C1_IRCLKEN(x)                        (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< MCG_C1.IRCLKEN Field                    */
#define MCG_C1_IREFS_MASK                        (0x4U)                                              /*!< MCG_C1.IREFS Mask                       */
#define MCG_C1_IREFS_SHIFT                       (2U)                                                /*!< MCG_C1.IREFS Position                   */
#define MCG_C1_IREFS(x)                          (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< MCG_C1.IREFS Field                      */
#define MCG_C1_FRDIV_MASK                        (0x38U)                                             /*!< MCG_C1.FRDIV Mask                       */
#define MCG_C1_FRDIV_SHIFT                       (3U)                                                /*!< MCG_C1.FRDIV Position                   */
#define MCG_C1_FRDIV(x)                          (((uint8_t)(((uint8_t)(x))<<3U))&0x38UL)            /*!< MCG_C1.FRDIV Field                      */
#define MCG_C1_CLKS_MASK                         (0xC0U)                                             /*!< MCG_C1.CLKS Mask                        */
#define MCG_C1_CLKS_SHIFT                        (6U)                                                /*!< MCG_C1.CLKS Position                    */
#define MCG_C1_CLKS(x)                           (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< MCG_C1.CLKS Field                       */
/* ------- C2 Bit Fields                            ------ */
#define MCG_C2_IRCS_MASK                         (0x1U)                                              /*!< MCG_C2.IRCS Mask                        */
#define MCG_C2_IRCS_SHIFT                        (0U)                                                /*!< MCG_C2.IRCS Position                    */
#define MCG_C2_IRCS(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< MCG_C2.IRCS Field                       */
#define MCG_C2_LP_MASK                           (0x2U)                                              /*!< MCG_C2.LP Mask                          */
#define MCG_C2_LP_SHIFT                          (1U)                                                /*!< MCG_C2.LP Position                      */
#define MCG_C2_LP(x)                             (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< MCG_C2.LP Field                         */
#define MCG_C2_EREFS0_MASK                       (0x4U)                                              /*!< MCG_C2.EREFS0 Mask                      */
#define MCG_C2_EREFS0_SHIFT                      (2U)                                                /*!< MCG_C2.EREFS0 Position                  */
#define MCG_C2_EREFS0(x)                         (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< MCG_C2.EREFS0 Field                     */
#define MCG_C2_HGO0_MASK                         (0x8U)                                              /*!< MCG_C2.HGO0 Mask                        */
#define MCG_C2_HGO0_SHIFT                        (3U)                                                /*!< MCG_C2.HGO0 Position                    */
#define MCG_C2_HGO0(x)                           (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< MCG_C2.HGO0 Field                       */
#define MCG_C2_RANGE0_MASK                       (0x30U)                                             /*!< MCG_C2.RANGE0 Mask                      */
#define MCG_C2_RANGE0_SHIFT                      (4U)                                                /*!< MCG_C2.RANGE0 Position                  */
#define MCG_C2_RANGE0(x)                         (((uint8_t)(((uint8_t)(x))<<4U))&0x30UL)            /*!< MCG_C2.RANGE0 Field                     */
#define MCG_C2_FCFTRIM_MASK                      (0x40U)                                             /*!< MCG_C2.FCFTRIM Mask                     */
#define MCG_C2_FCFTRIM_SHIFT                     (6U)                                                /*!< MCG_C2.FCFTRIM Position                 */
#define MCG_C2_FCFTRIM(x)                        (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< MCG_C2.FCFTRIM Field                    */
#define MCG_C2_LOCRE0_MASK                       (0x80U)                                             /*!< MCG_C2.LOCRE0 Mask                      */
#define MCG_C2_LOCRE0_SHIFT                      (7U)                                                /*!< MCG_C2.LOCRE0 Position                  */
#define MCG_C2_LOCRE0(x)                         (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< MCG_C2.LOCRE0 Field                     */
/* ------- C3 Bit Fields                            ------ */
#define MCG_C3_SCTRIM_MASK                       (0xFFU)                                             /*!< MCG_C3.SCTRIM Mask                      */
#define MCG_C3_SCTRIM_SHIFT                      (0U)                                                /*!< MCG_C3.SCTRIM Position                  */
#define MCG_C3_SCTRIM(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< MCG_C3.SCTRIM Field                     */
/* ------- C4 Bit Fields                            ------ */
#define MCG_C4_SCFTRIM_MASK                      (0x1U)                                              /*!< MCG_C4.SCFTRIM Mask                     */
#define MCG_C4_SCFTRIM_SHIFT                     (0U)                                                /*!< MCG_C4.SCFTRIM Position                 */
#define MCG_C4_SCFTRIM(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< MCG_C4.SCFTRIM Field                    */
#define MCG_C4_FCTRIM_MASK                       (0x1EU)                                             /*!< MCG_C4.FCTRIM Mask                      */
#define MCG_C4_FCTRIM_SHIFT                      (1U)                                                /*!< MCG_C4.FCTRIM Position                  */
#define MCG_C4_FCTRIM(x)                         (((uint8_t)(((uint8_t)(x))<<1U))&0x1EUL)            /*!< MCG_C4.FCTRIM Field                     */
#define MCG_C4_DRST_DRS_MASK                     (0x60U)                                             /*!< MCG_C4.DRST_DRS Mask                    */
#define MCG_C4_DRST_DRS_SHIFT                    (5U)                                                /*!< MCG_C4.DRST_DRS Position                */
#define MCG_C4_DRST_DRS(x)                       (((uint8_t)(((uint8_t)(x))<<5U))&0x60UL)            /*!< MCG_C4.DRST_DRS Field                   */
#define MCG_C4_DMX32_MASK                        (0x80U)                                             /*!< MCG_C4.DMX32 Mask                       */
#define MCG_C4_DMX32_SHIFT                       (7U)                                                /*!< MCG_C4.DMX32 Position                   */
#define MCG_C4_DMX32(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< MCG_C4.DMX32 Field                      */
/* ------- C6 Bit Fields                            ------ */
#define MCG_C6_CME0_MASK                         (0x20U)                                             /*!< MCG_C6.CME0 Mask                        */
#define MCG_C6_CME0_SHIFT                        (5U)                                                /*!< MCG_C6.CME0 Position                    */
#define MCG_C6_CME0(x)                           (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< MCG_C6.CME0 Field                       */
/* ------- S Bit Fields                             ------ */
#define MCG_S_IRCST_MASK                         (0x1U)                                              /*!< MCG_S.IRCST Mask                        */
#define MCG_S_IRCST_SHIFT                        (0U)                                                /*!< MCG_S.IRCST Position                    */
#define MCG_S_IRCST(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< MCG_S.IRCST Field                       */
#define MCG_S_OSCINIT0_MASK                      (0x2U)                                              /*!< MCG_S.OSCINIT0 Mask                     */
#define MCG_S_OSCINIT0_SHIFT                     (1U)                                                /*!< MCG_S.OSCINIT0 Position                 */
#define MCG_S_OSCINIT0(x)                        (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< MCG_S.OSCINIT0 Field                    */
#define MCG_S_CLKST_MASK                         (0xCU)                                              /*!< MCG_S.CLKST Mask                        */
#define MCG_S_CLKST_SHIFT                        (2U)                                                /*!< MCG_S.CLKST Position                    */
#define MCG_S_CLKST(x)                           (((uint8_t)(((uint8_t)(x))<<2U))&0xCUL)             /*!< MCG_S.CLKST Field                       */
#define MCG_S_IREFST_MASK                        (0x10U)                                             /*!< MCG_S.IREFST Mask                       */
#define MCG_S_IREFST_SHIFT                       (4U)                                                /*!< MCG_S.IREFST Position                   */
#define MCG_S_IREFST(x)                          (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< MCG_S.IREFST Field                      */
/* ------- SC Bit Fields                            ------ */
#define MCG_SC_LOCS0_MASK                        (0x1U)                                              /*!< MCG_SC.LOCS0 Mask                       */
#define MCG_SC_LOCS0_SHIFT                       (0U)                                                /*!< MCG_SC.LOCS0 Position                   */
#define MCG_SC_LOCS0(x)                          (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< MCG_SC.LOCS0 Field                      */
#define MCG_SC_FCRDIV_MASK                       (0xEU)                                              /*!< MCG_SC.FCRDIV Mask                      */
#define MCG_SC_FCRDIV_SHIFT                      (1U)                                                /*!< MCG_SC.FCRDIV Position                  */
#define MCG_SC_FCRDIV(x)                         (((uint8_t)(((uint8_t)(x))<<1U))&0xEUL)             /*!< MCG_SC.FCRDIV Field                     */
#define MCG_SC_FLTPRSRV_MASK                     (0x10U)                                             /*!< MCG_SC.FLTPRSRV Mask                    */
#define MCG_SC_FLTPRSRV_SHIFT                    (4U)                                                /*!< MCG_SC.FLTPRSRV Position                */
#define MCG_SC_FLTPRSRV(x)                       (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< MCG_SC.FLTPRSRV Field                   */
#define MCG_SC_ATMF_MASK                         (0x20U)                                             /*!< MCG_SC.ATMF Mask                        */
#define MCG_SC_ATMF_SHIFT                        (5U)                                                /*!< MCG_SC.ATMF Position                    */
#define MCG_SC_ATMF(x)                           (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< MCG_SC.ATMF Field                       */
#define MCG_SC_ATMS_MASK                         (0x40U)                                             /*!< MCG_SC.ATMS Mask                        */
#define MCG_SC_ATMS_SHIFT                        (6U)                                                /*!< MCG_SC.ATMS Position                    */
#define MCG_SC_ATMS(x)                           (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< MCG_SC.ATMS Field                       */
#define MCG_SC_ATME_MASK                         (0x80U)                                             /*!< MCG_SC.ATME Mask                        */
#define MCG_SC_ATME_SHIFT                        (7U)                                                /*!< MCG_SC.ATME Position                    */
#define MCG_SC_ATME(x)                           (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< MCG_SC.ATME Field                       */
/* ------- ATCVH Bit Fields                         ------ */
#define MCG_ATCVH_ATCVH_MASK                     (0xFFU)                                             /*!< MCG_ATCVH.ATCVH Mask                    */
#define MCG_ATCVH_ATCVH_SHIFT                    (0U)                                                /*!< MCG_ATCVH.ATCVH Position                */
#define MCG_ATCVH_ATCVH(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< MCG_ATCVH.ATCVH Field                   */
/* ------- ATCVL Bit Fields                         ------ */
#define MCG_ATCVL_ATCVL_MASK                     (0xFFU)                                             /*!< MCG_ATCVL.ATCVL Mask                    */
#define MCG_ATCVL_ATCVL_SHIFT                    (0U)                                                /*!< MCG_ATCVL.ATCVL Position                */
#define MCG_ATCVL_ATCVL(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< MCG_ATCVL.ATCVL Field                   */
/* ------- C7 Bit Fields                            ------ */
#define MCG_C7_OSCSEL_MASK                       (0x1U)                                              /*!< MCG_C7.OSCSEL Mask                      */
#define MCG_C7_OSCSEL_SHIFT                      (0U)                                                /*!< MCG_C7.OSCSEL Position                  */
#define MCG_C7_OSCSEL(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< MCG_C7.OSCSEL Field                     */
/* ------- C8 Bit Fields                            ------ */
#define MCG_C8_LOCS1_MASK                        (0x1U)                                              /*!< MCG_C8.LOCS1 Mask                       */
#define MCG_C8_LOCS1_SHIFT                       (0U)                                                /*!< MCG_C8.LOCS1 Position                   */
#define MCG_C8_LOCS1(x)                          (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< MCG_C8.LOCS1 Field                      */
#define MCG_C8_CME1_MASK                         (0x20U)                                             /*!< MCG_C8.CME1 Mask                        */
#define MCG_C8_CME1_SHIFT                        (5U)                                                /*!< MCG_C8.CME1 Position                    */
#define MCG_C8_CME1(x)                           (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< MCG_C8.CME1 Field                       */
#define MCG_C8_LOCRE1_MASK                       (0x80U)                                             /*!< MCG_C8.LOCRE1 Mask                      */
#define MCG_C8_LOCRE1_SHIFT                      (7U)                                                /*!< MCG_C8.LOCRE1 Position                  */
#define MCG_C8_LOCRE1(x)                         (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< MCG_C8.LOCRE1 Field                     */
/**
 * @} */ /* End group MCG_Register_Masks_GROUP 
 */

/* MCG - Peripheral instance base addresses */
#define MCG_BasePtr                    0x40064000UL //!< Peripheral base address
#define MCG                            ((MCG_Type *) MCG_BasePtr) //!< Freescale base pointer
#define MCG_BASE_PTR                   (MCG) //!< Freescale style base pointer
#define MCG_IRQS { MCG_IRQn,  }

/**
 * @} */ /* End group MCG_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup MCM_Peripheral_access_layer_GROUP MCM Peripheral Access Layer
* @brief C Struct for MCM
* @{
*/

/* ================================================================================ */
/* ================           MCM (file:MCM_MKW41Z4)               ================ */
/* ================================================================================ */

/**
 * @brief Core Platform Miscellaneous Control Module
 */
/**
* @addtogroup MCM_structs_GROUP MCM struct
* @brief Struct for MCM
* @{
*/
typedef struct MCM_Type {
        uint8_t   RESERVED_0[8];                /**< 0000: 0x8 bytes                                                    */
   __I  uint16_t  PLASC;                        /**< 0008: Crossbar Switch (AXBS) Slave Configuration                   */
   __I  uint16_t  PLAMC;                        /**< 000A: Crossbar Switch (AXBS) Master Configuration                  */
   __IO uint32_t  PLACR;                        /**< 000C: Platform Control Register                                    */
        uint8_t   RESERVED_1[48];               /**< 0010: 0x30 bytes                                                   */
   __IO uint32_t  CPO;                          /**< 0040: Compute Operation Control Register                           */
} MCM_Type;

/**
 * @} */ /* End group MCM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'MCM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup MCM_Register_Masks_GROUP MCM Register Masks
* @brief Register Masks for MCM
* @{
*/
/* ------- PLASC Bit Fields                         ------ */
#define MCM_PLASC_ASC_MASK                       (0xFFU)                                             /*!< MCM_PLASC.ASC Mask                      */
#define MCM_PLASC_ASC_SHIFT                      (0U)                                                /*!< MCM_PLASC.ASC Position                  */
#define MCM_PLASC_ASC(x)                         (((uint16_t)(((uint16_t)(x))<<0U))&0xFFUL)          /*!< MCM_PLASC.ASC Field                     */
/* ------- PLAMC Bit Fields                         ------ */
#define MCM_PLAMC_AMC_MASK                       (0xFFU)                                             /*!< MCM_PLAMC.AMC Mask                      */
#define MCM_PLAMC_AMC_SHIFT                      (0U)                                                /*!< MCM_PLAMC.AMC Position                  */
#define MCM_PLAMC_AMC(x)                         (((uint16_t)(((uint16_t)(x))<<0U))&0xFFUL)          /*!< MCM_PLAMC.AMC Field                     */
/* ------- PLACR Bit Fields                         ------ */
#define MCM_PLACR_ARB_MASK                       (0x200U)                                            /*!< MCM_PLACR.ARB Mask                      */
#define MCM_PLACR_ARB_SHIFT                      (9U)                                                /*!< MCM_PLACR.ARB Position                  */
#define MCM_PLACR_ARB(x)                         (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< MCM_PLACR.ARB Field                     */
#define MCM_PLACR_CFCC_MASK                      (0x400U)                                            /*!< MCM_PLACR.CFCC Mask                     */
#define MCM_PLACR_CFCC_SHIFT                     (10U)                                               /*!< MCM_PLACR.CFCC Position                 */
#define MCM_PLACR_CFCC(x)                        (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< MCM_PLACR.CFCC Field                    */
#define MCM_PLACR_DFCDA_MASK                     (0x800U)                                            /*!< MCM_PLACR.DFCDA Mask                    */
#define MCM_PLACR_DFCDA_SHIFT                    (11U)                                               /*!< MCM_PLACR.DFCDA Position                */
#define MCM_PLACR_DFCDA(x)                       (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< MCM_PLACR.DFCDA Field                   */
#define MCM_PLACR_DFCIC_MASK                     (0x1000U)                                           /*!< MCM_PLACR.DFCIC Mask                    */
#define MCM_PLACR_DFCIC_SHIFT                    (12U)                                               /*!< MCM_PLACR.DFCIC Position                */
#define MCM_PLACR_DFCIC(x)                       (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< MCM_PLACR.DFCIC Field                   */
#define MCM_PLACR_DFCC_MASK                      (0x2000U)                                           /*!< MCM_PLACR.DFCC Mask                     */
#define MCM_PLACR_DFCC_SHIFT                     (13U)                                               /*!< MCM_PLACR.DFCC Position                 */
#define MCM_PLACR_DFCC(x)                        (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< MCM_PLACR.DFCC Field                    */
#define MCM_PLACR_EFDS_MASK                      (0x4000U)                                           /*!< MCM_PLACR.EFDS Mask                     */
#define MCM_PLACR_EFDS_SHIFT                     (14U)                                               /*!< MCM_PLACR.EFDS Position                 */
#define MCM_PLACR_EFDS(x)                        (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< MCM_PLACR.EFDS Field                    */
#define MCM_PLACR_DFCS_MASK                      (0x8000U)                                           /*!< MCM_PLACR.DFCS Mask                     */
#define MCM_PLACR_DFCS_SHIFT                     (15U)                                               /*!< MCM_PLACR.DFCS Position                 */
#define MCM_PLACR_DFCS(x)                        (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< MCM_PLACR.DFCS Field                    */
#define MCM_PLACR_ESFC_MASK                      (0x10000U)                                          /*!< MCM_PLACR.ESFC Mask                     */
#define MCM_PLACR_ESFC_SHIFT                     (16U)                                               /*!< MCM_PLACR.ESFC Position                 */
#define MCM_PLACR_ESFC(x)                        (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< MCM_PLACR.ESFC Field                    */
/* ------- CPO Bit Fields                           ------ */
#define MCM_CPO_CPOREQ_MASK                      (0x1U)                                              /*!< MCM_CPO.CPOREQ Mask                     */
#define MCM_CPO_CPOREQ_SHIFT                     (0U)                                                /*!< MCM_CPO.CPOREQ Position                 */
#define MCM_CPO_CPOREQ(x)                        (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< MCM_CPO.CPOREQ Field                    */
#define MCM_CPO_CPOACK_MASK                      (0x2U)                                              /*!< MCM_CPO.CPOACK Mask                     */
#define MCM_CPO_CPOACK_SHIFT                     (1U)                                                /*!< MCM_CPO.CPOACK Position                 */
#define MCM_CPO_CPOACK(x)                        (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< MCM_CPO.CPOACK Field                    */
#define MCM_CPO_CPOWOI_MASK                      (0x4U)                                              /*!< MCM_CPO.CPOWOI Mask                     */
#define MCM_CPO_CPOWOI_SHIFT                     (2U)                                                /*!< MCM_CPO.CPOWOI Position                 */
#define MCM_CPO_CPOWOI(x)                        (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< MCM_CPO.CPOWOI Field                    */
/**
 * @} */ /* End group MCM_Register_Masks_GROUP 
 */

/* MCM - Peripheral instance base addresses */
#define MCM_BasePtr                    0xF0003000UL //!< Peripheral base address
#define MCM                            ((MCM_Type *) MCM_BasePtr) //!< Freescale base pointer
#define MCM_BASE_PTR                   (MCM) //!< Freescale style base pointer
/**
 * @} */ /* End group MCM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup MTB_Peripheral_access_layer_GROUP MTB Peripheral Access Layer
* @brief C Struct for MTB
* @{
*/

/* ================================================================================ */
/* ================           MTB (file:MTB_MKE15Z7)               ================ */
/* ================================================================================ */

/**
 * @brief Micro Trace Buffer
 */
/**
* @addtogroup MTB_structs_GROUP MTB struct
* @brief Struct for MTB
* @{
*/
typedef struct MTB_Type {
   __IO uint32_t  POSITION;                     /**< 0000: MTB Position Register                                        */
   __IO uint32_t  MASTER;                       /**< 0004: MTB Master Register                                          */
   __IO uint32_t  FLOW;                         /**< 0008: MTB Flow Register                                            */
   __I  uint32_t  BASE;                         /**< 000C: MTB Base Register                                            */
        uint8_t   RESERVED_0[3824];             /**< 0010: 0xEF0 bytes                                                  */
   __I  uint32_t  MODECTRL;                     /**< 0F00: Integration Mode Control Register                            */
        uint8_t   RESERVED_1[156];              /**< 0F04: 0x9C bytes                                                   */
   __I  uint32_t  TAGSET;                       /**< 0FA0: Claim TAG Set Register                                       */
   __I  uint32_t  TAGCLEAR;                     /**< 0FA4: Claim TAG Clear Register                                     */
        uint8_t   RESERVED_2[8];                /**< 0FA8: 0x8 bytes                                                    */
   __I  uint32_t  LOCKACCESS;                   /**< 0FB0: Lock Access Register                                         */
   __I  uint32_t  LOCKSTAT;                     /**< 0FB4: Lock Status Register                                         */
   __I  uint32_t  AUTHSTAT;                     /**< 0FB8: Authentication Status Register                               */
   __I  uint32_t  DEVICEARCH;                   /**< 0FBC: Device Architecture Register                                 */
        uint8_t   RESERVED_3[8];                /**< 0FC0: 0x8 bytes                                                    */
   __I  uint32_t  DEVICECFG;                    /**< 0FC8: Device Configuration Register                                */
   __I  uint32_t  DEVICETYPID;                  /**< 0FCC: Device Type Identifier Register                              */
   __I  uint32_t  PERIPHID4;                    /**< 0FD0: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID5;                    /**< 0FD4: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID6;                    /**< 0FD8: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID7;                    /**< 0FDC: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID0;                    /**< 0FE0: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID1;                    /**< 0FE4: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID2;                    /**< 0FE8: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID3;                    /**< 0FEC: Peripheral ID Register                                       */
   __I  uint32_t  COMPID[4];                    /**< 0FF0: Component ID Register                                        */
} MTB_Type;

/**
 * @} */ /* End group MTB_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'MTB' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup MTB_Register_Masks_GROUP MTB Register Masks
* @brief Register Masks for MTB
* @{
*/
/* ------- POSITION Bit Fields                      ------ */
#define MTB_POSITION_WRAP_MASK                   (0x4U)                                              /*!< MTB_POSITION.WRAP Mask                  */
#define MTB_POSITION_WRAP_SHIFT                  (2U)                                                /*!< MTB_POSITION.WRAP Position              */
#define MTB_POSITION_WRAP(x)                     (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< MTB_POSITION.WRAP Field                 */
#define MTB_POSITION_POINTER_MASK                (0xFFFFFFF8U)                                       /*!< MTB_POSITION.POINTER Mask               */
#define MTB_POSITION_POINTER_SHIFT               (3U)                                                /*!< MTB_POSITION.POINTER Position           */
#define MTB_POSITION_POINTER(x)                  (((uint32_t)(((uint32_t)(x))<<3U))&0xFFFFFFF8UL)    /*!< MTB_POSITION.POINTER Field              */
/* ------- MASTER Bit Fields                        ------ */
#define MTB_MASTER_MASK_MASK                     (0x1FU)                                             /*!< MTB_MASTER.MASK Mask                    */
#define MTB_MASTER_MASK_SHIFT                    (0U)                                                /*!< MTB_MASTER.MASK Position                */
#define MTB_MASTER_MASK(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0x1FUL)          /*!< MTB_MASTER.MASK Field                   */
#define MTB_MASTER_TSTARTEN_MASK                 (0x20U)                                             /*!< MTB_MASTER.TSTARTEN Mask                */
#define MTB_MASTER_TSTARTEN_SHIFT                (5U)                                                /*!< MTB_MASTER.TSTARTEN Position            */
#define MTB_MASTER_TSTARTEN(x)                   (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< MTB_MASTER.TSTARTEN Field               */
#define MTB_MASTER_TSTOPEN_MASK                  (0x40U)                                             /*!< MTB_MASTER.TSTOPEN Mask                 */
#define MTB_MASTER_TSTOPEN_SHIFT                 (6U)                                                /*!< MTB_MASTER.TSTOPEN Position             */
#define MTB_MASTER_TSTOPEN(x)                    (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< MTB_MASTER.TSTOPEN Field                */
#define MTB_MASTER_SFRWPRIV_MASK                 (0x80U)                                             /*!< MTB_MASTER.SFRWPRIV Mask                */
#define MTB_MASTER_SFRWPRIV_SHIFT                (7U)                                                /*!< MTB_MASTER.SFRWPRIV Position            */
#define MTB_MASTER_SFRWPRIV(x)                   (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< MTB_MASTER.SFRWPRIV Field               */
#define MTB_MASTER_RAMPRIV_MASK                  (0x100U)                                            /*!< MTB_MASTER.RAMPRIV Mask                 */
#define MTB_MASTER_RAMPRIV_SHIFT                 (8U)                                                /*!< MTB_MASTER.RAMPRIV Position             */
#define MTB_MASTER_RAMPRIV(x)                    (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< MTB_MASTER.RAMPRIV Field                */
#define MTB_MASTER_HALTREQ_MASK                  (0x200U)                                            /*!< MTB_MASTER.HALTREQ Mask                 */
#define MTB_MASTER_HALTREQ_SHIFT                 (9U)                                                /*!< MTB_MASTER.HALTREQ Position             */
#define MTB_MASTER_HALTREQ(x)                    (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< MTB_MASTER.HALTREQ Field                */
#define MTB_MASTER_EN_MASK                       (0x80000000U)                                       /*!< MTB_MASTER.EN Mask                      */
#define MTB_MASTER_EN_SHIFT                      (31U)                                               /*!< MTB_MASTER.EN Position                  */
#define MTB_MASTER_EN(x)                         (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< MTB_MASTER.EN Field                     */
/* ------- FLOW Bit Fields                          ------ */
#define MTB_FLOW_AUTOSTOP_MASK                   (0x1U)                                              /*!< MTB_FLOW.AUTOSTOP Mask                  */
#define MTB_FLOW_AUTOSTOP_SHIFT                  (0U)                                                /*!< MTB_FLOW.AUTOSTOP Position              */
#define MTB_FLOW_AUTOSTOP(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< MTB_FLOW.AUTOSTOP Field                 */
#define MTB_FLOW_AUTOHALT_MASK                   (0x2U)                                              /*!< MTB_FLOW.AUTOHALT Mask                  */
#define MTB_FLOW_AUTOHALT_SHIFT                  (1U)                                                /*!< MTB_FLOW.AUTOHALT Position              */
#define MTB_FLOW_AUTOHALT(x)                     (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< MTB_FLOW.AUTOHALT Field                 */
#define MTB_FLOW_WATERMARK_MASK                  (0xFFFFFFF8U)                                       /*!< MTB_FLOW.WATERMARK Mask                 */
#define MTB_FLOW_WATERMARK_SHIFT                 (3U)                                                /*!< MTB_FLOW.WATERMARK Position             */
#define MTB_FLOW_WATERMARK(x)                    (((uint32_t)(((uint32_t)(x))<<3U))&0xFFFFFFF8UL)    /*!< MTB_FLOW.WATERMARK Field                */
/* ------- BASE Bit Fields                          ------ */
#define MTB_BASE_BASEADDR_MASK                   (0xFFFFFFFFU)                                       /*!< MTB_BASE.BASEADDR Mask                  */
#define MTB_BASE_BASEADDR_SHIFT                  (0U)                                                /*!< MTB_BASE.BASEADDR Position              */
#define MTB_BASE_BASEADDR(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_BASE.BASEADDR Field                 */
/* ------- MODECTRL Bit Fields                      ------ */
#define MTB_MODECTRL_MODECTRL_MASK               (0xFFFFFFFFU)                                       /*!< MTB_MODECTRL.MODECTRL Mask              */
#define MTB_MODECTRL_MODECTRL_SHIFT              (0U)                                                /*!< MTB_MODECTRL.MODECTRL Position          */
#define MTB_MODECTRL_MODECTRL(x)                 (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_MODECTRL.MODECTRL Field             */
/* ------- TAGSET Bit Fields                        ------ */
#define MTB_TAGSET_TAGSET_MASK                   (0xFFFFFFFFU)                                       /*!< MTB_TAGSET.TAGSET Mask                  */
#define MTB_TAGSET_TAGSET_SHIFT                  (0U)                                                /*!< MTB_TAGSET.TAGSET Position              */
#define MTB_TAGSET_TAGSET(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_TAGSET.TAGSET Field                 */
/* ------- TAGCLEAR Bit Fields                      ------ */
#define MTB_TAGCLEAR_TAGCLEAR_MASK               (0xFFFFFFFFU)                                       /*!< MTB_TAGCLEAR.TAGCLEAR Mask              */
#define MTB_TAGCLEAR_TAGCLEAR_SHIFT              (0U)                                                /*!< MTB_TAGCLEAR.TAGCLEAR Position          */
#define MTB_TAGCLEAR_TAGCLEAR(x)                 (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_TAGCLEAR.TAGCLEAR Field             */
/* ------- LOCKACCESS Bit Fields                    ------ */
#define MTB_LOCKACCESS_LOCKACCESS_MASK           (0xFFFFFFFFU)                                       /*!< MTB_LOCKACCESS.LOCKACCESS Mask          */
#define MTB_LOCKACCESS_LOCKACCESS_SHIFT          (0U)                                                /*!< MTB_LOCKACCESS.LOCKACCESS Position      */
#define MTB_LOCKACCESS_LOCKACCESS(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_LOCKACCESS.LOCKACCESS Field         */
/* ------- LOCKSTAT Bit Fields                      ------ */
#define MTB_LOCKSTAT_LOCKSTAT_MASK               (0xFFFFFFFFU)                                       /*!< MTB_LOCKSTAT.LOCKSTAT Mask              */
#define MTB_LOCKSTAT_LOCKSTAT_SHIFT              (0U)                                                /*!< MTB_LOCKSTAT.LOCKSTAT Position          */
#define MTB_LOCKSTAT_LOCKSTAT(x)                 (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_LOCKSTAT.LOCKSTAT Field             */
/* ------- AUTHSTAT Bit Fields                      ------ */
#define MTB_AUTHSTAT_BIT0_MASK                   (0x1U)                                              /*!< MTB_AUTHSTAT.BIT0 Mask                  */
#define MTB_AUTHSTAT_BIT0_SHIFT                  (0U)                                                /*!< MTB_AUTHSTAT.BIT0 Position              */
#define MTB_AUTHSTAT_BIT0(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< MTB_AUTHSTAT.BIT0 Field                 */
#define MTB_AUTHSTAT_BIT1_MASK                   (0x2U)                                              /*!< MTB_AUTHSTAT.BIT1 Mask                  */
#define MTB_AUTHSTAT_BIT1_SHIFT                  (1U)                                                /*!< MTB_AUTHSTAT.BIT1 Position              */
#define MTB_AUTHSTAT_BIT1(x)                     (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< MTB_AUTHSTAT.BIT1 Field                 */
#define MTB_AUTHSTAT_BIT2_MASK                   (0x4U)                                              /*!< MTB_AUTHSTAT.BIT2 Mask                  */
#define MTB_AUTHSTAT_BIT2_SHIFT                  (2U)                                                /*!< MTB_AUTHSTAT.BIT2 Position              */
#define MTB_AUTHSTAT_BIT2(x)                     (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< MTB_AUTHSTAT.BIT2 Field                 */
#define MTB_AUTHSTAT_BIT3_MASK                   (0x8U)                                              /*!< MTB_AUTHSTAT.BIT3 Mask                  */
#define MTB_AUTHSTAT_BIT3_SHIFT                  (3U)                                                /*!< MTB_AUTHSTAT.BIT3 Position              */
#define MTB_AUTHSTAT_BIT3(x)                     (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< MTB_AUTHSTAT.BIT3 Field                 */
/* ------- DEVICEARCH Bit Fields                    ------ */
#define MTB_DEVICEARCH_DEVICEARCH_MASK           (0xFFFFFFFFU)                                       /*!< MTB_DEVICEARCH.DEVICEARCH Mask          */
#define MTB_DEVICEARCH_DEVICEARCH_SHIFT          (0U)                                                /*!< MTB_DEVICEARCH.DEVICEARCH Position      */
#define MTB_DEVICEARCH_DEVICEARCH(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_DEVICEARCH.DEVICEARCH Field         */
/* ------- DEVICECFG Bit Fields                     ------ */
#define MTB_DEVICECFG_DEVICECFG_MASK             (0xFFFFFFFFU)                                       /*!< MTB_DEVICECFG.DEVICECFG Mask            */
#define MTB_DEVICECFG_DEVICECFG_SHIFT            (0U)                                                /*!< MTB_DEVICECFG.DEVICECFG Position        */
#define MTB_DEVICECFG_DEVICECFG(x)               (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_DEVICECFG.DEVICECFG Field           */
/* ------- DEVICETYPID Bit Fields                   ------ */
#define MTB_DEVICETYPID_DEVICETYPID_MASK         (0xFFFFFFFFU)                                       /*!< MTB_DEVICETYPID.DEVICETYPID Mask        */
#define MTB_DEVICETYPID_DEVICETYPID_SHIFT        (0U)                                                /*!< MTB_DEVICETYPID.DEVICETYPID Position    */
#define MTB_DEVICETYPID_DEVICETYPID(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_DEVICETYPID.DEVICETYPID Field       */
/* ------- PERIPHID Bit Fields                      ------ */
#define MTB_PERIPHID_PERIPHID_MASK               (0xFFFFFFFFU)                                       /*!< MTB_PERIPHID.PERIPHID Mask              */
#define MTB_PERIPHID_PERIPHID_SHIFT              (0U)                                                /*!< MTB_PERIPHID.PERIPHID Position          */
#define MTB_PERIPHID_PERIPHID(x)                 (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_PERIPHID.PERIPHID Field             */
/* ------- COMPID Bit Fields                        ------ */
#define MTB_COMPID_COMPID_MASK                   (0xFFFFFFFFU)                                       /*!< MTB_COMPID.COMPID Mask                  */
#define MTB_COMPID_COMPID_SHIFT                  (0U)                                                /*!< MTB_COMPID.COMPID Position              */
#define MTB_COMPID_COMPID(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTB_COMPID.COMPID Field                 */
/**
 * @} */ /* End group MTB_Register_Masks_GROUP 
 */

/* MTB - Peripheral instance base addresses */
#define MTB_BasePtr                    0xF0000000UL //!< Peripheral base address
#define MTB                            ((MTB_Type *) MTB_BasePtr) //!< Freescale base pointer
#define MTB_BASE_PTR                   (MTB) //!< Freescale style base pointer
/**
 * @} */ /* End group MTB_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup MTBDWT_Peripheral_access_layer_GROUP MTBDWT Peripheral Access Layer
* @brief C Struct for MTBDWT
* @{
*/

/* ================================================================================ */
/* ================           MTBDWT (file:MTBDWT_MKE15Z7)         ================ */
/* ================================================================================ */

/**
 * @brief MTB data watchpoint and trace
 */
/**
* @addtogroup MTBDWT_structs_GROUP MTBDWT struct
* @brief Struct for MTBDWT
* @{
*/
typedef struct MTBDWT_Type {
   __I  uint32_t  CTRL;                         /**< 0000: MTB DWT Control Register                                     */
        uint8_t   RESERVED_0[28];               /**< 0004: 0x1C bytes                                                   */
   struct {
      __IO uint32_t  COMP;                      /**< 0020: MTB_DWT Comparator Register                                  */
      __IO uint32_t  MASK;                      /**< 0024: MTB_DWT Comparator Mask Register                             */
      __IO uint32_t  FCT;                       /**< 0028: MTB_DWT Comparator Function Register 0                       */
           uint8_t   RESERVED_1[4];             /**< 002C: 0x4 bytes                                                    */
   } COMPARATOR[2];                             /**< 0020: (cluster: size=0x0020, 32)                                   */
        uint8_t   RESERVED_2[448];              /**< 0040: 0x1C0 bytes                                                  */
   __IO uint32_t  TBCTRL;                       /**< 0200: MTB_DWT Trace Buffer Control Register                        */
        uint8_t   RESERVED_3[3524];             /**< 0204: 0xDC4 bytes                                                  */
   __I  uint32_t  DEVICECFG;                    /**< 0FC8: Device Configuration Register                                */
   __I  uint32_t  DEVICETYPID;                  /**< 0FCC: Device Type Identifier Register                              */
   __I  uint32_t  PERIPHID4;                    /**< 0FD0: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID5;                    /**< 0FD4: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID6;                    /**< 0FD8: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID7;                    /**< 0FDC: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID0;                    /**< 0FE0: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID1;                    /**< 0FE4: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID2;                    /**< 0FE8: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID3;                    /**< 0FEC: Peripheral ID Register                                       */
   __I  uint32_t  COMPID[4];                    /**< 0FF0: Component ID Register                                        */
} MTBDWT_Type;

/**
 * @} */ /* End group MTBDWT_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'MTBDWT' Position & Mask macros                      ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup MTBDWT_Register_Masks_GROUP MTBDWT Register Masks
* @brief Register Masks for MTBDWT
* @{
*/
/* ------- CTRL Bit Fields                          ------ */
#define MTBDWT_CTRL_DWTCFGCTRL_MASK              (0xFFFFFFFU)                                        /*!< MTBDWT_CTRL.DWTCFGCTRL Mask             */
#define MTBDWT_CTRL_DWTCFGCTRL_SHIFT             (0U)                                                /*!< MTBDWT_CTRL.DWTCFGCTRL Position         */
#define MTBDWT_CTRL_DWTCFGCTRL(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFUL)     /*!< MTBDWT_CTRL.DWTCFGCTRL Field            */
#define MTBDWT_CTRL_NUMCMP_MASK                  (0xF0000000U)                                       /*!< MTBDWT_CTRL.NUMCMP Mask                 */
#define MTBDWT_CTRL_NUMCMP_SHIFT                 (28U)                                               /*!< MTBDWT_CTRL.NUMCMP Position             */
#define MTBDWT_CTRL_NUMCMP(x)                    (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL)   /*!< MTBDWT_CTRL.NUMCMP Field                */
/* ------- COMP Bit Fields                          ------ */
#define MTBDWT_COMP_COMP_MASK                    (0xFFFFFFFFU)                                       /*!< MTBDWT_COMP.COMP Mask                   */
#define MTBDWT_COMP_COMP_SHIFT                   (0U)                                                /*!< MTBDWT_COMP.COMP Position               */
#define MTBDWT_COMP_COMP(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTBDWT_COMP.COMP Field                  */
/* ------- MASK Bit Fields                          ------ */
#define MTBDWT_MASK_MASK_MASK                    (0x1FU)                                             /*!< MTBDWT_MASK.MASK Mask                   */
#define MTBDWT_MASK_MASK_SHIFT                   (0U)                                                /*!< MTBDWT_MASK.MASK Position               */
#define MTBDWT_MASK_MASK(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0x1FUL)          /*!< MTBDWT_MASK.MASK Field                  */
/* ------- FCT Bit Fields                           ------ */
#define MTBDWT_FCT_FUNCTION_MASK                 (0xFU)                                              /*!< MTBDWT_FCT.FUNCTION Mask                */
#define MTBDWT_FCT_FUNCTION_SHIFT                (0U)                                                /*!< MTBDWT_FCT.FUNCTION Position            */
#define MTBDWT_FCT_FUNCTION(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< MTBDWT_FCT.FUNCTION Field               */
#define MTBDWT_FCT_DATAVMATCH_MASK               (0x100U)                                            /*!< MTBDWT_FCT.DATAVMATCH Mask              */
#define MTBDWT_FCT_DATAVMATCH_SHIFT              (8U)                                                /*!< MTBDWT_FCT.DATAVMATCH Position          */
#define MTBDWT_FCT_DATAVMATCH(x)                 (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< MTBDWT_FCT.DATAVMATCH Field             */
#define MTBDWT_FCT_DATAVSIZE_MASK                (0xC00U)                                            /*!< MTBDWT_FCT.DATAVSIZE Mask               */
#define MTBDWT_FCT_DATAVSIZE_SHIFT               (10U)                                               /*!< MTBDWT_FCT.DATAVSIZE Position           */
#define MTBDWT_FCT_DATAVSIZE(x)                  (((uint32_t)(((uint32_t)(x))<<10U))&0xC00UL)        /*!< MTBDWT_FCT.DATAVSIZE Field              */
#define MTBDWT_FCT_DATAVADDR0_MASK               (0xF000U)                                           /*!< MTBDWT_FCT.DATAVADDR0 Mask              */
#define MTBDWT_FCT_DATAVADDR0_SHIFT              (12U)                                               /*!< MTBDWT_FCT.DATAVADDR0 Position          */
#define MTBDWT_FCT_DATAVADDR0(x)                 (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< MTBDWT_FCT.DATAVADDR0 Field             */
#define MTBDWT_FCT_MATCHED_MASK                  (0x1000000U)                                        /*!< MTBDWT_FCT.MATCHED Mask                 */
#define MTBDWT_FCT_MATCHED_SHIFT                 (24U)                                               /*!< MTBDWT_FCT.MATCHED Position             */
#define MTBDWT_FCT_MATCHED(x)                    (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< MTBDWT_FCT.MATCHED Field                */
/* ------- TBCTRL Bit Fields                        ------ */
#define MTBDWT_TBCTRL_ACOMP0_MASK                (0x1U)                                              /*!< MTBDWT_TBCTRL.ACOMP0 Mask               */
#define MTBDWT_TBCTRL_ACOMP0_SHIFT               (0U)                                                /*!< MTBDWT_TBCTRL.ACOMP0 Position           */
#define MTBDWT_TBCTRL_ACOMP0(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< MTBDWT_TBCTRL.ACOMP0 Field              */
#define MTBDWT_TBCTRL_ACOMP1_MASK                (0x2U)                                              /*!< MTBDWT_TBCTRL.ACOMP1 Mask               */
#define MTBDWT_TBCTRL_ACOMP1_SHIFT               (1U)                                                /*!< MTBDWT_TBCTRL.ACOMP1 Position           */
#define MTBDWT_TBCTRL_ACOMP1(x)                  (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< MTBDWT_TBCTRL.ACOMP1 Field              */
#define MTBDWT_TBCTRL_NUMCOMP_MASK               (0xF0000000U)                                       /*!< MTBDWT_TBCTRL.NUMCOMP Mask              */
#define MTBDWT_TBCTRL_NUMCOMP_SHIFT              (28U)                                               /*!< MTBDWT_TBCTRL.NUMCOMP Position          */
#define MTBDWT_TBCTRL_NUMCOMP(x)                 (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL)   /*!< MTBDWT_TBCTRL.NUMCOMP Field             */
/* ------- DEVICECFG Bit Fields                     ------ */
#define MTBDWT_DEVICECFG_DEVICECFG_MASK          (0xFFFFFFFFU)                                       /*!< MTBDWT_DEVICECFG.DEVICECFG Mask         */
#define MTBDWT_DEVICECFG_DEVICECFG_SHIFT         (0U)                                                /*!< MTBDWT_DEVICECFG.DEVICECFG Position     */
#define MTBDWT_DEVICECFG_DEVICECFG(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTBDWT_DEVICECFG.DEVICECFG Field        */
/* ------- DEVICETYPID Bit Fields                   ------ */
#define MTBDWT_DEVICETYPID_DEVICETYPID_MASK      (0xFFFFFFFFU)                                       /*!< MTBDWT_DEVICETYPID.DEVICETYPID Mask     */
#define MTBDWT_DEVICETYPID_DEVICETYPID_SHIFT     (0U)                                                /*!< MTBDWT_DEVICETYPID.DEVICETYPID Position */
#define MTBDWT_DEVICETYPID_DEVICETYPID(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTBDWT_DEVICETYPID.DEVICETYPID Field    */
/* ------- PERIPHID Bit Fields                      ------ */
#define MTBDWT_PERIPHID_PERIPHID_MASK            (0xFFFFFFFFU)                                       /*!< MTBDWT_PERIPHID.PERIPHID Mask           */
#define MTBDWT_PERIPHID_PERIPHID_SHIFT           (0U)                                                /*!< MTBDWT_PERIPHID.PERIPHID Position       */
#define MTBDWT_PERIPHID_PERIPHID(x)              (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTBDWT_PERIPHID.PERIPHID Field          */
/* ------- COMPID Bit Fields                        ------ */
#define MTBDWT_COMPID_COMPID_MASK                (0xFFFFFFFFU)                                       /*!< MTBDWT_COMPID.COMPID Mask               */
#define MTBDWT_COMPID_COMPID_SHIFT               (0U)                                                /*!< MTBDWT_COMPID.COMPID Position           */
#define MTBDWT_COMPID_COMPID(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< MTBDWT_COMPID.COMPID Field              */
/**
 * @} */ /* End group MTBDWT_Register_Masks_GROUP 
 */

/* MTBDWT - Peripheral instance base addresses */
#define MTBDWT_BasePtr                 0xF0001000UL //!< Peripheral base address
#define MTBDWT                         ((MTBDWT_Type *) MTBDWT_BasePtr) //!< Freescale base pointer
#define MTBDWT_BASE_PTR                (MTBDWT) //!< Freescale style base pointer
/**
 * @} */ /* End group MTBDWT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup FTFA_FlashConfig_Peripheral_access_layer_GROUP FTFA_FlashConfig Peripheral Access Layer
* @brief C Struct for FTFA_FlashConfig
* @{
*/

/* ================================================================================ */
/* ================           NV (file:FTFA_FlashConfig_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief Flash configuration field
 */
/**
* @addtogroup FTFA_FlashConfig_structs_GROUP FTFA_FlashConfig struct
* @brief Struct for FTFA_FlashConfig
* @{
*/
typedef struct FTFA_FlashConfig_Type {
   __I  uint8_t   BACKKEY3;                     /**< 0000: Backdoor Comparison Key 3                                    */
   __I  uint8_t   BACKKEY2;                     /**< 0001: Backdoor Comparison Key 2                                    */
   __I  uint8_t   BACKKEY1;                     /**< 0002: Backdoor Comparison Key 1                                    */
   __I  uint8_t   BACKKEY0;                     /**< 0003: Backdoor Comparison Key 0                                    */
   __I  uint8_t   BACKKEY7;                     /**< 0004: Backdoor Comparison Key 7                                    */
   __I  uint8_t   BACKKEY6;                     /**< 0005: Backdoor Comparison Key 6                                    */
   __I  uint8_t   BACKKEY5;                     /**< 0006: Backdoor Comparison Key 5                                    */
   __I  uint8_t   BACKKEY4;                     /**< 0007: Backdoor Comparison Key 4                                    */
   __I  uint8_t   FPROT3;                       /**< 0008: Non-volatile P-Flash Protection 1 - Low Register             */
   __I  uint8_t   FPROT2;                       /**< 0009: Non-volatile P-Flash Protection 1 - High Register            */
   __I  uint8_t   FPROT1;                       /**< 000A: Non-volatile P-Flash Protection 0 - Low Register             */
   __I  uint8_t   FPROT0;                       /**< 000B: Non-volatile P-Flash Protection 0 - High Register            */
   __I  uint8_t   FSEC;                         /**< 000C: Non-volatile Flash Security Register                         */
   __I  uint8_t   FOPT;                         /**< 000D: Non-volatile Flash Option Register                           */
} FTFA_FlashConfig_Type;

/**
 * @} */ /* End group FTFA_FlashConfig_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'NV' Position & Mask macros                          ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup FTFA_FlashConfig_Register_Masks_GROUP FTFA_FlashConfig Register Masks
* @brief Register Masks for FTFA_FlashConfig
* @{
*/
/* ------- BACKKEY Bit Fields                       ------ */
#define NV_BACKKEY_KEY_MASK                      (0xFFU)                                             /*!< NV_BACKKEY.KEY Mask                     */
#define NV_BACKKEY_KEY_SHIFT                     (0U)                                                /*!< NV_BACKKEY.KEY Position                 */
#define NV_BACKKEY_KEY(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< NV_BACKKEY.KEY Field                    */
/* ------- FPROT3 Bit Fields                        ------ */
#define NV_FPROT3_PROT_MASK                      (0xFFU)                                             /*!< NV_FPROT3.PROT Mask                     */
#define NV_FPROT3_PROT_SHIFT                     (0U)                                                /*!< NV_FPROT3.PROT Position                 */
#define NV_FPROT3_PROT(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< NV_FPROT3.PROT Field                    */
/* ------- FPROT2 Bit Fields                        ------ */
#define NV_FPROT2_PROT_MASK                      (0xFFU)                                             /*!< NV_FPROT2.PROT Mask                     */
#define NV_FPROT2_PROT_SHIFT                     (0U)                                                /*!< NV_FPROT2.PROT Position                 */
#define NV_FPROT2_PROT(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< NV_FPROT2.PROT Field                    */
/* ------- FPROT1 Bit Fields                        ------ */
#define NV_FPROT1_PROT_MASK                      (0xFFU)                                             /*!< NV_FPROT1.PROT Mask                     */
#define NV_FPROT1_PROT_SHIFT                     (0U)                                                /*!< NV_FPROT1.PROT Position                 */
#define NV_FPROT1_PROT(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< NV_FPROT1.PROT Field                    */
/* ------- FPROT0 Bit Fields                        ------ */
#define NV_FPROT0_PROT_MASK                      (0xFFU)                                             /*!< NV_FPROT0.PROT Mask                     */
#define NV_FPROT0_PROT_SHIFT                     (0U)                                                /*!< NV_FPROT0.PROT Position                 */
#define NV_FPROT0_PROT(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< NV_FPROT0.PROT Field                    */
/* ------- FSEC Bit Fields                          ------ */
#define NV_FSEC_SEC_MASK                         (0x3U)                                              /*!< NV_FSEC.SEC Mask                        */
#define NV_FSEC_SEC_SHIFT                        (0U)                                                /*!< NV_FSEC.SEC Position                    */
#define NV_FSEC_SEC(x)                           (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< NV_FSEC.SEC Field                       */
#define NV_FSEC_FSLACC_MASK                      (0xCU)                                              /*!< NV_FSEC.FSLACC Mask                     */
#define NV_FSEC_FSLACC_SHIFT                     (2U)                                                /*!< NV_FSEC.FSLACC Position                 */
#define NV_FSEC_FSLACC(x)                        (((uint8_t)(((uint8_t)(x))<<2U))&0xCUL)             /*!< NV_FSEC.FSLACC Field                    */
#define NV_FSEC_MEEN_MASK                        (0x30U)                                             /*!< NV_FSEC.MEEN Mask                       */
#define NV_FSEC_MEEN_SHIFT                       (4U)                                                /*!< NV_FSEC.MEEN Position                   */
#define NV_FSEC_MEEN(x)                          (((uint8_t)(((uint8_t)(x))<<4U))&0x30UL)            /*!< NV_FSEC.MEEN Field                      */
#define NV_FSEC_KEYEN_MASK                       (0xC0U)                                             /*!< NV_FSEC.KEYEN Mask                      */
#define NV_FSEC_KEYEN_SHIFT                      (6U)                                                /*!< NV_FSEC.KEYEN Position                  */
#define NV_FSEC_KEYEN(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< NV_FSEC.KEYEN Field                     */
/* ------- FOPT Bit Fields                          ------ */
#define NV_FOPT_LPBOOT0_MASK                     (0x1U)                                              /*!< NV_FOPT.LPBOOT0 Mask                    */
#define NV_FOPT_LPBOOT0_SHIFT                    (0U)                                                /*!< NV_FOPT.LPBOOT0 Position                */
#define NV_FOPT_LPBOOT0(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< NV_FOPT.LPBOOT0 Field                   */
#define NV_FOPT_NMI_DIS_MASK                     (0x4U)                                              /*!< NV_FOPT.NMI_DIS Mask                    */
#define NV_FOPT_NMI_DIS_SHIFT                    (2U)                                                /*!< NV_FOPT.NMI_DIS Position                */
#define NV_FOPT_NMI_DIS(x)                       (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< NV_FOPT.NMI_DIS Field                   */
#define NV_FOPT_RESET_PIN_CFG_MASK               (0x8U)                                              /*!< NV_FOPT.RESET_PIN_CFG Mask              */
#define NV_FOPT_RESET_PIN_CFG_SHIFT              (3U)                                                /*!< NV_FOPT.RESET_PIN_CFG Position          */
#define NV_FOPT_RESET_PIN_CFG(x)                 (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< NV_FOPT.RESET_PIN_CFG Field             */
#define NV_FOPT_LPBOOT1_MASK                     (0x10U)                                             /*!< NV_FOPT.LPBOOT1 Mask                    */
#define NV_FOPT_LPBOOT1_SHIFT                    (4U)                                                /*!< NV_FOPT.LPBOOT1 Position                */
#define NV_FOPT_LPBOOT1(x)                       (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< NV_FOPT.LPBOOT1 Field                   */
#define NV_FOPT_FAST_INIT_MASK                   (0x20U)                                             /*!< NV_FOPT.FAST_INIT Mask                  */
#define NV_FOPT_FAST_INIT_SHIFT                  (5U)                                                /*!< NV_FOPT.FAST_INIT Position              */
#define NV_FOPT_FAST_INIT(x)                     (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< NV_FOPT.FAST_INIT Field                 */
/**
 * @} */ /* End group FTFA_FlashConfig_Register_Masks_GROUP 
 */

/* NV - Peripheral instance base addresses */
#define NV_BasePtr                     0x00000400UL //!< Peripheral base address
#define NV                             ((FTFA_FlashConfig_Type *) NV_BasePtr) //!< Freescale base pointer
#define NV_BASE_PTR                    (NV) //!< Freescale style base pointer
/**
 * @} */ /* End group FTFA_FlashConfig_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup OSC_Peripheral_access_layer_GROUP OSC Peripheral Access Layer
* @brief C Struct for OSC
* @{
*/

/* ================================================================================ */
/* ================           OSC0 (file:OSC0_RF)                  ================ */
/* ================================================================================ */

/**
 * @brief System Oscillator
 */
/**
* @addtogroup OSC_structs_GROUP OSC struct
* @brief Struct for OSC
* @{
*/
typedef struct OSC_Type {
   __IO uint8_t   Dummy;                        /**< 0000: Dummy Register                                               */
} OSC_Type;

/**
 * @} */ /* End group OSC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'OSC0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup OSC_Register_Masks_GROUP OSC Register Masks
* @brief Register Masks for OSC
* @{
*/
/* ------- Dummy Bit Fields                         ------ */
/**
 * @} */ /* End group OSC_Register_Masks_GROUP 
 */

/* OSC0 - Peripheral instance base addresses */
#define OSC0_BasePtr                   0x00000000UL //!< Peripheral base address
#define OSC0                           ((OSC_Type *) OSC0_BasePtr) //!< Freescale base pointer
#define OSC0_BASE_PTR                  (OSC0) //!< Freescale style base pointer
/**
 * @} */ /* End group OSC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PIT_Peripheral_access_layer_GROUP PIT Peripheral Access Layer
* @brief C Struct for PIT
* @{
*/

/* ================================================================================ */
/* ================           PIT (file:PIT_2CH_CHAIN_LTMR)        ================ */
/* ================================================================================ */

/**
 * @brief Periodic Interrupt Timer (2 channels)
 */
#define PIT_TMR_COUNT        2          /**< Number of timer channels                           */
/**
* @addtogroup PIT_structs_GROUP PIT struct
* @brief Struct for PIT
* @{
*/
typedef struct PIT_Type {
   __IO uint32_t  MCR;                          /**< 0000: Module Control Register                                      */
        uint8_t   RESERVED_0[220];              /**< 0004: 0xDC bytes                                                   */
   __I  uint32_t  LTMR64H;                      /**< 00E0: Upper Lifetime Timer Register                                */
   __I  uint32_t  LTMR64L;                      /**< 00E4: Lower Lifetime Timer Register                                */
        uint8_t   RESERVED_1[24];               /**< 00E8: 0x18 bytes                                                   */
   struct {
      __IO uint32_t  LDVAL;                     /**< 0100: Timer Load Value Register                                    */
      __I  uint32_t  CVAL;                      /**< 0104: Current Timer Value Register                                 */
      __IO uint32_t  TCTRL;                     /**< 0108: Timer Control Register                                       */
      __IO uint32_t  TFLG;                      /**< 010C: Timer Flag Register                                          */
   } CHANNEL[PIT_TMR_COUNT];                    /**< 0100: (cluster: size=0x0020, 32)                                   */
} PIT_Type;

/**
 * @} */ /* End group PIT_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'PIT' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup PIT_Register_Masks_GROUP PIT Register Masks
* @brief Register Masks for PIT
* @{
*/
/* ------- MCR Bit Fields                           ------ */
#define PIT_MCR_FRZ_MASK                         (0x1U)                                              /*!< PIT_MCR.FRZ Mask                        */
#define PIT_MCR_FRZ_SHIFT                        (0U)                                                /*!< PIT_MCR.FRZ Position                    */
#define PIT_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< PIT_MCR.FRZ Field                       */
#define PIT_MCR_MDIS_MASK                        (0x2U)                                              /*!< PIT_MCR.MDIS Mask                       */
#define PIT_MCR_MDIS_SHIFT                       (1U)                                                /*!< PIT_MCR.MDIS Position                   */
#define PIT_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< PIT_MCR.MDIS Field                      */
/* ------- LTMR64H Bit Fields                       ------ */
#define PIT_LTMR64H_LTH_MASK                     (0xFFFFFFFFU)                                       /*!< PIT_LTMR64H.LTH Mask                    */
#define PIT_LTMR64H_LTH_SHIFT                    (0U)                                                /*!< PIT_LTMR64H.LTH Position                */
#define PIT_LTMR64H_LTH(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< PIT_LTMR64H.LTH Field                   */
/* ------- LTMR64L Bit Fields                       ------ */
#define PIT_LTMR64L_LTL_MASK                     (0xFFFFFFFFU)                                       /*!< PIT_LTMR64L.LTL Mask                    */
#define PIT_LTMR64L_LTL_SHIFT                    (0U)                                                /*!< PIT_LTMR64L.LTL Position                */
#define PIT_LTMR64L_LTL(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< PIT_LTMR64L.LTL Field                   */
/* ------- LDVAL Bit Fields                         ------ */
#define PIT_LDVAL_TSV_MASK                       (0xFFFFFFFFU)                                       /*!< PIT_LDVAL.TSV Mask                      */
#define PIT_LDVAL_TSV_SHIFT                      (0U)                                                /*!< PIT_LDVAL.TSV Position                  */
#define PIT_LDVAL_TSV(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< PIT_LDVAL.TSV Field                     */
/* ------- CVAL Bit Fields                          ------ */
#define PIT_CVAL_TVL_MASK                        (0xFFFFFFFFU)                                       /*!< PIT_CVAL.TVL Mask                       */
#define PIT_CVAL_TVL_SHIFT                       (0U)                                                /*!< PIT_CVAL.TVL Position                   */
#define PIT_CVAL_TVL(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< PIT_CVAL.TVL Field                      */
/* ------- TCTRL Bit Fields                         ------ */
#define PIT_TCTRL_TEN_MASK                       (0x1U)                                              /*!< PIT_TCTRL.TEN Mask                      */
#define PIT_TCTRL_TEN_SHIFT                      (0U)                                                /*!< PIT_TCTRL.TEN Position                  */
#define PIT_TCTRL_TEN(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< PIT_TCTRL.TEN Field                     */
#define PIT_TCTRL_TIE_MASK                       (0x2U)                                              /*!< PIT_TCTRL.TIE Mask                      */
#define PIT_TCTRL_TIE_SHIFT                      (1U)                                                /*!< PIT_TCTRL.TIE Position                  */
#define PIT_TCTRL_TIE(x)                         (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< PIT_TCTRL.TIE Field                     */
#define PIT_TCTRL_CHN_MASK                       (0x4U)                                              /*!< PIT_TCTRL.CHN Mask                      */
#define PIT_TCTRL_CHN_SHIFT                      (2U)                                                /*!< PIT_TCTRL.CHN Position                  */
#define PIT_TCTRL_CHN(x)                         (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< PIT_TCTRL.CHN Field                     */
/* ------- TFLG Bit Fields                          ------ */
#define PIT_TFLG_TIF_MASK                        (0x1U)                                              /*!< PIT_TFLG.TIF Mask                       */
#define PIT_TFLG_TIF_SHIFT                       (0U)                                                /*!< PIT_TFLG.TIF Position                   */
#define PIT_TFLG_TIF(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< PIT_TFLG.TIF Field                      */
/**
 * @} */ /* End group PIT_Register_Masks_GROUP 
 */

/* PIT - Peripheral instance base addresses */
#define PIT_BasePtr                    0x40037000UL //!< Peripheral base address
#define PIT                            ((PIT_Type *) PIT_BasePtr) //!< Freescale base pointer
#define PIT_BASE_PTR                   (PIT) //!< Freescale style base pointer
#define PIT_IRQS { PIT_IRQn,  }

/**
 * @} */ /* End group PIT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PMC_Peripheral_access_layer_GROUP PMC Peripheral Access Layer
* @brief C Struct for PMC
* @{
*/

/* ================================================================================ */
/* ================           PMC (file:PMC_MKW41Z4)               ================ */
/* ================================================================================ */

/**
 * @brief Power Management Controller
 */
/**
* @addtogroup PMC_structs_GROUP PMC struct
* @brief Struct for PMC
* @{
*/
typedef struct PMC_Type {
   __IO uint8_t   LVDSC1;                       /**< 0000: Low Voltage Detect Status and Control 1 Register             */
   __IO uint8_t   LVDSC2;                       /**< 0001: Low Voltage Status and Control 2                             */
   __IO uint8_t   REGSC;                        /**< 0002: Regulator Status and Control                                 */
} PMC_Type;

/**
 * @} */ /* End group PMC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'PMC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup PMC_Register_Masks_GROUP PMC Register Masks
* @brief Register Masks for PMC
* @{
*/
/* ------- LVDSC1 Bit Fields                        ------ */
#define PMC_LVDSC1_LVDV_MASK                     (0x3U)                                              /*!< PMC_LVDSC1.LVDV Mask                    */
#define PMC_LVDSC1_LVDV_SHIFT                    (0U)                                                /*!< PMC_LVDSC1.LVDV Position                */
#define PMC_LVDSC1_LVDV(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< PMC_LVDSC1.LVDV Field                   */
#define PMC_LVDSC1_LVDRE_MASK                    (0x10U)                                             /*!< PMC_LVDSC1.LVDRE Mask                   */
#define PMC_LVDSC1_LVDRE_SHIFT                   (4U)                                                /*!< PMC_LVDSC1.LVDRE Position               */
#define PMC_LVDSC1_LVDRE(x)                      (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< PMC_LVDSC1.LVDRE Field                  */
#define PMC_LVDSC1_LVDIE_MASK                    (0x20U)                                             /*!< PMC_LVDSC1.LVDIE Mask                   */
#define PMC_LVDSC1_LVDIE_SHIFT                   (5U)                                                /*!< PMC_LVDSC1.LVDIE Position               */
#define PMC_LVDSC1_LVDIE(x)                      (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< PMC_LVDSC1.LVDIE Field                  */
#define PMC_LVDSC1_LVDACK_MASK                   (0x40U)                                             /*!< PMC_LVDSC1.LVDACK Mask                  */
#define PMC_LVDSC1_LVDACK_SHIFT                  (6U)                                                /*!< PMC_LVDSC1.LVDACK Position              */
#define PMC_LVDSC1_LVDACK(x)                     (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< PMC_LVDSC1.LVDACK Field                 */
#define PMC_LVDSC1_LVDF_MASK                     (0x80U)                                             /*!< PMC_LVDSC1.LVDF Mask                    */
#define PMC_LVDSC1_LVDF_SHIFT                    (7U)                                                /*!< PMC_LVDSC1.LVDF Position                */
#define PMC_LVDSC1_LVDF(x)                       (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< PMC_LVDSC1.LVDF Field                   */
/* ------- LVDSC2 Bit Fields                        ------ */
#define PMC_LVDSC2_LVWV_MASK                     (0x3U)                                              /*!< PMC_LVDSC2.LVWV Mask                    */
#define PMC_LVDSC2_LVWV_SHIFT                    (0U)                                                /*!< PMC_LVDSC2.LVWV Position                */
#define PMC_LVDSC2_LVWV(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< PMC_LVDSC2.LVWV Field                   */
#define PMC_LVDSC2_LVWIE_MASK                    (0x20U)                                             /*!< PMC_LVDSC2.LVWIE Mask                   */
#define PMC_LVDSC2_LVWIE_SHIFT                   (5U)                                                /*!< PMC_LVDSC2.LVWIE Position               */
#define PMC_LVDSC2_LVWIE(x)                      (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< PMC_LVDSC2.LVWIE Field                  */
#define PMC_LVDSC2_LVWACK_MASK                   (0x40U)                                             /*!< PMC_LVDSC2.LVWACK Mask                  */
#define PMC_LVDSC2_LVWACK_SHIFT                  (6U)                                                /*!< PMC_LVDSC2.LVWACK Position              */
#define PMC_LVDSC2_LVWACK(x)                     (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< PMC_LVDSC2.LVWACK Field                 */
#define PMC_LVDSC2_LVWF_MASK                     (0x80U)                                             /*!< PMC_LVDSC2.LVWF Mask                    */
#define PMC_LVDSC2_LVWF_SHIFT                    (7U)                                                /*!< PMC_LVDSC2.LVWF Position                */
#define PMC_LVDSC2_LVWF(x)                       (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< PMC_LVDSC2.LVWF Field                   */
/* ------- REGSC Bit Fields                         ------ */
#define PMC_REGSC_BGBE_MASK                      (0x1U)                                              /*!< PMC_REGSC.BGBE Mask                     */
#define PMC_REGSC_BGBE_SHIFT                     (0U)                                                /*!< PMC_REGSC.BGBE Position                 */
#define PMC_REGSC_BGBE(x)                        (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< PMC_REGSC.BGBE Field                    */
#define PMC_REGSC_REGONS_MASK                    (0x4U)                                              /*!< PMC_REGSC.REGONS Mask                   */
#define PMC_REGSC_REGONS_SHIFT                   (2U)                                                /*!< PMC_REGSC.REGONS Position               */
#define PMC_REGSC_REGONS(x)                      (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< PMC_REGSC.REGONS Field                  */
#define PMC_REGSC_ACKISO_MASK                    (0x8U)                                              /*!< PMC_REGSC.ACKISO Mask                   */
#define PMC_REGSC_ACKISO_SHIFT                   (3U)                                                /*!< PMC_REGSC.ACKISO Position               */
#define PMC_REGSC_ACKISO(x)                      (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< PMC_REGSC.ACKISO Field                  */
#define PMC_REGSC_VLPO_MASK                      (0x40U)                                             /*!< PMC_REGSC.VLPO Mask                     */
#define PMC_REGSC_VLPO_SHIFT                     (6U)                                                /*!< PMC_REGSC.VLPO Position                 */
#define PMC_REGSC_VLPO(x)                        (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< PMC_REGSC.VLPO Field                    */
/**
 * @} */ /* End group PMC_Register_Masks_GROUP 
 */

/* PMC - Peripheral instance base addresses */
#define PMC_BasePtr                    0x4007D000UL //!< Peripheral base address
#define PMC                            ((PMC_Type *) PMC_BasePtr) //!< Freescale base pointer
#define PMC_BASE_PTR                   (PMC) //!< Freescale style base pointer
#define PMC_IRQS { PMC_DCDC_IRQn,  }

/**
 * @} */ /* End group PMC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer
* @brief C Struct for PORT
* @{
*/

/* ================================================================================ */
/* ================           PORTA (file:PORTA_MKL_DMA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */
/**
* @addtogroup PORT_structs_GROUP PORT struct
* @brief Struct for PORT
* @{
*/
typedef struct PORT_Type {
   __IO uint32_t  PCR[32];                      /**< 0000: Pin Control Register                                         */
   __O  uint32_t  GPCLR;                        /**< 0080: Global Pin Control Low Register                              */
   __O  uint32_t  GPCHR;                        /**< 0084: Global Pin Control High Register                             */
        uint8_t   RESERVED_0[24];               /**< 0088: 0x18 bytes                                                   */
   __IO uint32_t  ISFR;                         /**< 00A0: Interrupt Status Flag Register                               */
} PORT_Type;

/**
 * @} */ /* End group PORT_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'PORTA' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup PORT_Register_Masks_GROUP PORT Register Masks
* @brief Register Masks for PORT
* @{
*/
/* ------- PCR Bit Fields                           ------ */
#define PORT_PCR_PD_MASK                         (0x3U)                                              /*!< PORTA_PCR.PD Mask                       */
#define PORT_PCR_PD_SHIFT                        (0U)                                                /*!< PORTA_PCR.PD Position                   */
#define PORT_PCR_PD(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< PORTA_PCR.PD Field                      */
#define PORT_PCR_PS_MASK                         (0x1U)                                              /*!< PORTA_PCR.PS Mask                       */
#define PORT_PCR_PS_SHIFT                        (0U)                                                /*!< PORTA_PCR.PS Position                   */
#define PORT_PCR_PS(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< PORTA_PCR.PS Field                      */
#define PORT_PCR_PE_MASK                         (0x2U)                                              /*!< PORTA_PCR.PE Mask                       */
#define PORT_PCR_PE_SHIFT                        (1U)                                                /*!< PORTA_PCR.PE Position                   */
#define PORT_PCR_PE(x)                           (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< PORTA_PCR.PE Field                      */
#define PORT_PCR_SRE_MASK                        (0x4U)                                              /*!< PORTA_PCR.SRE Mask                      */
#define PORT_PCR_SRE_SHIFT                       (2U)                                                /*!< PORTA_PCR.SRE Position                  */
#define PORT_PCR_SRE(x)                          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< PORTA_PCR.SRE Field                     */
#define PORT_PCR_PFE_MASK                        (0x10U)                                             /*!< PORTA_PCR.PFE Mask                      */
#define PORT_PCR_PFE_SHIFT                       (4U)                                                /*!< PORTA_PCR.PFE Position                  */
#define PORT_PCR_PFE(x)                          (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< PORTA_PCR.PFE Field                     */
#define PORT_PCR_DSE_MASK                        (0x40U)                                             /*!< PORTA_PCR.DSE Mask                      */
#define PORT_PCR_DSE_SHIFT                       (6U)                                                /*!< PORTA_PCR.DSE Position                  */
#define PORT_PCR_DSE(x)                          (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< PORTA_PCR.DSE Field                     */
#define PORT_PCR_MUX_MASK                        (0x700U)                                            /*!< PORTA_PCR.MUX Mask                      */
#define PORT_PCR_MUX_SHIFT                       (8U)                                                /*!< PORTA_PCR.MUX Position                  */
#define PORT_PCR_MUX(x)                          (((uint32_t)(((uint32_t)(x))<<8U))&0x700UL)         /*!< PORTA_PCR.MUX Field                     */
#define PORT_PCR_IRQC_MASK                       (0xF0000U)                                          /*!< PORTA_PCR.IRQC Mask                     */
#define PORT_PCR_IRQC_SHIFT                      (16U)                                               /*!< PORTA_PCR.IRQC Position                 */
#define PORT_PCR_IRQC(x)                         (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< PORTA_PCR.IRQC Field                    */
#define PORT_PCR_ISF_MASK                        (0x1000000U)                                        /*!< PORTA_PCR.ISF Mask                      */
#define PORT_PCR_ISF_SHIFT                       (24U)                                               /*!< PORTA_PCR.ISF Position                  */
#define PORT_PCR_ISF(x)                          (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< PORTA_PCR.ISF Field                     */
/* ------- GPCLR Bit Fields                         ------ */
#define PORT_GPCLR_GPWD_MASK                     (0xFFFFU)                                           /*!< PORTA_GPCLR.GPWD Mask                   */
#define PORT_GPCLR_GPWD_SHIFT                    (0U)                                                /*!< PORTA_GPCLR.GPWD Position               */
#define PORT_GPCLR_GPWD(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< PORTA_GPCLR.GPWD Field                  */
#define PORT_GPCLR_GPWE_MASK                     (0xFFFF0000U)                                       /*!< PORTA_GPCLR.GPWE Mask                   */
#define PORT_GPCLR_GPWE_SHIFT                    (16U)                                               /*!< PORTA_GPCLR.GPWE Position               */
#define PORT_GPCLR_GPWE(x)                       (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< PORTA_GPCLR.GPWE Field                  */
/* ------- GPCHR Bit Fields                         ------ */
#define PORT_GPCHR_GPWD_MASK                     (0xFFFFU)                                           /*!< PORTA_GPCHR.GPWD Mask                   */
#define PORT_GPCHR_GPWD_SHIFT                    (0U)                                                /*!< PORTA_GPCHR.GPWD Position               */
#define PORT_GPCHR_GPWD(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< PORTA_GPCHR.GPWD Field                  */
#define PORT_GPCHR_GPWE_MASK                     (0xFFFF0000U)                                       /*!< PORTA_GPCHR.GPWE Mask                   */
#define PORT_GPCHR_GPWE_SHIFT                    (16U)                                               /*!< PORTA_GPCHR.GPWE Position               */
#define PORT_GPCHR_GPWE(x)                       (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< PORTA_GPCHR.GPWE Field                  */
/* ------- ISFR Bit Fields                          ------ */
/**
 * @} */ /* End group PORT_Register_Masks_GROUP 
 */

/* PORTA - Peripheral instance base addresses */
#define PORTA_BasePtr                  0x40049000UL //!< Peripheral base address
#define PORTA                          ((PORT_Type *) PORTA_BasePtr) //!< Freescale base pointer
#define PORTA_BASE_PTR                 (PORTA) //!< Freescale style base pointer
#define PORTA_IRQS { PORTA_IRQn,  }

/**
 * @} */ /* End group PORT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer
* @brief C Struct for PORT
* @{
*/

/* ================================================================================ */
/* ================           PORTB (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTB - Peripheral instance base addresses */
#define PORTB_BasePtr                  0x4004A000UL //!< Peripheral base address
#define PORTB                          ((PORT_Type *) PORTB_BasePtr) //!< Freescale base pointer
#define PORTB_BASE_PTR                 (PORTB) //!< Freescale style base pointer
#define PORTB_IRQS { PORTB_PORTC_IRQn,  }

/**
 * @} */ /* End group PORT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup PORT_Peripheral_access_layer_GROUP PORT Peripheral Access Layer
* @brief C Struct for PORT
* @{
*/

/* ================================================================================ */
/* ================           PORTC (derived from PORTA)           ================ */
/* ================================================================================ */

/**
 * @brief Pin Control and Interrupts
 */

/* PORTC - Peripheral instance base addresses */
#define PORTC_BasePtr                  0x4004B000UL //!< Peripheral base address
#define PORTC                          ((PORT_Type *) PORTC_BasePtr) //!< Freescale base pointer
#define PORTC_BASE_PTR                 (PORTC) //!< Freescale style base pointer
#define PORTC_IRQS { PORTB_PORTC_IRQn,  }

/**
 * @} */ /* End group PORT_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup RCM_Peripheral_access_layer_GROUP RCM Peripheral Access Layer
* @brief C Struct for RCM
* @{
*/

/* ================================================================================ */
/* ================           RCM (file:RCM_MKW41Z4)               ================ */
/* ================================================================================ */

/**
 * @brief Reset Control Module
 */
/**
* @addtogroup RCM_structs_GROUP RCM struct
* @brief Struct for RCM
* @{
*/
typedef struct RCM_Type {
   __I  uint8_t   SRS0;                         /**< 0000: System Reset Status Register 0                               */
   __I  uint8_t   SRS1;                         /**< 0001: System Reset Status Register 1                               */
        uint8_t   RESERVED_0[2];                /**< 0002: 0x2 bytes                                                    */
   __IO uint8_t   RPFC;                         /**< 0004: Reset Pin Filter Control register                            */
   __IO uint8_t   RPFW;                         /**< 0005: Reset Pin Filter Width register                              */
} RCM_Type;

/**
 * @} */ /* End group RCM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'RCM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup RCM_Register_Masks_GROUP RCM Register Masks
* @brief Register Masks for RCM
* @{
*/
/* ------- SRS0 Bit Fields                          ------ */
#define RCM_SRS0_WAKEUP_MASK                     (0x1U)                                              /*!< RCM_SRS0.WAKEUP Mask                    */
#define RCM_SRS0_WAKEUP_SHIFT                    (0U)                                                /*!< RCM_SRS0.WAKEUP Position                */
#define RCM_SRS0_WAKEUP(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x1UL)             /*!< RCM_SRS0.WAKEUP Field                   */
#define RCM_SRS0_LVD_MASK                        (0x2U)                                              /*!< RCM_SRS0.LVD Mask                       */
#define RCM_SRS0_LVD_SHIFT                       (1U)                                                /*!< RCM_SRS0.LVD Position                   */
#define RCM_SRS0_LVD(x)                          (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< RCM_SRS0.LVD Field                      */
#define RCM_SRS0_LOC_MASK                        (0x4U)                                              /*!< RCM_SRS0.LOC Mask                       */
#define RCM_SRS0_LOC_SHIFT                       (2U)                                                /*!< RCM_SRS0.LOC Position                   */
#define RCM_SRS0_LOC(x)                          (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< RCM_SRS0.LOC Field                      */
#define RCM_SRS0_WDOG_MASK                       (0x20U)                                             /*!< RCM_SRS0.WDOG Mask                      */
#define RCM_SRS0_WDOG_SHIFT                      (5U)                                                /*!< RCM_SRS0.WDOG Position                  */
#define RCM_SRS0_WDOG(x)                         (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< RCM_SRS0.WDOG Field                     */
#define RCM_SRS0_PIN_MASK                        (0x40U)                                             /*!< RCM_SRS0.PIN Mask                       */
#define RCM_SRS0_PIN_SHIFT                       (6U)                                                /*!< RCM_SRS0.PIN Position                   */
#define RCM_SRS0_PIN(x)                          (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< RCM_SRS0.PIN Field                      */
#define RCM_SRS0_POR_MASK                        (0x80U)                                             /*!< RCM_SRS0.POR Mask                       */
#define RCM_SRS0_POR_SHIFT                       (7U)                                                /*!< RCM_SRS0.POR Position                   */
#define RCM_SRS0_POR(x)                          (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< RCM_SRS0.POR Field                      */
/* ------- SRS1 Bit Fields                          ------ */
#define RCM_SRS1_LOCKUP_MASK                     (0x2U)                                              /*!< RCM_SRS1.LOCKUP Mask                    */
#define RCM_SRS1_LOCKUP_SHIFT                    (1U)                                                /*!< RCM_SRS1.LOCKUP Position                */
#define RCM_SRS1_LOCKUP(x)                       (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< RCM_SRS1.LOCKUP Field                   */
#define RCM_SRS1_SW_MASK                         (0x4U)                                              /*!< RCM_SRS1.SW Mask                        */
#define RCM_SRS1_SW_SHIFT                        (2U)                                                /*!< RCM_SRS1.SW Position                    */
#define RCM_SRS1_SW(x)                           (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< RCM_SRS1.SW Field                       */
#define RCM_SRS1_MDM_AP_MASK                     (0x8U)                                              /*!< RCM_SRS1.MDM_AP Mask                    */
#define RCM_SRS1_MDM_AP_SHIFT                    (3U)                                                /*!< RCM_SRS1.MDM_AP Position                */
#define RCM_SRS1_MDM_AP(x)                       (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< RCM_SRS1.MDM_AP Field                   */
#define RCM_SRS1_SACKERR_MASK                    (0x20U)                                             /*!< RCM_SRS1.SACKERR Mask                   */
#define RCM_SRS1_SACKERR_SHIFT                   (5U)                                                /*!< RCM_SRS1.SACKERR Position               */
#define RCM_SRS1_SACKERR(x)                      (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< RCM_SRS1.SACKERR Field                  */
/* ------- RPFC Bit Fields                          ------ */
#define RCM_RPFC_RSTFLTSRW_MASK                  (0x3U)                                              /*!< RCM_RPFC.RSTFLTSRW Mask                 */
#define RCM_RPFC_RSTFLTSRW_SHIFT                 (0U)                                                /*!< RCM_RPFC.RSTFLTSRW Position             */
#define RCM_RPFC_RSTFLTSRW(x)                    (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< RCM_RPFC.RSTFLTSRW Field                */
#define RCM_RPFC_RSTFLTSS_MASK                   (0x4U)                                              /*!< RCM_RPFC.RSTFLTSS Mask                  */
#define RCM_RPFC_RSTFLTSS_SHIFT                  (2U)                                                /*!< RCM_RPFC.RSTFLTSS Position              */
#define RCM_RPFC_RSTFLTSS(x)                     (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< RCM_RPFC.RSTFLTSS Field                 */
/* ------- RPFW Bit Fields                          ------ */
#define RCM_RPFW_RSTFLTSEL_MASK                  (0x1FU)                                             /*!< RCM_RPFW.RSTFLTSEL Mask                 */
#define RCM_RPFW_RSTFLTSEL_SHIFT                 (0U)                                                /*!< RCM_RPFW.RSTFLTSEL Position             */
#define RCM_RPFW_RSTFLTSEL(x)                    (((uint8_t)(((uint8_t)(x))<<0U))&0x1FUL)            /*!< RCM_RPFW.RSTFLTSEL Field                */
/**
 * @} */ /* End group RCM_Register_Masks_GROUP 
 */

/* RCM - Peripheral instance base addresses */
#define RCM_BasePtr                    0x4007F000UL //!< Peripheral base address
#define RCM                            ((RCM_Type *) RCM_BasePtr) //!< Freescale base pointer
#define RCM_BASE_PTR                   (RCM) //!< Freescale style base pointer
/**
 * @} */ /* End group RCM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup RFSYS_Peripheral_access_layer_GROUP RFSYS Peripheral Access Layer
* @brief C Struct for RFSYS
* @{
*/

/* ================================================================================ */
/* ================           RFSYS (file:RFSYS_0)                 ================ */
/* ================================================================================ */

/**
 * @brief System register file
 */
/**
* @addtogroup RFSYS_structs_GROUP RFSYS struct
* @brief Struct for RFSYS
* @{
*/
typedef struct RFSYS_Type {
   __IO uint32_t  REG[8];                       /**< 0000: Register file register                                       */
} RFSYS_Type;

/**
 * @} */ /* End group RFSYS_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'RFSYS' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup RFSYS_Register_Masks_GROUP RFSYS Register Masks
* @brief Register Masks for RFSYS
* @{
*/
/* ------- REG Bit Fields                           ------ */
#define RFSYS_REG_LL_MASK                        (0xFFU)                                             /*!< RFSYS_REG.LL Mask                       */
#define RFSYS_REG_LL_SHIFT                       (0U)                                                /*!< RFSYS_REG.LL Position                   */
#define RFSYS_REG_LL(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< RFSYS_REG.LL Field                      */
#define RFSYS_REG_LH_MASK                        (0xFF00U)                                           /*!< RFSYS_REG.LH Mask                       */
#define RFSYS_REG_LH_SHIFT                       (8U)                                                /*!< RFSYS_REG.LH Position                   */
#define RFSYS_REG_LH(x)                          (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< RFSYS_REG.LH Field                      */
#define RFSYS_REG_HL_MASK                        (0xFF0000U)                                         /*!< RFSYS_REG.HL Mask                       */
#define RFSYS_REG_HL_SHIFT                       (16U)                                               /*!< RFSYS_REG.HL Position                   */
#define RFSYS_REG_HL(x)                          (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< RFSYS_REG.HL Field                      */
#define RFSYS_REG_HH_MASK                        (0xFF000000U)                                       /*!< RFSYS_REG.HH Mask                       */
#define RFSYS_REG_HH_SHIFT                       (24U)                                               /*!< RFSYS_REG.HH Position                   */
#define RFSYS_REG_HH(x)                          (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< RFSYS_REG.HH Field                      */
/**
 * @} */ /* End group RFSYS_Register_Masks_GROUP 
 */

/* RFSYS - Peripheral instance base addresses */
#define RFSYS_BasePtr                  0x40041000UL //!< Peripheral base address
#define RFSYS                          ((RFSYS_Type *) RFSYS_BasePtr) //!< Freescale base pointer
#define RFSYS_BASE_PTR                 (RFSYS) //!< Freescale style base pointer
/**
 * @} */ /* End group RFSYS_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup ROM_Peripheral_access_layer_GROUP ROM Peripheral Access Layer
* @brief C Struct for ROM
* @{
*/

/* ================================================================================ */
/* ================           ROM (file:ROM_MKE15Z7)               ================ */
/* ================================================================================ */

/**
 * @brief System ROM
 */
/**
* @addtogroup ROM_structs_GROUP ROM struct
* @brief Struct for ROM
* @{
*/
typedef struct ROM_Type {
   __I  uint32_t  ENTRY[3];                     /**< 0000: Entry                                                        */
   __I  uint32_t  TABLEMARK;                    /**< 000C: End of Table Marker Register                                 */
        uint8_t   RESERVED_0[4028];             /**< 0010: 0xFBC bytes                                                  */
   __I  uint32_t  SYSACCESS;                    /**< 0FCC: System Access Register                                       */
   __I  uint32_t  PERIPHID4;                    /**< 0FD0: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID5;                    /**< 0FD4: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID6;                    /**< 0FD8: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID7;                    /**< 0FDC: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID0;                    /**< 0FE0: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID1;                    /**< 0FE4: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID2;                    /**< 0FE8: Peripheral ID Register                                       */
   __I  uint32_t  PERIPHID3;                    /**< 0FEC: Peripheral ID Register                                       */
   __I  uint32_t  COMPID[4];                    /**< 0FF0: Component ID Register                                        */
} ROM_Type;

/**
 * @} */ /* End group ROM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'ROM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup ROM_Register_Masks_GROUP ROM Register Masks
* @brief Register Masks for ROM
* @{
*/
/* ------- ENTRY Bit Fields                         ------ */
#define ROM_ENTRY_ENTRY_MASK                     (0xFFFFFFFFU)                                       /*!< ROM_ENTRY.ENTRY Mask                    */
#define ROM_ENTRY_ENTRY_SHIFT                    (0U)                                                /*!< ROM_ENTRY.ENTRY Position                */
#define ROM_ENTRY_ENTRY(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< ROM_ENTRY.ENTRY Field                   */
/* ------- TABLEMARK Bit Fields                     ------ */
#define ROM_TABLEMARK_MARK_MASK                  (0xFFFFFFFFU)                                       /*!< ROM_TABLEMARK.MARK Mask                 */
#define ROM_TABLEMARK_MARK_SHIFT                 (0U)                                                /*!< ROM_TABLEMARK.MARK Position             */
#define ROM_TABLEMARK_MARK(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< ROM_TABLEMARK.MARK Field                */
/* ------- SYSACCESS Bit Fields                     ------ */
#define ROM_SYSACCESS_SYSACCESS_MASK             (0xFFFFFFFFU)                                       /*!< ROM_SYSACCESS.SYSACCESS Mask            */
#define ROM_SYSACCESS_SYSACCESS_SHIFT            (0U)                                                /*!< ROM_SYSACCESS.SYSACCESS Position        */
#define ROM_SYSACCESS_SYSACCESS(x)               (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< ROM_SYSACCESS.SYSACCESS Field           */
/* ------- PERIPHID Bit Fields                      ------ */
#define ROM_PERIPHID_PERIPHID_MASK               (0xFFFFFFFFU)                                       /*!< ROM_PERIPHID.PERIPHID Mask              */
#define ROM_PERIPHID_PERIPHID_SHIFT              (0U)                                                /*!< ROM_PERIPHID.PERIPHID Position          */
#define ROM_PERIPHID_PERIPHID(x)                 (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< ROM_PERIPHID.PERIPHID Field             */
/* ------- COMPID Bit Fields                        ------ */
#define ROM_COMPID_COMPID_MASK                   (0xFFFFFFFFU)                                       /*!< ROM_COMPID.COMPID Mask                  */
#define ROM_COMPID_COMPID_SHIFT                  (0U)                                                /*!< ROM_COMPID.COMPID Position              */
#define ROM_COMPID_COMPID(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< ROM_COMPID.COMPID Field                 */
/**
 * @} */ /* End group ROM_Register_Masks_GROUP 
 */

/* ROM - Peripheral instance base addresses */
#define ROM_BasePtr                    0xF0002000UL //!< Peripheral base address
#define ROM                            ((ROM_Type *) ROM_BasePtr) //!< Freescale base pointer
#define ROM_BASE_PTR                   (ROM) //!< Freescale style base pointer
/**
 * @} */ /* End group ROM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup RSIM_Peripheral_access_layer_GROUP RSIM Peripheral Access Layer
* @brief C Struct for RSIM
* @{
*/

/* ================================================================================ */
/* ================           RSIM (file:RSIM_MKW41Z4)             ================ */
/* ================================================================================ */

/**
 * @brief RSIM
 */
/**
* @addtogroup RSIM_structs_GROUP RSIM struct
* @brief Struct for RSIM
* @{
*/
typedef struct RSIM_Type {
   __IO uint32_t  CONTROL;                      /**< 0000: Radio System Control                                         */
   __IO uint32_t  ACTIVE_DELAY;                 /**< 0004: Radio Active Early Warning                                   */
   __I  uint32_t  MAC_MSB;                      /**< 0008: Radio MAC Address                                            */
   __I  uint32_t  MAC_LSB;                      /**< 000C: Radio MAC Address                                            */
   __IO uint32_t  MISC;                         /**< 0010: Radio Miscellaneous                                          */
        uint8_t   RESERVED_0[236];              /**< 0014: 0xEC bytes                                                   */
   __I  uint32_t  DSM_TIMER;                    /**< 0100: Deep Sleep Timer                                             */
   __IO uint32_t  DSM_CONTROL;                  /**< 0104: Deep Sleep Timer Control                                     */
   __IO uint32_t  DSM_OSC_OFFSET;               /**< 0108: Deep Sleep Wakeup Time Offset                                */
   __IO uint32_t  ANT_SLEEP;                    /**< 010C: ANT Link Layer Sleep Time                                    */
   __IO uint32_t  ANT_WAKE;                     /**< 0110: ANT Link Layer Wake Time                                     */
   __IO uint32_t  ZIG_SLEEP;                    /**< 0114: 802.15.4 Link Layer Sleep Time                               */
   __IO uint32_t  ZIG_WAKE;                     /**< 0118: 802.15.4 Link Layer Wake Time                                */
   __IO uint32_t  GEN_SLEEP;                    /**< 011C: Generic FSK Link Layer Sleep Time                            */
   __IO uint32_t  GEN_WAKE;                     /**< 0120: Generic FSK Link Layer Wake Time                             */
   __IO uint32_t  RF_OSC_CTRL;                  /**< 0124: Radio Oscillator Control                                     */
   __IO uint32_t  ANA_TEST;                     /**< 0128: Radio Analog Test                                            */
   __IO uint32_t  ANA_TRIM;                     /**< 012C: Radio Analog Trim                                            */
} RSIM_Type;

/**
 * @} */ /* End group RSIM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'RSIM' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup RSIM_Register_Masks_GROUP RSIM Register Masks
* @brief Register Masks for RSIM
* @{
*/
/* ------- CONTROL Bit Fields                       ------ */
#define RSIM_CONTROL_BLE_RF_OSC_REQ_EN_MASK      (0x1U)                                              /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_EN Mask     */
#define RSIM_CONTROL_BLE_RF_OSC_REQ_EN_SHIFT     (0U)                                                /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_EN Position */
#define RSIM_CONTROL_BLE_RF_OSC_REQ_EN(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_EN Field    */
#define RSIM_CONTROL_BLE_RF_OSC_REQ_STAT_MASK    (0x2U)                                              /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_STAT Mask   */
#define RSIM_CONTROL_BLE_RF_OSC_REQ_STAT_SHIFT   (1U)                                                /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_STAT Position*/
#define RSIM_CONTROL_BLE_RF_OSC_REQ_STAT(x)      (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_STAT Field  */
#define RSIM_CONTROL_BLE_RF_OSC_REQ_INT_EN_MASK  (0x10U)                                             /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_INT_EN Mask */
#define RSIM_CONTROL_BLE_RF_OSC_REQ_INT_EN_SHIFT (4U)                                                /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_INT_EN Position*/
#define RSIM_CONTROL_BLE_RF_OSC_REQ_INT_EN(x)    (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_INT_EN Field*/
#define RSIM_CONTROL_BLE_RF_OSC_REQ_INT_MASK     (0x20U)                                             /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_INT Mask    */
#define RSIM_CONTROL_BLE_RF_OSC_REQ_INT_SHIFT    (5U)                                                /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_INT Position*/
#define RSIM_CONTROL_BLE_RF_OSC_REQ_INT(x)       (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< RSIM_CONTROL.BLE_RF_OSC_REQ_INT Field   */
#define RSIM_CONTROL_RF_OSC_EN_MASK              (0xF00U)                                            /*!< RSIM_CONTROL.RF_OSC_EN Mask             */
#define RSIM_CONTROL_RF_OSC_EN_SHIFT             (8U)                                                /*!< RSIM_CONTROL.RF_OSC_EN Position         */
#define RSIM_CONTROL_RF_OSC_EN(x)                (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< RSIM_CONTROL.RF_OSC_EN Field            */
#define RSIM_CONTROL_RADIO_GASKET_BYPASS_OVRD_EN_MASK (0x1000U)                                      /*!< RSIM_CONTROL.RADIO_GASKET_BYPASS_OVRD_EN Mask*/
#define RSIM_CONTROL_RADIO_GASKET_BYPASS_OVRD_EN_SHIFT (12U)                                         /*!< RSIM_CONTROL.RADIO_GASKET_BYPASS_OVRD_EN Position*/
#define RSIM_CONTROL_RADIO_GASKET_BYPASS_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)    /*!< RSIM_CONTROL.RADIO_GASKET_BYPASS_OVRD_EN Field*/
#define RSIM_CONTROL_RADIO_GASKET_BYPASS_OVRD_MASK (0x2000U)                                         /*!< RSIM_CONTROL.RADIO_GASKET_BYPASS_OVRD Mask*/
#define RSIM_CONTROL_RADIO_GASKET_BYPASS_OVRD_SHIFT (13U)                                            /*!< RSIM_CONTROL.RADIO_GASKET_BYPASS_OVRD Position*/
#define RSIM_CONTROL_RADIO_GASKET_BYPASS_OVRD(x) (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< RSIM_CONTROL.RADIO_GASKET_BYPASS_OVRD Field*/
#define RSIM_CONTROL_IPP_OBE_3V_BLE_ACTIVE_1_MASK (0x10000U)                                         /*!< RSIM_CONTROL.IPP_OBE_3V_BLE_ACTIVE_1 Mask*/
#define RSIM_CONTROL_IPP_OBE_3V_BLE_ACTIVE_1_SHIFT (16U)                                             /*!< RSIM_CONTROL.IPP_OBE_3V_BLE_ACTIVE_1 Position*/
#define RSIM_CONTROL_IPP_OBE_3V_BLE_ACTIVE_1(x)  (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< RSIM_CONTROL.IPP_OBE_3V_BLE_ACTIVE_1 Field*/
#define RSIM_CONTROL_IPP_OBE_3V_BLE_ACTIVE_2_MASK (0x20000U)                                         /*!< RSIM_CONTROL.IPP_OBE_3V_BLE_ACTIVE_2 Mask*/
#define RSIM_CONTROL_IPP_OBE_3V_BLE_ACTIVE_2_SHIFT (17U)                                             /*!< RSIM_CONTROL.IPP_OBE_3V_BLE_ACTIVE_2 Position*/
#define RSIM_CONTROL_IPP_OBE_3V_BLE_ACTIVE_2(x)  (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< RSIM_CONTROL.IPP_OBE_3V_BLE_ACTIVE_2 Field*/
#define RSIM_CONTROL_RADIO_RAM_ACCESS_OVRD_EN_MASK (0x40000U)                                        /*!< RSIM_CONTROL.RADIO_RAM_ACCESS_OVRD_EN Mask*/
#define RSIM_CONTROL_RADIO_RAM_ACCESS_OVRD_EN_SHIFT (18U)                                            /*!< RSIM_CONTROL.RADIO_RAM_ACCESS_OVRD_EN Position*/
#define RSIM_CONTROL_RADIO_RAM_ACCESS_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< RSIM_CONTROL.RADIO_RAM_ACCESS_OVRD_EN Field*/
#define RSIM_CONTROL_RADIO_RAM_ACCESS_OVRD_MASK  (0x80000U)                                          /*!< RSIM_CONTROL.RADIO_RAM_ACCESS_OVRD Mask */
#define RSIM_CONTROL_RADIO_RAM_ACCESS_OVRD_SHIFT (19U)                                               /*!< RSIM_CONTROL.RADIO_RAM_ACCESS_OVRD Position*/
#define RSIM_CONTROL_RADIO_RAM_ACCESS_OVRD(x)    (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< RSIM_CONTROL.RADIO_RAM_ACCESS_OVRD Field*/
#define RSIM_CONTROL_RSIM_DSM_EXIT_MASK          (0x100000U)                                         /*!< RSIM_CONTROL.RSIM_DSM_EXIT Mask         */
#define RSIM_CONTROL_RSIM_DSM_EXIT_SHIFT         (20U)                                               /*!< RSIM_CONTROL.RSIM_DSM_EXIT Position     */
#define RSIM_CONTROL_RSIM_DSM_EXIT(x)            (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< RSIM_CONTROL.RSIM_DSM_EXIT Field        */
#define RSIM_CONTROL_RSIM_STOP_ACK_OVRD_EN_MASK  (0x400000U)                                         /*!< RSIM_CONTROL.RSIM_STOP_ACK_OVRD_EN Mask */
#define RSIM_CONTROL_RSIM_STOP_ACK_OVRD_EN_SHIFT (22U)                                               /*!< RSIM_CONTROL.RSIM_STOP_ACK_OVRD_EN Position*/
#define RSIM_CONTROL_RSIM_STOP_ACK_OVRD_EN(x)    (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< RSIM_CONTROL.RSIM_STOP_ACK_OVRD_EN Field*/
#define RSIM_CONTROL_RSIM_STOP_ACK_OVRD_MASK     (0x800000U)                                         /*!< RSIM_CONTROL.RSIM_STOP_ACK_OVRD Mask    */
#define RSIM_CONTROL_RSIM_STOP_ACK_OVRD_SHIFT    (23U)                                               /*!< RSIM_CONTROL.RSIM_STOP_ACK_OVRD Position*/
#define RSIM_CONTROL_RSIM_STOP_ACK_OVRD(x)       (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< RSIM_CONTROL.RSIM_STOP_ACK_OVRD Field   */
#define RSIM_CONTROL_RF_OSC_READY_MASK           (0x1000000U)                                        /*!< RSIM_CONTROL.RF_OSC_READY Mask          */
#define RSIM_CONTROL_RF_OSC_READY_SHIFT          (24U)                                               /*!< RSIM_CONTROL.RF_OSC_READY Position      */
#define RSIM_CONTROL_RF_OSC_READY(x)             (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< RSIM_CONTROL.RF_OSC_READY Field         */
#define RSIM_CONTROL_RF_OSC_READY_OVRD_EN_MASK   (0x2000000U)                                        /*!< RSIM_CONTROL.RF_OSC_READY_OVRD_EN Mask  */
#define RSIM_CONTROL_RF_OSC_READY_OVRD_EN_SHIFT  (25U)                                               /*!< RSIM_CONTROL.RF_OSC_READY_OVRD_EN Position*/
#define RSIM_CONTROL_RF_OSC_READY_OVRD_EN(x)     (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< RSIM_CONTROL.RF_OSC_READY_OVRD_EN Field */
#define RSIM_CONTROL_RF_OSC_READY_OVRD_MASK      (0x4000000U)                                        /*!< RSIM_CONTROL.RF_OSC_READY_OVRD Mask     */
#define RSIM_CONTROL_RF_OSC_READY_OVRD_SHIFT     (26U)                                               /*!< RSIM_CONTROL.RF_OSC_READY_OVRD Position */
#define RSIM_CONTROL_RF_OSC_READY_OVRD(x)        (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< RSIM_CONTROL.RF_OSC_READY_OVRD Field    */
#define RSIM_CONTROL_BLOCK_SOC_RESETS_MASK       (0x10000000U)                                       /*!< RSIM_CONTROL.BLOCK_SOC_RESETS Mask      */
#define RSIM_CONTROL_BLOCK_SOC_RESETS_SHIFT      (28U)                                               /*!< RSIM_CONTROL.BLOCK_SOC_RESETS Position  */
#define RSIM_CONTROL_BLOCK_SOC_RESETS(x)         (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< RSIM_CONTROL.BLOCK_SOC_RESETS Field     */
#define RSIM_CONTROL_BLOCK_RADIO_OUTPUTS_MASK    (0x20000000U)                                       /*!< RSIM_CONTROL.BLOCK_RADIO_OUTPUTS Mask   */
#define RSIM_CONTROL_BLOCK_RADIO_OUTPUTS_SHIFT   (29U)                                               /*!< RSIM_CONTROL.BLOCK_RADIO_OUTPUTS Position*/
#define RSIM_CONTROL_BLOCK_RADIO_OUTPUTS(x)      (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< RSIM_CONTROL.BLOCK_RADIO_OUTPUTS Field  */
#define RSIM_CONTROL_ALLOW_DFT_RESETS_MASK       (0x40000000U)                                       /*!< RSIM_CONTROL.ALLOW_DFT_RESETS Mask      */
#define RSIM_CONTROL_ALLOW_DFT_RESETS_SHIFT      (30U)                                               /*!< RSIM_CONTROL.ALLOW_DFT_RESETS Position  */
#define RSIM_CONTROL_ALLOW_DFT_RESETS(x)         (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< RSIM_CONTROL.ALLOW_DFT_RESETS Field     */
#define RSIM_CONTROL_RADIO_RESET_BIT_MASK        (0x80000000U)                                       /*!< RSIM_CONTROL.RADIO_RESET_BIT Mask       */
#define RSIM_CONTROL_RADIO_RESET_BIT_SHIFT       (31U)                                               /*!< RSIM_CONTROL.RADIO_RESET_BIT Position   */
#define RSIM_CONTROL_RADIO_RESET_BIT(x)          (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< RSIM_CONTROL.RADIO_RESET_BIT Field      */
/* ------- ACTIVE_DELAY Bit Fields                  ------ */
#define RSIM_ACTIVE_DELAY_BLE_FINE_DELAY_MASK    (0x3FU)                                             /*!< RSIM_ACTIVE_DELAY.BLE_FINE_DELAY Mask   */
#define RSIM_ACTIVE_DELAY_BLE_FINE_DELAY_SHIFT   (0U)                                                /*!< RSIM_ACTIVE_DELAY.BLE_FINE_DELAY Position*/
#define RSIM_ACTIVE_DELAY_BLE_FINE_DELAY(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< RSIM_ACTIVE_DELAY.BLE_FINE_DELAY Field  */
#define RSIM_ACTIVE_DELAY_BLE_COARSE_DELAY_MASK  (0xF0000U)                                          /*!< RSIM_ACTIVE_DELAY.BLE_COARSE_DELAY Mask */
#define RSIM_ACTIVE_DELAY_BLE_COARSE_DELAY_SHIFT (16U)                                               /*!< RSIM_ACTIVE_DELAY.BLE_COARSE_DELAY Position*/
#define RSIM_ACTIVE_DELAY_BLE_COARSE_DELAY(x)    (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< RSIM_ACTIVE_DELAY.BLE_COARSE_DELAY Field*/
/* ------- MAC_MSB Bit Fields                       ------ */
#define RSIM_MAC_MSB_MAC_ADDR_MSB_MASK           (0xFFU)                                             /*!< RSIM_MAC_MSB.MAC_ADDR_MSB Mask          */
#define RSIM_MAC_MSB_MAC_ADDR_MSB_SHIFT          (0U)                                                /*!< RSIM_MAC_MSB.MAC_ADDR_MSB Position      */
#define RSIM_MAC_MSB_MAC_ADDR_MSB(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< RSIM_MAC_MSB.MAC_ADDR_MSB Field         */
/* ------- MAC_LSB Bit Fields                       ------ */
#define RSIM_MAC_LSB_MAC_ADDR_LSB_MASK           (0xFFFFFFFFU)                                       /*!< RSIM_MAC_LSB.MAC_ADDR_LSB Mask          */
#define RSIM_MAC_LSB_MAC_ADDR_LSB_SHIFT          (0U)                                                /*!< RSIM_MAC_LSB.MAC_ADDR_LSB Position      */
#define RSIM_MAC_LSB_MAC_ADDR_LSB(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< RSIM_MAC_LSB.MAC_ADDR_LSB Field         */
/* ------- MISC Bit Fields                          ------ */
#define RSIM_MISC_ANALOG_TEST_EN_MASK            (0x1FU)                                             /*!< RSIM_MISC.ANALOG_TEST_EN Mask           */
#define RSIM_MISC_ANALOG_TEST_EN_SHIFT           (0U)                                                /*!< RSIM_MISC.ANALOG_TEST_EN Position       */
#define RSIM_MISC_ANALOG_TEST_EN(x)              (((uint32_t)(((uint32_t)(x))<<0U))&0x1FUL)          /*!< RSIM_MISC.ANALOG_TEST_EN Field          */
#define RSIM_MISC_RADIO_VERSION_MASK             (0xFF000000U)                                       /*!< RSIM_MISC.RADIO_VERSION Mask            */
#define RSIM_MISC_RADIO_VERSION_SHIFT            (24U)                                               /*!< RSIM_MISC.RADIO_VERSION Position        */
#define RSIM_MISC_RADIO_VERSION(x)               (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< RSIM_MISC.RADIO_VERSION Field           */
/* ------- DSM_TIMER Bit Fields                     ------ */
#define RSIM_DSM_TIMER_DSM_TIMER_MASK            (0xFFFFFFU)                                         /*!< RSIM_DSM_TIMER.DSM_TIMER Mask           */
#define RSIM_DSM_TIMER_DSM_TIMER_SHIFT           (0U)                                                /*!< RSIM_DSM_TIMER.DSM_TIMER Position       */
#define RSIM_DSM_TIMER_DSM_TIMER(x)              (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< RSIM_DSM_TIMER.DSM_TIMER Field          */
/* ------- DSM_CONTROL Bit Fields                   ------ */
#define RSIM_DSM_CONTROL_DSM_ANT_READY_MASK      (0x1U)                                              /*!< RSIM_DSM_CONTROL.DSM_ANT_READY Mask     */
#define RSIM_DSM_CONTROL_DSM_ANT_READY_SHIFT     (0U)                                                /*!< RSIM_DSM_CONTROL.DSM_ANT_READY Position */
#define RSIM_DSM_CONTROL_DSM_ANT_READY(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< RSIM_DSM_CONTROL.DSM_ANT_READY Field    */
#define RSIM_DSM_CONTROL_ANT_DEEP_SLEEP_STATUS_MASK (0x2U)                                           /*!< RSIM_DSM_CONTROL.ANT_DEEP_SLEEP_STATUS Mask*/
#define RSIM_DSM_CONTROL_ANT_DEEP_SLEEP_STATUS_SHIFT (1U)                                            /*!< RSIM_DSM_CONTROL.ANT_DEEP_SLEEP_STATUS Position*/
#define RSIM_DSM_CONTROL_ANT_DEEP_SLEEP_STATUS(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)          /*!< RSIM_DSM_CONTROL.ANT_DEEP_SLEEP_STATUS Field*/
#define RSIM_DSM_CONTROL_DSM_ANT_FINISHED_MASK   (0x4U)                                              /*!< RSIM_DSM_CONTROL.DSM_ANT_FINISHED Mask  */
#define RSIM_DSM_CONTROL_DSM_ANT_FINISHED_SHIFT  (2U)                                                /*!< RSIM_DSM_CONTROL.DSM_ANT_FINISHED Position*/
#define RSIM_DSM_CONTROL_DSM_ANT_FINISHED(x)     (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< RSIM_DSM_CONTROL.DSM_ANT_FINISHED Field */
#define RSIM_DSM_CONTROL_ANT_SYSCLK_REQUEST_EN_MASK (0x8U)                                           /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_REQUEST_EN Mask*/
#define RSIM_DSM_CONTROL_ANT_SYSCLK_REQUEST_EN_SHIFT (3U)                                            /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_REQUEST_EN Position*/
#define RSIM_DSM_CONTROL_ANT_SYSCLK_REQUEST_EN(x) (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)          /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_REQUEST_EN Field*/
#define RSIM_DSM_CONTROL_ANT_SLEEP_REQUEST_MASK  (0x10U)                                             /*!< RSIM_DSM_CONTROL.ANT_SLEEP_REQUEST Mask */
#define RSIM_DSM_CONTROL_ANT_SLEEP_REQUEST_SHIFT (4U)                                                /*!< RSIM_DSM_CONTROL.ANT_SLEEP_REQUEST Position*/
#define RSIM_DSM_CONTROL_ANT_SLEEP_REQUEST(x)    (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< RSIM_DSM_CONTROL.ANT_SLEEP_REQUEST Field*/
#define RSIM_DSM_CONTROL_ANT_SYSCLK_REQ_MASK     (0x20U)                                             /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_REQ Mask    */
#define RSIM_DSM_CONTROL_ANT_SYSCLK_REQ_SHIFT    (5U)                                                /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_REQ Position*/
#define RSIM_DSM_CONTROL_ANT_SYSCLK_REQ(x)       (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_REQ Field   */
#define RSIM_DSM_CONTROL_ANT_SYSCLK_INTERRUPT_EN_MASK (0x40U)                                        /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_INTERRUPT_EN Mask*/
#define RSIM_DSM_CONTROL_ANT_SYSCLK_INTERRUPT_EN_SHIFT (6U)                                          /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_INTERRUPT_EN Position*/
#define RSIM_DSM_CONTROL_ANT_SYSCLK_INTERRUPT_EN(x) (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)       /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_INTERRUPT_EN Field*/
#define RSIM_DSM_CONTROL_ANT_SYSCLK_REQ_INT_MASK (0x80U)                                             /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_REQ_INT Mask*/
#define RSIM_DSM_CONTROL_ANT_SYSCLK_REQ_INT_SHIFT (7U)                                               /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_REQ_INT Position*/
#define RSIM_DSM_CONTROL_ANT_SYSCLK_REQ_INT(x)   (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< RSIM_DSM_CONTROL.ANT_SYSCLK_REQ_INT Field*/
#define RSIM_DSM_CONTROL_DSM_GEN_READY_MASK      (0x100U)                                            /*!< RSIM_DSM_CONTROL.DSM_GEN_READY Mask     */
#define RSIM_DSM_CONTROL_DSM_GEN_READY_SHIFT     (8U)                                                /*!< RSIM_DSM_CONTROL.DSM_GEN_READY Position */
#define RSIM_DSM_CONTROL_DSM_GEN_READY(x)        (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< RSIM_DSM_CONTROL.DSM_GEN_READY Field    */
#define RSIM_DSM_CONTROL_GEN_DEEP_SLEEP_STATUS_MASK (0x200U)                                         /*!< RSIM_DSM_CONTROL.GEN_DEEP_SLEEP_STATUS Mask*/
#define RSIM_DSM_CONTROL_GEN_DEEP_SLEEP_STATUS_SHIFT (9U)                                            /*!< RSIM_DSM_CONTROL.GEN_DEEP_SLEEP_STATUS Position*/
#define RSIM_DSM_CONTROL_GEN_DEEP_SLEEP_STATUS(x) (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)        /*!< RSIM_DSM_CONTROL.GEN_DEEP_SLEEP_STATUS Field*/
#define RSIM_DSM_CONTROL_DSM_GEN_FINISHED_MASK   (0x400U)                                            /*!< RSIM_DSM_CONTROL.DSM_GEN_FINISHED Mask  */
#define RSIM_DSM_CONTROL_DSM_GEN_FINISHED_SHIFT  (10U)                                               /*!< RSIM_DSM_CONTROL.DSM_GEN_FINISHED Position*/
#define RSIM_DSM_CONTROL_DSM_GEN_FINISHED(x)     (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< RSIM_DSM_CONTROL.DSM_GEN_FINISHED Field */
#define RSIM_DSM_CONTROL_GEN_SYSCLK_REQUEST_EN_MASK (0x800U)                                         /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_REQUEST_EN Mask*/
#define RSIM_DSM_CONTROL_GEN_SYSCLK_REQUEST_EN_SHIFT (11U)                                           /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_REQUEST_EN Position*/
#define RSIM_DSM_CONTROL_GEN_SYSCLK_REQUEST_EN(x) (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)       /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_REQUEST_EN Field*/
#define RSIM_DSM_CONTROL_GEN_SLEEP_REQUEST_MASK  (0x1000U)                                           /*!< RSIM_DSM_CONTROL.GEN_SLEEP_REQUEST Mask */
#define RSIM_DSM_CONTROL_GEN_SLEEP_REQUEST_SHIFT (12U)                                               /*!< RSIM_DSM_CONTROL.GEN_SLEEP_REQUEST Position*/
#define RSIM_DSM_CONTROL_GEN_SLEEP_REQUEST(x)    (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< RSIM_DSM_CONTROL.GEN_SLEEP_REQUEST Field*/
#define RSIM_DSM_CONTROL_GEN_SYSCLK_REQ_MASK     (0x2000U)                                           /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_REQ Mask    */
#define RSIM_DSM_CONTROL_GEN_SYSCLK_REQ_SHIFT    (13U)                                               /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_REQ Position*/
#define RSIM_DSM_CONTROL_GEN_SYSCLK_REQ(x)       (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_REQ Field   */
#define RSIM_DSM_CONTROL_GEN_SYSCLK_INTERRUPT_EN_MASK (0x4000U)                                      /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_INTERRUPT_EN Mask*/
#define RSIM_DSM_CONTROL_GEN_SYSCLK_INTERRUPT_EN_SHIFT (14U)                                         /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_INTERRUPT_EN Position*/
#define RSIM_DSM_CONTROL_GEN_SYSCLK_INTERRUPT_EN(x) (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)    /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_INTERRUPT_EN Field*/
#define RSIM_DSM_CONTROL_GEN_SYSCLK_REQ_INT_MASK (0x8000U)                                           /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_REQ_INT Mask*/
#define RSIM_DSM_CONTROL_GEN_SYSCLK_REQ_INT_SHIFT (15U)                                              /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_REQ_INT Position*/
#define RSIM_DSM_CONTROL_GEN_SYSCLK_REQ_INT(x)   (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< RSIM_DSM_CONTROL.GEN_SYSCLK_REQ_INT Field*/
#define RSIM_DSM_CONTROL_DSM_ZIG_READY_MASK      (0x10000U)                                          /*!< RSIM_DSM_CONTROL.DSM_ZIG_READY Mask     */
#define RSIM_DSM_CONTROL_DSM_ZIG_READY_SHIFT     (16U)                                               /*!< RSIM_DSM_CONTROL.DSM_ZIG_READY Position */
#define RSIM_DSM_CONTROL_DSM_ZIG_READY(x)        (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< RSIM_DSM_CONTROL.DSM_ZIG_READY Field    */
#define RSIM_DSM_CONTROL_ZIG_DEEP_SLEEP_STATUS_MASK (0x20000U)                                       /*!< RSIM_DSM_CONTROL.ZIG_DEEP_SLEEP_STATUS Mask*/
#define RSIM_DSM_CONTROL_ZIG_DEEP_SLEEP_STATUS_SHIFT (17U)                                           /*!< RSIM_DSM_CONTROL.ZIG_DEEP_SLEEP_STATUS Position*/
#define RSIM_DSM_CONTROL_ZIG_DEEP_SLEEP_STATUS(x) (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)     /*!< RSIM_DSM_CONTROL.ZIG_DEEP_SLEEP_STATUS Field*/
#define RSIM_DSM_CONTROL_DSM_ZIG_FINISHED_MASK   (0x40000U)                                          /*!< RSIM_DSM_CONTROL.DSM_ZIG_FINISHED Mask  */
#define RSIM_DSM_CONTROL_DSM_ZIG_FINISHED_SHIFT  (18U)                                               /*!< RSIM_DSM_CONTROL.DSM_ZIG_FINISHED Position*/
#define RSIM_DSM_CONTROL_DSM_ZIG_FINISHED(x)     (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< RSIM_DSM_CONTROL.DSM_ZIG_FINISHED Field */
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_REQUEST_EN_MASK (0x80000U)                                       /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_REQUEST_EN Mask*/
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_REQUEST_EN_SHIFT (19U)                                           /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_REQUEST_EN Position*/
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_REQUEST_EN(x) (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)     /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_REQUEST_EN Field*/
#define RSIM_DSM_CONTROL_ZIG_SLEEP_REQUEST_MASK  (0x100000U)                                         /*!< RSIM_DSM_CONTROL.ZIG_SLEEP_REQUEST Mask */
#define RSIM_DSM_CONTROL_ZIG_SLEEP_REQUEST_SHIFT (20U)                                               /*!< RSIM_DSM_CONTROL.ZIG_SLEEP_REQUEST Position*/
#define RSIM_DSM_CONTROL_ZIG_SLEEP_REQUEST(x)    (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< RSIM_DSM_CONTROL.ZIG_SLEEP_REQUEST Field*/
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_REQ_MASK     (0x200000U)                                         /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_REQ Mask    */
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_REQ_SHIFT    (21U)                                               /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_REQ Position*/
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_REQ(x)       (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_REQ Field   */
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_INTERRUPT_EN_MASK (0x400000U)                                    /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_INTERRUPT_EN Mask*/
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_INTERRUPT_EN_SHIFT (22U)                                         /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_INTERRUPT_EN Position*/
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_INTERRUPT_EN(x) (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)  /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_INTERRUPT_EN Field*/
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_REQ_INT_MASK (0x800000U)                                         /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_REQ_INT Mask*/
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_REQ_INT_SHIFT (23U)                                              /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_REQ_INT Position*/
#define RSIM_DSM_CONTROL_ZIG_SYSCLK_REQ_INT(x)   (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< RSIM_DSM_CONTROL.ZIG_SYSCLK_REQ_INT Field*/
#define RSIM_DSM_CONTROL_DSM_TIMER_CLR_MASK      (0x8000000U)                                        /*!< RSIM_DSM_CONTROL.DSM_TIMER_CLR Mask     */
#define RSIM_DSM_CONTROL_DSM_TIMER_CLR_SHIFT     (27U)                                               /*!< RSIM_DSM_CONTROL.DSM_TIMER_CLR Position */
#define RSIM_DSM_CONTROL_DSM_TIMER_CLR(x)        (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< RSIM_DSM_CONTROL.DSM_TIMER_CLR Field    */
#define RSIM_DSM_CONTROL_DSM_TIMER_EN_MASK       (0x80000000U)                                       /*!< RSIM_DSM_CONTROL.DSM_TIMER_EN Mask      */
#define RSIM_DSM_CONTROL_DSM_TIMER_EN_SHIFT      (31U)                                               /*!< RSIM_DSM_CONTROL.DSM_TIMER_EN Position  */
#define RSIM_DSM_CONTROL_DSM_TIMER_EN(x)         (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< RSIM_DSM_CONTROL.DSM_TIMER_EN Field     */
/* ------- DSM_OSC_OFFSET Bit Fields                ------ */
#define RSIM_DSM_OSC_OFFSET_DSM_OSC_STABILIZE_TIME_MASK (0x3FFU)                                     /*!< RSIM_DSM_OSC_OFFSET.DSM_OSC_STABILIZE_TIME Mask*/
#define RSIM_DSM_OSC_OFFSET_DSM_OSC_STABILIZE_TIME_SHIFT (0U)                                        /*!< RSIM_DSM_OSC_OFFSET.DSM_OSC_STABILIZE_TIME Position*/
#define RSIM_DSM_OSC_OFFSET_DSM_OSC_STABILIZE_TIME(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)    /*!< RSIM_DSM_OSC_OFFSET.DSM_OSC_STABILIZE_TIME Field*/
/* ------- ANT_SLEEP Bit Fields                     ------ */
#define RSIM_ANT_SLEEP_ANT_SLEEP_TIME_MASK       (0xFFFFFFU)                                         /*!< RSIM_ANT_SLEEP.ANT_SLEEP_TIME Mask      */
#define RSIM_ANT_SLEEP_ANT_SLEEP_TIME_SHIFT      (0U)                                                /*!< RSIM_ANT_SLEEP.ANT_SLEEP_TIME Position  */
#define RSIM_ANT_SLEEP_ANT_SLEEP_TIME(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< RSIM_ANT_SLEEP.ANT_SLEEP_TIME Field     */
/* ------- ANT_WAKE Bit Fields                      ------ */
#define RSIM_ANT_WAKE_ANT_WAKE_TIME_MASK         (0xFFFFFFU)                                         /*!< RSIM_ANT_WAKE.ANT_WAKE_TIME Mask        */
#define RSIM_ANT_WAKE_ANT_WAKE_TIME_SHIFT        (0U)                                                /*!< RSIM_ANT_WAKE.ANT_WAKE_TIME Position    */
#define RSIM_ANT_WAKE_ANT_WAKE_TIME(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< RSIM_ANT_WAKE.ANT_WAKE_TIME Field       */
/* ------- ZIG_SLEEP Bit Fields                     ------ */
#define RSIM_ZIG_SLEEP_ZIG_SLEEP_TIME_MASK       (0xFFFFFFU)                                         /*!< RSIM_ZIG_SLEEP.ZIG_SLEEP_TIME Mask      */
#define RSIM_ZIG_SLEEP_ZIG_SLEEP_TIME_SHIFT      (0U)                                                /*!< RSIM_ZIG_SLEEP.ZIG_SLEEP_TIME Position  */
#define RSIM_ZIG_SLEEP_ZIG_SLEEP_TIME(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< RSIM_ZIG_SLEEP.ZIG_SLEEP_TIME Field     */
/* ------- ZIG_WAKE Bit Fields                      ------ */
#define RSIM_ZIG_WAKE_ZIG_WAKE_TIME_MASK         (0xFFFFFFU)                                         /*!< RSIM_ZIG_WAKE.ZIG_WAKE_TIME Mask        */
#define RSIM_ZIG_WAKE_ZIG_WAKE_TIME_SHIFT        (0U)                                                /*!< RSIM_ZIG_WAKE.ZIG_WAKE_TIME Position    */
#define RSIM_ZIG_WAKE_ZIG_WAKE_TIME(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< RSIM_ZIG_WAKE.ZIG_WAKE_TIME Field       */
/* ------- GEN_SLEEP Bit Fields                     ------ */
#define RSIM_GEN_SLEEP_GEN_SLEEP_TIME_MASK       (0xFFFFFFU)                                         /*!< RSIM_GEN_SLEEP.GEN_SLEEP_TIME Mask      */
#define RSIM_GEN_SLEEP_GEN_SLEEP_TIME_SHIFT      (0U)                                                /*!< RSIM_GEN_SLEEP.GEN_SLEEP_TIME Position  */
#define RSIM_GEN_SLEEP_GEN_SLEEP_TIME(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< RSIM_GEN_SLEEP.GEN_SLEEP_TIME Field     */
/* ------- GEN_WAKE Bit Fields                      ------ */
#define RSIM_GEN_WAKE_GEN_WAKE_TIME_MASK         (0xFFFFFFU)                                         /*!< RSIM_GEN_WAKE.GEN_WAKE_TIME Mask        */
#define RSIM_GEN_WAKE_GEN_WAKE_TIME_SHIFT        (0U)                                                /*!< RSIM_GEN_WAKE.GEN_WAKE_TIME Position    */
#define RSIM_GEN_WAKE_GEN_WAKE_TIME(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< RSIM_GEN_WAKE.GEN_WAKE_TIME Field       */
/* ------- RF_OSC_CTRL Bit Fields                   ------ */
#define RSIM_RF_OSC_CTRL_BB_XTAL_ALC_COUNT_SEL_MASK (0x3U)                                           /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ALC_COUNT_SEL Mask*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_ALC_COUNT_SEL_SHIFT (0U)                                            /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ALC_COUNT_SEL Position*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_ALC_COUNT_SEL(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)          /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ALC_COUNT_SEL Field*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_ALC_ON_MASK     (0x4U)                                              /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ALC_ON Mask    */
#define RSIM_RF_OSC_CTRL_BB_XTAL_ALC_ON_SHIFT    (2U)                                                /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ALC_ON Position*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_ALC_ON(x)       (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ALC_ON Field   */
#define RSIM_RF_OSC_CTRL_RF_OSC_BYPASS_EN_MASK   (0x8U)                                              /*!< RSIM_RF_OSC_CTRL.RF_OSC_BYPASS_EN Mask  */
#define RSIM_RF_OSC_CTRL_RF_OSC_BYPASS_EN_SHIFT  (3U)                                                /*!< RSIM_RF_OSC_CTRL.RF_OSC_BYPASS_EN Position*/
#define RSIM_RF_OSC_CTRL_RF_OSC_BYPASS_EN(x)     (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< RSIM_RF_OSC_CTRL.RF_OSC_BYPASS_EN Field */
#define RSIM_RF_OSC_CTRL_BB_XTAL_COMP_BIAS_MASK  (0x1F0U)                                            /*!< RSIM_RF_OSC_CTRL.BB_XTAL_COMP_BIAS Mask */
#define RSIM_RF_OSC_CTRL_BB_XTAL_COMP_BIAS_SHIFT (4U)                                                /*!< RSIM_RF_OSC_CTRL.BB_XTAL_COMP_BIAS Position*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_COMP_BIAS(x)    (((uint32_t)(((uint32_t)(x))<<4U))&0x1F0UL)         /*!< RSIM_RF_OSC_CTRL.BB_XTAL_COMP_BIAS Field*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_DC_COUP_MODE_EN_MASK (0x200U)                                       /*!< RSIM_RF_OSC_CTRL.BB_XTAL_DC_COUP_MODE_EN Mask*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_DC_COUP_MODE_EN_SHIFT (9U)                                          /*!< RSIM_RF_OSC_CTRL.BB_XTAL_DC_COUP_MODE_EN Position*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_DC_COUP_MODE_EN(x) (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)      /*!< RSIM_RF_OSC_CTRL.BB_XTAL_DC_COUP_MODE_EN Field*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_DIAGSEL_MASK    (0x400U)                                            /*!< RSIM_RF_OSC_CTRL.BB_XTAL_DIAGSEL Mask   */
#define RSIM_RF_OSC_CTRL_BB_XTAL_DIAGSEL_SHIFT   (10U)                                               /*!< RSIM_RF_OSC_CTRL.BB_XTAL_DIAGSEL Position*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_DIAGSEL(x)      (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< RSIM_RF_OSC_CTRL.BB_XTAL_DIAGSEL Field  */
#define RSIM_RF_OSC_CTRL_BB_XTAL_DIG_CLK_ON_MASK (0x800U)                                            /*!< RSIM_RF_OSC_CTRL.BB_XTAL_DIG_CLK_ON Mask*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_DIG_CLK_ON_SHIFT (11U)                                              /*!< RSIM_RF_OSC_CTRL.BB_XTAL_DIG_CLK_ON Position*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_DIG_CLK_ON(x)   (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< RSIM_RF_OSC_CTRL.BB_XTAL_DIG_CLK_ON Field*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_GM_MASK         (0x1F000U)                                          /*!< RSIM_RF_OSC_CTRL.BB_XTAL_GM Mask        */
#define RSIM_RF_OSC_CTRL_BB_XTAL_GM_SHIFT        (12U)                                               /*!< RSIM_RF_OSC_CTRL.BB_XTAL_GM Position    */
#define RSIM_RF_OSC_CTRL_BB_XTAL_GM(x)           (((uint32_t)(((uint32_t)(x))<<12U))&0x1F000UL)      /*!< RSIM_RF_OSC_CTRL.BB_XTAL_GM Field       */
#define RSIM_RF_OSC_CTRL_BB_XTAL_ON_OVRD_MASK    (0x20000U)                                          /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ON_OVRD Mask   */
#define RSIM_RF_OSC_CTRL_BB_XTAL_ON_OVRD_SHIFT   (17U)                                               /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ON_OVRD Position*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_ON_OVRD(x)      (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ON_OVRD Field  */
#define RSIM_RF_OSC_CTRL_BB_XTAL_ON_OVRD_ON_MASK (0x40000U)                                          /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ON_OVRD_ON Mask*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_ON_OVRD_ON_SHIFT (18U)                                              /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ON_OVRD_ON Position*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_ON_OVRD_ON(x)   (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< RSIM_RF_OSC_CTRL.BB_XTAL_ON_OVRD_ON Field*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_READY_COUNT_SEL_MASK (0x300000U)                                    /*!< RSIM_RF_OSC_CTRL.BB_XTAL_READY_COUNT_SEL Mask*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_READY_COUNT_SEL_SHIFT (20U)                                         /*!< RSIM_RF_OSC_CTRL.BB_XTAL_READY_COUNT_SEL Position*/
#define RSIM_RF_OSC_CTRL_BB_XTAL_READY_COUNT_SEL(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x300000UL)  /*!< RSIM_RF_OSC_CTRL.BB_XTAL_READY_COUNT_SEL Field*/
#define RSIM_RF_OSC_CTRL_RADIO_EXT_OSC_RF_EN_SEL_MASK (0x8000000U)                                   /*!< RSIM_RF_OSC_CTRL.RADIO_EXT_OSC_RF_EN_SEL Mask*/
#define RSIM_RF_OSC_CTRL_RADIO_EXT_OSC_RF_EN_SEL_SHIFT (27U)                                         /*!< RSIM_RF_OSC_CTRL.RADIO_EXT_OSC_RF_EN_SEL Position*/
#define RSIM_RF_OSC_CTRL_RADIO_EXT_OSC_RF_EN_SEL(x) (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL) /*!< RSIM_RF_OSC_CTRL.RADIO_EXT_OSC_RF_EN_SEL Field*/
#define RSIM_RF_OSC_CTRL_RADIO_EXT_OSC_OVRD_MASK (0x10000000U)                                       /*!< RSIM_RF_OSC_CTRL.RADIO_EXT_OSC_OVRD Mask*/
#define RSIM_RF_OSC_CTRL_RADIO_EXT_OSC_OVRD_SHIFT (28U)                                              /*!< RSIM_RF_OSC_CTRL.RADIO_EXT_OSC_OVRD Position*/
#define RSIM_RF_OSC_CTRL_RADIO_EXT_OSC_OVRD(x)   (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< RSIM_RF_OSC_CTRL.RADIO_EXT_OSC_OVRD Field*/
#define RSIM_RF_OSC_CTRL_RADIO_EXT_OSC_OVRD_EN_MASK (0x20000000U)                                    /*!< RSIM_RF_OSC_CTRL.RADIO_EXT_OSC_OVRD_EN Mask*/
#define RSIM_RF_OSC_CTRL_RADIO_EXT_OSC_OVRD_EN_SHIFT (29U)                                           /*!< RSIM_RF_OSC_CTRL.RADIO_EXT_OSC_OVRD_EN Position*/
#define RSIM_RF_OSC_CTRL_RADIO_EXT_OSC_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)  /*!< RSIM_RF_OSC_CTRL.RADIO_EXT_OSC_OVRD_EN Field*/
#define RSIM_RF_OSC_CTRL_RADIO_RF_ABORT_OVRD_MASK (0x40000000U)                                      /*!< RSIM_RF_OSC_CTRL.RADIO_RF_ABORT_OVRD Mask*/
#define RSIM_RF_OSC_CTRL_RADIO_RF_ABORT_OVRD_SHIFT (30U)                                             /*!< RSIM_RF_OSC_CTRL.RADIO_RF_ABORT_OVRD Position*/
#define RSIM_RF_OSC_CTRL_RADIO_RF_ABORT_OVRD(x)  (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< RSIM_RF_OSC_CTRL.RADIO_RF_ABORT_OVRD Field*/
#define RSIM_RF_OSC_CTRL_RADIO_RF_ABORT_OVRD_EN_MASK (0x80000000U)                                   /*!< RSIM_RF_OSC_CTRL.RADIO_RF_ABORT_OVRD_EN Mask*/
#define RSIM_RF_OSC_CTRL_RADIO_RF_ABORT_OVRD_EN_SHIFT (31U)                                          /*!< RSIM_RF_OSC_CTRL.RADIO_RF_ABORT_OVRD_EN Position*/
#define RSIM_RF_OSC_CTRL_RADIO_RF_ABORT_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL) /*!< RSIM_RF_OSC_CTRL.RADIO_RF_ABORT_OVRD_EN Field*/
/* ------- ANA_TEST Bit Fields                      ------ */
#define RSIM_ANA_TEST_BB_LDO_LS_BYP_MASK         (0x1U)                                              /*!< RSIM_ANA_TEST.BB_LDO_LS_BYP Mask        */
#define RSIM_ANA_TEST_BB_LDO_LS_BYP_SHIFT        (0U)                                                /*!< RSIM_ANA_TEST.BB_LDO_LS_BYP Position    */
#define RSIM_ANA_TEST_BB_LDO_LS_BYP(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< RSIM_ANA_TEST.BB_LDO_LS_BYP Field       */
#define RSIM_ANA_TEST_BB_LDO_LS_DIAGSEL_MASK     (0x2U)                                              /*!< RSIM_ANA_TEST.BB_LDO_LS_DIAGSEL Mask    */
#define RSIM_ANA_TEST_BB_LDO_LS_DIAGSEL_SHIFT    (1U)                                                /*!< RSIM_ANA_TEST.BB_LDO_LS_DIAGSEL Position*/
#define RSIM_ANA_TEST_BB_LDO_LS_DIAGSEL(x)       (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< RSIM_ANA_TEST.BB_LDO_LS_DIAGSEL Field   */
#define RSIM_ANA_TEST_BB_LDO_XO_BYP_ON_MASK      (0x4U)                                              /*!< RSIM_ANA_TEST.BB_LDO_XO_BYP_ON Mask     */
#define RSIM_ANA_TEST_BB_LDO_XO_BYP_ON_SHIFT     (2U)                                                /*!< RSIM_ANA_TEST.BB_LDO_XO_BYP_ON Position */
#define RSIM_ANA_TEST_BB_LDO_XO_BYP_ON(x)        (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< RSIM_ANA_TEST.BB_LDO_XO_BYP_ON Field    */
#define RSIM_ANA_TEST_BB_LDO_XO_DIAGSEL_MASK     (0x8U)                                              /*!< RSIM_ANA_TEST.BB_LDO_XO_DIAGSEL Mask    */
#define RSIM_ANA_TEST_BB_LDO_XO_DIAGSEL_SHIFT    (3U)                                                /*!< RSIM_ANA_TEST.BB_LDO_XO_DIAGSEL Position*/
#define RSIM_ANA_TEST_BB_LDO_XO_DIAGSEL(x)       (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< RSIM_ANA_TEST.BB_LDO_XO_DIAGSEL Field   */
#define RSIM_ANA_TEST_BB_XTAL_TEST_MASK          (0x10U)                                             /*!< RSIM_ANA_TEST.BB_XTAL_TEST Mask         */
#define RSIM_ANA_TEST_BB_XTAL_TEST_SHIFT         (4U)                                                /*!< RSIM_ANA_TEST.BB_XTAL_TEST Position     */
#define RSIM_ANA_TEST_BB_XTAL_TEST(x)            (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< RSIM_ANA_TEST.BB_XTAL_TEST Field        */
#define RSIM_ANA_TEST_BG_DIAGBUF_MASK            (0x20U)                                             /*!< RSIM_ANA_TEST.BG_DIAGBUF Mask           */
#define RSIM_ANA_TEST_BG_DIAGBUF_SHIFT           (5U)                                                /*!< RSIM_ANA_TEST.BG_DIAGBUF Position       */
#define RSIM_ANA_TEST_BG_DIAGBUF(x)              (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< RSIM_ANA_TEST.BG_DIAGBUF Field          */
#define RSIM_ANA_TEST_BG_DIAGSEL_MASK            (0x40U)                                             /*!< RSIM_ANA_TEST.BG_DIAGSEL Mask           */
#define RSIM_ANA_TEST_BG_DIAGSEL_SHIFT           (6U)                                                /*!< RSIM_ANA_TEST.BG_DIAGSEL Position       */
#define RSIM_ANA_TEST_BG_DIAGSEL(x)              (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< RSIM_ANA_TEST.BG_DIAGSEL Field          */
#define RSIM_ANA_TEST_BG_STARTUPFORCE_MASK       (0x80U)                                             /*!< RSIM_ANA_TEST.BG_STARTUPFORCE Mask      */
#define RSIM_ANA_TEST_BG_STARTUPFORCE_SHIFT      (7U)                                                /*!< RSIM_ANA_TEST.BG_STARTUPFORCE Position  */
#define RSIM_ANA_TEST_BG_STARTUPFORCE(x)         (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< RSIM_ANA_TEST.BG_STARTUPFORCE Field     */
#define RSIM_ANA_TEST_DIAG_1234_ON_MASK          (0x100U)                                            /*!< RSIM_ANA_TEST.DIAG_1234_ON Mask         */
#define RSIM_ANA_TEST_DIAG_1234_ON_SHIFT         (8U)                                                /*!< RSIM_ANA_TEST.DIAG_1234_ON Position     */
#define RSIM_ANA_TEST_DIAG_1234_ON(x)            (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< RSIM_ANA_TEST.DIAG_1234_ON Field        */
#define RSIM_ANA_TEST_DIAG2SOCADC_DEC_MASK       (0x600U)                                            /*!< RSIM_ANA_TEST.DIAG2SOCADC_DEC Mask      */
#define RSIM_ANA_TEST_DIAG2SOCADC_DEC_SHIFT      (9U)                                                /*!< RSIM_ANA_TEST.DIAG2SOCADC_DEC Position  */
#define RSIM_ANA_TEST_DIAG2SOCADC_DEC(x)         (((uint32_t)(((uint32_t)(x))<<9U))&0x600UL)         /*!< RSIM_ANA_TEST.DIAG2SOCADC_DEC Field     */
#define RSIM_ANA_TEST_DIAG2SOCADC_DEC_ON_MASK    (0x800U)                                            /*!< RSIM_ANA_TEST.DIAG2SOCADC_DEC_ON Mask   */
#define RSIM_ANA_TEST_DIAG2SOCADC_DEC_ON_SHIFT   (11U)                                               /*!< RSIM_ANA_TEST.DIAG2SOCADC_DEC_ON Position*/
#define RSIM_ANA_TEST_DIAG2SOCADC_DEC_ON(x)      (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< RSIM_ANA_TEST.DIAG2SOCADC_DEC_ON Field  */
#define RSIM_ANA_TEST_DIAGCODE_MASK              (0x7000U)                                           /*!< RSIM_ANA_TEST.DIAGCODE Mask             */
#define RSIM_ANA_TEST_DIAGCODE_SHIFT             (12U)                                               /*!< RSIM_ANA_TEST.DIAGCODE Position         */
#define RSIM_ANA_TEST_DIAGCODE(x)                (((uint32_t)(((uint32_t)(x))<<12U))&0x7000UL)       /*!< RSIM_ANA_TEST.DIAGCODE Field            */
/* ------- ANA_TRIM Bit Fields                      ------ */
#define RSIM_ANA_TRIM_BB_LDO_LS_SPARE_MASK       (0x3U)                                              /*!< RSIM_ANA_TRIM.BB_LDO_LS_SPARE Mask      */
#define RSIM_ANA_TRIM_BB_LDO_LS_SPARE_SHIFT      (0U)                                                /*!< RSIM_ANA_TRIM.BB_LDO_LS_SPARE Position  */
#define RSIM_ANA_TRIM_BB_LDO_LS_SPARE(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< RSIM_ANA_TRIM.BB_LDO_LS_SPARE Field     */
#define RSIM_ANA_TRIM_BB_LDO_LS_TRIM_MASK        (0x38U)                                             /*!< RSIM_ANA_TRIM.BB_LDO_LS_TRIM Mask       */
#define RSIM_ANA_TRIM_BB_LDO_LS_TRIM_SHIFT       (3U)                                                /*!< RSIM_ANA_TRIM.BB_LDO_LS_TRIM Position   */
#define RSIM_ANA_TRIM_BB_LDO_LS_TRIM(x)          (((uint32_t)(((uint32_t)(x))<<3U))&0x38UL)          /*!< RSIM_ANA_TRIM.BB_LDO_LS_TRIM Field      */
#define RSIM_ANA_TRIM_BB_LDO_XO_SPARE_MASK       (0xC0U)                                             /*!< RSIM_ANA_TRIM.BB_LDO_XO_SPARE Mask      */
#define RSIM_ANA_TRIM_BB_LDO_XO_SPARE_SHIFT      (6U)                                                /*!< RSIM_ANA_TRIM.BB_LDO_XO_SPARE Position  */
#define RSIM_ANA_TRIM_BB_LDO_XO_SPARE(x)         (((uint32_t)(((uint32_t)(x))<<6U))&0xC0UL)          /*!< RSIM_ANA_TRIM.BB_LDO_XO_SPARE Field     */
#define RSIM_ANA_TRIM_BB_LDO_XO_TRIM_MASK        (0x700U)                                            /*!< RSIM_ANA_TRIM.BB_LDO_XO_TRIM Mask       */
#define RSIM_ANA_TRIM_BB_LDO_XO_TRIM_SHIFT       (8U)                                                /*!< RSIM_ANA_TRIM.BB_LDO_XO_TRIM Position   */
#define RSIM_ANA_TRIM_BB_LDO_XO_TRIM(x)          (((uint32_t)(((uint32_t)(x))<<8U))&0x700UL)         /*!< RSIM_ANA_TRIM.BB_LDO_XO_TRIM Field      */
#define RSIM_ANA_TRIM_BB_XTAL_SPARE_MASK         (0xF800U)                                           /*!< RSIM_ANA_TRIM.BB_XTAL_SPARE Mask        */
#define RSIM_ANA_TRIM_BB_XTAL_SPARE_SHIFT        (11U)                                               /*!< RSIM_ANA_TRIM.BB_XTAL_SPARE Position    */
#define RSIM_ANA_TRIM_BB_XTAL_SPARE(x)           (((uint32_t)(((uint32_t)(x))<<11U))&0xF800UL)       /*!< RSIM_ANA_TRIM.BB_XTAL_SPARE Field       */
#define RSIM_ANA_TRIM_BB_XTAL_TRIM_MASK          (0xFF0000U)                                         /*!< RSIM_ANA_TRIM.BB_XTAL_TRIM Mask         */
#define RSIM_ANA_TRIM_BB_XTAL_TRIM_SHIFT         (16U)                                               /*!< RSIM_ANA_TRIM.BB_XTAL_TRIM Position     */
#define RSIM_ANA_TRIM_BB_XTAL_TRIM(x)            (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< RSIM_ANA_TRIM.BB_XTAL_TRIM Field        */
#define RSIM_ANA_TRIM_BG_1V_TRIM_MASK            (0xF000000U)                                        /*!< RSIM_ANA_TRIM.BG_1V_TRIM Mask           */
#define RSIM_ANA_TRIM_BG_1V_TRIM_SHIFT           (24U)                                               /*!< RSIM_ANA_TRIM.BG_1V_TRIM Position       */
#define RSIM_ANA_TRIM_BG_1V_TRIM(x)              (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL)    /*!< RSIM_ANA_TRIM.BG_1V_TRIM Field          */
#define RSIM_ANA_TRIM_BG_IBIAS_5U_TRIM_MASK      (0xF0000000U)                                       /*!< RSIM_ANA_TRIM.BG_IBIAS_5U_TRIM Mask     */
#define RSIM_ANA_TRIM_BG_IBIAS_5U_TRIM_SHIFT     (28U)                                               /*!< RSIM_ANA_TRIM.BG_IBIAS_5U_TRIM Position */
#define RSIM_ANA_TRIM_BG_IBIAS_5U_TRIM(x)        (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL)   /*!< RSIM_ANA_TRIM.BG_IBIAS_5U_TRIM Field    */
/**
 * @} */ /* End group RSIM_Register_Masks_GROUP 
 */

/* RSIM - Peripheral instance base addresses */
#define RSIM_BasePtr                   0x40059000UL //!< Peripheral base address
#define RSIM                           ((RSIM_Type *) RSIM_BasePtr) //!< Freescale base pointer
#define RSIM_BASE_PTR                  (RSIM) //!< Freescale style base pointer
/**
 * @} */ /* End group RSIM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup RTC_Peripheral_access_layer_GROUP RTC Peripheral Access Layer
* @brief C Struct for RTC
* @{
*/

/* ================================================================================ */
/* ================           RTC (file:RTC_WPS_MKL03Z4)           ================ */
/* ================================================================================ */

/**
 * @brief Secure Real Time Clock
 */
/**
* @addtogroup RTC_structs_GROUP RTC struct
* @brief Struct for RTC
* @{
*/
typedef struct RTC_Type {
   __IO uint32_t  TSR;                          /**< 0000: Time Seconds Register                                        */
   __IO uint32_t  TPR;                          /**< 0004: Time Prescaler Register                                      */
   __IO uint32_t  TAR;                          /**< 0008: Time Alarm Register                                          */
   __IO uint32_t  TCR;                          /**< 000C: Time Compensation Register                                   */
   __IO uint32_t  CR;                           /**< 0010: Control Register                                             */
   __IO uint32_t  SR;                           /**< 0014: Status Register                                              */
   __IO uint32_t  LR;                           /**< 0018: Lock Register                                                */
   __IO uint32_t  IER;                          /**< 001C: Interrupt Enable Register                                    */
} RTC_Type;

/**
 * @} */ /* End group RTC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'RTC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup RTC_Register_Masks_GROUP RTC Register Masks
* @brief Register Masks for RTC
* @{
*/
/* ------- TSR Bit Fields                           ------ */
#define RTC_TSR_TSR_MASK                         (0xFFFFFFFFU)                                       /*!< RTC_TSR.TSR Mask                        */
#define RTC_TSR_TSR_SHIFT                        (0U)                                                /*!< RTC_TSR.TSR Position                    */
#define RTC_TSR_TSR(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< RTC_TSR.TSR Field                       */
/* ------- TPR Bit Fields                           ------ */
#define RTC_TPR_TPR_MASK                         (0xFFFFU)                                           /*!< RTC_TPR.TPR Mask                        */
#define RTC_TPR_TPR_SHIFT                        (0U)                                                /*!< RTC_TPR.TPR Position                    */
#define RTC_TPR_TPR(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< RTC_TPR.TPR Field                       */
/* ------- TAR Bit Fields                           ------ */
#define RTC_TAR_TAR_MASK                         (0xFFFFFFFFU)                                       /*!< RTC_TAR.TAR Mask                        */
#define RTC_TAR_TAR_SHIFT                        (0U)                                                /*!< RTC_TAR.TAR Position                    */
#define RTC_TAR_TAR(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< RTC_TAR.TAR Field                       */
/* ------- TCR Bit Fields                           ------ */
#define RTC_TCR_TCR_MASK                         (0xFFU)                                             /*!< RTC_TCR.TCR Mask                        */
#define RTC_TCR_TCR_SHIFT                        (0U)                                                /*!< RTC_TCR.TCR Position                    */
#define RTC_TCR_TCR(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< RTC_TCR.TCR Field                       */
#define RTC_TCR_CIR_MASK                         (0xFF00U)                                           /*!< RTC_TCR.CIR Mask                        */
#define RTC_TCR_CIR_SHIFT                        (8U)                                                /*!< RTC_TCR.CIR Position                    */
#define RTC_TCR_CIR(x)                           (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< RTC_TCR.CIR Field                       */
#define RTC_TCR_TCV_MASK                         (0xFF0000U)                                         /*!< RTC_TCR.TCV Mask                        */
#define RTC_TCR_TCV_SHIFT                        (16U)                                               /*!< RTC_TCR.TCV Position                    */
#define RTC_TCR_TCV(x)                           (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< RTC_TCR.TCV Field                       */
#define RTC_TCR_CIC_MASK                         (0xFF000000U)                                       /*!< RTC_TCR.CIC Mask                        */
#define RTC_TCR_CIC_SHIFT                        (24U)                                               /*!< RTC_TCR.CIC Position                    */
#define RTC_TCR_CIC(x)                           (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< RTC_TCR.CIC Field                       */
/* ------- CR Bit Fields                            ------ */
#define RTC_CR_SWR_MASK                          (0x1U)                                              /*!< RTC_CR.SWR Mask                         */
#define RTC_CR_SWR_SHIFT                         (0U)                                                /*!< RTC_CR.SWR Position                     */
#define RTC_CR_SWR(x)                            (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< RTC_CR.SWR Field                        */
#define RTC_CR_WPE_MASK                          (0x2U)                                              /*!< RTC_CR.WPE Mask                         */
#define RTC_CR_WPE_SHIFT                         (1U)                                                /*!< RTC_CR.WPE Position                     */
#define RTC_CR_WPE(x)                            (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< RTC_CR.WPE Field                        */
#define RTC_CR_SUP_MASK                          (0x4U)                                              /*!< RTC_CR.SUP Mask                         */
#define RTC_CR_SUP_SHIFT                         (2U)                                                /*!< RTC_CR.SUP Position                     */
#define RTC_CR_SUP(x)                            (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< RTC_CR.SUP Field                        */
#define RTC_CR_UM_MASK                           (0x8U)                                              /*!< RTC_CR.UM Mask                          */
#define RTC_CR_UM_SHIFT                          (3U)                                                /*!< RTC_CR.UM Position                      */
#define RTC_CR_UM(x)                             (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< RTC_CR.UM Field                         */
#define RTC_CR_WPS_MASK                          (0x10U)                                             /*!< RTC_CR.WPS Mask                         */
#define RTC_CR_WPS_SHIFT                         (4U)                                                /*!< RTC_CR.WPS Position                     */
#define RTC_CR_WPS(x)                            (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< RTC_CR.WPS Field                        */
#define RTC_CR_OSCE_MASK                         (0x100U)                                            /*!< RTC_CR.OSCE Mask                        */
#define RTC_CR_OSCE_SHIFT                        (8U)                                                /*!< RTC_CR.OSCE Position                    */
#define RTC_CR_OSCE(x)                           (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< RTC_CR.OSCE Field                       */
#define RTC_CR_CLKO_MASK                         (0x200U)                                            /*!< RTC_CR.CLKO Mask                        */
#define RTC_CR_CLKO_SHIFT                        (9U)                                                /*!< RTC_CR.CLKO Position                    */
#define RTC_CR_CLKO(x)                           (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< RTC_CR.CLKO Field                       */
#define RTC_CR_SCP_MASK                          (0x3C00U)                                           /*!< RTC_CR.SCP Mask                         */
#define RTC_CR_SCP_SHIFT                         (10U)                                               /*!< RTC_CR.SCP Position                     */
#define RTC_CR_SCP(x)                            (((uint32_t)(((uint32_t)(x))<<10U))&0x3C00UL)       /*!< RTC_CR.SCP Field                        */
#define RTC_CR_SC16P_MASK                        (0x400U)                                            /*!< RTC_CR.SC16P Mask                       */
#define RTC_CR_SC16P_SHIFT                       (10U)                                               /*!< RTC_CR.SC16P Position                   */
#define RTC_CR_SC16P(x)                          (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< RTC_CR.SC16P Field                      */
#define RTC_CR_SC8P_MASK                         (0x800U)                                            /*!< RTC_CR.SC8P Mask                        */
#define RTC_CR_SC8P_SHIFT                        (11U)                                               /*!< RTC_CR.SC8P Position                    */
#define RTC_CR_SC8P(x)                           (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< RTC_CR.SC8P Field                       */
#define RTC_CR_SC4P_MASK                         (0x1000U)                                           /*!< RTC_CR.SC4P Mask                        */
#define RTC_CR_SC4P_SHIFT                        (12U)                                               /*!< RTC_CR.SC4P Position                    */
#define RTC_CR_SC4P(x)                           (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< RTC_CR.SC4P Field                       */
#define RTC_CR_SC2P_MASK                         (0x2000U)                                           /*!< RTC_CR.SC2P Mask                        */
#define RTC_CR_SC2P_SHIFT                        (13U)                                               /*!< RTC_CR.SC2P Position                    */
#define RTC_CR_SC2P(x)                           (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< RTC_CR.SC2P Field                       */
/* ------- SR Bit Fields                            ------ */
#define RTC_SR_TIF_MASK                          (0x1U)                                              /*!< RTC_SR.TIF Mask                         */
#define RTC_SR_TIF_SHIFT                         (0U)                                                /*!< RTC_SR.TIF Position                     */
#define RTC_SR_TIF(x)                            (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< RTC_SR.TIF Field                        */
#define RTC_SR_TOF_MASK                          (0x2U)                                              /*!< RTC_SR.TOF Mask                         */
#define RTC_SR_TOF_SHIFT                         (1U)                                                /*!< RTC_SR.TOF Position                     */
#define RTC_SR_TOF(x)                            (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< RTC_SR.TOF Field                        */
#define RTC_SR_TAF_MASK                          (0x4U)                                              /*!< RTC_SR.TAF Mask                         */
#define RTC_SR_TAF_SHIFT                         (2U)                                                /*!< RTC_SR.TAF Position                     */
#define RTC_SR_TAF(x)                            (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< RTC_SR.TAF Field                        */
#define RTC_SR_TCE_MASK                          (0x10U)                                             /*!< RTC_SR.TCE Mask                         */
#define RTC_SR_TCE_SHIFT                         (4U)                                                /*!< RTC_SR.TCE Position                     */
#define RTC_SR_TCE(x)                            (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< RTC_SR.TCE Field                        */
/* ------- LR Bit Fields                            ------ */
#define RTC_LR_TCL_MASK                          (0x8U)                                              /*!< RTC_LR.TCL Mask                         */
#define RTC_LR_TCL_SHIFT                         (3U)                                                /*!< RTC_LR.TCL Position                     */
#define RTC_LR_TCL(x)                            (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< RTC_LR.TCL Field                        */
#define RTC_LR_CRL_MASK                          (0x10U)                                             /*!< RTC_LR.CRL Mask                         */
#define RTC_LR_CRL_SHIFT                         (4U)                                                /*!< RTC_LR.CRL Position                     */
#define RTC_LR_CRL(x)                            (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< RTC_LR.CRL Field                        */
#define RTC_LR_SRL_MASK                          (0x20U)                                             /*!< RTC_LR.SRL Mask                         */
#define RTC_LR_SRL_SHIFT                         (5U)                                                /*!< RTC_LR.SRL Position                     */
#define RTC_LR_SRL(x)                            (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< RTC_LR.SRL Field                        */
#define RTC_LR_LRL_MASK                          (0x40U)                                             /*!< RTC_LR.LRL Mask                         */
#define RTC_LR_LRL_SHIFT                         (6U)                                                /*!< RTC_LR.LRL Position                     */
#define RTC_LR_LRL(x)                            (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< RTC_LR.LRL Field                        */
/* ------- IER Bit Fields                           ------ */
#define RTC_IER_TIIE_MASK                        (0x1U)                                              /*!< RTC_IER.TIIE Mask                       */
#define RTC_IER_TIIE_SHIFT                       (0U)                                                /*!< RTC_IER.TIIE Position                   */
#define RTC_IER_TIIE(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< RTC_IER.TIIE Field                      */
#define RTC_IER_TOIE_MASK                        (0x2U)                                              /*!< RTC_IER.TOIE Mask                       */
#define RTC_IER_TOIE_SHIFT                       (1U)                                                /*!< RTC_IER.TOIE Position                   */
#define RTC_IER_TOIE(x)                          (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< RTC_IER.TOIE Field                      */
#define RTC_IER_TAIE_MASK                        (0x4U)                                              /*!< RTC_IER.TAIE Mask                       */
#define RTC_IER_TAIE_SHIFT                       (2U)                                                /*!< RTC_IER.TAIE Position                   */
#define RTC_IER_TAIE(x)                          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< RTC_IER.TAIE Field                      */
#define RTC_IER_TSIE_MASK                        (0x10U)                                             /*!< RTC_IER.TSIE Mask                       */
#define RTC_IER_TSIE_SHIFT                       (4U)                                                /*!< RTC_IER.TSIE Position                   */
#define RTC_IER_TSIE(x)                          (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< RTC_IER.TSIE Field                      */
#define RTC_IER_WPON_MASK                        (0x80U)                                             /*!< RTC_IER.WPON Mask                       */
#define RTC_IER_WPON_SHIFT                       (7U)                                                /*!< RTC_IER.WPON Position                   */
#define RTC_IER_WPON(x)                          (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< RTC_IER.WPON Field                      */
/**
 * @} */ /* End group RTC_Register_Masks_GROUP 
 */

/* RTC - Peripheral instance base addresses */
#define RTC_BasePtr                    0x4003D000UL //!< Peripheral base address
#define RTC                            ((RTC_Type *) RTC_BasePtr) //!< Freescale base pointer
#define RTC_BASE_PTR                   (RTC) //!< Freescale style base pointer
#define RTC_IRQS { RTC_Alarm_IRQn, RTC_Seconds_IRQn,  }

/**
 * @} */ /* End group RTC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup SIM_Peripheral_access_layer_GROUP SIM Peripheral Access Layer
* @brief C Struct for SIM
* @{
*/

/* ================================================================================ */
/* ================           SIM (file:SIM_MKW41Z4)               ================ */
/* ================================================================================ */

/**
 * @brief System Integration Module
 */
/**
* @addtogroup SIM_structs_GROUP SIM struct
* @brief Struct for SIM
* @{
*/
typedef struct SIM_Type {
   __IO uint32_t  SOPT1;                        /**< 0000: System Options Register 1                                    */
        uint8_t   RESERVED_0[4096];             /**< 0004: 0x1000 bytes                                                 */
   __IO uint32_t  SOPT2;                        /**< 1004: System Options Register 2                                    */
        uint8_t   RESERVED_1[4];                /**< 1008: 0x4 bytes                                                    */
   __IO uint32_t  SOPT4;                        /**< 100C: System Options Register 4                                    */
   __IO uint32_t  SOPT5;                        /**< 1010: System Options Register 5                                    */
        uint8_t   RESERVED_2[4];                /**< 1014: 0x4 bytes                                                    */
   __IO uint32_t  SOPT7;                        /**< 1018: System Options Register 7                                    */
        uint8_t   RESERVED_3[8];                /**< 101C: 0x8 bytes                                                    */
   __I  uint32_t  SDID;                         /**< 1024: System Device Identification Register                        */
        uint8_t   RESERVED_4[12];               /**< 1028: 0xC bytes                                                    */
   __IO uint32_t  SCGC4;                        /**< 1034: System Clock Gating Control Register 4                       */
   __IO uint32_t  SCGC5;                        /**< 1038: System Clock Gating Control Register 5                       */
   __IO uint32_t  SCGC6;                        /**< 103C: System Clock Gating Control Register 6                       */
   __IO uint32_t  SCGC7;                        /**< 1040: System Clock Gating Control Register 7                       */
   __IO uint32_t  CLKDIV1;                      /**< 1044: System Clock Divider Register 1                              */
        uint8_t   RESERVED_5[4];                /**< 1048: 0x4 bytes                                                    */
   __IO uint32_t  FCFG1;                        /**< 104C: Flash Configuration Register 1                               */
   __I  uint32_t  FCFG2;                        /**< 1050: Flash Configuration Register 2                               */
        uint8_t   RESERVED_6[4];                /**< 1054: 0x4 bytes                                                    */
   __I  uint32_t  UIDMH;                        /**< 1058: Unique Identification Register Mid-High                      */
   __I  uint32_t  UIDML;                        /**< 105C: Unique Identification Register Mid Low                       */
   __I  uint32_t  UIDL;                         /**< 1060: Unique Identification Register Low                           */
        uint8_t   RESERVED_7[156];              /**< 1064: 0x9C bytes                                                   */
   __IO uint32_t  COPC;                         /**< 1100: COP Control Register                                         */
   __O  uint32_t  SRVCOP;                       /**< 1104: Service COP                                                  */
} SIM_Type;

/**
 * @} */ /* End group SIM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'SIM' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup SIM_Register_Masks_GROUP SIM Register Masks
* @brief Register Masks for SIM
* @{
*/
/* ------- SOPT1 Bit Fields                         ------ */
#define SIM_SOPT1_OSC32KOUT_MASK                 (0x30000U)                                          /*!< SIM_SOPT1.OSC32KOUT Mask                */
#define SIM_SOPT1_OSC32KOUT_SHIFT                (16U)                                               /*!< SIM_SOPT1.OSC32KOUT Position            */
#define SIM_SOPT1_OSC32KOUT(x)                   (((uint32_t)(((uint32_t)(x))<<16U))&0x30000UL)      /*!< SIM_SOPT1.OSC32KOUT Field               */
#define SIM_SOPT1_OSC32KSEL_MASK                 (0xC0000U)                                          /*!< SIM_SOPT1.OSC32KSEL Mask                */
#define SIM_SOPT1_OSC32KSEL_SHIFT                (18U)                                               /*!< SIM_SOPT1.OSC32KSEL Position            */
#define SIM_SOPT1_OSC32KSEL(x)                   (((uint32_t)(((uint32_t)(x))<<18U))&0xC0000UL)      /*!< SIM_SOPT1.OSC32KSEL Field               */
/* ------- SOPT2 Bit Fields                         ------ */
#define SIM_SOPT2_CLKOUTSEL_MASK                 (0xE0U)                                             /*!< SIM_SOPT2.CLKOUTSEL Mask                */
#define SIM_SOPT2_CLKOUTSEL_SHIFT                (5U)                                                /*!< SIM_SOPT2.CLKOUTSEL Position            */
#define SIM_SOPT2_CLKOUTSEL(x)                   (((uint32_t)(((uint32_t)(x))<<5U))&0xE0UL)          /*!< SIM_SOPT2.CLKOUTSEL Field               */
#define SIM_SOPT2_TPMSRC_MASK                    (0x3000000U)                                        /*!< SIM_SOPT2.TPMSRC Mask                   */
#define SIM_SOPT2_TPMSRC_SHIFT                   (24U)                                               /*!< SIM_SOPT2.TPMSRC Position               */
#define SIM_SOPT2_TPMSRC(x)                      (((uint32_t)(((uint32_t)(x))<<24U))&0x3000000UL)    /*!< SIM_SOPT2.TPMSRC Field                  */
#define SIM_SOPT2_LPUART0SRC_MASK                (0xC000000U)                                        /*!< SIM_SOPT2.LPUART0SRC Mask               */
#define SIM_SOPT2_LPUART0SRC_SHIFT               (26U)                                               /*!< SIM_SOPT2.LPUART0SRC Position           */
#define SIM_SOPT2_LPUART0SRC(x)                  (((uint32_t)(((uint32_t)(x))<<26U))&0xC000000UL)    /*!< SIM_SOPT2.LPUART0SRC Field              */
/* ------- SOPT4 Bit Fields                         ------ */
#define SIM_SOPT4_TPM1CH0SRC_MASK                (0x40000U)                                          /*!< SIM_SOPT4.TPM1CH0SRC Mask               */
#define SIM_SOPT4_TPM1CH0SRC_SHIFT               (18U)                                               /*!< SIM_SOPT4.TPM1CH0SRC Position           */
#define SIM_SOPT4_TPM1CH0SRC(x)                  (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< SIM_SOPT4.TPM1CH0SRC Field              */
#define SIM_SOPT4_TPM2CH0SRC_MASK                (0x100000U)                                         /*!< SIM_SOPT4.TPM2CH0SRC Mask               */
#define SIM_SOPT4_TPM2CH0SRC_SHIFT               (20U)                                               /*!< SIM_SOPT4.TPM2CH0SRC Position           */
#define SIM_SOPT4_TPM2CH0SRC(x)                  (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< SIM_SOPT4.TPM2CH0SRC Field              */
#define SIM_SOPT4_TPM0CLKSEL_MASK                (0x1000000U)                                        /*!< SIM_SOPT4.TPM0CLKSEL Mask               */
#define SIM_SOPT4_TPM0CLKSEL_SHIFT               (24U)                                               /*!< SIM_SOPT4.TPM0CLKSEL Position           */
#define SIM_SOPT4_TPM0CLKSEL(x)                  (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< SIM_SOPT4.TPM0CLKSEL Field              */
#define SIM_SOPT4_TPM1CLKSEL_MASK                (0x2000000U)                                        /*!< SIM_SOPT4.TPM1CLKSEL Mask               */
#define SIM_SOPT4_TPM1CLKSEL_SHIFT               (25U)                                               /*!< SIM_SOPT4.TPM1CLKSEL Position           */
#define SIM_SOPT4_TPM1CLKSEL(x)                  (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< SIM_SOPT4.TPM1CLKSEL Field              */
#define SIM_SOPT4_TPM2CLKSEL_MASK                (0x4000000U)                                        /*!< SIM_SOPT4.TPM2CLKSEL Mask               */
#define SIM_SOPT4_TPM2CLKSEL_SHIFT               (26U)                                               /*!< SIM_SOPT4.TPM2CLKSEL Position           */
#define SIM_SOPT4_TPM2CLKSEL(x)                  (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< SIM_SOPT4.TPM2CLKSEL Field              */
/* ------- SOPT5 Bit Fields                         ------ */
#define SIM_SOPT5_LPUART0TXSRC_MASK              (0x3U)                                              /*!< SIM_SOPT5.LPUART0TXSRC Mask             */
#define SIM_SOPT5_LPUART0TXSRC_SHIFT             (0U)                                                /*!< SIM_SOPT5.LPUART0TXSRC Position         */
#define SIM_SOPT5_LPUART0TXSRC(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< SIM_SOPT5.LPUART0TXSRC Field            */
#define SIM_SOPT5_LPUART0RXSRC_MASK              (0x4U)                                              /*!< SIM_SOPT5.LPUART0RXSRC Mask             */
#define SIM_SOPT5_LPUART0RXSRC_SHIFT             (2U)                                                /*!< SIM_SOPT5.LPUART0RXSRC Position         */
#define SIM_SOPT5_LPUART0RXSRC(x)                (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< SIM_SOPT5.LPUART0RXSRC Field            */
#define SIM_SOPT5_LPUART0ODE_MASK                (0x10000U)                                          /*!< SIM_SOPT5.LPUART0ODE Mask               */
#define SIM_SOPT5_LPUART0ODE_SHIFT               (16U)                                               /*!< SIM_SOPT5.LPUART0ODE Position           */
#define SIM_SOPT5_LPUART0ODE(x)                  (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< SIM_SOPT5.LPUART0ODE Field              */
/* ------- SOPT7 Bit Fields                         ------ */
#define SIM_SOPT7_ADC0TRGSEL_MASK                (0xFU)                                              /*!< SIM_SOPT7.ADC0TRGSEL Mask               */
#define SIM_SOPT7_ADC0TRGSEL_SHIFT               (0U)                                                /*!< SIM_SOPT7.ADC0TRGSEL Position           */
#define SIM_SOPT7_ADC0TRGSEL(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< SIM_SOPT7.ADC0TRGSEL Field              */
#define SIM_SOPT7_ADC0PRETRGSEL_MASK             (0x10U)                                             /*!< SIM_SOPT7.ADC0PRETRGSEL Mask            */
#define SIM_SOPT7_ADC0PRETRGSEL_SHIFT            (4U)                                                /*!< SIM_SOPT7.ADC0PRETRGSEL Position        */
#define SIM_SOPT7_ADC0PRETRGSEL(x)               (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< SIM_SOPT7.ADC0PRETRGSEL Field           */
#define SIM_SOPT7_ADC0ALTTRGEN_MASK              (0x80U)                                             /*!< SIM_SOPT7.ADC0ALTTRGEN Mask             */
#define SIM_SOPT7_ADC0ALTTRGEN_SHIFT             (7U)                                                /*!< SIM_SOPT7.ADC0ALTTRGEN Position         */
#define SIM_SOPT7_ADC0ALTTRGEN(x)                (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< SIM_SOPT7.ADC0ALTTRGEN Field            */
/* ------- SDID Bit Fields                          ------ */
#define SIM_SDID_PINID_MASK                      (0xFU)                                              /*!< SIM_SDID.PINID Mask                     */
#define SIM_SDID_PINID_SHIFT                     (0U)                                                /*!< SIM_SDID.PINID Position                 */
#define SIM_SDID_PINID(x)                        (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< SIM_SDID.PINID Field                    */
#define SIM_SDID_DIEID_MASK                      (0xF80U)                                            /*!< SIM_SDID.DIEID Mask                     */
#define SIM_SDID_DIEID_SHIFT                     (7U)                                                /*!< SIM_SDID.DIEID Position                 */
#define SIM_SDID_DIEID(x)                        (((uint32_t)(((uint32_t)(x))<<7U))&0xF80UL)         /*!< SIM_SDID.DIEID Field                    */
#define SIM_SDID_REVID_MASK                      (0xF000U)                                           /*!< SIM_SDID.REVID Mask                     */
#define SIM_SDID_REVID_SHIFT                     (12U)                                               /*!< SIM_SDID.REVID Position                 */
#define SIM_SDID_REVID(x)                        (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< SIM_SDID.REVID Field                    */
#define SIM_SDID_SRAMSIZE_MASK                   (0xF0000U)                                          /*!< SIM_SDID.SRAMSIZE Mask                  */
#define SIM_SDID_SRAMSIZE_SHIFT                  (16U)                                               /*!< SIM_SDID.SRAMSIZE Position              */
#define SIM_SDID_SRAMSIZE(x)                     (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< SIM_SDID.SRAMSIZE Field                 */
#define SIM_SDID_SERIESID_MASK                   (0xF00000U)                                         /*!< SIM_SDID.SERIESID Mask                  */
#define SIM_SDID_SERIESID_SHIFT                  (20U)                                               /*!< SIM_SDID.SERIESID Position              */
#define SIM_SDID_SERIESID(x)                     (((uint32_t)(((uint32_t)(x))<<20U))&0xF00000UL)     /*!< SIM_SDID.SERIESID Field                 */
#define SIM_SDID_SUBFAMID_MASK                   (0x3000000U)                                        /*!< SIM_SDID.SUBFAMID Mask                  */
#define SIM_SDID_SUBFAMID_SHIFT                  (24U)                                               /*!< SIM_SDID.SUBFAMID Position              */
#define SIM_SDID_SUBFAMID(x)                     (((uint32_t)(((uint32_t)(x))<<24U))&0x3000000UL)    /*!< SIM_SDID.SUBFAMID Field                 */
#define SIM_SDID_FAMID_MASK                      (0xF0000000U)                                       /*!< SIM_SDID.FAMID Mask                     */
#define SIM_SDID_FAMID_SHIFT                     (28U)                                               /*!< SIM_SDID.FAMID Position                 */
#define SIM_SDID_FAMID(x)                        (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL)   /*!< SIM_SDID.FAMID Field                    */
/* ------- SCGC4 Bit Fields                         ------ */
#define SIM_SCGC4_CMT_MASK                       (0x4U)                                              /*!< SIM_SCGC4.CMT Mask                      */
#define SIM_SCGC4_CMT_SHIFT                      (2U)                                                /*!< SIM_SCGC4.CMT Position                  */
#define SIM_SCGC4_CMT(x)                         (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< SIM_SCGC4.CMT Field                     */
#define SIM_SCGC4_I2C0_MASK                      (0x40U)                                             /*!< SIM_SCGC4.I2C0 Mask                     */
#define SIM_SCGC4_I2C0_SHIFT                     (6U)                                                /*!< SIM_SCGC4.I2C0 Position                 */
#define SIM_SCGC4_I2C0(x)                        (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< SIM_SCGC4.I2C0 Field                    */
#define SIM_SCGC4_I2C1_MASK                      (0x80U)                                             /*!< SIM_SCGC4.I2C1 Mask                     */
#define SIM_SCGC4_I2C1_SHIFT                     (7U)                                                /*!< SIM_SCGC4.I2C1 Position                 */
#define SIM_SCGC4_I2C1(x)                        (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< SIM_SCGC4.I2C1 Field                    */
#define SIM_SCGC4_CMP_MASK                       (0x80000U)                                          /*!< SIM_SCGC4.CMP Mask                      */
#define SIM_SCGC4_CMP_SHIFT                      (19U)                                               /*!< SIM_SCGC4.CMP Position                  */
#define SIM_SCGC4_CMP(x)                         (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< SIM_SCGC4.CMP Field                     */
#define SIM_SCGC4_VREF_MASK                      (0x100000U)                                         /*!< SIM_SCGC4.VREF Mask                     */
#define SIM_SCGC4_VREF_SHIFT                     (20U)                                               /*!< SIM_SCGC4.VREF Position                 */
#define SIM_SCGC4_VREF(x)                        (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< SIM_SCGC4.VREF Field                    */
/* ------- SCGC5 Bit Fields                         ------ */
#define SIM_SCGC5_LPTMR_MASK                     (0x1U)                                              /*!< SIM_SCGC5.LPTMR Mask                    */
#define SIM_SCGC5_LPTMR_SHIFT                    (0U)                                                /*!< SIM_SCGC5.LPTMR Position                */
#define SIM_SCGC5_LPTMR(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< SIM_SCGC5.LPTMR Field                   */
#define SIM_SCGC5_TSI_MASK                       (0x20U)                                             /*!< SIM_SCGC5.TSI Mask                      */
#define SIM_SCGC5_TSI_SHIFT                      (5U)                                                /*!< SIM_SCGC5.TSI Position                  */
#define SIM_SCGC5_TSI(x)                         (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< SIM_SCGC5.TSI Field                     */
#define SIM_SCGC5_PORTA_MASK                     (0x200U)                                            /*!< SIM_SCGC5.PORTA Mask                    */
#define SIM_SCGC5_PORTA_SHIFT                    (9U)                                                /*!< SIM_SCGC5.PORTA Position                */
#define SIM_SCGC5_PORTA(x)                       (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< SIM_SCGC5.PORTA Field                   */
#define SIM_SCGC5_PORTB_MASK                     (0x400U)                                            /*!< SIM_SCGC5.PORTB Mask                    */
#define SIM_SCGC5_PORTB_SHIFT                    (10U)                                               /*!< SIM_SCGC5.PORTB Position                */
#define SIM_SCGC5_PORTB(x)                       (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< SIM_SCGC5.PORTB Field                   */
#define SIM_SCGC5_PORTC_MASK                     (0x800U)                                            /*!< SIM_SCGC5.PORTC Mask                    */
#define SIM_SCGC5_PORTC_SHIFT                    (11U)                                               /*!< SIM_SCGC5.PORTC Position                */
#define SIM_SCGC5_PORTC(x)                       (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< SIM_SCGC5.PORTC Field                   */
#define SIM_SCGC5_LPUART0_MASK                   (0x100000U)                                         /*!< SIM_SCGC5.LPUART0 Mask                  */
#define SIM_SCGC5_LPUART0_SHIFT                  (20U)                                               /*!< SIM_SCGC5.LPUART0 Position              */
#define SIM_SCGC5_LPUART0(x)                     (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< SIM_SCGC5.LPUART0 Field                 */
#define SIM_SCGC5_LTC_MASK                       (0x1000000U)                                        /*!< SIM_SCGC5.LTC Mask                      */
#define SIM_SCGC5_LTC_SHIFT                      (24U)                                               /*!< SIM_SCGC5.LTC Position                  */
#define SIM_SCGC5_LTC(x)                         (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< SIM_SCGC5.LTC Field                     */
#define SIM_SCGC5_RSIM_MASK                      (0x2000000U)                                        /*!< SIM_SCGC5.RSIM Mask                     */
#define SIM_SCGC5_RSIM_SHIFT                     (25U)                                               /*!< SIM_SCGC5.RSIM Position                 */
#define SIM_SCGC5_RSIM(x)                        (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< SIM_SCGC5.RSIM Field                    */
#define SIM_SCGC5_DCDC_MASK                      (0x4000000U)                                        /*!< SIM_SCGC5.DCDC Mask                     */
#define SIM_SCGC5_DCDC_SHIFT                     (26U)                                               /*!< SIM_SCGC5.DCDC Position                 */
#define SIM_SCGC5_DCDC(x)                        (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< SIM_SCGC5.DCDC Field                    */
#define SIM_SCGC5_BTLL_MASK                      (0x8000000U)                                        /*!< SIM_SCGC5.BTLL Mask                     */
#define SIM_SCGC5_BTLL_SHIFT                     (27U)                                               /*!< SIM_SCGC5.BTLL Position                 */
#define SIM_SCGC5_BTLL(x)                        (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< SIM_SCGC5.BTLL Field                    */
#define SIM_SCGC5_PHYDIG_MASK                    (0x10000000U)                                       /*!< SIM_SCGC5.PHYDIG Mask                   */
#define SIM_SCGC5_PHYDIG_SHIFT                   (28U)                                               /*!< SIM_SCGC5.PHYDIG Position               */
#define SIM_SCGC5_PHYDIG(x)                      (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< SIM_SCGC5.PHYDIG Field                  */
#define SIM_SCGC5_ZigBee_MASK                    (0x20000000U)                                       /*!< SIM_SCGC5.ZigBee Mask                   */
#define SIM_SCGC5_ZigBee_SHIFT                   (29U)                                               /*!< SIM_SCGC5.ZigBee Position               */
#define SIM_SCGC5_ZigBee(x)                      (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< SIM_SCGC5.ZigBee Field                  */
#define SIM_SCGC5_ANT_MASK                       (0x40000000U)                                       /*!< SIM_SCGC5.ANT Mask                      */
#define SIM_SCGC5_ANT_SHIFT                      (30U)                                               /*!< SIM_SCGC5.ANT Position                  */
#define SIM_SCGC5_ANT(x)                         (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< SIM_SCGC5.ANT Field                     */
#define SIM_SCGC5_GEN_FSK_MASK                   (0x80000000U)                                       /*!< SIM_SCGC5.GEN_FSK Mask                  */
#define SIM_SCGC5_GEN_FSK_SHIFT                  (31U)                                               /*!< SIM_SCGC5.GEN_FSK Position              */
#define SIM_SCGC5_GEN_FSK(x)                     (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< SIM_SCGC5.GEN_FSK Field                 */
/* ------- SCGC6 Bit Fields                         ------ */
#define SIM_SCGC6_FTF_MASK                       (0x1U)                                              /*!< SIM_SCGC6.FTF Mask                      */
#define SIM_SCGC6_FTF_SHIFT                      (0U)                                                /*!< SIM_SCGC6.FTF Position                  */
#define SIM_SCGC6_FTF(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< SIM_SCGC6.FTF Field                     */
#define SIM_SCGC6_DMAMUX0_MASK                   (0x2U)                                              /*!< SIM_SCGC6.DMAMUX0 Mask                  */
#define SIM_SCGC6_DMAMUX0_SHIFT                  (1U)                                                /*!< SIM_SCGC6.DMAMUX0 Position              */
#define SIM_SCGC6_DMAMUX0(x)                     (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< SIM_SCGC6.DMAMUX0 Field                 */
#define SIM_SCGC6_TRNG_MASK                      (0x200U)                                            /*!< SIM_SCGC6.TRNG Mask                     */
#define SIM_SCGC6_TRNG_SHIFT                     (9U)                                                /*!< SIM_SCGC6.TRNG Position                 */
#define SIM_SCGC6_TRNG(x)                        (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< SIM_SCGC6.TRNG Field                    */
#define SIM_SCGC6_SPI0_MASK                      (0x1000U)                                           /*!< SIM_SCGC6.SPI0 Mask                     */
#define SIM_SCGC6_SPI0_SHIFT                     (12U)                                               /*!< SIM_SCGC6.SPI0 Position                 */
#define SIM_SCGC6_SPI0(x)                        (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< SIM_SCGC6.SPI0 Field                    */
#define SIM_SCGC6_SPI1_MASK                      (0x2000U)                                           /*!< SIM_SCGC6.SPI1 Mask                     */
#define SIM_SCGC6_SPI1_SHIFT                     (13U)                                               /*!< SIM_SCGC6.SPI1 Position                 */
#define SIM_SCGC6_SPI1(x)                        (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< SIM_SCGC6.SPI1 Field                    */
#define SIM_SCGC6_PIT_MASK                       (0x800000U)                                         /*!< SIM_SCGC6.PIT Mask                      */
#define SIM_SCGC6_PIT_SHIFT                      (23U)                                               /*!< SIM_SCGC6.PIT Position                  */
#define SIM_SCGC6_PIT(x)                         (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< SIM_SCGC6.PIT Field                     */
#define SIM_SCGC6_TPM0_MASK                      (0x1000000U)                                        /*!< SIM_SCGC6.TPM0 Mask                     */
#define SIM_SCGC6_TPM0_SHIFT                     (24U)                                               /*!< SIM_SCGC6.TPM0 Position                 */
#define SIM_SCGC6_TPM0(x)                        (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< SIM_SCGC6.TPM0 Field                    */
#define SIM_SCGC6_TPM1_MASK                      (0x2000000U)                                        /*!< SIM_SCGC6.TPM1 Mask                     */
#define SIM_SCGC6_TPM1_SHIFT                     (25U)                                               /*!< SIM_SCGC6.TPM1 Position                 */
#define SIM_SCGC6_TPM1(x)                        (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< SIM_SCGC6.TPM1 Field                    */
#define SIM_SCGC6_TPM2_MASK                      (0x4000000U)                                        /*!< SIM_SCGC6.TPM2 Mask                     */
#define SIM_SCGC6_TPM2_SHIFT                     (26U)                                               /*!< SIM_SCGC6.TPM2 Position                 */
#define SIM_SCGC6_TPM2(x)                        (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< SIM_SCGC6.TPM2 Field                    */
#define SIM_SCGC6_ADC0_MASK                      (0x8000000U)                                        /*!< SIM_SCGC6.ADC0 Mask                     */
#define SIM_SCGC6_ADC0_SHIFT                     (27U)                                               /*!< SIM_SCGC6.ADC0 Position                 */
#define SIM_SCGC6_ADC0(x)                        (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< SIM_SCGC6.ADC0 Field                    */
#define SIM_SCGC6_RTC_MASK                       (0x20000000U)                                       /*!< SIM_SCGC6.RTC Mask                      */
#define SIM_SCGC6_RTC_SHIFT                      (29U)                                               /*!< SIM_SCGC6.RTC Position                  */
#define SIM_SCGC6_RTC(x)                         (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< SIM_SCGC6.RTC Field                     */
#define SIM_SCGC6_DAC0_MASK                      (0x80000000U)                                       /*!< SIM_SCGC6.DAC0 Mask                     */
#define SIM_SCGC6_DAC0_SHIFT                     (31U)                                               /*!< SIM_SCGC6.DAC0 Position                 */
#define SIM_SCGC6_DAC0(x)                        (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< SIM_SCGC6.DAC0 Field                    */
/* ------- SCGC7 Bit Fields                         ------ */
#define SIM_SCGC7_DMA_MASK                       (0x100U)                                            /*!< SIM_SCGC7.DMA Mask                      */
#define SIM_SCGC7_DMA_SHIFT                      (8U)                                                /*!< SIM_SCGC7.DMA Position                  */
#define SIM_SCGC7_DMA(x)                         (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< SIM_SCGC7.DMA Field                     */
/* ------- CLKDIV1 Bit Fields                       ------ */
#define SIM_CLKDIV1_OUTDIV4_MASK                 (0x70000U)                                          /*!< SIM_CLKDIV1.OUTDIV4 Mask                */
#define SIM_CLKDIV1_OUTDIV4_SHIFT                (16U)                                               /*!< SIM_CLKDIV1.OUTDIV4 Position            */
#define SIM_CLKDIV1_OUTDIV4(x)                   (((uint32_t)(((uint32_t)(x))<<16U))&0x70000UL)      /*!< SIM_CLKDIV1.OUTDIV4 Field               */
#define SIM_CLKDIV1_OUTDIV1_MASK                 (0xF0000000U)                                       /*!< SIM_CLKDIV1.OUTDIV1 Mask                */
#define SIM_CLKDIV1_OUTDIV1_SHIFT                (28U)                                               /*!< SIM_CLKDIV1.OUTDIV1 Position            */
#define SIM_CLKDIV1_OUTDIV1(x)                   (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL)   /*!< SIM_CLKDIV1.OUTDIV1 Field               */
/* ------- FCFG1 Bit Fields                         ------ */
#define SIM_FCFG1_FLASHDIS_MASK                  (0x1U)                                              /*!< SIM_FCFG1.FLASHDIS Mask                 */
#define SIM_FCFG1_FLASHDIS_SHIFT                 (0U)                                                /*!< SIM_FCFG1.FLASHDIS Position             */
#define SIM_FCFG1_FLASHDIS(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< SIM_FCFG1.FLASHDIS Field                */
#define SIM_FCFG1_FLASHDOZE_MASK                 (0x2U)                                              /*!< SIM_FCFG1.FLASHDOZE Mask                */
#define SIM_FCFG1_FLASHDOZE_SHIFT                (1U)                                                /*!< SIM_FCFG1.FLASHDOZE Position            */
#define SIM_FCFG1_FLASHDOZE(x)                   (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< SIM_FCFG1.FLASHDOZE Field               */
#define SIM_FCFG1_PFSIZE_MASK                    (0xF000000U)                                        /*!< SIM_FCFG1.PFSIZE Mask                   */
#define SIM_FCFG1_PFSIZE_SHIFT                   (24U)                                               /*!< SIM_FCFG1.PFSIZE Position               */
#define SIM_FCFG1_PFSIZE(x)                      (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL)    /*!< SIM_FCFG1.PFSIZE Field                  */
/* ------- FCFG2 Bit Fields                         ------ */
#define SIM_FCFG2_MAXADDR1_MASK                  (0x7F0000U)                                         /*!< SIM_FCFG2.MAXADDR1 Mask                 */
#define SIM_FCFG2_MAXADDR1_SHIFT                 (16U)                                               /*!< SIM_FCFG2.MAXADDR1 Position             */
#define SIM_FCFG2_MAXADDR1(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0x7F0000UL)     /*!< SIM_FCFG2.MAXADDR1 Field                */
#define SIM_FCFG2_MAXADDR0_MASK                  (0x7F000000U)                                       /*!< SIM_FCFG2.MAXADDR0 Mask                 */
#define SIM_FCFG2_MAXADDR0_SHIFT                 (24U)                                               /*!< SIM_FCFG2.MAXADDR0 Position             */
#define SIM_FCFG2_MAXADDR0(x)                    (((uint32_t)(((uint32_t)(x))<<24U))&0x7F000000UL)   /*!< SIM_FCFG2.MAXADDR0 Field                */
/* ------- UIDMH Bit Fields                         ------ */
#define SIM_UIDMH_UID_MASK                       (0xFFFFU)                                           /*!< SIM_UIDMH.UID Mask                      */
#define SIM_UIDMH_UID_SHIFT                      (0U)                                                /*!< SIM_UIDMH.UID Position                  */
#define SIM_UIDMH_UID(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< SIM_UIDMH.UID Field                     */
/* ------- UIDML Bit Fields                         ------ */
#define SIM_UIDML_UID_MASK                       (0xFFFFFFFFU)                                       /*!< SIM_UIDML.UID Mask                      */
#define SIM_UIDML_UID_SHIFT                      (0U)                                                /*!< SIM_UIDML.UID Position                  */
#define SIM_UIDML_UID(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< SIM_UIDML.UID Field                     */
/* ------- UIDL Bit Fields                          ------ */
#define SIM_UIDL_UID_MASK                        (0xFFFFFFFFU)                                       /*!< SIM_UIDL.UID Mask                       */
#define SIM_UIDL_UID_SHIFT                       (0U)                                                /*!< SIM_UIDL.UID Position                   */
#define SIM_UIDL_UID(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< SIM_UIDL.UID Field                      */
/* ------- COPC Bit Fields                          ------ */
#define SIM_COPC_COPW_MASK                       (0x1U)                                              /*!< SIM_COPC.COPW Mask                      */
#define SIM_COPC_COPW_SHIFT                      (0U)                                                /*!< SIM_COPC.COPW Position                  */
#define SIM_COPC_COPW(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< SIM_COPC.COPW Field                     */
#define SIM_COPC_COPCLKS_MASK                    (0x2U)                                              /*!< SIM_COPC.COPCLKS Mask                   */
#define SIM_COPC_COPCLKS_SHIFT                   (1U)                                                /*!< SIM_COPC.COPCLKS Position               */
#define SIM_COPC_COPCLKS(x)                      (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< SIM_COPC.COPCLKS Field                  */
#define SIM_COPC_COPT_MASK                       (0xCU)                                              /*!< SIM_COPC.COPT Mask                      */
#define SIM_COPC_COPT_SHIFT                      (2U)                                                /*!< SIM_COPC.COPT Position                  */
#define SIM_COPC_COPT(x)                         (((uint32_t)(((uint32_t)(x))<<2U))&0xCUL)           /*!< SIM_COPC.COPT Field                     */
#define SIM_COPC_COPSTPEN_MASK                   (0x10U)                                             /*!< SIM_COPC.COPSTPEN Mask                  */
#define SIM_COPC_COPSTPEN_SHIFT                  (4U)                                                /*!< SIM_COPC.COPSTPEN Position              */
#define SIM_COPC_COPSTPEN(x)                     (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< SIM_COPC.COPSTPEN Field                 */
#define SIM_COPC_COPDBGEN_MASK                   (0x20U)                                             /*!< SIM_COPC.COPDBGEN Mask                  */
#define SIM_COPC_COPDBGEN_SHIFT                  (5U)                                                /*!< SIM_COPC.COPDBGEN Position              */
#define SIM_COPC_COPDBGEN(x)                     (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< SIM_COPC.COPDBGEN Field                 */
#define SIM_COPC_COPCLKSEL_MASK                  (0xC0U)                                             /*!< SIM_COPC.COPCLKSEL Mask                 */
#define SIM_COPC_COPCLKSEL_SHIFT                 (6U)                                                /*!< SIM_COPC.COPCLKSEL Position             */
#define SIM_COPC_COPCLKSEL(x)                    (((uint32_t)(((uint32_t)(x))<<6U))&0xC0UL)          /*!< SIM_COPC.COPCLKSEL Field                */
/* ------- SRVCOP Bit Fields                        ------ */
#define SIM_SRVCOP_SRVCOP_MASK                   (0xFFU)                                             /*!< SIM_SRVCOP.SRVCOP Mask                  */
#define SIM_SRVCOP_SRVCOP_SHIFT                  (0U)                                                /*!< SIM_SRVCOP.SRVCOP Position              */
#define SIM_SRVCOP_SRVCOP(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< SIM_SRVCOP.SRVCOP Field                 */
/**
 * @} */ /* End group SIM_Register_Masks_GROUP 
 */

/* SIM - Peripheral instance base addresses */
#define SIM_BasePtr                    0x40047000UL //!< Peripheral base address
#define SIM                            ((SIM_Type *) SIM_BasePtr) //!< Freescale base pointer
#define SIM_BASE_PTR                   (SIM) //!< Freescale style base pointer
/**
 * @} */ /* End group SIM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup SMC_Peripheral_access_layer_GROUP SMC Peripheral Access Layer
* @brief C Struct for SMC
* @{
*/

/* ================================================================================ */
/* ================           SMC (file:SMC_RAM2PO_MKW41Z4)        ================ */
/* ================================================================================ */

/**
 * @brief System Mode Controller
 */
/**
* @addtogroup SMC_structs_GROUP SMC struct
* @brief Struct for SMC
* @{
*/
typedef struct SMC_Type {
   __IO uint8_t   PMPROT;                       /**< 0000: Power Mode Protection Register                               */
   __IO uint8_t   PMCTRL;                       /**< 0001: Power Mode Control Register                                  */
   union {                                      /**< 0002: (size=0001)                                                  */
      __IO uint8_t   STOPCTRL;                  /**< 0002: Stop Control Register                                        */
      __IO uint8_t   VLLSCTRL;                  /**< 0002: VLLS Control Register (old name)                             */
   };
   __I  uint8_t   PMSTAT;                       /**< 0003: Power Mode Status Register                                   */
} SMC_Type;

/**
 * @} */ /* End group SMC_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'SMC' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup SMC_Register_Masks_GROUP SMC Register Masks
* @brief Register Masks for SMC
* @{
*/
/* ------- PMPROT Bit Fields                        ------ */
#define SMC_PMPROT_AVLLS_MASK                    (0x2U)                                              /*!< SMC_PMPROT.AVLLS Mask                   */
#define SMC_PMPROT_AVLLS_SHIFT                   (1U)                                                /*!< SMC_PMPROT.AVLLS Position               */
#define SMC_PMPROT_AVLLS(x)                      (((uint8_t)(((uint8_t)(x))<<1U))&0x2UL)             /*!< SMC_PMPROT.AVLLS Field                  */
#define SMC_PMPROT_ALLS_MASK                     (0x8U)                                              /*!< SMC_PMPROT.ALLS Mask                    */
#define SMC_PMPROT_ALLS_SHIFT                    (3U)                                                /*!< SMC_PMPROT.ALLS Position                */
#define SMC_PMPROT_ALLS(x)                       (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< SMC_PMPROT.ALLS Field                   */
#define SMC_PMPROT_AVLP_MASK                     (0x20U)                                             /*!< SMC_PMPROT.AVLP Mask                    */
#define SMC_PMPROT_AVLP_SHIFT                    (5U)                                                /*!< SMC_PMPROT.AVLP Position                */
#define SMC_PMPROT_AVLP(x)                       (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< SMC_PMPROT.AVLP Field                   */
/* ------- PMCTRL Bit Fields                        ------ */
#define SMC_PMCTRL_STOPM_MASK                    (0x7U)                                              /*!< SMC_PMCTRL.STOPM Mask                   */
#define SMC_PMCTRL_STOPM_SHIFT                   (0U)                                                /*!< SMC_PMCTRL.STOPM Position               */
#define SMC_PMCTRL_STOPM(x)                      (((uint8_t)(((uint8_t)(x))<<0U))&0x7UL)             /*!< SMC_PMCTRL.STOPM Field                  */
#define SMC_PMCTRL_STOPA_MASK                    (0x8U)                                              /*!< SMC_PMCTRL.STOPA Mask                   */
#define SMC_PMCTRL_STOPA_SHIFT                   (3U)                                                /*!< SMC_PMCTRL.STOPA Position               */
#define SMC_PMCTRL_STOPA(x)                      (((uint8_t)(((uint8_t)(x))<<3U))&0x8UL)             /*!< SMC_PMCTRL.STOPA Field                  */
#define SMC_PMCTRL_RUNM_MASK                     (0x60U)                                             /*!< SMC_PMCTRL.RUNM Mask                    */
#define SMC_PMCTRL_RUNM_SHIFT                    (5U)                                                /*!< SMC_PMCTRL.RUNM Position                */
#define SMC_PMCTRL_RUNM(x)                       (((uint8_t)(((uint8_t)(x))<<5U))&0x60UL)            /*!< SMC_PMCTRL.RUNM Field                   */
/* ------- STOPCTRL Bit Fields                      ------ */
#define SMC_STOPCTRL_LLSM_MASK                   (0x7U)                                              /*!< SMC_STOPCTRL.LLSM Mask                  */
#define SMC_STOPCTRL_LLSM_SHIFT                  (0U)                                                /*!< SMC_STOPCTRL.LLSM Position              */
#define SMC_STOPCTRL_LLSM(x)                     (((uint8_t)(((uint8_t)(x))<<0U))&0x7UL)             /*!< SMC_STOPCTRL.LLSM Field                 */
#define SMC_STOPCTRL_RAM2PO_MASK                 (0x10U)                                             /*!< SMC_STOPCTRL.RAM2PO Mask                */
#define SMC_STOPCTRL_RAM2PO_SHIFT                (4U)                                                /*!< SMC_STOPCTRL.RAM2PO Position            */
#define SMC_STOPCTRL_RAM2PO(x)                   (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< SMC_STOPCTRL.RAM2PO Field               */
#define SMC_STOPCTRL_PORPO_MASK                  (0x20U)                                             /*!< SMC_STOPCTRL.PORPO Mask                 */
#define SMC_STOPCTRL_PORPO_SHIFT                 (5U)                                                /*!< SMC_STOPCTRL.PORPO Position             */
#define SMC_STOPCTRL_PORPO(x)                    (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< SMC_STOPCTRL.PORPO Field                */
#define SMC_STOPCTRL_PSTOPO_MASK                 (0xC0U)                                             /*!< SMC_STOPCTRL.PSTOPO Mask                */
#define SMC_STOPCTRL_PSTOPO_SHIFT                (6U)                                                /*!< SMC_STOPCTRL.PSTOPO Position            */
#define SMC_STOPCTRL_PSTOPO(x)                   (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< SMC_STOPCTRL.PSTOPO Field               */
/* ------- VLLSCTRL Bit Fields                      ------ */
#define SMC_VLLSCTRL_LLSM_MASK                   (0x7U)                                              /*!< SMC_VLLSCTRL.LLSM Mask                  */
#define SMC_VLLSCTRL_LLSM_SHIFT                  (0U)                                                /*!< SMC_VLLSCTRL.LLSM Position              */
#define SMC_VLLSCTRL_LLSM(x)                     (((uint8_t)(((uint8_t)(x))<<0U))&0x7UL)             /*!< SMC_VLLSCTRL.LLSM Field                 */
#define SMC_VLLSCTRL_RAM2PO_MASK                 (0x10U)                                             /*!< SMC_VLLSCTRL.RAM2PO Mask                */
#define SMC_VLLSCTRL_RAM2PO_SHIFT                (4U)                                                /*!< SMC_VLLSCTRL.RAM2PO Position            */
#define SMC_VLLSCTRL_RAM2PO(x)                   (((uint8_t)(((uint8_t)(x))<<4U))&0x10UL)            /*!< SMC_VLLSCTRL.RAM2PO Field               */
#define SMC_VLLSCTRL_PORPO_MASK                  (0x20U)                                             /*!< SMC_VLLSCTRL.PORPO Mask                 */
#define SMC_VLLSCTRL_PORPO_SHIFT                 (5U)                                                /*!< SMC_VLLSCTRL.PORPO Position             */
#define SMC_VLLSCTRL_PORPO(x)                    (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< SMC_VLLSCTRL.PORPO Field                */
#define SMC_VLLSCTRL_PSTOPO_MASK                 (0xC0U)                                             /*!< SMC_VLLSCTRL.PSTOPO Mask                */
#define SMC_VLLSCTRL_PSTOPO_SHIFT                (6U)                                                /*!< SMC_VLLSCTRL.PSTOPO Position            */
#define SMC_VLLSCTRL_PSTOPO(x)                   (((uint8_t)(((uint8_t)(x))<<6U))&0xC0UL)            /*!< SMC_VLLSCTRL.PSTOPO Field               */
/* ------- PMSTAT Bit Fields                        ------ */
#define SMC_PMSTAT_PMSTAT_MASK                   (0xFFU)                                             /*!< SMC_PMSTAT.PMSTAT Mask                  */
#define SMC_PMSTAT_PMSTAT_SHIFT                  (0U)                                                /*!< SMC_PMSTAT.PMSTAT Position              */
#define SMC_PMSTAT_PMSTAT(x)                     (((uint8_t)(((uint8_t)(x))<<0U))&0xFFUL)            /*!< SMC_PMSTAT.PMSTAT Field                 */
/**
 * @} */ /* End group SMC_Register_Masks_GROUP 
 */

/* SMC - Peripheral instance base addresses */
#define SMC_BasePtr                    0x4007E000UL //!< Peripheral base address
#define SMC                            ((SMC_Type *) SMC_BasePtr) //!< Freescale base pointer
#define SMC_BASE_PTR                   (SMC) //!< Freescale style base pointer
/**
 * @} */ /* End group SMC_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup SPI_Peripheral_access_layer_GROUP SPI Peripheral Access Layer
* @brief C Struct for SPI
* @{
*/

/* ================================================================================ */
/* ================           SPI0 (file:SPI0_PCSIS4_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief Serial Peripheral Interface
 */
/**
* @addtogroup SPI_structs_GROUP SPI struct
* @brief Struct for SPI
* @{
*/
typedef struct SPI_Type {
   __IO uint32_t  MCR;                          /**< 0000: Module Configuration Register                                */
        uint8_t   RESERVED_0[4];                /**< 0004: 0x4 bytes                                                    */
   __IO uint32_t  TCR;                          /**< 0008: Transfer Count Register                                      */
   union {                                      /**< 000C: (size=0008)                                                  */
      __IO uint32_t  CTAR[2];                   /**< 000C: Clock and Transfer Attributes Register (In Master Mode)      */
      __IO uint32_t  CTAR_SLAVE;                /**< 000C: Clock and Transfer Attributes Register (In Slave Mode)       */
   };
        uint8_t   RESERVED_1[24];               /**< 0014: 0x18 bytes                                                   */
   __IO uint32_t  SR;                           /**< 002C: Status register                                              */
   __IO uint32_t  RSER;                         /**< 0030: DMA/Interrupt Request Select and Enable Register             */
   union {                                      /**< 0034: (size=0004)                                                  */
      __IO uint32_t  PUSHR;                     /**< 0034: PUSH TX FIFO Register In Master Mode                         */
      __IO uint32_t  PUSHR_SLAVE;               /**< 0034: PUSH TX FIFO Register In Slave Mode                          */
   };
   __I  uint32_t  POPR;                         /**< 0038: POP RX FIFO Register                                         */
   __I  uint32_t  TXFR[4];                      /**< 003C: Transmit FIFO                                                */
        uint8_t   RESERVED_2[48];               /**< 004C: 0x30 bytes                                                   */
   __I  uint32_t  RXFR[4];                      /**< 007C: Receive FIFO                                                 */
} SPI_Type;

/**
 * @} */ /* End group SPI_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'SPI0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup SPI_Register_Masks_GROUP SPI Register Masks
* @brief Register Masks for SPI
* @{
*/
/* ------- MCR Bit Fields                           ------ */
#define SPI_MCR_HALT_MASK                        (0x1U)                                              /*!< SPI0_MCR.HALT Mask                      */
#define SPI_MCR_HALT_SHIFT                       (0U)                                                /*!< SPI0_MCR.HALT Position                  */
#define SPI_MCR_HALT(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< SPI0_MCR.HALT Field                     */
#define SPI_MCR_SMPL_PT_MASK                     (0x300U)                                            /*!< SPI0_MCR.SMPL_PT Mask                   */
#define SPI_MCR_SMPL_PT_SHIFT                    (8U)                                                /*!< SPI0_MCR.SMPL_PT Position               */
#define SPI_MCR_SMPL_PT(x)                       (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)         /*!< SPI0_MCR.SMPL_PT Field                  */
#define SPI_MCR_CLR_RXF_MASK                     (0x400U)                                            /*!< SPI0_MCR.CLR_RXF Mask                   */
#define SPI_MCR_CLR_RXF_SHIFT                    (10U)                                               /*!< SPI0_MCR.CLR_RXF Position               */
#define SPI_MCR_CLR_RXF(x)                       (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< SPI0_MCR.CLR_RXF Field                  */
#define SPI_MCR_CLR_TXF_MASK                     (0x800U)                                            /*!< SPI0_MCR.CLR_TXF Mask                   */
#define SPI_MCR_CLR_TXF_SHIFT                    (11U)                                               /*!< SPI0_MCR.CLR_TXF Position               */
#define SPI_MCR_CLR_TXF(x)                       (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< SPI0_MCR.CLR_TXF Field                  */
#define SPI_MCR_DIS_RXF_MASK                     (0x1000U)                                           /*!< SPI0_MCR.DIS_RXF Mask                   */
#define SPI_MCR_DIS_RXF_SHIFT                    (12U)                                               /*!< SPI0_MCR.DIS_RXF Position               */
#define SPI_MCR_DIS_RXF(x)                       (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< SPI0_MCR.DIS_RXF Field                  */
#define SPI_MCR_DIS_TXF_MASK                     (0x2000U)                                           /*!< SPI0_MCR.DIS_TXF Mask                   */
#define SPI_MCR_DIS_TXF_SHIFT                    (13U)                                               /*!< SPI0_MCR.DIS_TXF Position               */
#define SPI_MCR_DIS_TXF(x)                       (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< SPI0_MCR.DIS_TXF Field                  */
#define SPI_MCR_MDIS_MASK                        (0x4000U)                                           /*!< SPI0_MCR.MDIS Mask                      */
#define SPI_MCR_MDIS_SHIFT                       (14U)                                               /*!< SPI0_MCR.MDIS Position                  */
#define SPI_MCR_MDIS(x)                          (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< SPI0_MCR.MDIS Field                     */
#define SPI_MCR_DOZE_MASK                        (0x8000U)                                           /*!< SPI0_MCR.DOZE Mask                      */
#define SPI_MCR_DOZE_SHIFT                       (15U)                                               /*!< SPI0_MCR.DOZE Position                  */
#define SPI_MCR_DOZE(x)                          (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< SPI0_MCR.DOZE Field                     */
#define SPI_MCR_PCSIS_MASK                       (0xF0000U)                                          /*!< SPI0_MCR.PCSIS Mask                     */
#define SPI_MCR_PCSIS_SHIFT                      (16U)                                               /*!< SPI0_MCR.PCSIS Position                 */
#define SPI_MCR_PCSIS(x)                         (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< SPI0_MCR.PCSIS Field                    */
#define SPI_MCR_ROOE_MASK                        (0x1000000U)                                        /*!< SPI0_MCR.ROOE Mask                      */
#define SPI_MCR_ROOE_SHIFT                       (24U)                                               /*!< SPI0_MCR.ROOE Position                  */
#define SPI_MCR_ROOE(x)                          (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< SPI0_MCR.ROOE Field                     */
#define SPI_MCR_MTFE_MASK                        (0x4000000U)                                        /*!< SPI0_MCR.MTFE Mask                      */
#define SPI_MCR_MTFE_SHIFT                       (26U)                                               /*!< SPI0_MCR.MTFE Position                  */
#define SPI_MCR_MTFE(x)                          (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< SPI0_MCR.MTFE Field                     */
#define SPI_MCR_FRZ_MASK                         (0x8000000U)                                        /*!< SPI0_MCR.FRZ Mask                       */
#define SPI_MCR_FRZ_SHIFT                        (27U)                                               /*!< SPI0_MCR.FRZ Position                   */
#define SPI_MCR_FRZ(x)                           (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< SPI0_MCR.FRZ Field                      */
#define SPI_MCR_DCONF_MASK                       (0x30000000U)                                       /*!< SPI0_MCR.DCONF Mask                     */
#define SPI_MCR_DCONF_SHIFT                      (28U)                                               /*!< SPI0_MCR.DCONF Position                 */
#define SPI_MCR_DCONF(x)                         (((uint32_t)(((uint32_t)(x))<<28U))&0x30000000UL)   /*!< SPI0_MCR.DCONF Field                    */
#define SPI_MCR_CONT_SCKE_MASK                   (0x40000000U)                                       /*!< SPI0_MCR.CONT_SCKE Mask                 */
#define SPI_MCR_CONT_SCKE_SHIFT                  (30U)                                               /*!< SPI0_MCR.CONT_SCKE Position             */
#define SPI_MCR_CONT_SCKE(x)                     (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< SPI0_MCR.CONT_SCKE Field                */
#define SPI_MCR_MSTR_MASK                        (0x80000000U)                                       /*!< SPI0_MCR.MSTR Mask                      */
#define SPI_MCR_MSTR_SHIFT                       (31U)                                               /*!< SPI0_MCR.MSTR Position                  */
#define SPI_MCR_MSTR(x)                          (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< SPI0_MCR.MSTR Field                     */
/* ------- TCR Bit Fields                           ------ */
#define SPI_TCR_SPI_TCNT_MASK                    (0xFFFF0000U)                                       /*!< SPI0_TCR.SPI_TCNT Mask                  */
#define SPI_TCR_SPI_TCNT_SHIFT                   (16U)                                               /*!< SPI0_TCR.SPI_TCNT Position              */
#define SPI_TCR_SPI_TCNT(x)                      (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< SPI0_TCR.SPI_TCNT Field                 */
/* ------- CTAR Bit Fields                          ------ */
#define SPI_CTAR_BR_MASK                         (0xFU)                                              /*!< SPI0_CTAR.BR Mask                       */
#define SPI_CTAR_BR_SHIFT                        (0U)                                                /*!< SPI0_CTAR.BR Position                   */
#define SPI_CTAR_BR(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< SPI0_CTAR.BR Field                      */
#define SPI_CTAR_DT_MASK                         (0xF0U)                                             /*!< SPI0_CTAR.DT Mask                       */
#define SPI_CTAR_DT_SHIFT                        (4U)                                                /*!< SPI0_CTAR.DT Position                   */
#define SPI_CTAR_DT(x)                           (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)          /*!< SPI0_CTAR.DT Field                      */
#define SPI_CTAR_ASC_MASK                        (0xF00U)                                            /*!< SPI0_CTAR.ASC Mask                      */
#define SPI_CTAR_ASC_SHIFT                       (8U)                                                /*!< SPI0_CTAR.ASC Position                  */
#define SPI_CTAR_ASC(x)                          (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< SPI0_CTAR.ASC Field                     */
#define SPI_CTAR_CSSCK_MASK                      (0xF000U)                                           /*!< SPI0_CTAR.CSSCK Mask                    */
#define SPI_CTAR_CSSCK_SHIFT                     (12U)                                               /*!< SPI0_CTAR.CSSCK Position                */
#define SPI_CTAR_CSSCK(x)                        (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< SPI0_CTAR.CSSCK Field                   */
#define SPI_CTAR_PBR_MASK                        (0x30000U)                                          /*!< SPI0_CTAR.PBR Mask                      */
#define SPI_CTAR_PBR_SHIFT                       (16U)                                               /*!< SPI0_CTAR.PBR Position                  */
#define SPI_CTAR_PBR(x)                          (((uint32_t)(((uint32_t)(x))<<16U))&0x30000UL)      /*!< SPI0_CTAR.PBR Field                     */
#define SPI_CTAR_PDT_MASK                        (0xC0000U)                                          /*!< SPI0_CTAR.PDT Mask                      */
#define SPI_CTAR_PDT_SHIFT                       (18U)                                               /*!< SPI0_CTAR.PDT Position                  */
#define SPI_CTAR_PDT(x)                          (((uint32_t)(((uint32_t)(x))<<18U))&0xC0000UL)      /*!< SPI0_CTAR.PDT Field                     */
#define SPI_CTAR_PASC_MASK                       (0x300000U)                                         /*!< SPI0_CTAR.PASC Mask                     */
#define SPI_CTAR_PASC_SHIFT                      (20U)                                               /*!< SPI0_CTAR.PASC Position                 */
#define SPI_CTAR_PASC(x)                         (((uint32_t)(((uint32_t)(x))<<20U))&0x300000UL)     /*!< SPI0_CTAR.PASC Field                    */
#define SPI_CTAR_PCSSCK_MASK                     (0xC00000U)                                         /*!< SPI0_CTAR.PCSSCK Mask                   */
#define SPI_CTAR_PCSSCK_SHIFT                    (22U)                                               /*!< SPI0_CTAR.PCSSCK Position               */
#define SPI_CTAR_PCSSCK(x)                       (((uint32_t)(((uint32_t)(x))<<22U))&0xC00000UL)     /*!< SPI0_CTAR.PCSSCK Field                  */
#define SPI_CTAR_LSBFE_MASK                      (0x1000000U)                                        /*!< SPI0_CTAR.LSBFE Mask                    */
#define SPI_CTAR_LSBFE_SHIFT                     (24U)                                               /*!< SPI0_CTAR.LSBFE Position                */
#define SPI_CTAR_LSBFE(x)                        (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< SPI0_CTAR.LSBFE Field                   */
#define SPI_CTAR_MODE_MASK                       (0x6000000U)                                        /*!< SPI0_CTAR.MODE Mask                     */
#define SPI_CTAR_MODE_SHIFT                      (25U)                                               /*!< SPI0_CTAR.MODE Position                 */
#define SPI_CTAR_MODE(x)                         (((uint32_t)(((uint32_t)(x))<<25U))&0x6000000UL)    /*!< SPI0_CTAR.MODE Field                    */
#define SPI_CTAR_CPHA_MASK                       (0x2000000U)                                        /*!< SPI0_CTAR.CPHA Mask                     */
#define SPI_CTAR_CPHA_SHIFT                      (25U)                                               /*!< SPI0_CTAR.CPHA Position                 */
#define SPI_CTAR_CPHA(x)                         (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< SPI0_CTAR.CPHA Field                    */
#define SPI_CTAR_CPOL_MASK                       (0x4000000U)                                        /*!< SPI0_CTAR.CPOL Mask                     */
#define SPI_CTAR_CPOL_SHIFT                      (26U)                                               /*!< SPI0_CTAR.CPOL Position                 */
#define SPI_CTAR_CPOL(x)                         (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< SPI0_CTAR.CPOL Field                    */
#define SPI_CTAR_FMSZ_MASK                       (0x78000000U)                                       /*!< SPI0_CTAR.FMSZ Mask                     */
#define SPI_CTAR_FMSZ_SHIFT                      (27U)                                               /*!< SPI0_CTAR.FMSZ Position                 */
#define SPI_CTAR_FMSZ(x)                         (((uint32_t)(((uint32_t)(x))<<27U))&0x78000000UL)   /*!< SPI0_CTAR.FMSZ Field                    */
#define SPI_CTAR_DBR_MASK                        (0x80000000U)                                       /*!< SPI0_CTAR.DBR Mask                      */
#define SPI_CTAR_DBR_SHIFT                       (31U)                                               /*!< SPI0_CTAR.DBR Position                  */
#define SPI_CTAR_DBR(x)                          (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< SPI0_CTAR.DBR Field                     */
/* ------- CTAR_SLAVE Bit Fields                    ------ */
#define SPI_CTAR_SLAVE_MODE_MASK                 (0x6000000U)                                        /*!< SPI0_CTAR_SLAVE.MODE Mask               */
#define SPI_CTAR_SLAVE_MODE_SHIFT                (25U)                                               /*!< SPI0_CTAR_SLAVE.MODE Position           */
#define SPI_CTAR_SLAVE_MODE(x)                   (((uint32_t)(((uint32_t)(x))<<25U))&0x6000000UL)    /*!< SPI0_CTAR_SLAVE.MODE Field              */
#define SPI_CTAR_SLAVE_CPHA_MASK                 (0x2000000U)                                        /*!< SPI0_CTAR_SLAVE.CPHA Mask               */
#define SPI_CTAR_SLAVE_CPHA_SHIFT                (25U)                                               /*!< SPI0_CTAR_SLAVE.CPHA Position           */
#define SPI_CTAR_SLAVE_CPHA(x)                   (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< SPI0_CTAR_SLAVE.CPHA Field              */
#define SPI_CTAR_SLAVE_CPOL_MASK                 (0x4000000U)                                        /*!< SPI0_CTAR_SLAVE.CPOL Mask               */
#define SPI_CTAR_SLAVE_CPOL_SHIFT                (26U)                                               /*!< SPI0_CTAR_SLAVE.CPOL Position           */
#define SPI_CTAR_SLAVE_CPOL(x)                   (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< SPI0_CTAR_SLAVE.CPOL Field              */
#define SPI_CTAR_SLAVE_FMSZ_MASK                 (0xF8000000U)                                       /*!< SPI0_CTAR_SLAVE.FMSZ Mask               */
#define SPI_CTAR_SLAVE_FMSZ_SHIFT                (27U)                                               /*!< SPI0_CTAR_SLAVE.FMSZ Position           */
#define SPI_CTAR_SLAVE_FMSZ(x)                   (((uint32_t)(((uint32_t)(x))<<27U))&0xF8000000UL)   /*!< SPI0_CTAR_SLAVE.FMSZ Field              */
/* ------- SR Bit Fields                            ------ */
#define SPI_SR_POPNXTPTR_MASK                    (0xFU)                                              /*!< SPI0_SR.POPNXTPTR Mask                  */
#define SPI_SR_POPNXTPTR_SHIFT                   (0U)                                                /*!< SPI0_SR.POPNXTPTR Position              */
#define SPI_SR_POPNXTPTR(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< SPI0_SR.POPNXTPTR Field                 */
#define SPI_SR_RXCTR_MASK                        (0xF0U)                                             /*!< SPI0_SR.RXCTR Mask                      */
#define SPI_SR_RXCTR_SHIFT                       (4U)                                                /*!< SPI0_SR.RXCTR Position                  */
#define SPI_SR_RXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)          /*!< SPI0_SR.RXCTR Field                     */
#define SPI_SR_TXNXTPTR_MASK                     (0xF00U)                                            /*!< SPI0_SR.TXNXTPTR Mask                   */
#define SPI_SR_TXNXTPTR_SHIFT                    (8U)                                                /*!< SPI0_SR.TXNXTPTR Position               */
#define SPI_SR_TXNXTPTR(x)                       (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< SPI0_SR.TXNXTPTR Field                  */
#define SPI_SR_TXCTR_MASK                        (0xF000U)                                           /*!< SPI0_SR.TXCTR Mask                      */
#define SPI_SR_TXCTR_SHIFT                       (12U)                                               /*!< SPI0_SR.TXCTR Position                  */
#define SPI_SR_TXCTR(x)                          (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< SPI0_SR.TXCTR Field                     */
#define SPI_SR_RFDF_MASK                         (0x20000U)                                          /*!< SPI0_SR.RFDF Mask                       */
#define SPI_SR_RFDF_SHIFT                        (17U)                                               /*!< SPI0_SR.RFDF Position                   */
#define SPI_SR_RFDF(x)                           (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< SPI0_SR.RFDF Field                      */
#define SPI_SR_RFOF_MASK                         (0x80000U)                                          /*!< SPI0_SR.RFOF Mask                       */
#define SPI_SR_RFOF_SHIFT                        (19U)                                               /*!< SPI0_SR.RFOF Position                   */
#define SPI_SR_RFOF(x)                           (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< SPI0_SR.RFOF Field                      */
#define SPI_SR_TFFF_MASK                         (0x2000000U)                                        /*!< SPI0_SR.TFFF Mask                       */
#define SPI_SR_TFFF_SHIFT                        (25U)                                               /*!< SPI0_SR.TFFF Position                   */
#define SPI_SR_TFFF(x)                           (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< SPI0_SR.TFFF Field                      */
#define SPI_SR_TFUF_MASK                         (0x8000000U)                                        /*!< SPI0_SR.TFUF Mask                       */
#define SPI_SR_TFUF_SHIFT                        (27U)                                               /*!< SPI0_SR.TFUF Position                   */
#define SPI_SR_TFUF(x)                           (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< SPI0_SR.TFUF Field                      */
#define SPI_SR_EOQF_MASK                         (0x10000000U)                                       /*!< SPI0_SR.EOQF Mask                       */
#define SPI_SR_EOQF_SHIFT                        (28U)                                               /*!< SPI0_SR.EOQF Position                   */
#define SPI_SR_EOQF(x)                           (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< SPI0_SR.EOQF Field                      */
#define SPI_SR_TXRXS_MASK                        (0x40000000U)                                       /*!< SPI0_SR.TXRXS Mask                      */
#define SPI_SR_TXRXS_SHIFT                       (30U)                                               /*!< SPI0_SR.TXRXS Position                  */
#define SPI_SR_TXRXS(x)                          (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< SPI0_SR.TXRXS Field                     */
#define SPI_SR_TCF_MASK                          (0x80000000U)                                       /*!< SPI0_SR.TCF Mask                        */
#define SPI_SR_TCF_SHIFT                         (31U)                                               /*!< SPI0_SR.TCF Position                    */
#define SPI_SR_TCF(x)                            (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< SPI0_SR.TCF Field                       */
/* ------- RSER Bit Fields                          ------ */
#define SPI_RSER_RFDF_DIRS_MASK                  (0x10000U)                                          /*!< SPI0_RSER.RFDF_DIRS Mask                */
#define SPI_RSER_RFDF_DIRS_SHIFT                 (16U)                                               /*!< SPI0_RSER.RFDF_DIRS Position            */
#define SPI_RSER_RFDF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< SPI0_RSER.RFDF_DIRS Field               */
#define SPI_RSER_RFDF_RE_MASK                    (0x20000U)                                          /*!< SPI0_RSER.RFDF_RE Mask                  */
#define SPI_RSER_RFDF_RE_SHIFT                   (17U)                                               /*!< SPI0_RSER.RFDF_RE Position              */
#define SPI_RSER_RFDF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< SPI0_RSER.RFDF_RE Field                 */
#define SPI_RSER_RFOF_RE_MASK                    (0x80000U)                                          /*!< SPI0_RSER.RFOF_RE Mask                  */
#define SPI_RSER_RFOF_RE_SHIFT                   (19U)                                               /*!< SPI0_RSER.RFOF_RE Position              */
#define SPI_RSER_RFOF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< SPI0_RSER.RFOF_RE Field                 */
#define SPI_RSER_TFFF_DIRS_MASK                  (0x1000000U)                                        /*!< SPI0_RSER.TFFF_DIRS Mask                */
#define SPI_RSER_TFFF_DIRS_SHIFT                 (24U)                                               /*!< SPI0_RSER.TFFF_DIRS Position            */
#define SPI_RSER_TFFF_DIRS(x)                    (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< SPI0_RSER.TFFF_DIRS Field               */
#define SPI_RSER_TFFF_RE_MASK                    (0x2000000U)                                        /*!< SPI0_RSER.TFFF_RE Mask                  */
#define SPI_RSER_TFFF_RE_SHIFT                   (25U)                                               /*!< SPI0_RSER.TFFF_RE Position              */
#define SPI_RSER_TFFF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< SPI0_RSER.TFFF_RE Field                 */
#define SPI_RSER_TFUF_RE_MASK                    (0x8000000U)                                        /*!< SPI0_RSER.TFUF_RE Mask                  */
#define SPI_RSER_TFUF_RE_SHIFT                   (27U)                                               /*!< SPI0_RSER.TFUF_RE Position              */
#define SPI_RSER_TFUF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< SPI0_RSER.TFUF_RE Field                 */
#define SPI_RSER_EOQF_RE_MASK                    (0x10000000U)                                       /*!< SPI0_RSER.EOQF_RE Mask                  */
#define SPI_RSER_EOQF_RE_SHIFT                   (28U)                                               /*!< SPI0_RSER.EOQF_RE Position              */
#define SPI_RSER_EOQF_RE(x)                      (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< SPI0_RSER.EOQF_RE Field                 */
#define SPI_RSER_TCF_RE_MASK                     (0x80000000U)                                       /*!< SPI0_RSER.TCF_RE Mask                   */
#define SPI_RSER_TCF_RE_SHIFT                    (31U)                                               /*!< SPI0_RSER.TCF_RE Position               */
#define SPI_RSER_TCF_RE(x)                       (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< SPI0_RSER.TCF_RE Field                  */
/* ------- PUSHR Bit Fields                         ------ */
#define SPI_PUSHR_TXDATA_MASK                    (0xFFFFU)                                           /*!< SPI0_PUSHR.TXDATA Mask                  */
#define SPI_PUSHR_TXDATA_SHIFT                   (0U)                                                /*!< SPI0_PUSHR.TXDATA Position              */
#define SPI_PUSHR_TXDATA(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< SPI0_PUSHR.TXDATA Field                 */
#define SPI_PUSHR_PCS_MASK                       (0xF0000U)                                          /*!< SPI0_PUSHR.PCS Mask                     */
#define SPI_PUSHR_PCS_SHIFT                      (16U)                                               /*!< SPI0_PUSHR.PCS Position                 */
#define SPI_PUSHR_PCS(x)                         (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< SPI0_PUSHR.PCS Field                    */
#define SPI_PUSHR_CTCNT_MASK                     (0x4000000U)                                        /*!< SPI0_PUSHR.CTCNT Mask                   */
#define SPI_PUSHR_CTCNT_SHIFT                    (26U)                                               /*!< SPI0_PUSHR.CTCNT Position               */
#define SPI_PUSHR_CTCNT(x)                       (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< SPI0_PUSHR.CTCNT Field                  */
#define SPI_PUSHR_EOQ_MASK                       (0x8000000U)                                        /*!< SPI0_PUSHR.EOQ Mask                     */
#define SPI_PUSHR_EOQ_SHIFT                      (27U)                                               /*!< SPI0_PUSHR.EOQ Position                 */
#define SPI_PUSHR_EOQ(x)                         (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< SPI0_PUSHR.EOQ Field                    */
#define SPI_PUSHR_CTAS_MASK                      (0x70000000U)                                       /*!< SPI0_PUSHR.CTAS Mask                    */
#define SPI_PUSHR_CTAS_SHIFT                     (28U)                                               /*!< SPI0_PUSHR.CTAS Position                */
#define SPI_PUSHR_CTAS(x)                        (((uint32_t)(((uint32_t)(x))<<28U))&0x70000000UL)   /*!< SPI0_PUSHR.CTAS Field                   */
#define SPI_PUSHR_CONT_MASK                      (0x80000000U)                                       /*!< SPI0_PUSHR.CONT Mask                    */
#define SPI_PUSHR_CONT_SHIFT                     (31U)                                               /*!< SPI0_PUSHR.CONT Position                */
#define SPI_PUSHR_CONT(x)                        (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< SPI0_PUSHR.CONT Field                   */
/* ------- PUSHR_SLAVE Bit Fields                   ------ */
#define SPI_PUSHR_SLAVE_TXDATA_MASK              (0xFFFFU)                                           /*!< SPI0_PUSHR_SLAVE.TXDATA Mask            */
#define SPI_PUSHR_SLAVE_TXDATA_SHIFT             (0U)                                                /*!< SPI0_PUSHR_SLAVE.TXDATA Position        */
#define SPI_PUSHR_SLAVE_TXDATA(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< SPI0_PUSHR_SLAVE.TXDATA Field           */
/* ------- POPR Bit Fields                          ------ */
#define SPI_POPR_RXDATA_MASK                     (0xFFFFFFFFU)                                       /*!< SPI0_POPR.RXDATA Mask                   */
#define SPI_POPR_RXDATA_SHIFT                    (0U)                                                /*!< SPI0_POPR.RXDATA Position               */
#define SPI_POPR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< SPI0_POPR.RXDATA Field                  */
/* ------- TXFR Bit Fields                          ------ */
#define SPI_TXFR_TXDATA_MASK                     (0xFFFFU)                                           /*!< SPI0_TXFR.TXDATA Mask                   */
#define SPI_TXFR_TXDATA_SHIFT                    (0U)                                                /*!< SPI0_TXFR.TXDATA Position               */
#define SPI_TXFR_TXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< SPI0_TXFR.TXDATA Field                  */
#define SPI_TXFR_TXCMD_TXDATA_MASK               (0xFFFF0000U)                                       /*!< SPI0_TXFR.TXCMD_TXDATA Mask             */
#define SPI_TXFR_TXCMD_TXDATA_SHIFT              (16U)                                               /*!< SPI0_TXFR.TXCMD_TXDATA Position         */
#define SPI_TXFR_TXCMD_TXDATA(x)                 (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< SPI0_TXFR.TXCMD_TXDATA Field            */
/* ------- RXFR Bit Fields                          ------ */
#define SPI_RXFR_RXDATA_MASK                     (0xFFFFFFFFU)                                       /*!< SPI0_RXFR.RXDATA Mask                   */
#define SPI_RXFR_RXDATA_SHIFT                    (0U)                                                /*!< SPI0_RXFR.RXDATA Position               */
#define SPI_RXFR_RXDATA(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< SPI0_RXFR.RXDATA Field                  */
/**
 * @} */ /* End group SPI_Register_Masks_GROUP 
 */

/* SPI0 - Peripheral instance base addresses */
#define SPI0_BasePtr                   0x4002C000UL //!< Peripheral base address
#define SPI0                           ((SPI_Type *) SPI0_BasePtr) //!< Freescale base pointer
#define SPI0_BASE_PTR                  (SPI0) //!< Freescale style base pointer
#define SPI0_IRQS { SPI0_IRQn,  }

/**
 * @} */ /* End group SPI_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup SPI_Peripheral_access_layer_GROUP SPI Peripheral Access Layer
* @brief C Struct for SPI
* @{
*/

/* ================================================================================ */
/* ================           SPI1 (derived from SPI0)             ================ */
/* ================================================================================ */

/**
 * @brief Serial Peripheral Interface
 */

/* SPI1 - Peripheral instance base addresses */
#define SPI1_BasePtr                   0x4002D000UL //!< Peripheral base address
#define SPI1                           ((SPI_Type *) SPI1_BasePtr) //!< Freescale base pointer
#define SPI1_BASE_PTR                  (SPI1) //!< Freescale style base pointer
#define SPI1_IRQS { SPI1_IRQn,  }

/**
 * @} */ /* End group SPI_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup SYST_Peripheral_access_layer_GROUP SYST Peripheral Access Layer
* @brief C Struct for SYST
* @{
*/

/* ================================================================================ */
/* ================           SYST (file:SYST)                     ================ */
/* ================================================================================ */

/**
 * @brief System timer
 */
/**
* @addtogroup SYST_structs_GROUP SYST struct
* @brief Struct for SYST
* @{
*/
typedef struct SYST_Type {
   __IO uint32_t  CSR;                          /**< 0000: Control and Status Register                                  */
   __IO uint32_t  RVR;                          /**< 0004: Reload Value Register                                        */
   __IO uint32_t  CVR;                          /**< 0008: Current Value Register                                       */
   __I  uint32_t  CALIB;                        /**< 000C: Calibration Value Register                                   */
} SYST_Type;

/**
 * @} */ /* End group SYST_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'SYST' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup SYST_Register_Masks_GROUP SYST Register Masks
* @brief Register Masks for SYST
* @{
*/
/* ------- CSR Bit Fields                           ------ */
#define SYST_CSR_ENABLE_MASK                     (0x1U)                                              /*!< SYST_CSR.ENABLE Mask                    */
#define SYST_CSR_ENABLE_SHIFT                    (0U)                                                /*!< SYST_CSR.ENABLE Position                */
#define SYST_CSR_ENABLE(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< SYST_CSR.ENABLE Field                   */
#define SYST_CSR_TICKINT_MASK                    (0x2U)                                              /*!< SYST_CSR.TICKINT Mask                   */
#define SYST_CSR_TICKINT_SHIFT                   (1U)                                                /*!< SYST_CSR.TICKINT Position               */
#define SYST_CSR_TICKINT(x)                      (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< SYST_CSR.TICKINT Field                  */
#define SYST_CSR_CLKSOURCE_MASK                  (0x4U)                                              /*!< SYST_CSR.CLKSOURCE Mask                 */
#define SYST_CSR_CLKSOURCE_SHIFT                 (2U)                                                /*!< SYST_CSR.CLKSOURCE Position             */
#define SYST_CSR_CLKSOURCE(x)                    (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< SYST_CSR.CLKSOURCE Field                */
#define SYST_CSR_COUNTFLAG_MASK                  (0x10000U)                                          /*!< SYST_CSR.COUNTFLAG Mask                 */
#define SYST_CSR_COUNTFLAG_SHIFT                 (16U)                                               /*!< SYST_CSR.COUNTFLAG Position             */
#define SYST_CSR_COUNTFLAG(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< SYST_CSR.COUNTFLAG Field                */
/* ------- RVR Bit Fields                           ------ */
#define SYST_RVR_RELOAD_MASK                     (0xFFFFFFU)                                         /*!< SYST_RVR.RELOAD Mask                    */
#define SYST_RVR_RELOAD_SHIFT                    (0U)                                                /*!< SYST_RVR.RELOAD Position                */
#define SYST_RVR_RELOAD(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< SYST_RVR.RELOAD Field                   */
/* ------- CVR Bit Fields                           ------ */
#define SYST_CVR_CURRENT_MASK                    (0xFFFFFFU)                                         /*!< SYST_CVR.CURRENT Mask                   */
#define SYST_CVR_CURRENT_SHIFT                   (0U)                                                /*!< SYST_CVR.CURRENT Position               */
#define SYST_CVR_CURRENT(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< SYST_CVR.CURRENT Field                  */
/* ------- CALIB Bit Fields                         ------ */
#define SYST_CALIB_TENMS_MASK                    (0xFFFFFFU)                                         /*!< SYST_CALIB.TENMS Mask                   */
#define SYST_CALIB_TENMS_SHIFT                   (0U)                                                /*!< SYST_CALIB.TENMS Position               */
#define SYST_CALIB_TENMS(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< SYST_CALIB.TENMS Field                  */
#define SYST_CALIB_SKEW_MASK                     (0x40000000U)                                       /*!< SYST_CALIB.SKEW Mask                    */
#define SYST_CALIB_SKEW_SHIFT                    (30U)                                               /*!< SYST_CALIB.SKEW Position                */
#define SYST_CALIB_SKEW(x)                       (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< SYST_CALIB.SKEW Field                   */
#define SYST_CALIB_NOREF_MASK                    (0x80000000U)                                       /*!< SYST_CALIB.NOREF Mask                   */
#define SYST_CALIB_NOREF_SHIFT                   (31U)                                               /*!< SYST_CALIB.NOREF Position               */
#define SYST_CALIB_NOREF(x)                      (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< SYST_CALIB.NOREF Field                  */
/**
 * @} */ /* End group SYST_Register_Masks_GROUP 
 */

/* SYST - Peripheral instance base addresses */
#define SYST_BasePtr                   0xE000E010UL //!< Peripheral base address
#define SYST                           ((SYST_Type *) SYST_BasePtr) //!< Freescale base pointer
#define SYST_BASE_PTR                  (SYST) //!< Freescale style base pointer
/**
 * @} */ /* End group SYST_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup TPM_Peripheral_access_layer_GROUP TPM Peripheral Access Layer
* @brief C Struct for TPM
* @{
*/

/* ================================================================================ */
/* ================           TPM0 (file:TPM0_4CH_MKW41Z4)         ================ */
/* ================================================================================ */

/**
 * @brief Timer/PWM Module (4 channels)
 */
#define TPM_CONTROLS_COUNT   4          /**< Number of FTM channels                             */
/**
* @addtogroup TPM_structs_GROUP TPM struct
* @brief Struct for TPM
* @{
*/
typedef struct TPM_Type {
   __IO uint32_t  SC;                           /**< 0000: Status and Control                                           */
   __IO uint32_t  CNT;                          /**< 0004: Counter                                                      */
   __IO uint32_t  MOD;                          /**< 0008: Modulo                                                       */
   struct {
      __IO uint32_t  CnSC;                      /**< 000C: Channel  Status and Control                                  */
      __IO uint32_t  CnV;                       /**< 0010: Channel  Value                                               */
   } CONTROLS[TPM_CONTROLS_COUNT];              /**< 000C: (cluster: size=0x0020, 32)                                   */
        uint8_t   RESERVED_1[36];               /**< 002C: 0x24 bytes                                                   */
   __IO uint32_t  STATUS;                       /**< 0050: Capture and Compare Status                                   */
        uint8_t   RESERVED_2[16];               /**< 0054: 0x10 bytes                                                   */
   __IO uint32_t  COMBINE;                      /**< 0064: Combine Channel Register                                     */
        uint8_t   RESERVED_3[8];                /**< 0068: 0x8 bytes                                                    */
   __IO uint32_t  POL;                          /**< 0070: Channel Polarity                                             */
        uint8_t   RESERVED_4[4];                /**< 0074: 0x4 bytes                                                    */
   __IO uint32_t  FILTER;                       /**< 0078: Filter Control                                               */
        uint8_t   RESERVED_5[4];                /**< 007C: 0x4 bytes                                                    */
   __IO uint32_t  QDCTRL;                       /**< 0080: Quadrature Decoder Control and Status                        */
   __IO uint32_t  CONF;                         /**< 0084: Configuration                                                */
} TPM_Type;

/**
 * @} */ /* End group TPM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'TPM0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup TPM_Register_Masks_GROUP TPM Register Masks
* @brief Register Masks for TPM
* @{
*/
/* ------- SC Bit Fields                            ------ */
#define TPM_SC_PS_MASK                           (0x7U)                                              /*!< TPM0_SC.PS Mask                         */
#define TPM_SC_PS_SHIFT                          (0U)                                                /*!< TPM0_SC.PS Position                     */
#define TPM_SC_PS(x)                             (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< TPM0_SC.PS Field                        */
#define TPM_SC_CMOD_MASK                         (0x18U)                                             /*!< TPM0_SC.CMOD Mask                       */
#define TPM_SC_CMOD_SHIFT                        (3U)                                                /*!< TPM0_SC.CMOD Position                   */
#define TPM_SC_CMOD(x)                           (((uint32_t)(((uint32_t)(x))<<3U))&0x18UL)          /*!< TPM0_SC.CMOD Field                      */
#define TPM_SC_CPWMS_MASK                        (0x20U)                                             /*!< TPM0_SC.CPWMS Mask                      */
#define TPM_SC_CPWMS_SHIFT                       (5U)                                                /*!< TPM0_SC.CPWMS Position                  */
#define TPM_SC_CPWMS(x)                          (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< TPM0_SC.CPWMS Field                     */
#define TPM_SC_TOIE_MASK                         (0x40U)                                             /*!< TPM0_SC.TOIE Mask                       */
#define TPM_SC_TOIE_SHIFT                        (6U)                                                /*!< TPM0_SC.TOIE Position                   */
#define TPM_SC_TOIE(x)                           (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< TPM0_SC.TOIE Field                      */
#define TPM_SC_TOF_MASK                          (0x80U)                                             /*!< TPM0_SC.TOF Mask                        */
#define TPM_SC_TOF_SHIFT                         (7U)                                                /*!< TPM0_SC.TOF Position                    */
#define TPM_SC_TOF(x)                            (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< TPM0_SC.TOF Field                       */
#define TPM_SC_DMA_MASK                          (0x100U)                                            /*!< TPM0_SC.DMA Mask                        */
#define TPM_SC_DMA_SHIFT                         (8U)                                                /*!< TPM0_SC.DMA Position                    */
#define TPM_SC_DMA(x)                            (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< TPM0_SC.DMA Field                       */
/* ------- CNT Bit Fields                           ------ */
#define TPM_CNT_COUNT_MASK                       (0xFFFFU)                                           /*!< TPM0_CNT.COUNT Mask                     */
#define TPM_CNT_COUNT_SHIFT                      (0U)                                                /*!< TPM0_CNT.COUNT Position                 */
#define TPM_CNT_COUNT(x)                         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TPM0_CNT.COUNT Field                    */
/* ------- MOD Bit Fields                           ------ */
#define TPM_MOD_MOD_MASK                         (0xFFFFU)                                           /*!< TPM0_MOD.MOD Mask                       */
#define TPM_MOD_MOD_SHIFT                        (0U)                                                /*!< TPM0_MOD.MOD Position                   */
#define TPM_MOD_MOD(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TPM0_MOD.MOD Field                      */
/* ------- CnSC Bit Fields                          ------ */
#define TPM_CnSC_DMA_MASK                        (0x1U)                                              /*!< TPM0_CnSC.DMA Mask                      */
#define TPM_CnSC_DMA_SHIFT                       (0U)                                                /*!< TPM0_CnSC.DMA Position                  */
#define TPM_CnSC_DMA(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< TPM0_CnSC.DMA Field                     */
#define TPM_CnSC_ELS_MASK                        (0xCU)                                              /*!< TPM0_CnSC.ELS Mask                      */
#define TPM_CnSC_ELS_SHIFT                       (2U)                                                /*!< TPM0_CnSC.ELS Position                  */
#define TPM_CnSC_ELS(x)                          (((uint32_t)(((uint32_t)(x))<<2U))&0xCUL)           /*!< TPM0_CnSC.ELS Field                     */
#define TPM_CnSC_ELSA_MASK                       (0x4U)                                              /*!< TPM0_CnSC.ELSA Mask                     */
#define TPM_CnSC_ELSA_SHIFT                      (2U)                                                /*!< TPM0_CnSC.ELSA Position                 */
#define TPM_CnSC_ELSA(x)                         (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< TPM0_CnSC.ELSA Field                    */
#define TPM_CnSC_ELSB_MASK                       (0x8U)                                              /*!< TPM0_CnSC.ELSB Mask                     */
#define TPM_CnSC_ELSB_SHIFT                      (3U)                                                /*!< TPM0_CnSC.ELSB Position                 */
#define TPM_CnSC_ELSB(x)                         (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< TPM0_CnSC.ELSB Field                    */
#define TPM_CnSC_MS_MASK                         (0x30U)                                             /*!< TPM0_CnSC.MS Mask                       */
#define TPM_CnSC_MS_SHIFT                        (4U)                                                /*!< TPM0_CnSC.MS Position                   */
#define TPM_CnSC_MS(x)                           (((uint32_t)(((uint32_t)(x))<<4U))&0x30UL)          /*!< TPM0_CnSC.MS Field                      */
#define TPM_CnSC_MSA_MASK                        (0x10U)                                             /*!< TPM0_CnSC.MSA Mask                      */
#define TPM_CnSC_MSA_SHIFT                       (4U)                                                /*!< TPM0_CnSC.MSA Position                  */
#define TPM_CnSC_MSA(x)                          (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< TPM0_CnSC.MSA Field                     */
#define TPM_CnSC_MSB_MASK                        (0x20U)                                             /*!< TPM0_CnSC.MSB Mask                      */
#define TPM_CnSC_MSB_SHIFT                       (5U)                                                /*!< TPM0_CnSC.MSB Position                  */
#define TPM_CnSC_MSB(x)                          (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< TPM0_CnSC.MSB Field                     */
#define TPM_CnSC_CHIE_MASK                       (0x40U)                                             /*!< TPM0_CnSC.CHIE Mask                     */
#define TPM_CnSC_CHIE_SHIFT                      (6U)                                                /*!< TPM0_CnSC.CHIE Position                 */
#define TPM_CnSC_CHIE(x)                         (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< TPM0_CnSC.CHIE Field                    */
#define TPM_CnSC_CHF_MASK                        (0x80U)                                             /*!< TPM0_CnSC.CHF Mask                      */
#define TPM_CnSC_CHF_SHIFT                       (7U)                                                /*!< TPM0_CnSC.CHF Position                  */
#define TPM_CnSC_CHF(x)                          (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< TPM0_CnSC.CHF Field                     */
/* ------- CnV Bit Fields                           ------ */
#define TPM_CnV_VAL_MASK                         (0xFFFFU)                                           /*!< TPM0_CnV.VAL Mask                       */
#define TPM_CnV_VAL_SHIFT                        (0U)                                                /*!< TPM0_CnV.VAL Position                   */
#define TPM_CnV_VAL(x)                           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TPM0_CnV.VAL Field                      */
/* ------- STATUS Bit Fields                        ------ */
#define TPM_STATUS_CH0F_MASK                     (0x1U)                                              /*!< TPM0_STATUS.CH0F Mask                   */
#define TPM_STATUS_CH0F_SHIFT                    (0U)                                                /*!< TPM0_STATUS.CH0F Position               */
#define TPM_STATUS_CH0F(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< TPM0_STATUS.CH0F Field                  */
#define TPM_STATUS_CH1F_MASK                     (0x2U)                                              /*!< TPM0_STATUS.CH1F Mask                   */
#define TPM_STATUS_CH1F_SHIFT                    (1U)                                                /*!< TPM0_STATUS.CH1F Position               */
#define TPM_STATUS_CH1F(x)                       (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< TPM0_STATUS.CH1F Field                  */
#define TPM_STATUS_CH2F_MASK                     (0x4U)                                              /*!< TPM0_STATUS.CH2F Mask                   */
#define TPM_STATUS_CH2F_SHIFT                    (2U)                                                /*!< TPM0_STATUS.CH2F Position               */
#define TPM_STATUS_CH2F(x)                       (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< TPM0_STATUS.CH2F Field                  */
#define TPM_STATUS_CH3F_MASK                     (0x8U)                                              /*!< TPM0_STATUS.CH3F Mask                   */
#define TPM_STATUS_CH3F_SHIFT                    (3U)                                                /*!< TPM0_STATUS.CH3F Position               */
#define TPM_STATUS_CH3F(x)                       (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< TPM0_STATUS.CH3F Field                  */
#define TPM_STATUS_TOF_MASK                      (0x100U)                                            /*!< TPM0_STATUS.TOF Mask                    */
#define TPM_STATUS_TOF_SHIFT                     (8U)                                                /*!< TPM0_STATUS.TOF Position                */
#define TPM_STATUS_TOF(x)                        (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< TPM0_STATUS.TOF Field                   */
/* ------- COMBINE Bit Fields                       ------ */
#define TPM_COMBINE_COMBINE0_MASK                (0x1U)                                              /*!< TPM0_COMBINE.COMBINE0 Mask              */
#define TPM_COMBINE_COMBINE0_SHIFT               (0U)                                                /*!< TPM0_COMBINE.COMBINE0 Position          */
#define TPM_COMBINE_COMBINE0(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< TPM0_COMBINE.COMBINE0 Field             */
#define TPM_COMBINE_COMSWAP0_MASK                (0x2U)                                              /*!< TPM0_COMBINE.COMSWAP0 Mask              */
#define TPM_COMBINE_COMSWAP0_SHIFT               (1U)                                                /*!< TPM0_COMBINE.COMSWAP0 Position          */
#define TPM_COMBINE_COMSWAP0(x)                  (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< TPM0_COMBINE.COMSWAP0 Field             */
#define TPM_COMBINE_COMBINE1_MASK                (0x100U)                                            /*!< TPM0_COMBINE.COMBINE1 Mask              */
#define TPM_COMBINE_COMBINE1_SHIFT               (8U)                                                /*!< TPM0_COMBINE.COMBINE1 Position          */
#define TPM_COMBINE_COMBINE1(x)                  (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< TPM0_COMBINE.COMBINE1 Field             */
#define TPM_COMBINE_COMSWAP1_MASK                (0x200U)                                            /*!< TPM0_COMBINE.COMSWAP1 Mask              */
#define TPM_COMBINE_COMSWAP1_SHIFT               (9U)                                                /*!< TPM0_COMBINE.COMSWAP1 Position          */
#define TPM_COMBINE_COMSWAP1(x)                  (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< TPM0_COMBINE.COMSWAP1 Field             */
/* ------- POL Bit Fields                           ------ */
#define TPM_POL_POL0_MASK                        (0x1U)                                              /*!< TPM0_POL.POL0 Mask                      */
#define TPM_POL_POL0_SHIFT                       (0U)                                                /*!< TPM0_POL.POL0 Position                  */
#define TPM_POL_POL0(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< TPM0_POL.POL0 Field                     */
#define TPM_POL_POL1_MASK                        (0x2U)                                              /*!< TPM0_POL.POL1 Mask                      */
#define TPM_POL_POL1_SHIFT                       (1U)                                                /*!< TPM0_POL.POL1 Position                  */
#define TPM_POL_POL1(x)                          (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< TPM0_POL.POL1 Field                     */
#define TPM_POL_POL2_MASK                        (0x4U)                                              /*!< TPM0_POL.POL2 Mask                      */
#define TPM_POL_POL2_SHIFT                       (2U)                                                /*!< TPM0_POL.POL2 Position                  */
#define TPM_POL_POL2(x)                          (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< TPM0_POL.POL2 Field                     */
#define TPM_POL_POL3_MASK                        (0x8U)                                              /*!< TPM0_POL.POL3 Mask                      */
#define TPM_POL_POL3_SHIFT                       (3U)                                                /*!< TPM0_POL.POL3 Position                  */
#define TPM_POL_POL3(x)                          (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< TPM0_POL.POL3 Field                     */
/* ------- FILTER Bit Fields                        ------ */
#define TPM_FILTER_CH0FVAL_MASK                  (0xFU)                                              /*!< TPM0_FILTER.CH0FVAL Mask                */
#define TPM_FILTER_CH0FVAL_SHIFT                 (0U)                                                /*!< TPM0_FILTER.CH0FVAL Position            */
#define TPM_FILTER_CH0FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< TPM0_FILTER.CH0FVAL Field               */
#define TPM_FILTER_CH1FVAL_MASK                  (0xF0U)                                             /*!< TPM0_FILTER.CH1FVAL Mask                */
#define TPM_FILTER_CH1FVAL_SHIFT                 (4U)                                                /*!< TPM0_FILTER.CH1FVAL Position            */
#define TPM_FILTER_CH1FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)          /*!< TPM0_FILTER.CH1FVAL Field               */
#define TPM_FILTER_CH2FVAL_MASK                  (0xF00U)                                            /*!< TPM0_FILTER.CH2FVAL Mask                */
#define TPM_FILTER_CH2FVAL_SHIFT                 (8U)                                                /*!< TPM0_FILTER.CH2FVAL Position            */
#define TPM_FILTER_CH2FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< TPM0_FILTER.CH2FVAL Field               */
#define TPM_FILTER_CH3FVAL_MASK                  (0xF000U)                                           /*!< TPM0_FILTER.CH3FVAL Mask                */
#define TPM_FILTER_CH3FVAL_SHIFT                 (12U)                                               /*!< TPM0_FILTER.CH3FVAL Position            */
#define TPM_FILTER_CH3FVAL(x)                    (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< TPM0_FILTER.CH3FVAL Field               */
/* ------- QDCTRL Bit Fields                        ------ */
#define TPM_QDCTRL_QUADEN_MASK                   (0x1U)                                              /*!< TPM0_QDCTRL.QUADEN Mask                 */
#define TPM_QDCTRL_QUADEN_SHIFT                  (0U)                                                /*!< TPM0_QDCTRL.QUADEN Position             */
#define TPM_QDCTRL_QUADEN(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< TPM0_QDCTRL.QUADEN Field                */
#define TPM_QDCTRL_TOFDIR_MASK                   (0x2U)                                              /*!< TPM0_QDCTRL.TOFDIR Mask                 */
#define TPM_QDCTRL_TOFDIR_SHIFT                  (1U)                                                /*!< TPM0_QDCTRL.TOFDIR Position             */
#define TPM_QDCTRL_TOFDIR(x)                     (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< TPM0_QDCTRL.TOFDIR Field                */
#define TPM_QDCTRL_QUADIR_MASK                   (0x4U)                                              /*!< TPM0_QDCTRL.QUADIR Mask                 */
#define TPM_QDCTRL_QUADIR_SHIFT                  (2U)                                                /*!< TPM0_QDCTRL.QUADIR Position             */
#define TPM_QDCTRL_QUADIR(x)                     (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< TPM0_QDCTRL.QUADIR Field                */
#define TPM_QDCTRL_QUADMODE_MASK                 (0x8U)                                              /*!< TPM0_QDCTRL.QUADMODE Mask               */
#define TPM_QDCTRL_QUADMODE_SHIFT                (3U)                                                /*!< TPM0_QDCTRL.QUADMODE Position           */
#define TPM_QDCTRL_QUADMODE(x)                   (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< TPM0_QDCTRL.QUADMODE Field              */
/* ------- CONF Bit Fields                          ------ */
#define TPM_CONF_DOZEEN_MASK                     (0x20U)                                             /*!< TPM0_CONF.DOZEEN Mask                   */
#define TPM_CONF_DOZEEN_SHIFT                    (5U)                                                /*!< TPM0_CONF.DOZEEN Position               */
#define TPM_CONF_DOZEEN(x)                       (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< TPM0_CONF.DOZEEN Field                  */
#define TPM_CONF_DBGMODE_MASK                    (0xC0U)                                             /*!< TPM0_CONF.DBGMODE Mask                  */
#define TPM_CONF_DBGMODE_SHIFT                   (6U)                                                /*!< TPM0_CONF.DBGMODE Position              */
#define TPM_CONF_DBGMODE(x)                      (((uint32_t)(((uint32_t)(x))<<6U))&0xC0UL)          /*!< TPM0_CONF.DBGMODE Field                 */
#define TPM_CONF_GTBSYNC_MASK                    (0x100U)                                            /*!< TPM0_CONF.GTBSYNC Mask                  */
#define TPM_CONF_GTBSYNC_SHIFT                   (8U)                                                /*!< TPM0_CONF.GTBSYNC Position              */
#define TPM_CONF_GTBSYNC(x)                      (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< TPM0_CONF.GTBSYNC Field                 */
#define TPM_CONF_GTBEEN_MASK                     (0x200U)                                            /*!< TPM0_CONF.GTBEEN Mask                   */
#define TPM_CONF_GTBEEN_SHIFT                    (9U)                                                /*!< TPM0_CONF.GTBEEN Position               */
#define TPM_CONF_GTBEEN(x)                       (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< TPM0_CONF.GTBEEN Field                  */
#define TPM_CONF_CSOT_MASK                       (0x10000U)                                          /*!< TPM0_CONF.CSOT Mask                     */
#define TPM_CONF_CSOT_SHIFT                      (16U)                                               /*!< TPM0_CONF.CSOT Position                 */
#define TPM_CONF_CSOT(x)                         (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< TPM0_CONF.CSOT Field                    */
#define TPM_CONF_CSOO_MASK                       (0x20000U)                                          /*!< TPM0_CONF.CSOO Mask                     */
#define TPM_CONF_CSOO_SHIFT                      (17U)                                               /*!< TPM0_CONF.CSOO Position                 */
#define TPM_CONF_CSOO(x)                         (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< TPM0_CONF.CSOO Field                    */
#define TPM_CONF_CROT_MASK                       (0x40000U)                                          /*!< TPM0_CONF.CROT Mask                     */
#define TPM_CONF_CROT_SHIFT                      (18U)                                               /*!< TPM0_CONF.CROT Position                 */
#define TPM_CONF_CROT(x)                         (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< TPM0_CONF.CROT Field                    */
#define TPM_CONF_CPOT_MASK                       (0x80000U)                                          /*!< TPM0_CONF.CPOT Mask                     */
#define TPM_CONF_CPOT_SHIFT                      (19U)                                               /*!< TPM0_CONF.CPOT Position                 */
#define TPM_CONF_CPOT(x)                         (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< TPM0_CONF.CPOT Field                    */
#define TPM_CONF_TRGPOL_MASK                     (0x400000U)                                         /*!< TPM0_CONF.TRGPOL Mask                   */
#define TPM_CONF_TRGPOL_SHIFT                    (22U)                                               /*!< TPM0_CONF.TRGPOL Position               */
#define TPM_CONF_TRGPOL(x)                       (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< TPM0_CONF.TRGPOL Field                  */
#define TPM_CONF_TRGSRC_MASK                     (0x800000U)                                         /*!< TPM0_CONF.TRGSRC Mask                   */
#define TPM_CONF_TRGSRC_SHIFT                    (23U)                                               /*!< TPM0_CONF.TRGSRC Position               */
#define TPM_CONF_TRGSRC(x)                       (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< TPM0_CONF.TRGSRC Field                  */
#define TPM_CONF_TRGSEL_MASK                     (0xF000000U)                                        /*!< TPM0_CONF.TRGSEL Mask                   */
#define TPM_CONF_TRGSEL_SHIFT                    (24U)                                               /*!< TPM0_CONF.TRGSEL Position               */
#define TPM_CONF_TRGSEL(x)                       (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL)    /*!< TPM0_CONF.TRGSEL Field                  */
/**
 * @} */ /* End group TPM_Register_Masks_GROUP 
 */

/* TPM0 - Peripheral instance base addresses */
#define TPM0_BasePtr                   0x40038000UL //!< Peripheral base address
#define TPM0                           ((TPM_Type *) TPM0_BasePtr) //!< Freescale base pointer
#define TPM0_BASE_PTR                  (TPM0) //!< Freescale style base pointer
#define TPM0_IRQS { TPM0_IRQn,  }

/**
 * @} */ /* End group TPM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup TPM_Peripheral_access_layer_GROUP TPM Peripheral Access Layer
* @brief C Struct for TPM
* @{
*/

/* ================================================================================ */
/* ================           TPM1 (file:TPM1_2CH_POL_QUAD_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief Timer/PWM Module (2 channels)
 */
#define TPM1_CONTROLS_COUNT  2          /**< Number of FTM channels                             */
/**
* @addtogroup TPM_structs_GROUP TPM struct
* @brief Struct for TPM
* @{
*/
typedef struct TPM1_Type {
   __IO uint32_t  SC;                           /**< 0000: Status and Control                                           */
   __IO uint32_t  CNT;                          /**< 0004: Counter                                                      */
   __IO uint32_t  MOD;                          /**< 0008: Modulo                                                       */
   struct {
      __IO uint32_t  CnSC;                      /**< 000C: Channel  Status and Control                                  */
      __IO uint32_t  CnV;                       /**< 0010: Channel  Value                                               */
   } CONTROLS[TPM1_CONTROLS_COUNT];             /**< 000C: (cluster: size=0x0010, 16)                                   */
        uint8_t   RESERVED_1[52];               /**< 001C: 0x34 bytes                                                   */
   __IO uint32_t  STATUS;                       /**< 0050: Capture and Compare Status                                   */
        uint8_t   RESERVED_2[16];               /**< 0054: 0x10 bytes                                                   */
   __IO uint32_t  COMBINE;                      /**< 0064: Combine Channel Register                                     */
        uint8_t   RESERVED_3[8];                /**< 0068: 0x8 bytes                                                    */
   __IO uint32_t  POL;                          /**< 0070: Channel Polarity                                             */
        uint8_t   RESERVED_4[4];                /**< 0074: 0x4 bytes                                                    */
   __IO uint32_t  FILTER;                       /**< 0078: Filter Control                                               */
        uint8_t   RESERVED_5[4];                /**< 007C: 0x4 bytes                                                    */
   __IO uint32_t  QDCTRL;                       /**< 0080: Quadrature Decoder Control and Status                        */
   __IO uint32_t  CONF;                         /**< 0084: Configuration                                                */
} TPM1_Type;

/**
 * @} */ /* End group TPM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'TPM1' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup TPM_Register_Masks_GROUP TPM Register Masks
* @brief Register Masks for TPM
* @{
*/
/* ------- SC Bit Fields                            ------ */
/* ------- CNT Bit Fields                           ------ */
/* ------- MOD Bit Fields                           ------ */
/* ------- CnSC Bit Fields                          ------ */
/* ------- CnV Bit Fields                           ------ */
/* ------- STATUS Bit Fields                        ------ */
/* ------- COMBINE Bit Fields                       ------ */
/* ------- POL Bit Fields                           ------ */
/* ------- FILTER Bit Fields                        ------ */
/* ------- QDCTRL Bit Fields                        ------ */
/* ------- CONF Bit Fields                          ------ */
/**
 * @} */ /* End group TPM_Register_Masks_GROUP 
 */

/* TPM1 - Peripheral instance base addresses */
#define TPM1_BasePtr                   0x40039000UL //!< Peripheral base address
#define TPM1                           ((TPM1_Type *) TPM1_BasePtr) //!< Freescale base pointer
#define TPM1_BASE_PTR                  (TPM1) //!< Freescale style base pointer
#define TPM1_IRQS { TPM1_IRQn,  }

/**
 * @} */ /* End group TPM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup TPM_Peripheral_access_layer_GROUP TPM Peripheral Access Layer
* @brief C Struct for TPM
* @{
*/

/* ================================================================================ */
/* ================           TPM2 (derived from TPM1)             ================ */
/* ================================================================================ */

/**
 * @brief Timer/PWM Module (2 channels)
 */

/* TPM2 - Peripheral instance base addresses */
#define TPM2_BasePtr                   0x4003A000UL //!< Peripheral base address
#define TPM2                           ((TPM1_Type *) TPM2_BasePtr) //!< Freescale base pointer
#define TPM2_BASE_PTR                  (TPM2) //!< Freescale style base pointer
#define TPM2_IRQS { TPM2_IRQn,  }

/**
 * @} */ /* End group TPM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup TRNG_Peripheral_access_layer_GROUP TRNG Peripheral Access Layer
* @brief C Struct for TRNG
* @{
*/

/* ================================================================================ */
/* ================           TRNG0 (file:TRNG0_0x40029000)        ================ */
/* ================================================================================ */

/**
 * @brief True Random Number Generator
 */
/**
* @addtogroup TRNG_structs_GROUP TRNG struct
* @brief Struct for TRNG
* @{
*/
typedef struct TRNG_Type {
   __IO uint32_t  MCTL;                         /**< 0000: Miscellaneous Control Register                               */
   __IO uint32_t  SCMISC;                       /**< 0004: Statistical Check Miscellaneous Register                     */
   __IO uint32_t  PKRRNG;                       /**< 0008: Poker Range Register                                         */
   union {                                      /**< 000C: (size=0004)                                                  */
      __IO uint32_t  PKRMAX;                    /**< 000C: Poker Maximum Limit Register                                 */
      __I  uint32_t  PKRSQ;                     /**< 000C: Poker Square Calculation Result Register                     */
   };
   __IO uint32_t  SDCTL;                        /**< 0010: Seed Control Register                                        */
   union {                                      /**< 0014: (size=0004)                                                  */
      __IO uint32_t  SBLIM;                     /**< 0014: Sparse Bit Limit Register                                    */
      __I  uint32_t  TOTSAM;                    /**< 0014: Total Samples Register                                       */
   };
   __IO uint32_t  FRQMIN;                       /**< 0018: Frequency Count Minimum Limit Register                       */
   union {                                      /**< 001C: (size=0004)                                                  */
      __I  uint32_t  FRQCNT;                    /**< 001C: Frequency Count Register                                     */
      __IO uint32_t  FRQMAX;                    /**< 001C: Frequency Count Maximum Limit Register                       */
   };
   union {                                      /**< 0020: (size=0004)                                                  */
      __I  uint32_t  SCMC;                      /**< 0020: Statistical Check Monobit Count Register                     */
      __IO uint32_t  SCML;                      /**< 0020: Statistical Check Monobit Limit Register                     */
   };
   union {                                      /**< 0024: (size=0004)                                                  */
      __I  uint32_t  SCR1C;                     /**< 0024: Statistical Check Run Length 1 Count Register                */
      __IO uint32_t  SCR1L;                     /**< 0024: Statistical Check Run Length 1 Limit Register                */
   };
   union {                                      /**< 0028: (size=0004)                                                  */
      __I  uint32_t  SCR2C;                     /**< 0028: Statistical Check Run Length 2 Count Register                */
      __IO uint32_t  SCR2L;                     /**< 0028: Statistical Check Run Length 2 Limit Register                */
   };
   union {                                      /**< 002C: (size=0004)                                                  */
      __I  uint32_t  SCR3C;                     /**< 002C: Statistical Check Run Length 3 Count Register                */
      __IO uint32_t  SCR3L;                     /**< 002C: Statistical Check Run Length 3 Limit Register                */
   };
   union {                                      /**< 0030: (size=0004)                                                  */
      __I  uint32_t  SCR4C;                     /**< 0030: Statistical Check Run Length 4 Count Register                */
      __IO uint32_t  SCR4L;                     /**< 0030: Statistical Check Run Length 4 Limit Register                */
   };
   union {                                      /**< 0034: (size=0004)                                                  */
      __I  uint32_t  SCR5C;                     /**< 0034: Statistical Check Run Length 5 Count Register                */
      __IO uint32_t  SCR5L;                     /**< 0034: Statistical Check Run Length 5 Limit Register                */
   };
   union {                                      /**< 0038: (size=0004)                                                  */
      __I  uint32_t  SCR6PC;                    /**< 0038: Statistical Check Run Length 6+ Count Register               */
      __IO uint32_t  SCR6PL;                    /**< 0038: Statistical Check Run Length 6+ Limit Register               */
   };
   __I  uint32_t  STATUS;                       /**< 003C: Status Register                                              */
   __I  uint32_t  ENT[16];                      /**< 0040: Entropy Read Register                                        */
   __I  uint32_t  PKRCNT10;                     /**< 0080: Statistical Check Poker Count 1 and 0 Register               */
   __I  uint32_t  PKRCNT32;                     /**< 0084: Statistical Check Poker Count 3 and 2 Register               */
   __I  uint32_t  PKRCNT54;                     /**< 0088: Statistical Check Poker Count 5 and 4 Register               */
   __I  uint32_t  PKRCNT76;                     /**< 008C: Statistical Check Poker Count 7 and 6 Register               */
   __I  uint32_t  PKRCNT98;                     /**< 0090: Statistical Check Poker Count 9 and 8 Register               */
   __I  uint32_t  PKRCNTBA;                     /**< 0094: Statistical Check Poker Count B and A Register               */
   __I  uint32_t  PKRCNTDC;                     /**< 0098: Statistical Check Poker Count D and C Register               */
   __I  uint32_t  PKRCNTFE;                     /**< 009C: Statistical Check Poker Count F and E Register               */
        uint8_t   RESERVED_0[16];               /**< 00A0: 0x10 bytes                                                   */
   __IO uint32_t  SEC_CFG;                      /**< 00B0: Security Configuration Register                              */
   __IO uint32_t  INT_CTRL;                     /**< 00B4: Interrupt Control Register                                   */
   __IO uint32_t  INT_MASK;                     /**< 00B8: Mask Register                                                */
   __IO uint32_t  INT_STATUS;                   /**< 00BC: Interrupt Status Register                                    */
        uint8_t   RESERVED_1[48];               /**< 00C0: 0x30 bytes                                                   */
   __I  uint32_t  VID1;                         /**< 00F0: Version ID Register (MS)                                     */
   __I  uint32_t  VID2;                         /**< 00F4: Version ID Register (LS)                                     */
} TRNG_Type;

/**
 * @} */ /* End group TRNG_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'TRNG0' Position & Mask macros                       ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup TRNG_Register_Masks_GROUP TRNG Register Masks
* @brief Register Masks for TRNG
* @{
*/
/* ------- MCTL Bit Fields                          ------ */
#define TRNG_MCTL_SAMP_MODE_MASK                 (0x3U)                                              /*!< TRNG0_MCTL.SAMP_MODE Mask               */
#define TRNG_MCTL_SAMP_MODE_SHIFT                (0U)                                                /*!< TRNG0_MCTL.SAMP_MODE Position           */
#define TRNG_MCTL_SAMP_MODE(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< TRNG0_MCTL.SAMP_MODE Field              */
#define TRNG_MCTL_OSC_DIV_MASK                   (0xCU)                                              /*!< TRNG0_MCTL.OSC_DIV Mask                 */
#define TRNG_MCTL_OSC_DIV_SHIFT                  (2U)                                                /*!< TRNG0_MCTL.OSC_DIV Position             */
#define TRNG_MCTL_OSC_DIV(x)                     (((uint32_t)(((uint32_t)(x))<<2U))&0xCUL)           /*!< TRNG0_MCTL.OSC_DIV Field                */
#define TRNG_MCTL_UNUSED_MASK                    (0x10U)                                             /*!< TRNG0_MCTL.UNUSED Mask                  */
#define TRNG_MCTL_UNUSED_SHIFT                   (4U)                                                /*!< TRNG0_MCTL.UNUSED Position              */
#define TRNG_MCTL_UNUSED(x)                      (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< TRNG0_MCTL.UNUSED Field                 */
#define TRNG_MCTL_TRNG_ACC_MASK                  (0x20U)                                             /*!< TRNG0_MCTL.TRNG_ACC Mask                */
#define TRNG_MCTL_TRNG_ACC_SHIFT                 (5U)                                                /*!< TRNG0_MCTL.TRNG_ACC Position            */
#define TRNG_MCTL_TRNG_ACC(x)                    (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< TRNG0_MCTL.TRNG_ACC Field               */
#define TRNG_MCTL_RST_DEF_MASK                   (0x40U)                                             /*!< TRNG0_MCTL.RST_DEF Mask                 */
#define TRNG_MCTL_RST_DEF_SHIFT                  (6U)                                                /*!< TRNG0_MCTL.RST_DEF Position             */
#define TRNG_MCTL_RST_DEF(x)                     (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< TRNG0_MCTL.RST_DEF Field                */
#define TRNG_MCTL_FOR_SCLK_MASK                  (0x80U)                                             /*!< TRNG0_MCTL.FOR_SCLK Mask                */
#define TRNG_MCTL_FOR_SCLK_SHIFT                 (7U)                                                /*!< TRNG0_MCTL.FOR_SCLK Position            */
#define TRNG_MCTL_FOR_SCLK(x)                    (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< TRNG0_MCTL.FOR_SCLK Field               */
#define TRNG_MCTL_FCT_FAIL_MASK                  (0x100U)                                            /*!< TRNG0_MCTL.FCT_FAIL Mask                */
#define TRNG_MCTL_FCT_FAIL_SHIFT                 (8U)                                                /*!< TRNG0_MCTL.FCT_FAIL Position            */
#define TRNG_MCTL_FCT_FAIL(x)                    (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< TRNG0_MCTL.FCT_FAIL Field               */
#define TRNG_MCTL_FCT_VAL_MASK                   (0x200U)                                            /*!< TRNG0_MCTL.FCT_VAL Mask                 */
#define TRNG_MCTL_FCT_VAL_SHIFT                  (9U)                                                /*!< TRNG0_MCTL.FCT_VAL Position             */
#define TRNG_MCTL_FCT_VAL(x)                     (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< TRNG0_MCTL.FCT_VAL Field                */
#define TRNG_MCTL_ENT_VAL_MASK                   (0x400U)                                            /*!< TRNG0_MCTL.ENT_VAL Mask                 */
#define TRNG_MCTL_ENT_VAL_SHIFT                  (10U)                                               /*!< TRNG0_MCTL.ENT_VAL Position             */
#define TRNG_MCTL_ENT_VAL(x)                     (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< TRNG0_MCTL.ENT_VAL Field                */
#define TRNG_MCTL_TST_OUT_MASK                   (0x800U)                                            /*!< TRNG0_MCTL.TST_OUT Mask                 */
#define TRNG_MCTL_TST_OUT_SHIFT                  (11U)                                               /*!< TRNG0_MCTL.TST_OUT Position             */
#define TRNG_MCTL_TST_OUT(x)                     (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< TRNG0_MCTL.TST_OUT Field                */
#define TRNG_MCTL_ERR_MASK                       (0x1000U)                                           /*!< TRNG0_MCTL.ERR Mask                     */
#define TRNG_MCTL_ERR_SHIFT                      (12U)                                               /*!< TRNG0_MCTL.ERR Position                 */
#define TRNG_MCTL_ERR(x)                         (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< TRNG0_MCTL.ERR Field                    */
#define TRNG_MCTL_TSTOP_OK_MASK                  (0x2000U)                                           /*!< TRNG0_MCTL.TSTOP_OK Mask                */
#define TRNG_MCTL_TSTOP_OK_SHIFT                 (13U)                                               /*!< TRNG0_MCTL.TSTOP_OK Position            */
#define TRNG_MCTL_TSTOP_OK(x)                    (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< TRNG0_MCTL.TSTOP_OK Field               */
#define TRNG_MCTL_PRGM_MASK                      (0x10000U)                                          /*!< TRNG0_MCTL.PRGM Mask                    */
#define TRNG_MCTL_PRGM_SHIFT                     (16U)                                               /*!< TRNG0_MCTL.PRGM Position                */
#define TRNG_MCTL_PRGM(x)                        (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< TRNG0_MCTL.PRGM Field                   */
/* ------- SCMISC Bit Fields                        ------ */
#define TRNG_SCMISC_LRUN_MAX_MASK                (0xFFU)                                             /*!< TRNG0_SCMISC.LRUN_MAX Mask              */
#define TRNG_SCMISC_LRUN_MAX_SHIFT               (0U)                                                /*!< TRNG0_SCMISC.LRUN_MAX Position          */
#define TRNG_SCMISC_LRUN_MAX(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< TRNG0_SCMISC.LRUN_MAX Field             */
#define TRNG_SCMISC_RTY_CT_MASK                  (0xF0000U)                                          /*!< TRNG0_SCMISC.RTY_CT Mask                */
#define TRNG_SCMISC_RTY_CT_SHIFT                 (16U)                                               /*!< TRNG0_SCMISC.RTY_CT Position            */
#define TRNG_SCMISC_RTY_CT(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< TRNG0_SCMISC.RTY_CT Field               */
/* ------- PKRRNG Bit Fields                        ------ */
#define TRNG_PKRRNG_PKR_RNG_MASK                 (0xFFFFU)                                           /*!< TRNG0_PKRRNG.PKR_RNG Mask               */
#define TRNG_PKRRNG_PKR_RNG_SHIFT                (0U)                                                /*!< TRNG0_PKRRNG.PKR_RNG Position           */
#define TRNG_PKRRNG_PKR_RNG(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_PKRRNG.PKR_RNG Field              */
/* ------- PKRMAX Bit Fields                        ------ */
#define TRNG_PKRMAX_PKR_MAX_MASK                 (0xFFFFFFU)                                         /*!< TRNG0_PKRMAX.PKR_MAX Mask               */
#define TRNG_PKRMAX_PKR_MAX_SHIFT                (0U)                                                /*!< TRNG0_PKRMAX.PKR_MAX Position           */
#define TRNG_PKRMAX_PKR_MAX(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< TRNG0_PKRMAX.PKR_MAX Field              */
/* ------- PKRSQ Bit Fields                         ------ */
#define TRNG_PKRSQ_PKR_SQ_MASK                   (0xFFFFFFU)                                         /*!< TRNG0_PKRSQ.PKR_SQ Mask                 */
#define TRNG_PKRSQ_PKR_SQ_SHIFT                  (0U)                                                /*!< TRNG0_PKRSQ.PKR_SQ Position             */
#define TRNG_PKRSQ_PKR_SQ(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< TRNG0_PKRSQ.PKR_SQ Field                */
/* ------- SDCTL Bit Fields                         ------ */
#define TRNG_SDCTL_SAMP_SIZE_MASK                (0xFFFFU)                                           /*!< TRNG0_SDCTL.SAMP_SIZE Mask              */
#define TRNG_SDCTL_SAMP_SIZE_SHIFT               (0U)                                                /*!< TRNG0_SDCTL.SAMP_SIZE Position          */
#define TRNG_SDCTL_SAMP_SIZE(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_SDCTL.SAMP_SIZE Field             */
#define TRNG_SDCTL_ENT_DLY_MASK                  (0xFFFF0000U)                                       /*!< TRNG0_SDCTL.ENT_DLY Mask                */
#define TRNG_SDCTL_ENT_DLY_SHIFT                 (16U)                                               /*!< TRNG0_SDCTL.ENT_DLY Position            */
#define TRNG_SDCTL_ENT_DLY(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_SDCTL.ENT_DLY Field               */
/* ------- SBLIM Bit Fields                         ------ */
#define TRNG_SBLIM_SB_LIM_MASK                   (0x3FFU)                                            /*!< TRNG0_SBLIM.SB_LIM Mask                 */
#define TRNG_SBLIM_SB_LIM_SHIFT                  (0U)                                                /*!< TRNG0_SBLIM.SB_LIM Position             */
#define TRNG_SBLIM_SB_LIM(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)         /*!< TRNG0_SBLIM.SB_LIM Field                */
/* ------- TOTSAM Bit Fields                        ------ */
#define TRNG_TOTSAM_TOT_SAM_MASK                 (0xFFFFFU)                                          /*!< TRNG0_TOTSAM.TOT_SAM Mask               */
#define TRNG_TOTSAM_TOT_SAM_SHIFT                (0U)                                                /*!< TRNG0_TOTSAM.TOT_SAM Position           */
#define TRNG_TOTSAM_TOT_SAM(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFUL)       /*!< TRNG0_TOTSAM.TOT_SAM Field              */
/* ------- FRQMIN Bit Fields                        ------ */
#define TRNG_FRQMIN_FRQ_MIN_MASK                 (0x3FFFFFU)                                         /*!< TRNG0_FRQMIN.FRQ_MIN Mask               */
#define TRNG_FRQMIN_FRQ_MIN_SHIFT                (0U)                                                /*!< TRNG0_FRQMIN.FRQ_MIN Position           */
#define TRNG_FRQMIN_FRQ_MIN(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFFFFUL)      /*!< TRNG0_FRQMIN.FRQ_MIN Field              */
/* ------- FRQCNT Bit Fields                        ------ */
#define TRNG_FRQCNT_FRQ_CT_MASK                  (0x3FFFFFU)                                         /*!< TRNG0_FRQCNT.FRQ_CT Mask                */
#define TRNG_FRQCNT_FRQ_CT_SHIFT                 (0U)                                                /*!< TRNG0_FRQCNT.FRQ_CT Position            */
#define TRNG_FRQCNT_FRQ_CT(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFFFFUL)      /*!< TRNG0_FRQCNT.FRQ_CT Field               */
/* ------- FRQMAX Bit Fields                        ------ */
#define TRNG_FRQMAX_FRQ_MAX_MASK                 (0x3FFFFFU)                                         /*!< TRNG0_FRQMAX.FRQ_MAX Mask               */
#define TRNG_FRQMAX_FRQ_MAX_SHIFT                (0U)                                                /*!< TRNG0_FRQMAX.FRQ_MAX Position           */
#define TRNG_FRQMAX_FRQ_MAX(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFFFFUL)      /*!< TRNG0_FRQMAX.FRQ_MAX Field              */
/* ------- SCMC Bit Fields                          ------ */
#define TRNG_SCMC_MONO_CT_MASK                   (0xFFFFU)                                           /*!< TRNG0_SCMC.MONO_CT Mask                 */
#define TRNG_SCMC_MONO_CT_SHIFT                  (0U)                                                /*!< TRNG0_SCMC.MONO_CT Position             */
#define TRNG_SCMC_MONO_CT(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_SCMC.MONO_CT Field                */
/* ------- SCML Bit Fields                          ------ */
#define TRNG_SCML_MONO_MAX_MASK                  (0xFFFFU)                                           /*!< TRNG0_SCML.MONO_MAX Mask                */
#define TRNG_SCML_MONO_MAX_SHIFT                 (0U)                                                /*!< TRNG0_SCML.MONO_MAX Position            */
#define TRNG_SCML_MONO_MAX(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_SCML.MONO_MAX Field               */
#define TRNG_SCML_MONO_RNG_MASK                  (0xFFFF0000U)                                       /*!< TRNG0_SCML.MONO_RNG Mask                */
#define TRNG_SCML_MONO_RNG_SHIFT                 (16U)                                               /*!< TRNG0_SCML.MONO_RNG Position            */
#define TRNG_SCML_MONO_RNG(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_SCML.MONO_RNG Field               */
/* ------- SCR1C Bit Fields                         ------ */
#define TRNG_SCR1C_R1_0_CT_MASK                  (0x7FFFU)                                           /*!< TRNG0_SCR1C.R1_0_CT Mask                */
#define TRNG_SCR1C_R1_0_CT_SHIFT                 (0U)                                                /*!< TRNG0_SCR1C.R1_0_CT Position            */
#define TRNG_SCR1C_R1_0_CT(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFFUL)        /*!< TRNG0_SCR1C.R1_0_CT Field               */
#define TRNG_SCR1C_R1_1_CT_MASK                  (0x7FFF0000U)                                       /*!< TRNG0_SCR1C.R1_1_CT Mask                */
#define TRNG_SCR1C_R1_1_CT_SHIFT                 (16U)                                               /*!< TRNG0_SCR1C.R1_1_CT Position            */
#define TRNG_SCR1C_R1_1_CT(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0x7FFF0000UL)   /*!< TRNG0_SCR1C.R1_1_CT Field               */
/* ------- SCR1L Bit Fields                         ------ */
#define TRNG_SCR1L_RUN1_MAX_MASK                 (0x7FFFU)                                           /*!< TRNG0_SCR1L.RUN1_MAX Mask               */
#define TRNG_SCR1L_RUN1_MAX_SHIFT                (0U)                                                /*!< TRNG0_SCR1L.RUN1_MAX Position           */
#define TRNG_SCR1L_RUN1_MAX(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFFUL)        /*!< TRNG0_SCR1L.RUN1_MAX Field              */
#define TRNG_SCR1L_RUN1_RNG_MASK                 (0x7FFF0000U)                                       /*!< TRNG0_SCR1L.RUN1_RNG Mask               */
#define TRNG_SCR1L_RUN1_RNG_SHIFT                (16U)                                               /*!< TRNG0_SCR1L.RUN1_RNG Position           */
#define TRNG_SCR1L_RUN1_RNG(x)                   (((uint32_t)(((uint32_t)(x))<<16U))&0x7FFF0000UL)   /*!< TRNG0_SCR1L.RUN1_RNG Field              */
/* ------- SCR2C Bit Fields                         ------ */
#define TRNG_SCR2C_R2_0_CT_MASK                  (0x3FFFU)                                           /*!< TRNG0_SCR2C.R2_0_CT Mask                */
#define TRNG_SCR2C_R2_0_CT_SHIFT                 (0U)                                                /*!< TRNG0_SCR2C.R2_0_CT Position            */
#define TRNG_SCR2C_R2_0_CT(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFFUL)        /*!< TRNG0_SCR2C.R2_0_CT Field               */
#define TRNG_SCR2C_R2_1_CT_MASK                  (0x3FFF0000U)                                       /*!< TRNG0_SCR2C.R2_1_CT Mask                */
#define TRNG_SCR2C_R2_1_CT_SHIFT                 (16U)                                               /*!< TRNG0_SCR2C.R2_1_CT Position            */
#define TRNG_SCR2C_R2_1_CT(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0x3FFF0000UL)   /*!< TRNG0_SCR2C.R2_1_CT Field               */
/* ------- SCR2L Bit Fields                         ------ */
#define TRNG_SCR2L_RUN2_MAX_MASK                 (0x3FFFU)                                           /*!< TRNG0_SCR2L.RUN2_MAX Mask               */
#define TRNG_SCR2L_RUN2_MAX_SHIFT                (0U)                                                /*!< TRNG0_SCR2L.RUN2_MAX Position           */
#define TRNG_SCR2L_RUN2_MAX(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFFUL)        /*!< TRNG0_SCR2L.RUN2_MAX Field              */
#define TRNG_SCR2L_RUN2_RNG_MASK                 (0x3FFF0000U)                                       /*!< TRNG0_SCR2L.RUN2_RNG Mask               */
#define TRNG_SCR2L_RUN2_RNG_SHIFT                (16U)                                               /*!< TRNG0_SCR2L.RUN2_RNG Position           */
#define TRNG_SCR2L_RUN2_RNG(x)                   (((uint32_t)(((uint32_t)(x))<<16U))&0x3FFF0000UL)   /*!< TRNG0_SCR2L.RUN2_RNG Field              */
/* ------- SCR3C Bit Fields                         ------ */
#define TRNG_SCR3C_R3_0_CT_MASK                  (0x1FFFU)                                           /*!< TRNG0_SCR3C.R3_0_CT Mask                */
#define TRNG_SCR3C_R3_0_CT_SHIFT                 (0U)                                                /*!< TRNG0_SCR3C.R3_0_CT Position            */
#define TRNG_SCR3C_R3_0_CT(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)        /*!< TRNG0_SCR3C.R3_0_CT Field               */
#define TRNG_SCR3C_R3_1_CT_MASK                  (0x1FFF0000U)                                       /*!< TRNG0_SCR3C.R3_1_CT Mask                */
#define TRNG_SCR3C_R3_1_CT_SHIFT                 (16U)                                               /*!< TRNG0_SCR3C.R3_1_CT Position            */
#define TRNG_SCR3C_R3_1_CT(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0x1FFF0000UL)   /*!< TRNG0_SCR3C.R3_1_CT Field               */
/* ------- SCR3L Bit Fields                         ------ */
#define TRNG_SCR3L_RUN3_MAX_MASK                 (0x1FFFU)                                           /*!< TRNG0_SCR3L.RUN3_MAX Mask               */
#define TRNG_SCR3L_RUN3_MAX_SHIFT                (0U)                                                /*!< TRNG0_SCR3L.RUN3_MAX Position           */
#define TRNG_SCR3L_RUN3_MAX(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)        /*!< TRNG0_SCR3L.RUN3_MAX Field              */
#define TRNG_SCR3L_RUN3_RNG_MASK                 (0x1FFF0000U)                                       /*!< TRNG0_SCR3L.RUN3_RNG Mask               */
#define TRNG_SCR3L_RUN3_RNG_SHIFT                (16U)                                               /*!< TRNG0_SCR3L.RUN3_RNG Position           */
#define TRNG_SCR3L_RUN3_RNG(x)                   (((uint32_t)(((uint32_t)(x))<<16U))&0x1FFF0000UL)   /*!< TRNG0_SCR3L.RUN3_RNG Field              */
/* ------- SCR4C Bit Fields                         ------ */
#define TRNG_SCR4C_R4_0_CT_MASK                  (0xFFFU)                                            /*!< TRNG0_SCR4C.R4_0_CT Mask                */
#define TRNG_SCR4C_R4_0_CT_SHIFT                 (0U)                                                /*!< TRNG0_SCR4C.R4_0_CT Position            */
#define TRNG_SCR4C_R4_0_CT(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFUL)         /*!< TRNG0_SCR4C.R4_0_CT Field               */
#define TRNG_SCR4C_R4_1_CT_MASK                  (0xFFF0000U)                                        /*!< TRNG0_SCR4C.R4_1_CT Mask                */
#define TRNG_SCR4C_R4_1_CT_SHIFT                 (16U)                                               /*!< TRNG0_SCR4C.R4_1_CT Position            */
#define TRNG_SCR4C_R4_1_CT(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0xFFF0000UL)    /*!< TRNG0_SCR4C.R4_1_CT Field               */
/* ------- SCR4L Bit Fields                         ------ */
#define TRNG_SCR4L_RUN4_MAX_MASK                 (0xFFFU)                                            /*!< TRNG0_SCR4L.RUN4_MAX Mask               */
#define TRNG_SCR4L_RUN4_MAX_SHIFT                (0U)                                                /*!< TRNG0_SCR4L.RUN4_MAX Position           */
#define TRNG_SCR4L_RUN4_MAX(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFUL)         /*!< TRNG0_SCR4L.RUN4_MAX Field              */
#define TRNG_SCR4L_RUN4_RNG_MASK                 (0xFFF0000U)                                        /*!< TRNG0_SCR4L.RUN4_RNG Mask               */
#define TRNG_SCR4L_RUN4_RNG_SHIFT                (16U)                                               /*!< TRNG0_SCR4L.RUN4_RNG Position           */
#define TRNG_SCR4L_RUN4_RNG(x)                   (((uint32_t)(((uint32_t)(x))<<16U))&0xFFF0000UL)    /*!< TRNG0_SCR4L.RUN4_RNG Field              */
/* ------- SCR5C Bit Fields                         ------ */
#define TRNG_SCR5C_R5_0_CT_MASK                  (0x7FFU)                                            /*!< TRNG0_SCR5C.R5_0_CT Mask                */
#define TRNG_SCR5C_R5_0_CT_SHIFT                 (0U)                                                /*!< TRNG0_SCR5C.R5_0_CT Position            */
#define TRNG_SCR5C_R5_0_CT(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFUL)         /*!< TRNG0_SCR5C.R5_0_CT Field               */
#define TRNG_SCR5C_R5_1_CT_MASK                  (0x7FF0000U)                                        /*!< TRNG0_SCR5C.R5_1_CT Mask                */
#define TRNG_SCR5C_R5_1_CT_SHIFT                 (16U)                                               /*!< TRNG0_SCR5C.R5_1_CT Position            */
#define TRNG_SCR5C_R5_1_CT(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0x7FF0000UL)    /*!< TRNG0_SCR5C.R5_1_CT Field               */
/* ------- SCR5L Bit Fields                         ------ */
#define TRNG_SCR5L_RUN5_MAX_MASK                 (0x7FFU)                                            /*!< TRNG0_SCR5L.RUN5_MAX Mask               */
#define TRNG_SCR5L_RUN5_MAX_SHIFT                (0U)                                                /*!< TRNG0_SCR5L.RUN5_MAX Position           */
#define TRNG_SCR5L_RUN5_MAX(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFUL)         /*!< TRNG0_SCR5L.RUN5_MAX Field              */
#define TRNG_SCR5L_RUN5_RNG_MASK                 (0x7FF0000U)                                        /*!< TRNG0_SCR5L.RUN5_RNG Mask               */
#define TRNG_SCR5L_RUN5_RNG_SHIFT                (16U)                                               /*!< TRNG0_SCR5L.RUN5_RNG Position           */
#define TRNG_SCR5L_RUN5_RNG(x)                   (((uint32_t)(((uint32_t)(x))<<16U))&0x7FF0000UL)    /*!< TRNG0_SCR5L.RUN5_RNG Field              */
/* ------- SCR6PC Bit Fields                        ------ */
#define TRNG_SCR6PC_R6P_0_CT_MASK                (0x7FFU)                                            /*!< TRNG0_SCR6PC.R6P_0_CT Mask              */
#define TRNG_SCR6PC_R6P_0_CT_SHIFT               (0U)                                                /*!< TRNG0_SCR6PC.R6P_0_CT Position          */
#define TRNG_SCR6PC_R6P_0_CT(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFUL)         /*!< TRNG0_SCR6PC.R6P_0_CT Field             */
#define TRNG_SCR6PC_R6P_1_CT_MASK                (0x7FF0000U)                                        /*!< TRNG0_SCR6PC.R6P_1_CT Mask              */
#define TRNG_SCR6PC_R6P_1_CT_SHIFT               (16U)                                               /*!< TRNG0_SCR6PC.R6P_1_CT Position          */
#define TRNG_SCR6PC_R6P_1_CT(x)                  (((uint32_t)(((uint32_t)(x))<<16U))&0x7FF0000UL)    /*!< TRNG0_SCR6PC.R6P_1_CT Field             */
/* ------- SCR6PL Bit Fields                        ------ */
#define TRNG_SCR6PL_RUN6P_MAX_MASK               (0x7FFU)                                            /*!< TRNG0_SCR6PL.RUN6P_MAX Mask             */
#define TRNG_SCR6PL_RUN6P_MAX_SHIFT              (0U)                                                /*!< TRNG0_SCR6PL.RUN6P_MAX Position         */
#define TRNG_SCR6PL_RUN6P_MAX(x)                 (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFUL)         /*!< TRNG0_SCR6PL.RUN6P_MAX Field            */
#define TRNG_SCR6PL_RUN6P_RNG_MASK               (0x7FF0000U)                                        /*!< TRNG0_SCR6PL.RUN6P_RNG Mask             */
#define TRNG_SCR6PL_RUN6P_RNG_SHIFT              (16U)                                               /*!< TRNG0_SCR6PL.RUN6P_RNG Position         */
#define TRNG_SCR6PL_RUN6P_RNG(x)                 (((uint32_t)(((uint32_t)(x))<<16U))&0x7FF0000UL)    /*!< TRNG0_SCR6PL.RUN6P_RNG Field            */
/* ------- STATUS Bit Fields                        ------ */
#define TRNG_STATUS_TF1BR0_MASK                  (0x1U)                                              /*!< TRNG0_STATUS.TF1BR0 Mask                */
#define TRNG_STATUS_TF1BR0_SHIFT                 (0U)                                                /*!< TRNG0_STATUS.TF1BR0 Position            */
#define TRNG_STATUS_TF1BR0(x)                    (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< TRNG0_STATUS.TF1BR0 Field               */
#define TRNG_STATUS_TF1BR1_MASK                  (0x2U)                                              /*!< TRNG0_STATUS.TF1BR1 Mask                */
#define TRNG_STATUS_TF1BR1_SHIFT                 (1U)                                                /*!< TRNG0_STATUS.TF1BR1 Position            */
#define TRNG_STATUS_TF1BR1(x)                    (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< TRNG0_STATUS.TF1BR1 Field               */
#define TRNG_STATUS_TF2BR0_MASK                  (0x4U)                                              /*!< TRNG0_STATUS.TF2BR0 Mask                */
#define TRNG_STATUS_TF2BR0_SHIFT                 (2U)                                                /*!< TRNG0_STATUS.TF2BR0 Position            */
#define TRNG_STATUS_TF2BR0(x)                    (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< TRNG0_STATUS.TF2BR0 Field               */
#define TRNG_STATUS_TF2BR1_MASK                  (0x8U)                                              /*!< TRNG0_STATUS.TF2BR1 Mask                */
#define TRNG_STATUS_TF2BR1_SHIFT                 (3U)                                                /*!< TRNG0_STATUS.TF2BR1 Position            */
#define TRNG_STATUS_TF2BR1(x)                    (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< TRNG0_STATUS.TF2BR1 Field               */
#define TRNG_STATUS_TF3BR0_MASK                  (0x10U)                                             /*!< TRNG0_STATUS.TF3BR0 Mask                */
#define TRNG_STATUS_TF3BR0_SHIFT                 (4U)                                                /*!< TRNG0_STATUS.TF3BR0 Position            */
#define TRNG_STATUS_TF3BR0(x)                    (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< TRNG0_STATUS.TF3BR0 Field               */
#define TRNG_STATUS_TF3BR1_MASK                  (0x20U)                                             /*!< TRNG0_STATUS.TF3BR1 Mask                */
#define TRNG_STATUS_TF3BR1_SHIFT                 (5U)                                                /*!< TRNG0_STATUS.TF3BR1 Position            */
#define TRNG_STATUS_TF3BR1(x)                    (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< TRNG0_STATUS.TF3BR1 Field               */
#define TRNG_STATUS_TF4BR0_MASK                  (0x40U)                                             /*!< TRNG0_STATUS.TF4BR0 Mask                */
#define TRNG_STATUS_TF4BR0_SHIFT                 (6U)                                                /*!< TRNG0_STATUS.TF4BR0 Position            */
#define TRNG_STATUS_TF4BR0(x)                    (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< TRNG0_STATUS.TF4BR0 Field               */
#define TRNG_STATUS_TF4BR1_MASK                  (0x80U)                                             /*!< TRNG0_STATUS.TF4BR1 Mask                */
#define TRNG_STATUS_TF4BR1_SHIFT                 (7U)                                                /*!< TRNG0_STATUS.TF4BR1 Position            */
#define TRNG_STATUS_TF4BR1(x)                    (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< TRNG0_STATUS.TF4BR1 Field               */
#define TRNG_STATUS_TF5BR0_MASK                  (0x100U)                                            /*!< TRNG0_STATUS.TF5BR0 Mask                */
#define TRNG_STATUS_TF5BR0_SHIFT                 (8U)                                                /*!< TRNG0_STATUS.TF5BR0 Position            */
#define TRNG_STATUS_TF5BR0(x)                    (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< TRNG0_STATUS.TF5BR0 Field               */
#define TRNG_STATUS_TF5BR1_MASK                  (0x200U)                                            /*!< TRNG0_STATUS.TF5BR1 Mask                */
#define TRNG_STATUS_TF5BR1_SHIFT                 (9U)                                                /*!< TRNG0_STATUS.TF5BR1 Position            */
#define TRNG_STATUS_TF5BR1(x)                    (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< TRNG0_STATUS.TF5BR1 Field               */
#define TRNG_STATUS_TF6PBR0_MASK                 (0x400U)                                            /*!< TRNG0_STATUS.TF6PBR0 Mask               */
#define TRNG_STATUS_TF6PBR0_SHIFT                (10U)                                               /*!< TRNG0_STATUS.TF6PBR0 Position           */
#define TRNG_STATUS_TF6PBR0(x)                   (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< TRNG0_STATUS.TF6PBR0 Field              */
#define TRNG_STATUS_TF6PBR1_MASK                 (0x800U)                                            /*!< TRNG0_STATUS.TF6PBR1 Mask               */
#define TRNG_STATUS_TF6PBR1_SHIFT                (11U)                                               /*!< TRNG0_STATUS.TF6PBR1 Position           */
#define TRNG_STATUS_TF6PBR1(x)                   (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< TRNG0_STATUS.TF6PBR1 Field              */
#define TRNG_STATUS_TFSB_MASK                    (0x1000U)                                           /*!< TRNG0_STATUS.TFSB Mask                  */
#define TRNG_STATUS_TFSB_SHIFT                   (12U)                                               /*!< TRNG0_STATUS.TFSB Position              */
#define TRNG_STATUS_TFSB(x)                      (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< TRNG0_STATUS.TFSB Field                 */
#define TRNG_STATUS_TFLR_MASK                    (0x2000U)                                           /*!< TRNG0_STATUS.TFLR Mask                  */
#define TRNG_STATUS_TFLR_SHIFT                   (13U)                                               /*!< TRNG0_STATUS.TFLR Position              */
#define TRNG_STATUS_TFLR(x)                      (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< TRNG0_STATUS.TFLR Field                 */
#define TRNG_STATUS_TFP_MASK                     (0x4000U)                                           /*!< TRNG0_STATUS.TFP Mask                   */
#define TRNG_STATUS_TFP_SHIFT                    (14U)                                               /*!< TRNG0_STATUS.TFP Position               */
#define TRNG_STATUS_TFP(x)                       (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< TRNG0_STATUS.TFP Field                  */
#define TRNG_STATUS_TFMB_MASK                    (0x8000U)                                           /*!< TRNG0_STATUS.TFMB Mask                  */
#define TRNG_STATUS_TFMB_SHIFT                   (15U)                                               /*!< TRNG0_STATUS.TFMB Position              */
#define TRNG_STATUS_TFMB(x)                      (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< TRNG0_STATUS.TFMB Field                 */
#define TRNG_STATUS_RETRY_CT_MASK                (0xF0000U)                                          /*!< TRNG0_STATUS.RETRY_CT Mask              */
#define TRNG_STATUS_RETRY_CT_SHIFT               (16U)                                               /*!< TRNG0_STATUS.RETRY_CT Position          */
#define TRNG_STATUS_RETRY_CT(x)                  (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< TRNG0_STATUS.RETRY_CT Field             */
/* ------- ENT Bit Fields                           ------ */
#define TRNG_ENT_ENT_MASK                        (0xFFFFFFFFU)                                       /*!< TRNG0_ENT.ENT Mask                      */
#define TRNG_ENT_ENT_SHIFT                       (0U)                                                /*!< TRNG0_ENT.ENT Position                  */
#define TRNG_ENT_ENT(x)                          (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< TRNG0_ENT.ENT Field                     */
/* ------- PKRCNT10 Bit Fields                      ------ */
#define TRNG_PKRCNT10_PKR_0_CT_MASK              (0xFFFFU)                                           /*!< TRNG0_PKRCNT10.PKR_0_CT Mask            */
#define TRNG_PKRCNT10_PKR_0_CT_SHIFT             (0U)                                                /*!< TRNG0_PKRCNT10.PKR_0_CT Position        */
#define TRNG_PKRCNT10_PKR_0_CT(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_PKRCNT10.PKR_0_CT Field           */
#define TRNG_PKRCNT10_PKR_1_CT_MASK              (0xFFFF0000U)                                       /*!< TRNG0_PKRCNT10.PKR_1_CT Mask            */
#define TRNG_PKRCNT10_PKR_1_CT_SHIFT             (16U)                                               /*!< TRNG0_PKRCNT10.PKR_1_CT Position        */
#define TRNG_PKRCNT10_PKR_1_CT(x)                (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_PKRCNT10.PKR_1_CT Field           */
/* ------- PKRCNT32 Bit Fields                      ------ */
#define TRNG_PKRCNT32_PKR_2_CT_MASK              (0xFFFFU)                                           /*!< TRNG0_PKRCNT32.PKR_2_CT Mask            */
#define TRNG_PKRCNT32_PKR_2_CT_SHIFT             (0U)                                                /*!< TRNG0_PKRCNT32.PKR_2_CT Position        */
#define TRNG_PKRCNT32_PKR_2_CT(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_PKRCNT32.PKR_2_CT Field           */
#define TRNG_PKRCNT32_PKR_3_CT_MASK              (0xFFFF0000U)                                       /*!< TRNG0_PKRCNT32.PKR_3_CT Mask            */
#define TRNG_PKRCNT32_PKR_3_CT_SHIFT             (16U)                                               /*!< TRNG0_PKRCNT32.PKR_3_CT Position        */
#define TRNG_PKRCNT32_PKR_3_CT(x)                (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_PKRCNT32.PKR_3_CT Field           */
/* ------- PKRCNT54 Bit Fields                      ------ */
#define TRNG_PKRCNT54_PKR_4_CT_MASK              (0xFFFFU)                                           /*!< TRNG0_PKRCNT54.PKR_4_CT Mask            */
#define TRNG_PKRCNT54_PKR_4_CT_SHIFT             (0U)                                                /*!< TRNG0_PKRCNT54.PKR_4_CT Position        */
#define TRNG_PKRCNT54_PKR_4_CT(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_PKRCNT54.PKR_4_CT Field           */
#define TRNG_PKRCNT54_PKR_5_CT_MASK              (0xFFFF0000U)                                       /*!< TRNG0_PKRCNT54.PKR_5_CT Mask            */
#define TRNG_PKRCNT54_PKR_5_CT_SHIFT             (16U)                                               /*!< TRNG0_PKRCNT54.PKR_5_CT Position        */
#define TRNG_PKRCNT54_PKR_5_CT(x)                (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_PKRCNT54.PKR_5_CT Field           */
/* ------- PKRCNT76 Bit Fields                      ------ */
#define TRNG_PKRCNT76_PKR_6_CT_MASK              (0xFFFFU)                                           /*!< TRNG0_PKRCNT76.PKR_6_CT Mask            */
#define TRNG_PKRCNT76_PKR_6_CT_SHIFT             (0U)                                                /*!< TRNG0_PKRCNT76.PKR_6_CT Position        */
#define TRNG_PKRCNT76_PKR_6_CT(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_PKRCNT76.PKR_6_CT Field           */
#define TRNG_PKRCNT76_PKR_7_CT_MASK              (0xFFFF0000U)                                       /*!< TRNG0_PKRCNT76.PKR_7_CT Mask            */
#define TRNG_PKRCNT76_PKR_7_CT_SHIFT             (16U)                                               /*!< TRNG0_PKRCNT76.PKR_7_CT Position        */
#define TRNG_PKRCNT76_PKR_7_CT(x)                (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_PKRCNT76.PKR_7_CT Field           */
/* ------- PKRCNT98 Bit Fields                      ------ */
#define TRNG_PKRCNT98_PKR_8_CT_MASK              (0xFFFFU)                                           /*!< TRNG0_PKRCNT98.PKR_8_CT Mask            */
#define TRNG_PKRCNT98_PKR_8_CT_SHIFT             (0U)                                                /*!< TRNG0_PKRCNT98.PKR_8_CT Position        */
#define TRNG_PKRCNT98_PKR_8_CT(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_PKRCNT98.PKR_8_CT Field           */
#define TRNG_PKRCNT98_PKR_9_CT_MASK              (0xFFFF0000U)                                       /*!< TRNG0_PKRCNT98.PKR_9_CT Mask            */
#define TRNG_PKRCNT98_PKR_9_CT_SHIFT             (16U)                                               /*!< TRNG0_PKRCNT98.PKR_9_CT Position        */
#define TRNG_PKRCNT98_PKR_9_CT(x)                (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_PKRCNT98.PKR_9_CT Field           */
/* ------- PKRCNTBA Bit Fields                      ------ */
#define TRNG_PKRCNTBA_PKR_A_CT_MASK              (0xFFFFU)                                           /*!< TRNG0_PKRCNTBA.PKR_A_CT Mask            */
#define TRNG_PKRCNTBA_PKR_A_CT_SHIFT             (0U)                                                /*!< TRNG0_PKRCNTBA.PKR_A_CT Position        */
#define TRNG_PKRCNTBA_PKR_A_CT(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_PKRCNTBA.PKR_A_CT Field           */
#define TRNG_PKRCNTBA_PKR_B_CT_MASK              (0xFFFF0000U)                                       /*!< TRNG0_PKRCNTBA.PKR_B_CT Mask            */
#define TRNG_PKRCNTBA_PKR_B_CT_SHIFT             (16U)                                               /*!< TRNG0_PKRCNTBA.PKR_B_CT Position        */
#define TRNG_PKRCNTBA_PKR_B_CT(x)                (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_PKRCNTBA.PKR_B_CT Field           */
/* ------- PKRCNTDC Bit Fields                      ------ */
#define TRNG_PKRCNTDC_PKR_C_CT_MASK              (0xFFFFU)                                           /*!< TRNG0_PKRCNTDC.PKR_C_CT Mask            */
#define TRNG_PKRCNTDC_PKR_C_CT_SHIFT             (0U)                                                /*!< TRNG0_PKRCNTDC.PKR_C_CT Position        */
#define TRNG_PKRCNTDC_PKR_C_CT(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_PKRCNTDC.PKR_C_CT Field           */
#define TRNG_PKRCNTDC_PKR_D_CT_MASK              (0xFFFF0000U)                                       /*!< TRNG0_PKRCNTDC.PKR_D_CT Mask            */
#define TRNG_PKRCNTDC_PKR_D_CT_SHIFT             (16U)                                               /*!< TRNG0_PKRCNTDC.PKR_D_CT Position        */
#define TRNG_PKRCNTDC_PKR_D_CT(x)                (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_PKRCNTDC.PKR_D_CT Field           */
/* ------- PKRCNTFE Bit Fields                      ------ */
#define TRNG_PKRCNTFE_PKR_E_CT_MASK              (0xFFFFU)                                           /*!< TRNG0_PKRCNTFE.PKR_E_CT Mask            */
#define TRNG_PKRCNTFE_PKR_E_CT_SHIFT             (0U)                                                /*!< TRNG0_PKRCNTFE.PKR_E_CT Position        */
#define TRNG_PKRCNTFE_PKR_E_CT(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TRNG0_PKRCNTFE.PKR_E_CT Field           */
#define TRNG_PKRCNTFE_PKR_F_CT_MASK              (0xFFFF0000U)                                       /*!< TRNG0_PKRCNTFE.PKR_F_CT Mask            */
#define TRNG_PKRCNTFE_PKR_F_CT_SHIFT             (16U)                                               /*!< TRNG0_PKRCNTFE.PKR_F_CT Position        */
#define TRNG_PKRCNTFE_PKR_F_CT(x)                (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_PKRCNTFE.PKR_F_CT Field           */
/* ------- SEC_CFG Bit Fields                       ------ */
#define TRNG_SEC_CFG_SH0_MASK                    (0x1U)                                              /*!< TRNG0_SEC_CFG.SH0 Mask                  */
#define TRNG_SEC_CFG_SH0_SHIFT                   (0U)                                                /*!< TRNG0_SEC_CFG.SH0 Position              */
#define TRNG_SEC_CFG_SH0(x)                      (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< TRNG0_SEC_CFG.SH0 Field                 */
#define TRNG_SEC_CFG_NO_PRGM_MASK                (0x2U)                                              /*!< TRNG0_SEC_CFG.NO_PRGM Mask              */
#define TRNG_SEC_CFG_NO_PRGM_SHIFT               (1U)                                                /*!< TRNG0_SEC_CFG.NO_PRGM Position          */
#define TRNG_SEC_CFG_NO_PRGM(x)                  (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< TRNG0_SEC_CFG.NO_PRGM Field             */
#define TRNG_SEC_CFG_SK_VAL_MASK                 (0x4U)                                              /*!< TRNG0_SEC_CFG.SK_VAL Mask               */
#define TRNG_SEC_CFG_SK_VAL_SHIFT                (2U)                                                /*!< TRNG0_SEC_CFG.SK_VAL Position           */
#define TRNG_SEC_CFG_SK_VAL(x)                   (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< TRNG0_SEC_CFG.SK_VAL Field              */
/* ------- INT_CTRL Bit Fields                      ------ */
#define TRNG_INT_CTRL_HW_ERR_MASK                (0x1U)                                              /*!< TRNG0_INT_CTRL.HW_ERR Mask              */
#define TRNG_INT_CTRL_HW_ERR_SHIFT               (0U)                                                /*!< TRNG0_INT_CTRL.HW_ERR Position          */
#define TRNG_INT_CTRL_HW_ERR(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< TRNG0_INT_CTRL.HW_ERR Field             */
#define TRNG_INT_CTRL_ENT_VAL_MASK               (0x2U)                                              /*!< TRNG0_INT_CTRL.ENT_VAL Mask             */
#define TRNG_INT_CTRL_ENT_VAL_SHIFT              (1U)                                                /*!< TRNG0_INT_CTRL.ENT_VAL Position         */
#define TRNG_INT_CTRL_ENT_VAL(x)                 (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< TRNG0_INT_CTRL.ENT_VAL Field            */
#define TRNG_INT_CTRL_FRQ_CT_FAIL_MASK           (0x4U)                                              /*!< TRNG0_INT_CTRL.FRQ_CT_FAIL Mask         */
#define TRNG_INT_CTRL_FRQ_CT_FAIL_SHIFT          (2U)                                                /*!< TRNG0_INT_CTRL.FRQ_CT_FAIL Position     */
#define TRNG_INT_CTRL_FRQ_CT_FAIL(x)             (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< TRNG0_INT_CTRL.FRQ_CT_FAIL Field        */
#define TRNG_INT_CTRL_UNUSED_MASK                (0xFFFFFFF8U)                                       /*!< TRNG0_INT_CTRL.UNUSED Mask              */
#define TRNG_INT_CTRL_UNUSED_SHIFT               (3U)                                                /*!< TRNG0_INT_CTRL.UNUSED Position          */
#define TRNG_INT_CTRL_UNUSED(x)                  (((uint32_t)(((uint32_t)(x))<<3U))&0xFFFFFFF8UL)    /*!< TRNG0_INT_CTRL.UNUSED Field             */
/* ------- INT_MASK Bit Fields                      ------ */
#define TRNG_INT_MASK_HW_ERR_MASK                (0x1U)                                              /*!< TRNG0_INT_MASK.HW_ERR Mask              */
#define TRNG_INT_MASK_HW_ERR_SHIFT               (0U)                                                /*!< TRNG0_INT_MASK.HW_ERR Position          */
#define TRNG_INT_MASK_HW_ERR(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< TRNG0_INT_MASK.HW_ERR Field             */
#define TRNG_INT_MASK_ENT_VAL_MASK               (0x2U)                                              /*!< TRNG0_INT_MASK.ENT_VAL Mask             */
#define TRNG_INT_MASK_ENT_VAL_SHIFT              (1U)                                                /*!< TRNG0_INT_MASK.ENT_VAL Position         */
#define TRNG_INT_MASK_ENT_VAL(x)                 (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< TRNG0_INT_MASK.ENT_VAL Field            */
#define TRNG_INT_MASK_FRQ_CT_FAIL_MASK           (0x4U)                                              /*!< TRNG0_INT_MASK.FRQ_CT_FAIL Mask         */
#define TRNG_INT_MASK_FRQ_CT_FAIL_SHIFT          (2U)                                                /*!< TRNG0_INT_MASK.FRQ_CT_FAIL Position     */
#define TRNG_INT_MASK_FRQ_CT_FAIL(x)             (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< TRNG0_INT_MASK.FRQ_CT_FAIL Field        */
/* ------- INT_STATUS Bit Fields                    ------ */
#define TRNG_INT_STATUS_HW_ERR_MASK              (0x1U)                                              /*!< TRNG0_INT_STATUS.HW_ERR Mask            */
#define TRNG_INT_STATUS_HW_ERR_SHIFT             (0U)                                                /*!< TRNG0_INT_STATUS.HW_ERR Position        */
#define TRNG_INT_STATUS_HW_ERR(x)                (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< TRNG0_INT_STATUS.HW_ERR Field           */
#define TRNG_INT_STATUS_ENT_VAL_MASK             (0x2U)                                              /*!< TRNG0_INT_STATUS.ENT_VAL Mask           */
#define TRNG_INT_STATUS_ENT_VAL_SHIFT            (1U)                                                /*!< TRNG0_INT_STATUS.ENT_VAL Position       */
#define TRNG_INT_STATUS_ENT_VAL(x)               (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< TRNG0_INT_STATUS.ENT_VAL Field          */
#define TRNG_INT_STATUS_FRQ_CT_FAIL_MASK         (0x4U)                                              /*!< TRNG0_INT_STATUS.FRQ_CT_FAIL Mask       */
#define TRNG_INT_STATUS_FRQ_CT_FAIL_SHIFT        (2U)                                                /*!< TRNG0_INT_STATUS.FRQ_CT_FAIL Position   */
#define TRNG_INT_STATUS_FRQ_CT_FAIL(x)           (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< TRNG0_INT_STATUS.FRQ_CT_FAIL Field      */
/* ------- VID1 Bit Fields                          ------ */
#define TRNG_VID1_MIN_REV_MASK                   (0xFFU)                                             /*!< TRNG0_VID1.MIN_REV Mask                 */
#define TRNG_VID1_MIN_REV_SHIFT                  (0U)                                                /*!< TRNG0_VID1.MIN_REV Position             */
#define TRNG_VID1_MIN_REV(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< TRNG0_VID1.MIN_REV Field                */
#define TRNG_VID1_MAJ_REV_MASK                   (0xFF00U)                                           /*!< TRNG0_VID1.MAJ_REV Mask                 */
#define TRNG_VID1_MAJ_REV_SHIFT                  (8U)                                                /*!< TRNG0_VID1.MAJ_REV Position             */
#define TRNG_VID1_MAJ_REV(x)                     (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< TRNG0_VID1.MAJ_REV Field                */
#define TRNG_VID1_IP_ID_MASK                     (0xFFFF0000U)                                       /*!< TRNG0_VID1.IP_ID Mask                   */
#define TRNG_VID1_IP_ID_SHIFT                    (16U)                                               /*!< TRNG0_VID1.IP_ID Position               */
#define TRNG_VID1_IP_ID(x)                       (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TRNG0_VID1.IP_ID Field                  */
/* ------- VID2 Bit Fields                          ------ */
#define TRNG_VID2_CONFIG_OPT_MASK                (0xFFU)                                             /*!< TRNG0_VID2.CONFIG_OPT Mask              */
#define TRNG_VID2_CONFIG_OPT_SHIFT               (0U)                                                /*!< TRNG0_VID2.CONFIG_OPT Position          */
#define TRNG_VID2_CONFIG_OPT(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< TRNG0_VID2.CONFIG_OPT Field             */
#define TRNG_VID2_ECO_REV_MASK                   (0xFF00U)                                           /*!< TRNG0_VID2.ECO_REV Mask                 */
#define TRNG_VID2_ECO_REV_SHIFT                  (8U)                                                /*!< TRNG0_VID2.ECO_REV Position             */
#define TRNG_VID2_ECO_REV(x)                     (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< TRNG0_VID2.ECO_REV Field                */
#define TRNG_VID2_INTG_OPT_MASK                  (0xFF0000U)                                         /*!< TRNG0_VID2.INTG_OPT Mask                */
#define TRNG_VID2_INTG_OPT_SHIFT                 (16U)                                               /*!< TRNG0_VID2.INTG_OPT Position            */
#define TRNG_VID2_INTG_OPT(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< TRNG0_VID2.INTG_OPT Field               */
#define TRNG_VID2_ERA_MASK                       (0xFF000000U)                                       /*!< TRNG0_VID2.ERA Mask                     */
#define TRNG_VID2_ERA_SHIFT                      (24U)                                               /*!< TRNG0_VID2.ERA Position                 */
#define TRNG_VID2_ERA(x)                         (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< TRNG0_VID2.ERA Field                    */
/**
 * @} */ /* End group TRNG_Register_Masks_GROUP 
 */

/* TRNG0 - Peripheral instance base addresses */
#define TRNG0_BasePtr                  0x40029000UL //!< Peripheral base address
#define TRNG0                          ((TRNG_Type *) TRNG0_BasePtr) //!< Freescale base pointer
#define TRNG0_BASE_PTR                 (TRNG0) //!< Freescale style base pointer
#define TRNG0_IRQS { TRNG0_IRQn,  }

/**
 * @} */ /* End group TRNG_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup TSI_Peripheral_access_layer_GROUP TSI Peripheral Access Layer
* @brief C Struct for TSI
* @{
*/

/* ================================================================================ */
/* ================           TSI0 (file:TSI0_MKW41Z4)             ================ */
/* ================================================================================ */

/**
 * @brief Touch Sensing Input
 */
/**
* @addtogroup TSI_structs_GROUP TSI struct
* @brief Struct for TSI
* @{
*/
typedef struct TSI_Type {
   __IO uint32_t  GENCS;                        /**< 0000: General Control and Status Register                          */
   __IO uint32_t  DATA;                         /**< 0004: DATA Register                                                */
   __IO uint32_t  TSHD;                         /**< 0008: Threshold Register                                           */
} TSI_Type;

/**
 * @} */ /* End group TSI_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'TSI0' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup TSI_Register_Masks_GROUP TSI Register Masks
* @brief Register Masks for TSI
* @{
*/
/* ------- GENCS Bit Fields                         ------ */
#define TSI_GENCS_CURSW_MASK                     (0x2U)                                              /*!< TSI0_GENCS.CURSW Mask                   */
#define TSI_GENCS_CURSW_SHIFT                    (1U)                                                /*!< TSI0_GENCS.CURSW Position               */
#define TSI_GENCS_CURSW(x)                       (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< TSI0_GENCS.CURSW Field                  */
#define TSI_GENCS_EOSF_MASK                      (0x4U)                                              /*!< TSI0_GENCS.EOSF Mask                    */
#define TSI_GENCS_EOSF_SHIFT                     (2U)                                                /*!< TSI0_GENCS.EOSF Position                */
#define TSI_GENCS_EOSF(x)                        (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< TSI0_GENCS.EOSF Field                   */
#define TSI_GENCS_SCNIP_MASK                     (0x8U)                                              /*!< TSI0_GENCS.SCNIP Mask                   */
#define TSI_GENCS_SCNIP_SHIFT                    (3U)                                                /*!< TSI0_GENCS.SCNIP Position               */
#define TSI_GENCS_SCNIP(x)                       (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< TSI0_GENCS.SCNIP Field                  */
#define TSI_GENCS_STM_MASK                       (0x10U)                                             /*!< TSI0_GENCS.STM Mask                     */
#define TSI_GENCS_STM_SHIFT                      (4U)                                                /*!< TSI0_GENCS.STM Position                 */
#define TSI_GENCS_STM(x)                         (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< TSI0_GENCS.STM Field                    */
#define TSI_GENCS_STPE_MASK                      (0x20U)                                             /*!< TSI0_GENCS.STPE Mask                    */
#define TSI_GENCS_STPE_SHIFT                     (5U)                                                /*!< TSI0_GENCS.STPE Position                */
#define TSI_GENCS_STPE(x)                        (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< TSI0_GENCS.STPE Field                   */
#define TSI_GENCS_TSIIEN_MASK                    (0x40U)                                             /*!< TSI0_GENCS.TSIIEN Mask                  */
#define TSI_GENCS_TSIIEN_SHIFT                   (6U)                                                /*!< TSI0_GENCS.TSIIEN Position              */
#define TSI_GENCS_TSIIEN(x)                      (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< TSI0_GENCS.TSIIEN Field                 */
#define TSI_GENCS_TSIEN_MASK                     (0x80U)                                             /*!< TSI0_GENCS.TSIEN Mask                   */
#define TSI_GENCS_TSIEN_SHIFT                    (7U)                                                /*!< TSI0_GENCS.TSIEN Position               */
#define TSI_GENCS_TSIEN(x)                       (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< TSI0_GENCS.TSIEN Field                  */
#define TSI_GENCS_NSCN_MASK                      (0x1F00U)                                           /*!< TSI0_GENCS.NSCN Mask                    */
#define TSI_GENCS_NSCN_SHIFT                     (8U)                                                /*!< TSI0_GENCS.NSCN Position                */
#define TSI_GENCS_NSCN(x)                        (((uint32_t)(((uint32_t)(x))<<8U))&0x1F00UL)        /*!< TSI0_GENCS.NSCN Field                   */
#define TSI_GENCS_PS_MASK                        (0xE000U)                                           /*!< TSI0_GENCS.PS Mask                      */
#define TSI_GENCS_PS_SHIFT                       (13U)                                               /*!< TSI0_GENCS.PS Position                  */
#define TSI_GENCS_PS(x)                          (((uint32_t)(((uint32_t)(x))<<13U))&0xE000UL)       /*!< TSI0_GENCS.PS Field                     */
#define TSI_GENCS_EXTCHRG_MASK                   (0x70000U)                                          /*!< TSI0_GENCS.EXTCHRG Mask                 */
#define TSI_GENCS_EXTCHRG_SHIFT                  (16U)                                               /*!< TSI0_GENCS.EXTCHRG Position             */
#define TSI_GENCS_EXTCHRG(x)                     (((uint32_t)(((uint32_t)(x))<<16U))&0x70000UL)      /*!< TSI0_GENCS.EXTCHRG Field                */
#define TSI_GENCS_RS_MASK                        (0x70000U)                                          /*!< TSI0_GENCS.RS Mask                      */
#define TSI_GENCS_RS_SHIFT                       (16U)                                               /*!< TSI0_GENCS.RS Position                  */
#define TSI_GENCS_RS(x)                          (((uint32_t)(((uint32_t)(x))<<16U))&0x70000UL)      /*!< TSI0_GENCS.RS Field                     */
#define TSI_GENCS_RESISTOR_MASK                  (0x10000U)                                          /*!< TSI0_GENCS.RESISTOR Mask                */
#define TSI_GENCS_RESISTOR_SHIFT                 (16U)                                               /*!< TSI0_GENCS.RESISTOR Position            */
#define TSI_GENCS_RESISTOR(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< TSI0_GENCS.RESISTOR Field               */
#define TSI_GENCS_NOISE_THRESHOLD_MASK           (0x1E0000U)                                         /*!< TSI0_GENCS.NOISE_THRESHOLD Mask         */
#define TSI_GENCS_NOISE_THRESHOLD_SHIFT          (17U)                                               /*!< TSI0_GENCS.NOISE_THRESHOLD Position     */
#define TSI_GENCS_NOISE_THRESHOLD(x)             (((uint32_t)(((uint32_t)(x))<<17U))&0x1E0000UL)     /*!< TSI0_GENCS.NOISE_THRESHOLD Field        */
#define TSI_GENCS_FILTER_MASK                    (0x60000U)                                          /*!< TSI0_GENCS.FILTER Mask                  */
#define TSI_GENCS_FILTER_SHIFT                   (17U)                                               /*!< TSI0_GENCS.FILTER Position              */
#define TSI_GENCS_FILTER(x)                      (((uint32_t)(((uint32_t)(x))<<17U))&0x60000UL)      /*!< TSI0_GENCS.FILTER Field                 */
#define TSI_GENCS_DVOLT_MASK                     (0x180000U)                                         /*!< TSI0_GENCS.DVOLT Mask                   */
#define TSI_GENCS_DVOLT_SHIFT                    (19U)                                               /*!< TSI0_GENCS.DVOLT Position               */
#define TSI_GENCS_DVOLT(x)                       (((uint32_t)(((uint32_t)(x))<<19U))&0x180000UL)     /*!< TSI0_GENCS.DVOLT Field                  */
#define TSI_GENCS_REFCHRG_MASK                   (0xE00000U)                                         /*!< TSI0_GENCS.REFCHRG Mask                 */
#define TSI_GENCS_REFCHRG_SHIFT                  (21U)                                               /*!< TSI0_GENCS.REFCHRG Position             */
#define TSI_GENCS_REFCHRG(x)                     (((uint32_t)(((uint32_t)(x))<<21U))&0xE00000UL)     /*!< TSI0_GENCS.REFCHRG Field                */
#define TSI_GENCS_MODE_MASK                      (0xF000000U)                                        /*!< TSI0_GENCS.MODE Mask                    */
#define TSI_GENCS_MODE_SHIFT                     (24U)                                               /*!< TSI0_GENCS.MODE Position                */
#define TSI_GENCS_MODE(x)                        (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL)    /*!< TSI0_GENCS.MODE Field                   */
#define TSI_GENCS_ESOR_MASK                      (0x10000000U)                                       /*!< TSI0_GENCS.ESOR Mask                    */
#define TSI_GENCS_ESOR_SHIFT                     (28U)                                               /*!< TSI0_GENCS.ESOR Position                */
#define TSI_GENCS_ESOR(x)                        (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< TSI0_GENCS.ESOR Field                   */
#define TSI_GENCS_OUTRGF_MASK                    (0x80000000U)                                       /*!< TSI0_GENCS.OUTRGF Mask                  */
#define TSI_GENCS_OUTRGF_SHIFT                   (31U)                                               /*!< TSI0_GENCS.OUTRGF Position              */
#define TSI_GENCS_OUTRGF(x)                      (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< TSI0_GENCS.OUTRGF Field                 */
/* ------- DATA Bit Fields                          ------ */
#define TSI_DATA_TSICNT_MASK                     (0xFFFFU)                                           /*!< TSI0_DATA.TSICNT Mask                   */
#define TSI_DATA_TSICNT_SHIFT                    (0U)                                                /*!< TSI0_DATA.TSICNT Position               */
#define TSI_DATA_TSICNT(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TSI0_DATA.TSICNT Field                  */
#define TSI_DATA_SWTS_MASK                       (0x400000U)                                         /*!< TSI0_DATA.SWTS Mask                     */
#define TSI_DATA_SWTS_SHIFT                      (22U)                                               /*!< TSI0_DATA.SWTS Position                 */
#define TSI_DATA_SWTS(x)                         (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< TSI0_DATA.SWTS Field                    */
#define TSI_DATA_DMAEN_MASK                      (0x800000U)                                         /*!< TSI0_DATA.DMAEN Mask                    */
#define TSI_DATA_DMAEN_SHIFT                     (23U)                                               /*!< TSI0_DATA.DMAEN Position                */
#define TSI_DATA_DMAEN(x)                        (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< TSI0_DATA.DMAEN Field                   */
#define TSI_DATA_TSICH_MASK                      (0xF0000000U)                                       /*!< TSI0_DATA.TSICH Mask                    */
#define TSI_DATA_TSICH_SHIFT                     (28U)                                               /*!< TSI0_DATA.TSICH Position                */
#define TSI_DATA_TSICH(x)                        (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL)   /*!< TSI0_DATA.TSICH Field                   */
/* ------- TSHD Bit Fields                          ------ */
#define TSI_TSHD_THRESL_MASK                     (0xFFFFU)                                           /*!< TSI0_TSHD.THRESL Mask                   */
#define TSI_TSHD_THRESL_SHIFT                    (0U)                                                /*!< TSI0_TSHD.THRESL Position               */
#define TSI_TSHD_THRESL(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< TSI0_TSHD.THRESL Field                  */
#define TSI_TSHD_THRESH_MASK                     (0xFFFF0000U)                                       /*!< TSI0_TSHD.THRESH Mask                   */
#define TSI_TSHD_THRESH_SHIFT                    (16U)                                               /*!< TSI0_TSHD.THRESH Position               */
#define TSI_TSHD_THRESH(x)                       (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< TSI0_TSHD.THRESH Field                  */
/**
 * @} */ /* End group TSI_Register_Masks_GROUP 
 */

/* TSI0 - Peripheral instance base addresses */
#define TSI0_BasePtr                   0x40045000UL //!< Peripheral base address
#define TSI0                           ((TSI_Type *) TSI0_BasePtr) //!< Freescale base pointer
#define TSI0_BASE_PTR                  (TSI0) //!< Freescale style base pointer
#define TSI0_IRQS { TSI0_IRQn,  }

/**
 * @} */ /* End group TSI_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup VREF_Peripheral_access_layer_GROUP VREF Peripheral Access Layer
* @brief C Struct for VREF
* @{
*/

/* ================================================================================ */
/* ================           VREF (file:VREF_C)                   ================ */
/* ================================================================================ */

/**
 * @brief Voltage Reference
 */
/**
* @addtogroup VREF_structs_GROUP VREF struct
* @brief Struct for VREF
* @{
*/
typedef struct VREF_Type {
   __IO uint8_t   TRM;                          /**< 0000: Trim Register                                                */
   __IO uint8_t   SC;                           /**< 0001: Status and Control Register                                  */
} VREF_Type;

/**
 * @} */ /* End group VREF_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'VREF' Position & Mask macros                        ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup VREF_Register_Masks_GROUP VREF Register Masks
* @brief Register Masks for VREF
* @{
*/
/* ------- TRM Bit Fields                           ------ */
#define VREF_TRM_TRIM_MASK                       (0x3FU)                                             /*!< VREF_TRM.TRIM Mask                      */
#define VREF_TRM_TRIM_SHIFT                      (0U)                                                /*!< VREF_TRM.TRIM Position                  */
#define VREF_TRM_TRIM(x)                         (((uint8_t)(((uint8_t)(x))<<0U))&0x3FUL)            /*!< VREF_TRM.TRIM Field                     */
#define VREF_TRM_CHOPEN_MASK                     (0x40U)                                             /*!< VREF_TRM.CHOPEN Mask                    */
#define VREF_TRM_CHOPEN_SHIFT                    (6U)                                                /*!< VREF_TRM.CHOPEN Position                */
#define VREF_TRM_CHOPEN(x)                       (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< VREF_TRM.CHOPEN Field                   */
/* ------- SC Bit Fields                            ------ */
#define VREF_SC_MODE_LV_MASK                     (0x3U)                                              /*!< VREF_SC.MODE_LV Mask                    */
#define VREF_SC_MODE_LV_SHIFT                    (0U)                                                /*!< VREF_SC.MODE_LV Position                */
#define VREF_SC_MODE_LV(x)                       (((uint8_t)(((uint8_t)(x))<<0U))&0x3UL)             /*!< VREF_SC.MODE_LV Field                   */
#define VREF_SC_VREFST_MASK                      (0x4U)                                              /*!< VREF_SC.VREFST Mask                     */
#define VREF_SC_VREFST_SHIFT                     (2U)                                                /*!< VREF_SC.VREFST Position                 */
#define VREF_SC_VREFST(x)                        (((uint8_t)(((uint8_t)(x))<<2U))&0x4UL)             /*!< VREF_SC.VREFST Field                    */
#define VREF_SC_ICOMPEN_MASK                     (0x20U)                                             /*!< VREF_SC.ICOMPEN Mask                    */
#define VREF_SC_ICOMPEN_SHIFT                    (5U)                                                /*!< VREF_SC.ICOMPEN Position                */
#define VREF_SC_ICOMPEN(x)                       (((uint8_t)(((uint8_t)(x))<<5U))&0x20UL)            /*!< VREF_SC.ICOMPEN Field                   */
#define VREF_SC_REGEN_MASK                       (0x40U)                                             /*!< VREF_SC.REGEN Mask                      */
#define VREF_SC_REGEN_SHIFT                      (6U)                                                /*!< VREF_SC.REGEN Position                  */
#define VREF_SC_REGEN(x)                         (((uint8_t)(((uint8_t)(x))<<6U))&0x40UL)            /*!< VREF_SC.REGEN Field                     */
#define VREF_SC_VREFEN_MASK                      (0x80U)                                             /*!< VREF_SC.VREFEN Mask                     */
#define VREF_SC_VREFEN_SHIFT                     (7U)                                                /*!< VREF_SC.VREFEN Position                 */
#define VREF_SC_VREFEN(x)                        (((uint8_t)(((uint8_t)(x))<<7U))&0x80UL)            /*!< VREF_SC.VREFEN Field                    */
/**
 * @} */ /* End group VREF_Register_Masks_GROUP 
 */

/* VREF - Peripheral instance base addresses */
#define VREF_BasePtr                   0x40074000UL //!< Peripheral base address
#define VREF                           ((VREF_Type *) VREF_BasePtr) //!< Freescale base pointer
#define VREF_BASE_PTR                  (VREF) //!< Freescale style base pointer
/**
 * @} */ /* End group VREF_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XCVR_ANALOG_Peripheral_access_layer_GROUP XCVR_ANALOG Peripheral Access Layer
* @brief C Struct for XCVR_ANALOG
* @{
*/

/* ================================================================================ */
/* ================           XCVR_ANALOG (file:XCVR_ANALOG_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief XCVR_ANALOG
 */
/**
* @addtogroup XCVR_ANALOG_structs_GROUP XCVR_ANALOG struct
* @brief Struct for XCVR_ANALOG
* @{
*/
typedef struct XCVR_ANALOG_Type {
   __IO uint32_t  BB_LDO_1;                     /**< 0000: RF Analog Baseband LDO Control 1                             */
   __IO uint32_t  BB_LDO_2;                     /**< 0004: RF Analog Baseband LDO Control 2                             */
   __IO uint32_t  RX_ADC;                       /**< 0008: RF Analog ADC Control                                        */
   __IO uint32_t  RX_BBA;                       /**< 000C: RF Analog BBA Control                                        */
   __IO uint32_t  RX_LNA;                       /**< 0010: RF Analog LNA Control                                        */
   __IO uint32_t  RX_TZA;                       /**< 0014: RF Analog TZA Control                                        */
   __IO uint32_t  RX_AUXPLL;                    /**< 0018: RF Analog Aux PLL Control                                    */
   __IO uint32_t  SY_CTRL_1;                    /**< 001C: RF Analog Synthesizer Control 1                              */
   __IO uint32_t  SY_CTRL_2;                    /**< 0020: RF Analog Synthesizer Control 2                              */
   __IO uint32_t  TX_DAC_PA;                    /**< 0024: RF Analog TX HPM DAC and PA Control                          */
   __IO uint32_t  BALUN_TX;                     /**< 0028: RF Analog Balun TX Mode Control                              */
   __IO uint32_t  BALUN_RX;                     /**< 002C: RF Analog Balun RX Mode Control                              */
   __I  uint32_t  DFT_OBSV_1;                   /**< 0030: RF Analog DFT Observation Register 1                         */
   __IO uint32_t  DFT_OBSV_2;                   /**< 0034: RF Analog DFT Observation Register 2                         */
} XCVR_ANALOG_Type;

/**
 * @} */ /* End group XCVR_ANALOG_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XCVR_ANALOG' Position & Mask macros                 ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XCVR_ANALOG_Register_Masks_GROUP XCVR_ANALOG Register Masks
* @brief Register Masks for XCVR_ANALOG
* @{
*/
/* ------- BB_LDO_1 Bit Fields                      ------ */
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_BYP_MASK (0x1U)                                           /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_BYP Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_BYP_SHIFT (0U)                                            /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_BYP Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_BYP(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)          /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_BYP Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_DIAGSEL_MASK (0x2U)                                       /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_DIAGSEL Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_DIAGSEL_SHIFT (1U)                                        /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_DIAGSEL Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_DIAGSEL(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)      /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_DIAGSEL Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_SPARE_MASK (0xCU)                                         /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_SPARE Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_SPARE_SHIFT (2U)                                          /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_SPARE Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_SPARE(x) (((uint32_t)(((uint32_t)(x))<<2U))&0xCUL)        /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_SPARE Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_TRIM_MASK (0x70U)                                         /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_TRIM Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_TRIM_SHIFT (4U)                                           /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_TRIM Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_ADCDAC_TRIM(x) (((uint32_t)(((uint32_t)(x))<<4U))&0x70UL)        /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_ADCDAC_TRIM Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_BYP_MASK (0x100U)                                            /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_BYP Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_BYP_SHIFT (8U)                                               /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_BYP Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_BYP(x)   (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_BYP Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_DIAGSEL_MASK (0x200U)                                        /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_DIAGSEL Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_DIAGSEL_SHIFT (9U)                                           /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_DIAGSEL Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_DIAGSEL(x) (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)       /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_DIAGSEL Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_SPARE_MASK (0xC00U)                                          /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_SPARE Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_SPARE_SHIFT (10U)                                            /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_SPARE Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_SPARE(x) (((uint32_t)(((uint32_t)(x))<<10U))&0xC00UL)        /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_SPARE Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_TRIM_MASK (0x7000U)                                          /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_TRIM Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_TRIM_SHIFT (12U)                                             /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_TRIM Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_BBA_TRIM(x)  (((uint32_t)(((uint32_t)(x))<<12U))&0x7000UL)       /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_BBA_TRIM Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_BYP_MASK (0x10000U)                                         /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_BYP Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_BYP_SHIFT (16U)                                             /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_BYP Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_BYP(x)  (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_BYP Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_DIAGSEL_MASK (0x20000U)                                     /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_DIAGSEL Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_DIAGSEL_SHIFT (17U)                                         /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_DIAGSEL Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_DIAGSEL(x) (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)   /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_DIAGSEL Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_SPARE_MASK (0xC0000U)                                       /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_SPARE Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_SPARE_SHIFT (18U)                                           /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_SPARE Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_SPARE(x) (((uint32_t)(((uint32_t)(x))<<18U))&0xC0000UL)     /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_SPARE Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_TRIM_MASK (0x700000U)                                       /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_TRIM Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_TRIM_SHIFT (20U)                                            /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_TRIM Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_FDBK_TRIM(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x700000UL)     /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_FDBK_TRIM Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_BYP_MASK  (0x1000000U)                                        /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_BYP Mask */
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_BYP_SHIFT (24U)                                               /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_BYP Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_BYP(x)    (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_BYP Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_DIAGSEL_MASK (0x2000000U)                                     /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_DIAGSEL Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_DIAGSEL_SHIFT (25U)                                           /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_DIAGSEL Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_DIAGSEL(x) (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)   /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_DIAGSEL Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_SPARE_MASK (0xC000000U)                                       /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_SPARE Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_SPARE_SHIFT (26U)                                             /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_SPARE Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_SPARE(x)  (((uint32_t)(((uint32_t)(x))<<26U))&0xC000000UL)    /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_SPARE Field*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_TRIM_MASK (0x70000000U)                                       /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_TRIM Mask*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_TRIM_SHIFT (28U)                                              /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_TRIM Position*/
#define XCVR_ANALOG_BB_LDO_1_BB_LDO_HF_TRIM(x)   (((uint32_t)(((uint32_t)(x))<<28U))&0x70000000UL)   /*!< XCVR_ANALOG_BB_LDO_1.BB_LDO_HF_TRIM Field*/
/* ------- BB_LDO_2 Bit Fields                      ------ */
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_BYP_MASK  (0x1U)                                              /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_BYP Mask */
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_BYP_SHIFT (0U)                                                /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_BYP Position*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_BYP(x)    (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_BYP Field*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_DIAGSEL_MASK (0x2U)                                           /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_DIAGSEL Mask*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_DIAGSEL_SHIFT (1U)                                            /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_DIAGSEL Position*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_DIAGSEL(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)          /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_DIAGSEL Field*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_SPARE_MASK (0xCU)                                             /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_SPARE Mask*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_SPARE_SHIFT (2U)                                              /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_SPARE Position*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_SPARE(x)  (((uint32_t)(((uint32_t)(x))<<2U))&0xCUL)           /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_SPARE Field*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_TRIM_MASK (0x70U)                                             /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_TRIM Mask*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_TRIM_SHIFT (4U)                                               /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_TRIM Position*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_PD_TRIM(x)   (((uint32_t)(((uint32_t)(x))<<4U))&0x70UL)          /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_PD_TRIM Field*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCO_SPARE_MASK (0x300U)                                          /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCO_SPARE Mask*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCO_SPARE_SHIFT (8U)                                             /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCO_SPARE Position*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCO_SPARE(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)         /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCO_SPARE Field*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCOLO_BYP_MASK (0x400U)                                          /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCOLO_BYP Mask*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCOLO_BYP_SHIFT (10U)                                            /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCOLO_BYP Position*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCOLO_BYP(x) (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCOLO_BYP Field*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCOLO_DIAGSEL_MASK (0x800U)                                      /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCOLO_DIAGSEL Mask*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCOLO_DIAGSEL_SHIFT (11U)                                        /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCOLO_DIAGSEL Position*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCOLO_DIAGSEL(x) (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)    /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCOLO_DIAGSEL Field*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCOLO_TRIM_MASK (0x7000U)                                        /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCOLO_TRIM Mask*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCOLO_TRIM_SHIFT (12U)                                           /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCOLO_TRIM Position*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VCOLO_TRIM(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x7000UL)      /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VCOLO_TRIM Field*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VTREF_DIAGSEL_MASK (0x10000U)                                    /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VTREF_DIAGSEL Mask*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VTREF_DIAGSEL_SHIFT (16U)                                        /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VTREF_DIAGSEL Position*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VTREF_DIAGSEL(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)  /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VTREF_DIAGSEL Field*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VTREF_TC_MASK (0x60000U)                                         /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VTREF_TC Mask*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VTREF_TC_SHIFT (17U)                                             /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VTREF_TC Position*/
#define XCVR_ANALOG_BB_LDO_2_BB_LDO_VTREF_TC(x)  (((uint32_t)(((uint32_t)(x))<<17U))&0x60000UL)      /*!< XCVR_ANALOG_BB_LDO_2.BB_LDO_VTREF_TC Field*/
/* ------- RX_ADC Bit Fields                        ------ */
#define XCVR_ANALOG_RX_ADC_RX_ADC_BUMP_MASK      (0xFFU)                                             /*!< XCVR_ANALOG_RX_ADC.RX_ADC_BUMP Mask     */
#define XCVR_ANALOG_RX_ADC_RX_ADC_BUMP_SHIFT     (0U)                                                /*!< XCVR_ANALOG_RX_ADC.RX_ADC_BUMP Position */
#define XCVR_ANALOG_RX_ADC_RX_ADC_BUMP(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_ANALOG_RX_ADC.RX_ADC_BUMP Field    */
#define XCVR_ANALOG_RX_ADC_RX_ADC_FS_SEL_MASK    (0x300U)                                            /*!< XCVR_ANALOG_RX_ADC.RX_ADC_FS_SEL Mask   */
#define XCVR_ANALOG_RX_ADC_RX_ADC_FS_SEL_SHIFT   (8U)                                                /*!< XCVR_ANALOG_RX_ADC.RX_ADC_FS_SEL Position*/
#define XCVR_ANALOG_RX_ADC_RX_ADC_FS_SEL(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)         /*!< XCVR_ANALOG_RX_ADC.RX_ADC_FS_SEL Field  */
#define XCVR_ANALOG_RX_ADC_RX_ADC_I_DIAGSEL_MASK (0x400U)                                            /*!< XCVR_ANALOG_RX_ADC.RX_ADC_I_DIAGSEL Mask*/
#define XCVR_ANALOG_RX_ADC_RX_ADC_I_DIAGSEL_SHIFT (10U)                                              /*!< XCVR_ANALOG_RX_ADC.RX_ADC_I_DIAGSEL Position*/
#define XCVR_ANALOG_RX_ADC_RX_ADC_I_DIAGSEL(x)   (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< XCVR_ANALOG_RX_ADC.RX_ADC_I_DIAGSEL Field*/
#define XCVR_ANALOG_RX_ADC_RX_ADC_Q_DIAGSEL_MASK (0x800U)                                            /*!< XCVR_ANALOG_RX_ADC.RX_ADC_Q_DIAGSEL Mask*/
#define XCVR_ANALOG_RX_ADC_RX_ADC_Q_DIAGSEL_SHIFT (11U)                                              /*!< XCVR_ANALOG_RX_ADC.RX_ADC_Q_DIAGSEL Position*/
#define XCVR_ANALOG_RX_ADC_RX_ADC_Q_DIAGSEL(x)   (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< XCVR_ANALOG_RX_ADC.RX_ADC_Q_DIAGSEL Field*/
#define XCVR_ANALOG_RX_ADC_RX_ADC_SPARE_MASK     (0xF000U)                                           /*!< XCVR_ANALOG_RX_ADC.RX_ADC_SPARE Mask    */
#define XCVR_ANALOG_RX_ADC_RX_ADC_SPARE_SHIFT    (12U)                                               /*!< XCVR_ANALOG_RX_ADC.RX_ADC_SPARE Position*/
#define XCVR_ANALOG_RX_ADC_RX_ADC_SPARE(x)       (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< XCVR_ANALOG_RX_ADC.RX_ADC_SPARE Field   */
/* ------- RX_BBA Bit Fields                        ------ */
#define XCVR_ANALOG_RX_BBA_RX_BBA_BW_SEL_MASK    (0x7U)                                              /*!< XCVR_ANALOG_RX_BBA.RX_BBA_BW_SEL Mask   */
#define XCVR_ANALOG_RX_BBA_RX_BBA_BW_SEL_SHIFT   (0U)                                                /*!< XCVR_ANALOG_RX_BBA.RX_BBA_BW_SEL Position*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_BW_SEL(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< XCVR_ANALOG_RX_BBA.RX_BBA_BW_SEL Field  */
#define XCVR_ANALOG_RX_BBA_RX_BBA_CUR_BUMP_MASK  (0x8U)                                              /*!< XCVR_ANALOG_RX_BBA.RX_BBA_CUR_BUMP Mask */
#define XCVR_ANALOG_RX_BBA_RX_BBA_CUR_BUMP_SHIFT (3U)                                                /*!< XCVR_ANALOG_RX_BBA.RX_BBA_CUR_BUMP Position*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_CUR_BUMP(x)    (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_ANALOG_RX_BBA.RX_BBA_CUR_BUMP Field*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL1_MASK  (0x10U)                                             /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL1 Mask */
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL1_SHIFT (4U)                                                /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL1 Position*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL1(x)    (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL1 Field*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL2_MASK  (0x20U)                                             /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL2 Mask */
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL2_SHIFT (5U)                                                /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL2 Position*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL2(x)    (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL2 Field*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL3_MASK  (0x40U)                                             /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL3 Mask */
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL3_SHIFT (6U)                                                /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL3 Position*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL3(x)    (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL3 Field*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL4_MASK  (0x80U)                                             /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL4 Mask */
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL4_SHIFT (7U)                                                /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL4 Position*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_DIAGSEL4(x)    (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_ANALOG_RX_BBA.RX_BBA_DIAGSEL4 Field*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_SPARE_MASK     (0x3F0000U)                                         /*!< XCVR_ANALOG_RX_BBA.RX_BBA_SPARE Mask    */
#define XCVR_ANALOG_RX_BBA_RX_BBA_SPARE_SHIFT    (16U)                                               /*!< XCVR_ANALOG_RX_BBA.RX_BBA_SPARE Position*/
#define XCVR_ANALOG_RX_BBA_RX_BBA_SPARE(x)       (((uint32_t)(((uint32_t)(x))<<16U))&0x3F0000UL)     /*!< XCVR_ANALOG_RX_BBA.RX_BBA_SPARE Field   */
#define XCVR_ANALOG_RX_BBA_RX_BBA2_BW_SEL_MASK   (0x7000000U)                                        /*!< XCVR_ANALOG_RX_BBA.RX_BBA2_BW_SEL Mask  */
#define XCVR_ANALOG_RX_BBA_RX_BBA2_BW_SEL_SHIFT  (24U)                                               /*!< XCVR_ANALOG_RX_BBA.RX_BBA2_BW_SEL Position*/
#define XCVR_ANALOG_RX_BBA_RX_BBA2_BW_SEL(x)     (((uint32_t)(((uint32_t)(x))<<24U))&0x7000000UL)    /*!< XCVR_ANALOG_RX_BBA.RX_BBA2_BW_SEL Field */
#define XCVR_ANALOG_RX_BBA_RX_BBA2_SPARE_MASK    (0x70000000U)                                       /*!< XCVR_ANALOG_RX_BBA.RX_BBA2_SPARE Mask   */
#define XCVR_ANALOG_RX_BBA_RX_BBA2_SPARE_SHIFT   (28U)                                               /*!< XCVR_ANALOG_RX_BBA.RX_BBA2_SPARE Position*/
#define XCVR_ANALOG_RX_BBA_RX_BBA2_SPARE(x)      (((uint32_t)(((uint32_t)(x))<<28U))&0x70000000UL)   /*!< XCVR_ANALOG_RX_BBA.RX_BBA2_SPARE Field  */
/* ------- RX_LNA Bit Fields                        ------ */
#define XCVR_ANALOG_RX_LNA_RX_LNA_BUMP_MASK      (0xFU)                                              /*!< XCVR_ANALOG_RX_LNA.RX_LNA_BUMP Mask     */
#define XCVR_ANALOG_RX_LNA_RX_LNA_BUMP_SHIFT     (0U)                                                /*!< XCVR_ANALOG_RX_LNA.RX_LNA_BUMP Position */
#define XCVR_ANALOG_RX_LNA_RX_LNA_BUMP(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< XCVR_ANALOG_RX_LNA.RX_LNA_BUMP Field    */
#define XCVR_ANALOG_RX_LNA_RX_LNA_HG_DIAGSEL_MASK (0x10U)                                            /*!< XCVR_ANALOG_RX_LNA.RX_LNA_HG_DIAGSEL Mask*/
#define XCVR_ANALOG_RX_LNA_RX_LNA_HG_DIAGSEL_SHIFT (4U)                                              /*!< XCVR_ANALOG_RX_LNA.RX_LNA_HG_DIAGSEL Position*/
#define XCVR_ANALOG_RX_LNA_RX_LNA_HG_DIAGSEL(x)  (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_ANALOG_RX_LNA.RX_LNA_HG_DIAGSEL Field*/
#define XCVR_ANALOG_RX_LNA_RX_LNA_HIZ_ENABLE_MASK (0x20U)                                            /*!< XCVR_ANALOG_RX_LNA.RX_LNA_HIZ_ENABLE Mask*/
#define XCVR_ANALOG_RX_LNA_RX_LNA_HIZ_ENABLE_SHIFT (5U)                                              /*!< XCVR_ANALOG_RX_LNA.RX_LNA_HIZ_ENABLE Position*/
#define XCVR_ANALOG_RX_LNA_RX_LNA_HIZ_ENABLE(x)  (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_ANALOG_RX_LNA.RX_LNA_HIZ_ENABLE Field*/
#define XCVR_ANALOG_RX_LNA_RX_LNA_LG_DIAGSEL_MASK (0x40U)                                            /*!< XCVR_ANALOG_RX_LNA.RX_LNA_LG_DIAGSEL Mask*/
#define XCVR_ANALOG_RX_LNA_RX_LNA_LG_DIAGSEL_SHIFT (6U)                                              /*!< XCVR_ANALOG_RX_LNA.RX_LNA_LG_DIAGSEL Position*/
#define XCVR_ANALOG_RX_LNA_RX_LNA_LG_DIAGSEL(x)  (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_ANALOG_RX_LNA.RX_LNA_LG_DIAGSEL Field*/
#define XCVR_ANALOG_RX_LNA_RX_LNA_SPARE_MASK     (0x300U)                                            /*!< XCVR_ANALOG_RX_LNA.RX_LNA_SPARE Mask    */
#define XCVR_ANALOG_RX_LNA_RX_LNA_SPARE_SHIFT    (8U)                                                /*!< XCVR_ANALOG_RX_LNA.RX_LNA_SPARE Position*/
#define XCVR_ANALOG_RX_LNA_RX_LNA_SPARE(x)       (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)         /*!< XCVR_ANALOG_RX_LNA.RX_LNA_SPARE Field   */
#define XCVR_ANALOG_RX_LNA_RX_MIXER_BUMP_MASK    (0xF0000U)                                          /*!< XCVR_ANALOG_RX_LNA.RX_MIXER_BUMP Mask   */
#define XCVR_ANALOG_RX_LNA_RX_MIXER_BUMP_SHIFT   (16U)                                               /*!< XCVR_ANALOG_RX_LNA.RX_MIXER_BUMP Position*/
#define XCVR_ANALOG_RX_LNA_RX_MIXER_BUMP(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< XCVR_ANALOG_RX_LNA.RX_MIXER_BUMP Field  */
#define XCVR_ANALOG_RX_LNA_RX_MIXER_SPARE_MASK   (0x100000U)                                         /*!< XCVR_ANALOG_RX_LNA.RX_MIXER_SPARE Mask  */
#define XCVR_ANALOG_RX_LNA_RX_MIXER_SPARE_SHIFT  (20U)                                               /*!< XCVR_ANALOG_RX_LNA.RX_MIXER_SPARE Position*/
#define XCVR_ANALOG_RX_LNA_RX_MIXER_SPARE(x)     (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< XCVR_ANALOG_RX_LNA.RX_MIXER_SPARE Field */
/* ------- RX_TZA Bit Fields                        ------ */
#define XCVR_ANALOG_RX_TZA_RX_TZA_BW_SEL_MASK    (0x7U)                                              /*!< XCVR_ANALOG_RX_TZA.RX_TZA_BW_SEL Mask   */
#define XCVR_ANALOG_RX_TZA_RX_TZA_BW_SEL_SHIFT   (0U)                                                /*!< XCVR_ANALOG_RX_TZA.RX_TZA_BW_SEL Position*/
#define XCVR_ANALOG_RX_TZA_RX_TZA_BW_SEL(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< XCVR_ANALOG_RX_TZA.RX_TZA_BW_SEL Field  */
#define XCVR_ANALOG_RX_TZA_RX_TZA_CUR_BUMP_MASK  (0x8U)                                              /*!< XCVR_ANALOG_RX_TZA.RX_TZA_CUR_BUMP Mask */
#define XCVR_ANALOG_RX_TZA_RX_TZA_CUR_BUMP_SHIFT (3U)                                                /*!< XCVR_ANALOG_RX_TZA.RX_TZA_CUR_BUMP Position*/
#define XCVR_ANALOG_RX_TZA_RX_TZA_CUR_BUMP(x)    (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_ANALOG_RX_TZA.RX_TZA_CUR_BUMP Field*/
#define XCVR_ANALOG_RX_TZA_RX_TZA_GAIN_BUMP_MASK (0x10U)                                             /*!< XCVR_ANALOG_RX_TZA.RX_TZA_GAIN_BUMP Mask*/
#define XCVR_ANALOG_RX_TZA_RX_TZA_GAIN_BUMP_SHIFT (4U)                                               /*!< XCVR_ANALOG_RX_TZA.RX_TZA_GAIN_BUMP Position*/
#define XCVR_ANALOG_RX_TZA_RX_TZA_GAIN_BUMP(x)   (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_ANALOG_RX_TZA.RX_TZA_GAIN_BUMP Field*/
#define XCVR_ANALOG_RX_TZA_RX_TZA_SPARE_MASK     (0x3F0000U)                                         /*!< XCVR_ANALOG_RX_TZA.RX_TZA_SPARE Mask    */
#define XCVR_ANALOG_RX_TZA_RX_TZA_SPARE_SHIFT    (16U)                                               /*!< XCVR_ANALOG_RX_TZA.RX_TZA_SPARE Position*/
#define XCVR_ANALOG_RX_TZA_RX_TZA_SPARE(x)       (((uint32_t)(((uint32_t)(x))<<16U))&0x3F0000UL)     /*!< XCVR_ANALOG_RX_TZA.RX_TZA_SPARE Field   */
#define XCVR_ANALOG_RX_TZA_RX_TZA1_DIAGSEL_MASK  (0x1000000U)                                        /*!< XCVR_ANALOG_RX_TZA.RX_TZA1_DIAGSEL Mask */
#define XCVR_ANALOG_RX_TZA_RX_TZA1_DIAGSEL_SHIFT (24U)                                               /*!< XCVR_ANALOG_RX_TZA.RX_TZA1_DIAGSEL Position*/
#define XCVR_ANALOG_RX_TZA_RX_TZA1_DIAGSEL(x)    (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< XCVR_ANALOG_RX_TZA.RX_TZA1_DIAGSEL Field*/
#define XCVR_ANALOG_RX_TZA_RX_TZA2_DIAGSEL_MASK  (0x2000000U)                                        /*!< XCVR_ANALOG_RX_TZA.RX_TZA2_DIAGSEL Mask */
#define XCVR_ANALOG_RX_TZA_RX_TZA2_DIAGSEL_SHIFT (25U)                                               /*!< XCVR_ANALOG_RX_TZA.RX_TZA2_DIAGSEL Position*/
#define XCVR_ANALOG_RX_TZA_RX_TZA2_DIAGSEL(x)    (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< XCVR_ANALOG_RX_TZA.RX_TZA2_DIAGSEL Field*/
#define XCVR_ANALOG_RX_TZA_RX_TZA3_DIAGSEL_MASK  (0x4000000U)                                        /*!< XCVR_ANALOG_RX_TZA.RX_TZA3_DIAGSEL Mask */
#define XCVR_ANALOG_RX_TZA_RX_TZA3_DIAGSEL_SHIFT (26U)                                               /*!< XCVR_ANALOG_RX_TZA.RX_TZA3_DIAGSEL Position*/
#define XCVR_ANALOG_RX_TZA_RX_TZA3_DIAGSEL(x)    (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< XCVR_ANALOG_RX_TZA.RX_TZA3_DIAGSEL Field*/
#define XCVR_ANALOG_RX_TZA_RX_TZA4_DIAGSEL_MASK  (0x8000000U)                                        /*!< XCVR_ANALOG_RX_TZA.RX_TZA4_DIAGSEL Mask */
#define XCVR_ANALOG_RX_TZA_RX_TZA4_DIAGSEL_SHIFT (27U)                                               /*!< XCVR_ANALOG_RX_TZA.RX_TZA4_DIAGSEL Position*/
#define XCVR_ANALOG_RX_TZA_RX_TZA4_DIAGSEL(x)    (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< XCVR_ANALOG_RX_TZA.RX_TZA4_DIAGSEL Field*/
/* ------- RX_AUXPLL Bit Fields                     ------ */
#define XCVR_ANALOG_RX_AUXPLL_BIAS_TRIM_MASK     (0x7U)                                              /*!< XCVR_ANALOG_RX_AUXPLL.BIAS_TRIM Mask    */
#define XCVR_ANALOG_RX_AUXPLL_BIAS_TRIM_SHIFT    (0U)                                                /*!< XCVR_ANALOG_RX_AUXPLL.BIAS_TRIM Position*/
#define XCVR_ANALOG_RX_AUXPLL_BIAS_TRIM(x)       (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< XCVR_ANALOG_RX_AUXPLL.BIAS_TRIM Field   */
#define XCVR_ANALOG_RX_AUXPLL_DIAGSEL1_MASK      (0x8U)                                              /*!< XCVR_ANALOG_RX_AUXPLL.DIAGSEL1 Mask     */
#define XCVR_ANALOG_RX_AUXPLL_DIAGSEL1_SHIFT     (3U)                                                /*!< XCVR_ANALOG_RX_AUXPLL.DIAGSEL1 Position */
#define XCVR_ANALOG_RX_AUXPLL_DIAGSEL1(x)        (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_ANALOG_RX_AUXPLL.DIAGSEL1 Field    */
#define XCVR_ANALOG_RX_AUXPLL_DIAGSEL2_MASK      (0x10U)                                             /*!< XCVR_ANALOG_RX_AUXPLL.DIAGSEL2 Mask     */
#define XCVR_ANALOG_RX_AUXPLL_DIAGSEL2_SHIFT     (4U)                                                /*!< XCVR_ANALOG_RX_AUXPLL.DIAGSEL2 Position */
#define XCVR_ANALOG_RX_AUXPLL_DIAGSEL2(x)        (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_ANALOG_RX_AUXPLL.DIAGSEL2 Field    */
#define XCVR_ANALOG_RX_AUXPLL_LF_CNTL_MASK       (0xE0U)                                             /*!< XCVR_ANALOG_RX_AUXPLL.LF_CNTL Mask      */
#define XCVR_ANALOG_RX_AUXPLL_LF_CNTL_SHIFT      (5U)                                                /*!< XCVR_ANALOG_RX_AUXPLL.LF_CNTL Position  */
#define XCVR_ANALOG_RX_AUXPLL_LF_CNTL(x)         (((uint32_t)(((uint32_t)(x))<<5U))&0xE0UL)          /*!< XCVR_ANALOG_RX_AUXPLL.LF_CNTL Field     */
#define XCVR_ANALOG_RX_AUXPLL_SPARE_MASK         (0xF00U)                                            /*!< XCVR_ANALOG_RX_AUXPLL.SPARE Mask        */
#define XCVR_ANALOG_RX_AUXPLL_SPARE_SHIFT        (8U)                                                /*!< XCVR_ANALOG_RX_AUXPLL.SPARE Position    */
#define XCVR_ANALOG_RX_AUXPLL_SPARE(x)           (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< XCVR_ANALOG_RX_AUXPLL.SPARE Field       */
#define XCVR_ANALOG_RX_AUXPLL_VCO_DAC_REF_ADJUST_MASK (0xF000U)                                      /*!< XCVR_ANALOG_RX_AUXPLL.VCO_DAC_REF_ADJUST Mask*/
#define XCVR_ANALOG_RX_AUXPLL_VCO_DAC_REF_ADJUST_SHIFT (12U)                                         /*!< XCVR_ANALOG_RX_AUXPLL.VCO_DAC_REF_ADJUST Position*/
#define XCVR_ANALOG_RX_AUXPLL_VCO_DAC_REF_ADJUST(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)    /*!< XCVR_ANALOG_RX_AUXPLL.VCO_DAC_REF_ADJUST Field*/
#define XCVR_ANALOG_RX_AUXPLL_VTUNE_TESTMODE_MASK (0x10000U)                                         /*!< XCVR_ANALOG_RX_AUXPLL.VTUNE_TESTMODE Mask*/
#define XCVR_ANALOG_RX_AUXPLL_VTUNE_TESTMODE_SHIFT (16U)                                             /*!< XCVR_ANALOG_RX_AUXPLL.VTUNE_TESTMODE Position*/
#define XCVR_ANALOG_RX_AUXPLL_VTUNE_TESTMODE(x)  (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< XCVR_ANALOG_RX_AUXPLL.VTUNE_TESTMODE Field*/
#define XCVR_ANALOG_RX_AUXPLL_RXTX_BAL_BIAST_MASK (0x300000U)                                        /*!< XCVR_ANALOG_RX_AUXPLL.RXTX_BAL_BIAST Mask*/
#define XCVR_ANALOG_RX_AUXPLL_RXTX_BAL_BIAST_SHIFT (20U)                                             /*!< XCVR_ANALOG_RX_AUXPLL.RXTX_BAL_BIAST Position*/
#define XCVR_ANALOG_RX_AUXPLL_RXTX_BAL_BIAST(x)  (((uint32_t)(((uint32_t)(x))<<20U))&0x300000UL)     /*!< XCVR_ANALOG_RX_AUXPLL.RXTX_BAL_BIAST Field*/
#define XCVR_ANALOG_RX_AUXPLL_RXTX_BAL_SPARE_MASK (0x7000000U)                                       /*!< XCVR_ANALOG_RX_AUXPLL.RXTX_BAL_SPARE Mask*/
#define XCVR_ANALOG_RX_AUXPLL_RXTX_BAL_SPARE_SHIFT (24U)                                             /*!< XCVR_ANALOG_RX_AUXPLL.RXTX_BAL_SPARE Position*/
#define XCVR_ANALOG_RX_AUXPLL_RXTX_BAL_SPARE(x)  (((uint32_t)(((uint32_t)(x))<<24U))&0x7000000UL)    /*!< XCVR_ANALOG_RX_AUXPLL.RXTX_BAL_SPARE Field*/
#define XCVR_ANALOG_RX_AUXPLL_RXTX_RCCAL_DIAGSEL_MASK (0x10000000U)                                  /*!< XCVR_ANALOG_RX_AUXPLL.RXTX_RCCAL_DIAGSEL Mask*/
#define XCVR_ANALOG_RX_AUXPLL_RXTX_RCCAL_DIAGSEL_SHIFT (28U)                                         /*!< XCVR_ANALOG_RX_AUXPLL.RXTX_RCCAL_DIAGSEL Position*/
#define XCVR_ANALOG_RX_AUXPLL_RXTX_RCCAL_DIAGSEL(x) (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL) /*!< XCVR_ANALOG_RX_AUXPLL.RXTX_RCCAL_DIAGSEL Field*/
/* ------- SY_CTRL_1 Bit Fields                     ------ */
#define XCVR_ANALOG_SY_CTRL_1_SY_DIVN_SPARE_MASK (0x1U)                                              /*!< XCVR_ANALOG_SY_CTRL_1.SY_DIVN_SPARE Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_DIVN_SPARE_SHIFT (0U)                                               /*!< XCVR_ANALOG_SY_CTRL_1.SY_DIVN_SPARE Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_DIVN_SPARE(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_ANALOG_SY_CTRL_1.SY_DIVN_SPARE Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_FCAL_SPARE_MASK (0x2U)                                              /*!< XCVR_ANALOG_SY_CTRL_1.SY_FCAL_SPARE Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_FCAL_SPARE_SHIFT (1U)                                               /*!< XCVR_ANALOG_SY_CTRL_1.SY_FCAL_SPARE Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_FCAL_SPARE(x)   (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_ANALOG_SY_CTRL_1.SY_FCAL_SPARE Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_BUMP_RTLO_FDBK_MASK (0x30U)                                      /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_BUMP_RTLO_FDBK Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_BUMP_RTLO_FDBK_SHIFT (4U)                                        /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_BUMP_RTLO_FDBK Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_BUMP_RTLO_FDBK(x) (((uint32_t)(((uint32_t)(x))<<4U))&0x30UL)     /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_BUMP_RTLO_FDBK Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_BUMP_RTLO_RX_MASK (0xC0U)                                        /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_BUMP_RTLO_RX Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_BUMP_RTLO_RX_SHIFT (6U)                                          /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_BUMP_RTLO_RX Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_BUMP_RTLO_RX(x) (((uint32_t)(((uint32_t)(x))<<6U))&0xC0UL)       /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_BUMP_RTLO_RX Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_BUMP_RTLO_TX_MASK (0x300U)                                       /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_BUMP_RTLO_TX Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_BUMP_RTLO_TX_SHIFT (8U)                                          /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_BUMP_RTLO_TX Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_BUMP_RTLO_TX(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)      /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_BUMP_RTLO_TX Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_DIAGSEL_MASK (0x400U)                                            /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_DIAGSEL Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_DIAGSEL_SHIFT (10U)                                              /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_DIAGSEL Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_DIAGSEL(x)   (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_DIAGSEL Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_SPARE_MASK   (0x7000U)                                           /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_SPARE Mask  */
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_SPARE_SHIFT  (12U)                                               /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_SPARE Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LO_SPARE(x)     (((uint32_t)(((uint32_t)(x))<<12U))&0x7000UL)       /*!< XCVR_ANALOG_SY_CTRL_1.SY_LO_SPARE Field */
#define XCVR_ANALOG_SY_CTRL_1_SY_LPF_FILT_CTRL_MASK (0x70000U)                                       /*!< XCVR_ANALOG_SY_CTRL_1.SY_LPF_FILT_CTRL Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LPF_FILT_CTRL_SHIFT (16U)                                           /*!< XCVR_ANALOG_SY_CTRL_1.SY_LPF_FILT_CTRL Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LPF_FILT_CTRL(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x70000UL)     /*!< XCVR_ANALOG_SY_CTRL_1.SY_LPF_FILT_CTRL Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LPF_SPARE_MASK  (0x80000U)                                          /*!< XCVR_ANALOG_SY_CTRL_1.SY_LPF_SPARE Mask */
#define XCVR_ANALOG_SY_CTRL_1_SY_LPF_SPARE_SHIFT (19U)                                               /*!< XCVR_ANALOG_SY_CTRL_1.SY_LPF_SPARE Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_LPF_SPARE(x)    (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< XCVR_ANALOG_SY_CTRL_1.SY_LPF_SPARE Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_DIAGSEL_MASK (0x100000U)                                         /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_DIAGSEL Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_DIAGSEL_SHIFT (20U)                                              /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_DIAGSEL Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_DIAGSEL(x)   (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_DIAGSEL Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_PCH_TUNE_MASK (0x600000U)                                        /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_PCH_TUNE Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_PCH_TUNE_SHIFT (21U)                                             /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_PCH_TUNE Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_PCH_TUNE(x)  (((uint32_t)(((uint32_t)(x))<<21U))&0x600000UL)     /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_PCH_TUNE Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_PCH_SEL_MASK (0x800000U)                                         /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_PCH_SEL Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_PCH_SEL_SHIFT (23U)                                              /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_PCH_SEL Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_PCH_SEL(x)   (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_PCH_SEL Field*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_SPARE_MASK   (0x3000000U)                                        /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_SPARE Mask  */
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_SPARE_SHIFT  (24U)                                               /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_SPARE Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_SPARE(x)     (((uint32_t)(((uint32_t)(x))<<24U))&0x3000000UL)    /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_SPARE Field */
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_VTUNE_OVERRIDE_TEST_MODE_MASK (0x10000000U)                      /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_VTUNE_OVERRIDE_TEST_MODE Mask*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_VTUNE_OVERRIDE_TEST_MODE_SHIFT (28U)                             /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_VTUNE_OVERRIDE_TEST_MODE Position*/
#define XCVR_ANALOG_SY_CTRL_1_SY_PD_VTUNE_OVERRIDE_TEST_MODE(x) (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL) /*!< XCVR_ANALOG_SY_CTRL_1.SY_PD_VTUNE_OVERRIDE_TEST_MODE Field*/
/* ------- SY_CTRL_2 Bit Fields                     ------ */
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_BIAS_MASK   (0x7U)                                              /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_BIAS Mask  */
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_BIAS_SHIFT  (0U)                                                /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_BIAS Position*/
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_BIAS(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_BIAS Field */
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_DIAGSEL_MASK (0x8U)                                             /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_DIAGSEL Mask*/
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_DIAGSEL_SHIFT (3U)                                              /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_DIAGSEL Position*/
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_DIAGSEL(x)  (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_DIAGSEL Field*/
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_KV_MASK     (0x70U)                                             /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_KV Mask    */
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_KV_SHIFT    (4U)                                                /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_KV Position*/
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_KV(x)       (((uint32_t)(((uint32_t)(x))<<4U))&0x70UL)          /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_KV Field   */
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_KVM_MASK    (0x700U)                                            /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_KVM Mask   */
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_KVM_SHIFT   (8U)                                                /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_KVM Position*/
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_KVM(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0x700UL)         /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_KVM Field  */
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_PK_DET_ON_MASK (0x1000U)                                        /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_PK_DET_ON Mask*/
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_PK_DET_ON_SHIFT (12U)                                           /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_PK_DET_ON Position*/
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_PK_DET_ON(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)      /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_PK_DET_ON Field*/
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_SPARE_MASK  (0x1C000U)                                          /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_SPARE Mask */
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_SPARE_SHIFT (14U)                                               /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_SPARE Position*/
#define XCVR_ANALOG_SY_CTRL_2_SY_VCO_SPARE(x)    (((uint32_t)(((uint32_t)(x))<<14U))&0x1C000UL)      /*!< XCVR_ANALOG_SY_CTRL_2.SY_VCO_SPARE Field*/
/* ------- TX_DAC_PA Bit Fields                     ------ */
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_BUMP_CAP_MASK (0x3U)                                            /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_BUMP_CAP Mask*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_BUMP_CAP_SHIFT (0U)                                             /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_BUMP_CAP Position*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_BUMP_CAP(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)           /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_BUMP_CAP Field*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_BUMP_IDAC_MASK (0x18U)                                          /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_BUMP_IDAC Mask*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_BUMP_IDAC_SHIFT (3U)                                            /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_BUMP_IDAC Position*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_BUMP_IDAC(x) (((uint32_t)(((uint32_t)(x))<<3U))&0x18UL)         /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_BUMP_IDAC Field*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_BUMP_RLOAD_MASK (0xC0U)                                         /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_BUMP_RLOAD Mask*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_BUMP_RLOAD_SHIFT (6U)                                           /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_BUMP_RLOAD Position*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_BUMP_RLOAD(x) (((uint32_t)(((uint32_t)(x))<<6U))&0xC0UL)        /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_BUMP_RLOAD Field*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_DIAGSEL_MASK (0x200U)                                           /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_DIAGSEL Mask*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_DIAGSEL_SHIFT (9U)                                              /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_DIAGSEL Position*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_DIAGSEL(x)  (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_DIAGSEL Field*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_INVERT_CLK_MASK (0x400U)                                        /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_INVERT_CLK Mask*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_INVERT_CLK_SHIFT (10U)                                          /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_INVERT_CLK Position*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_INVERT_CLK(x) (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)      /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_INVERT_CLK Field*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_OPAMP_DIAGSEL_MASK (0x800U)                                     /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_OPAMP_DIAGSEL Mask*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_OPAMP_DIAGSEL_SHIFT (11U)                                       /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_OPAMP_DIAGSEL Position*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_OPAMP_DIAGSEL(x) (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)   /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_OPAMP_DIAGSEL Field*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_SPARE_MASK  (0xE000U)                                           /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_SPARE Mask */
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_SPARE_SHIFT (13U)                                               /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_SPARE Position*/
#define XCVR_ANALOG_TX_DAC_PA_TX_DAC_SPARE(x)    (((uint32_t)(((uint32_t)(x))<<13U))&0xE000UL)       /*!< XCVR_ANALOG_TX_DAC_PA.TX_DAC_SPARE Field*/
#define XCVR_ANALOG_TX_DAC_PA_TX_PA_BUMP_VBIAS_MASK (0xE0000U)                                       /*!< XCVR_ANALOG_TX_DAC_PA.TX_PA_BUMP_VBIAS Mask*/
#define XCVR_ANALOG_TX_DAC_PA_TX_PA_BUMP_VBIAS_SHIFT (17U)                                           /*!< XCVR_ANALOG_TX_DAC_PA.TX_PA_BUMP_VBIAS Position*/
#define XCVR_ANALOG_TX_DAC_PA_TX_PA_BUMP_VBIAS(x) (((uint32_t)(((uint32_t)(x))<<17U))&0xE0000UL)     /*!< XCVR_ANALOG_TX_DAC_PA.TX_PA_BUMP_VBIAS Field*/
#define XCVR_ANALOG_TX_DAC_PA_TX_PA_DIAGSEL_MASK (0x200000U)                                         /*!< XCVR_ANALOG_TX_DAC_PA.TX_PA_DIAGSEL Mask*/
#define XCVR_ANALOG_TX_DAC_PA_TX_PA_DIAGSEL_SHIFT (21U)                                              /*!< XCVR_ANALOG_TX_DAC_PA.TX_PA_DIAGSEL Position*/
#define XCVR_ANALOG_TX_DAC_PA_TX_PA_DIAGSEL(x)   (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< XCVR_ANALOG_TX_DAC_PA.TX_PA_DIAGSEL Field*/
#define XCVR_ANALOG_TX_DAC_PA_TX_PA_SPARE_MASK   (0x3800000U)                                        /*!< XCVR_ANALOG_TX_DAC_PA.TX_PA_SPARE Mask  */
#define XCVR_ANALOG_TX_DAC_PA_TX_PA_SPARE_SHIFT  (23U)                                               /*!< XCVR_ANALOG_TX_DAC_PA.TX_PA_SPARE Position*/
#define XCVR_ANALOG_TX_DAC_PA_TX_PA_SPARE(x)     (((uint32_t)(((uint32_t)(x))<<23U))&0x3800000UL)    /*!< XCVR_ANALOG_TX_DAC_PA.TX_PA_SPARE Field */
/* ------- BALUN_TX Bit Fields                      ------ */
#define XCVR_ANALOG_BALUN_TX_RXTX_BAL_TX_CODE_MASK (0xFFFFFFU)                                       /*!< XCVR_ANALOG_BALUN_TX.RXTX_BAL_TX_CODE Mask*/
#define XCVR_ANALOG_BALUN_TX_RXTX_BAL_TX_CODE_SHIFT (0U)                                             /*!< XCVR_ANALOG_BALUN_TX.RXTX_BAL_TX_CODE Position*/
#define XCVR_ANALOG_BALUN_TX_RXTX_BAL_TX_CODE(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< XCVR_ANALOG_BALUN_TX.RXTX_BAL_TX_CODE Field*/
/* ------- BALUN_RX Bit Fields                      ------ */
#define XCVR_ANALOG_BALUN_RX_RXTX_BAL_RX_CODE_MASK (0xFFFFFFU)                                       /*!< XCVR_ANALOG_BALUN_RX.RXTX_BAL_RX_CODE Mask*/
#define XCVR_ANALOG_BALUN_RX_RXTX_BAL_RX_CODE_SHIFT (0U)                                             /*!< XCVR_ANALOG_BALUN_RX.RXTX_BAL_RX_CODE Position*/
#define XCVR_ANALOG_BALUN_RX_RXTX_BAL_RX_CODE(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< XCVR_ANALOG_BALUN_RX.RXTX_BAL_RX_CODE Field*/
/* ------- DFT_OBSV_1 Bit Fields                    ------ */
#define XCVR_ANALOG_DFT_OBSV_1_DFT_FREQ_COUNTER_MASK (0x7FFFFU)                                      /*!< XCVR_ANALOG_DFT_OBSV_1.DFT_FREQ_COUNTER Mask*/
#define XCVR_ANALOG_DFT_OBSV_1_DFT_FREQ_COUNTER_SHIFT (0U)                                           /*!< XCVR_ANALOG_DFT_OBSV_1.DFT_FREQ_COUNTER Position*/
#define XCVR_ANALOG_DFT_OBSV_1_DFT_FREQ_COUNTER(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFFFUL)     /*!< XCVR_ANALOG_DFT_OBSV_1.DFT_FREQ_COUNTER Field*/
#define XCVR_ANALOG_DFT_OBSV_1_CTUNE_MAX_DIFF_MASK (0xFF00000U)                                      /*!< XCVR_ANALOG_DFT_OBSV_1.CTUNE_MAX_DIFF Mask*/
#define XCVR_ANALOG_DFT_OBSV_1_CTUNE_MAX_DIFF_SHIFT (20U)                                            /*!< XCVR_ANALOG_DFT_OBSV_1.CTUNE_MAX_DIFF Position*/
#define XCVR_ANALOG_DFT_OBSV_1_CTUNE_MAX_DIFF(x) (((uint32_t)(((uint32_t)(x))<<20U))&0xFF00000UL)    /*!< XCVR_ANALOG_DFT_OBSV_1.CTUNE_MAX_DIFF Field*/
/* ------- DFT_OBSV_2 Bit Fields                    ------ */
#define XCVR_ANALOG_DFT_OBSV_2_SYN_BIST_MAX_DIFF_MASK (0x1FFFFU)                                     /*!< XCVR_ANALOG_DFT_OBSV_2.SYN_BIST_MAX_DIFF Mask*/
#define XCVR_ANALOG_DFT_OBSV_2_SYN_BIST_MAX_DIFF_SHIFT (0U)                                          /*!< XCVR_ANALOG_DFT_OBSV_2.SYN_BIST_MAX_DIFF Position*/
#define XCVR_ANALOG_DFT_OBSV_2_SYN_BIST_MAX_DIFF(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFFUL)    /*!< XCVR_ANALOG_DFT_OBSV_2.SYN_BIST_MAX_DIFF Field*/
#define XCVR_ANALOG_DFT_OBSV_2_SYN_BIST_MAX_DIFF_CH_MASK (0x7F000000U)                               /*!< XCVR_ANALOG_DFT_OBSV_2.SYN_BIST_MAX_DIFF_CH Mask*/
#define XCVR_ANALOG_DFT_OBSV_2_SYN_BIST_MAX_DIFF_CH_SHIFT (24U)                                      /*!< XCVR_ANALOG_DFT_OBSV_2.SYN_BIST_MAX_DIFF_CH Position*/
#define XCVR_ANALOG_DFT_OBSV_2_SYN_BIST_MAX_DIFF_CH(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x7F000000UL) /*!< XCVR_ANALOG_DFT_OBSV_2.SYN_BIST_MAX_DIFF_CH Field*/
#define XCVR_ANALOG_DFT_OBSV_2_SYN_BIST_IGNORE_FAILS_MASK (0x80000000U)                              /*!< XCVR_ANALOG_DFT_OBSV_2.SYN_BIST_IGNORE_FAILS Mask*/
#define XCVR_ANALOG_DFT_OBSV_2_SYN_BIST_IGNORE_FAILS_SHIFT (31U)                                     /*!< XCVR_ANALOG_DFT_OBSV_2.SYN_BIST_IGNORE_FAILS Position*/
#define XCVR_ANALOG_DFT_OBSV_2_SYN_BIST_IGNORE_FAILS(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL) /*!< XCVR_ANALOG_DFT_OBSV_2.SYN_BIST_IGNORE_FAILS Field*/
/**
 * @} */ /* End group XCVR_ANALOG_Register_Masks_GROUP 
 */

/* XCVR_ANALOG - Peripheral instance base addresses */
#define XCVR_ANALOG_BasePtr            0x4005C500UL //!< Peripheral base address
#define XCVR_ANALOG                    ((XCVR_ANALOG_Type *) XCVR_ANALOG_BasePtr) //!< Freescale base pointer
#define XCVR_ANALOG_BASE_PTR           (XCVR_ANALOG) //!< Freescale style base pointer
/**
 * @} */ /* End group XCVR_ANALOG_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XCVR_CTRL_Peripheral_access_layer_GROUP XCVR_CTRL Peripheral Access Layer
* @brief C Struct for XCVR_CTRL
* @{
*/

/* ================================================================================ */
/* ================           XCVR_CTRL (file:XCVR_CTRL_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief XCVR_CTRL
 */
/**
* @addtogroup XCVR_CTRL_structs_GROUP XCVR_CTRL struct
* @brief Struct for XCVR_CTRL
* @{
*/
typedef struct XCVR_CTRL_Type {
   __IO uint32_t  XCVR_CTRL;                    /**< 0000: TRANSCEIVER CONTROL                                          */
   __IO uint32_t  XCVR_STATUS;                  /**< 0004: TRANSCEIVER STATUS                                           */
   __IO uint32_t  BLE_ARB_CTRL;                 /**< 0008: BLE ARBITRATION CONTROL                                      */
        uint8_t   RESERVED_0[4];                /**< 000C: 0x4 bytes                                                    */
   __IO uint32_t  OVERWRITE_VER;                /**< 0010: OVERWRITE VERSION                                            */
   __IO uint32_t  DMA_CTRL;                     /**< 0014: TRANSCEIVER DMA CONTROL                                      */
   __I  uint32_t  DMA_DATA;                     /**< 0018: TRANSCEIVER DMA DATA                                         */
   __IO uint32_t  DTEST_CTRL;                   /**< 001C: DIGITAL TEST MUX CONTROL                                     */
   __IO uint32_t  PACKET_RAM_CTRL;              /**< 0020: PACKET RAM CONTROL                                           */
   __IO uint32_t  FAD_CTRL;                     /**< 0024: FAD CONTROL                                                  */
   __IO uint32_t  LPPS_CTRL;                    /**< 0028: LOW POWER PREAMBLE SEARCH CONTROL                            */
   __IO uint32_t  RF_NOT_ALLOWED_CTRL;          /**< 002C: WIFI COEXISTENCE CONTROL                                     */
   __IO uint32_t  CRCW_CFG;                     /**< 0030: CRC/WHITENER CONTROL                                         */
   __I  uint32_t  CRC_EC_MASK;                  /**< 0034: CRC ERROR CORRECTION MASK                                    */
   __I  uint32_t  CRC_RES_OUT;                  /**< 0038: CRC RESULT                                                   */
} XCVR_CTRL_Type;

/**
 * @} */ /* End group XCVR_CTRL_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XCVR_CTRL' Position & Mask macros                   ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XCVR_CTRL_Register_Masks_GROUP XCVR_CTRL Register Masks
* @brief Register Masks for XCVR_CTRL
* @{
*/
/* ------- XCVR_CTRL Bit Fields                     ------ */
#define XCVR_CTRL_XCVR_CTRL_PROTOCOL_MASK        (0xFU)                                              /*!< XCVR_CTRL_XCVR_CTRL.PROTOCOL Mask       */
#define XCVR_CTRL_XCVR_CTRL_PROTOCOL_SHIFT       (0U)                                                /*!< XCVR_CTRL_XCVR_CTRL.PROTOCOL Position   */
#define XCVR_CTRL_XCVR_CTRL_PROTOCOL(x)          (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< XCVR_CTRL_XCVR_CTRL.PROTOCOL Field      */
#define XCVR_CTRL_XCVR_CTRL_TGT_PWR_SRC_MASK     (0x70U)                                             /*!< XCVR_CTRL_XCVR_CTRL.TGT_PWR_SRC Mask    */
#define XCVR_CTRL_XCVR_CTRL_TGT_PWR_SRC_SHIFT    (4U)                                                /*!< XCVR_CTRL_XCVR_CTRL.TGT_PWR_SRC Position*/
#define XCVR_CTRL_XCVR_CTRL_TGT_PWR_SRC(x)       (((uint32_t)(((uint32_t)(x))<<4U))&0x70UL)          /*!< XCVR_CTRL_XCVR_CTRL.TGT_PWR_SRC Field   */
#define XCVR_CTRL_XCVR_CTRL_REF_CLK_FREQ_MASK    (0x300U)                                            /*!< XCVR_CTRL_XCVR_CTRL.REF_CLK_FREQ Mask   */
#define XCVR_CTRL_XCVR_CTRL_REF_CLK_FREQ_SHIFT   (8U)                                                /*!< XCVR_CTRL_XCVR_CTRL.REF_CLK_FREQ Position*/
#define XCVR_CTRL_XCVR_CTRL_REF_CLK_FREQ(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)         /*!< XCVR_CTRL_XCVR_CTRL.REF_CLK_FREQ Field  */
#define XCVR_CTRL_XCVR_CTRL_SOC_RF_OSC_CLK_GATE_EN_MASK (0x800U)                                     /*!< XCVR_CTRL_XCVR_CTRL.SOC_RF_OSC_CLK_GATE_EN Mask*/
#define XCVR_CTRL_XCVR_CTRL_SOC_RF_OSC_CLK_GATE_EN_SHIFT (11U)                                       /*!< XCVR_CTRL_XCVR_CTRL.SOC_RF_OSC_CLK_GATE_EN Position*/
#define XCVR_CTRL_XCVR_CTRL_SOC_RF_OSC_CLK_GATE_EN(x) (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)   /*!< XCVR_CTRL_XCVR_CTRL.SOC_RF_OSC_CLK_GATE_EN Field*/
#define XCVR_CTRL_XCVR_CTRL_DEMOD_SEL_MASK       (0x3000U)                                           /*!< XCVR_CTRL_XCVR_CTRL.DEMOD_SEL Mask      */
#define XCVR_CTRL_XCVR_CTRL_DEMOD_SEL_SHIFT      (12U)                                               /*!< XCVR_CTRL_XCVR_CTRL.DEMOD_SEL Position  */
#define XCVR_CTRL_XCVR_CTRL_DEMOD_SEL(x)         (((uint32_t)(((uint32_t)(x))<<12U))&0x3000UL)       /*!< XCVR_CTRL_XCVR_CTRL.DEMOD_SEL Field     */
#define XCVR_CTRL_XCVR_CTRL_RADIO0_IRQ_SEL_MASK  (0x70000U)                                          /*!< XCVR_CTRL_XCVR_CTRL.RADIO0_IRQ_SEL Mask */
#define XCVR_CTRL_XCVR_CTRL_RADIO0_IRQ_SEL_SHIFT (16U)                                               /*!< XCVR_CTRL_XCVR_CTRL.RADIO0_IRQ_SEL Position*/
#define XCVR_CTRL_XCVR_CTRL_RADIO0_IRQ_SEL(x)    (((uint32_t)(((uint32_t)(x))<<16U))&0x70000UL)      /*!< XCVR_CTRL_XCVR_CTRL.RADIO0_IRQ_SEL Field*/
#define XCVR_CTRL_XCVR_CTRL_RADIO1_IRQ_SEL_MASK  (0x700000U)                                         /*!< XCVR_CTRL_XCVR_CTRL.RADIO1_IRQ_SEL Mask */
#define XCVR_CTRL_XCVR_CTRL_RADIO1_IRQ_SEL_SHIFT (20U)                                               /*!< XCVR_CTRL_XCVR_CTRL.RADIO1_IRQ_SEL Position*/
#define XCVR_CTRL_XCVR_CTRL_RADIO1_IRQ_SEL(x)    (((uint32_t)(((uint32_t)(x))<<20U))&0x700000UL)     /*!< XCVR_CTRL_XCVR_CTRL.RADIO1_IRQ_SEL Field*/
/* ------- XCVR_STATUS Bit Fields                   ------ */
#define XCVR_CTRL_XCVR_STATUS_TSM_COUNT_MASK     (0xFFU)                                             /*!< XCVR_CTRL_XCVR_STATUS.TSM_COUNT Mask    */
#define XCVR_CTRL_XCVR_STATUS_TSM_COUNT_SHIFT    (0U)                                                /*!< XCVR_CTRL_XCVR_STATUS.TSM_COUNT Position*/
#define XCVR_CTRL_XCVR_STATUS_TSM_COUNT(x)       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_CTRL_XCVR_STATUS.TSM_COUNT Field   */
#define XCVR_CTRL_XCVR_STATUS_PLL_SEQ_STATE_MASK (0xF00U)                                            /*!< XCVR_CTRL_XCVR_STATUS.PLL_SEQ_STATE Mask*/
#define XCVR_CTRL_XCVR_STATUS_PLL_SEQ_STATE_SHIFT (8U)                                               /*!< XCVR_CTRL_XCVR_STATUS.PLL_SEQ_STATE Position*/
#define XCVR_CTRL_XCVR_STATUS_PLL_SEQ_STATE(x)   (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< XCVR_CTRL_XCVR_STATUS.PLL_SEQ_STATE Field*/
#define XCVR_CTRL_XCVR_STATUS_RX_MODE_MASK       (0x1000U)                                           /*!< XCVR_CTRL_XCVR_STATUS.RX_MODE Mask      */
#define XCVR_CTRL_XCVR_STATUS_RX_MODE_SHIFT      (12U)                                               /*!< XCVR_CTRL_XCVR_STATUS.RX_MODE Position  */
#define XCVR_CTRL_XCVR_STATUS_RX_MODE(x)         (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< XCVR_CTRL_XCVR_STATUS.RX_MODE Field     */
#define XCVR_CTRL_XCVR_STATUS_TX_MODE_MASK       (0x2000U)                                           /*!< XCVR_CTRL_XCVR_STATUS.TX_MODE Mask      */
#define XCVR_CTRL_XCVR_STATUS_TX_MODE_SHIFT      (13U)                                               /*!< XCVR_CTRL_XCVR_STATUS.TX_MODE Position  */
#define XCVR_CTRL_XCVR_STATUS_TX_MODE(x)         (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< XCVR_CTRL_XCVR_STATUS.TX_MODE Field     */
#define XCVR_CTRL_XCVR_STATUS_BTLE_SYSCLK_REQ_MASK (0x10000U)                                        /*!< XCVR_CTRL_XCVR_STATUS.BTLE_SYSCLK_REQ Mask*/
#define XCVR_CTRL_XCVR_STATUS_BTLE_SYSCLK_REQ_SHIFT (16U)                                            /*!< XCVR_CTRL_XCVR_STATUS.BTLE_SYSCLK_REQ Position*/
#define XCVR_CTRL_XCVR_STATUS_BTLE_SYSCLK_REQ(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< XCVR_CTRL_XCVR_STATUS.BTLE_SYSCLK_REQ Field*/
#define XCVR_CTRL_XCVR_STATUS_RIF_LL_ACTIVE_MASK (0x20000U)                                          /*!< XCVR_CTRL_XCVR_STATUS.RIF_LL_ACTIVE Mask*/
#define XCVR_CTRL_XCVR_STATUS_RIF_LL_ACTIVE_SHIFT (17U)                                              /*!< XCVR_CTRL_XCVR_STATUS.RIF_LL_ACTIVE Position*/
#define XCVR_CTRL_XCVR_STATUS_RIF_LL_ACTIVE(x)   (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< XCVR_CTRL_XCVR_STATUS.RIF_LL_ACTIVE Field*/
#define XCVR_CTRL_XCVR_STATUS_XTAL_READY_MASK    (0x40000U)                                          /*!< XCVR_CTRL_XCVR_STATUS.XTAL_READY Mask   */
#define XCVR_CTRL_XCVR_STATUS_XTAL_READY_SHIFT   (18U)                                               /*!< XCVR_CTRL_XCVR_STATUS.XTAL_READY Position*/
#define XCVR_CTRL_XCVR_STATUS_XTAL_READY(x)      (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< XCVR_CTRL_XCVR_STATUS.XTAL_READY Field  */
#define XCVR_CTRL_XCVR_STATUS_SOC_USING_RF_OSC_CLK_MASK (0x80000U)                                   /*!< XCVR_CTRL_XCVR_STATUS.SOC_USING_RF_OSC_CLK Mask*/
#define XCVR_CTRL_XCVR_STATUS_SOC_USING_RF_OSC_CLK_SHIFT (19U)                                       /*!< XCVR_CTRL_XCVR_STATUS.SOC_USING_RF_OSC_CLK Position*/
#define XCVR_CTRL_XCVR_STATUS_SOC_USING_RF_OSC_CLK(x) (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL) /*!< XCVR_CTRL_XCVR_STATUS.SOC_USING_RF_OSC_CLK Field*/
#define XCVR_CTRL_XCVR_STATUS_TSM_IRQ0_MASK      (0x1000000U)                                        /*!< XCVR_CTRL_XCVR_STATUS.TSM_IRQ0 Mask     */
#define XCVR_CTRL_XCVR_STATUS_TSM_IRQ0_SHIFT     (24U)                                               /*!< XCVR_CTRL_XCVR_STATUS.TSM_IRQ0 Position */
#define XCVR_CTRL_XCVR_STATUS_TSM_IRQ0(x)        (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< XCVR_CTRL_XCVR_STATUS.TSM_IRQ0 Field    */
#define XCVR_CTRL_XCVR_STATUS_TSM_IRQ1_MASK      (0x2000000U)                                        /*!< XCVR_CTRL_XCVR_STATUS.TSM_IRQ1 Mask     */
#define XCVR_CTRL_XCVR_STATUS_TSM_IRQ1_SHIFT     (25U)                                               /*!< XCVR_CTRL_XCVR_STATUS.TSM_IRQ1 Position */
#define XCVR_CTRL_XCVR_STATUS_TSM_IRQ1(x)        (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< XCVR_CTRL_XCVR_STATUS.TSM_IRQ1 Field    */
/* ------- BLE_ARB_CTRL Bit Fields                  ------ */
#define XCVR_CTRL_BLE_ARB_CTRL_BLE_RELINQUISH_MASK (0x1U)                                            /*!< XCVR_CTRL_BLE_ARB_CTRL.BLE_RELINQUISH Mask*/
#define XCVR_CTRL_BLE_ARB_CTRL_BLE_RELINQUISH_SHIFT (0U)                                             /*!< XCVR_CTRL_BLE_ARB_CTRL.BLE_RELINQUISH Position*/
#define XCVR_CTRL_BLE_ARB_CTRL_BLE_RELINQUISH(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_CTRL_BLE_ARB_CTRL.BLE_RELINQUISH Field*/
#define XCVR_CTRL_BLE_ARB_CTRL_XCVR_BUSY_MASK    (0x2U)                                              /*!< XCVR_CTRL_BLE_ARB_CTRL.XCVR_BUSY Mask   */
#define XCVR_CTRL_BLE_ARB_CTRL_XCVR_BUSY_SHIFT   (1U)                                                /*!< XCVR_CTRL_BLE_ARB_CTRL.XCVR_BUSY Position*/
#define XCVR_CTRL_BLE_ARB_CTRL_XCVR_BUSY(x)      (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_CTRL_BLE_ARB_CTRL.XCVR_BUSY Field  */
/* ------- OVERWRITE_VER Bit Fields                 ------ */
#define XCVR_CTRL_OVERWRITE_VER_OVERWRITE_VER_MASK (0xFFU)                                           /*!< XCVR_CTRL_OVERWRITE_VER.OVERWRITE_VER Mask*/
#define XCVR_CTRL_OVERWRITE_VER_OVERWRITE_VER_SHIFT (0U)                                             /*!< XCVR_CTRL_OVERWRITE_VER.OVERWRITE_VER Position*/
#define XCVR_CTRL_OVERWRITE_VER_OVERWRITE_VER(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_CTRL_OVERWRITE_VER.OVERWRITE_VER Field*/
/* ------- DMA_CTRL Bit Fields                      ------ */
#define XCVR_CTRL_DMA_CTRL_DMA_PAGE_MASK         (0xFU)                                              /*!< XCVR_CTRL_DMA_CTRL.DMA_PAGE Mask        */
#define XCVR_CTRL_DMA_CTRL_DMA_PAGE_SHIFT        (0U)                                                /*!< XCVR_CTRL_DMA_CTRL.DMA_PAGE Position    */
#define XCVR_CTRL_DMA_CTRL_DMA_PAGE(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< XCVR_CTRL_DMA_CTRL.DMA_PAGE Field       */
#define XCVR_CTRL_DMA_CTRL_SINGLE_REQ_MODE_MASK  (0x10U)                                             /*!< XCVR_CTRL_DMA_CTRL.SINGLE_REQ_MODE Mask */
#define XCVR_CTRL_DMA_CTRL_SINGLE_REQ_MODE_SHIFT (4U)                                                /*!< XCVR_CTRL_DMA_CTRL.SINGLE_REQ_MODE Position*/
#define XCVR_CTRL_DMA_CTRL_SINGLE_REQ_MODE(x)    (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_CTRL_DMA_CTRL.SINGLE_REQ_MODE Field*/
#define XCVR_CTRL_DMA_CTRL_BYPASS_DMA_SYNC_MASK  (0x20U)                                             /*!< XCVR_CTRL_DMA_CTRL.BYPASS_DMA_SYNC Mask */
#define XCVR_CTRL_DMA_CTRL_BYPASS_DMA_SYNC_SHIFT (5U)                                                /*!< XCVR_CTRL_DMA_CTRL.BYPASS_DMA_SYNC Position*/
#define XCVR_CTRL_DMA_CTRL_BYPASS_DMA_SYNC(x)    (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_CTRL_DMA_CTRL.BYPASS_DMA_SYNC Field*/
#define XCVR_CTRL_DMA_CTRL_DMA_TRIGGERRED_MASK   (0x40U)                                             /*!< XCVR_CTRL_DMA_CTRL.DMA_TRIGGERRED Mask  */
#define XCVR_CTRL_DMA_CTRL_DMA_TRIGGERRED_SHIFT  (6U)                                                /*!< XCVR_CTRL_DMA_CTRL.DMA_TRIGGERRED Position*/
#define XCVR_CTRL_DMA_CTRL_DMA_TRIGGERRED(x)     (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_CTRL_DMA_CTRL.DMA_TRIGGERRED Field */
#define XCVR_CTRL_DMA_CTRL_DMA_TIMED_OUT_MASK    (0x80U)                                             /*!< XCVR_CTRL_DMA_CTRL.DMA_TIMED_OUT Mask   */
#define XCVR_CTRL_DMA_CTRL_DMA_TIMED_OUT_SHIFT   (7U)                                                /*!< XCVR_CTRL_DMA_CTRL.DMA_TIMED_OUT Position*/
#define XCVR_CTRL_DMA_CTRL_DMA_TIMED_OUT(x)      (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_CTRL_DMA_CTRL.DMA_TIMED_OUT Field  */
#define XCVR_CTRL_DMA_CTRL_DMA_TIMEOUT_MASK      (0xF00U)                                            /*!< XCVR_CTRL_DMA_CTRL.DMA_TIMEOUT Mask     */
#define XCVR_CTRL_DMA_CTRL_DMA_TIMEOUT_SHIFT     (8U)                                                /*!< XCVR_CTRL_DMA_CTRL.DMA_TIMEOUT Position */
#define XCVR_CTRL_DMA_CTRL_DMA_TIMEOUT(x)        (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< XCVR_CTRL_DMA_CTRL.DMA_TIMEOUT Field    */
/* ------- DMA_DATA Bit Fields                      ------ */
#define XCVR_CTRL_DMA_DATA_DMA_DATA_MASK         (0xFFFFFFFFU)                                       /*!< XCVR_CTRL_DMA_DATA.DMA_DATA Mask        */
#define XCVR_CTRL_DMA_DATA_DMA_DATA_SHIFT        (0U)                                                /*!< XCVR_CTRL_DMA_DATA.DMA_DATA Position    */
#define XCVR_CTRL_DMA_DATA_DMA_DATA(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< XCVR_CTRL_DMA_DATA.DMA_DATA Field       */
/* ------- DTEST_CTRL Bit Fields                    ------ */
#define XCVR_CTRL_DTEST_CTRL_DTEST_PAGE_MASK     (0x3FU)                                             /*!< XCVR_CTRL_DTEST_CTRL.DTEST_PAGE Mask    */
#define XCVR_CTRL_DTEST_CTRL_DTEST_PAGE_SHIFT    (0U)                                                /*!< XCVR_CTRL_DTEST_CTRL.DTEST_PAGE Position*/
#define XCVR_CTRL_DTEST_CTRL_DTEST_PAGE(x)       (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< XCVR_CTRL_DTEST_CTRL.DTEST_PAGE Field   */
#define XCVR_CTRL_DTEST_CTRL_DTEST_EN_MASK       (0x80U)                                             /*!< XCVR_CTRL_DTEST_CTRL.DTEST_EN Mask      */
#define XCVR_CTRL_DTEST_CTRL_DTEST_EN_SHIFT      (7U)                                                /*!< XCVR_CTRL_DTEST_CTRL.DTEST_EN Position  */
#define XCVR_CTRL_DTEST_CTRL_DTEST_EN(x)         (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_CTRL_DTEST_CTRL.DTEST_EN Field     */
#define XCVR_CTRL_DTEST_CTRL_GPIO0_OVLAY_PIN_MASK (0xF00U)                                           /*!< XCVR_CTRL_DTEST_CTRL.GPIO0_OVLAY_PIN Mask*/
#define XCVR_CTRL_DTEST_CTRL_GPIO0_OVLAY_PIN_SHIFT (8U)                                              /*!< XCVR_CTRL_DTEST_CTRL.GPIO0_OVLAY_PIN Position*/
#define XCVR_CTRL_DTEST_CTRL_GPIO0_OVLAY_PIN(x)  (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< XCVR_CTRL_DTEST_CTRL.GPIO0_OVLAY_PIN Field*/
#define XCVR_CTRL_DTEST_CTRL_GPIO1_OVLAY_PIN_MASK (0xF000U)                                          /*!< XCVR_CTRL_DTEST_CTRL.GPIO1_OVLAY_PIN Mask*/
#define XCVR_CTRL_DTEST_CTRL_GPIO1_OVLAY_PIN_SHIFT (12U)                                             /*!< XCVR_CTRL_DTEST_CTRL.GPIO1_OVLAY_PIN Position*/
#define XCVR_CTRL_DTEST_CTRL_GPIO1_OVLAY_PIN(x)  (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< XCVR_CTRL_DTEST_CTRL.GPIO1_OVLAY_PIN Field*/
#define XCVR_CTRL_DTEST_CTRL_TSM_GPIO_OVLAY_MASK (0x30000U)                                          /*!< XCVR_CTRL_DTEST_CTRL.TSM_GPIO_OVLAY Mask*/
#define XCVR_CTRL_DTEST_CTRL_TSM_GPIO_OVLAY_SHIFT (16U)                                              /*!< XCVR_CTRL_DTEST_CTRL.TSM_GPIO_OVLAY Position*/
#define XCVR_CTRL_DTEST_CTRL_TSM_GPIO_OVLAY(x)   (((uint32_t)(((uint32_t)(x))<<16U))&0x30000UL)      /*!< XCVR_CTRL_DTEST_CTRL.TSM_GPIO_OVLAY Field*/
#define XCVR_CTRL_DTEST_CTRL_DTEST_SHFT_MASK     (0x7000000U)                                        /*!< XCVR_CTRL_DTEST_CTRL.DTEST_SHFT Mask    */
#define XCVR_CTRL_DTEST_CTRL_DTEST_SHFT_SHIFT    (24U)                                               /*!< XCVR_CTRL_DTEST_CTRL.DTEST_SHFT Position*/
#define XCVR_CTRL_DTEST_CTRL_DTEST_SHFT(x)       (((uint32_t)(((uint32_t)(x))<<24U))&0x7000000UL)    /*!< XCVR_CTRL_DTEST_CTRL.DTEST_SHFT Field   */
#define XCVR_CTRL_DTEST_CTRL_RAW_MODE_I_MASK     (0x10000000U)                                       /*!< XCVR_CTRL_DTEST_CTRL.RAW_MODE_I Mask    */
#define XCVR_CTRL_DTEST_CTRL_RAW_MODE_I_SHIFT    (28U)                                               /*!< XCVR_CTRL_DTEST_CTRL.RAW_MODE_I Position*/
#define XCVR_CTRL_DTEST_CTRL_RAW_MODE_I(x)       (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< XCVR_CTRL_DTEST_CTRL.RAW_MODE_I Field   */
#define XCVR_CTRL_DTEST_CTRL_RAW_MODE_Q_MASK     (0x20000000U)                                       /*!< XCVR_CTRL_DTEST_CTRL.RAW_MODE_Q Mask    */
#define XCVR_CTRL_DTEST_CTRL_RAW_MODE_Q_SHIFT    (29U)                                               /*!< XCVR_CTRL_DTEST_CTRL.RAW_MODE_Q Position*/
#define XCVR_CTRL_DTEST_CTRL_RAW_MODE_Q(x)       (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< XCVR_CTRL_DTEST_CTRL.RAW_MODE_Q Field   */
/* ------- PACKET_RAM_CTRL Bit Fields               ------ */
#define XCVR_CTRL_PACKET_RAM_CTRL_DBG_PAGE_MASK  (0xFU)                                              /*!< XCVR_CTRL_PACKET_RAM_CTRL.DBG_PAGE Mask */
#define XCVR_CTRL_PACKET_RAM_CTRL_DBG_PAGE_SHIFT (0U)                                                /*!< XCVR_CTRL_PACKET_RAM_CTRL.DBG_PAGE Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_DBG_PAGE(x)    (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< XCVR_CTRL_PACKET_RAM_CTRL.DBG_PAGE Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_PB_PROTECT_MASK (0x10U)                                            /*!< XCVR_CTRL_PACKET_RAM_CTRL.PB_PROTECT Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_PB_PROTECT_SHIFT (4U)                                              /*!< XCVR_CTRL_PACKET_RAM_CTRL.PB_PROTECT Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_PB_PROTECT(x)  (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_CTRL_PACKET_RAM_CTRL.PB_PROTECT Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_XCVR_RAM_ALLOW_MASK (0x20U)                                        /*!< XCVR_CTRL_PACKET_RAM_CTRL.XCVR_RAM_ALLOW Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_XCVR_RAM_ALLOW_SHIFT (5U)                                          /*!< XCVR_CTRL_PACKET_RAM_CTRL.XCVR_RAM_ALLOW Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_XCVR_RAM_ALLOW(x) (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)       /*!< XCVR_CTRL_PACKET_RAM_CTRL.XCVR_RAM_ALLOW Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_ALL_PROTOCOLS_ALLOW_MASK (0x40U)                                   /*!< XCVR_CTRL_PACKET_RAM_CTRL.ALL_PROTOCOLS_ALLOW Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_ALL_PROTOCOLS_ALLOW_SHIFT (6U)                                     /*!< XCVR_CTRL_PACKET_RAM_CTRL.ALL_PROTOCOLS_ALLOW Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_ALL_PROTOCOLS_ALLOW(x) (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)  /*!< XCVR_CTRL_PACKET_RAM_CTRL.ALL_PROTOCOLS_ALLOW Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_DBG_TRIGGERRED_MASK (0x80U)                                        /*!< XCVR_CTRL_PACKET_RAM_CTRL.DBG_TRIGGERRED Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_DBG_TRIGGERRED_SHIFT (7U)                                          /*!< XCVR_CTRL_PACKET_RAM_CTRL.DBG_TRIGGERRED Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_DBG_TRIGGERRED(x) (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)       /*!< XCVR_CTRL_PACKET_RAM_CTRL.DBG_TRIGGERRED Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_DBG_RAM_FULL_MASK (0x300U)                                         /*!< XCVR_CTRL_PACKET_RAM_CTRL.DBG_RAM_FULL Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_DBG_RAM_FULL_SHIFT (8U)                                            /*!< XCVR_CTRL_PACKET_RAM_CTRL.DBG_RAM_FULL Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_DBG_RAM_FULL(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)        /*!< XCVR_CTRL_PACKET_RAM_CTRL.DBG_RAM_FULL Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CLK_ON_OVRD_EN_MASK (0x400U)                                  /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CLK_ON_OVRD_EN Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CLK_ON_OVRD_EN_SHIFT (10U)                                    /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CLK_ON_OVRD_EN Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CLK_ON_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL) /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CLK_ON_OVRD_EN Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CLK_ON_OVRD_MASK (0x800U)                                     /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CLK_ON_OVRD Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CLK_ON_OVRD_SHIFT (11U)                                       /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CLK_ON_OVRD Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CLK_ON_OVRD(x) (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)   /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CLK_ON_OVRD Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CLK_ON_OVRD_EN_MASK (0x1000U)                                 /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CLK_ON_OVRD_EN Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CLK_ON_OVRD_EN_SHIFT (12U)                                    /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CLK_ON_OVRD_EN Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CLK_ON_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL) /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CLK_ON_OVRD_EN Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CLK_ON_OVRD_MASK (0x2000U)                                    /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CLK_ON_OVRD Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CLK_ON_OVRD_SHIFT (13U)                                       /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CLK_ON_OVRD Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CLK_ON_OVRD(x) (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)  /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CLK_ON_OVRD Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CE_ON_OVRD_EN_MASK (0x4000U)                                  /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CE_ON_OVRD_EN Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CE_ON_OVRD_EN_SHIFT (14U)                                     /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CE_ON_OVRD_EN Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CE_ON_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL) /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CE_ON_OVRD_EN Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CE_ON_OVRD_MASK (0x8000U)                                     /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CE_ON_OVRD Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CE_ON_OVRD_SHIFT (15U)                                        /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CE_ON_OVRD Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM0_CE_ON_OVRD(x) (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)   /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM0_CE_ON_OVRD Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CE_ON_OVRD_EN_MASK (0x10000U)                                 /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CE_ON_OVRD_EN Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CE_ON_OVRD_EN_SHIFT (16U)                                     /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CE_ON_OVRD_EN Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CE_ON_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL) /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CE_ON_OVRD_EN Field*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CE_ON_OVRD_MASK (0x20000U)                                    /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CE_ON_OVRD Mask*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CE_ON_OVRD_SHIFT (17U)                                        /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CE_ON_OVRD Position*/
#define XCVR_CTRL_PACKET_RAM_CTRL_RAM1_CE_ON_OVRD(x) (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)  /*!< XCVR_CTRL_PACKET_RAM_CTRL.RAM1_CE_ON_OVRD Field*/
/* ------- FAD_CTRL Bit Fields                      ------ */
#define XCVR_CTRL_FAD_CTRL_FAD_EN_MASK           (0x1U)                                              /*!< XCVR_CTRL_FAD_CTRL.FAD_EN Mask          */
#define XCVR_CTRL_FAD_CTRL_FAD_EN_SHIFT          (0U)                                                /*!< XCVR_CTRL_FAD_CTRL.FAD_EN Position      */
#define XCVR_CTRL_FAD_CTRL_FAD_EN(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_CTRL_FAD_CTRL.FAD_EN Field         */
#define XCVR_CTRL_FAD_CTRL_ANTX_MASK             (0x2U)                                              /*!< XCVR_CTRL_FAD_CTRL.ANTX Mask            */
#define XCVR_CTRL_FAD_CTRL_ANTX_SHIFT            (1U)                                                /*!< XCVR_CTRL_FAD_CTRL.ANTX Position        */
#define XCVR_CTRL_FAD_CTRL_ANTX(x)               (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_CTRL_FAD_CTRL.ANTX Field           */
#define XCVR_CTRL_FAD_CTRL_ANTX_EN_MASK          (0x30U)                                             /*!< XCVR_CTRL_FAD_CTRL.ANTX_EN Mask         */
#define XCVR_CTRL_FAD_CTRL_ANTX_EN_SHIFT         (4U)                                                /*!< XCVR_CTRL_FAD_CTRL.ANTX_EN Position     */
#define XCVR_CTRL_FAD_CTRL_ANTX_EN(x)            (((uint32_t)(((uint32_t)(x))<<4U))&0x30UL)          /*!< XCVR_CTRL_FAD_CTRL.ANTX_EN Field        */
#define XCVR_CTRL_FAD_CTRL_ANTX_HZ_MASK          (0x40U)                                             /*!< XCVR_CTRL_FAD_CTRL.ANTX_HZ Mask         */
#define XCVR_CTRL_FAD_CTRL_ANTX_HZ_SHIFT         (6U)                                                /*!< XCVR_CTRL_FAD_CTRL.ANTX_HZ Position     */
#define XCVR_CTRL_FAD_CTRL_ANTX_HZ(x)            (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_CTRL_FAD_CTRL.ANTX_HZ Field        */
#define XCVR_CTRL_FAD_CTRL_ANTX_CTRLMODE_MASK    (0x80U)                                             /*!< XCVR_CTRL_FAD_CTRL.ANTX_CTRLMODE Mask   */
#define XCVR_CTRL_FAD_CTRL_ANTX_CTRLMODE_SHIFT   (7U)                                                /*!< XCVR_CTRL_FAD_CTRL.ANTX_CTRLMODE Position*/
#define XCVR_CTRL_FAD_CTRL_ANTX_CTRLMODE(x)      (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_CTRL_FAD_CTRL.ANTX_CTRLMODE Field  */
#define XCVR_CTRL_FAD_CTRL_ANTX_POL_MASK         (0xF00U)                                            /*!< XCVR_CTRL_FAD_CTRL.ANTX_POL Mask        */
#define XCVR_CTRL_FAD_CTRL_ANTX_POL_SHIFT        (8U)                                                /*!< XCVR_CTRL_FAD_CTRL.ANTX_POL Position    */
#define XCVR_CTRL_FAD_CTRL_ANTX_POL(x)           (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< XCVR_CTRL_FAD_CTRL.ANTX_POL Field       */
#define XCVR_CTRL_FAD_CTRL_FAD_NOT_GPIO_MASK     (0xF000U)                                           /*!< XCVR_CTRL_FAD_CTRL.FAD_NOT_GPIO Mask    */
#define XCVR_CTRL_FAD_CTRL_FAD_NOT_GPIO_SHIFT    (12U)                                               /*!< XCVR_CTRL_FAD_CTRL.FAD_NOT_GPIO Position*/
#define XCVR_CTRL_FAD_CTRL_FAD_NOT_GPIO(x)       (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< XCVR_CTRL_FAD_CTRL.FAD_NOT_GPIO Field   */
/* ------- LPPS_CTRL Bit Fields                     ------ */
#define XCVR_CTRL_LPPS_CTRL_LPPS_ENABLE_MASK     (0x1U)                                              /*!< XCVR_CTRL_LPPS_CTRL.LPPS_ENABLE Mask    */
#define XCVR_CTRL_LPPS_CTRL_LPPS_ENABLE_SHIFT    (0U)                                                /*!< XCVR_CTRL_LPPS_CTRL.LPPS_ENABLE Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_ENABLE(x)       (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_CTRL_LPPS_CTRL.LPPS_ENABLE Field   */
#define XCVR_CTRL_LPPS_CTRL_LPPS_TZA_ALLOW_MASK  (0x2U)                                              /*!< XCVR_CTRL_LPPS_CTRL.LPPS_TZA_ALLOW Mask */
#define XCVR_CTRL_LPPS_CTRL_LPPS_TZA_ALLOW_SHIFT (1U)                                                /*!< XCVR_CTRL_LPPS_CTRL.LPPS_TZA_ALLOW Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_TZA_ALLOW(x)    (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_CTRL_LPPS_CTRL.LPPS_TZA_ALLOW Field*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_BBA_ALLOW_MASK  (0x4U)                                              /*!< XCVR_CTRL_LPPS_CTRL.LPPS_BBA_ALLOW Mask */
#define XCVR_CTRL_LPPS_CTRL_LPPS_BBA_ALLOW_SHIFT (2U)                                                /*!< XCVR_CTRL_LPPS_CTRL.LPPS_BBA_ALLOW Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_BBA_ALLOW(x)    (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_CTRL_LPPS_CTRL.LPPS_BBA_ALLOW Field*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_ADC_ALLOW_MASK  (0x8U)                                              /*!< XCVR_CTRL_LPPS_CTRL.LPPS_ADC_ALLOW Mask */
#define XCVR_CTRL_LPPS_CTRL_LPPS_ADC_ALLOW_SHIFT (3U)                                                /*!< XCVR_CTRL_LPPS_CTRL.LPPS_ADC_ALLOW Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_ADC_ALLOW(x)    (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_CTRL_LPPS_CTRL.LPPS_ADC_ALLOW Field*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_DCOC_ALLOW_MASK (0x10U)                                             /*!< XCVR_CTRL_LPPS_CTRL.LPPS_DCOC_ALLOW Mask*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_DCOC_ALLOW_SHIFT (4U)                                               /*!< XCVR_CTRL_LPPS_CTRL.LPPS_DCOC_ALLOW Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_DCOC_ALLOW(x)   (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_CTRL_LPPS_CTRL.LPPS_DCOC_ALLOW Field*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_PDET_ALLOW_MASK (0x20U)                                             /*!< XCVR_CTRL_LPPS_CTRL.LPPS_PDET_ALLOW Mask*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_PDET_ALLOW_SHIFT (5U)                                               /*!< XCVR_CTRL_LPPS_CTRL.LPPS_PDET_ALLOW Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_PDET_ALLOW(x)   (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_CTRL_LPPS_CTRL.LPPS_PDET_ALLOW Field*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_SY_LO_ALLOW_MASK (0x40U)                                            /*!< XCVR_CTRL_LPPS_CTRL.LPPS_SY_LO_ALLOW Mask*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_SY_LO_ALLOW_SHIFT (6U)                                              /*!< XCVR_CTRL_LPPS_CTRL.LPPS_SY_LO_ALLOW Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_SY_LO_ALLOW(x)  (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_CTRL_LPPS_CTRL.LPPS_SY_LO_ALLOW Field*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_SY_LO_BUF_ALLOW_MASK (0x80U)                                        /*!< XCVR_CTRL_LPPS_CTRL.LPPS_SY_LO_BUF_ALLOW Mask*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_SY_LO_BUF_ALLOW_SHIFT (7U)                                          /*!< XCVR_CTRL_LPPS_CTRL.LPPS_SY_LO_BUF_ALLOW Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_SY_LO_BUF_ALLOW(x) (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)       /*!< XCVR_CTRL_LPPS_CTRL.LPPS_SY_LO_BUF_ALLOW Field*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_RX_DIG_ALLOW_MASK (0x100U)                                          /*!< XCVR_CTRL_LPPS_CTRL.LPPS_RX_DIG_ALLOW Mask*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_RX_DIG_ALLOW_SHIFT (8U)                                             /*!< XCVR_CTRL_LPPS_CTRL.LPPS_RX_DIG_ALLOW Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_RX_DIG_ALLOW(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< XCVR_CTRL_LPPS_CTRL.LPPS_RX_DIG_ALLOW Field*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_DCOC_DIG_ALLOW_MASK (0x200U)                                        /*!< XCVR_CTRL_LPPS_CTRL.LPPS_DCOC_DIG_ALLOW Mask*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_DCOC_DIG_ALLOW_SHIFT (9U)                                           /*!< XCVR_CTRL_LPPS_CTRL.LPPS_DCOC_DIG_ALLOW Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_DCOC_DIG_ALLOW(x) (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)       /*!< XCVR_CTRL_LPPS_CTRL.LPPS_DCOC_DIG_ALLOW Field*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_START_RX_MASK   (0xFF0000U)                                         /*!< XCVR_CTRL_LPPS_CTRL.LPPS_START_RX Mask  */
#define XCVR_CTRL_LPPS_CTRL_LPPS_START_RX_SHIFT  (16U)                                               /*!< XCVR_CTRL_LPPS_CTRL.LPPS_START_RX Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_START_RX(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_CTRL_LPPS_CTRL.LPPS_START_RX Field */
#define XCVR_CTRL_LPPS_CTRL_LPPS_DEST_RX_MASK    (0xFF000000U)                                       /*!< XCVR_CTRL_LPPS_CTRL.LPPS_DEST_RX Mask   */
#define XCVR_CTRL_LPPS_CTRL_LPPS_DEST_RX_SHIFT   (24U)                                               /*!< XCVR_CTRL_LPPS_CTRL.LPPS_DEST_RX Position*/
#define XCVR_CTRL_LPPS_CTRL_LPPS_DEST_RX(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_CTRL_LPPS_CTRL.LPPS_DEST_RX Field  */
/* ------- RF_NOT_ALLOWED_CTRL Bit Fields           ------ */
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_NO_TX_MASK (0x1U)                               /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_NO_TX Mask*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_NO_TX_SHIFT (0U)                                /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_NO_TX Position*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_NO_TX(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL) /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_NO_TX Field*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_NO_RX_MASK (0x2U)                               /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_NO_RX Mask*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_NO_RX_SHIFT (1U)                                /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_NO_RX Position*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_NO_RX(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL) /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_NO_RX Field*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_ASSERTED_MASK (0x4U)                            /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_ASSERTED Mask*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_ASSERTED_SHIFT (2U)                             /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_ASSERTED Position*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_ASSERTED(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL) /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_ASSERTED Field*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_TX_ABORT_MASK (0x8U)                            /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_TX_ABORT Mask*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_TX_ABORT_SHIFT (3U)                             /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_TX_ABORT Position*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_TX_ABORT(x) (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL) /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_TX_ABORT Field*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_RX_ABORT_MASK (0x10U)                           /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_RX_ABORT Mask*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_RX_ABORT_SHIFT (4U)                             /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_RX_ABORT Position*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_RX_ABORT(x) (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL) /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED_RX_ABORT Field*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_MASK (0x20U)                                    /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED Mask*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED_SHIFT (5U)                                      /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED Position*/
#define XCVR_CTRL_RF_NOT_ALLOWED_CTRL_RF_NOT_ALLOWED(x) (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)   /*!< XCVR_CTRL_RF_NOT_ALLOWED_CTRL.RF_NOT_ALLOWED Field*/
/* ------- CRCW_CFG Bit Fields                      ------ */
#define XCVR_CTRL_CRCW_CFG_CRCW_EN_MASK          (0x1U)                                              /*!< XCVR_CTRL_CRCW_CFG.CRCW_EN Mask         */
#define XCVR_CTRL_CRCW_CFG_CRCW_EN_SHIFT         (0U)                                                /*!< XCVR_CTRL_CRCW_CFG.CRCW_EN Position     */
#define XCVR_CTRL_CRCW_CFG_CRCW_EN(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_CTRL_CRCW_CFG.CRCW_EN Field        */
#define XCVR_CTRL_CRCW_CFG_CRC_ZERO_MASK         (0x2U)                                              /*!< XCVR_CTRL_CRCW_CFG.CRC_ZERO Mask        */
#define XCVR_CTRL_CRCW_CFG_CRC_ZERO_SHIFT        (1U)                                                /*!< XCVR_CTRL_CRCW_CFG.CRC_ZERO Position    */
#define XCVR_CTRL_CRCW_CFG_CRC_ZERO(x)           (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_CTRL_CRCW_CFG.CRC_ZERO Field       */
#define XCVR_CTRL_CRCW_CFG_CRC_EARLY_FAIL_MASK   (0x4U)                                              /*!< XCVR_CTRL_CRCW_CFG.CRC_EARLY_FAIL Mask  */
#define XCVR_CTRL_CRCW_CFG_CRC_EARLY_FAIL_SHIFT  (2U)                                                /*!< XCVR_CTRL_CRCW_CFG.CRC_EARLY_FAIL Position*/
#define XCVR_CTRL_CRCW_CFG_CRC_EARLY_FAIL(x)     (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_CTRL_CRCW_CFG.CRC_EARLY_FAIL Field */
#define XCVR_CTRL_CRCW_CFG_CRC_RES_OUT_VLD_MASK  (0x8U)                                              /*!< XCVR_CTRL_CRCW_CFG.CRC_RES_OUT_VLD Mask */
#define XCVR_CTRL_CRCW_CFG_CRC_RES_OUT_VLD_SHIFT (3U)                                                /*!< XCVR_CTRL_CRCW_CFG.CRC_RES_OUT_VLD Position*/
#define XCVR_CTRL_CRCW_CFG_CRC_RES_OUT_VLD(x)    (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_CTRL_CRCW_CFG.CRC_RES_OUT_VLD Field*/
#define XCVR_CTRL_CRCW_CFG_CRC_EC_OFFSET_MASK    (0x7FF0000U)                                        /*!< XCVR_CTRL_CRCW_CFG.CRC_EC_OFFSET Mask   */
#define XCVR_CTRL_CRCW_CFG_CRC_EC_OFFSET_SHIFT   (16U)                                               /*!< XCVR_CTRL_CRCW_CFG.CRC_EC_OFFSET Position*/
#define XCVR_CTRL_CRCW_CFG_CRC_EC_OFFSET(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0x7FF0000UL)    /*!< XCVR_CTRL_CRCW_CFG.CRC_EC_OFFSET Field  */
#define XCVR_CTRL_CRCW_CFG_CRC_EC_DONE_MASK      (0x10000000U)                                       /*!< XCVR_CTRL_CRCW_CFG.CRC_EC_DONE Mask     */
#define XCVR_CTRL_CRCW_CFG_CRC_EC_DONE_SHIFT     (28U)                                               /*!< XCVR_CTRL_CRCW_CFG.CRC_EC_DONE Position */
#define XCVR_CTRL_CRCW_CFG_CRC_EC_DONE(x)        (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< XCVR_CTRL_CRCW_CFG.CRC_EC_DONE Field    */
#define XCVR_CTRL_CRCW_CFG_CRC_EC_FAIL_MASK      (0x20000000U)                                       /*!< XCVR_CTRL_CRCW_CFG.CRC_EC_FAIL Mask     */
#define XCVR_CTRL_CRCW_CFG_CRC_EC_FAIL_SHIFT     (29U)                                               /*!< XCVR_CTRL_CRCW_CFG.CRC_EC_FAIL Position */
#define XCVR_CTRL_CRCW_CFG_CRC_EC_FAIL(x)        (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< XCVR_CTRL_CRCW_CFG.CRC_EC_FAIL Field    */
/* ------- CRC_EC_MASK Bit Fields                   ------ */
#define XCVR_CTRL_CRC_EC_MASK_CRC_EC_MASK_MASK   (0xFFFFFFFFU)                                       /*!< XCVR_CTRL_CRC_EC_MASK.CRC_EC_MASK Mask  */
#define XCVR_CTRL_CRC_EC_MASK_CRC_EC_MASK_SHIFT  (0U)                                                /*!< XCVR_CTRL_CRC_EC_MASK.CRC_EC_MASK Position*/
#define XCVR_CTRL_CRC_EC_MASK_CRC_EC_MASK(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< XCVR_CTRL_CRC_EC_MASK.CRC_EC_MASK Field */
/* ------- CRC_RES_OUT Bit Fields                   ------ */
#define XCVR_CTRL_CRC_RES_OUT_CRC_RES_OUT_MASK   (0xFFFFFFFFU)                                       /*!< XCVR_CTRL_CRC_RES_OUT.CRC_RES_OUT Mask  */
#define XCVR_CTRL_CRC_RES_OUT_CRC_RES_OUT_SHIFT  (0U)                                                /*!< XCVR_CTRL_CRC_RES_OUT.CRC_RES_OUT Position*/
#define XCVR_CTRL_CRC_RES_OUT_CRC_RES_OUT(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< XCVR_CTRL_CRC_RES_OUT.CRC_RES_OUT Field */
/**
 * @} */ /* End group XCVR_CTRL_Register_Masks_GROUP 
 */

/* XCVR_CTRL - Peripheral instance base addresses */
#define XCVR_CTRL_BasePtr              0x4005C280UL //!< Peripheral base address
#define XCVR_CTRL                      ((XCVR_CTRL_Type *) XCVR_CTRL_BasePtr) //!< Freescale base pointer
#define XCVR_CTRL_BASE_PTR             (XCVR_CTRL) //!< Freescale style base pointer
#define XCVR_CTRL_IRQS { Radio_0_IRQn, Radio_1_IRQn,  }

/**
 * @} */ /* End group XCVR_CTRL_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XCVR_PHY_Peripheral_access_layer_GROUP XCVR_PHY Peripheral Access Layer
* @brief C Struct for XCVR_PHY
* @{
*/

/* ================================================================================ */
/* ================           XCVR_PHY (file:XCVR_PHY_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief XCVR_PHY
 */
/**
* @addtogroup XCVR_PHY_structs_GROUP XCVR_PHY struct
* @brief Struct for XCVR_PHY
* @{
*/
typedef struct XCVR_PHY_Type {
   __IO uint32_t  PHY_PRE_REF0;                 /**< 0000: PREAMBLE REFERENCE WAVEFORM 0                                */
   __IO uint32_t  PRE_REF1;                     /**< 0004: PREAMBLE REFERENCE WAVEFORM 1                                */
   __IO uint32_t  PRE_REF2;                     /**< 0008: PREAMBLE REFERENCE WAVEFORM 2                                */
        uint8_t   RESERVED_0[20];               /**< 000C: 0x14 bytes                                                   */
   __IO uint32_t  CFG1;                         /**< 0020: PHY CONFIGURATION REGISTER 1                                 */
   __IO uint32_t  CFG2;                         /**< 0024: PHY CONFIGURATION REGISTER 2                                 */
   __IO uint32_t  EL_CFG;                       /**< 0028: PHY EARLY/LATE CONFIGURATION REGISTER                        */
   __IO uint32_t  NTW_ADR_BSM;                  /**< 002C: PHY NETWORK ADDRESS FOR BSM                                  */
   __I  uint32_t  STATUS;                       /**< 0030: PHY STATUS REGISTER                                          */
} XCVR_PHY_Type;

/**
 * @} */ /* End group XCVR_PHY_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XCVR_PHY' Position & Mask macros                    ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XCVR_PHY_Register_Masks_GROUP XCVR_PHY Register Masks
* @brief Register Masks for XCVR_PHY
* @{
*/
/* ------- PHY_PRE_REF0 Bit Fields                  ------ */
#define XCVR_PHY_PHY_PRE_REF0_FSK_PREAMBLE_REF0_MASK (0xFFFFFFFFU)                                   /*!< XCVR_PHY_PHY_PRE_REF0.FSK_PREAMBLE_REF0 Mask*/
#define XCVR_PHY_PHY_PRE_REF0_FSK_PREAMBLE_REF0_SHIFT (0U)                                           /*!< XCVR_PHY_PHY_PRE_REF0.FSK_PREAMBLE_REF0 Position*/
#define XCVR_PHY_PHY_PRE_REF0_FSK_PREAMBLE_REF0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)  /*!< XCVR_PHY_PHY_PRE_REF0.FSK_PREAMBLE_REF0 Field*/
/* ------- PRE_REF1 Bit Fields                      ------ */
#define XCVR_PHY_PRE_REF1_FSK_PREAMBLE_REF1_MASK (0xFFFFFFFFU)                                       /*!< XCVR_PHY_PRE_REF1.FSK_PREAMBLE_REF1 Mask*/
#define XCVR_PHY_PRE_REF1_FSK_PREAMBLE_REF1_SHIFT (0U)                                               /*!< XCVR_PHY_PRE_REF1.FSK_PREAMBLE_REF1 Position*/
#define XCVR_PHY_PRE_REF1_FSK_PREAMBLE_REF1(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< XCVR_PHY_PRE_REF1.FSK_PREAMBLE_REF1 Field*/
/* ------- PRE_REF2 Bit Fields                      ------ */
#define XCVR_PHY_PRE_REF2_FSK_PREAMBLE_REF2_MASK (0xFFFFU)                                           /*!< XCVR_PHY_PRE_REF2.FSK_PREAMBLE_REF2 Mask*/
#define XCVR_PHY_PRE_REF2_FSK_PREAMBLE_REF2_SHIFT (0U)                                               /*!< XCVR_PHY_PRE_REF2.FSK_PREAMBLE_REF2 Position*/
#define XCVR_PHY_PRE_REF2_FSK_PREAMBLE_REF2(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< XCVR_PHY_PRE_REF2.FSK_PREAMBLE_REF2 Field*/
/* ------- CFG1 Bit Fields                          ------ */
#define XCVR_PHY_CFG1_AA_PLAYBACK_MASK           (0x2U)                                              /*!< XCVR_PHY_CFG1.AA_PLAYBACK Mask          */
#define XCVR_PHY_CFG1_AA_PLAYBACK_SHIFT          (1U)                                                /*!< XCVR_PHY_CFG1.AA_PLAYBACK Position      */
#define XCVR_PHY_CFG1_AA_PLAYBACK(x)             (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_PHY_CFG1.AA_PLAYBACK Field         */
#define XCVR_PHY_CFG1_AA_OUTPUT_SEL_MASK         (0x4U)                                              /*!< XCVR_PHY_CFG1.AA_OUTPUT_SEL Mask        */
#define XCVR_PHY_CFG1_AA_OUTPUT_SEL_SHIFT        (2U)                                                /*!< XCVR_PHY_CFG1.AA_OUTPUT_SEL Position    */
#define XCVR_PHY_CFG1_AA_OUTPUT_SEL(x)           (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_PHY_CFG1.AA_OUTPUT_SEL Field       */
#define XCVR_PHY_CFG1_FSK_BIT_INVERT_MASK        (0x8U)                                              /*!< XCVR_PHY_CFG1.FSK_BIT_INVERT Mask       */
#define XCVR_PHY_CFG1_FSK_BIT_INVERT_SHIFT       (3U)                                                /*!< XCVR_PHY_CFG1.FSK_BIT_INVERT Position   */
#define XCVR_PHY_CFG1_FSK_BIT_INVERT(x)          (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_PHY_CFG1.FSK_BIT_INVERT Field      */
#define XCVR_PHY_CFG1_RFU00_MASK                 (0x10U)                                             /*!< XCVR_PHY_CFG1.RFU00 Mask                */
#define XCVR_PHY_CFG1_RFU00_SHIFT                (4U)                                                /*!< XCVR_PHY_CFG1.RFU00 Position            */
#define XCVR_PHY_CFG1_RFU00(x)                   (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_PHY_CFG1.RFU00 Field               */
#define XCVR_PHY_CFG1_BSM_EN_BLE_MASK            (0x20U)                                             /*!< XCVR_PHY_CFG1.BSM_EN_BLE Mask           */
#define XCVR_PHY_CFG1_BSM_EN_BLE_SHIFT           (5U)                                                /*!< XCVR_PHY_CFG1.BSM_EN_BLE Position       */
#define XCVR_PHY_CFG1_BSM_EN_BLE(x)              (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_PHY_CFG1.BSM_EN_BLE Field          */
#define XCVR_PHY_CFG1_DEMOD_CLK_MODE_MASK        (0xC0U)                                             /*!< XCVR_PHY_CFG1.DEMOD_CLK_MODE Mask       */
#define XCVR_PHY_CFG1_DEMOD_CLK_MODE_SHIFT       (6U)                                                /*!< XCVR_PHY_CFG1.DEMOD_CLK_MODE Position   */
#define XCVR_PHY_CFG1_DEMOD_CLK_MODE(x)          (((uint32_t)(((uint32_t)(x))<<6U))&0xC0UL)          /*!< XCVR_PHY_CFG1.DEMOD_CLK_MODE Field      */
#define XCVR_PHY_CFG1_CTS_THRESH_MASK            (0xFF00U)                                           /*!< XCVR_PHY_CFG1.CTS_THRESH Mask           */
#define XCVR_PHY_CFG1_CTS_THRESH_SHIFT           (8U)                                                /*!< XCVR_PHY_CFG1.CTS_THRESH Position       */
#define XCVR_PHY_CFG1_CTS_THRESH(x)              (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_PHY_CFG1.CTS_THRESH Field          */
#define XCVR_PHY_CFG1_FSK_FTS_TIMEOUT_MASK       (0x700000U)                                         /*!< XCVR_PHY_CFG1.FSK_FTS_TIMEOUT Mask      */
#define XCVR_PHY_CFG1_FSK_FTS_TIMEOUT_SHIFT      (20U)                                               /*!< XCVR_PHY_CFG1.FSK_FTS_TIMEOUT Position  */
#define XCVR_PHY_CFG1_FSK_FTS_TIMEOUT(x)         (((uint32_t)(((uint32_t)(x))<<20U))&0x700000UL)     /*!< XCVR_PHY_CFG1.FSK_FTS_TIMEOUT Field     */
#define XCVR_PHY_CFG1_RFU01_MASK                 (0x1000000U)                                        /*!< XCVR_PHY_CFG1.RFU01 Mask                */
#define XCVR_PHY_CFG1_RFU01_SHIFT                (24U)                                               /*!< XCVR_PHY_CFG1.RFU01 Position            */
#define XCVR_PHY_CFG1_RFU01(x)                   (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< XCVR_PHY_CFG1.RFU01 Field               */
#define XCVR_PHY_CFG1_RFU02_MASK                 (0x2000000U)                                        /*!< XCVR_PHY_CFG1.RFU02 Mask                */
#define XCVR_PHY_CFG1_RFU02_SHIFT                (25U)                                               /*!< XCVR_PHY_CFG1.RFU02 Position            */
#define XCVR_PHY_CFG1_RFU02(x)                   (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< XCVR_PHY_CFG1.RFU02 Field               */
#define XCVR_PHY_CFG1_BLE_NTW_ADR_THR_MASK       (0x70000000U)                                       /*!< XCVR_PHY_CFG1.BLE_NTW_ADR_THR Mask      */
#define XCVR_PHY_CFG1_BLE_NTW_ADR_THR_SHIFT      (28U)                                               /*!< XCVR_PHY_CFG1.BLE_NTW_ADR_THR Position  */
#define XCVR_PHY_CFG1_BLE_NTW_ADR_THR(x)         (((uint32_t)(((uint32_t)(x))<<28U))&0x70000000UL)   /*!< XCVR_PHY_CFG1.BLE_NTW_ADR_THR Field     */
/* ------- CFG2 Bit Fields                          ------ */
#define XCVR_PHY_CFG2_PHY_FIFO_PRECHG_MASK       (0xFU)                                              /*!< XCVR_PHY_CFG2.PHY_FIFO_PRECHG Mask      */
#define XCVR_PHY_CFG2_PHY_FIFO_PRECHG_SHIFT      (0U)                                                /*!< XCVR_PHY_CFG2.PHY_FIFO_PRECHG Position  */
#define XCVR_PHY_CFG2_PHY_FIFO_PRECHG(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< XCVR_PHY_CFG2.PHY_FIFO_PRECHG Field     */
#define XCVR_PHY_CFG2_RFU03_MASK                 (0x10U)                                             /*!< XCVR_PHY_CFG2.RFU03 Mask                */
#define XCVR_PHY_CFG2_RFU03_SHIFT                (4U)                                                /*!< XCVR_PHY_CFG2.RFU03 Position            */
#define XCVR_PHY_CFG2_RFU03(x)                   (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_PHY_CFG2.RFU03 Field               */
#define XCVR_PHY_CFG2_RFU04_MASK                 (0x20U)                                             /*!< XCVR_PHY_CFG2.RFU04 Mask                */
#define XCVR_PHY_CFG2_RFU04_SHIFT                (5U)                                                /*!< XCVR_PHY_CFG2.RFU04 Position            */
#define XCVR_PHY_CFG2_RFU04(x)                   (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_PHY_CFG2.RFU04 Field               */
#define XCVR_PHY_CFG2_RFU05_MASK                 (0x40U)                                             /*!< XCVR_PHY_CFG2.RFU05 Mask                */
#define XCVR_PHY_CFG2_RFU05_SHIFT                (6U)                                                /*!< XCVR_PHY_CFG2.RFU05 Position            */
#define XCVR_PHY_CFG2_RFU05(x)                   (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_PHY_CFG2.RFU05 Field               */
#define XCVR_PHY_CFG2_RFU06_MASK                 (0x80U)                                             /*!< XCVR_PHY_CFG2.RFU06 Mask                */
#define XCVR_PHY_CFG2_RFU06_SHIFT                (7U)                                                /*!< XCVR_PHY_CFG2.RFU06 Position            */
#define XCVR_PHY_CFG2_RFU06(x)                   (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_PHY_CFG2.RFU06 Field               */
#define XCVR_PHY_CFG2_X2_DEMOD_GAIN_MASK         (0xF00U)                                            /*!< XCVR_PHY_CFG2.X2_DEMOD_GAIN Mask        */
#define XCVR_PHY_CFG2_X2_DEMOD_GAIN_SHIFT        (8U)                                                /*!< XCVR_PHY_CFG2.X2_DEMOD_GAIN Position    */
#define XCVR_PHY_CFG2_X2_DEMOD_GAIN(x)           (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< XCVR_PHY_CFG2.X2_DEMOD_GAIN Field       */
#define XCVR_PHY_CFG2_RFU07_MASK                 (0x10000U)                                          /*!< XCVR_PHY_CFG2.RFU07 Mask                */
#define XCVR_PHY_CFG2_RFU07_SHIFT                (16U)                                               /*!< XCVR_PHY_CFG2.RFU07 Position            */
#define XCVR_PHY_CFG2_RFU07(x)                   (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< XCVR_PHY_CFG2.RFU07 Field               */
#define XCVR_PHY_CFG2_RFU08_MASK                 (0x20000U)                                          /*!< XCVR_PHY_CFG2.RFU08 Mask                */
#define XCVR_PHY_CFG2_RFU08_SHIFT                (17U)                                               /*!< XCVR_PHY_CFG2.RFU08 Position            */
#define XCVR_PHY_CFG2_RFU08(x)                   (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< XCVR_PHY_CFG2.RFU08 Field               */
#define XCVR_PHY_CFG2_RFU09_MASK                 (0x40000U)                                          /*!< XCVR_PHY_CFG2.RFU09 Mask                */
#define XCVR_PHY_CFG2_RFU09_SHIFT                (18U)                                               /*!< XCVR_PHY_CFG2.RFU09 Position            */
#define XCVR_PHY_CFG2_RFU09(x)                   (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< XCVR_PHY_CFG2.RFU09 Field               */
#define XCVR_PHY_CFG2_RFU10_MASK                 (0x80000U)                                          /*!< XCVR_PHY_CFG2.RFU10 Mask                */
#define XCVR_PHY_CFG2_RFU10_SHIFT                (19U)                                               /*!< XCVR_PHY_CFG2.RFU10 Position            */
#define XCVR_PHY_CFG2_RFU10(x)                   (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< XCVR_PHY_CFG2.RFU10 Field               */
#define XCVR_PHY_CFG2_RFU11_MASK                 (0x100000U)                                         /*!< XCVR_PHY_CFG2.RFU11 Mask                */
#define XCVR_PHY_CFG2_RFU11_SHIFT                (20U)                                               /*!< XCVR_PHY_CFG2.RFU11 Position            */
#define XCVR_PHY_CFG2_RFU11(x)                   (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< XCVR_PHY_CFG2.RFU11 Field               */
#define XCVR_PHY_CFG2_RFU12_MASK                 (0x200000U)                                         /*!< XCVR_PHY_CFG2.RFU12 Mask                */
#define XCVR_PHY_CFG2_RFU12_SHIFT                (21U)                                               /*!< XCVR_PHY_CFG2.RFU12 Position            */
#define XCVR_PHY_CFG2_RFU12(x)                   (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< XCVR_PHY_CFG2.RFU12 Field               */
#define XCVR_PHY_CFG2_RFU13_MASK                 (0x400000U)                                         /*!< XCVR_PHY_CFG2.RFU13 Mask                */
#define XCVR_PHY_CFG2_RFU13_SHIFT                (22U)                                               /*!< XCVR_PHY_CFG2.RFU13 Position            */
#define XCVR_PHY_CFG2_RFU13(x)                   (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< XCVR_PHY_CFG2.RFU13 Field               */
#define XCVR_PHY_CFG2_RFU14_MASK                 (0x800000U)                                         /*!< XCVR_PHY_CFG2.RFU14 Mask                */
#define XCVR_PHY_CFG2_RFU14_SHIFT                (23U)                                               /*!< XCVR_PHY_CFG2.RFU14 Position            */
#define XCVR_PHY_CFG2_RFU14(x)                   (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< XCVR_PHY_CFG2.RFU14 Field               */
#define XCVR_PHY_CFG2_RFU15_MASK                 (0x1000000U)                                        /*!< XCVR_PHY_CFG2.RFU15 Mask                */
#define XCVR_PHY_CFG2_RFU15_SHIFT                (24U)                                               /*!< XCVR_PHY_CFG2.RFU15 Position            */
#define XCVR_PHY_CFG2_RFU15(x)                   (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< XCVR_PHY_CFG2.RFU15 Field               */
#define XCVR_PHY_CFG2_RFU16_MASK                 (0x2000000U)                                        /*!< XCVR_PHY_CFG2.RFU16 Mask                */
#define XCVR_PHY_CFG2_RFU16_SHIFT                (25U)                                               /*!< XCVR_PHY_CFG2.RFU16 Position            */
#define XCVR_PHY_CFG2_RFU16(x)                   (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< XCVR_PHY_CFG2.RFU16 Field               */
#define XCVR_PHY_CFG2_PHY_CLK_ON_MASK            (0x80000000U)                                       /*!< XCVR_PHY_CFG2.PHY_CLK_ON Mask           */
#define XCVR_PHY_CFG2_PHY_CLK_ON_SHIFT           (31U)                                               /*!< XCVR_PHY_CFG2.PHY_CLK_ON Position       */
#define XCVR_PHY_CFG2_PHY_CLK_ON(x)              (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< XCVR_PHY_CFG2.PHY_CLK_ON Field          */
/* ------- EL_CFG Bit Fields                        ------ */
#define XCVR_PHY_EL_CFG_EL_ENABLE_MASK           (0x1U)                                              /*!< XCVR_PHY_EL_CFG.EL_ENABLE Mask          */
#define XCVR_PHY_EL_CFG_EL_ENABLE_SHIFT          (0U)                                                /*!< XCVR_PHY_EL_CFG.EL_ENABLE Position      */
#define XCVR_PHY_EL_CFG_EL_ENABLE(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_PHY_EL_CFG.EL_ENABLE Field         */
#define XCVR_PHY_EL_CFG_EL_ZB_ENABLE_MASK        (0x2U)                                              /*!< XCVR_PHY_EL_CFG.EL_ZB_ENABLE Mask       */
#define XCVR_PHY_EL_CFG_EL_ZB_ENABLE_SHIFT       (1U)                                                /*!< XCVR_PHY_EL_CFG.EL_ZB_ENABLE Position   */
#define XCVR_PHY_EL_CFG_EL_ZB_ENABLE(x)          (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_PHY_EL_CFG.EL_ZB_ENABLE Field      */
#define XCVR_PHY_EL_CFG_EL_ZB_WIN_SIZE_MASK      (0x4U)                                              /*!< XCVR_PHY_EL_CFG.EL_ZB_WIN_SIZE Mask     */
#define XCVR_PHY_EL_CFG_EL_ZB_WIN_SIZE_SHIFT     (2U)                                                /*!< XCVR_PHY_EL_CFG.EL_ZB_WIN_SIZE Position */
#define XCVR_PHY_EL_CFG_EL_ZB_WIN_SIZE(x)        (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_PHY_EL_CFG.EL_ZB_WIN_SIZE Field    */
#define XCVR_PHY_EL_CFG_EL_WIN_SIZE_MASK         (0xF00U)                                            /*!< XCVR_PHY_EL_CFG.EL_WIN_SIZE Mask        */
#define XCVR_PHY_EL_CFG_EL_WIN_SIZE_SHIFT        (8U)                                                /*!< XCVR_PHY_EL_CFG.EL_WIN_SIZE Position    */
#define XCVR_PHY_EL_CFG_EL_WIN_SIZE(x)           (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< XCVR_PHY_EL_CFG.EL_WIN_SIZE Field       */
#define XCVR_PHY_EL_CFG_EL_INTERVAL_MASK         (0x3F0000U)                                         /*!< XCVR_PHY_EL_CFG.EL_INTERVAL Mask        */
#define XCVR_PHY_EL_CFG_EL_INTERVAL_SHIFT        (16U)                                               /*!< XCVR_PHY_EL_CFG.EL_INTERVAL Position    */
#define XCVR_PHY_EL_CFG_EL_INTERVAL(x)           (((uint32_t)(((uint32_t)(x))<<16U))&0x3F0000UL)     /*!< XCVR_PHY_EL_CFG.EL_INTERVAL Field       */
/* ------- NTW_ADR_BSM Bit Fields                   ------ */
#define XCVR_PHY_NTW_ADR_BSM_NTW_ADR_BSM_MASK    (0xFFFFFFFFU)                                       /*!< XCVR_PHY_NTW_ADR_BSM.NTW_ADR_BSM Mask   */
#define XCVR_PHY_NTW_ADR_BSM_NTW_ADR_BSM_SHIFT   (0U)                                                /*!< XCVR_PHY_NTW_ADR_BSM.NTW_ADR_BSM Position*/
#define XCVR_PHY_NTW_ADR_BSM_NTW_ADR_BSM(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< XCVR_PHY_NTW_ADR_BSM.NTW_ADR_BSM Field  */
/* ------- STATUS Bit Fields                        ------ */
#define XCVR_PHY_STATUS_PREAMBLE_FOUND_MASK      (0x1U)                                              /*!< XCVR_PHY_STATUS.PREAMBLE_FOUND Mask     */
#define XCVR_PHY_STATUS_PREAMBLE_FOUND_SHIFT     (0U)                                                /*!< XCVR_PHY_STATUS.PREAMBLE_FOUND Position */
#define XCVR_PHY_STATUS_PREAMBLE_FOUND(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_PHY_STATUS.PREAMBLE_FOUND Field    */
#define XCVR_PHY_STATUS_AA_SFD_MATCHED_MASK      (0x2U)                                              /*!< XCVR_PHY_STATUS.AA_SFD_MATCHED Mask     */
#define XCVR_PHY_STATUS_AA_SFD_MATCHED_SHIFT     (1U)                                                /*!< XCVR_PHY_STATUS.AA_SFD_MATCHED Position */
#define XCVR_PHY_STATUS_AA_SFD_MATCHED(x)        (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_PHY_STATUS.AA_SFD_MATCHED Field    */
#define XCVR_PHY_STATUS_AA_MATCHED_MASK          (0xF0U)                                             /*!< XCVR_PHY_STATUS.AA_MATCHED Mask         */
#define XCVR_PHY_STATUS_AA_MATCHED_SHIFT         (4U)                                                /*!< XCVR_PHY_STATUS.AA_MATCHED Position     */
#define XCVR_PHY_STATUS_AA_MATCHED(x)            (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)          /*!< XCVR_PHY_STATUS.AA_MATCHED Field        */
#define XCVR_PHY_STATUS_HAMMING_DISTANCE_MASK    (0x700U)                                            /*!< XCVR_PHY_STATUS.HAMMING_DISTANCE Mask   */
#define XCVR_PHY_STATUS_HAMMING_DISTANCE_SHIFT   (8U)                                                /*!< XCVR_PHY_STATUS.HAMMING_DISTANCE Position*/
#define XCVR_PHY_STATUS_HAMMING_DISTANCE(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0x700UL)         /*!< XCVR_PHY_STATUS.HAMMING_DISTANCE Field  */
#define XCVR_PHY_STATUS_DATA_FIFO_DEPTH_MASK     (0xF000U)                                           /*!< XCVR_PHY_STATUS.DATA_FIFO_DEPTH Mask    */
#define XCVR_PHY_STATUS_DATA_FIFO_DEPTH_SHIFT    (12U)                                               /*!< XCVR_PHY_STATUS.DATA_FIFO_DEPTH Position*/
#define XCVR_PHY_STATUS_DATA_FIFO_DEPTH(x)       (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< XCVR_PHY_STATUS.DATA_FIFO_DEPTH Field   */
#define XCVR_PHY_STATUS_CFO_ESTIMATE_MASK        (0xFF0000U)                                         /*!< XCVR_PHY_STATUS.CFO_ESTIMATE Mask       */
#define XCVR_PHY_STATUS_CFO_ESTIMATE_SHIFT       (16U)                                               /*!< XCVR_PHY_STATUS.CFO_ESTIMATE Position   */
#define XCVR_PHY_STATUS_CFO_ESTIMATE(x)          (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_PHY_STATUS.CFO_ESTIMATE Field      */
/**
 * @} */ /* End group XCVR_PHY_Register_Masks_GROUP 
 */

/* XCVR_PHY - Peripheral instance base addresses */
#define XCVR_PHY_BasePtr               0x4005C400UL //!< Peripheral base address
#define XCVR_PHY                       ((XCVR_PHY_Type *) XCVR_PHY_BasePtr) //!< Freescale base pointer
#define XCVR_PHY_BASE_PTR              (XCVR_PHY) //!< Freescale style base pointer
/**
 * @} */ /* End group XCVR_PHY_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XCVR_PKT_RAM_Peripheral_access_layer_GROUP XCVR_PKT_RAM Peripheral Access Layer
* @brief C Struct for XCVR_PKT_RAM
* @{
*/

/* ================================================================================ */
/* ================           XCVR_PKT_RAM (file:XCVR_PKT_RAM_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief XCVR_PKT_RAM
 */
/**
* @addtogroup XCVR_PKT_RAM_structs_GROUP XCVR_PKT_RAM struct
* @brief Struct for XCVR_PKT_RAM
* @{
*/
typedef struct XCVR_PKT_RAM_Type {
   __IO uint16_t  PACKET_RAM_0[544];            /**< 0000: Shared Packet RAM for multiple Link Layer usage              */
   __IO uint16_t  PACKET_RAM_1[544];            /**< 0440: Shared Packet RAM for multiple Link Layer usage              */
} XCVR_PKT_RAM_Type;

/**
 * @} */ /* End group XCVR_PKT_RAM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XCVR_PKT_RAM' Position & Mask macros                ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XCVR_PKT_RAM_Register_Masks_GROUP XCVR_PKT_RAM Register Masks
* @brief Register Masks for XCVR_PKT_RAM
* @{
*/
/* ------- PACKET_RAM_0 Bit Fields                  ------ */
#define XCVR_PKT_RAM_PACKET_RAM_0_LSBYTE_MASK    (0xFFU)                                             /*!< XCVR_PKT_RAM_PACKET_RAM_0.LSBYTE Mask   */
#define XCVR_PKT_RAM_PACKET_RAM_0_LSBYTE_SHIFT   (0U)                                                /*!< XCVR_PKT_RAM_PACKET_RAM_0.LSBYTE Position*/
#define XCVR_PKT_RAM_PACKET_RAM_0_LSBYTE(x)      (((uint16_t)(((uint16_t)(x))<<0U))&0xFFUL)          /*!< XCVR_PKT_RAM_PACKET_RAM_0.LSBYTE Field  */
#define XCVR_PKT_RAM_PACKET_RAM_0_MSBYTE_MASK    (0xFF00U)                                           /*!< XCVR_PKT_RAM_PACKET_RAM_0.MSBYTE Mask   */
#define XCVR_PKT_RAM_PACKET_RAM_0_MSBYTE_SHIFT   (8U)                                                /*!< XCVR_PKT_RAM_PACKET_RAM_0.MSBYTE Position*/
#define XCVR_PKT_RAM_PACKET_RAM_0_MSBYTE(x)      (((uint16_t)(((uint16_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_PKT_RAM_PACKET_RAM_0.MSBYTE Field  */
/* ------- PACKET_RAM_1 Bit Fields                  ------ */
#define XCVR_PKT_RAM_PACKET_RAM_1_LSBYTE_MASK    (0xFFU)                                             /*!< XCVR_PKT_RAM_PACKET_RAM_1.LSBYTE Mask   */
#define XCVR_PKT_RAM_PACKET_RAM_1_LSBYTE_SHIFT   (0U)                                                /*!< XCVR_PKT_RAM_PACKET_RAM_1.LSBYTE Position*/
#define XCVR_PKT_RAM_PACKET_RAM_1_LSBYTE(x)      (((uint16_t)(((uint16_t)(x))<<0U))&0xFFUL)          /*!< XCVR_PKT_RAM_PACKET_RAM_1.LSBYTE Field  */
#define XCVR_PKT_RAM_PACKET_RAM_1_MSBYTE_MASK    (0xFF00U)                                           /*!< XCVR_PKT_RAM_PACKET_RAM_1.MSBYTE Mask   */
#define XCVR_PKT_RAM_PACKET_RAM_1_MSBYTE_SHIFT   (8U)                                                /*!< XCVR_PKT_RAM_PACKET_RAM_1.MSBYTE Position*/
#define XCVR_PKT_RAM_PACKET_RAM_1_MSBYTE(x)      (((uint16_t)(((uint16_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_PKT_RAM_PACKET_RAM_1.MSBYTE Field  */
/**
 * @} */ /* End group XCVR_PKT_RAM_Register_Masks_GROUP 
 */

/* XCVR_PKT_RAM - Peripheral instance base addresses */
#define XCVR_PKT_RAM_BasePtr           0x4005C700UL //!< Peripheral base address
#define XCVR_PKT_RAM                   ((XCVR_PKT_RAM_Type *) XCVR_PKT_RAM_BasePtr) //!< Freescale base pointer
#define XCVR_PKT_RAM_BASE_PTR          (XCVR_PKT_RAM) //!< Freescale style base pointer
/**
 * @} */ /* End group XCVR_PKT_RAM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XCVR_PLL_DIG_Peripheral_access_layer_GROUP XCVR_PLL_DIG Peripheral Access Layer
* @brief C Struct for XCVR_PLL_DIG
* @{
*/

/* ================================================================================ */
/* ================           XCVR_PLL_DIG (file:XCVR_PLL_DIG_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief XCVR_PLL_DIG
 */
/**
* @addtogroup XCVR_PLL_DIG_structs_GROUP XCVR_PLL_DIG struct
* @brief Struct for XCVR_PLL_DIG
* @{
*/
typedef struct XCVR_PLL_DIG_Type {
   __IO uint32_t  HPM_BUMP;                     /**< 0000: PLL HPM Analog Bump Control                                  */
   __IO uint32_t  MOD_CTRL;                     /**< 0004: PLL Modulation Control                                       */
   __IO uint32_t  CHAN_MAP;                     /**< 0008: PLL Channel Mapping                                          */
   __IO uint32_t  LOCK_DETECT;                  /**< 000C: PLL Lock Detect Control                                      */
   __IO uint32_t  HPM_CTRL;                     /**< 0010: PLL High Port Modulator Control                              */
   __IO uint32_t  HPMCAL_CTRL;                  /**< 0014: PLL High Port Calibration Control                            */
   __IO uint32_t  HPM_CAL1;                     /**< 0018: PLL High Port Calibration Result 1                           */
   __IO uint32_t  HPM_CAL2;                     /**< 001C: PLL High Port Calibration Result 2                           */
   __IO uint32_t  HPM_SDM_RES;                  /**< 0020: PLL High Port Sigma Delta Results                            */
   __IO uint32_t  LPM_CTRL;                     /**< 0024: PLL Low Port Modulator Control                               */
   __IO uint32_t  LPM_SDM_CTRL1;                /**< 0028: PLL Low Port Sigma Delta Control 1                           */
   __IO uint32_t  LPM_SDM_CTRL2;                /**< 002C: PLL Low Port Sigma Delta Control 2                           */
   __IO uint32_t  LPM_SDM_CTRL3;                /**< 0030: PLL Low Port Sigma Delta Control 3                           */
   __I  uint32_t  LPM_SDM_RES1;                 /**< 0034: PLL Low Port Sigma Delta Result 1                            */
   __I  uint32_t  LPM_SDM_RES2;                 /**< 0038: PLL Low Port Sigma Delta Result 2                            */
   __IO uint32_t  DELAY_MATCH;                  /**< 003C: PLL Delay Matching                                           */
   __IO uint32_t  CTUNE_CTRL;                   /**< 0040: PLL Coarse Tune Control                                      */
   __I  uint32_t  CTUNE_CNT6;                   /**< 0044: PLL Coarse Tune Count 6                                      */
   __I  uint32_t  CTUNE_CNT5_4;                 /**< 0048: PLL Coarse Tune Counts 5 and 4                               */
   __I  uint32_t  CTUNE_CNT3_2;                 /**< 004C: PLL Coarse Tune Counts 3 and 2                               */
   __I  uint32_t  CTUNE_CNT1_0;                 /**< 0050: PLL Coarse Tune Counts 1 and 0                               */
   __I  uint32_t  CTUNE_RES;                    /**< 0054: PLL Coarse Tune Results                                      */
} XCVR_PLL_DIG_Type;

/**
 * @} */ /* End group XCVR_PLL_DIG_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XCVR_PLL_DIG' Position & Mask macros                ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XCVR_PLL_DIG_Register_Masks_GROUP XCVR_PLL_DIG Register Masks
* @brief Register Masks for XCVR_PLL_DIG
* @{
*/
/* ------- HPM_BUMP Bit Fields                      ------ */
#define XCVR_PLL_DIG_HPM_BUMP_HPM_VCM_TX_MASK    (0x7U)                                              /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_VCM_TX Mask   */
#define XCVR_PLL_DIG_HPM_BUMP_HPM_VCM_TX_SHIFT   (0U)                                                /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_VCM_TX Position*/
#define XCVR_PLL_DIG_HPM_BUMP_HPM_VCM_TX(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_VCM_TX Field  */
#define XCVR_PLL_DIG_HPM_BUMP_HPM_VCM_CAL_MASK   (0x70U)                                             /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_VCM_CAL Mask  */
#define XCVR_PLL_DIG_HPM_BUMP_HPM_VCM_CAL_SHIFT  (4U)                                                /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_VCM_CAL Position*/
#define XCVR_PLL_DIG_HPM_BUMP_HPM_VCM_CAL(x)     (((uint32_t)(((uint32_t)(x))<<4U))&0x70UL)          /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_VCM_CAL Field */
#define XCVR_PLL_DIG_HPM_BUMP_HPM_FDB_RES_TX_MASK (0x300U)                                           /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_FDB_RES_TX Mask*/
#define XCVR_PLL_DIG_HPM_BUMP_HPM_FDB_RES_TX_SHIFT (8U)                                              /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_FDB_RES_TX Position*/
#define XCVR_PLL_DIG_HPM_BUMP_HPM_FDB_RES_TX(x)  (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)         /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_FDB_RES_TX Field*/
#define XCVR_PLL_DIG_HPM_BUMP_HPM_FDB_RES_CAL_MASK (0x3000U)                                         /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_FDB_RES_CAL Mask*/
#define XCVR_PLL_DIG_HPM_BUMP_HPM_FDB_RES_CAL_SHIFT (12U)                                            /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_FDB_RES_CAL Position*/
#define XCVR_PLL_DIG_HPM_BUMP_HPM_FDB_RES_CAL(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x3000UL)       /*!< XCVR_PLL_DIG_HPM_BUMP.HPM_FDB_RES_CAL Field*/
/* ------- MOD_CTRL Bit Fields                      ------ */
#define XCVR_PLL_DIG_MOD_CTRL_MODULATION_WORD_MANUAL_MASK (0x1FFFU)                                  /*!< XCVR_PLL_DIG_MOD_CTRL.MODULATION_WORD_MANUAL Mask*/
#define XCVR_PLL_DIG_MOD_CTRL_MODULATION_WORD_MANUAL_SHIFT (0U)                                      /*!< XCVR_PLL_DIG_MOD_CTRL.MODULATION_WORD_MANUAL Position*/
#define XCVR_PLL_DIG_MOD_CTRL_MODULATION_WORD_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL) /*!< XCVR_PLL_DIG_MOD_CTRL.MODULATION_WORD_MANUAL Field*/
#define XCVR_PLL_DIG_MOD_CTRL_MOD_DISABLE_MASK   (0x8000U)                                           /*!< XCVR_PLL_DIG_MOD_CTRL.MOD_DISABLE Mask  */
#define XCVR_PLL_DIG_MOD_CTRL_MOD_DISABLE_SHIFT  (15U)                                               /*!< XCVR_PLL_DIG_MOD_CTRL.MOD_DISABLE Position*/
#define XCVR_PLL_DIG_MOD_CTRL_MOD_DISABLE(x)     (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< XCVR_PLL_DIG_MOD_CTRL.MOD_DISABLE Field */
#define XCVR_PLL_DIG_MOD_CTRL_HPM_MOD_MANUAL_MASK (0xFF0000U)                                        /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_MOD_MANUAL Mask*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_MOD_MANUAL_SHIFT (16U)                                             /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_MOD_MANUAL Position*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_MOD_MANUAL(x)  (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_MOD_MANUAL Field*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_MOD_DISABLE_MASK (0x8000000U)                                      /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_MOD_DISABLE Mask*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_MOD_DISABLE_SHIFT (27U)                                            /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_MOD_DISABLE Position*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_MOD_DISABLE(x) (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_MOD_DISABLE Field*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_SDM_OUT_MANUAL_MASK (0x30000000U)                                  /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_SDM_OUT_MANUAL Mask*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_SDM_OUT_MANUAL_SHIFT (28U)                                         /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_SDM_OUT_MANUAL Position*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_SDM_OUT_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<28U))&0x30000000UL) /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_SDM_OUT_MANUAL Field*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_SDM_OUT_DISABLE_MASK (0x80000000U)                                 /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_SDM_OUT_DISABLE Mask*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_SDM_OUT_DISABLE_SHIFT (31U)                                        /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_SDM_OUT_DISABLE Position*/
#define XCVR_PLL_DIG_MOD_CTRL_HPM_SDM_OUT_DISABLE(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL) /*!< XCVR_PLL_DIG_MOD_CTRL.HPM_SDM_OUT_DISABLE Field*/
/* ------- CHAN_MAP Bit Fields                      ------ */
#define XCVR_PLL_DIG_CHAN_MAP_CHANNEL_NUM_MASK   (0x7FU)                                             /*!< XCVR_PLL_DIG_CHAN_MAP.CHANNEL_NUM Mask  */
#define XCVR_PLL_DIG_CHAN_MAP_CHANNEL_NUM_SHIFT  (0U)                                                /*!< XCVR_PLL_DIG_CHAN_MAP.CHANNEL_NUM Position*/
#define XCVR_PLL_DIG_CHAN_MAP_CHANNEL_NUM(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< XCVR_PLL_DIG_CHAN_MAP.CHANNEL_NUM Field */
#define XCVR_PLL_DIG_CHAN_MAP_BOC_MASK           (0x100U)                                            /*!< XCVR_PLL_DIG_CHAN_MAP.BOC Mask          */
#define XCVR_PLL_DIG_CHAN_MAP_BOC_SHIFT          (8U)                                                /*!< XCVR_PLL_DIG_CHAN_MAP.BOC Position      */
#define XCVR_PLL_DIG_CHAN_MAP_BOC(x)             (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< XCVR_PLL_DIG_CHAN_MAP.BOC Field         */
#define XCVR_PLL_DIG_CHAN_MAP_BMR_MASK           (0x200U)                                            /*!< XCVR_PLL_DIG_CHAN_MAP.BMR Mask          */
#define XCVR_PLL_DIG_CHAN_MAP_BMR_SHIFT          (9U)                                                /*!< XCVR_PLL_DIG_CHAN_MAP.BMR Position      */
#define XCVR_PLL_DIG_CHAN_MAP_BMR(x)             (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< XCVR_PLL_DIG_CHAN_MAP.BMR Field         */
#define XCVR_PLL_DIG_CHAN_MAP_ZOC_MASK           (0x400U)                                            /*!< XCVR_PLL_DIG_CHAN_MAP.ZOC Mask          */
#define XCVR_PLL_DIG_CHAN_MAP_ZOC_SHIFT          (10U)                                               /*!< XCVR_PLL_DIG_CHAN_MAP.ZOC Position      */
#define XCVR_PLL_DIG_CHAN_MAP_ZOC(x)             (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< XCVR_PLL_DIG_CHAN_MAP.ZOC Field         */
/* ------- LOCK_DETECT Bit Fields                   ------ */
#define XCVR_PLL_DIG_LOCK_DETECT_CT_FAIL_MASK    (0x1U)                                              /*!< XCVR_PLL_DIG_LOCK_DETECT.CT_FAIL Mask   */
#define XCVR_PLL_DIG_LOCK_DETECT_CT_FAIL_SHIFT   (0U)                                                /*!< XCVR_PLL_DIG_LOCK_DETECT.CT_FAIL Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_CT_FAIL(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_PLL_DIG_LOCK_DETECT.CT_FAIL Field  */
#define XCVR_PLL_DIG_LOCK_DETECT_CTFF_MASK       (0x2U)                                              /*!< XCVR_PLL_DIG_LOCK_DETECT.CTFF Mask      */
#define XCVR_PLL_DIG_LOCK_DETECT_CTFF_SHIFT      (1U)                                                /*!< XCVR_PLL_DIG_LOCK_DETECT.CTFF Position  */
#define XCVR_PLL_DIG_LOCK_DETECT_CTFF(x)         (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_PLL_DIG_LOCK_DETECT.CTFF Field     */
#define XCVR_PLL_DIG_LOCK_DETECT_CS_FAIL_MASK    (0x4U)                                              /*!< XCVR_PLL_DIG_LOCK_DETECT.CS_FAIL Mask   */
#define XCVR_PLL_DIG_LOCK_DETECT_CS_FAIL_SHIFT   (2U)                                                /*!< XCVR_PLL_DIG_LOCK_DETECT.CS_FAIL Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_CS_FAIL(x)      (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_PLL_DIG_LOCK_DETECT.CS_FAIL Field  */
#define XCVR_PLL_DIG_LOCK_DETECT_CSFF_MASK       (0x8U)                                              /*!< XCVR_PLL_DIG_LOCK_DETECT.CSFF Mask      */
#define XCVR_PLL_DIG_LOCK_DETECT_CSFF_SHIFT      (3U)                                                /*!< XCVR_PLL_DIG_LOCK_DETECT.CSFF Position  */
#define XCVR_PLL_DIG_LOCK_DETECT_CSFF(x)         (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_PLL_DIG_LOCK_DETECT.CSFF Field     */
#define XCVR_PLL_DIG_LOCK_DETECT_FT_FAIL_MASK    (0x10U)                                             /*!< XCVR_PLL_DIG_LOCK_DETECT.FT_FAIL Mask   */
#define XCVR_PLL_DIG_LOCK_DETECT_FT_FAIL_SHIFT   (4U)                                                /*!< XCVR_PLL_DIG_LOCK_DETECT.FT_FAIL Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_FT_FAIL(x)      (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_PLL_DIG_LOCK_DETECT.FT_FAIL Field  */
#define XCVR_PLL_DIG_LOCK_DETECT_FTFF_MASK       (0x20U)                                             /*!< XCVR_PLL_DIG_LOCK_DETECT.FTFF Mask      */
#define XCVR_PLL_DIG_LOCK_DETECT_FTFF_SHIFT      (5U)                                                /*!< XCVR_PLL_DIG_LOCK_DETECT.FTFF Position  */
#define XCVR_PLL_DIG_LOCK_DETECT_FTFF(x)         (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_PLL_DIG_LOCK_DETECT.FTFF Field     */
#define XCVR_PLL_DIG_LOCK_DETECT_TAFF_MASK       (0x80U)                                             /*!< XCVR_PLL_DIG_LOCK_DETECT.TAFF Mask      */
#define XCVR_PLL_DIG_LOCK_DETECT_TAFF_SHIFT      (7U)                                                /*!< XCVR_PLL_DIG_LOCK_DETECT.TAFF Position  */
#define XCVR_PLL_DIG_LOCK_DETECT_TAFF(x)         (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_PLL_DIG_LOCK_DETECT.TAFF Field     */
#define XCVR_PLL_DIG_LOCK_DETECT_CTUNE_LDF_LEV_MASK (0xF00U)                                         /*!< XCVR_PLL_DIG_LOCK_DETECT.CTUNE_LDF_LEV Mask*/
#define XCVR_PLL_DIG_LOCK_DETECT_CTUNE_LDF_LEV_SHIFT (8U)                                            /*!< XCVR_PLL_DIG_LOCK_DETECT.CTUNE_LDF_LEV Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_CTUNE_LDF_LEV(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)        /*!< XCVR_PLL_DIG_LOCK_DETECT.CTUNE_LDF_LEV Field*/
#define XCVR_PLL_DIG_LOCK_DETECT_FTF_RX_THRSH_MASK (0x3F000U)                                        /*!< XCVR_PLL_DIG_LOCK_DETECT.FTF_RX_THRSH Mask*/
#define XCVR_PLL_DIG_LOCK_DETECT_FTF_RX_THRSH_SHIFT (12U)                                            /*!< XCVR_PLL_DIG_LOCK_DETECT.FTF_RX_THRSH Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_FTF_RX_THRSH(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x3F000UL)      /*!< XCVR_PLL_DIG_LOCK_DETECT.FTF_RX_THRSH Field*/
#define XCVR_PLL_DIG_LOCK_DETECT_FTW_RX_MASK     (0x80000U)                                          /*!< XCVR_PLL_DIG_LOCK_DETECT.FTW_RX Mask    */
#define XCVR_PLL_DIG_LOCK_DETECT_FTW_RX_SHIFT    (19U)                                               /*!< XCVR_PLL_DIG_LOCK_DETECT.FTW_RX Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_FTW_RX(x)       (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< XCVR_PLL_DIG_LOCK_DETECT.FTW_RX Field   */
#define XCVR_PLL_DIG_LOCK_DETECT_FTF_TX_THRSH_MASK (0x3F00000U)                                      /*!< XCVR_PLL_DIG_LOCK_DETECT.FTF_TX_THRSH Mask*/
#define XCVR_PLL_DIG_LOCK_DETECT_FTF_TX_THRSH_SHIFT (20U)                                            /*!< XCVR_PLL_DIG_LOCK_DETECT.FTF_TX_THRSH Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_FTF_TX_THRSH(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x3F00000UL)    /*!< XCVR_PLL_DIG_LOCK_DETECT.FTF_TX_THRSH Field*/
#define XCVR_PLL_DIG_LOCK_DETECT_FTW_TX_MASK     (0x8000000U)                                        /*!< XCVR_PLL_DIG_LOCK_DETECT.FTW_TX Mask    */
#define XCVR_PLL_DIG_LOCK_DETECT_FTW_TX_SHIFT    (27U)                                               /*!< XCVR_PLL_DIG_LOCK_DETECT.FTW_TX Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_FTW_TX(x)       (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< XCVR_PLL_DIG_LOCK_DETECT.FTW_TX Field   */
#define XCVR_PLL_DIG_LOCK_DETECT_FREQ_COUNT_GO_MASK (0x10000000U)                                    /*!< XCVR_PLL_DIG_LOCK_DETECT.FREQ_COUNT_GO Mask*/
#define XCVR_PLL_DIG_LOCK_DETECT_FREQ_COUNT_GO_SHIFT (28U)                                           /*!< XCVR_PLL_DIG_LOCK_DETECT.FREQ_COUNT_GO Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_FREQ_COUNT_GO(x) (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)  /*!< XCVR_PLL_DIG_LOCK_DETECT.FREQ_COUNT_GO Field*/
#define XCVR_PLL_DIG_LOCK_DETECT_FREQ_COUNT_FINISHED_MASK (0x20000000U)                              /*!< XCVR_PLL_DIG_LOCK_DETECT.FREQ_COUNT_FINISHED Mask*/
#define XCVR_PLL_DIG_LOCK_DETECT_FREQ_COUNT_FINISHED_SHIFT (29U)                                     /*!< XCVR_PLL_DIG_LOCK_DETECT.FREQ_COUNT_FINISHED Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_FREQ_COUNT_FINISHED(x) (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL) /*!< XCVR_PLL_DIG_LOCK_DETECT.FREQ_COUNT_FINISHED Field*/
#define XCVR_PLL_DIG_LOCK_DETECT_FREQ_COUNT_TIME_MASK (0xC0000000U)                                  /*!< XCVR_PLL_DIG_LOCK_DETECT.FREQ_COUNT_TIME Mask*/
#define XCVR_PLL_DIG_LOCK_DETECT_FREQ_COUNT_TIME_SHIFT (30U)                                         /*!< XCVR_PLL_DIG_LOCK_DETECT.FREQ_COUNT_TIME Position*/
#define XCVR_PLL_DIG_LOCK_DETECT_FREQ_COUNT_TIME(x) (((uint32_t)(((uint32_t)(x))<<30U))&0xC0000000UL) /*!< XCVR_PLL_DIG_LOCK_DETECT.FREQ_COUNT_TIME Field*/
/* ------- HPM_CTRL Bit Fields                      ------ */
#define XCVR_PLL_DIG_HPM_CTRL_HPM_SDM_IN_MANUAL_MASK (0x3FFU)                                        /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_SDM_IN_MANUAL Mask*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_SDM_IN_MANUAL_SHIFT (0U)                                           /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_SDM_IN_MANUAL Position*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_SDM_IN_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)       /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_SDM_IN_MANUAL Field*/
#define XCVR_PLL_DIG_HPM_CTRL_HPFF_MASK          (0x2000U)                                           /*!< XCVR_PLL_DIG_HPM_CTRL.HPFF Mask         */
#define XCVR_PLL_DIG_HPM_CTRL_HPFF_SHIFT         (13U)                                               /*!< XCVR_PLL_DIG_HPM_CTRL.HPFF Position     */
#define XCVR_PLL_DIG_HPM_CTRL_HPFF(x)            (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< XCVR_PLL_DIG_HPM_CTRL.HPFF Field        */
#define XCVR_PLL_DIG_HPM_CTRL_HPM_SDM_OUT_INVERT_MASK (0x4000U)                                      /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_SDM_OUT_INVERT Mask*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_SDM_OUT_INVERT_SHIFT (14U)                                         /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_SDM_OUT_INVERT Position*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_SDM_OUT_INVERT(x) (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)    /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_SDM_OUT_INVERT Field*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_SDM_IN_DISABLE_MASK (0x8000U)                                      /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_SDM_IN_DISABLE Mask*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_SDM_IN_DISABLE_SHIFT (15U)                                         /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_SDM_IN_DISABLE Position*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_SDM_IN_DISABLE(x) (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)    /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_SDM_IN_DISABLE Field*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_LFSR_SIZE_MASK (0x70000U)                                          /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_LFSR_SIZE Mask*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_LFSR_SIZE_SHIFT (16U)                                              /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_LFSR_SIZE Position*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_LFSR_SIZE(x)   (((uint32_t)(((uint32_t)(x))<<16U))&0x70000UL)      /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_LFSR_SIZE Field*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_DTH_SCL_MASK   (0x100000U)                                         /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_DTH_SCL Mask  */
#define XCVR_PLL_DIG_HPM_CTRL_HPM_DTH_SCL_SHIFT  (20U)                                               /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_DTH_SCL Position*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_DTH_SCL(x)     (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_DTH_SCL Field */
#define XCVR_PLL_DIG_HPM_CTRL_HPM_DTH_EN_MASK    (0x800000U)                                         /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_DTH_EN Mask   */
#define XCVR_PLL_DIG_HPM_CTRL_HPM_DTH_EN_SHIFT   (23U)                                               /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_DTH_EN Position*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_DTH_EN(x)      (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_DTH_EN Field  */
#define XCVR_PLL_DIG_HPM_CTRL_HPM_INTEGER_SCALE_MASK (0x3000000U)                                    /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_INTEGER_SCALE Mask*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_INTEGER_SCALE_SHIFT (24U)                                          /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_INTEGER_SCALE Position*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_INTEGER_SCALE(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x3000000UL)  /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_INTEGER_SCALE Field*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_INTEGER_INVERT_MASK (0x8000000U)                                   /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_INTEGER_INVERT Mask*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_INTEGER_INVERT_SHIFT (27U)                                         /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_INTEGER_INVERT Position*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_INTEGER_INVERT(x) (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL) /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_INTEGER_INVERT Field*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_CAL_INVERT_MASK (0x10000000U)                                      /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_CAL_INVERT Mask*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_CAL_INVERT_SHIFT (28U)                                             /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_CAL_INVERT Position*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_CAL_INVERT(x)  (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_CAL_INVERT Field*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_MOD_IN_INVERT_MASK (0x80000000U)                                   /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_MOD_IN_INVERT Mask*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_MOD_IN_INVERT_SHIFT (31U)                                          /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_MOD_IN_INVERT Position*/
#define XCVR_PLL_DIG_HPM_CTRL_HPM_MOD_IN_INVERT(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL) /*!< XCVR_PLL_DIG_HPM_CTRL.HPM_MOD_IN_INVERT Field*/
/* ------- HPMCAL_CTRL Bit Fields                   ------ */
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_FACTOR_MASK (0x1FFFU)                                       /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_FACTOR Mask*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_FACTOR_SHIFT (0U)                                           /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_FACTOR Position*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_FACTOR(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)      /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_FACTOR Field*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_NOT_BUMPED_MASK (0x2000U)                                   /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_NOT_BUMPED Mask*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_NOT_BUMPED_SHIFT (13U)                                      /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_NOT_BUMPED Position*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_NOT_BUMPED(x) (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL) /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_NOT_BUMPED Field*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_COUNT_SCALE_MASK (0x4000U)                                  /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_COUNT_SCALE Mask*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_COUNT_SCALE_SHIFT (14U)                                     /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_COUNT_SCALE Position*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_COUNT_SCALE(x) (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL) /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_COUNT_SCALE Field*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HP_CAL_DISABLE_MASK (0x8000U)                                       /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HP_CAL_DISABLE Mask*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HP_CAL_DISABLE_SHIFT (15U)                                          /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HP_CAL_DISABLE Position*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HP_CAL_DISABLE(x) (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)     /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HP_CAL_DISABLE Field*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_FACTOR_MANUAL_MASK (0x1FFF0000U)                            /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_FACTOR_MANUAL Mask*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_FACTOR_MANUAL_SHIFT (16U)                                   /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_FACTOR_MANUAL Position*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_FACTOR_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x1FFF0000UL) /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_FACTOR_MANUAL Field*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_ARRAY_SIZE_MASK (0x40000000U)                               /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_ARRAY_SIZE Mask*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_ARRAY_SIZE_SHIFT (30U)                                      /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_ARRAY_SIZE Position*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_ARRAY_SIZE(x) (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL) /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_ARRAY_SIZE Field*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_TIME_MASK (0x80000000U)                                     /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_TIME Mask*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_TIME_SHIFT (31U)                                            /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_TIME Position*/
#define XCVR_PLL_DIG_HPMCAL_CTRL_HPM_CAL_TIME(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< XCVR_PLL_DIG_HPMCAL_CTRL.HPM_CAL_TIME Field*/
/* ------- HPM_CAL1 Bit Fields                      ------ */
#define XCVR_PLL_DIG_HPM_CAL1_HPM_COUNT_1_MASK   (0x7FFFFU)                                          /*!< XCVR_PLL_DIG_HPM_CAL1.HPM_COUNT_1 Mask  */
#define XCVR_PLL_DIG_HPM_CAL1_HPM_COUNT_1_SHIFT  (0U)                                                /*!< XCVR_PLL_DIG_HPM_CAL1.HPM_COUNT_1 Position*/
#define XCVR_PLL_DIG_HPM_CAL1_HPM_COUNT_1(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFFFUL)       /*!< XCVR_PLL_DIG_HPM_CAL1.HPM_COUNT_1 Field */
#define XCVR_PLL_DIG_HPM_CAL1_CS_WT_MASK         (0x700000U)                                         /*!< XCVR_PLL_DIG_HPM_CAL1.CS_WT Mask        */
#define XCVR_PLL_DIG_HPM_CAL1_CS_WT_SHIFT        (20U)                                               /*!< XCVR_PLL_DIG_HPM_CAL1.CS_WT Position    */
#define XCVR_PLL_DIG_HPM_CAL1_CS_WT(x)           (((uint32_t)(((uint32_t)(x))<<20U))&0x700000UL)     /*!< XCVR_PLL_DIG_HPM_CAL1.CS_WT Field       */
#define XCVR_PLL_DIG_HPM_CAL1_CS_FW_MASK         (0x7000000U)                                        /*!< XCVR_PLL_DIG_HPM_CAL1.CS_FW Mask        */
#define XCVR_PLL_DIG_HPM_CAL1_CS_FW_SHIFT        (24U)                                               /*!< XCVR_PLL_DIG_HPM_CAL1.CS_FW Position    */
#define XCVR_PLL_DIG_HPM_CAL1_CS_FW(x)           (((uint32_t)(((uint32_t)(x))<<24U))&0x7000000UL)    /*!< XCVR_PLL_DIG_HPM_CAL1.CS_FW Field       */
#define XCVR_PLL_DIG_HPM_CAL1_CS_FCNT_MASK       (0xF0000000U)                                       /*!< XCVR_PLL_DIG_HPM_CAL1.CS_FCNT Mask      */
#define XCVR_PLL_DIG_HPM_CAL1_CS_FCNT_SHIFT      (28U)                                               /*!< XCVR_PLL_DIG_HPM_CAL1.CS_FCNT Position  */
#define XCVR_PLL_DIG_HPM_CAL1_CS_FCNT(x)         (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL)   /*!< XCVR_PLL_DIG_HPM_CAL1.CS_FCNT Field     */
/* ------- HPM_CAL2 Bit Fields                      ------ */
#define XCVR_PLL_DIG_HPM_CAL2_HPM_COUNT_2_MASK   (0x7FFFFU)                                          /*!< XCVR_PLL_DIG_HPM_CAL2.HPM_COUNT_2 Mask  */
#define XCVR_PLL_DIG_HPM_CAL2_HPM_COUNT_2_SHIFT  (0U)                                                /*!< XCVR_PLL_DIG_HPM_CAL2.HPM_COUNT_2 Position*/
#define XCVR_PLL_DIG_HPM_CAL2_HPM_COUNT_2(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFFFUL)       /*!< XCVR_PLL_DIG_HPM_CAL2.HPM_COUNT_2 Field */
#define XCVR_PLL_DIG_HPM_CAL2_CS_RC_MASK         (0x100000U)                                         /*!< XCVR_PLL_DIG_HPM_CAL2.CS_RC Mask        */
#define XCVR_PLL_DIG_HPM_CAL2_CS_RC_SHIFT        (20U)                                               /*!< XCVR_PLL_DIG_HPM_CAL2.CS_RC Position    */
#define XCVR_PLL_DIG_HPM_CAL2_CS_RC(x)           (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< XCVR_PLL_DIG_HPM_CAL2.CS_RC Field       */
#define XCVR_PLL_DIG_HPM_CAL2_CS_FT_MASK         (0x1F000000U)                                       /*!< XCVR_PLL_DIG_HPM_CAL2.CS_FT Mask        */
#define XCVR_PLL_DIG_HPM_CAL2_CS_FT_SHIFT        (24U)                                               /*!< XCVR_PLL_DIG_HPM_CAL2.CS_FT Position    */
#define XCVR_PLL_DIG_HPM_CAL2_CS_FT(x)           (((uint32_t)(((uint32_t)(x))<<24U))&0x1F000000UL)   /*!< XCVR_PLL_DIG_HPM_CAL2.CS_FT Field       */
/* ------- HPM_SDM_RES Bit Fields                   ------ */
#define XCVR_PLL_DIG_HPM_SDM_RES_HPM_NUM_SELECTED_MASK (0x3FFU)                                      /*!< XCVR_PLL_DIG_HPM_SDM_RES.HPM_NUM_SELECTED Mask*/
#define XCVR_PLL_DIG_HPM_SDM_RES_HPM_NUM_SELECTED_SHIFT (0U)                                         /*!< XCVR_PLL_DIG_HPM_SDM_RES.HPM_NUM_SELECTED Position*/
#define XCVR_PLL_DIG_HPM_SDM_RES_HPM_NUM_SELECTED(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)     /*!< XCVR_PLL_DIG_HPM_SDM_RES.HPM_NUM_SELECTED Field*/
#define XCVR_PLL_DIG_HPM_SDM_RES_HPM_DENOM_MASK  (0x3FF0000U)                                        /*!< XCVR_PLL_DIG_HPM_SDM_RES.HPM_DENOM Mask */
#define XCVR_PLL_DIG_HPM_SDM_RES_HPM_DENOM_SHIFT (16U)                                               /*!< XCVR_PLL_DIG_HPM_SDM_RES.HPM_DENOM Position*/
#define XCVR_PLL_DIG_HPM_SDM_RES_HPM_DENOM(x)    (((uint32_t)(((uint32_t)(x))<<16U))&0x3FF0000UL)    /*!< XCVR_PLL_DIG_HPM_SDM_RES.HPM_DENOM Field*/
#define XCVR_PLL_DIG_HPM_SDM_RES_HPM_COUNT_ADJUST_MASK (0xF0000000U)                                 /*!< XCVR_PLL_DIG_HPM_SDM_RES.HPM_COUNT_ADJUST Mask*/
#define XCVR_PLL_DIG_HPM_SDM_RES_HPM_COUNT_ADJUST_SHIFT (28U)                                        /*!< XCVR_PLL_DIG_HPM_SDM_RES.HPM_COUNT_ADJUST Position*/
#define XCVR_PLL_DIG_HPM_SDM_RES_HPM_COUNT_ADJUST(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL) /*!< XCVR_PLL_DIG_HPM_SDM_RES.HPM_COUNT_ADJUST Field*/
/* ------- LPM_CTRL Bit Fields                      ------ */
#define XCVR_PLL_DIG_LPM_CTRL_PLL_LD_MANUAL_MASK (0x3FU)                                             /*!< XCVR_PLL_DIG_LPM_CTRL.PLL_LD_MANUAL Mask*/
#define XCVR_PLL_DIG_LPM_CTRL_PLL_LD_MANUAL_SHIFT (0U)                                               /*!< XCVR_PLL_DIG_LPM_CTRL.PLL_LD_MANUAL Position*/
#define XCVR_PLL_DIG_LPM_CTRL_PLL_LD_MANUAL(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< XCVR_PLL_DIG_LPM_CTRL.PLL_LD_MANUAL Field*/
#define XCVR_PLL_DIG_LPM_CTRL_PLL_LD_DISABLE_MASK (0x800U)                                           /*!< XCVR_PLL_DIG_LPM_CTRL.PLL_LD_DISABLE Mask*/
#define XCVR_PLL_DIG_LPM_CTRL_PLL_LD_DISABLE_SHIFT (11U)                                             /*!< XCVR_PLL_DIG_LPM_CTRL.PLL_LD_DISABLE Position*/
#define XCVR_PLL_DIG_LPM_CTRL_PLL_LD_DISABLE(x)  (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< XCVR_PLL_DIG_LPM_CTRL.PLL_LD_DISABLE Field*/
#define XCVR_PLL_DIG_LPM_CTRL_LPFF_MASK          (0x2000U)                                           /*!< XCVR_PLL_DIG_LPM_CTRL.LPFF Mask         */
#define XCVR_PLL_DIG_LPM_CTRL_LPFF_SHIFT         (13U)                                               /*!< XCVR_PLL_DIG_LPM_CTRL.LPFF Position     */
#define XCVR_PLL_DIG_LPM_CTRL_LPFF(x)            (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< XCVR_PLL_DIG_LPM_CTRL.LPFF Field        */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_SDM_INV_MASK   (0x4000U)                                           /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_SDM_INV Mask  */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_SDM_INV_SHIFT  (14U)                                               /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_SDM_INV Position*/
#define XCVR_PLL_DIG_LPM_CTRL_LPM_SDM_INV(x)     (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_SDM_INV Field */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_DISABLE_MASK   (0x8000U)                                           /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_DISABLE Mask  */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_DISABLE_SHIFT  (15U)                                               /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_DISABLE Position*/
#define XCVR_PLL_DIG_LPM_CTRL_LPM_DISABLE(x)     (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_DISABLE Field */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_DTH_SCL_MASK   (0xF0000U)                                          /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_DTH_SCL Mask  */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_DTH_SCL_SHIFT  (16U)                                               /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_DTH_SCL Position*/
#define XCVR_PLL_DIG_LPM_CTRL_LPM_DTH_SCL(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_DTH_SCL Field */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_D_CTRL_MASK    (0x400000U)                                         /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_D_CTRL Mask   */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_D_CTRL_SHIFT   (22U)                                               /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_D_CTRL Position*/
#define XCVR_PLL_DIG_LPM_CTRL_LPM_D_CTRL(x)      (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_D_CTRL Field  */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_D_OVRD_MASK    (0x800000U)                                         /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_D_OVRD Mask   */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_D_OVRD_SHIFT   (23U)                                               /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_D_OVRD Position*/
#define XCVR_PLL_DIG_LPM_CTRL_LPM_D_OVRD(x)      (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_D_OVRD Field  */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_SCALE_MASK     (0xF000000U)                                        /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_SCALE Mask    */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_SCALE_SHIFT    (24U)                                               /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_SCALE Position*/
#define XCVR_PLL_DIG_LPM_CTRL_LPM_SCALE(x)       (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL)    /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_SCALE Field   */
#define XCVR_PLL_DIG_LPM_CTRL_LPM_SDM_USE_NEG_MASK (0x80000000U)                                     /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_SDM_USE_NEG Mask*/
#define XCVR_PLL_DIG_LPM_CTRL_LPM_SDM_USE_NEG_SHIFT (31U)                                            /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_SDM_USE_NEG Position*/
#define XCVR_PLL_DIG_LPM_CTRL_LPM_SDM_USE_NEG(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< XCVR_PLL_DIG_LPM_CTRL.LPM_SDM_USE_NEG Field*/
/* ------- LPM_SDM_CTRL1 Bit Fields                 ------ */
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_LPM_INTG_SELECTED_MASK (0x7FU)                                    /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.LPM_INTG_SELECTED Mask*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_LPM_INTG_SELECTED_SHIFT (0U)                                      /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.LPM_INTG_SELECTED Position*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_LPM_INTG_SELECTED(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)   /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.LPM_INTG_SELECTED Field*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_HPM_ARRAY_BIAS_MASK (0x7F00U)                                     /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.HPM_ARRAY_BIAS Mask*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_HPM_ARRAY_BIAS_SHIFT (8U)                                         /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.HPM_ARRAY_BIAS Position*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_HPM_ARRAY_BIAS(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x7F00UL)    /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.HPM_ARRAY_BIAS Field*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_LPM_INTG_MASK (0x7F0000U)                                         /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.LPM_INTG Mask*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_LPM_INTG_SHIFT (16U)                                              /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.LPM_INTG Position*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_LPM_INTG(x)   (((uint32_t)(((uint32_t)(x))<<16U))&0x7F0000UL)     /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.LPM_INTG Field*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_SDM_MAP_DISABLE_MASK (0x80000000U)                                /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.SDM_MAP_DISABLE Mask*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_SDM_MAP_DISABLE_SHIFT (31U)                                       /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.SDM_MAP_DISABLE Position*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL1_SDM_MAP_DISABLE(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL) /*!< XCVR_PLL_DIG_LPM_SDM_CTRL1.SDM_MAP_DISABLE Field*/
/* ------- LPM_SDM_CTRL2 Bit Fields                 ------ */
#define XCVR_PLL_DIG_LPM_SDM_CTRL2_LPM_NUM_MASK  (0xFFFFFFFU)                                        /*!< XCVR_PLL_DIG_LPM_SDM_CTRL2.LPM_NUM Mask */
#define XCVR_PLL_DIG_LPM_SDM_CTRL2_LPM_NUM_SHIFT (0U)                                                /*!< XCVR_PLL_DIG_LPM_SDM_CTRL2.LPM_NUM Position*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL2_LPM_NUM(x)    (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFUL)     /*!< XCVR_PLL_DIG_LPM_SDM_CTRL2.LPM_NUM Field*/
/* ------- LPM_SDM_CTRL3 Bit Fields                 ------ */
#define XCVR_PLL_DIG_LPM_SDM_CTRL3_LPM_DENOM_MASK (0xFFFFFFFU)                                       /*!< XCVR_PLL_DIG_LPM_SDM_CTRL3.LPM_DENOM Mask*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL3_LPM_DENOM_SHIFT (0U)                                              /*!< XCVR_PLL_DIG_LPM_SDM_CTRL3.LPM_DENOM Position*/
#define XCVR_PLL_DIG_LPM_SDM_CTRL3_LPM_DENOM(x)  (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFUL)     /*!< XCVR_PLL_DIG_LPM_SDM_CTRL3.LPM_DENOM Field*/
/* ------- LPM_SDM_RES1 Bit Fields                  ------ */
#define XCVR_PLL_DIG_LPM_SDM_RES1_LPM_NUM_SELECTED_MASK (0xFFFFFFFU)                                 /*!< XCVR_PLL_DIG_LPM_SDM_RES1.LPM_NUM_SELECTED Mask*/
#define XCVR_PLL_DIG_LPM_SDM_RES1_LPM_NUM_SELECTED_SHIFT (0U)                                        /*!< XCVR_PLL_DIG_LPM_SDM_RES1.LPM_NUM_SELECTED Position*/
#define XCVR_PLL_DIG_LPM_SDM_RES1_LPM_NUM_SELECTED(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFUL) /*!< XCVR_PLL_DIG_LPM_SDM_RES1.LPM_NUM_SELECTED Field*/
/* ------- LPM_SDM_RES2 Bit Fields                  ------ */
#define XCVR_PLL_DIG_LPM_SDM_RES2_LPM_DENOM_SELECTED_MASK (0xFFFFFFFU)                               /*!< XCVR_PLL_DIG_LPM_SDM_RES2.LPM_DENOM_SELECTED Mask*/
#define XCVR_PLL_DIG_LPM_SDM_RES2_LPM_DENOM_SELECTED_SHIFT (0U)                                      /*!< XCVR_PLL_DIG_LPM_SDM_RES2.LPM_DENOM_SELECTED Position*/
#define XCVR_PLL_DIG_LPM_SDM_RES2_LPM_DENOM_SELECTED(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFUL) /*!< XCVR_PLL_DIG_LPM_SDM_RES2.LPM_DENOM_SELECTED Field*/
/* ------- DELAY_MATCH Bit Fields                   ------ */
#define XCVR_PLL_DIG_DELAY_MATCH_LPM_SDM_DELAY_MASK (0xFU)                                           /*!< XCVR_PLL_DIG_DELAY_MATCH.LPM_SDM_DELAY Mask*/
#define XCVR_PLL_DIG_DELAY_MATCH_LPM_SDM_DELAY_SHIFT (0U)                                            /*!< XCVR_PLL_DIG_DELAY_MATCH.LPM_SDM_DELAY Position*/
#define XCVR_PLL_DIG_DELAY_MATCH_LPM_SDM_DELAY(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)          /*!< XCVR_PLL_DIG_DELAY_MATCH.LPM_SDM_DELAY Field*/
#define XCVR_PLL_DIG_DELAY_MATCH_HPM_SDM_DELAY_MASK (0xF00U)                                         /*!< XCVR_PLL_DIG_DELAY_MATCH.HPM_SDM_DELAY Mask*/
#define XCVR_PLL_DIG_DELAY_MATCH_HPM_SDM_DELAY_SHIFT (8U)                                            /*!< XCVR_PLL_DIG_DELAY_MATCH.HPM_SDM_DELAY Position*/
#define XCVR_PLL_DIG_DELAY_MATCH_HPM_SDM_DELAY(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)        /*!< XCVR_PLL_DIG_DELAY_MATCH.HPM_SDM_DELAY Field*/
#define XCVR_PLL_DIG_DELAY_MATCH_HPM_INTEGER_DELAY_MASK (0xF0000U)                                   /*!< XCVR_PLL_DIG_DELAY_MATCH.HPM_INTEGER_DELAY Mask*/
#define XCVR_PLL_DIG_DELAY_MATCH_HPM_INTEGER_DELAY_SHIFT (16U)                                       /*!< XCVR_PLL_DIG_DELAY_MATCH.HPM_INTEGER_DELAY Position*/
#define XCVR_PLL_DIG_DELAY_MATCH_HPM_INTEGER_DELAY(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_PLL_DIG_DELAY_MATCH.HPM_INTEGER_DELAY Field*/
/* ------- CTUNE_CTRL Bit Fields                    ------ */
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_TARGET_MANUAL_MASK (0xFFFU)                                    /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_TARGET_MANUAL Mask*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_TARGET_MANUAL_SHIFT (0U)                                       /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_TARGET_MANUAL Position*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_TARGET_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFUL)   /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_TARGET_MANUAL Field*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_TARGET_DISABLE_MASK (0x8000U)                                  /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_TARGET_DISABLE Mask*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_TARGET_DISABLE_SHIFT (15U)                                     /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_TARGET_DISABLE Position*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_TARGET_DISABLE(x) (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL) /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_TARGET_DISABLE Field*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_ADJUST_MASK (0xF0000U)                                         /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_ADJUST Mask*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_ADJUST_SHIFT (16U)                                             /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_ADJUST Position*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_ADJUST(x)  (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_ADJUST Field*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_MANUAL_MASK (0x7F000000U)                                      /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_MANUAL Mask*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_MANUAL_SHIFT (24U)                                             /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_MANUAL Position*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_MANUAL(x)  (((uint32_t)(((uint32_t)(x))<<24U))&0x7F000000UL)   /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_MANUAL Field*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_DISABLE_MASK (0x80000000U)                                     /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_DISABLE Mask*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_DISABLE_SHIFT (31U)                                            /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_DISABLE Position*/
#define XCVR_PLL_DIG_CTUNE_CTRL_CTUNE_DISABLE(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< XCVR_PLL_DIG_CTUNE_CTRL.CTUNE_DISABLE Field*/
/* ------- CTUNE_CNT6 Bit Fields                    ------ */
#define XCVR_PLL_DIG_CTUNE_CNT6_CTUNE_COUNT_6_MASK (0x1FFFU)                                         /*!< XCVR_PLL_DIG_CTUNE_CNT6.CTUNE_COUNT_6 Mask*/
#define XCVR_PLL_DIG_CTUNE_CNT6_CTUNE_COUNT_6_SHIFT (0U)                                             /*!< XCVR_PLL_DIG_CTUNE_CNT6.CTUNE_COUNT_6 Position*/
#define XCVR_PLL_DIG_CTUNE_CNT6_CTUNE_COUNT_6(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)        /*!< XCVR_PLL_DIG_CTUNE_CNT6.CTUNE_COUNT_6 Field*/
/* ------- CTUNE_CNT5_4 Bit Fields                  ------ */
#define XCVR_PLL_DIG_CTUNE_CNT5_4_CTUNE_COUNT_4_MASK (0x1FFFU)                                       /*!< XCVR_PLL_DIG_CTUNE_CNT5_4.CTUNE_COUNT_4 Mask*/
#define XCVR_PLL_DIG_CTUNE_CNT5_4_CTUNE_COUNT_4_SHIFT (0U)                                           /*!< XCVR_PLL_DIG_CTUNE_CNT5_4.CTUNE_COUNT_4 Position*/
#define XCVR_PLL_DIG_CTUNE_CNT5_4_CTUNE_COUNT_4(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)      /*!< XCVR_PLL_DIG_CTUNE_CNT5_4.CTUNE_COUNT_4 Field*/
#define XCVR_PLL_DIG_CTUNE_CNT5_4_CTUNE_COUNT_5_MASK (0x1FFF0000U)                                   /*!< XCVR_PLL_DIG_CTUNE_CNT5_4.CTUNE_COUNT_5 Mask*/
#define XCVR_PLL_DIG_CTUNE_CNT5_4_CTUNE_COUNT_5_SHIFT (16U)                                          /*!< XCVR_PLL_DIG_CTUNE_CNT5_4.CTUNE_COUNT_5 Position*/
#define XCVR_PLL_DIG_CTUNE_CNT5_4_CTUNE_COUNT_5(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x1FFF0000UL) /*!< XCVR_PLL_DIG_CTUNE_CNT5_4.CTUNE_COUNT_5 Field*/
/* ------- CTUNE_CNT3_2 Bit Fields                  ------ */
#define XCVR_PLL_DIG_CTUNE_CNT3_2_CTUNE_COUNT_2_MASK (0x1FFFU)                                       /*!< XCVR_PLL_DIG_CTUNE_CNT3_2.CTUNE_COUNT_2 Mask*/
#define XCVR_PLL_DIG_CTUNE_CNT3_2_CTUNE_COUNT_2_SHIFT (0U)                                           /*!< XCVR_PLL_DIG_CTUNE_CNT3_2.CTUNE_COUNT_2 Position*/
#define XCVR_PLL_DIG_CTUNE_CNT3_2_CTUNE_COUNT_2(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)      /*!< XCVR_PLL_DIG_CTUNE_CNT3_2.CTUNE_COUNT_2 Field*/
#define XCVR_PLL_DIG_CTUNE_CNT3_2_CTUNE_COUNT_3_MASK (0x1FFF0000U)                                   /*!< XCVR_PLL_DIG_CTUNE_CNT3_2.CTUNE_COUNT_3 Mask*/
#define XCVR_PLL_DIG_CTUNE_CNT3_2_CTUNE_COUNT_3_SHIFT (16U)                                          /*!< XCVR_PLL_DIG_CTUNE_CNT3_2.CTUNE_COUNT_3 Position*/
#define XCVR_PLL_DIG_CTUNE_CNT3_2_CTUNE_COUNT_3(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x1FFF0000UL) /*!< XCVR_PLL_DIG_CTUNE_CNT3_2.CTUNE_COUNT_3 Field*/
/* ------- CTUNE_CNT1_0 Bit Fields                  ------ */
#define XCVR_PLL_DIG_CTUNE_CNT1_0_CTUNE_COUNT_0_MASK (0x1FFFU)                                       /*!< XCVR_PLL_DIG_CTUNE_CNT1_0.CTUNE_COUNT_0 Mask*/
#define XCVR_PLL_DIG_CTUNE_CNT1_0_CTUNE_COUNT_0_SHIFT (0U)                                           /*!< XCVR_PLL_DIG_CTUNE_CNT1_0.CTUNE_COUNT_0 Position*/
#define XCVR_PLL_DIG_CTUNE_CNT1_0_CTUNE_COUNT_0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)      /*!< XCVR_PLL_DIG_CTUNE_CNT1_0.CTUNE_COUNT_0 Field*/
#define XCVR_PLL_DIG_CTUNE_CNT1_0_CTUNE_COUNT_1_MASK (0x1FFF0000U)                                   /*!< XCVR_PLL_DIG_CTUNE_CNT1_0.CTUNE_COUNT_1 Mask*/
#define XCVR_PLL_DIG_CTUNE_CNT1_0_CTUNE_COUNT_1_SHIFT (16U)                                          /*!< XCVR_PLL_DIG_CTUNE_CNT1_0.CTUNE_COUNT_1 Position*/
#define XCVR_PLL_DIG_CTUNE_CNT1_0_CTUNE_COUNT_1(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x1FFF0000UL) /*!< XCVR_PLL_DIG_CTUNE_CNT1_0.CTUNE_COUNT_1 Field*/
/* ------- CTUNE_RES Bit Fields                     ------ */
#define XCVR_PLL_DIG_CTUNE_RES_CTUNE_SELECTED_MASK (0x7FU)                                           /*!< XCVR_PLL_DIG_CTUNE_RES.CTUNE_SELECTED Mask*/
#define XCVR_PLL_DIG_CTUNE_RES_CTUNE_SELECTED_SHIFT (0U)                                             /*!< XCVR_PLL_DIG_CTUNE_RES.CTUNE_SELECTED Position*/
#define XCVR_PLL_DIG_CTUNE_RES_CTUNE_SELECTED(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< XCVR_PLL_DIG_CTUNE_RES.CTUNE_SELECTED Field*/
#define XCVR_PLL_DIG_CTUNE_RES_CTUNE_BEST_DIFF_MASK (0xFF00U)                                        /*!< XCVR_PLL_DIG_CTUNE_RES.CTUNE_BEST_DIFF Mask*/
#define XCVR_PLL_DIG_CTUNE_RES_CTUNE_BEST_DIFF_SHIFT (8U)                                            /*!< XCVR_PLL_DIG_CTUNE_RES.CTUNE_BEST_DIFF Position*/
#define XCVR_PLL_DIG_CTUNE_RES_CTUNE_BEST_DIFF(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)       /*!< XCVR_PLL_DIG_CTUNE_RES.CTUNE_BEST_DIFF Field*/
#define XCVR_PLL_DIG_CTUNE_RES_CTUNE_FREQ_SELECTED_MASK (0xFFF0000U)                                 /*!< XCVR_PLL_DIG_CTUNE_RES.CTUNE_FREQ_SELECTED Mask*/
#define XCVR_PLL_DIG_CTUNE_RES_CTUNE_FREQ_SELECTED_SHIFT (16U)                                       /*!< XCVR_PLL_DIG_CTUNE_RES.CTUNE_FREQ_SELECTED Position*/
#define XCVR_PLL_DIG_CTUNE_RES_CTUNE_FREQ_SELECTED(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFFF0000UL) /*!< XCVR_PLL_DIG_CTUNE_RES.CTUNE_FREQ_SELECTED Field*/
/**
 * @} */ /* End group XCVR_PLL_DIG_Register_Masks_GROUP 
 */

/* XCVR_PLL_DIG - Peripheral instance base addresses */
#define XCVR_PLL_DIG_BasePtr           0x4005C224UL //!< Peripheral base address
#define XCVR_PLL_DIG                   ((XCVR_PLL_DIG_Type *) XCVR_PLL_DIG_BasePtr) //!< Freescale base pointer
#define XCVR_PLL_DIG_BASE_PTR          (XCVR_PLL_DIG) //!< Freescale style base pointer
/**
 * @} */ /* End group XCVR_PLL_DIG_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XCVR_RX_DIG_Peripheral_access_layer_GROUP XCVR_RX_DIG Peripheral Access Layer
* @brief C Struct for XCVR_RX_DIG
* @{
*/

/* ================================================================================ */
/* ================           XCVR_RX_DIG (file:XCVR_RX_DIG_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief XCVR_RX_DIG
 */
/**
* @addtogroup XCVR_RX_DIG_structs_GROUP XCVR_RX_DIG struct
* @brief Struct for XCVR_RX_DIG
* @{
*/
typedef struct XCVR_RX_DIG_Type {
   __IO uint32_t  RX_DIG_CTRL;                  /**< 0000: RX Digital Control                                           */
   __IO uint32_t  AGC_CTRL_0;                   /**< 0004: AGC Control 0                                                */
   __IO uint32_t  AGC_CTRL_1;                   /**< 0008: AGC Control 1                                                */
   __IO uint32_t  AGC_CTRL_2;                   /**< 000C: AGC Control 2                                                */
   __IO uint32_t  AGC_CTRL_3;                   /**< 0010: AGC Control 3                                                */
   __I  uint32_t  AGC_STAT;                     /**< 0014: AGC Status                                                   */
   __IO uint32_t  RSSI_CTRL_0;                  /**< 0018: RSSI Control 0                                               */
   __I  uint32_t  RSSI_CTRL_1;                  /**< 001C: RSSI Control 1                                               */
   __I  uint32_t  RSSI_DFT;                     /**< 0020: RSSI DFT                                                     */
   __IO uint32_t  DCOC_CTRL_0;                  /**< 0024: DCOC Control 0                                               */
   __IO uint32_t  DCOC_CTRL_1;                  /**< 0028: DCOC Control 1                                               */
   __IO uint32_t  DCOC_DAC_INIT;                /**< 002C: DCOC DAC Initialization                                      */
   __IO uint32_t  DCOC_DIG_MAN;                 /**< 0030: DCOC Digital Correction Manual Override                      */
   __IO uint32_t  DCOC_CAL_GAIN;                /**< 0034: DCOC Calibration Gain                                        */
   __I  uint32_t  DCOC_STAT;                    /**< 0038: DCOC Status                                                  */
   __I  uint32_t  DCOC_DC_EST;                  /**< 003C: DCOC DC Estimate                                             */
   __IO uint32_t  DCOC_CAL_RCP;                 /**< 0040: DCOC Calibration Reciprocals                                 */
        uint8_t   RESERVED_0[4];                /**< 0044: 0x4 bytes                                                    */
   __IO uint32_t  IQMC_CTRL;                    /**< 0048: IQMC Control                                                 */
   __IO uint32_t  IQMC_CAL;                     /**< 004C: IQMC Calibration                                             */
   __IO uint32_t  LNA_GAIN_VAL_3_0;             /**< 0050: LNA_GAIN Step Values 3..0                                    */
   __IO uint32_t  LNA_GAIN_VAL_7_4;             /**< 0054: LNA_GAIN Step Values 7..4                                    */
   __IO uint32_t  LNA_GAIN_VAL_8;               /**< 0058: LNA_GAIN Step Values 8                                       */
   __IO uint32_t  BBA_RES_TUNE_VAL_7_0;         /**< 005C: BBA Resistor Tune Values 7..0                                */
   __IO uint32_t  BBA_RES_TUNE_VAL_10_8;        /**< 0060: BBA Resistor Tune Values 10..8                               */
   __IO uint32_t  LNA_GAIN_LIN_VAL_2_0;         /**< 0064: LNA Linear Gain Values 2..0                                  */
   __IO uint32_t  LNA_GAIN_LIN_VAL_5_3;         /**< 0068: LNA Linear Gain Values 5..3                                  */
   __IO uint32_t  LNA_GAIN_LIN_VAL_8_6;         /**< 006C: LNA Linear Gain Values 8..6                                  */
   __IO uint32_t  LNA_GAIN_LIN_VAL_9;           /**< 0070: LNA Linear Gain Values 9                                     */
   __IO uint32_t  BBA_RES_TUNE_LIN_VAL_3_0;     /**< 0074: BBA Resistor Tune Values 3..0                                */
   __IO uint32_t  BBA_RES_TUNE_LIN_VAL_7_4;     /**< 0078: BBA Resistor Tune Values 7..4                                */
   __IO uint32_t  BBA_RES_TUNE_LIN_VAL_10_8;    /**< 007C: BBA Resistor Tune Values 10..8                               */
   __IO uint32_t  AGC_GAIN_TBL_03_00;           /**< 0080: AGC Gain Tables Step 03..00                                  */
   __IO uint32_t  AGC_GAIN_TBL_07_04;           /**< 0084: AGC Gain Tables Step 07..04                                  */
   __IO uint32_t  AGC_GAIN_TBL_11_08;           /**< 0088: AGC Gain Tables Step 11..08                                  */
   __IO uint32_t  AGC_GAIN_TBL_15_12;           /**< 008C: AGC Gain Tables Step 15..12                                  */
   __IO uint32_t  AGC_GAIN_TBL_19_16;           /**< 0090: AGC Gain Tables Step 19..16                                  */
   __IO uint32_t  AGC_GAIN_TBL_23_20;           /**< 0094: AGC Gain Tables Step 23..20                                  */
   __IO uint32_t  AGC_GAIN_TBL_26_24;           /**< 0098: AGC Gain Tables Step 26..24                                  */
        uint8_t   RESERVED_1[4];                /**< 009C: 0x4 bytes                                                    */
   __IO uint32_t  DCOC_OFFSET[27];              /**< 00A0: DCOC Offset                                                  */
   __IO uint32_t  DCOC_BBA_STEP;                /**< 010C: DCOC BBA DAC Step                                            */
   __IO uint32_t  DCOC_TZA_STEP[11];            /**< 0110: DCOC TZA DAC Step                                            */
        uint8_t   RESERVED_2[44];               /**< 013C: 0x2C bytes                                                   */
   __I  uint32_t  DCOC_CAL_ALPHA;               /**< 0168: DCOC Calibration Alpha                                       */
   __I  uint32_t  DCOC_CAL_BETA_Q;              /**< 016C: DCOC Calibration Beta Q                                      */
   __I  uint32_t  DCOC_CAL_BETA_I;              /**< 0170: DCOC Calibration Beta I                                      */
   __I  uint32_t  DCOC_CAL_GAMMA;               /**< 0174: DCOC Calibration Gamma                                       */
   __IO uint32_t  DCOC_CAL_IIR;                 /**< 0178: DCOC Calibration IIR                                         */
        uint8_t   RESERVED_3[4];                /**< 017C: 0x4 bytes                                                    */
   __I  uint32_t  DCOC_CAL1;                    /**< 0180: DCOC Calibration Result                                      */
   __I  uint32_t  DCOC_CAL2;                    /**< 0184: DCOC Calibration Result                                      */
   __I  uint32_t  DCOC_CAL3;                    /**< 0188: DCOC Calibration Result                                      */
        uint8_t   RESERVED_4[4];                /**< 018C: 0x4 bytes                                                    */
   __IO uint32_t  CCA_ED_LQI_CTRL_0;            /**< 0190: RX_DIG CCA ED LQI Control Register 0                         */
   __IO uint32_t  CCA_ED_LQI_CTRL_1;            /**< 0194: RX_DIG CCA ED LQI Control Register 1                         */
   __I  uint32_t  CCA_ED_LQI_STAT_0;            /**< 0198: RX_DIG CCA ED LQI Status Register 0                          */
        uint8_t   RESERVED_5[4];                /**< 019C: 0x4 bytes                                                    */
   __IO uint32_t  RX_CHF_COEF[11];              /**< 01A0: Receive Channel Filter Coefficient                           */
        uint8_t   RESERVED_6[4];                /**< 01CC: 0x4 bytes                                                    */
   __IO uint32_t  AGC_MAN_AGC_IDX;              /**< 01D0: AGC Manual AGC Index                                         */
   __IO uint32_t  DC_RESID_CTRL;                /**< 01D4: DC Residual Control                                          */
   __I  uint32_t  DC_RESID_EST;                 /**< 01D8: DC Residual Estimate                                         */
   __IO uint32_t  RX_RCCAL_CTRL0;               /**< 01DC: RX RC Calibration Control0                                   */
   __IO uint32_t  RX_RCCAL_CTRL1;               /**< 01E0: RX RC Calibration Control1                                   */
   __I  uint32_t  RX_RCCAL_STAT;                /**< 01E4: RX RC Calibration Status                                     */
   __IO uint32_t  AUXPLL_FCAL_CTRL;             /**< 01E8: Aux PLL Frequency Calibration Control                        */
   __I  uint32_t  AUXPLL_FCAL_CNT6;             /**< 01EC: Aux PLL Frequency Calibration Count 6                        */
   __I  uint32_t  AUXPLL_FCAL_CNT5_4;           /**< 01F0: Aux PLL Frequency Calibration Count 5 and 4                  */
   __I  uint32_t  AUXPLL_FCAL_CNT3_2;           /**< 01F4: Aux PLL Frequency Calibration Count 3 and 2                  */
   __I  uint32_t  AUXPLL_FCAL_CNT1_0;           /**< 01F8: Aux PLL Frequency Calibration Count 1 and 0                  */
   __IO uint32_t  RXDIG_DFT;                    /**< 01FC: RXDIG DFT                                                    */
} XCVR_RX_DIG_Type;

/**
 * @} */ /* End group XCVR_RX_DIG_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XCVR_RX_DIG' Position & Mask macros                 ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XCVR_RX_DIG_Register_Masks_GROUP XCVR_RX_DIG Register Masks
* @brief Register Masks for XCVR_RX_DIG
* @{
*/
/* ------- RX_DIG_CTRL Bit Fields                   ------ */
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_ADC_NEGEDGE_MASK (0x1U)                                           /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_ADC_NEGEDGE Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_ADC_NEGEDGE_SHIFT (0U)                                            /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_ADC_NEGEDGE Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_ADC_NEGEDGE(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)          /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_ADC_NEGEDGE Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_CH_FILT_BYPASS_MASK (0x2U)                                        /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_CH_FILT_BYPASS Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_CH_FILT_BYPASS_SHIFT (1U)                                         /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_CH_FILT_BYPASS Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_CH_FILT_BYPASS(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)       /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_CH_FILT_BYPASS Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_ADC_RAW_EN_MASK (0x4U)                                            /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_ADC_RAW_EN Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_ADC_RAW_EN_SHIFT (2U)                                             /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_ADC_RAW_EN Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_ADC_RAW_EN(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_ADC_RAW_EN Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_ADC_POL_MASK  (0x8U)                                              /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_ADC_POL Mask */
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_ADC_POL_SHIFT (3U)                                                /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_ADC_POL Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_ADC_POL(x)    (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_ADC_POL Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_OSR_MASK (0x70U)                                         /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_OSR Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_OSR_SHIFT (4U)                                           /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_OSR Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_OSR(x) (((uint32_t)(((uint32_t)(x))<<4U))&0x70UL)        /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_OSR Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_FSK_ZB_SEL_MASK (0x100U)                                          /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_FSK_ZB_SEL Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_FSK_ZB_SEL_SHIFT (8U)                                             /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_FSK_ZB_SEL Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_FSK_ZB_SEL(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_FSK_ZB_SEL Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_NORM_EN_MASK  (0x200U)                                            /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_NORM_EN Mask */
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_NORM_EN_SHIFT (9U)                                                /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_NORM_EN Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_NORM_EN(x)    (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_NORM_EN Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_RSSI_EN_MASK  (0x400U)                                            /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_RSSI_EN Mask */
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_RSSI_EN_SHIFT (10U)                                               /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_RSSI_EN Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_RSSI_EN(x)    (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_RSSI_EN Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_AGC_EN_MASK   (0x800U)                                            /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_AGC_EN Mask  */
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_AGC_EN_SHIFT  (11U)                                               /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_AGC_EN Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_AGC_EN(x)     (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_AGC_EN Field */
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DCOC_EN_MASK  (0x1000U)                                           /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DCOC_EN Mask */
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DCOC_EN_SHIFT (12U)                                               /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DCOC_EN Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DCOC_EN(x)    (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DCOC_EN Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DCOC_CAL_EN_MASK (0x2000U)                                        /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DCOC_CAL_EN Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DCOC_CAL_EN_SHIFT (13U)                                           /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DCOC_CAL_EN Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DCOC_CAL_EN(x) (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)      /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DCOC_CAL_EN Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_IQ_SWAP_MASK  (0x4000U)                                           /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_IQ_SWAP Mask */
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_IQ_SWAP_SHIFT (14U)                                               /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_IQ_SWAP Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_IQ_SWAP(x)    (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_IQ_SWAP Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DC_RESID_EN_MASK (0x8000U)                                        /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DC_RESID_EN Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DC_RESID_EN_SHIFT (15U)                                           /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DC_RESID_EN Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DC_RESID_EN(x) (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)      /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DC_RESID_EN Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_SRC_EN_MASK   (0x10000U)                                          /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_SRC_EN Mask  */
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_SRC_EN_SHIFT  (16U)                                               /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_SRC_EN Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_SRC_EN(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_SRC_EN Field */
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_SRC_RATE_MASK (0x20000U)                                          /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_SRC_RATE Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_SRC_RATE_SHIFT (17U)                                              /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_SRC_RATE Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_SRC_RATE(x)   (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_SRC_RATE Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DMA_DTEST_EN_MASK (0x40000U)                                      /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DMA_DTEST_EN Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DMA_DTEST_EN_SHIFT (18U)                                          /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DMA_DTEST_EN Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DMA_DTEST_EN(x) (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)    /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DMA_DTEST_EN Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_GAIN_MASK (0x1F00000U)                                   /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_GAIN Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_GAIN_SHIFT (20U)                                         /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_GAIN Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_GAIN(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x1F00000UL) /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_GAIN Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_HZD_CORR_DIS_MASK (0x2000000U)                           /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_HZD_CORR_DIS Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_HZD_CORR_DIS_SHIFT (25U)                                 /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_HZD_CORR_DIS Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_HZD_CORR_DIS(x) (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL) /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_HZD_CORR_DIS Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_HAZARD_MASK (0x10000000U)                                /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_HAZARD Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_HAZARD_SHIFT (28U)                                       /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_HAZARD Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_HAZARD(x) (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL) /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_HAZARD Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_RSSI_FILT_HAZARD_MASK (0x20000000U)                               /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_RSSI_FILT_HAZARD Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_RSSI_FILT_HAZARD_SHIFT (29U)                                      /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_RSSI_FILT_HAZARD Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_RSSI_FILT_HAZARD(x) (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL) /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_RSSI_FILT_HAZARD Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_SAT_I_MASK (0x40000000U)                                 /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_SAT_I Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_SAT_I_SHIFT (30U)                                        /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_SAT_I Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_SAT_I(x) (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL) /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_SAT_I Field*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_SAT_Q_MASK (0x80000000U)                                 /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_SAT_Q Mask*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_SAT_Q_SHIFT (31U)                                        /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_SAT_Q Position*/
#define XCVR_RX_DIG_RX_DIG_CTRL_RX_DEC_FILT_SAT_Q(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL) /*!< XCVR_RX_DIG_RX_DIG_CTRL.RX_DEC_FILT_SAT_Q Field*/
/* ------- AGC_CTRL_0 Bit Fields                    ------ */
#define XCVR_RX_DIG_AGC_CTRL_0_SLOW_AGC_EN_MASK  (0x1U)                                              /*!< XCVR_RX_DIG_AGC_CTRL_0.SLOW_AGC_EN Mask */
#define XCVR_RX_DIG_AGC_CTRL_0_SLOW_AGC_EN_SHIFT (0U)                                                /*!< XCVR_RX_DIG_AGC_CTRL_0.SLOW_AGC_EN Position*/
#define XCVR_RX_DIG_AGC_CTRL_0_SLOW_AGC_EN(x)    (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_RX_DIG_AGC_CTRL_0.SLOW_AGC_EN Field*/
#define XCVR_RX_DIG_AGC_CTRL_0_SLOW_AGC_SRC_MASK (0x6U)                                              /*!< XCVR_RX_DIG_AGC_CTRL_0.SLOW_AGC_SRC Mask*/
#define XCVR_RX_DIG_AGC_CTRL_0_SLOW_AGC_SRC_SHIFT (1U)                                               /*!< XCVR_RX_DIG_AGC_CTRL_0.SLOW_AGC_SRC Position*/
#define XCVR_RX_DIG_AGC_CTRL_0_SLOW_AGC_SRC(x)   (((uint32_t)(((uint32_t)(x))<<1U))&0x6UL)           /*!< XCVR_RX_DIG_AGC_CTRL_0.SLOW_AGC_SRC Field*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_FREEZE_EN_MASK (0x8U)                                             /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_FREEZE_EN Mask*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_FREEZE_EN_SHIFT (3U)                                              /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_FREEZE_EN Position*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_FREEZE_EN(x)  (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_FREEZE_EN Field*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_FREEZE_PRE_OR_AA_MASK (0x10U)                                     /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_FREEZE_PRE_OR_AA Mask*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_FREEZE_PRE_OR_AA_SHIFT (4U)                                       /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_FREEZE_PRE_OR_AA Position*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_FREEZE_PRE_OR_AA(x) (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)    /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_FREEZE_PRE_OR_AA Field*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_UP_EN_MASK    (0x40U)                                             /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_UP_EN Mask   */
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_UP_EN_SHIFT   (6U)                                                /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_UP_EN Position*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_UP_EN(x)      (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_UP_EN Field  */
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_UP_SRC_MASK   (0x80U)                                             /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_UP_SRC Mask  */
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_UP_SRC_SHIFT  (7U)                                                /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_UP_SRC Position*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_UP_SRC(x)     (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_UP_SRC Field */
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_DOWN_BBA_STEP_SZ_MASK (0xF00U)                                    /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_DOWN_BBA_STEP_SZ Mask*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_DOWN_BBA_STEP_SZ_SHIFT (8U)                                       /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_DOWN_BBA_STEP_SZ Position*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_DOWN_BBA_STEP_SZ(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)   /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_DOWN_BBA_STEP_SZ Field*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_DOWN_LNA_STEP_SZ_MASK (0xF000U)                                   /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_DOWN_LNA_STEP_SZ Mask*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_DOWN_LNA_STEP_SZ_SHIFT (12U)                                      /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_DOWN_LNA_STEP_SZ Position*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_DOWN_LNA_STEP_SZ(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL) /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_DOWN_LNA_STEP_SZ Field*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_UP_RSSI_THRESH_MASK (0xFF0000U)                                   /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_UP_RSSI_THRESH Mask*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_UP_RSSI_THRESH_SHIFT (16U)                                        /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_UP_RSSI_THRESH Position*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_UP_RSSI_THRESH(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_UP_RSSI_THRESH Field*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_DOWN_RSSI_THRESH_MASK (0xFF000000U)                               /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_DOWN_RSSI_THRESH Mask*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_DOWN_RSSI_THRESH_SHIFT (24U)                                      /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_DOWN_RSSI_THRESH Position*/
#define XCVR_RX_DIG_AGC_CTRL_0_AGC_DOWN_RSSI_THRESH(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_RX_DIG_AGC_CTRL_0.AGC_DOWN_RSSI_THRESH Field*/
/* ------- AGC_CTRL_1 Bit Fields                    ------ */
#define XCVR_RX_DIG_AGC_CTRL_1_BBA_ALT_CODE_MASK (0xFU)                                              /*!< XCVR_RX_DIG_AGC_CTRL_1.BBA_ALT_CODE Mask*/
#define XCVR_RX_DIG_AGC_CTRL_1_BBA_ALT_CODE_SHIFT (0U)                                               /*!< XCVR_RX_DIG_AGC_CTRL_1.BBA_ALT_CODE Position*/
#define XCVR_RX_DIG_AGC_CTRL_1_BBA_ALT_CODE(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< XCVR_RX_DIG_AGC_CTRL_1.BBA_ALT_CODE Field*/
#define XCVR_RX_DIG_AGC_CTRL_1_LNA_ALT_CODE_MASK (0xFF0U)                                            /*!< XCVR_RX_DIG_AGC_CTRL_1.LNA_ALT_CODE Mask*/
#define XCVR_RX_DIG_AGC_CTRL_1_LNA_ALT_CODE_SHIFT (4U)                                               /*!< XCVR_RX_DIG_AGC_CTRL_1.LNA_ALT_CODE Position*/
#define XCVR_RX_DIG_AGC_CTRL_1_LNA_ALT_CODE(x)   (((uint32_t)(((uint32_t)(x))<<4U))&0xFF0UL)         /*!< XCVR_RX_DIG_AGC_CTRL_1.LNA_ALT_CODE Field*/
#define XCVR_RX_DIG_AGC_CTRL_1_LNA_USER_GAIN_MASK (0xF000U)                                          /*!< XCVR_RX_DIG_AGC_CTRL_1.LNA_USER_GAIN Mask*/
#define XCVR_RX_DIG_AGC_CTRL_1_LNA_USER_GAIN_SHIFT (12U)                                             /*!< XCVR_RX_DIG_AGC_CTRL_1.LNA_USER_GAIN Position*/
#define XCVR_RX_DIG_AGC_CTRL_1_LNA_USER_GAIN(x)  (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< XCVR_RX_DIG_AGC_CTRL_1.LNA_USER_GAIN Field*/
#define XCVR_RX_DIG_AGC_CTRL_1_BBA_USER_GAIN_MASK (0xF0000U)                                         /*!< XCVR_RX_DIG_AGC_CTRL_1.BBA_USER_GAIN Mask*/
#define XCVR_RX_DIG_AGC_CTRL_1_BBA_USER_GAIN_SHIFT (16U)                                             /*!< XCVR_RX_DIG_AGC_CTRL_1.BBA_USER_GAIN Position*/
#define XCVR_RX_DIG_AGC_CTRL_1_BBA_USER_GAIN(x)  (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)      /*!< XCVR_RX_DIG_AGC_CTRL_1.BBA_USER_GAIN Field*/
#define XCVR_RX_DIG_AGC_CTRL_1_USER_LNA_GAIN_EN_MASK (0x100000U)                                     /*!< XCVR_RX_DIG_AGC_CTRL_1.USER_LNA_GAIN_EN Mask*/
#define XCVR_RX_DIG_AGC_CTRL_1_USER_LNA_GAIN_EN_SHIFT (20U)                                          /*!< XCVR_RX_DIG_AGC_CTRL_1.USER_LNA_GAIN_EN Position*/
#define XCVR_RX_DIG_AGC_CTRL_1_USER_LNA_GAIN_EN(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)   /*!< XCVR_RX_DIG_AGC_CTRL_1.USER_LNA_GAIN_EN Field*/
#define XCVR_RX_DIG_AGC_CTRL_1_USER_BBA_GAIN_EN_MASK (0x200000U)                                     /*!< XCVR_RX_DIG_AGC_CTRL_1.USER_BBA_GAIN_EN Mask*/
#define XCVR_RX_DIG_AGC_CTRL_1_USER_BBA_GAIN_EN_SHIFT (21U)                                          /*!< XCVR_RX_DIG_AGC_CTRL_1.USER_BBA_GAIN_EN Position*/
#define XCVR_RX_DIG_AGC_CTRL_1_USER_BBA_GAIN_EN(x) (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)   /*!< XCVR_RX_DIG_AGC_CTRL_1.USER_BBA_GAIN_EN Field*/
#define XCVR_RX_DIG_AGC_CTRL_1_PRESLOW_EN_MASK   (0x400000U)                                         /*!< XCVR_RX_DIG_AGC_CTRL_1.PRESLOW_EN Mask  */
#define XCVR_RX_DIG_AGC_CTRL_1_PRESLOW_EN_SHIFT  (22U)                                               /*!< XCVR_RX_DIG_AGC_CTRL_1.PRESLOW_EN Position*/
#define XCVR_RX_DIG_AGC_CTRL_1_PRESLOW_EN(x)     (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< XCVR_RX_DIG_AGC_CTRL_1.PRESLOW_EN Field */
#define XCVR_RX_DIG_AGC_CTRL_1_LNA_GAIN_SETTLE_TIME_MASK (0xFF000000U)                               /*!< XCVR_RX_DIG_AGC_CTRL_1.LNA_GAIN_SETTLE_TIME Mask*/
#define XCVR_RX_DIG_AGC_CTRL_1_LNA_GAIN_SETTLE_TIME_SHIFT (24U)                                      /*!< XCVR_RX_DIG_AGC_CTRL_1.LNA_GAIN_SETTLE_TIME Position*/
#define XCVR_RX_DIG_AGC_CTRL_1_LNA_GAIN_SETTLE_TIME(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_RX_DIG_AGC_CTRL_1.LNA_GAIN_SETTLE_TIME Field*/
/* ------- AGC_CTRL_2 Bit Fields                    ------ */
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_PDET_RST_MASK (0x1U)                                              /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_PDET_RST Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_PDET_RST_SHIFT (0U)                                               /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_PDET_RST Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_PDET_RST(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_PDET_RST Field*/
#define XCVR_RX_DIG_AGC_CTRL_2_TZA_PDET_RST_MASK (0x2U)                                              /*!< XCVR_RX_DIG_AGC_CTRL_2.TZA_PDET_RST Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_TZA_PDET_RST_SHIFT (1U)                                               /*!< XCVR_RX_DIG_AGC_CTRL_2.TZA_PDET_RST Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_TZA_PDET_RST(x)   (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_RX_DIG_AGC_CTRL_2.TZA_PDET_RST Field*/
#define XCVR_RX_DIG_AGC_CTRL_2_MAN_PDET_RST_MASK (0x4U)                                              /*!< XCVR_RX_DIG_AGC_CTRL_2.MAN_PDET_RST Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_MAN_PDET_RST_SHIFT (2U)                                               /*!< XCVR_RX_DIG_AGC_CTRL_2.MAN_PDET_RST Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_MAN_PDET_RST(x)   (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_RX_DIG_AGC_CTRL_2.MAN_PDET_RST Field*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_GAIN_SETTLE_TIME_MASK (0xFF0U)                                    /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_GAIN_SETTLE_TIME Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_GAIN_SETTLE_TIME_SHIFT (4U)                                       /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_GAIN_SETTLE_TIME Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_GAIN_SETTLE_TIME(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xFF0UL)   /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_GAIN_SETTLE_TIME Field*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_PDET_SEL_LO_MASK (0x7000U)                                        /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_PDET_SEL_LO Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_PDET_SEL_LO_SHIFT (12U)                                           /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_PDET_SEL_LO Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_PDET_SEL_LO(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x7000UL)      /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_PDET_SEL_LO Field*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_PDET_SEL_HI_MASK (0x38000U)                                       /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_PDET_SEL_HI Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_PDET_SEL_HI_SHIFT (15U)                                           /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_PDET_SEL_HI Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_BBA_PDET_SEL_HI(x) (((uint32_t)(((uint32_t)(x))<<15U))&0x38000UL)     /*!< XCVR_RX_DIG_AGC_CTRL_2.BBA_PDET_SEL_HI Field*/
#define XCVR_RX_DIG_AGC_CTRL_2_TZA_PDET_SEL_LO_MASK (0x1C0000U)                                      /*!< XCVR_RX_DIG_AGC_CTRL_2.TZA_PDET_SEL_LO Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_TZA_PDET_SEL_LO_SHIFT (18U)                                           /*!< XCVR_RX_DIG_AGC_CTRL_2.TZA_PDET_SEL_LO Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_TZA_PDET_SEL_LO(x) (((uint32_t)(((uint32_t)(x))<<18U))&0x1C0000UL)    /*!< XCVR_RX_DIG_AGC_CTRL_2.TZA_PDET_SEL_LO Field*/
#define XCVR_RX_DIG_AGC_CTRL_2_TZA_PDET_SEL_HI_MASK (0xE00000U)                                      /*!< XCVR_RX_DIG_AGC_CTRL_2.TZA_PDET_SEL_HI Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_TZA_PDET_SEL_HI_SHIFT (21U)                                           /*!< XCVR_RX_DIG_AGC_CTRL_2.TZA_PDET_SEL_HI Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_TZA_PDET_SEL_HI(x) (((uint32_t)(((uint32_t)(x))<<21U))&0xE00000UL)    /*!< XCVR_RX_DIG_AGC_CTRL_2.TZA_PDET_SEL_HI Field*/
#define XCVR_RX_DIG_AGC_CTRL_2_AGC_FAST_EXPIRE_MASK (0x3F000000U)                                    /*!< XCVR_RX_DIG_AGC_CTRL_2.AGC_FAST_EXPIRE Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_AGC_FAST_EXPIRE_SHIFT (24U)                                           /*!< XCVR_RX_DIG_AGC_CTRL_2.AGC_FAST_EXPIRE Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_AGC_FAST_EXPIRE(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x3F000000UL)  /*!< XCVR_RX_DIG_AGC_CTRL_2.AGC_FAST_EXPIRE Field*/
#define XCVR_RX_DIG_AGC_CTRL_2_LNA_LG_ON_OVR_MASK (0x40000000U)                                      /*!< XCVR_RX_DIG_AGC_CTRL_2.LNA_LG_ON_OVR Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_LNA_LG_ON_OVR_SHIFT (30U)                                             /*!< XCVR_RX_DIG_AGC_CTRL_2.LNA_LG_ON_OVR Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_LNA_LG_ON_OVR(x)  (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< XCVR_RX_DIG_AGC_CTRL_2.LNA_LG_ON_OVR Field*/
#define XCVR_RX_DIG_AGC_CTRL_2_LNA_HG_ON_OVR_MASK (0x80000000U)                                      /*!< XCVR_RX_DIG_AGC_CTRL_2.LNA_HG_ON_OVR Mask*/
#define XCVR_RX_DIG_AGC_CTRL_2_LNA_HG_ON_OVR_SHIFT (31U)                                             /*!< XCVR_RX_DIG_AGC_CTRL_2.LNA_HG_ON_OVR Position*/
#define XCVR_RX_DIG_AGC_CTRL_2_LNA_HG_ON_OVR(x)  (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< XCVR_RX_DIG_AGC_CTRL_2.LNA_HG_ON_OVR Field*/
/* ------- AGC_CTRL_3 Bit Fields                    ------ */
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_UNFREEZE_TIME_MASK (0x1FFFU)                                      /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_UNFREEZE_TIME Mask*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_UNFREEZE_TIME_SHIFT (0U)                                          /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_UNFREEZE_TIME Position*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_UNFREEZE_TIME(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)     /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_UNFREEZE_TIME Field*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_PDET_LO_DLY_MASK (0xE000U)                                        /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_PDET_LO_DLY Mask*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_PDET_LO_DLY_SHIFT (13U)                                           /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_PDET_LO_DLY Position*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_PDET_LO_DLY(x) (((uint32_t)(((uint32_t)(x))<<13U))&0xE000UL)      /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_PDET_LO_DLY Field*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_RSSI_DELT_H2S_MASK (0x7F0000U)                                    /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_RSSI_DELT_H2S Mask*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_RSSI_DELT_H2S_SHIFT (16U)                                         /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_RSSI_DELT_H2S Position*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_RSSI_DELT_H2S(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x7F0000UL)  /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_RSSI_DELT_H2S Field*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_H2S_STEP_SZ_MASK (0xF800000U)                                     /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_H2S_STEP_SZ Mask*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_H2S_STEP_SZ_SHIFT (23U)                                           /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_H2S_STEP_SZ Position*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_H2S_STEP_SZ(x) (((uint32_t)(((uint32_t)(x))<<23U))&0xF800000UL)   /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_H2S_STEP_SZ Field*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_UP_STEP_SZ_MASK (0xF0000000U)                                     /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_UP_STEP_SZ Mask*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_UP_STEP_SZ_SHIFT (28U)                                            /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_UP_STEP_SZ Position*/
#define XCVR_RX_DIG_AGC_CTRL_3_AGC_UP_STEP_SZ(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL)   /*!< XCVR_RX_DIG_AGC_CTRL_3.AGC_UP_STEP_SZ Field*/
/* ------- AGC_STAT Bit Fields                      ------ */
#define XCVR_RX_DIG_AGC_STAT_BBA_PDET_LO_STAT_MASK (0x1U)                                            /*!< XCVR_RX_DIG_AGC_STAT.BBA_PDET_LO_STAT Mask*/
#define XCVR_RX_DIG_AGC_STAT_BBA_PDET_LO_STAT_SHIFT (0U)                                             /*!< XCVR_RX_DIG_AGC_STAT.BBA_PDET_LO_STAT Position*/
#define XCVR_RX_DIG_AGC_STAT_BBA_PDET_LO_STAT(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_RX_DIG_AGC_STAT.BBA_PDET_LO_STAT Field*/
#define XCVR_RX_DIG_AGC_STAT_BBA_PDET_HI_STAT_MASK (0x2U)                                            /*!< XCVR_RX_DIG_AGC_STAT.BBA_PDET_HI_STAT Mask*/
#define XCVR_RX_DIG_AGC_STAT_BBA_PDET_HI_STAT_SHIFT (1U)                                             /*!< XCVR_RX_DIG_AGC_STAT.BBA_PDET_HI_STAT Position*/
#define XCVR_RX_DIG_AGC_STAT_BBA_PDET_HI_STAT(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_RX_DIG_AGC_STAT.BBA_PDET_HI_STAT Field*/
#define XCVR_RX_DIG_AGC_STAT_TZA_PDET_LO_STAT_MASK (0x4U)                                            /*!< XCVR_RX_DIG_AGC_STAT.TZA_PDET_LO_STAT Mask*/
#define XCVR_RX_DIG_AGC_STAT_TZA_PDET_LO_STAT_SHIFT (2U)                                             /*!< XCVR_RX_DIG_AGC_STAT.TZA_PDET_LO_STAT Position*/
#define XCVR_RX_DIG_AGC_STAT_TZA_PDET_LO_STAT(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_RX_DIG_AGC_STAT.TZA_PDET_LO_STAT Field*/
#define XCVR_RX_DIG_AGC_STAT_TZA_PDET_HI_STAT_MASK (0x8U)                                            /*!< XCVR_RX_DIG_AGC_STAT.TZA_PDET_HI_STAT Mask*/
#define XCVR_RX_DIG_AGC_STAT_TZA_PDET_HI_STAT_SHIFT (3U)                                             /*!< XCVR_RX_DIG_AGC_STAT.TZA_PDET_HI_STAT Position*/
#define XCVR_RX_DIG_AGC_STAT_TZA_PDET_HI_STAT(x) (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_RX_DIG_AGC_STAT.TZA_PDET_HI_STAT Field*/
#define XCVR_RX_DIG_AGC_STAT_CURR_AGC_IDX_MASK   (0x1F0U)                                            /*!< XCVR_RX_DIG_AGC_STAT.CURR_AGC_IDX Mask  */
#define XCVR_RX_DIG_AGC_STAT_CURR_AGC_IDX_SHIFT  (4U)                                                /*!< XCVR_RX_DIG_AGC_STAT.CURR_AGC_IDX Position*/
#define XCVR_RX_DIG_AGC_STAT_CURR_AGC_IDX(x)     (((uint32_t)(((uint32_t)(x))<<4U))&0x1F0UL)         /*!< XCVR_RX_DIG_AGC_STAT.CURR_AGC_IDX Field */
#define XCVR_RX_DIG_AGC_STAT_AGC_FROZEN_MASK     (0x200U)                                            /*!< XCVR_RX_DIG_AGC_STAT.AGC_FROZEN Mask    */
#define XCVR_RX_DIG_AGC_STAT_AGC_FROZEN_SHIFT    (9U)                                                /*!< XCVR_RX_DIG_AGC_STAT.AGC_FROZEN Position*/
#define XCVR_RX_DIG_AGC_STAT_AGC_FROZEN(x)       (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< XCVR_RX_DIG_AGC_STAT.AGC_FROZEN Field   */
#define XCVR_RX_DIG_AGC_STAT_RSSI_ADC_RAW_MASK   (0xFF0000U)                                         /*!< XCVR_RX_DIG_AGC_STAT.RSSI_ADC_RAW Mask  */
#define XCVR_RX_DIG_AGC_STAT_RSSI_ADC_RAW_SHIFT  (16U)                                               /*!< XCVR_RX_DIG_AGC_STAT.RSSI_ADC_RAW Position*/
#define XCVR_RX_DIG_AGC_STAT_RSSI_ADC_RAW(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_RX_DIG_AGC_STAT.RSSI_ADC_RAW Field */
/* ------- RSSI_CTRL_0 Bit Fields                   ------ */
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_USE_VALS_MASK (0x1U)                                            /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_USE_VALS Mask*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_USE_VALS_SHIFT (0U)                                             /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_USE_VALS Position*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_USE_VALS(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_USE_VALS Field*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_HOLD_SRC_MASK (0x6U)                                            /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_HOLD_SRC Mask*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_HOLD_SRC_SHIFT (1U)                                             /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_HOLD_SRC Position*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_HOLD_SRC(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x6UL)           /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_HOLD_SRC Field*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_HOLD_EN_MASK (0x8U)                                             /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_HOLD_EN Mask*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_HOLD_EN_SHIFT (3U)                                              /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_HOLD_EN Position*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_HOLD_EN(x)  (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_HOLD_EN Field*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_IIR_CW_WEIGHT_MASK (0x60U)                                      /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_IIR_CW_WEIGHT Mask*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_IIR_CW_WEIGHT_SHIFT (5U)                                        /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_IIR_CW_WEIGHT Position*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_IIR_CW_WEIGHT(x) (((uint32_t)(((uint32_t)(x))<<5U))&0x60UL)     /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_IIR_CW_WEIGHT Field*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_N_WINDOW_AVG_MASK (0x300U)                                      /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_N_WINDOW_AVG Mask*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_N_WINDOW_AVG_SHIFT (8U)                                         /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_N_WINDOW_AVG Position*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_N_WINDOW_AVG(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x300UL)     /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_N_WINDOW_AVG Field*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_HOLD_DELAY_MASK (0xFC00U)                                       /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_HOLD_DELAY Mask*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_HOLD_DELAY_SHIFT (10U)                                          /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_HOLD_DELAY Position*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_HOLD_DELAY(x) (((uint32_t)(((uint32_t)(x))<<10U))&0xFC00UL)     /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_HOLD_DELAY Field*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_IIR_WEIGHT_MASK (0xF0000U)                                      /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_IIR_WEIGHT Mask*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_IIR_WEIGHT_SHIFT (16U)                                          /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_IIR_WEIGHT Position*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_IIR_WEIGHT(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL)    /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_IIR_WEIGHT Field*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_VLD_SETTLE_MASK (0x700000U)                                     /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_VLD_SETTLE Mask*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_VLD_SETTLE_SHIFT (20U)                                          /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_VLD_SETTLE Position*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_VLD_SETTLE(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x700000UL)   /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_VLD_SETTLE Field*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_ADJ_MASK    (0xFF000000U)                                       /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_ADJ Mask   */
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_ADJ_SHIFT   (24U)                                               /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_ADJ Position*/
#define XCVR_RX_DIG_RSSI_CTRL_0_RSSI_ADJ(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_RX_DIG_RSSI_CTRL_0.RSSI_ADJ Field  */
/* ------- RSSI_CTRL_1 Bit Fields                   ------ */
#define XCVR_RX_DIG_RSSI_CTRL_1_RSSI_OUT_MASK    (0xFF000000U)                                       /*!< XCVR_RX_DIG_RSSI_CTRL_1.RSSI_OUT Mask   */
#define XCVR_RX_DIG_RSSI_CTRL_1_RSSI_OUT_SHIFT   (24U)                                               /*!< XCVR_RX_DIG_RSSI_CTRL_1.RSSI_OUT Position*/
#define XCVR_RX_DIG_RSSI_CTRL_1_RSSI_OUT(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_RX_DIG_RSSI_CTRL_1.RSSI_OUT Field  */
/* ------- RSSI_DFT Bit Fields                      ------ */
#define XCVR_RX_DIG_RSSI_DFT_DFT_MAG_MASK        (0x1FFFU)                                           /*!< XCVR_RX_DIG_RSSI_DFT.DFT_MAG Mask       */
#define XCVR_RX_DIG_RSSI_DFT_DFT_MAG_SHIFT       (0U)                                                /*!< XCVR_RX_DIG_RSSI_DFT.DFT_MAG Position   */
#define XCVR_RX_DIG_RSSI_DFT_DFT_MAG(x)          (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)        /*!< XCVR_RX_DIG_RSSI_DFT.DFT_MAG Field      */
#define XCVR_RX_DIG_RSSI_DFT_DFT_NOISE_MASK      (0x1FFF0000U)                                       /*!< XCVR_RX_DIG_RSSI_DFT.DFT_NOISE Mask     */
#define XCVR_RX_DIG_RSSI_DFT_DFT_NOISE_SHIFT     (16U)                                               /*!< XCVR_RX_DIG_RSSI_DFT.DFT_NOISE Position */
#define XCVR_RX_DIG_RSSI_DFT_DFT_NOISE(x)        (((uint32_t)(((uint32_t)(x))<<16U))&0x1FFF0000UL)   /*!< XCVR_RX_DIG_RSSI_DFT.DFT_NOISE Field    */
/* ------- DCOC_CTRL_0 Bit Fields                   ------ */
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_MIDPWR_TRK_DIS_MASK (0x1U)                                      /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_MIDPWR_TRK_DIS Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_MIDPWR_TRK_DIS_SHIFT (0U)                                       /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_MIDPWR_TRK_DIS Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_MIDPWR_TRK_DIS(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)     /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_MIDPWR_TRK_DIS Field*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_MAN_MASK    (0x2U)                                              /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_MAN Mask   */
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_MAN_SHIFT   (1U)                                                /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_MAN Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_MAN(x)      (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_MAN Field  */
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_TRK_EST_OVR_MASK (0x4U)                                         /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_TRK_EST_OVR Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_TRK_EST_OVR_SHIFT (2U)                                          /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_TRK_EST_OVR Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_TRK_EST_OVR(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)        /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_TRK_EST_OVR Field*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORRECT_SRC_MASK (0x8U)                                         /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORRECT_SRC Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORRECT_SRC_SHIFT (3U)                                          /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORRECT_SRC Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORRECT_SRC(x) (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)        /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORRECT_SRC Field*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORRECT_EN_MASK (0x10U)                                         /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORRECT_EN Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORRECT_EN_SHIFT (4U)                                           /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORRECT_EN Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORRECT_EN(x) (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)        /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORRECT_EN Field*/
#define XCVR_RX_DIG_DCOC_CTRL_0_TRACK_FROM_ZERO_MASK (0x20U)                                         /*!< XCVR_RX_DIG_DCOC_CTRL_0.TRACK_FROM_ZERO Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_0_TRACK_FROM_ZERO_SHIFT (5U)                                           /*!< XCVR_RX_DIG_DCOC_CTRL_0.TRACK_FROM_ZERO Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_TRACK_FROM_ZERO(x) (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)        /*!< XCVR_RX_DIG_DCOC_CTRL_0.TRACK_FROM_ZERO Field*/
#define XCVR_RX_DIG_DCOC_CTRL_0_BBA_CORR_POL_MASK (0x40U)                                            /*!< XCVR_RX_DIG_DCOC_CTRL_0.BBA_CORR_POL Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_0_BBA_CORR_POL_SHIFT (6U)                                              /*!< XCVR_RX_DIG_DCOC_CTRL_0.BBA_CORR_POL Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_BBA_CORR_POL(x)  (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_RX_DIG_DCOC_CTRL_0.BBA_CORR_POL Field*/
#define XCVR_RX_DIG_DCOC_CTRL_0_TZA_CORR_POL_MASK (0x80U)                                            /*!< XCVR_RX_DIG_DCOC_CTRL_0.TZA_CORR_POL Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_0_TZA_CORR_POL_SHIFT (7U)                                              /*!< XCVR_RX_DIG_DCOC_CTRL_0.TZA_CORR_POL Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_TZA_CORR_POL(x)  (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_RX_DIG_DCOC_CTRL_0.TZA_CORR_POL Field*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CAL_DURATION_MASK (0x1F00U)                                     /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CAL_DURATION Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CAL_DURATION_SHIFT (8U)                                         /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CAL_DURATION Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CAL_DURATION(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x1F00UL)    /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CAL_DURATION Field*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORR_DLY_MASK (0x1F0000U)                                       /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORR_DLY Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORR_DLY_SHIFT (16U)                                            /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORR_DLY Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORR_DLY(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x1F0000UL)     /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORR_DLY Field*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORR_HOLD_TIME_MASK (0x7F000000U)                               /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORR_HOLD_TIME Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORR_HOLD_TIME_SHIFT (24U)                                      /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORR_HOLD_TIME Position*/
#define XCVR_RX_DIG_DCOC_CTRL_0_DCOC_CORR_HOLD_TIME(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x7F000000UL) /*!< XCVR_RX_DIG_DCOC_CTRL_0.DCOC_CORR_HOLD_TIME Field*/
/* ------- DCOC_CTRL_1 Bit Fields                   ------ */
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_SIGN_SCALE_IDX_MASK (0x3U)                                      /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_SIGN_SCALE_IDX Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_SIGN_SCALE_IDX_SHIFT (0U)                                       /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_SIGN_SCALE_IDX Position*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_SIGN_SCALE_IDX(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)     /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_SIGN_SCALE_IDX Field*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHAC_SCALE_IDX_MASK (0x1CU)                                   /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHAC_SCALE_IDX Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHAC_SCALE_IDX_SHIFT (2U)                                     /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHAC_SCALE_IDX Position*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHAC_SCALE_IDX(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x1CUL)  /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHAC_SCALE_IDX Field*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHA_RADIUS_IDX_MASK (0xE0U)                                   /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHA_RADIUS_IDX Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHA_RADIUS_IDX_SHIFT (5U)                                     /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHA_RADIUS_IDX Position*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHA_RADIUS_IDX(x) (((uint32_t)(((uint32_t)(x))<<5U))&0xE0UL)  /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHA_RADIUS_IDX Field*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_TRK_EST_GS_CNT_MASK (0x7000U)                                   /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_TRK_EST_GS_CNT Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_TRK_EST_GS_CNT_SHIFT (12U)                                      /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_TRK_EST_GS_CNT Position*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_TRK_EST_GS_CNT(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x7000UL) /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_TRK_EST_GS_CNT Field*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_SIGN_SCALE_GS_IDX_MASK (0x30000U)                               /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_SIGN_SCALE_GS_IDX Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_SIGN_SCALE_GS_IDX_SHIFT (16U)                                   /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_SIGN_SCALE_GS_IDX Position*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_SIGN_SCALE_GS_IDX(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x30000UL) /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_SIGN_SCALE_GS_IDX Field*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHAC_SCALE_GS_IDX_MASK (0x1C0000U)                            /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHAC_SCALE_GS_IDX Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHAC_SCALE_GS_IDX_SHIFT (18U)                                 /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHAC_SCALE_GS_IDX Position*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHAC_SCALE_GS_IDX(x) (((uint32_t)(((uint32_t)(x))<<18U))&0x1C0000UL) /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHAC_SCALE_GS_IDX Field*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHA_RADIUS_GS_IDX_MASK (0xE00000U)                            /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHA_RADIUS_GS_IDX Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHA_RADIUS_GS_IDX_SHIFT (21U)                                 /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHA_RADIUS_GS_IDX Position*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_ALPHA_RADIUS_GS_IDX(x) (((uint32_t)(((uint32_t)(x))<<21U))&0xE00000UL) /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_ALPHA_RADIUS_GS_IDX Field*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_TRK_MIN_AGC_IDX_MASK (0x1F000000U)                              /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_TRK_MIN_AGC_IDX Mask*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_TRK_MIN_AGC_IDX_SHIFT (24U)                                     /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_TRK_MIN_AGC_IDX Position*/
#define XCVR_RX_DIG_DCOC_CTRL_1_DCOC_TRK_MIN_AGC_IDX(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x1F000000UL) /*!< XCVR_RX_DIG_DCOC_CTRL_1.DCOC_TRK_MIN_AGC_IDX Field*/
/* ------- DCOC_DAC_INIT Bit Fields                 ------ */
#define XCVR_RX_DIG_DCOC_DAC_INIT_BBA_DCOC_INIT_I_MASK (0x3FU)                                       /*!< XCVR_RX_DIG_DCOC_DAC_INIT.BBA_DCOC_INIT_I Mask*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_BBA_DCOC_INIT_I_SHIFT (0U)                                         /*!< XCVR_RX_DIG_DCOC_DAC_INIT.BBA_DCOC_INIT_I Position*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_BBA_DCOC_INIT_I(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)      /*!< XCVR_RX_DIG_DCOC_DAC_INIT.BBA_DCOC_INIT_I Field*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_BBA_DCOC_INIT_Q_MASK (0x3F00U)                                     /*!< XCVR_RX_DIG_DCOC_DAC_INIT.BBA_DCOC_INIT_Q Mask*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_BBA_DCOC_INIT_Q_SHIFT (8U)                                         /*!< XCVR_RX_DIG_DCOC_DAC_INIT.BBA_DCOC_INIT_Q Position*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_BBA_DCOC_INIT_Q(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x3F00UL)    /*!< XCVR_RX_DIG_DCOC_DAC_INIT.BBA_DCOC_INIT_Q Field*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_TZA_DCOC_INIT_I_MASK (0xFF0000U)                                   /*!< XCVR_RX_DIG_DCOC_DAC_INIT.TZA_DCOC_INIT_I Mask*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_TZA_DCOC_INIT_I_SHIFT (16U)                                        /*!< XCVR_RX_DIG_DCOC_DAC_INIT.TZA_DCOC_INIT_I Position*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_TZA_DCOC_INIT_I(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_RX_DIG_DCOC_DAC_INIT.TZA_DCOC_INIT_I Field*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_TZA_DCOC_INIT_Q_MASK (0xFF000000U)                                 /*!< XCVR_RX_DIG_DCOC_DAC_INIT.TZA_DCOC_INIT_Q Mask*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_TZA_DCOC_INIT_Q_SHIFT (24U)                                        /*!< XCVR_RX_DIG_DCOC_DAC_INIT.TZA_DCOC_INIT_Q Position*/
#define XCVR_RX_DIG_DCOC_DAC_INIT_TZA_DCOC_INIT_Q(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_RX_DIG_DCOC_DAC_INIT.TZA_DCOC_INIT_Q Field*/
/* ------- DCOC_DIG_MAN Bit Fields                  ------ */
#define XCVR_RX_DIG_DCOC_DIG_MAN_DIG_DCOC_INIT_I_MASK (0xFFFU)                                       /*!< XCVR_RX_DIG_DCOC_DIG_MAN.DIG_DCOC_INIT_I Mask*/
#define XCVR_RX_DIG_DCOC_DIG_MAN_DIG_DCOC_INIT_I_SHIFT (0U)                                          /*!< XCVR_RX_DIG_DCOC_DIG_MAN.DIG_DCOC_INIT_I Position*/
#define XCVR_RX_DIG_DCOC_DIG_MAN_DIG_DCOC_INIT_I(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFUL)      /*!< XCVR_RX_DIG_DCOC_DIG_MAN.DIG_DCOC_INIT_I Field*/
#define XCVR_RX_DIG_DCOC_DIG_MAN_DIG_DCOC_INIT_Q_MASK (0xFFF0000U)                                   /*!< XCVR_RX_DIG_DCOC_DIG_MAN.DIG_DCOC_INIT_Q Mask*/
#define XCVR_RX_DIG_DCOC_DIG_MAN_DIG_DCOC_INIT_Q_SHIFT (16U)                                         /*!< XCVR_RX_DIG_DCOC_DIG_MAN.DIG_DCOC_INIT_Q Position*/
#define XCVR_RX_DIG_DCOC_DIG_MAN_DIG_DCOC_INIT_Q(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFFF0000UL) /*!< XCVR_RX_DIG_DCOC_DIG_MAN.DIG_DCOC_INIT_Q Field*/
/* ------- DCOC_CAL_GAIN Bit Fields                 ------ */
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_BBA_CAL_GAIN1_MASK (0xF00U)                                   /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_BBA_CAL_GAIN1 Mask*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_BBA_CAL_GAIN1_SHIFT (8U)                                      /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_BBA_CAL_GAIN1 Position*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_BBA_CAL_GAIN1(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)  /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_BBA_CAL_GAIN1 Field*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_LNA_CAL_GAIN1_MASK (0xF000U)                                  /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_LNA_CAL_GAIN1 Mask*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_LNA_CAL_GAIN1_SHIFT (12U)                                     /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_LNA_CAL_GAIN1 Position*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_LNA_CAL_GAIN1(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL) /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_LNA_CAL_GAIN1 Field*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_BBA_CAL_GAIN2_MASK (0xF0000U)                                 /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_BBA_CAL_GAIN2 Mask*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_BBA_CAL_GAIN2_SHIFT (16U)                                     /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_BBA_CAL_GAIN2 Position*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_BBA_CAL_GAIN2(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_BBA_CAL_GAIN2 Field*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_LNA_CAL_GAIN2_MASK (0xF00000U)                                /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_LNA_CAL_GAIN2 Mask*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_LNA_CAL_GAIN2_SHIFT (20U)                                     /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_LNA_CAL_GAIN2 Position*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_LNA_CAL_GAIN2(x) (((uint32_t)(((uint32_t)(x))<<20U))&0xF00000UL) /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_LNA_CAL_GAIN2 Field*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_BBA_CAL_GAIN3_MASK (0xF000000U)                               /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_BBA_CAL_GAIN3 Mask*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_BBA_CAL_GAIN3_SHIFT (24U)                                     /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_BBA_CAL_GAIN3 Position*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_BBA_CAL_GAIN3(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL) /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_BBA_CAL_GAIN3 Field*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_LNA_CAL_GAIN3_MASK (0xF0000000U)                              /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_LNA_CAL_GAIN3 Mask*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_LNA_CAL_GAIN3_SHIFT (28U)                                     /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_LNA_CAL_GAIN3 Position*/
#define XCVR_RX_DIG_DCOC_CAL_GAIN_DCOC_LNA_CAL_GAIN3(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL) /*!< XCVR_RX_DIG_DCOC_CAL_GAIN.DCOC_LNA_CAL_GAIN3 Field*/
/* ------- DCOC_STAT Bit Fields                     ------ */
#define XCVR_RX_DIG_DCOC_STAT_BBA_DCOC_I_MASK    (0x3FU)                                             /*!< XCVR_RX_DIG_DCOC_STAT.BBA_DCOC_I Mask   */
#define XCVR_RX_DIG_DCOC_STAT_BBA_DCOC_I_SHIFT   (0U)                                                /*!< XCVR_RX_DIG_DCOC_STAT.BBA_DCOC_I Position*/
#define XCVR_RX_DIG_DCOC_STAT_BBA_DCOC_I(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< XCVR_RX_DIG_DCOC_STAT.BBA_DCOC_I Field  */
#define XCVR_RX_DIG_DCOC_STAT_BBA_DCOC_Q_MASK    (0x3F00U)                                           /*!< XCVR_RX_DIG_DCOC_STAT.BBA_DCOC_Q Mask   */
#define XCVR_RX_DIG_DCOC_STAT_BBA_DCOC_Q_SHIFT   (8U)                                                /*!< XCVR_RX_DIG_DCOC_STAT.BBA_DCOC_Q Position*/
#define XCVR_RX_DIG_DCOC_STAT_BBA_DCOC_Q(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0x3F00UL)        /*!< XCVR_RX_DIG_DCOC_STAT.BBA_DCOC_Q Field  */
#define XCVR_RX_DIG_DCOC_STAT_TZA_DCOC_I_MASK    (0xFF0000U)                                         /*!< XCVR_RX_DIG_DCOC_STAT.TZA_DCOC_I Mask   */
#define XCVR_RX_DIG_DCOC_STAT_TZA_DCOC_I_SHIFT   (16U)                                               /*!< XCVR_RX_DIG_DCOC_STAT.TZA_DCOC_I Position*/
#define XCVR_RX_DIG_DCOC_STAT_TZA_DCOC_I(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_RX_DIG_DCOC_STAT.TZA_DCOC_I Field  */
#define XCVR_RX_DIG_DCOC_STAT_TZA_DCOC_Q_MASK    (0xFF000000U)                                       /*!< XCVR_RX_DIG_DCOC_STAT.TZA_DCOC_Q Mask   */
#define XCVR_RX_DIG_DCOC_STAT_TZA_DCOC_Q_SHIFT   (24U)                                               /*!< XCVR_RX_DIG_DCOC_STAT.TZA_DCOC_Q Position*/
#define XCVR_RX_DIG_DCOC_STAT_TZA_DCOC_Q(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_RX_DIG_DCOC_STAT.TZA_DCOC_Q Field  */
/* ------- DCOC_DC_EST Bit Fields                   ------ */
#define XCVR_RX_DIG_DCOC_DC_EST_DC_EST_I_MASK    (0xFFFU)                                            /*!< XCVR_RX_DIG_DCOC_DC_EST.DC_EST_I Mask   */
#define XCVR_RX_DIG_DCOC_DC_EST_DC_EST_I_SHIFT   (0U)                                                /*!< XCVR_RX_DIG_DCOC_DC_EST.DC_EST_I Position*/
#define XCVR_RX_DIG_DCOC_DC_EST_DC_EST_I(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFUL)         /*!< XCVR_RX_DIG_DCOC_DC_EST.DC_EST_I Field  */
#define XCVR_RX_DIG_DCOC_DC_EST_DC_EST_Q_MASK    (0xFFF0000U)                                        /*!< XCVR_RX_DIG_DCOC_DC_EST.DC_EST_Q Mask   */
#define XCVR_RX_DIG_DCOC_DC_EST_DC_EST_Q_SHIFT   (16U)                                               /*!< XCVR_RX_DIG_DCOC_DC_EST.DC_EST_Q Position*/
#define XCVR_RX_DIG_DCOC_DC_EST_DC_EST_Q(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0xFFF0000UL)    /*!< XCVR_RX_DIG_DCOC_DC_EST.DC_EST_Q Field  */
/* ------- DCOC_CAL_RCP Bit Fields                  ------ */
#define XCVR_RX_DIG_DCOC_CAL_RCP_DCOC_TMP_CALC_RECIP_MASK (0x7FFU)                                   /*!< XCVR_RX_DIG_DCOC_CAL_RCP.DCOC_TMP_CALC_RECIP Mask*/
#define XCVR_RX_DIG_DCOC_CAL_RCP_DCOC_TMP_CALC_RECIP_SHIFT (0U)                                      /*!< XCVR_RX_DIG_DCOC_CAL_RCP.DCOC_TMP_CALC_RECIP Position*/
#define XCVR_RX_DIG_DCOC_CAL_RCP_DCOC_TMP_CALC_RECIP(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFUL)  /*!< XCVR_RX_DIG_DCOC_CAL_RCP.DCOC_TMP_CALC_RECIP Field*/
#define XCVR_RX_DIG_DCOC_CAL_RCP_ALPHA_CALC_RECIP_MASK (0x7FF0000U)                                  /*!< XCVR_RX_DIG_DCOC_CAL_RCP.ALPHA_CALC_RECIP Mask*/
#define XCVR_RX_DIG_DCOC_CAL_RCP_ALPHA_CALC_RECIP_SHIFT (16U)                                        /*!< XCVR_RX_DIG_DCOC_CAL_RCP.ALPHA_CALC_RECIP Position*/
#define XCVR_RX_DIG_DCOC_CAL_RCP_ALPHA_CALC_RECIP(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x7FF0000UL) /*!< XCVR_RX_DIG_DCOC_CAL_RCP.ALPHA_CALC_RECIP Field*/
/* ------- IQMC_CTRL Bit Fields                     ------ */
#define XCVR_RX_DIG_IQMC_CTRL_IQMC_CAL_EN_MASK   (0x1U)                                              /*!< XCVR_RX_DIG_IQMC_CTRL.IQMC_CAL_EN Mask  */
#define XCVR_RX_DIG_IQMC_CTRL_IQMC_CAL_EN_SHIFT  (0U)                                                /*!< XCVR_RX_DIG_IQMC_CTRL.IQMC_CAL_EN Position*/
#define XCVR_RX_DIG_IQMC_CTRL_IQMC_CAL_EN(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_RX_DIG_IQMC_CTRL.IQMC_CAL_EN Field */
#define XCVR_RX_DIG_IQMC_CTRL_IQMC_NUM_ITER_MASK (0xFF00U)                                           /*!< XCVR_RX_DIG_IQMC_CTRL.IQMC_NUM_ITER Mask*/
#define XCVR_RX_DIG_IQMC_CTRL_IQMC_NUM_ITER_SHIFT (8U)                                               /*!< XCVR_RX_DIG_IQMC_CTRL.IQMC_NUM_ITER Position*/
#define XCVR_RX_DIG_IQMC_CTRL_IQMC_NUM_ITER(x)   (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_RX_DIG_IQMC_CTRL.IQMC_NUM_ITER Field*/
#define XCVR_RX_DIG_IQMC_CTRL_IQMC_DC_GAIN_ADJ_MASK (0x7FF0000U)                                     /*!< XCVR_RX_DIG_IQMC_CTRL.IQMC_DC_GAIN_ADJ Mask*/
#define XCVR_RX_DIG_IQMC_CTRL_IQMC_DC_GAIN_ADJ_SHIFT (16U)                                           /*!< XCVR_RX_DIG_IQMC_CTRL.IQMC_DC_GAIN_ADJ Position*/
#define XCVR_RX_DIG_IQMC_CTRL_IQMC_DC_GAIN_ADJ(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x7FF0000UL)   /*!< XCVR_RX_DIG_IQMC_CTRL.IQMC_DC_GAIN_ADJ Field*/
/* ------- IQMC_CAL Bit Fields                      ------ */
#define XCVR_RX_DIG_IQMC_CAL_IQMC_GAIN_ADJ_MASK  (0x7FFU)                                            /*!< XCVR_RX_DIG_IQMC_CAL.IQMC_GAIN_ADJ Mask */
#define XCVR_RX_DIG_IQMC_CAL_IQMC_GAIN_ADJ_SHIFT (0U)                                                /*!< XCVR_RX_DIG_IQMC_CAL.IQMC_GAIN_ADJ Position*/
#define XCVR_RX_DIG_IQMC_CAL_IQMC_GAIN_ADJ(x)    (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFUL)         /*!< XCVR_RX_DIG_IQMC_CAL.IQMC_GAIN_ADJ Field*/
#define XCVR_RX_DIG_IQMC_CAL_IQMC_PHASE_ADJ_MASK (0xFFF0000U)                                        /*!< XCVR_RX_DIG_IQMC_CAL.IQMC_PHASE_ADJ Mask*/
#define XCVR_RX_DIG_IQMC_CAL_IQMC_PHASE_ADJ_SHIFT (16U)                                              /*!< XCVR_RX_DIG_IQMC_CAL.IQMC_PHASE_ADJ Position*/
#define XCVR_RX_DIG_IQMC_CAL_IQMC_PHASE_ADJ(x)   (((uint32_t)(((uint32_t)(x))<<16U))&0xFFF0000UL)    /*!< XCVR_RX_DIG_IQMC_CAL.IQMC_PHASE_ADJ Field*/
/* ------- LNA_GAIN_VAL_3_0 Bit Fields              ------ */
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_0_MASK (0xFFU)                                     /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_0 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_0_SHIFT (0U)                                       /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_0 Position*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)    /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_0 Field*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_1_MASK (0xFF00U)                                   /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_1 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_1_SHIFT (8U)                                       /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_1 Position*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_1(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)  /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_1 Field*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_2_MASK (0xFF0000U)                                 /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_2 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_2_SHIFT (16U)                                      /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_2 Position*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_2(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_2 Field*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_3_MASK (0xFF000000U)                               /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_3 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_3_SHIFT (24U)                                      /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_3 Position*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_3_0_LNA_GAIN_VAL_3(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_RX_DIG_LNA_GAIN_VAL_3_0.LNA_GAIN_VAL_3 Field*/
/* ------- LNA_GAIN_VAL_7_4 Bit Fields              ------ */
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_4_MASK (0xFFU)                                     /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_4 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_4_SHIFT (0U)                                       /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_4 Position*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_4(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)    /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_4 Field*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_5_MASK (0xFF00U)                                   /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_5 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_5_SHIFT (8U)                                       /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_5 Position*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_5(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)  /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_5 Field*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_6_MASK (0xFF0000U)                                 /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_6 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_6_SHIFT (16U)                                      /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_6 Position*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_6(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_6 Field*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_7_MASK (0xFF000000U)                               /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_7 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_7_SHIFT (24U)                                      /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_7 Position*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_7_4_LNA_GAIN_VAL_7(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_RX_DIG_LNA_GAIN_VAL_7_4.LNA_GAIN_VAL_7 Field*/
/* ------- LNA_GAIN_VAL_8 Bit Fields                ------ */
#define XCVR_RX_DIG_LNA_GAIN_VAL_8_LNA_GAIN_VAL_8_MASK (0xFFU)                                       /*!< XCVR_RX_DIG_LNA_GAIN_VAL_8.LNA_GAIN_VAL_8 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_8_LNA_GAIN_VAL_8_SHIFT (0U)                                         /*!< XCVR_RX_DIG_LNA_GAIN_VAL_8.LNA_GAIN_VAL_8 Position*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_8_LNA_GAIN_VAL_8(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)      /*!< XCVR_RX_DIG_LNA_GAIN_VAL_8.LNA_GAIN_VAL_8 Field*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_8_LNA_GAIN_VAL_9_MASK (0xFF00U)                                     /*!< XCVR_RX_DIG_LNA_GAIN_VAL_8.LNA_GAIN_VAL_9 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_8_LNA_GAIN_VAL_9_SHIFT (8U)                                         /*!< XCVR_RX_DIG_LNA_GAIN_VAL_8.LNA_GAIN_VAL_9 Position*/
#define XCVR_RX_DIG_LNA_GAIN_VAL_8_LNA_GAIN_VAL_9(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)    /*!< XCVR_RX_DIG_LNA_GAIN_VAL_8.LNA_GAIN_VAL_9 Field*/
/* ------- BBA_RES_TUNE_VAL_7_0 Bit Fields          ------ */
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_0_MASK (0xFU)                              /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_0 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_0_SHIFT (0U)                               /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_0 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_0 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_1_MASK (0xF0U)                             /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_1 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_1_SHIFT (4U)                               /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_1 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_1(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_1 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_2_MASK (0xF00U)                            /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_2 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_2_SHIFT (8U)                               /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_2 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_2(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_2 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_3_MASK (0xF000U)                           /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_3 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_3_SHIFT (12U)                              /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_3 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_3(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_3 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_4_MASK (0xF0000U)                          /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_4 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_4_SHIFT (16U)                              /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_4 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_4(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_4 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_5_MASK (0xF00000U)                         /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_5 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_5_SHIFT (20U)                              /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_5 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_5(x) (((uint32_t)(((uint32_t)(x))<<20U))&0xF00000UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_5 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_6_MASK (0xF000000U)                        /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_6 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_6_SHIFT (24U)                              /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_6 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_6(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_6 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_7_MASK (0xF0000000U)                       /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_7 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_7_SHIFT (28U)                              /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_7 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0_BBA_RES_TUNE_VAL_7(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_7_0.BBA_RES_TUNE_VAL_7 Field*/
/* ------- BBA_RES_TUNE_VAL_10_8 Bit Fields         ------ */
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8_BBA_RES_TUNE_VAL_8_MASK (0xFU)                             /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8.BBA_RES_TUNE_VAL_8 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8_BBA_RES_TUNE_VAL_8_SHIFT (0U)                              /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8.BBA_RES_TUNE_VAL_8 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8_BBA_RES_TUNE_VAL_8(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8.BBA_RES_TUNE_VAL_8 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8_BBA_RES_TUNE_VAL_9_MASK (0xF0U)                            /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8.BBA_RES_TUNE_VAL_9 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8_BBA_RES_TUNE_VAL_9_SHIFT (4U)                              /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8.BBA_RES_TUNE_VAL_9 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8_BBA_RES_TUNE_VAL_9(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8.BBA_RES_TUNE_VAL_9 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8_BBA_RES_TUNE_VAL_10_MASK (0xF00U)                          /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8.BBA_RES_TUNE_VAL_10 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8_BBA_RES_TUNE_VAL_10_SHIFT (8U)                             /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8.BBA_RES_TUNE_VAL_10 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8_BBA_RES_TUNE_VAL_10(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_VAL_10_8.BBA_RES_TUNE_VAL_10 Field*/
/* ------- LNA_GAIN_LIN_VAL_2_0 Bit Fields          ------ */
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0_LNA_GAIN_LIN_VAL_0_MASK (0x3FFU)                            /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0.LNA_GAIN_LIN_VAL_0 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0_LNA_GAIN_LIN_VAL_0_SHIFT (0U)                               /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0.LNA_GAIN_LIN_VAL_0 Position*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0_LNA_GAIN_LIN_VAL_0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL) /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0.LNA_GAIN_LIN_VAL_0 Field*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0_LNA_GAIN_LIN_VAL_1_MASK (0xFFC00U)                          /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0.LNA_GAIN_LIN_VAL_1 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0_LNA_GAIN_LIN_VAL_1_SHIFT (10U)                              /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0.LNA_GAIN_LIN_VAL_1 Position*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0_LNA_GAIN_LIN_VAL_1(x) (((uint32_t)(((uint32_t)(x))<<10U))&0xFFC00UL) /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0.LNA_GAIN_LIN_VAL_1 Field*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0_LNA_GAIN_LIN_VAL_2_MASK (0x3FF00000U)                       /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0.LNA_GAIN_LIN_VAL_2 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0_LNA_GAIN_LIN_VAL_2_SHIFT (20U)                              /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0.LNA_GAIN_LIN_VAL_2 Position*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0_LNA_GAIN_LIN_VAL_2(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x3FF00000UL) /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_2_0.LNA_GAIN_LIN_VAL_2 Field*/
/* ------- LNA_GAIN_LIN_VAL_5_3 Bit Fields          ------ */
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3_LNA_GAIN_LIN_VAL_3_MASK (0x3FFU)                            /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3.LNA_GAIN_LIN_VAL_3 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3_LNA_GAIN_LIN_VAL_3_SHIFT (0U)                               /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3.LNA_GAIN_LIN_VAL_3 Position*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3_LNA_GAIN_LIN_VAL_3(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL) /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3.LNA_GAIN_LIN_VAL_3 Field*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3_LNA_GAIN_LIN_VAL_4_MASK (0xFFC00U)                          /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3.LNA_GAIN_LIN_VAL_4 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3_LNA_GAIN_LIN_VAL_4_SHIFT (10U)                              /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3.LNA_GAIN_LIN_VAL_4 Position*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3_LNA_GAIN_LIN_VAL_4(x) (((uint32_t)(((uint32_t)(x))<<10U))&0xFFC00UL) /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3.LNA_GAIN_LIN_VAL_4 Field*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3_LNA_GAIN_LIN_VAL_5_MASK (0x3FF00000U)                       /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3.LNA_GAIN_LIN_VAL_5 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3_LNA_GAIN_LIN_VAL_5_SHIFT (20U)                              /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3.LNA_GAIN_LIN_VAL_5 Position*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3_LNA_GAIN_LIN_VAL_5(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x3FF00000UL) /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_5_3.LNA_GAIN_LIN_VAL_5 Field*/
/* ------- LNA_GAIN_LIN_VAL_8_6 Bit Fields          ------ */
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6_LNA_GAIN_LIN_VAL_6_MASK (0x3FFU)                            /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6.LNA_GAIN_LIN_VAL_6 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6_LNA_GAIN_LIN_VAL_6_SHIFT (0U)                               /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6.LNA_GAIN_LIN_VAL_6 Position*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6_LNA_GAIN_LIN_VAL_6(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL) /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6.LNA_GAIN_LIN_VAL_6 Field*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6_LNA_GAIN_LIN_VAL_7_MASK (0xFFC00U)                          /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6.LNA_GAIN_LIN_VAL_7 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6_LNA_GAIN_LIN_VAL_7_SHIFT (10U)                              /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6.LNA_GAIN_LIN_VAL_7 Position*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6_LNA_GAIN_LIN_VAL_7(x) (((uint32_t)(((uint32_t)(x))<<10U))&0xFFC00UL) /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6.LNA_GAIN_LIN_VAL_7 Field*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6_LNA_GAIN_LIN_VAL_8_MASK (0x3FF00000U)                       /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6.LNA_GAIN_LIN_VAL_8 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6_LNA_GAIN_LIN_VAL_8_SHIFT (20U)                              /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6.LNA_GAIN_LIN_VAL_8 Position*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6_LNA_GAIN_LIN_VAL_8(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x3FF00000UL) /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_8_6.LNA_GAIN_LIN_VAL_8 Field*/
/* ------- LNA_GAIN_LIN_VAL_9 Bit Fields            ------ */
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_9_LNA_GAIN_LIN_VAL_9_MASK (0x3FFU)                              /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_9.LNA_GAIN_LIN_VAL_9 Mask*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_9_LNA_GAIN_LIN_VAL_9_SHIFT (0U)                                 /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_9.LNA_GAIN_LIN_VAL_9 Position*/
#define XCVR_RX_DIG_LNA_GAIN_LIN_VAL_9_LNA_GAIN_LIN_VAL_9(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL) /*!< XCVR_RX_DIG_LNA_GAIN_LIN_VAL_9.LNA_GAIN_LIN_VAL_9 Field*/
/* ------- BBA_RES_TUNE_LIN_VAL_3_0 Bit Fields      ------ */
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_0_MASK (0xFFU)                     /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_0 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_0_SHIFT (0U)                       /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_0 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_0 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_1_MASK (0xFF00U)                   /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_1 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_1_SHIFT (8U)                       /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_1 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_1(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_1 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_2_MASK (0xFF0000U)                 /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_2 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_2_SHIFT (16U)                      /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_2 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_2(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_2 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_3_MASK (0xFF000000U)               /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_3 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_3_SHIFT (24U)                      /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_3 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0_BBA_RES_TUNE_LIN_VAL_3(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_3_0.BBA_RES_TUNE_LIN_VAL_3 Field*/
/* ------- BBA_RES_TUNE_LIN_VAL_7_4 Bit Fields      ------ */
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_4_MASK (0xFFU)                     /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_4 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_4_SHIFT (0U)                       /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_4 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_4(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_4 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_5_MASK (0xFF00U)                   /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_5 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_5_SHIFT (8U)                       /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_5 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_5(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_5 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_6_MASK (0xFF0000U)                 /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_6 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_6_SHIFT (16U)                      /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_6 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_6(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_6 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_7_MASK (0xFF000000U)               /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_7 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_7_SHIFT (24U)                      /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_7 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4_BBA_RES_TUNE_LIN_VAL_7(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_7_4.BBA_RES_TUNE_LIN_VAL_7 Field*/
/* ------- BBA_RES_TUNE_LIN_VAL_10_8 Bit Fields     ------ */
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8_BBA_RES_TUNE_LIN_VAL_8_MASK (0x3FFU)                   /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8.BBA_RES_TUNE_LIN_VAL_8 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8_BBA_RES_TUNE_LIN_VAL_8_SHIFT (0U)                      /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8.BBA_RES_TUNE_LIN_VAL_8 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8_BBA_RES_TUNE_LIN_VAL_8(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8.BBA_RES_TUNE_LIN_VAL_8 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8_BBA_RES_TUNE_LIN_VAL_9_MASK (0xFFC00U)                 /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8.BBA_RES_TUNE_LIN_VAL_9 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8_BBA_RES_TUNE_LIN_VAL_9_SHIFT (10U)                     /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8.BBA_RES_TUNE_LIN_VAL_9 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8_BBA_RES_TUNE_LIN_VAL_9(x) (((uint32_t)(((uint32_t)(x))<<10U))&0xFFC00UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8.BBA_RES_TUNE_LIN_VAL_9 Field*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8_BBA_RES_TUNE_LIN_VAL_10_MASK (0x3FF00000U)             /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8.BBA_RES_TUNE_LIN_VAL_10 Mask*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8_BBA_RES_TUNE_LIN_VAL_10_SHIFT (20U)                    /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8.BBA_RES_TUNE_LIN_VAL_10 Position*/
#define XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8_BBA_RES_TUNE_LIN_VAL_10(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x3FF00000UL) /*!< XCVR_RX_DIG_BBA_RES_TUNE_LIN_VAL_10_8.BBA_RES_TUNE_LIN_VAL_10 Field*/
/* ------- AGC_GAIN_TBL_03_00 Bit Fields            ------ */
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_00_MASK (0xFU)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_00 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_00_SHIFT (0U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_00 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_00(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_00 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_00_MASK (0xF0U)                                      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_00 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_00_SHIFT (4U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_00 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_00(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_00 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_01_MASK (0xF00U)                                     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_01 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_01_SHIFT (8U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_01 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_01(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_01 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_01_MASK (0xF000U)                                    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_01 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_01_SHIFT (12U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_01 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_01(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_01 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_02_MASK (0xF0000U)                                   /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_02 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_02_SHIFT (16U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_02 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_02(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_02 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_02_MASK (0xF00000U)                                  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_02 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_02_SHIFT (20U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_02 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_02(x) (((uint32_t)(((uint32_t)(x))<<20U))&0xF00000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_02 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_03_MASK (0xF000000U)                                 /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_03 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_03_SHIFT (24U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_03 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_BBA_GAIN_03(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.BBA_GAIN_03 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_03_MASK (0xF0000000U)                                /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_03 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_03_SHIFT (28U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_03 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_03_00_LNA_GAIN_03(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_03_00.LNA_GAIN_03 Field*/
/* ------- AGC_GAIN_TBL_07_04 Bit Fields            ------ */
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_04_MASK (0xFU)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_04 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_04_SHIFT (0U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_04 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_04(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_04 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_04_MASK (0xF0U)                                      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_04 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_04_SHIFT (4U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_04 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_04(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_04 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_05_MASK (0xF00U)                                     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_05 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_05_SHIFT (8U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_05 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_05(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_05 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_05_MASK (0xF000U)                                    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_05 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_05_SHIFT (12U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_05 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_05(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_05 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_06_MASK (0xF0000U)                                   /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_06 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_06_SHIFT (16U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_06 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_06(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_06 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_06_MASK (0xF00000U)                                  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_06 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_06_SHIFT (20U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_06 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_06(x) (((uint32_t)(((uint32_t)(x))<<20U))&0xF00000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_06 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_07_MASK (0xF000000U)                                 /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_07 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_07_SHIFT (24U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_07 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_BBA_GAIN_07(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.BBA_GAIN_07 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_07_MASK (0xF0000000U)                                /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_07 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_07_SHIFT (28U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_07 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_07_04_LNA_GAIN_07(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_07_04.LNA_GAIN_07 Field*/
/* ------- AGC_GAIN_TBL_11_08 Bit Fields            ------ */
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_08_MASK (0xFU)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_08 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_08_SHIFT (0U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_08 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_08(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_08 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_08_MASK (0xF0U)                                      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_08 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_08_SHIFT (4U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_08 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_08(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_08 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_09_MASK (0xF00U)                                     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_09 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_09_SHIFT (8U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_09 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_09(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_09 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_09_MASK (0xF000U)                                    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_09 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_09_SHIFT (12U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_09 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_09(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_09 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_10_MASK (0xF0000U)                                   /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_10 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_10_SHIFT (16U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_10 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_10(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_10 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_10_MASK (0xF00000U)                                  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_10 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_10_SHIFT (20U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_10 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_10(x) (((uint32_t)(((uint32_t)(x))<<20U))&0xF00000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_10 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_11_MASK (0xF000000U)                                 /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_11 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_11_SHIFT (24U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_11 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_BBA_GAIN_11(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.BBA_GAIN_11 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_11_MASK (0xF0000000U)                                /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_11 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_11_SHIFT (28U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_11 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_11_08_LNA_GAIN_11(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_11_08.LNA_GAIN_11 Field*/
/* ------- AGC_GAIN_TBL_15_12 Bit Fields            ------ */
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_12_MASK (0xFU)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_12 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_12_SHIFT (0U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_12 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_12(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_12 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_12_MASK (0xF0U)                                      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_12 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_12_SHIFT (4U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_12 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_12(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_12 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_13_MASK (0xF00U)                                     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_13 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_13_SHIFT (8U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_13 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_13(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_13 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_13_MASK (0xF000U)                                    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_13 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_13_SHIFT (12U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_13 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_13(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_13 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_14_MASK (0xF0000U)                                   /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_14 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_14_SHIFT (16U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_14 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_14(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_14 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_14_MASK (0xF00000U)                                  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_14 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_14_SHIFT (20U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_14 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_14(x) (((uint32_t)(((uint32_t)(x))<<20U))&0xF00000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_14 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_15_MASK (0xF000000U)                                 /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_15 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_15_SHIFT (24U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_15 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_BBA_GAIN_15(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.BBA_GAIN_15 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_15_MASK (0xF0000000U)                                /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_15 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_15_SHIFT (28U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_15 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_15_12_LNA_GAIN_15(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_15_12.LNA_GAIN_15 Field*/
/* ------- AGC_GAIN_TBL_19_16 Bit Fields            ------ */
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_16_MASK (0xFU)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_16 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_16_SHIFT (0U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_16 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_16(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_16 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_16_MASK (0xF0U)                                      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_16 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_16_SHIFT (4U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_16 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_16(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_16 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_17_MASK (0xF00U)                                     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_17 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_17_SHIFT (8U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_17 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_17(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_17 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_17_MASK (0xF000U)                                    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_17 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_17_SHIFT (12U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_17 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_17(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_17 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_18_MASK (0xF0000U)                                   /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_18 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_18_SHIFT (16U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_18 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_18(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_18 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_18_MASK (0xF00000U)                                  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_18 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_18_SHIFT (20U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_18 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_18(x) (((uint32_t)(((uint32_t)(x))<<20U))&0xF00000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_18 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_19_MASK (0xF000000U)                                 /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_19 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_19_SHIFT (24U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_19 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_BBA_GAIN_19(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.BBA_GAIN_19 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_19_MASK (0xF0000000U)                                /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_19 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_19_SHIFT (28U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_19 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_19_16_LNA_GAIN_19(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_19_16.LNA_GAIN_19 Field*/
/* ------- AGC_GAIN_TBL_23_20 Bit Fields            ------ */
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_20_MASK (0xFU)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_20 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_20_SHIFT (0U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_20 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_20(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_20 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_20_MASK (0xF0U)                                      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_20 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_20_SHIFT (4U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_20 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_20(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_20 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_21_MASK (0xF00U)                                     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_21 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_21_SHIFT (8U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_21 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_21(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_21 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_21_MASK (0xF000U)                                    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_21 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_21_SHIFT (12U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_21 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_21(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_21 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_22_MASK (0xF0000U)                                   /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_22 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_22_SHIFT (16U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_22 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_22(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_22 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_22_MASK (0xF00000U)                                  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_22 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_22_SHIFT (20U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_22 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_22(x) (((uint32_t)(((uint32_t)(x))<<20U))&0xF00000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_22 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_23_MASK (0xF000000U)                                 /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_23 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_23_SHIFT (24U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_23 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_BBA_GAIN_23(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.BBA_GAIN_23 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_23_MASK (0xF0000000U)                                /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_23 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_23_SHIFT (28U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_23 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_23_20_LNA_GAIN_23(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_23_20.LNA_GAIN_23 Field*/
/* ------- AGC_GAIN_TBL_26_24 Bit Fields            ------ */
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_BBA_GAIN_24_MASK (0xFU)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.BBA_GAIN_24 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_BBA_GAIN_24_SHIFT (0U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.BBA_GAIN_24 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_BBA_GAIN_24(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.BBA_GAIN_24 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_LNA_GAIN_24_MASK (0xF0U)                                      /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.LNA_GAIN_24 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_LNA_GAIN_24_SHIFT (4U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.LNA_GAIN_24 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_LNA_GAIN_24(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.LNA_GAIN_24 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_BBA_GAIN_25_MASK (0xF00U)                                     /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.BBA_GAIN_25 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_BBA_GAIN_25_SHIFT (8U)                                        /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.BBA_GAIN_25 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_BBA_GAIN_25(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.BBA_GAIN_25 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_LNA_GAIN_25_MASK (0xF000U)                                    /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.LNA_GAIN_25 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_LNA_GAIN_25_SHIFT (12U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.LNA_GAIN_25 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_LNA_GAIN_25(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.LNA_GAIN_25 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_BBA_GAIN_26_MASK (0xF0000U)                                   /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.BBA_GAIN_26 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_BBA_GAIN_26_SHIFT (16U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.BBA_GAIN_26 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_BBA_GAIN_26(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.BBA_GAIN_26 Field*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_LNA_GAIN_26_MASK (0xF00000U)                                  /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.LNA_GAIN_26 Mask*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_LNA_GAIN_26_SHIFT (20U)                                       /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.LNA_GAIN_26 Position*/
#define XCVR_RX_DIG_AGC_GAIN_TBL_26_24_LNA_GAIN_26(x) (((uint32_t)(((uint32_t)(x))<<20U))&0xF00000UL) /*!< XCVR_RX_DIG_AGC_GAIN_TBL_26_24.LNA_GAIN_26 Field*/
/* ------- DCOC_OFFSET Bit Fields                   ------ */
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_BBA_OFFSET_I_MASK (0x3FU)                                       /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_BBA_OFFSET_I Mask*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_BBA_OFFSET_I_SHIFT (0U)                                         /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_BBA_OFFSET_I Position*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_BBA_OFFSET_I(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)      /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_BBA_OFFSET_I Field*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_BBA_OFFSET_Q_MASK (0x3F00U)                                     /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_BBA_OFFSET_Q Mask*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_BBA_OFFSET_Q_SHIFT (8U)                                         /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_BBA_OFFSET_Q Position*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_BBA_OFFSET_Q(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x3F00UL)    /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_BBA_OFFSET_Q Field*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_TZA_OFFSET_I_MASK (0xFF0000U)                                   /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_TZA_OFFSET_I Mask*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_TZA_OFFSET_I_SHIFT (16U)                                        /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_TZA_OFFSET_I Position*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_TZA_OFFSET_I(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_TZA_OFFSET_I Field*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_TZA_OFFSET_Q_MASK (0xFF000000U)                                 /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_TZA_OFFSET_Q Mask*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_TZA_OFFSET_Q_SHIFT (24U)                                        /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_TZA_OFFSET_Q Position*/
#define XCVR_RX_DIG_DCOC_OFFSET_DCOC_TZA_OFFSET_Q(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_RX_DIG_DCOC_OFFSET.DCOC_TZA_OFFSET_Q Field*/
/* ------- DCOC_BBA_STEP Bit Fields                 ------ */
#define XCVR_RX_DIG_DCOC_BBA_STEP_BBA_DCOC_STEP_RECIP_MASK (0x1FFFU)                                 /*!< XCVR_RX_DIG_DCOC_BBA_STEP.BBA_DCOC_STEP_RECIP Mask*/
#define XCVR_RX_DIG_DCOC_BBA_STEP_BBA_DCOC_STEP_RECIP_SHIFT (0U)                                     /*!< XCVR_RX_DIG_DCOC_BBA_STEP.BBA_DCOC_STEP_RECIP Position*/
#define XCVR_RX_DIG_DCOC_BBA_STEP_BBA_DCOC_STEP_RECIP(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL) /*!< XCVR_RX_DIG_DCOC_BBA_STEP.BBA_DCOC_STEP_RECIP Field*/
#define XCVR_RX_DIG_DCOC_BBA_STEP_BBA_DCOC_STEP_MASK (0x1FF0000U)                                    /*!< XCVR_RX_DIG_DCOC_BBA_STEP.BBA_DCOC_STEP Mask*/
#define XCVR_RX_DIG_DCOC_BBA_STEP_BBA_DCOC_STEP_SHIFT (16U)                                          /*!< XCVR_RX_DIG_DCOC_BBA_STEP.BBA_DCOC_STEP Position*/
#define XCVR_RX_DIG_DCOC_BBA_STEP_BBA_DCOC_STEP(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x1FF0000UL)  /*!< XCVR_RX_DIG_DCOC_BBA_STEP.BBA_DCOC_STEP Field*/
/* ------- DCOC_TZA_STEP Bit Fields                 ------ */
#define XCVR_RX_DIG_DCOC_TZA_STEP_DCOC_TZA_STEP_RCP_0_MASK (0x1FFFU)                                 /*!< XCVR_RX_DIG_DCOC_TZA_STEP.DCOC_TZA_STEP_RCP_0 Mask*/
#define XCVR_RX_DIG_DCOC_TZA_STEP_DCOC_TZA_STEP_RCP_0_SHIFT (0U)                                     /*!< XCVR_RX_DIG_DCOC_TZA_STEP.DCOC_TZA_STEP_RCP_0 Position*/
#define XCVR_RX_DIG_DCOC_TZA_STEP_DCOC_TZA_STEP_RCP_0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL) /*!< XCVR_RX_DIG_DCOC_TZA_STEP.DCOC_TZA_STEP_RCP_0 Field*/
#define XCVR_RX_DIG_DCOC_TZA_STEP_DCOC_TZA_STEP_GAIN_0_MASK (0xFFF0000U)                             /*!< XCVR_RX_DIG_DCOC_TZA_STEP.DCOC_TZA_STEP_GAIN_0 Mask*/
#define XCVR_RX_DIG_DCOC_TZA_STEP_DCOC_TZA_STEP_GAIN_0_SHIFT (16U)                                   /*!< XCVR_RX_DIG_DCOC_TZA_STEP.DCOC_TZA_STEP_GAIN_0 Position*/
#define XCVR_RX_DIG_DCOC_TZA_STEP_DCOC_TZA_STEP_GAIN_0(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFFF0000UL) /*!< XCVR_RX_DIG_DCOC_TZA_STEP.DCOC_TZA_STEP_GAIN_0 Field*/
/* ------- DCOC_CAL_ALPHA Bit Fields                ------ */
#define XCVR_RX_DIG_DCOC_CAL_ALPHA_DCOC_CAL_ALPHA_I_MASK (0x7FFU)                                    /*!< XCVR_RX_DIG_DCOC_CAL_ALPHA.DCOC_CAL_ALPHA_I Mask*/
#define XCVR_RX_DIG_DCOC_CAL_ALPHA_DCOC_CAL_ALPHA_I_SHIFT (0U)                                       /*!< XCVR_RX_DIG_DCOC_CAL_ALPHA.DCOC_CAL_ALPHA_I Position*/
#define XCVR_RX_DIG_DCOC_CAL_ALPHA_DCOC_CAL_ALPHA_I(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x7FFUL)   /*!< XCVR_RX_DIG_DCOC_CAL_ALPHA.DCOC_CAL_ALPHA_I Field*/
#define XCVR_RX_DIG_DCOC_CAL_ALPHA_DCOC_CAL_ALPHA_Q_MASK (0x7FF0000U)                                /*!< XCVR_RX_DIG_DCOC_CAL_ALPHA.DCOC_CAL_ALPHA_Q Mask*/
#define XCVR_RX_DIG_DCOC_CAL_ALPHA_DCOC_CAL_ALPHA_Q_SHIFT (16U)                                      /*!< XCVR_RX_DIG_DCOC_CAL_ALPHA.DCOC_CAL_ALPHA_Q Position*/
#define XCVR_RX_DIG_DCOC_CAL_ALPHA_DCOC_CAL_ALPHA_Q(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x7FF0000UL) /*!< XCVR_RX_DIG_DCOC_CAL_ALPHA.DCOC_CAL_ALPHA_Q Field*/
/* ------- DCOC_CAL_BETA_Q Bit Fields               ------ */
#define XCVR_RX_DIG_DCOC_CAL_BETA_Q_DCOC_CAL_BETA_Q_MASK (0x1FFFFU)                                  /*!< XCVR_RX_DIG_DCOC_CAL_BETA_Q.DCOC_CAL_BETA_Q Mask*/
#define XCVR_RX_DIG_DCOC_CAL_BETA_Q_DCOC_CAL_BETA_Q_SHIFT (0U)                                       /*!< XCVR_RX_DIG_DCOC_CAL_BETA_Q.DCOC_CAL_BETA_Q Position*/
#define XCVR_RX_DIG_DCOC_CAL_BETA_Q_DCOC_CAL_BETA_Q(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFFUL) /*!< XCVR_RX_DIG_DCOC_CAL_BETA_Q.DCOC_CAL_BETA_Q Field*/
/* ------- DCOC_CAL_BETA_I Bit Fields               ------ */
#define XCVR_RX_DIG_DCOC_CAL_BETA_I_DCOC_CAL_BETA_I_MASK (0x1FFFFU)                                  /*!< XCVR_RX_DIG_DCOC_CAL_BETA_I.DCOC_CAL_BETA_I Mask*/
#define XCVR_RX_DIG_DCOC_CAL_BETA_I_DCOC_CAL_BETA_I_SHIFT (0U)                                       /*!< XCVR_RX_DIG_DCOC_CAL_BETA_I.DCOC_CAL_BETA_I Position*/
#define XCVR_RX_DIG_DCOC_CAL_BETA_I_DCOC_CAL_BETA_I(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFFUL) /*!< XCVR_RX_DIG_DCOC_CAL_BETA_I.DCOC_CAL_BETA_I Field*/
/* ------- DCOC_CAL_GAMMA Bit Fields                ------ */
#define XCVR_RX_DIG_DCOC_CAL_GAMMA_DCOC_CAL_GAMMA_I_MASK (0xFFFFU)                                   /*!< XCVR_RX_DIG_DCOC_CAL_GAMMA.DCOC_CAL_GAMMA_I Mask*/
#define XCVR_RX_DIG_DCOC_CAL_GAMMA_DCOC_CAL_GAMMA_I_SHIFT (0U)                                       /*!< XCVR_RX_DIG_DCOC_CAL_GAMMA.DCOC_CAL_GAMMA_I Position*/
#define XCVR_RX_DIG_DCOC_CAL_GAMMA_DCOC_CAL_GAMMA_I(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)  /*!< XCVR_RX_DIG_DCOC_CAL_GAMMA.DCOC_CAL_GAMMA_I Field*/
#define XCVR_RX_DIG_DCOC_CAL_GAMMA_DCOC_CAL_GAMMA_Q_MASK (0xFFFF0000U)                               /*!< XCVR_RX_DIG_DCOC_CAL_GAMMA.DCOC_CAL_GAMMA_Q Mask*/
#define XCVR_RX_DIG_DCOC_CAL_GAMMA_DCOC_CAL_GAMMA_Q_SHIFT (16U)                                      /*!< XCVR_RX_DIG_DCOC_CAL_GAMMA.DCOC_CAL_GAMMA_Q Position*/
#define XCVR_RX_DIG_DCOC_CAL_GAMMA_DCOC_CAL_GAMMA_Q(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL) /*!< XCVR_RX_DIG_DCOC_CAL_GAMMA.DCOC_CAL_GAMMA_Q Field*/
/* ------- DCOC_CAL_IIR Bit Fields                  ------ */
#define XCVR_RX_DIG_DCOC_CAL_IIR_DCOC_CAL_IIR1A_IDX_MASK (0x3U)                                      /*!< XCVR_RX_DIG_DCOC_CAL_IIR.DCOC_CAL_IIR1A_IDX Mask*/
#define XCVR_RX_DIG_DCOC_CAL_IIR_DCOC_CAL_IIR1A_IDX_SHIFT (0U)                                       /*!< XCVR_RX_DIG_DCOC_CAL_IIR.DCOC_CAL_IIR1A_IDX Position*/
#define XCVR_RX_DIG_DCOC_CAL_IIR_DCOC_CAL_IIR1A_IDX(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3UL)     /*!< XCVR_RX_DIG_DCOC_CAL_IIR.DCOC_CAL_IIR1A_IDX Field*/
#define XCVR_RX_DIG_DCOC_CAL_IIR_DCOC_CAL_IIR2A_IDX_MASK (0xCU)                                      /*!< XCVR_RX_DIG_DCOC_CAL_IIR.DCOC_CAL_IIR2A_IDX Mask*/
#define XCVR_RX_DIG_DCOC_CAL_IIR_DCOC_CAL_IIR2A_IDX_SHIFT (2U)                                       /*!< XCVR_RX_DIG_DCOC_CAL_IIR.DCOC_CAL_IIR2A_IDX Position*/
#define XCVR_RX_DIG_DCOC_CAL_IIR_DCOC_CAL_IIR2A_IDX(x) (((uint32_t)(((uint32_t)(x))<<2U))&0xCUL)     /*!< XCVR_RX_DIG_DCOC_CAL_IIR.DCOC_CAL_IIR2A_IDX Field*/
#define XCVR_RX_DIG_DCOC_CAL_IIR_DCOC_CAL_IIR3A_IDX_MASK (0x30U)                                     /*!< XCVR_RX_DIG_DCOC_CAL_IIR.DCOC_CAL_IIR3A_IDX Mask*/
#define XCVR_RX_DIG_DCOC_CAL_IIR_DCOC_CAL_IIR3A_IDX_SHIFT (4U)                                       /*!< XCVR_RX_DIG_DCOC_CAL_IIR.DCOC_CAL_IIR3A_IDX Position*/
#define XCVR_RX_DIG_DCOC_CAL_IIR_DCOC_CAL_IIR3A_IDX(x) (((uint32_t)(((uint32_t)(x))<<4U))&0x30UL)    /*!< XCVR_RX_DIG_DCOC_CAL_IIR.DCOC_CAL_IIR3A_IDX Field*/
/* ------- DCOC_CAL Bit Fields                      ------ */
#define XCVR_RX_DIG_DCOC_CAL_DCOC_CAL_RES_I_MASK (0xFFFU)                                            /*!< XCVR_RX_DIG_DCOC_CAL.DCOC_CAL_RES_I Mask*/
#define XCVR_RX_DIG_DCOC_CAL_DCOC_CAL_RES_I_SHIFT (0U)                                               /*!< XCVR_RX_DIG_DCOC_CAL.DCOC_CAL_RES_I Position*/
#define XCVR_RX_DIG_DCOC_CAL_DCOC_CAL_RES_I(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFUL)         /*!< XCVR_RX_DIG_DCOC_CAL.DCOC_CAL_RES_I Field*/
#define XCVR_RX_DIG_DCOC_CAL_DCOC_CAL_RES_Q_MASK (0xFFF0000U)                                        /*!< XCVR_RX_DIG_DCOC_CAL.DCOC_CAL_RES_Q Mask*/
#define XCVR_RX_DIG_DCOC_CAL_DCOC_CAL_RES_Q_SHIFT (16U)                                              /*!< XCVR_RX_DIG_DCOC_CAL.DCOC_CAL_RES_Q Position*/
#define XCVR_RX_DIG_DCOC_CAL_DCOC_CAL_RES_Q(x)   (((uint32_t)(((uint32_t)(x))<<16U))&0xFFF0000UL)    /*!< XCVR_RX_DIG_DCOC_CAL.DCOC_CAL_RES_Q Field*/
/* ------- CCA_ED_LQI_CTRL_0 Bit Fields             ------ */
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_LQI_CORR_THRESH_MASK (0xFFU)                                   /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.LQI_CORR_THRESH Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_LQI_CORR_THRESH_SHIFT (0U)                                     /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.LQI_CORR_THRESH Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_LQI_CORR_THRESH(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)  /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.LQI_CORR_THRESH Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_CORR_CNTR_THRESH_MASK (0xFF00U)                                /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.CORR_CNTR_THRESH Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_CORR_CNTR_THRESH_SHIFT (8U)                                    /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.CORR_CNTR_THRESH Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_CORR_CNTR_THRESH(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.CORR_CNTR_THRESH Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_LQI_CNTR_MASK (0xFF0000U)                                      /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.LQI_CNTR Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_LQI_CNTR_SHIFT (16U)                                           /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.LQI_CNTR Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_LQI_CNTR(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)    /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.LQI_CNTR Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_SNR_ADJ_MASK (0x3F000000U)                                     /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.SNR_ADJ Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_SNR_ADJ_SHIFT (24U)                                            /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.SNR_ADJ Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_0_SNR_ADJ(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x3F000000UL)   /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_0.SNR_ADJ Field*/
/* ------- CCA_ED_LQI_CTRL_1 Bit Fields             ------ */
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_RSSI_NOISE_AVG_DELAY_MASK (0x3FU)                              /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.RSSI_NOISE_AVG_DELAY Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_RSSI_NOISE_AVG_DELAY_SHIFT (0U)                                /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.RSSI_NOISE_AVG_DELAY Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_RSSI_NOISE_AVG_DELAY(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.RSSI_NOISE_AVG_DELAY Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_RSSI_NOISE_AVG_FACTOR_MASK (0x1C0U)                            /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.RSSI_NOISE_AVG_FACTOR Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_RSSI_NOISE_AVG_FACTOR_SHIFT (6U)                               /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.RSSI_NOISE_AVG_FACTOR Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_RSSI_NOISE_AVG_FACTOR(x) (((uint32_t)(((uint32_t)(x))<<6U))&0x1C0UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.RSSI_NOISE_AVG_FACTOR Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_LQI_RSSI_WEIGHT_MASK (0xE00U)                                  /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.LQI_RSSI_WEIGHT Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_LQI_RSSI_WEIGHT_SHIFT (9U)                                     /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.LQI_RSSI_WEIGHT Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_LQI_RSSI_WEIGHT(x) (((uint32_t)(((uint32_t)(x))<<9U))&0xE00UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.LQI_RSSI_WEIGHT Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_LQI_RSSI_SENS_MASK (0xF000U)                                   /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.LQI_RSSI_SENS Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_LQI_RSSI_SENS_SHIFT (12U)                                      /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.LQI_RSSI_SENS Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_LQI_RSSI_SENS(x) (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.LQI_RSSI_SENS Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_SNR_LQI_DIS_MASK (0x10000U)                                    /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.SNR_LQI_DIS Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_SNR_LQI_DIS_SHIFT (16U)                                        /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.SNR_LQI_DIS Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_SNR_LQI_DIS(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)  /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.SNR_LQI_DIS Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_SEL_SNR_MODE_MASK (0x20000U)                                   /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.SEL_SNR_MODE Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_SEL_SNR_MODE_SHIFT (17U)                                       /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.SEL_SNR_MODE Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_SEL_SNR_MODE(x) (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.SEL_SNR_MODE Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_MEAS_TRANS_TO_IDLE_MASK (0x40000U)                             /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.MEAS_TRANS_TO_IDLE Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_MEAS_TRANS_TO_IDLE_SHIFT (18U)                                 /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.MEAS_TRANS_TO_IDLE Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_MEAS_TRANS_TO_IDLE(x) (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.MEAS_TRANS_TO_IDLE Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_CCA1_ED_EN_DIS_MASK (0x80000U)                                 /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.CCA1_ED_EN_DIS Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_CCA1_ED_EN_DIS_SHIFT (19U)                                     /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.CCA1_ED_EN_DIS Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_CCA1_ED_EN_DIS(x) (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.CCA1_ED_EN_DIS Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_MAN_MEAS_COMPLETE_MASK (0x100000U)                             /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.MAN_MEAS_COMPLETE Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_MAN_MEAS_COMPLETE_SHIFT (20U)                                  /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.MAN_MEAS_COMPLETE Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_MAN_MEAS_COMPLETE(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.MAN_MEAS_COMPLETE Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_MAN_AA_MATCH_MASK (0x200000U)                                  /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.MAN_AA_MATCH Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_MAN_AA_MATCH_SHIFT (21U)                                       /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.MAN_AA_MATCH Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_MAN_AA_MATCH(x) (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.MAN_AA_MATCH Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_SNR_LQI_WEIGHT_MASK (0xF000000U)                               /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.SNR_LQI_WEIGHT Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_SNR_LQI_WEIGHT_SHIFT (24U)                                     /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.SNR_LQI_WEIGHT Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_SNR_LQI_WEIGHT(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xF000000UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.SNR_LQI_WEIGHT Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_LQI_BIAS_MASK (0xF0000000U)                                    /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.LQI_BIAS Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_LQI_BIAS_SHIFT (28U)                                           /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.LQI_BIAS Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_CTRL_1_LQI_BIAS(x) (((uint32_t)(((uint32_t)(x))<<28U))&0xF0000000UL)  /*!< XCVR_RX_DIG_CCA_ED_LQI_CTRL_1.LQI_BIAS Field*/
/* ------- CCA_ED_LQI_STAT_0 Bit Fields             ------ */
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_LQI_OUT_MASK (0xFFU)                                           /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.LQI_OUT Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_LQI_OUT_SHIFT (0U)                                             /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.LQI_OUT Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_LQI_OUT(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.LQI_OUT Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_ED_OUT_MASK (0xFF00U)                                          /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.ED_OUT Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_ED_OUT_SHIFT (8U)                                              /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.ED_OUT Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_ED_OUT(x)  (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.ED_OUT Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_SNR_OUT_MASK (0xFF0000U)                                       /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.SNR_OUT Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_SNR_OUT_SHIFT (16U)                                            /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.SNR_OUT Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_SNR_OUT(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.SNR_OUT Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_CCA1_STATE_MASK (0x1000000U)                                   /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.CCA1_STATE Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_CCA1_STATE_SHIFT (24U)                                         /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.CCA1_STATE Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_CCA1_STATE(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.CCA1_STATE Field*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_MEAS_COMPLETE_MASK (0x2000000U)                                /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.MEAS_COMPLETE Mask*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_MEAS_COMPLETE_SHIFT (25U)                                      /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.MEAS_COMPLETE Position*/
#define XCVR_RX_DIG_CCA_ED_LQI_STAT_0_MEAS_COMPLETE(x) (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL) /*!< XCVR_RX_DIG_CCA_ED_LQI_STAT_0.MEAS_COMPLETE Field*/
/* ------- RX_CHF_COEF Bit Fields                   ------ */
#define XCVR_RX_DIG_RX_CHF_COEF_RX_CH_FILT_H0_MASK (0x3FU)                                           /*!< XCVR_RX_DIG_RX_CHF_COEF.RX_CH_FILT_H0 Mask*/
#define XCVR_RX_DIG_RX_CHF_COEF_RX_CH_FILT_H0_SHIFT (0U)                                             /*!< XCVR_RX_DIG_RX_CHF_COEF.RX_CH_FILT_H0 Position*/
#define XCVR_RX_DIG_RX_CHF_COEF_RX_CH_FILT_H0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< XCVR_RX_DIG_RX_CHF_COEF.RX_CH_FILT_H0 Field*/
/* ------- AGC_MAN_AGC_IDX Bit Fields               ------ */
#define XCVR_RX_DIG_AGC_MAN_AGC_IDX_AGC_MAN_IDX_MASK (0x1F0000U)                                     /*!< XCVR_RX_DIG_AGC_MAN_AGC_IDX.AGC_MAN_IDX Mask*/
#define XCVR_RX_DIG_AGC_MAN_AGC_IDX_AGC_MAN_IDX_SHIFT (16U)                                          /*!< XCVR_RX_DIG_AGC_MAN_AGC_IDX.AGC_MAN_IDX Position*/
#define XCVR_RX_DIG_AGC_MAN_AGC_IDX_AGC_MAN_IDX(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x1F0000UL)   /*!< XCVR_RX_DIG_AGC_MAN_AGC_IDX.AGC_MAN_IDX Field*/
#define XCVR_RX_DIG_AGC_MAN_AGC_IDX_AGC_MAN_IDX_EN_MASK (0x1000000U)                                 /*!< XCVR_RX_DIG_AGC_MAN_AGC_IDX.AGC_MAN_IDX_EN Mask*/
#define XCVR_RX_DIG_AGC_MAN_AGC_IDX_AGC_MAN_IDX_EN_SHIFT (24U)                                       /*!< XCVR_RX_DIG_AGC_MAN_AGC_IDX.AGC_MAN_IDX_EN Position*/
#define XCVR_RX_DIG_AGC_MAN_AGC_IDX_AGC_MAN_IDX_EN(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL) /*!< XCVR_RX_DIG_AGC_MAN_AGC_IDX.AGC_MAN_IDX_EN Field*/
#define XCVR_RX_DIG_AGC_MAN_AGC_IDX_AGC_DCOC_START_PT_MASK (0x2000000U)                              /*!< XCVR_RX_DIG_AGC_MAN_AGC_IDX.AGC_DCOC_START_PT Mask*/
#define XCVR_RX_DIG_AGC_MAN_AGC_IDX_AGC_DCOC_START_PT_SHIFT (25U)                                    /*!< XCVR_RX_DIG_AGC_MAN_AGC_IDX.AGC_DCOC_START_PT Position*/
#define XCVR_RX_DIG_AGC_MAN_AGC_IDX_AGC_DCOC_START_PT(x) (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL) /*!< XCVR_RX_DIG_AGC_MAN_AGC_IDX.AGC_DCOC_START_PT Field*/
/* ------- DC_RESID_CTRL Bit Fields                 ------ */
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_NWIN_MASK (0x7FU)                                         /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_NWIN Mask*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_NWIN_SHIFT (0U)                                           /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_NWIN Position*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_NWIN(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)        /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_NWIN Field*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_ITER_FREEZE_MASK (0xF00U)                                 /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_ITER_FREEZE Mask*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_ITER_FREEZE_SHIFT (8U)                                    /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_ITER_FREEZE Position*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_ITER_FREEZE(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL) /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_ITER_FREEZE Field*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_ALPHA_MASK (0x7000U)                                      /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_ALPHA Mask*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_ALPHA_SHIFT (12U)                                         /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_ALPHA Position*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_ALPHA(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x7000UL)    /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_ALPHA Field*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_DLY_MASK (0x70000U)                                       /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_DLY Mask*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_DLY_SHIFT (16U)                                           /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_DLY Position*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_DLY(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x70000UL)     /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_DLY Field*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_EXT_DC_EN_MASK (0x100000U)                                /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_EXT_DC_EN Mask*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_EXT_DC_EN_SHIFT (20U)                                     /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_EXT_DC_EN Position*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_EXT_DC_EN(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL) /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_EXT_DC_EN Field*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_MIN_AGC_IDX_MASK (0x1F000000U)                            /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_MIN_AGC_IDX Mask*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_MIN_AGC_IDX_SHIFT (24U)                                   /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_MIN_AGC_IDX Position*/
#define XCVR_RX_DIG_DC_RESID_CTRL_DC_RESID_MIN_AGC_IDX(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x1F000000UL) /*!< XCVR_RX_DIG_DC_RESID_CTRL.DC_RESID_MIN_AGC_IDX Field*/
/* ------- DC_RESID_EST Bit Fields                  ------ */
#define XCVR_RX_DIG_DC_RESID_EST_DC_RESID_OFFSET_I_MASK (0x1FFFU)                                    /*!< XCVR_RX_DIG_DC_RESID_EST.DC_RESID_OFFSET_I Mask*/
#define XCVR_RX_DIG_DC_RESID_EST_DC_RESID_OFFSET_I_SHIFT (0U)                                        /*!< XCVR_RX_DIG_DC_RESID_EST.DC_RESID_OFFSET_I Position*/
#define XCVR_RX_DIG_DC_RESID_EST_DC_RESID_OFFSET_I(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL)   /*!< XCVR_RX_DIG_DC_RESID_EST.DC_RESID_OFFSET_I Field*/
#define XCVR_RX_DIG_DC_RESID_EST_DC_RESID_OFFSET_Q_MASK (0x1FFF0000U)                                /*!< XCVR_RX_DIG_DC_RESID_EST.DC_RESID_OFFSET_Q Mask*/
#define XCVR_RX_DIG_DC_RESID_EST_DC_RESID_OFFSET_Q_SHIFT (16U)                                       /*!< XCVR_RX_DIG_DC_RESID_EST.DC_RESID_OFFSET_Q Position*/
#define XCVR_RX_DIG_DC_RESID_EST_DC_RESID_OFFSET_Q(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x1FFF0000UL) /*!< XCVR_RX_DIG_DC_RESID_EST.DC_RESID_OFFSET_Q Field*/
/* ------- RX_RCCAL_CTRL0 Bit Fields                ------ */
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_BBA_RCCAL_OFFSET_MASK (0xFU)                                      /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.BBA_RCCAL_OFFSET Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_BBA_RCCAL_OFFSET_SHIFT (0U)                                       /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.BBA_RCCAL_OFFSET Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_BBA_RCCAL_OFFSET(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)     /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.BBA_RCCAL_OFFSET Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_BBA_RCCAL_MANUAL_MASK (0x1F0U)                                    /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.BBA_RCCAL_MANUAL Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_BBA_RCCAL_MANUAL_SHIFT (4U)                                       /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.BBA_RCCAL_MANUAL Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_BBA_RCCAL_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<4U))&0x1F0UL)   /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.BBA_RCCAL_MANUAL Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_BBA_RCCAL_DIS_MASK (0x200U)                                       /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.BBA_RCCAL_DIS Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_BBA_RCCAL_DIS_SHIFT (9U)                                          /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.BBA_RCCAL_DIS Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_BBA_RCCAL_DIS(x) (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)      /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.BBA_RCCAL_DIS Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_RCCAL_SMP_DLY_MASK (0x3000U)                                      /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.RCCAL_SMP_DLY Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_RCCAL_SMP_DLY_SHIFT (12U)                                         /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.RCCAL_SMP_DLY Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_RCCAL_SMP_DLY(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x3000UL)    /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.RCCAL_SMP_DLY Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_RCCAL_COMP_INV_MASK (0x8000U)                                     /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.RCCAL_COMP_INV Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_RCCAL_COMP_INV_SHIFT (15U)                                        /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.RCCAL_COMP_INV Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_RCCAL_COMP_INV(x) (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)   /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.RCCAL_COMP_INV Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_TZA_RCCAL_OFFSET_MASK (0xF0000U)                                  /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.TZA_RCCAL_OFFSET Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_TZA_RCCAL_OFFSET_SHIFT (16U)                                      /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.TZA_RCCAL_OFFSET Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_TZA_RCCAL_OFFSET(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.TZA_RCCAL_OFFSET Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_TZA_RCCAL_MANUAL_MASK (0x1F00000U)                                /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.TZA_RCCAL_MANUAL Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_TZA_RCCAL_MANUAL_SHIFT (20U)                                      /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.TZA_RCCAL_MANUAL Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_TZA_RCCAL_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x1F00000UL) /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.TZA_RCCAL_MANUAL Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_TZA_RCCAL_DIS_MASK (0x2000000U)                                   /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.TZA_RCCAL_DIS Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_TZA_RCCAL_DIS_SHIFT (25U)                                         /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.TZA_RCCAL_DIS Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL0_TZA_RCCAL_DIS(x) (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL) /*!< XCVR_RX_DIG_RX_RCCAL_CTRL0.TZA_RCCAL_DIS Field*/
/* ------- RX_RCCAL_CTRL1 Bit Fields                ------ */
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_ADC_RCCAL_OFFSET_MASK (0xFU)                                      /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.ADC_RCCAL_OFFSET Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_ADC_RCCAL_OFFSET_SHIFT (0U)                                       /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.ADC_RCCAL_OFFSET Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_ADC_RCCAL_OFFSET(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)     /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.ADC_RCCAL_OFFSET Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_ADC_RCCAL_MANUAL_MASK (0x1F0U)                                    /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.ADC_RCCAL_MANUAL Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_ADC_RCCAL_MANUAL_SHIFT (4U)                                       /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.ADC_RCCAL_MANUAL Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_ADC_RCCAL_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<4U))&0x1F0UL)   /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.ADC_RCCAL_MANUAL Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_ADC_RCCAL_DIS_MASK (0x200U)                                       /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.ADC_RCCAL_DIS Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_ADC_RCCAL_DIS_SHIFT (9U)                                          /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.ADC_RCCAL_DIS Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_ADC_RCCAL_DIS(x) (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)      /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.ADC_RCCAL_DIS Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_BBA2_RCCAL_OFFSET_MASK (0xF0000U)                                 /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.BBA2_RCCAL_OFFSET Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_BBA2_RCCAL_OFFSET_SHIFT (16U)                                     /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.BBA2_RCCAL_OFFSET Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_BBA2_RCCAL_OFFSET(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xF0000UL) /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.BBA2_RCCAL_OFFSET Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_BBA2_RCCAL_MANUAL_MASK (0x1F00000U)                               /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.BBA2_RCCAL_MANUAL Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_BBA2_RCCAL_MANUAL_SHIFT (20U)                                     /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.BBA2_RCCAL_MANUAL Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_BBA2_RCCAL_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x1F00000UL) /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.BBA2_RCCAL_MANUAL Field*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_BBA2_RCCAL_DIS_MASK (0x2000000U)                                  /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.BBA2_RCCAL_DIS Mask*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_BBA2_RCCAL_DIS_SHIFT (25U)                                        /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.BBA2_RCCAL_DIS Position*/
#define XCVR_RX_DIG_RX_RCCAL_CTRL1_BBA2_RCCAL_DIS(x) (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL) /*!< XCVR_RX_DIG_RX_RCCAL_CTRL1.BBA2_RCCAL_DIS Field*/
/* ------- RX_RCCAL_STAT Bit Fields                 ------ */
#define XCVR_RX_DIG_RX_RCCAL_STAT_RCCAL_CODE_MASK (0x1FU)                                            /*!< XCVR_RX_DIG_RX_RCCAL_STAT.RCCAL_CODE Mask*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_RCCAL_CODE_SHIFT (0U)                                              /*!< XCVR_RX_DIG_RX_RCCAL_STAT.RCCAL_CODE Position*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_RCCAL_CODE(x)  (((uint32_t)(((uint32_t)(x))<<0U))&0x1FUL)          /*!< XCVR_RX_DIG_RX_RCCAL_STAT.RCCAL_CODE Field*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_ADC_RCCAL_MASK (0x3E0U)                                            /*!< XCVR_RX_DIG_RX_RCCAL_STAT.ADC_RCCAL Mask*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_ADC_RCCAL_SHIFT (5U)                                               /*!< XCVR_RX_DIG_RX_RCCAL_STAT.ADC_RCCAL Position*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_ADC_RCCAL(x)   (((uint32_t)(((uint32_t)(x))<<5U))&0x3E0UL)         /*!< XCVR_RX_DIG_RX_RCCAL_STAT.ADC_RCCAL Field*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_BBA2_RCCAL_MASK (0x7C00U)                                          /*!< XCVR_RX_DIG_RX_RCCAL_STAT.BBA2_RCCAL Mask*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_BBA2_RCCAL_SHIFT (10U)                                             /*!< XCVR_RX_DIG_RX_RCCAL_STAT.BBA2_RCCAL Position*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_BBA2_RCCAL(x)  (((uint32_t)(((uint32_t)(x))<<10U))&0x7C00UL)       /*!< XCVR_RX_DIG_RX_RCCAL_STAT.BBA2_RCCAL Field*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_BBA_RCCAL_MASK (0x1F0000U)                                         /*!< XCVR_RX_DIG_RX_RCCAL_STAT.BBA_RCCAL Mask*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_BBA_RCCAL_SHIFT (16U)                                              /*!< XCVR_RX_DIG_RX_RCCAL_STAT.BBA_RCCAL Position*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_BBA_RCCAL(x)   (((uint32_t)(((uint32_t)(x))<<16U))&0x1F0000UL)     /*!< XCVR_RX_DIG_RX_RCCAL_STAT.BBA_RCCAL Field*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_TZA_RCCAL_MASK (0x3E00000U)                                        /*!< XCVR_RX_DIG_RX_RCCAL_STAT.TZA_RCCAL Mask*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_TZA_RCCAL_SHIFT (21U)                                              /*!< XCVR_RX_DIG_RX_RCCAL_STAT.TZA_RCCAL Position*/
#define XCVR_RX_DIG_RX_RCCAL_STAT_TZA_RCCAL(x)   (((uint32_t)(((uint32_t)(x))<<21U))&0x3E00000UL)    /*!< XCVR_RX_DIG_RX_RCCAL_STAT.TZA_RCCAL Field*/
/* ------- AUXPLL_FCAL_CTRL Bit Fields              ------ */
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_DAC_CAL_ADJUST_MANUAL_MASK (0x7FU)                              /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.DAC_CAL_ADJUST_MANUAL Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_DAC_CAL_ADJUST_MANUAL_SHIFT (0U)                                /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.DAC_CAL_ADJUST_MANUAL Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_DAC_CAL_ADJUST_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL) /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.DAC_CAL_ADJUST_MANUAL Field*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_AUXPLL_DAC_CAL_ADJUST_DIS_MASK (0x80U)                          /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.AUXPLL_DAC_CAL_ADJUST_DIS Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_AUXPLL_DAC_CAL_ADJUST_DIS_SHIFT (7U)                            /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.AUXPLL_DAC_CAL_ADJUST_DIS Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_AUXPLL_DAC_CAL_ADJUST_DIS(x) (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL) /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.AUXPLL_DAC_CAL_ADJUST_DIS Field*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_FCAL_RUN_CNT_MASK (0x100U)                                      /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.FCAL_RUN_CNT Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_FCAL_RUN_CNT_SHIFT (8U)                                         /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.FCAL_RUN_CNT Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_FCAL_RUN_CNT(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)     /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.FCAL_RUN_CNT Field*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_FCAL_COMP_INV_MASK (0x200U)                                     /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.FCAL_COMP_INV Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_FCAL_COMP_INV_SHIFT (9U)                                        /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.FCAL_COMP_INV Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_FCAL_COMP_INV(x) (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)    /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.FCAL_COMP_INV Field*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_FCAL_SMP_DLY_MASK (0xC00U)                                      /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.FCAL_SMP_DLY Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_FCAL_SMP_DLY_SHIFT (10U)                                        /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.FCAL_SMP_DLY Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_FCAL_SMP_DLY(x) (((uint32_t)(((uint32_t)(x))<<10U))&0xC00UL)    /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.FCAL_SMP_DLY Field*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_DAC_CAL_ADJUST_MASK (0x7F0000U)                                 /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.DAC_CAL_ADJUST Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_DAC_CAL_ADJUST_SHIFT (16U)                                      /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.DAC_CAL_ADJUST Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CTRL_DAC_CAL_ADJUST(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x7F0000UL) /*!< XCVR_RX_DIG_AUXPLL_FCAL_CTRL.DAC_CAL_ADJUST Field*/
/* ------- AUXPLL_FCAL_CNT6 Bit Fields              ------ */
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT6_FCAL_COUNT_6_MASK (0x3FFU)                                      /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT6.FCAL_COUNT_6 Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT6_FCAL_COUNT_6_SHIFT (0U)                                         /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT6.FCAL_COUNT_6 Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT6_FCAL_COUNT_6(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)     /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT6.FCAL_COUNT_6 Field*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT6_FCAL_BESTDIFF_MASK (0x3FF0000U)                                 /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT6.FCAL_BESTDIFF Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT6_FCAL_BESTDIFF_SHIFT (16U)                                       /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT6.FCAL_BESTDIFF Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT6_FCAL_BESTDIFF(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x3FF0000UL) /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT6.FCAL_BESTDIFF Field*/
/* ------- AUXPLL_FCAL_CNT5_4 Bit Fields            ------ */
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4_FCAL_COUNT_4_MASK (0x3FFU)                                    /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4.FCAL_COUNT_4 Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4_FCAL_COUNT_4_SHIFT (0U)                                       /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4.FCAL_COUNT_4 Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4_FCAL_COUNT_4(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)   /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4.FCAL_COUNT_4 Field*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4_FCAL_COUNT_5_MASK (0x3FF0000U)                                /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4.FCAL_COUNT_5 Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4_FCAL_COUNT_5_SHIFT (16U)                                      /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4.FCAL_COUNT_5 Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4_FCAL_COUNT_5(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x3FF0000UL) /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT5_4.FCAL_COUNT_5 Field*/
/* ------- AUXPLL_FCAL_CNT3_2 Bit Fields            ------ */
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2_FCAL_COUNT_2_MASK (0x3FFU)                                    /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2.FCAL_COUNT_2 Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2_FCAL_COUNT_2_SHIFT (0U)                                       /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2.FCAL_COUNT_2 Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2_FCAL_COUNT_2(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)   /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2.FCAL_COUNT_2 Field*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2_FCAL_COUNT_3_MASK (0x3FF0000U)                                /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2.FCAL_COUNT_3 Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2_FCAL_COUNT_3_SHIFT (16U)                                      /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2.FCAL_COUNT_3 Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2_FCAL_COUNT_3(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x3FF0000UL) /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT3_2.FCAL_COUNT_3 Field*/
/* ------- AUXPLL_FCAL_CNT1_0 Bit Fields            ------ */
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0_FCAL_COUNT_0_MASK (0x3FFU)                                    /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0.FCAL_COUNT_0 Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0_FCAL_COUNT_0_SHIFT (0U)                                       /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0.FCAL_COUNT_0 Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0_FCAL_COUNT_0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)   /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0.FCAL_COUNT_0 Field*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0_FCAL_COUNT_1_MASK (0x3FF0000U)                                /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0.FCAL_COUNT_1 Mask*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0_FCAL_COUNT_1_SHIFT (16U)                                      /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0.FCAL_COUNT_1 Position*/
#define XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0_FCAL_COUNT_1(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x3FF0000UL) /*!< XCVR_RX_DIG_AUXPLL_FCAL_CNT1_0.FCAL_COUNT_1 Field*/
/* ------- RXDIG_DFT Bit Fields                     ------ */
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_FREQ_MASK (0x7U)                                              /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_FREQ Mask*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_FREQ_SHIFT (0U)                                               /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_FREQ Position*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_FREQ(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_FREQ Field*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_SCALE_MASK (0x8U)                                             /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_SCALE Mask*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_SCALE_SHIFT (3U)                                              /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_SCALE Position*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_SCALE(x)  (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_SCALE Field*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_TZA_EN_MASK (0x10U)                                           /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_TZA_EN Mask*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_TZA_EN_SHIFT (4U)                                             /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_TZA_EN Position*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_TZA_EN(x) (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_TZA_EN Field*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_BBA_EN_MASK (0x20U)                                           /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_BBA_EN Mask*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_BBA_EN_SHIFT (5U)                                             /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_BBA_EN Position*/
#define XCVR_RX_DIG_RXDIG_DFT_DFT_TONE_BBA_EN(x) (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_RX_DIG_RXDIG_DFT.DFT_TONE_BBA_EN Field*/
/**
 * @} */ /* End group XCVR_RX_DIG_Register_Masks_GROUP 
 */

/* XCVR_RX_DIG - Peripheral instance base addresses */
#define XCVR_RX_DIG_BasePtr            0x4005C000UL //!< Peripheral base address
#define XCVR_RX_DIG                    ((XCVR_RX_DIG_Type *) XCVR_RX_DIG_BasePtr) //!< Freescale base pointer
#define XCVR_RX_DIG_BASE_PTR           (XCVR_RX_DIG) //!< Freescale style base pointer
/**
 * @} */ /* End group XCVR_RX_DIG_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XCVR_TSM_Peripheral_access_layer_GROUP XCVR_TSM Peripheral Access Layer
* @brief C Struct for XCVR_TSM
* @{
*/

/* ================================================================================ */
/* ================           XCVR_TSM (file:XCVR_TSM_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief XCVR_TSM
 */
/**
* @addtogroup XCVR_TSM_structs_GROUP XCVR_TSM struct
* @brief Struct for XCVR_TSM
* @{
*/
typedef struct XCVR_TSM_Type {
   __IO uint32_t  CTRL;                         /**< 0000: TRANSCEIVER SEQUENCE MANAGER CONTROL                         */
   __IO uint32_t  END_OF_SEQ;                   /**< 0004: TSM END OF SEQUENCE                                          */
   __IO uint32_t  OVRD0;                        /**< 0008: TSM OVERRIDE REGISTER 0                                      */
   __IO uint32_t  OVRD1;                        /**< 000C: TSM OVERRIDE REGISTER 1                                      */
   __IO uint32_t  OVRD2;                        /**< 0010: TSM OVERRIDE REGISTER 2                                      */
   __IO uint32_t  OVRD3;                        /**< 0014: TSM OVERRIDE REGISTER 3                                      */
   __IO uint32_t  PA_POWER;                     /**< 0018: PA POWER                                                     */
   __IO uint32_t  PA_RAMP_TBL0;                 /**< 001C: PA RAMP TABLE 0                                              */
   __IO uint32_t  PA_RAMP_TBL1;                 /**< 0020: PA RAMP TABLE 1                                              */
   __IO uint32_t  RECYCLE_COUNT;                /**< 0024: TSM RECYCLE COUNT                                            */
   __IO uint32_t  FAST_CTRL1;                   /**< 0028: TSM FAST WARMUP CONTROL REGISTER 1                           */
   __IO uint32_t  FAST_CTRL2;                   /**< 002C: TSM FAST WARMUP CONTROL REGISTER 2                           */
   __IO uint32_t  TIMING00;                     /**< 0030: TSM_TIMING00                                                 */
   __IO uint32_t  TIMING01;                     /**< 0034: TSM_TIMING01                                                 */
   __IO uint32_t  TIMING02;                     /**< 0038: TSM_TIMING02                                                 */
   __IO uint32_t  TIMING03;                     /**< 003C: TSM_TIMING03                                                 */
   __IO uint32_t  TIMING04;                     /**< 0040: TSM_TIMING04                                                 */
   __IO uint32_t  TIMING05;                     /**< 0044: TSM_TIMING05                                                 */
   __IO uint32_t  TIMING06;                     /**< 0048: TSM_TIMING06                                                 */
   __IO uint32_t  TIMING07;                     /**< 004C: TSM_TIMING07                                                 */
   __IO uint32_t  TIMING08;                     /**< 0050: TSM_TIMING08                                                 */
   __IO uint32_t  TIMING09;                     /**< 0054: TSM_TIMING09                                                 */
   __IO uint32_t  TIMING10;                     /**< 0058: TSM_TIMING10                                                 */
   __IO uint32_t  TIMING11;                     /**< 005C: TSM_TIMING11                                                 */
   __IO uint32_t  TIMING12;                     /**< 0060: TSM_TIMING12                                                 */
   __IO uint32_t  TIMING13;                     /**< 0064: TSM_TIMING13                                                 */
   __IO uint32_t  TIMING14;                     /**< 0068: TSM_TIMING14                                                 */
   __IO uint32_t  TIMING15;                     /**< 006C: TSM_TIMING15                                                 */
   __IO uint32_t  TIMING16;                     /**< 0070: TSM_TIMING16                                                 */
   __IO uint32_t  TIMING17;                     /**< 0074: TSM_TIMING17                                                 */
   __IO uint32_t  TIMING18;                     /**< 0078: TSM_TIMING18                                                 */
   __IO uint32_t  TIMING19;                     /**< 007C: TSM_TIMING19                                                 */
   __IO uint32_t  TIMING20;                     /**< 0080: TSM_TIMING20                                                 */
   __IO uint32_t  TIMING21;                     /**< 0084: TSM_TIMING21                                                 */
   __IO uint32_t  TIMING22;                     /**< 0088: TSM_TIMING22                                                 */
   __IO uint32_t  TIMING23;                     /**< 008C: TSM_TIMING23                                                 */
   __IO uint32_t  TIMING24;                     /**< 0090: TSM_TIMING24                                                 */
   __IO uint32_t  TIMING25;                     /**< 0094: TSM_TIMING25                                                 */
   __IO uint32_t  TIMING26;                     /**< 0098: TSM_TIMING26                                                 */
   __IO uint32_t  TIMING27;                     /**< 009C: TSM_TIMING27                                                 */
   __IO uint32_t  TIMING28;                     /**< 00A0: TSM_TIMING28                                                 */
   __IO uint32_t  TIMING29;                     /**< 00A4: TSM_TIMING29                                                 */
   __IO uint32_t  TIMING30;                     /**< 00A8: TSM_TIMING30                                                 */
   __IO uint32_t  TIMING31;                     /**< 00AC: TSM_TIMING31                                                 */
   __IO uint32_t  TIMING32;                     /**< 00B0: TSM_TIMING32                                                 */
   __IO uint32_t  TIMING33;                     /**< 00B4: TSM_TIMING33                                                 */
   __IO uint32_t  TIMING34;                     /**< 00B8: TSM_TIMING34                                                 */
   __IO uint32_t  TIMING35;                     /**< 00BC: TSM_TIMING35                                                 */
   __IO uint32_t  TIMING36;                     /**< 00C0: TSM_TIMING36                                                 */
   __IO uint32_t  TIMING37;                     /**< 00C4: TSM_TIMING37                                                 */
   __IO uint32_t  TIMING38;                     /**< 00C8: TSM_TIMING38                                                 */
   __IO uint32_t  TIMING39;                     /**< 00CC: TSM_TIMING39                                                 */
   __IO uint32_t  TIMING40;                     /**< 00D0: TSM_TIMING40                                                 */
   __IO uint32_t  TIMING41;                     /**< 00D4: TSM_TIMING41                                                 */
   __IO uint32_t  TIMING42;                     /**< 00D8: TSM_TIMING42                                                 */
   __IO uint32_t  TIMING43;                     /**< 00DC: TSM_TIMING43                                                 */
   __IO uint32_t  TIMING44;                     /**< 00E0: TSM_TIMING44                                                 */
   __IO uint32_t  TIMING45;                     /**< 00E4: TSM_TIMING45                                                 */
   __IO uint32_t  TIMING46;                     /**< 00E8: TSM_TIMING46                                                 */
   __IO uint32_t  TIMING47;                     /**< 00EC: TSM_TIMING47                                                 */
   __IO uint32_t  TIMING48;                     /**< 00F0: TSM_TIMING48                                                 */
   __IO uint32_t  TIMING49;                     /**< 00F4: TSM_TIMING49                                                 */
   __IO uint32_t  TIMING50;                     /**< 00F8: TSM_TIMING50                                                 */
   __IO uint32_t  TIMING51;                     /**< 00FC: TSM_TIMING51                                                 */
   __IO uint32_t  TIMING52;                     /**< 0100: TSM_TIMING52                                                 */
   __IO uint32_t  TIMING53;                     /**< 0104: TSM_TIMING53                                                 */
   __IO uint32_t  TIMING54;                     /**< 0108: TSM_TIMING54                                                 */
   __IO uint32_t  TIMING55;                     /**< 010C: TSM_TIMING55                                                 */
   __IO uint32_t  TIMING56;                     /**< 0110: TSM_TIMING56                                                 */
   __IO uint32_t  TIMING57;                     /**< 0114: TSM_TIMING57                                                 */
   __IO uint32_t  TIMING58;                     /**< 0118: TSM_TIMING58                                                 */
} XCVR_TSM_Type;

/**
 * @} */ /* End group XCVR_TSM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XCVR_TSM' Position & Mask macros                    ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XCVR_TSM_Register_Masks_GROUP XCVR_TSM Register Masks
* @brief Register Masks for XCVR_TSM
* @{
*/
/* ------- CTRL Bit Fields                          ------ */
#define XCVR_TSM_CTRL_FORCE_TX_EN_MASK           (0x4U)                                              /*!< XCVR_TSM_CTRL.FORCE_TX_EN Mask          */
#define XCVR_TSM_CTRL_FORCE_TX_EN_SHIFT          (2U)                                                /*!< XCVR_TSM_CTRL.FORCE_TX_EN Position      */
#define XCVR_TSM_CTRL_FORCE_TX_EN(x)             (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_TSM_CTRL.FORCE_TX_EN Field         */
#define XCVR_TSM_CTRL_FORCE_RX_EN_MASK           (0x8U)                                              /*!< XCVR_TSM_CTRL.FORCE_RX_EN Mask          */
#define XCVR_TSM_CTRL_FORCE_RX_EN_SHIFT          (3U)                                                /*!< XCVR_TSM_CTRL.FORCE_RX_EN Position      */
#define XCVR_TSM_CTRL_FORCE_RX_EN(x)             (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_TSM_CTRL.FORCE_RX_EN Field         */
#define XCVR_TSM_CTRL_PA_RAMP_SEL_MASK           (0x30U)                                             /*!< XCVR_TSM_CTRL.PA_RAMP_SEL Mask          */
#define XCVR_TSM_CTRL_PA_RAMP_SEL_SHIFT          (4U)                                                /*!< XCVR_TSM_CTRL.PA_RAMP_SEL Position      */
#define XCVR_TSM_CTRL_PA_RAMP_SEL(x)             (((uint32_t)(((uint32_t)(x))<<4U))&0x30UL)          /*!< XCVR_TSM_CTRL.PA_RAMP_SEL Field         */
#define XCVR_TSM_CTRL_DATA_PADDING_EN_MASK       (0xC0U)                                             /*!< XCVR_TSM_CTRL.DATA_PADDING_EN Mask      */
#define XCVR_TSM_CTRL_DATA_PADDING_EN_SHIFT      (6U)                                                /*!< XCVR_TSM_CTRL.DATA_PADDING_EN Position  */
#define XCVR_TSM_CTRL_DATA_PADDING_EN(x)         (((uint32_t)(((uint32_t)(x))<<6U))&0xC0UL)          /*!< XCVR_TSM_CTRL.DATA_PADDING_EN Field     */
#define XCVR_TSM_CTRL_TSM_IRQ0_EN_MASK           (0x100U)                                            /*!< XCVR_TSM_CTRL.TSM_IRQ0_EN Mask          */
#define XCVR_TSM_CTRL_TSM_IRQ0_EN_SHIFT          (8U)                                                /*!< XCVR_TSM_CTRL.TSM_IRQ0_EN Position      */
#define XCVR_TSM_CTRL_TSM_IRQ0_EN(x)             (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< XCVR_TSM_CTRL.TSM_IRQ0_EN Field         */
#define XCVR_TSM_CTRL_TSM_IRQ1_EN_MASK           (0x200U)                                            /*!< XCVR_TSM_CTRL.TSM_IRQ1_EN Mask          */
#define XCVR_TSM_CTRL_TSM_IRQ1_EN_SHIFT          (9U)                                                /*!< XCVR_TSM_CTRL.TSM_IRQ1_EN Position      */
#define XCVR_TSM_CTRL_TSM_IRQ1_EN(x)             (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< XCVR_TSM_CTRL.TSM_IRQ1_EN Field         */
#define XCVR_TSM_CTRL_RAMP_DN_DELAY_MASK         (0xF000U)                                           /*!< XCVR_TSM_CTRL.RAMP_DN_DELAY Mask        */
#define XCVR_TSM_CTRL_RAMP_DN_DELAY_SHIFT        (12U)                                               /*!< XCVR_TSM_CTRL.RAMP_DN_DELAY Position    */
#define XCVR_TSM_CTRL_RAMP_DN_DELAY(x)           (((uint32_t)(((uint32_t)(x))<<12U))&0xF000UL)       /*!< XCVR_TSM_CTRL.RAMP_DN_DELAY Field       */
#define XCVR_TSM_CTRL_TX_ABORT_DIS_MASK          (0x10000U)                                          /*!< XCVR_TSM_CTRL.TX_ABORT_DIS Mask         */
#define XCVR_TSM_CTRL_TX_ABORT_DIS_SHIFT         (16U)                                               /*!< XCVR_TSM_CTRL.TX_ABORT_DIS Position     */
#define XCVR_TSM_CTRL_TX_ABORT_DIS(x)            (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< XCVR_TSM_CTRL.TX_ABORT_DIS Field        */
#define XCVR_TSM_CTRL_RX_ABORT_DIS_MASK          (0x20000U)                                          /*!< XCVR_TSM_CTRL.RX_ABORT_DIS Mask         */
#define XCVR_TSM_CTRL_RX_ABORT_DIS_SHIFT         (17U)                                               /*!< XCVR_TSM_CTRL.RX_ABORT_DIS Position     */
#define XCVR_TSM_CTRL_RX_ABORT_DIS(x)            (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< XCVR_TSM_CTRL.RX_ABORT_DIS Field        */
#define XCVR_TSM_CTRL_ABORT_ON_CTUNE_MASK        (0x40000U)                                          /*!< XCVR_TSM_CTRL.ABORT_ON_CTUNE Mask       */
#define XCVR_TSM_CTRL_ABORT_ON_CTUNE_SHIFT       (18U)                                               /*!< XCVR_TSM_CTRL.ABORT_ON_CTUNE Position   */
#define XCVR_TSM_CTRL_ABORT_ON_CTUNE(x)          (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< XCVR_TSM_CTRL.ABORT_ON_CTUNE Field      */
#define XCVR_TSM_CTRL_ABORT_ON_CYCLE_SLIP_MASK   (0x80000U)                                          /*!< XCVR_TSM_CTRL.ABORT_ON_CYCLE_SLIP Mask  */
#define XCVR_TSM_CTRL_ABORT_ON_CYCLE_SLIP_SHIFT  (19U)                                               /*!< XCVR_TSM_CTRL.ABORT_ON_CYCLE_SLIP Position*/
#define XCVR_TSM_CTRL_ABORT_ON_CYCLE_SLIP(x)     (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< XCVR_TSM_CTRL.ABORT_ON_CYCLE_SLIP Field */
#define XCVR_TSM_CTRL_ABORT_ON_FREQ_TARG_MASK    (0x100000U)                                         /*!< XCVR_TSM_CTRL.ABORT_ON_FREQ_TARG Mask   */
#define XCVR_TSM_CTRL_ABORT_ON_FREQ_TARG_SHIFT   (20U)                                               /*!< XCVR_TSM_CTRL.ABORT_ON_FREQ_TARG Position*/
#define XCVR_TSM_CTRL_ABORT_ON_FREQ_TARG(x)      (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< XCVR_TSM_CTRL.ABORT_ON_FREQ_TARG Field  */
#define XCVR_TSM_CTRL_BKPT_MASK                  (0xFF000000U)                                       /*!< XCVR_TSM_CTRL.BKPT Mask                 */
#define XCVR_TSM_CTRL_BKPT_SHIFT                 (24U)                                               /*!< XCVR_TSM_CTRL.BKPT Position             */
#define XCVR_TSM_CTRL_BKPT(x)                    (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_CTRL.BKPT Field                */
/* ------- END_OF_SEQ Bit Fields                    ------ */
#define XCVR_TSM_END_OF_SEQ_END_OF_TX_WU_MASK    (0xFFU)                                             /*!< XCVR_TSM_END_OF_SEQ.END_OF_TX_WU Mask   */
#define XCVR_TSM_END_OF_SEQ_END_OF_TX_WU_SHIFT   (0U)                                                /*!< XCVR_TSM_END_OF_SEQ.END_OF_TX_WU Position*/
#define XCVR_TSM_END_OF_SEQ_END_OF_TX_WU(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_END_OF_SEQ.END_OF_TX_WU Field  */
#define XCVR_TSM_END_OF_SEQ_END_OF_TX_WD_MASK    (0xFF00U)                                           /*!< XCVR_TSM_END_OF_SEQ.END_OF_TX_WD Mask   */
#define XCVR_TSM_END_OF_SEQ_END_OF_TX_WD_SHIFT   (8U)                                                /*!< XCVR_TSM_END_OF_SEQ.END_OF_TX_WD Position*/
#define XCVR_TSM_END_OF_SEQ_END_OF_TX_WD(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_END_OF_SEQ.END_OF_TX_WD Field  */
#define XCVR_TSM_END_OF_SEQ_END_OF_RX_WU_MASK    (0xFF0000U)                                         /*!< XCVR_TSM_END_OF_SEQ.END_OF_RX_WU Mask   */
#define XCVR_TSM_END_OF_SEQ_END_OF_RX_WU_SHIFT   (16U)                                               /*!< XCVR_TSM_END_OF_SEQ.END_OF_RX_WU Position*/
#define XCVR_TSM_END_OF_SEQ_END_OF_RX_WU(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_END_OF_SEQ.END_OF_RX_WU Field  */
#define XCVR_TSM_END_OF_SEQ_END_OF_RX_WD_MASK    (0xFF000000U)                                       /*!< XCVR_TSM_END_OF_SEQ.END_OF_RX_WD Mask   */
#define XCVR_TSM_END_OF_SEQ_END_OF_RX_WD_SHIFT   (24U)                                               /*!< XCVR_TSM_END_OF_SEQ.END_OF_RX_WD Position*/
#define XCVR_TSM_END_OF_SEQ_END_OF_RX_WD(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_END_OF_SEQ.END_OF_RX_WD Field  */
/* ------- OVRD0 Bit Fields                         ------ */
#define XCVR_TSM_OVRD0_BB_LDO_HF_EN_OVRD_EN_MASK (0x1U)                                              /*!< XCVR_TSM_OVRD0.BB_LDO_HF_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_HF_EN_OVRD_EN_SHIFT (0U)                                               /*!< XCVR_TSM_OVRD0.BB_LDO_HF_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_LDO_HF_EN_OVRD_EN(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_TSM_OVRD0.BB_LDO_HF_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_LDO_HF_EN_OVRD_MASK    (0x2U)                                              /*!< XCVR_TSM_OVRD0.BB_LDO_HF_EN_OVRD Mask   */
#define XCVR_TSM_OVRD0_BB_LDO_HF_EN_OVRD_SHIFT   (1U)                                                /*!< XCVR_TSM_OVRD0.BB_LDO_HF_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_LDO_HF_EN_OVRD(x)      (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_TSM_OVRD0.BB_LDO_HF_EN_OVRD Field  */
#define XCVR_TSM_OVRD0_BB_LDO_ADCDAC_EN_OVRD_EN_MASK (0x4U)                                          /*!< XCVR_TSM_OVRD0.BB_LDO_ADCDAC_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_ADCDAC_EN_OVRD_EN_SHIFT (2U)                                           /*!< XCVR_TSM_OVRD0.BB_LDO_ADCDAC_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_LDO_ADCDAC_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)         /*!< XCVR_TSM_OVRD0.BB_LDO_ADCDAC_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_LDO_ADCDAC_EN_OVRD_MASK (0x8U)                                             /*!< XCVR_TSM_OVRD0.BB_LDO_ADCDAC_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_ADCDAC_EN_OVRD_SHIFT (3U)                                              /*!< XCVR_TSM_OVRD0.BB_LDO_ADCDAC_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_LDO_ADCDAC_EN_OVRD(x)  (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_TSM_OVRD0.BB_LDO_ADCDAC_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_BB_LDO_BBA_EN_OVRD_EN_MASK (0x10U)                                            /*!< XCVR_TSM_OVRD0.BB_LDO_BBA_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_BBA_EN_OVRD_EN_SHIFT (4U)                                              /*!< XCVR_TSM_OVRD0.BB_LDO_BBA_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_LDO_BBA_EN_OVRD_EN(x)  (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_TSM_OVRD0.BB_LDO_BBA_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_LDO_BBA_EN_OVRD_MASK   (0x20U)                                             /*!< XCVR_TSM_OVRD0.BB_LDO_BBA_EN_OVRD Mask  */
#define XCVR_TSM_OVRD0_BB_LDO_BBA_EN_OVRD_SHIFT  (5U)                                                /*!< XCVR_TSM_OVRD0.BB_LDO_BBA_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_LDO_BBA_EN_OVRD(x)     (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_TSM_OVRD0.BB_LDO_BBA_EN_OVRD Field */
#define XCVR_TSM_OVRD0_BB_LDO_PD_EN_OVRD_EN_MASK (0x40U)                                             /*!< XCVR_TSM_OVRD0.BB_LDO_PD_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_PD_EN_OVRD_EN_SHIFT (6U)                                               /*!< XCVR_TSM_OVRD0.BB_LDO_PD_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_LDO_PD_EN_OVRD_EN(x)   (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_TSM_OVRD0.BB_LDO_PD_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_LDO_PD_EN_OVRD_MASK    (0x80U)                                             /*!< XCVR_TSM_OVRD0.BB_LDO_PD_EN_OVRD Mask   */
#define XCVR_TSM_OVRD0_BB_LDO_PD_EN_OVRD_SHIFT   (7U)                                                /*!< XCVR_TSM_OVRD0.BB_LDO_PD_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_LDO_PD_EN_OVRD(x)      (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_TSM_OVRD0.BB_LDO_PD_EN_OVRD Field  */
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_EN_OVRD_EN_MASK (0x100U)                                          /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_EN_OVRD_EN_SHIFT (8U)                                             /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_EN_OVRD_MASK  (0x200U)                                            /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_EN_OVRD Mask */
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_EN_OVRD_SHIFT (9U)                                                /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_EN_OVRD(x)    (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_EN_OVRD_EN_MASK (0x400U)                                         /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_EN_OVRD_EN_SHIFT (10U)                                           /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)       /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_EN_OVRD_MASK (0x800U)                                            /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_EN_OVRD_SHIFT (11U)                                              /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_EN_OVRD(x)   (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_BB_LDO_VTREF_EN_OVRD_EN_MASK (0x1000U)                                        /*!< XCVR_TSM_OVRD0.BB_LDO_VTREF_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_VTREF_EN_OVRD_EN_SHIFT (12U)                                           /*!< XCVR_TSM_OVRD0.BB_LDO_VTREF_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_LDO_VTREF_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)      /*!< XCVR_TSM_OVRD0.BB_LDO_VTREF_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_LDO_VTREF_EN_OVRD_MASK (0x2000U)                                           /*!< XCVR_TSM_OVRD0.BB_LDO_VTREF_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_VTREF_EN_OVRD_SHIFT (13U)                                              /*!< XCVR_TSM_OVRD0.BB_LDO_VTREF_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_LDO_VTREF_EN_OVRD(x)   (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< XCVR_TSM_OVRD0.BB_LDO_VTREF_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_BLEED_EN_OVRD_EN_MASK (0x4000U)                                   /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_BLEED_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_BLEED_EN_OVRD_EN_SHIFT (14U)                                      /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_BLEED_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_BLEED_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL) /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_BLEED_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_BLEED_EN_OVRD_MASK (0x8000U)                                      /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_BLEED_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_BLEED_EN_OVRD_SHIFT (15U)                                         /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_BLEED_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_LDO_FDBK_BLEED_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)    /*!< XCVR_TSM_OVRD0.BB_LDO_FDBK_BLEED_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_BLEED_EN_OVRD_EN_MASK (0x10000U)                                 /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_BLEED_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_BLEED_EN_OVRD_EN_SHIFT (16U)                                     /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_BLEED_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_BLEED_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL) /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_BLEED_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_BLEED_EN_OVRD_MASK (0x20000U)                                    /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_BLEED_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_BLEED_EN_OVRD_SHIFT (17U)                                        /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_BLEED_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_BLEED_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)  /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_BLEED_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_FASTCHARGE_EN_OVRD_EN_MASK (0x40000U)                            /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_FASTCHARGE_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_FASTCHARGE_EN_OVRD_EN_SHIFT (18U)                                /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_FASTCHARGE_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_FASTCHARGE_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL) /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_FASTCHARGE_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_FASTCHARGE_EN_OVRD_MASK (0x80000U)                               /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_FASTCHARGE_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_FASTCHARGE_EN_OVRD_SHIFT (19U)                                   /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_FASTCHARGE_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_LDO_VCOLO_FASTCHARGE_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL) /*!< XCVR_TSM_OVRD0.BB_LDO_VCOLO_FASTCHARGE_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_BB_XTAL_PLL_REF_CLK_EN_OVRD_EN_MASK (0x100000U)                               /*!< XCVR_TSM_OVRD0.BB_XTAL_PLL_REF_CLK_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_XTAL_PLL_REF_CLK_EN_OVRD_EN_SHIFT (20U)                                    /*!< XCVR_TSM_OVRD0.BB_XTAL_PLL_REF_CLK_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_XTAL_PLL_REF_CLK_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL) /*!< XCVR_TSM_OVRD0.BB_XTAL_PLL_REF_CLK_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_XTAL_PLL_REF_CLK_EN_OVRD_MASK (0x200000U)                                  /*!< XCVR_TSM_OVRD0.BB_XTAL_PLL_REF_CLK_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_BB_XTAL_PLL_REF_CLK_EN_OVRD_SHIFT (21U)                                       /*!< XCVR_TSM_OVRD0.BB_XTAL_PLL_REF_CLK_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_XTAL_PLL_REF_CLK_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL) /*!< XCVR_TSM_OVRD0.BB_XTAL_PLL_REF_CLK_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_BB_XTAL_DAC_REF_CLK_EN_OVRD_EN_MASK (0x400000U)                               /*!< XCVR_TSM_OVRD0.BB_XTAL_DAC_REF_CLK_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_XTAL_DAC_REF_CLK_EN_OVRD_EN_SHIFT (22U)                                    /*!< XCVR_TSM_OVRD0.BB_XTAL_DAC_REF_CLK_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_XTAL_DAC_REF_CLK_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL) /*!< XCVR_TSM_OVRD0.BB_XTAL_DAC_REF_CLK_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_XTAL_DAC_REF_CLK_EN_OVRD_MASK (0x800000U)                                  /*!< XCVR_TSM_OVRD0.BB_XTAL_DAC_REF_CLK_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_BB_XTAL_DAC_REF_CLK_EN_OVRD_SHIFT (23U)                                       /*!< XCVR_TSM_OVRD0.BB_XTAL_DAC_REF_CLK_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_XTAL_DAC_REF_CLK_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL) /*!< XCVR_TSM_OVRD0.BB_XTAL_DAC_REF_CLK_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_BB_XTAL_AUXPLL_REF_CLK_EN_OVRD_EN_MASK (0x1000000U)                           /*!< XCVR_TSM_OVRD0.BB_XTAL_AUXPLL_REF_CLK_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_BB_XTAL_AUXPLL_REF_CLK_EN_OVRD_EN_SHIFT (24U)                                 /*!< XCVR_TSM_OVRD0.BB_XTAL_AUXPLL_REF_CLK_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_BB_XTAL_AUXPLL_REF_CLK_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL) /*!< XCVR_TSM_OVRD0.BB_XTAL_AUXPLL_REF_CLK_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_BB_XTAL_AUXPLL_REF_CLK_EN_OVRD_MASK (0x2000000U)                              /*!< XCVR_TSM_OVRD0.BB_XTAL_AUXPLL_REF_CLK_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_BB_XTAL_AUXPLL_REF_CLK_EN_OVRD_SHIFT (25U)                                    /*!< XCVR_TSM_OVRD0.BB_XTAL_AUXPLL_REF_CLK_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_BB_XTAL_AUXPLL_REF_CLK_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL) /*!< XCVR_TSM_OVRD0.BB_XTAL_AUXPLL_REF_CLK_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_SY_VCO_AUTOTUNE_EN_OVRD_EN_MASK (0x4000000U)                                  /*!< XCVR_TSM_OVRD0.SY_VCO_AUTOTUNE_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_SY_VCO_AUTOTUNE_EN_OVRD_EN_SHIFT (26U)                                        /*!< XCVR_TSM_OVRD0.SY_VCO_AUTOTUNE_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_SY_VCO_AUTOTUNE_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL) /*!< XCVR_TSM_OVRD0.SY_VCO_AUTOTUNE_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_SY_VCO_AUTOTUNE_EN_OVRD_MASK (0x8000000U)                                     /*!< XCVR_TSM_OVRD0.SY_VCO_AUTOTUNE_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_SY_VCO_AUTOTUNE_EN_OVRD_SHIFT (27U)                                           /*!< XCVR_TSM_OVRD0.SY_VCO_AUTOTUNE_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_SY_VCO_AUTOTUNE_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)   /*!< XCVR_TSM_OVRD0.SY_VCO_AUTOTUNE_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_SY_PD_CYCLE_SLIP_LD_EN_OVRD_EN_MASK (0x10000000U)                             /*!< XCVR_TSM_OVRD0.SY_PD_CYCLE_SLIP_LD_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD0_SY_PD_CYCLE_SLIP_LD_EN_OVRD_EN_SHIFT (28U)                                    /*!< XCVR_TSM_OVRD0.SY_PD_CYCLE_SLIP_LD_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_SY_PD_CYCLE_SLIP_LD_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL) /*!< XCVR_TSM_OVRD0.SY_PD_CYCLE_SLIP_LD_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD0_SY_PD_CYCLE_SLIP_LD_EN_OVRD_MASK (0x20000000U)                                /*!< XCVR_TSM_OVRD0.SY_PD_CYCLE_SLIP_LD_EN_OVRD Mask*/
#define XCVR_TSM_OVRD0_SY_PD_CYCLE_SLIP_LD_EN_OVRD_SHIFT (29U)                                       /*!< XCVR_TSM_OVRD0.SY_PD_CYCLE_SLIP_LD_EN_OVRD Position*/
#define XCVR_TSM_OVRD0_SY_PD_CYCLE_SLIP_LD_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL) /*!< XCVR_TSM_OVRD0.SY_PD_CYCLE_SLIP_LD_EN_OVRD Field*/
#define XCVR_TSM_OVRD0_SY_VCO_EN_OVRD_EN_MASK    (0x40000000U)                                       /*!< XCVR_TSM_OVRD0.SY_VCO_EN_OVRD_EN Mask   */
#define XCVR_TSM_OVRD0_SY_VCO_EN_OVRD_EN_SHIFT   (30U)                                               /*!< XCVR_TSM_OVRD0.SY_VCO_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD0_SY_VCO_EN_OVRD_EN(x)      (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< XCVR_TSM_OVRD0.SY_VCO_EN_OVRD_EN Field  */
#define XCVR_TSM_OVRD0_SY_VCO_EN_OVRD_MASK       (0x80000000U)                                       /*!< XCVR_TSM_OVRD0.SY_VCO_EN_OVRD Mask      */
#define XCVR_TSM_OVRD0_SY_VCO_EN_OVRD_SHIFT      (31U)                                               /*!< XCVR_TSM_OVRD0.SY_VCO_EN_OVRD Position  */
#define XCVR_TSM_OVRD0_SY_VCO_EN_OVRD(x)         (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< XCVR_TSM_OVRD0.SY_VCO_EN_OVRD Field     */
/* ------- OVRD1 Bit Fields                         ------ */
#define XCVR_TSM_OVRD1_SY_LO_RX_BUF_EN_OVRD_EN_MASK (0x1U)                                           /*!< XCVR_TSM_OVRD1.SY_LO_RX_BUF_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD1_SY_LO_RX_BUF_EN_OVRD_EN_SHIFT (0U)                                            /*!< XCVR_TSM_OVRD1.SY_LO_RX_BUF_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_SY_LO_RX_BUF_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)          /*!< XCVR_TSM_OVRD1.SY_LO_RX_BUF_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_SY_LO_RX_BUF_EN_OVRD_MASK (0x2U)                                              /*!< XCVR_TSM_OVRD1.SY_LO_RX_BUF_EN_OVRD Mask*/
#define XCVR_TSM_OVRD1_SY_LO_RX_BUF_EN_OVRD_SHIFT (1U)                                               /*!< XCVR_TSM_OVRD1.SY_LO_RX_BUF_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_SY_LO_RX_BUF_EN_OVRD(x)   (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_TSM_OVRD1.SY_LO_RX_BUF_EN_OVRD Field*/
#define XCVR_TSM_OVRD1_SY_LO_TX_BUF_EN_OVRD_EN_MASK (0x4U)                                           /*!< XCVR_TSM_OVRD1.SY_LO_TX_BUF_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD1_SY_LO_TX_BUF_EN_OVRD_EN_SHIFT (2U)                                            /*!< XCVR_TSM_OVRD1.SY_LO_TX_BUF_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_SY_LO_TX_BUF_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)          /*!< XCVR_TSM_OVRD1.SY_LO_TX_BUF_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_SY_LO_TX_BUF_EN_OVRD_MASK (0x8U)                                              /*!< XCVR_TSM_OVRD1.SY_LO_TX_BUF_EN_OVRD Mask*/
#define XCVR_TSM_OVRD1_SY_LO_TX_BUF_EN_OVRD_SHIFT (3U)                                               /*!< XCVR_TSM_OVRD1.SY_LO_TX_BUF_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_SY_LO_TX_BUF_EN_OVRD(x)   (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_TSM_OVRD1.SY_LO_TX_BUF_EN_OVRD Field*/
#define XCVR_TSM_OVRD1_SY_DIVN_EN_OVRD_EN_MASK   (0x10U)                                             /*!< XCVR_TSM_OVRD1.SY_DIVN_EN_OVRD_EN Mask  */
#define XCVR_TSM_OVRD1_SY_DIVN_EN_OVRD_EN_SHIFT  (4U)                                                /*!< XCVR_TSM_OVRD1.SY_DIVN_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_SY_DIVN_EN_OVRD_EN(x)     (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_TSM_OVRD1.SY_DIVN_EN_OVRD_EN Field */
#define XCVR_TSM_OVRD1_SY_DIVN_EN_OVRD_MASK      (0x20U)                                             /*!< XCVR_TSM_OVRD1.SY_DIVN_EN_OVRD Mask     */
#define XCVR_TSM_OVRD1_SY_DIVN_EN_OVRD_SHIFT     (5U)                                                /*!< XCVR_TSM_OVRD1.SY_DIVN_EN_OVRD Position */
#define XCVR_TSM_OVRD1_SY_DIVN_EN_OVRD(x)        (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_TSM_OVRD1.SY_DIVN_EN_OVRD Field    */
#define XCVR_TSM_OVRD1_SY_PD_FILTER_CHARGE_EN_OVRD_EN_MASK (0x40U)                                   /*!< XCVR_TSM_OVRD1.SY_PD_FILTER_CHARGE_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD1_SY_PD_FILTER_CHARGE_EN_OVRD_EN_SHIFT (6U)                                     /*!< XCVR_TSM_OVRD1.SY_PD_FILTER_CHARGE_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_SY_PD_FILTER_CHARGE_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)  /*!< XCVR_TSM_OVRD1.SY_PD_FILTER_CHARGE_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_SY_PD_FILTER_CHARGE_EN_OVRD_MASK (0x80U)                                      /*!< XCVR_TSM_OVRD1.SY_PD_FILTER_CHARGE_EN_OVRD Mask*/
#define XCVR_TSM_OVRD1_SY_PD_FILTER_CHARGE_EN_OVRD_SHIFT (7U)                                        /*!< XCVR_TSM_OVRD1.SY_PD_FILTER_CHARGE_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_SY_PD_FILTER_CHARGE_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)     /*!< XCVR_TSM_OVRD1.SY_PD_FILTER_CHARGE_EN_OVRD Field*/
#define XCVR_TSM_OVRD1_SY_PD_EN_OVRD_EN_MASK     (0x100U)                                            /*!< XCVR_TSM_OVRD1.SY_PD_EN_OVRD_EN Mask    */
#define XCVR_TSM_OVRD1_SY_PD_EN_OVRD_EN_SHIFT    (8U)                                                /*!< XCVR_TSM_OVRD1.SY_PD_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_SY_PD_EN_OVRD_EN(x)       (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< XCVR_TSM_OVRD1.SY_PD_EN_OVRD_EN Field   */
#define XCVR_TSM_OVRD1_SY_PD_EN_OVRD_MASK        (0x200U)                                            /*!< XCVR_TSM_OVRD1.SY_PD_EN_OVRD Mask       */
#define XCVR_TSM_OVRD1_SY_PD_EN_OVRD_SHIFT       (9U)                                                /*!< XCVR_TSM_OVRD1.SY_PD_EN_OVRD Position   */
#define XCVR_TSM_OVRD1_SY_PD_EN_OVRD(x)          (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< XCVR_TSM_OVRD1.SY_PD_EN_OVRD Field      */
#define XCVR_TSM_OVRD1_SY_LO_DIVN_EN_OVRD_EN_MASK (0x400U)                                           /*!< XCVR_TSM_OVRD1.SY_LO_DIVN_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD1_SY_LO_DIVN_EN_OVRD_EN_SHIFT (10U)                                             /*!< XCVR_TSM_OVRD1.SY_LO_DIVN_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_SY_LO_DIVN_EN_OVRD_EN(x)  (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< XCVR_TSM_OVRD1.SY_LO_DIVN_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_SY_LO_DIVN_EN_OVRD_MASK   (0x800U)                                            /*!< XCVR_TSM_OVRD1.SY_LO_DIVN_EN_OVRD Mask  */
#define XCVR_TSM_OVRD1_SY_LO_DIVN_EN_OVRD_SHIFT  (11U)                                               /*!< XCVR_TSM_OVRD1.SY_LO_DIVN_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_SY_LO_DIVN_EN_OVRD(x)     (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< XCVR_TSM_OVRD1.SY_LO_DIVN_EN_OVRD Field */
#define XCVR_TSM_OVRD1_SY_LO_RX_EN_OVRD_EN_MASK  (0x1000U)                                           /*!< XCVR_TSM_OVRD1.SY_LO_RX_EN_OVRD_EN Mask */
#define XCVR_TSM_OVRD1_SY_LO_RX_EN_OVRD_EN_SHIFT (12U)                                               /*!< XCVR_TSM_OVRD1.SY_LO_RX_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_SY_LO_RX_EN_OVRD_EN(x)    (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< XCVR_TSM_OVRD1.SY_LO_RX_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_SY_LO_RX_EN_OVRD_MASK     (0x2000U)                                           /*!< XCVR_TSM_OVRD1.SY_LO_RX_EN_OVRD Mask    */
#define XCVR_TSM_OVRD1_SY_LO_RX_EN_OVRD_SHIFT    (13U)                                               /*!< XCVR_TSM_OVRD1.SY_LO_RX_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_SY_LO_RX_EN_OVRD(x)       (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< XCVR_TSM_OVRD1.SY_LO_RX_EN_OVRD Field   */
#define XCVR_TSM_OVRD1_SY_LO_TX_EN_OVRD_EN_MASK  (0x4000U)                                           /*!< XCVR_TSM_OVRD1.SY_LO_TX_EN_OVRD_EN Mask */
#define XCVR_TSM_OVRD1_SY_LO_TX_EN_OVRD_EN_SHIFT (14U)                                               /*!< XCVR_TSM_OVRD1.SY_LO_TX_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_SY_LO_TX_EN_OVRD_EN(x)    (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< XCVR_TSM_OVRD1.SY_LO_TX_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_SY_LO_TX_EN_OVRD_MASK     (0x8000U)                                           /*!< XCVR_TSM_OVRD1.SY_LO_TX_EN_OVRD Mask    */
#define XCVR_TSM_OVRD1_SY_LO_TX_EN_OVRD_SHIFT    (15U)                                               /*!< XCVR_TSM_OVRD1.SY_LO_TX_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_SY_LO_TX_EN_OVRD(x)       (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< XCVR_TSM_OVRD1.SY_LO_TX_EN_OVRD Field   */
#define XCVR_TSM_OVRD1_SY_DIVN_CAL_EN_OVRD_EN_MASK (0x10000U)                                        /*!< XCVR_TSM_OVRD1.SY_DIVN_CAL_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD1_SY_DIVN_CAL_EN_OVRD_EN_SHIFT (16U)                                            /*!< XCVR_TSM_OVRD1.SY_DIVN_CAL_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_SY_DIVN_CAL_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< XCVR_TSM_OVRD1.SY_DIVN_CAL_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_SY_DIVN_CAL_EN_OVRD_MASK  (0x20000U)                                          /*!< XCVR_TSM_OVRD1.SY_DIVN_CAL_EN_OVRD Mask */
#define XCVR_TSM_OVRD1_SY_DIVN_CAL_EN_OVRD_SHIFT (17U)                                               /*!< XCVR_TSM_OVRD1.SY_DIVN_CAL_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_SY_DIVN_CAL_EN_OVRD(x)    (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< XCVR_TSM_OVRD1.SY_DIVN_CAL_EN_OVRD Field*/
#define XCVR_TSM_OVRD1_RX_MIXER_EN_OVRD_EN_MASK  (0x40000U)                                          /*!< XCVR_TSM_OVRD1.RX_MIXER_EN_OVRD_EN Mask */
#define XCVR_TSM_OVRD1_RX_MIXER_EN_OVRD_EN_SHIFT (18U)                                               /*!< XCVR_TSM_OVRD1.RX_MIXER_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_RX_MIXER_EN_OVRD_EN(x)    (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< XCVR_TSM_OVRD1.RX_MIXER_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_RX_MIXER_EN_OVRD_MASK     (0x80000U)                                          /*!< XCVR_TSM_OVRD1.RX_MIXER_EN_OVRD Mask    */
#define XCVR_TSM_OVRD1_RX_MIXER_EN_OVRD_SHIFT    (19U)                                               /*!< XCVR_TSM_OVRD1.RX_MIXER_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_RX_MIXER_EN_OVRD(x)       (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< XCVR_TSM_OVRD1.RX_MIXER_EN_OVRD Field   */
#define XCVR_TSM_OVRD1_TX_PA_EN_OVRD_EN_MASK     (0x100000U)                                         /*!< XCVR_TSM_OVRD1.TX_PA_EN_OVRD_EN Mask    */
#define XCVR_TSM_OVRD1_TX_PA_EN_OVRD_EN_SHIFT    (20U)                                               /*!< XCVR_TSM_OVRD1.TX_PA_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_TX_PA_EN_OVRD_EN(x)       (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< XCVR_TSM_OVRD1.TX_PA_EN_OVRD_EN Field   */
#define XCVR_TSM_OVRD1_TX_PA_EN_OVRD_MASK        (0x200000U)                                         /*!< XCVR_TSM_OVRD1.TX_PA_EN_OVRD Mask       */
#define XCVR_TSM_OVRD1_TX_PA_EN_OVRD_SHIFT       (21U)                                               /*!< XCVR_TSM_OVRD1.TX_PA_EN_OVRD Position   */
#define XCVR_TSM_OVRD1_TX_PA_EN_OVRD(x)          (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< XCVR_TSM_OVRD1.TX_PA_EN_OVRD Field      */
#define XCVR_TSM_OVRD1_RX_ADC_I_EN_OVRD_EN_MASK  (0x400000U)                                         /*!< XCVR_TSM_OVRD1.RX_ADC_I_EN_OVRD_EN Mask */
#define XCVR_TSM_OVRD1_RX_ADC_I_EN_OVRD_EN_SHIFT (22U)                                               /*!< XCVR_TSM_OVRD1.RX_ADC_I_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_RX_ADC_I_EN_OVRD_EN(x)    (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< XCVR_TSM_OVRD1.RX_ADC_I_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_RX_ADC_I_EN_OVRD_MASK     (0x800000U)                                         /*!< XCVR_TSM_OVRD1.RX_ADC_I_EN_OVRD Mask    */
#define XCVR_TSM_OVRD1_RX_ADC_I_EN_OVRD_SHIFT    (23U)                                               /*!< XCVR_TSM_OVRD1.RX_ADC_I_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_RX_ADC_I_EN_OVRD(x)       (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< XCVR_TSM_OVRD1.RX_ADC_I_EN_OVRD Field   */
#define XCVR_TSM_OVRD1_RX_ADC_Q_EN_OVRD_EN_MASK  (0x1000000U)                                        /*!< XCVR_TSM_OVRD1.RX_ADC_Q_EN_OVRD_EN Mask */
#define XCVR_TSM_OVRD1_RX_ADC_Q_EN_OVRD_EN_SHIFT (24U)                                               /*!< XCVR_TSM_OVRD1.RX_ADC_Q_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_RX_ADC_Q_EN_OVRD_EN(x)    (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< XCVR_TSM_OVRD1.RX_ADC_Q_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_RX_ADC_Q_EN_OVRD_MASK     (0x2000000U)                                        /*!< XCVR_TSM_OVRD1.RX_ADC_Q_EN_OVRD Mask    */
#define XCVR_TSM_OVRD1_RX_ADC_Q_EN_OVRD_SHIFT    (25U)                                               /*!< XCVR_TSM_OVRD1.RX_ADC_Q_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_RX_ADC_Q_EN_OVRD(x)       (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< XCVR_TSM_OVRD1.RX_ADC_Q_EN_OVRD Field   */
#define XCVR_TSM_OVRD1_RX_ADC_RESET_EN_OVRD_EN_MASK (0x4000000U)                                     /*!< XCVR_TSM_OVRD1.RX_ADC_RESET_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD1_RX_ADC_RESET_EN_OVRD_EN_SHIFT (26U)                                           /*!< XCVR_TSM_OVRD1.RX_ADC_RESET_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_RX_ADC_RESET_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)   /*!< XCVR_TSM_OVRD1.RX_ADC_RESET_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_RX_ADC_RESET_EN_OVRD_MASK (0x8000000U)                                        /*!< XCVR_TSM_OVRD1.RX_ADC_RESET_EN_OVRD Mask*/
#define XCVR_TSM_OVRD1_RX_ADC_RESET_EN_OVRD_SHIFT (27U)                                              /*!< XCVR_TSM_OVRD1.RX_ADC_RESET_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_RX_ADC_RESET_EN_OVRD(x)   (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< XCVR_TSM_OVRD1.RX_ADC_RESET_EN_OVRD Field*/
#define XCVR_TSM_OVRD1_RX_BBA_I_EN_OVRD_EN_MASK  (0x10000000U)                                       /*!< XCVR_TSM_OVRD1.RX_BBA_I_EN_OVRD_EN Mask */
#define XCVR_TSM_OVRD1_RX_BBA_I_EN_OVRD_EN_SHIFT (28U)                                               /*!< XCVR_TSM_OVRD1.RX_BBA_I_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_RX_BBA_I_EN_OVRD_EN(x)    (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< XCVR_TSM_OVRD1.RX_BBA_I_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_RX_BBA_I_EN_OVRD_MASK     (0x20000000U)                                       /*!< XCVR_TSM_OVRD1.RX_BBA_I_EN_OVRD Mask    */
#define XCVR_TSM_OVRD1_RX_BBA_I_EN_OVRD_SHIFT    (29U)                                               /*!< XCVR_TSM_OVRD1.RX_BBA_I_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_RX_BBA_I_EN_OVRD(x)       (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< XCVR_TSM_OVRD1.RX_BBA_I_EN_OVRD Field   */
#define XCVR_TSM_OVRD1_RX_BBA_Q_EN_OVRD_EN_MASK  (0x40000000U)                                       /*!< XCVR_TSM_OVRD1.RX_BBA_Q_EN_OVRD_EN Mask */
#define XCVR_TSM_OVRD1_RX_BBA_Q_EN_OVRD_EN_SHIFT (30U)                                               /*!< XCVR_TSM_OVRD1.RX_BBA_Q_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD1_RX_BBA_Q_EN_OVRD_EN(x)    (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< XCVR_TSM_OVRD1.RX_BBA_Q_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD1_RX_BBA_Q_EN_OVRD_MASK     (0x80000000U)                                       /*!< XCVR_TSM_OVRD1.RX_BBA_Q_EN_OVRD Mask    */
#define XCVR_TSM_OVRD1_RX_BBA_Q_EN_OVRD_SHIFT    (31U)                                               /*!< XCVR_TSM_OVRD1.RX_BBA_Q_EN_OVRD Position*/
#define XCVR_TSM_OVRD1_RX_BBA_Q_EN_OVRD(x)       (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< XCVR_TSM_OVRD1.RX_BBA_Q_EN_OVRD Field   */
/* ------- OVRD2 Bit Fields                         ------ */
#define XCVR_TSM_OVRD2_RX_BBA_PDET_EN_OVRD_EN_MASK (0x1U)                                            /*!< XCVR_TSM_OVRD2.RX_BBA_PDET_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD2_RX_BBA_PDET_EN_OVRD_EN_SHIFT (0U)                                             /*!< XCVR_TSM_OVRD2.RX_BBA_PDET_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_RX_BBA_PDET_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_TSM_OVRD2.RX_BBA_PDET_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD2_RX_BBA_PDET_EN_OVRD_MASK  (0x2U)                                              /*!< XCVR_TSM_OVRD2.RX_BBA_PDET_EN_OVRD Mask */
#define XCVR_TSM_OVRD2_RX_BBA_PDET_EN_OVRD_SHIFT (1U)                                                /*!< XCVR_TSM_OVRD2.RX_BBA_PDET_EN_OVRD Position*/
#define XCVR_TSM_OVRD2_RX_BBA_PDET_EN_OVRD(x)    (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_TSM_OVRD2.RX_BBA_PDET_EN_OVRD Field*/
#define XCVR_TSM_OVRD2_RX_BBA_DCOC_EN_OVRD_EN_MASK (0x4U)                                            /*!< XCVR_TSM_OVRD2.RX_BBA_DCOC_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD2_RX_BBA_DCOC_EN_OVRD_EN_SHIFT (2U)                                             /*!< XCVR_TSM_OVRD2.RX_BBA_DCOC_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_RX_BBA_DCOC_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_TSM_OVRD2.RX_BBA_DCOC_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD2_RX_BBA_DCOC_EN_OVRD_MASK  (0x8U)                                              /*!< XCVR_TSM_OVRD2.RX_BBA_DCOC_EN_OVRD Mask */
#define XCVR_TSM_OVRD2_RX_BBA_DCOC_EN_OVRD_SHIFT (3U)                                                /*!< XCVR_TSM_OVRD2.RX_BBA_DCOC_EN_OVRD Position*/
#define XCVR_TSM_OVRD2_RX_BBA_DCOC_EN_OVRD(x)    (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_TSM_OVRD2.RX_BBA_DCOC_EN_OVRD Field*/
#define XCVR_TSM_OVRD2_RX_LNA_EN_OVRD_EN_MASK    (0x10U)                                             /*!< XCVR_TSM_OVRD2.RX_LNA_EN_OVRD_EN Mask   */
#define XCVR_TSM_OVRD2_RX_LNA_EN_OVRD_EN_SHIFT   (4U)                                                /*!< XCVR_TSM_OVRD2.RX_LNA_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_RX_LNA_EN_OVRD_EN(x)      (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_TSM_OVRD2.RX_LNA_EN_OVRD_EN Field  */
#define XCVR_TSM_OVRD2_RX_LNA_EN_OVRD_MASK       (0x20U)                                             /*!< XCVR_TSM_OVRD2.RX_LNA_EN_OVRD Mask      */
#define XCVR_TSM_OVRD2_RX_LNA_EN_OVRD_SHIFT      (5U)                                                /*!< XCVR_TSM_OVRD2.RX_LNA_EN_OVRD Position  */
#define XCVR_TSM_OVRD2_RX_LNA_EN_OVRD(x)         (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_TSM_OVRD2.RX_LNA_EN_OVRD Field     */
#define XCVR_TSM_OVRD2_RX_TZA_I_EN_OVRD_EN_MASK  (0x40U)                                             /*!< XCVR_TSM_OVRD2.RX_TZA_I_EN_OVRD_EN Mask */
#define XCVR_TSM_OVRD2_RX_TZA_I_EN_OVRD_EN_SHIFT (6U)                                                /*!< XCVR_TSM_OVRD2.RX_TZA_I_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_RX_TZA_I_EN_OVRD_EN(x)    (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_TSM_OVRD2.RX_TZA_I_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD2_RX_TZA_I_EN_OVRD_MASK     (0x80U)                                             /*!< XCVR_TSM_OVRD2.RX_TZA_I_EN_OVRD Mask    */
#define XCVR_TSM_OVRD2_RX_TZA_I_EN_OVRD_SHIFT    (7U)                                                /*!< XCVR_TSM_OVRD2.RX_TZA_I_EN_OVRD Position*/
#define XCVR_TSM_OVRD2_RX_TZA_I_EN_OVRD(x)       (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_TSM_OVRD2.RX_TZA_I_EN_OVRD Field   */
#define XCVR_TSM_OVRD2_RX_TZA_Q_EN_OVRD_EN_MASK  (0x100U)                                            /*!< XCVR_TSM_OVRD2.RX_TZA_Q_EN_OVRD_EN Mask */
#define XCVR_TSM_OVRD2_RX_TZA_Q_EN_OVRD_EN_SHIFT (8U)                                                /*!< XCVR_TSM_OVRD2.RX_TZA_Q_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_RX_TZA_Q_EN_OVRD_EN(x)    (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< XCVR_TSM_OVRD2.RX_TZA_Q_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD2_RX_TZA_Q_EN_OVRD_MASK     (0x200U)                                            /*!< XCVR_TSM_OVRD2.RX_TZA_Q_EN_OVRD Mask    */
#define XCVR_TSM_OVRD2_RX_TZA_Q_EN_OVRD_SHIFT    (9U)                                                /*!< XCVR_TSM_OVRD2.RX_TZA_Q_EN_OVRD Position*/
#define XCVR_TSM_OVRD2_RX_TZA_Q_EN_OVRD(x)       (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< XCVR_TSM_OVRD2.RX_TZA_Q_EN_OVRD Field   */
#define XCVR_TSM_OVRD2_RX_TZA_PDET_EN_OVRD_EN_MASK (0x400U)                                          /*!< XCVR_TSM_OVRD2.RX_TZA_PDET_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD2_RX_TZA_PDET_EN_OVRD_EN_SHIFT (10U)                                            /*!< XCVR_TSM_OVRD2.RX_TZA_PDET_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_RX_TZA_PDET_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< XCVR_TSM_OVRD2.RX_TZA_PDET_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD2_RX_TZA_PDET_EN_OVRD_MASK  (0x800U)                                            /*!< XCVR_TSM_OVRD2.RX_TZA_PDET_EN_OVRD Mask */
#define XCVR_TSM_OVRD2_RX_TZA_PDET_EN_OVRD_SHIFT (11U)                                               /*!< XCVR_TSM_OVRD2.RX_TZA_PDET_EN_OVRD Position*/
#define XCVR_TSM_OVRD2_RX_TZA_PDET_EN_OVRD(x)    (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< XCVR_TSM_OVRD2.RX_TZA_PDET_EN_OVRD Field*/
#define XCVR_TSM_OVRD2_RX_TZA_DCOC_EN_OVRD_EN_MASK (0x1000U)                                         /*!< XCVR_TSM_OVRD2.RX_TZA_DCOC_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD2_RX_TZA_DCOC_EN_OVRD_EN_SHIFT (12U)                                            /*!< XCVR_TSM_OVRD2.RX_TZA_DCOC_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_RX_TZA_DCOC_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< XCVR_TSM_OVRD2.RX_TZA_DCOC_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD2_RX_TZA_DCOC_EN_OVRD_MASK  (0x2000U)                                           /*!< XCVR_TSM_OVRD2.RX_TZA_DCOC_EN_OVRD Mask */
#define XCVR_TSM_OVRD2_RX_TZA_DCOC_EN_OVRD_SHIFT (13U)                                               /*!< XCVR_TSM_OVRD2.RX_TZA_DCOC_EN_OVRD Position*/
#define XCVR_TSM_OVRD2_RX_TZA_DCOC_EN_OVRD(x)    (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< XCVR_TSM_OVRD2.RX_TZA_DCOC_EN_OVRD Field*/
#define XCVR_TSM_OVRD2_PLL_DIG_EN_OVRD_EN_MASK   (0x4000U)                                           /*!< XCVR_TSM_OVRD2.PLL_DIG_EN_OVRD_EN Mask  */
#define XCVR_TSM_OVRD2_PLL_DIG_EN_OVRD_EN_SHIFT  (14U)                                               /*!< XCVR_TSM_OVRD2.PLL_DIG_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_PLL_DIG_EN_OVRD_EN(x)     (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< XCVR_TSM_OVRD2.PLL_DIG_EN_OVRD_EN Field */
#define XCVR_TSM_OVRD2_PLL_DIG_EN_OVRD_MASK      (0x8000U)                                           /*!< XCVR_TSM_OVRD2.PLL_DIG_EN_OVRD Mask     */
#define XCVR_TSM_OVRD2_PLL_DIG_EN_OVRD_SHIFT     (15U)                                               /*!< XCVR_TSM_OVRD2.PLL_DIG_EN_OVRD Position */
#define XCVR_TSM_OVRD2_PLL_DIG_EN_OVRD(x)        (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< XCVR_TSM_OVRD2.PLL_DIG_EN_OVRD Field    */
#define XCVR_TSM_OVRD2_TX_DIG_EN_OVRD_EN_MASK    (0x10000U)                                          /*!< XCVR_TSM_OVRD2.TX_DIG_EN_OVRD_EN Mask   */
#define XCVR_TSM_OVRD2_TX_DIG_EN_OVRD_EN_SHIFT   (16U)                                               /*!< XCVR_TSM_OVRD2.TX_DIG_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_TX_DIG_EN_OVRD_EN(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< XCVR_TSM_OVRD2.TX_DIG_EN_OVRD_EN Field  */
#define XCVR_TSM_OVRD2_TX_DIG_EN_OVRD_MASK       (0x20000U)                                          /*!< XCVR_TSM_OVRD2.TX_DIG_EN_OVRD Mask      */
#define XCVR_TSM_OVRD2_TX_DIG_EN_OVRD_SHIFT      (17U)                                               /*!< XCVR_TSM_OVRD2.TX_DIG_EN_OVRD Position  */
#define XCVR_TSM_OVRD2_TX_DIG_EN_OVRD(x)         (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< XCVR_TSM_OVRD2.TX_DIG_EN_OVRD Field     */
#define XCVR_TSM_OVRD2_RX_DIG_EN_OVRD_EN_MASK    (0x40000U)                                          /*!< XCVR_TSM_OVRD2.RX_DIG_EN_OVRD_EN Mask   */
#define XCVR_TSM_OVRD2_RX_DIG_EN_OVRD_EN_SHIFT   (18U)                                               /*!< XCVR_TSM_OVRD2.RX_DIG_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_RX_DIG_EN_OVRD_EN(x)      (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< XCVR_TSM_OVRD2.RX_DIG_EN_OVRD_EN Field  */
#define XCVR_TSM_OVRD2_RX_DIG_EN_OVRD_MASK       (0x80000U)                                          /*!< XCVR_TSM_OVRD2.RX_DIG_EN_OVRD Mask      */
#define XCVR_TSM_OVRD2_RX_DIG_EN_OVRD_SHIFT      (19U)                                               /*!< XCVR_TSM_OVRD2.RX_DIG_EN_OVRD Position  */
#define XCVR_TSM_OVRD2_RX_DIG_EN_OVRD(x)         (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< XCVR_TSM_OVRD2.RX_DIG_EN_OVRD Field     */
#define XCVR_TSM_OVRD2_RX_INIT_OVRD_EN_MASK      (0x100000U)                                         /*!< XCVR_TSM_OVRD2.RX_INIT_OVRD_EN Mask     */
#define XCVR_TSM_OVRD2_RX_INIT_OVRD_EN_SHIFT     (20U)                                               /*!< XCVR_TSM_OVRD2.RX_INIT_OVRD_EN Position */
#define XCVR_TSM_OVRD2_RX_INIT_OVRD_EN(x)        (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< XCVR_TSM_OVRD2.RX_INIT_OVRD_EN Field    */
#define XCVR_TSM_OVRD2_RX_INIT_OVRD_MASK         (0x200000U)                                         /*!< XCVR_TSM_OVRD2.RX_INIT_OVRD Mask        */
#define XCVR_TSM_OVRD2_RX_INIT_OVRD_SHIFT        (21U)                                               /*!< XCVR_TSM_OVRD2.RX_INIT_OVRD Position    */
#define XCVR_TSM_OVRD2_RX_INIT_OVRD(x)           (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< XCVR_TSM_OVRD2.RX_INIT_OVRD Field       */
#define XCVR_TSM_OVRD2_SIGMA_DELTA_EN_OVRD_EN_MASK (0x400000U)                                       /*!< XCVR_TSM_OVRD2.SIGMA_DELTA_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD2_SIGMA_DELTA_EN_OVRD_EN_SHIFT (22U)                                            /*!< XCVR_TSM_OVRD2.SIGMA_DELTA_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_SIGMA_DELTA_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< XCVR_TSM_OVRD2.SIGMA_DELTA_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD2_SIGMA_DELTA_EN_OVRD_MASK  (0x800000U)                                         /*!< XCVR_TSM_OVRD2.SIGMA_DELTA_EN_OVRD Mask */
#define XCVR_TSM_OVRD2_SIGMA_DELTA_EN_OVRD_SHIFT (23U)                                               /*!< XCVR_TSM_OVRD2.SIGMA_DELTA_EN_OVRD Position*/
#define XCVR_TSM_OVRD2_SIGMA_DELTA_EN_OVRD(x)    (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< XCVR_TSM_OVRD2.SIGMA_DELTA_EN_OVRD Field*/
#define XCVR_TSM_OVRD2_RX_PHY_EN_OVRD_EN_MASK    (0x1000000U)                                        /*!< XCVR_TSM_OVRD2.RX_PHY_EN_OVRD_EN Mask   */
#define XCVR_TSM_OVRD2_RX_PHY_EN_OVRD_EN_SHIFT   (24U)                                               /*!< XCVR_TSM_OVRD2.RX_PHY_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_RX_PHY_EN_OVRD_EN(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< XCVR_TSM_OVRD2.RX_PHY_EN_OVRD_EN Field  */
#define XCVR_TSM_OVRD2_RX_PHY_EN_OVRD_MASK       (0x2000000U)                                        /*!< XCVR_TSM_OVRD2.RX_PHY_EN_OVRD Mask      */
#define XCVR_TSM_OVRD2_RX_PHY_EN_OVRD_SHIFT      (25U)                                               /*!< XCVR_TSM_OVRD2.RX_PHY_EN_OVRD Position  */
#define XCVR_TSM_OVRD2_RX_PHY_EN_OVRD(x)         (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< XCVR_TSM_OVRD2.RX_PHY_EN_OVRD Field     */
#define XCVR_TSM_OVRD2_DCOC_EN_OVRD_EN_MASK      (0x4000000U)                                        /*!< XCVR_TSM_OVRD2.DCOC_EN_OVRD_EN Mask     */
#define XCVR_TSM_OVRD2_DCOC_EN_OVRD_EN_SHIFT     (26U)                                               /*!< XCVR_TSM_OVRD2.DCOC_EN_OVRD_EN Position */
#define XCVR_TSM_OVRD2_DCOC_EN_OVRD_EN(x)        (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< XCVR_TSM_OVRD2.DCOC_EN_OVRD_EN Field    */
#define XCVR_TSM_OVRD2_DCOC_EN_OVRD_MASK         (0x8000000U)                                        /*!< XCVR_TSM_OVRD2.DCOC_EN_OVRD Mask        */
#define XCVR_TSM_OVRD2_DCOC_EN_OVRD_SHIFT        (27U)                                               /*!< XCVR_TSM_OVRD2.DCOC_EN_OVRD Position    */
#define XCVR_TSM_OVRD2_DCOC_EN_OVRD(x)           (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< XCVR_TSM_OVRD2.DCOC_EN_OVRD Field       */
#define XCVR_TSM_OVRD2_DCOC_INIT_OVRD_EN_MASK    (0x10000000U)                                       /*!< XCVR_TSM_OVRD2.DCOC_INIT_OVRD_EN Mask   */
#define XCVR_TSM_OVRD2_DCOC_INIT_OVRD_EN_SHIFT   (28U)                                               /*!< XCVR_TSM_OVRD2.DCOC_INIT_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_DCOC_INIT_OVRD_EN(x)      (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< XCVR_TSM_OVRD2.DCOC_INIT_OVRD_EN Field  */
#define XCVR_TSM_OVRD2_DCOC_INIT_OVRD_MASK       (0x20000000U)                                       /*!< XCVR_TSM_OVRD2.DCOC_INIT_OVRD Mask      */
#define XCVR_TSM_OVRD2_DCOC_INIT_OVRD_SHIFT      (29U)                                               /*!< XCVR_TSM_OVRD2.DCOC_INIT_OVRD Position  */
#define XCVR_TSM_OVRD2_DCOC_INIT_OVRD(x)         (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< XCVR_TSM_OVRD2.DCOC_INIT_OVRD Field     */
#define XCVR_TSM_OVRD2_FREQ_TARG_LD_EN_OVRD_EN_MASK (0x40000000U)                                    /*!< XCVR_TSM_OVRD2.FREQ_TARG_LD_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD2_FREQ_TARG_LD_EN_OVRD_EN_SHIFT (30U)                                           /*!< XCVR_TSM_OVRD2.FREQ_TARG_LD_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD2_FREQ_TARG_LD_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)  /*!< XCVR_TSM_OVRD2.FREQ_TARG_LD_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD2_FREQ_TARG_LD_EN_OVRD_MASK (0x80000000U)                                       /*!< XCVR_TSM_OVRD2.FREQ_TARG_LD_EN_OVRD Mask*/
#define XCVR_TSM_OVRD2_FREQ_TARG_LD_EN_OVRD_SHIFT (31U)                                              /*!< XCVR_TSM_OVRD2.FREQ_TARG_LD_EN_OVRD Position*/
#define XCVR_TSM_OVRD2_FREQ_TARG_LD_EN_OVRD(x)   (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< XCVR_TSM_OVRD2.FREQ_TARG_LD_EN_OVRD Field*/
/* ------- OVRD3 Bit Fields                         ------ */
#define XCVR_TSM_OVRD3_TSM_SPARE0_EN_OVRD_EN_MASK (0x1U)                                             /*!< XCVR_TSM_OVRD3.TSM_SPARE0_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_TSM_SPARE0_EN_OVRD_EN_SHIFT (0U)                                              /*!< XCVR_TSM_OVRD3.TSM_SPARE0_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_TSM_SPARE0_EN_OVRD_EN(x)  (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_TSM_OVRD3.TSM_SPARE0_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_TSM_SPARE0_EN_OVRD_MASK   (0x2U)                                              /*!< XCVR_TSM_OVRD3.TSM_SPARE0_EN_OVRD Mask  */
#define XCVR_TSM_OVRD3_TSM_SPARE0_EN_OVRD_SHIFT  (1U)                                                /*!< XCVR_TSM_OVRD3.TSM_SPARE0_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_TSM_SPARE0_EN_OVRD(x)     (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_TSM_OVRD3.TSM_SPARE0_EN_OVRD Field */
#define XCVR_TSM_OVRD3_TSM_SPARE1_EN_OVRD_EN_MASK (0x4U)                                             /*!< XCVR_TSM_OVRD3.TSM_SPARE1_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_TSM_SPARE1_EN_OVRD_EN_SHIFT (2U)                                              /*!< XCVR_TSM_OVRD3.TSM_SPARE1_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_TSM_SPARE1_EN_OVRD_EN(x)  (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_TSM_OVRD3.TSM_SPARE1_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_TSM_SPARE1_EN_OVRD_MASK   (0x8U)                                              /*!< XCVR_TSM_OVRD3.TSM_SPARE1_EN_OVRD Mask  */
#define XCVR_TSM_OVRD3_TSM_SPARE1_EN_OVRD_SHIFT  (3U)                                                /*!< XCVR_TSM_OVRD3.TSM_SPARE1_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_TSM_SPARE1_EN_OVRD(x)     (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_TSM_OVRD3.TSM_SPARE1_EN_OVRD Field */
#define XCVR_TSM_OVRD3_TSM_SPARE2_EN_OVRD_EN_MASK (0x10U)                                            /*!< XCVR_TSM_OVRD3.TSM_SPARE2_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_TSM_SPARE2_EN_OVRD_EN_SHIFT (4U)                                              /*!< XCVR_TSM_OVRD3.TSM_SPARE2_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_TSM_SPARE2_EN_OVRD_EN(x)  (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< XCVR_TSM_OVRD3.TSM_SPARE2_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_TSM_SPARE2_EN_OVRD_MASK   (0x20U)                                             /*!< XCVR_TSM_OVRD3.TSM_SPARE2_EN_OVRD Mask  */
#define XCVR_TSM_OVRD3_TSM_SPARE2_EN_OVRD_SHIFT  (5U)                                                /*!< XCVR_TSM_OVRD3.TSM_SPARE2_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_TSM_SPARE2_EN_OVRD(x)     (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< XCVR_TSM_OVRD3.TSM_SPARE2_EN_OVRD Field */
#define XCVR_TSM_OVRD3_TSM_SPARE3_EN_OVRD_EN_MASK (0x40U)                                            /*!< XCVR_TSM_OVRD3.TSM_SPARE3_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_TSM_SPARE3_EN_OVRD_EN_SHIFT (6U)                                              /*!< XCVR_TSM_OVRD3.TSM_SPARE3_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_TSM_SPARE3_EN_OVRD_EN(x)  (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< XCVR_TSM_OVRD3.TSM_SPARE3_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_TSM_SPARE3_EN_OVRD_MASK   (0x80U)                                             /*!< XCVR_TSM_OVRD3.TSM_SPARE3_EN_OVRD Mask  */
#define XCVR_TSM_OVRD3_TSM_SPARE3_EN_OVRD_SHIFT  (7U)                                                /*!< XCVR_TSM_OVRD3.TSM_SPARE3_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_TSM_SPARE3_EN_OVRD(x)     (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_TSM_OVRD3.TSM_SPARE3_EN_OVRD Field */
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_BIAS_EN_OVRD_EN_MASK (0x100U)                                     /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_BIAS_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_BIAS_EN_OVRD_EN_SHIFT (8U)                                        /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_BIAS_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_BIAS_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)    /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_BIAS_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_BIAS_EN_OVRD_MASK (0x200U)                                        /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_BIAS_EN_OVRD Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_BIAS_EN_OVRD_SHIFT (9U)                                           /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_BIAS_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_BIAS_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)       /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_BIAS_EN_OVRD Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_VCO_EN_OVRD_EN_MASK (0x400U)                                      /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_VCO_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_VCO_EN_OVRD_EN_SHIFT (10U)                                        /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_VCO_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_VCO_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)    /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_VCO_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_VCO_EN_OVRD_MASK (0x800U)                                         /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_VCO_EN_OVRD Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_VCO_EN_OVRD_SHIFT (11U)                                           /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_VCO_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_VCO_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)       /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_VCO_EN_OVRD Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_FCAL_EN_OVRD_EN_MASK (0x1000U)                                    /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_FCAL_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_FCAL_EN_OVRD_EN_SHIFT (12U)                                       /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_FCAL_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_FCAL_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)  /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_FCAL_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_FCAL_EN_OVRD_MASK (0x2000U)                                       /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_FCAL_EN_OVRD Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_FCAL_EN_OVRD_SHIFT (13U)                                          /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_FCAL_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_FCAL_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)     /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_FCAL_EN_OVRD Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_LF_EN_OVRD_EN_MASK (0x4000U)                                      /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_LF_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_LF_EN_OVRD_EN_SHIFT (14U)                                         /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_LF_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_LF_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)    /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_LF_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_LF_EN_OVRD_MASK (0x8000U)                                         /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_LF_EN_OVRD Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_LF_EN_OVRD_SHIFT (15U)                                            /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_LF_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_LF_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_LF_EN_OVRD Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_EN_OVRD_EN_MASK (0x10000U)                                     /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_EN_OVRD_EN_SHIFT (16U)                                         /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)   /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_EN_OVRD_MASK (0x20000U)                                        /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_EN_OVRD Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_EN_OVRD_SHIFT (17U)                                            /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_EN_OVRD Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD_EN_MASK (0x40000U)                    /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD_EN_SHIFT (18U)                        /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL) /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD_MASK (0x80000U)                       /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD_SHIFT (19U)                           /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL) /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_OVRD Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_ADC_BUF_EN_OVRD_EN_MASK (0x100000U)                               /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_ADC_BUF_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_ADC_BUF_EN_OVRD_EN_SHIFT (20U)                                    /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_ADC_BUF_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_ADC_BUF_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL) /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_ADC_BUF_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_ADC_BUF_EN_OVRD_MASK (0x200000U)                                  /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_ADC_BUF_EN_OVRD Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_ADC_BUF_EN_OVRD_SHIFT (21U)                                       /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_ADC_BUF_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_ADC_BUF_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL) /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_ADC_BUF_EN_OVRD Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_DIG_BUF_EN_OVRD_EN_MASK (0x400000U)                               /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_DIG_BUF_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_DIG_BUF_EN_OVRD_EN_SHIFT (22U)                                    /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_DIG_BUF_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_DIG_BUF_EN_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL) /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_DIG_BUF_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_DIG_BUF_EN_OVRD_MASK (0x800000U)                                  /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_DIG_BUF_EN_OVRD Mask*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_DIG_BUF_EN_OVRD_SHIFT (23U)                                       /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_DIG_BUF_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_RXTX_AUXPLL_DIG_BUF_EN_OVRD(x) (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL) /*!< XCVR_TSM_OVRD3.RXTX_AUXPLL_DIG_BUF_EN_OVRD Field*/
#define XCVR_TSM_OVRD3_RXTX_RCCAL_EN_OVRD_EN_MASK (0x1000000U)                                       /*!< XCVR_TSM_OVRD3.RXTX_RCCAL_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_RXTX_RCCAL_EN_OVRD_EN_SHIFT (24U)                                             /*!< XCVR_TSM_OVRD3.RXTX_RCCAL_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_RXTX_RCCAL_EN_OVRD_EN(x)  (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< XCVR_TSM_OVRD3.RXTX_RCCAL_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_RXTX_RCCAL_EN_OVRD_MASK   (0x2000000U)                                        /*!< XCVR_TSM_OVRD3.RXTX_RCCAL_EN_OVRD Mask  */
#define XCVR_TSM_OVRD3_RXTX_RCCAL_EN_OVRD_SHIFT  (25U)                                               /*!< XCVR_TSM_OVRD3.RXTX_RCCAL_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_RXTX_RCCAL_EN_OVRD(x)     (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< XCVR_TSM_OVRD3.RXTX_RCCAL_EN_OVRD Field */
#define XCVR_TSM_OVRD3_TX_HPM_DAC_EN_OVRD_EN_MASK (0x4000000U)                                       /*!< XCVR_TSM_OVRD3.TX_HPM_DAC_EN_OVRD_EN Mask*/
#define XCVR_TSM_OVRD3_TX_HPM_DAC_EN_OVRD_EN_SHIFT (26U)                                             /*!< XCVR_TSM_OVRD3.TX_HPM_DAC_EN_OVRD_EN Position*/
#define XCVR_TSM_OVRD3_TX_HPM_DAC_EN_OVRD_EN(x)  (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< XCVR_TSM_OVRD3.TX_HPM_DAC_EN_OVRD_EN Field*/
#define XCVR_TSM_OVRD3_TX_HPM_DAC_EN_OVRD_MASK   (0x8000000U)                                        /*!< XCVR_TSM_OVRD3.TX_HPM_DAC_EN_OVRD Mask  */
#define XCVR_TSM_OVRD3_TX_HPM_DAC_EN_OVRD_SHIFT  (27U)                                               /*!< XCVR_TSM_OVRD3.TX_HPM_DAC_EN_OVRD Position*/
#define XCVR_TSM_OVRD3_TX_HPM_DAC_EN_OVRD(x)     (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< XCVR_TSM_OVRD3.TX_HPM_DAC_EN_OVRD Field */
#define XCVR_TSM_OVRD3_TX_MODE_OVRD_EN_MASK      (0x10000000U)                                       /*!< XCVR_TSM_OVRD3.TX_MODE_OVRD_EN Mask     */
#define XCVR_TSM_OVRD3_TX_MODE_OVRD_EN_SHIFT     (28U)                                               /*!< XCVR_TSM_OVRD3.TX_MODE_OVRD_EN Position */
#define XCVR_TSM_OVRD3_TX_MODE_OVRD_EN(x)        (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< XCVR_TSM_OVRD3.TX_MODE_OVRD_EN Field    */
#define XCVR_TSM_OVRD3_TX_MODE_OVRD_MASK         (0x20000000U)                                       /*!< XCVR_TSM_OVRD3.TX_MODE_OVRD Mask        */
#define XCVR_TSM_OVRD3_TX_MODE_OVRD_SHIFT        (29U)                                               /*!< XCVR_TSM_OVRD3.TX_MODE_OVRD Position    */
#define XCVR_TSM_OVRD3_TX_MODE_OVRD(x)           (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< XCVR_TSM_OVRD3.TX_MODE_OVRD Field       */
#define XCVR_TSM_OVRD3_RX_MODE_OVRD_EN_MASK      (0x40000000U)                                       /*!< XCVR_TSM_OVRD3.RX_MODE_OVRD_EN Mask     */
#define XCVR_TSM_OVRD3_RX_MODE_OVRD_EN_SHIFT     (30U)                                               /*!< XCVR_TSM_OVRD3.RX_MODE_OVRD_EN Position */
#define XCVR_TSM_OVRD3_RX_MODE_OVRD_EN(x)        (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< XCVR_TSM_OVRD3.RX_MODE_OVRD_EN Field    */
#define XCVR_TSM_OVRD3_RX_MODE_OVRD_MASK         (0x80000000U)                                       /*!< XCVR_TSM_OVRD3.RX_MODE_OVRD Mask        */
#define XCVR_TSM_OVRD3_RX_MODE_OVRD_SHIFT        (31U)                                               /*!< XCVR_TSM_OVRD3.RX_MODE_OVRD Position    */
#define XCVR_TSM_OVRD3_RX_MODE_OVRD(x)           (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< XCVR_TSM_OVRD3.RX_MODE_OVRD Field       */
/* ------- PA_POWER Bit Fields                      ------ */
#define XCVR_TSM_PA_POWER_PA_POWER_MASK          (0x3FU)                                             /*!< XCVR_TSM_PA_POWER.PA_POWER Mask         */
#define XCVR_TSM_PA_POWER_PA_POWER_SHIFT         (0U)                                                /*!< XCVR_TSM_PA_POWER.PA_POWER Position     */
#define XCVR_TSM_PA_POWER_PA_POWER(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< XCVR_TSM_PA_POWER.PA_POWER Field        */
/* ------- PA_RAMP_TBL0 Bit Fields                  ------ */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP0_MASK      (0x3FU)                                             /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP0 Mask     */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP0_SHIFT     (0U)                                                /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP0 Position */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP0(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP0 Field    */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP1_MASK      (0x3F00U)                                           /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP1 Mask     */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP1_SHIFT     (8U)                                                /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP1 Position */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP1(x)        (((uint32_t)(((uint32_t)(x))<<8U))&0x3F00UL)        /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP1 Field    */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP2_MASK      (0x3F0000U)                                         /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP2 Mask     */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP2_SHIFT     (16U)                                               /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP2 Position */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP2(x)        (((uint32_t)(((uint32_t)(x))<<16U))&0x3F0000UL)     /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP2 Field    */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP3_MASK      (0x3F000000U)                                       /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP3 Mask     */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP3_SHIFT     (24U)                                               /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP3 Position */
#define XCVR_TSM_PA_RAMP_TBL0_PA_RAMP3(x)        (((uint32_t)(((uint32_t)(x))<<24U))&0x3F000000UL)   /*!< XCVR_TSM_PA_RAMP_TBL0.PA_RAMP3 Field    */
/* ------- PA_RAMP_TBL1 Bit Fields                  ------ */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP4_MASK      (0x3FU)                                             /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP4 Mask     */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP4_SHIFT     (0U)                                                /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP4 Position */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP4(x)        (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP4 Field    */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP5_MASK      (0x3F00U)                                           /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP5 Mask     */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP5_SHIFT     (8U)                                                /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP5 Position */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP5(x)        (((uint32_t)(((uint32_t)(x))<<8U))&0x3F00UL)        /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP5 Field    */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP6_MASK      (0x3F0000U)                                         /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP6 Mask     */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP6_SHIFT     (16U)                                               /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP6 Position */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP6(x)        (((uint32_t)(((uint32_t)(x))<<16U))&0x3F0000UL)     /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP6 Field    */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP7_MASK      (0x3F000000U)                                       /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP7 Mask     */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP7_SHIFT     (24U)                                               /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP7 Position */
#define XCVR_TSM_PA_RAMP_TBL1_PA_RAMP7(x)        (((uint32_t)(((uint32_t)(x))<<24U))&0x3F000000UL)   /*!< XCVR_TSM_PA_RAMP_TBL1.PA_RAMP7 Field    */
/* ------- RECYCLE_COUNT Bit Fields                 ------ */
#define XCVR_TSM_RECYCLE_COUNT_RECYCLE_COUNT0_MASK (0xFFU)                                           /*!< XCVR_TSM_RECYCLE_COUNT.RECYCLE_COUNT0 Mask*/
#define XCVR_TSM_RECYCLE_COUNT_RECYCLE_COUNT0_SHIFT (0U)                                             /*!< XCVR_TSM_RECYCLE_COUNT.RECYCLE_COUNT0 Position*/
#define XCVR_TSM_RECYCLE_COUNT_RECYCLE_COUNT0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_RECYCLE_COUNT.RECYCLE_COUNT0 Field*/
#define XCVR_TSM_RECYCLE_COUNT_RECYCLE_COUNT1_MASK (0xFF00U)                                         /*!< XCVR_TSM_RECYCLE_COUNT.RECYCLE_COUNT1 Mask*/
#define XCVR_TSM_RECYCLE_COUNT_RECYCLE_COUNT1_SHIFT (8U)                                             /*!< XCVR_TSM_RECYCLE_COUNT.RECYCLE_COUNT1 Position*/
#define XCVR_TSM_RECYCLE_COUNT_RECYCLE_COUNT1(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_RECYCLE_COUNT.RECYCLE_COUNT1 Field*/
#define XCVR_TSM_RECYCLE_COUNT_RECYCLE_COUNT2_MASK (0xFF0000U)                                       /*!< XCVR_TSM_RECYCLE_COUNT.RECYCLE_COUNT2 Mask*/
#define XCVR_TSM_RECYCLE_COUNT_RECYCLE_COUNT2_SHIFT (16U)                                            /*!< XCVR_TSM_RECYCLE_COUNT.RECYCLE_COUNT2 Position*/
#define XCVR_TSM_RECYCLE_COUNT_RECYCLE_COUNT2(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_RECYCLE_COUNT.RECYCLE_COUNT2 Field*/
/* ------- FAST_CTRL1 Bit Fields                    ------ */
#define XCVR_TSM_FAST_CTRL1_FAST_TX_WU_EN_MASK   (0x1U)                                              /*!< XCVR_TSM_FAST_CTRL1.FAST_TX_WU_EN Mask  */
#define XCVR_TSM_FAST_CTRL1_FAST_TX_WU_EN_SHIFT  (0U)                                                /*!< XCVR_TSM_FAST_CTRL1.FAST_TX_WU_EN Position*/
#define XCVR_TSM_FAST_CTRL1_FAST_TX_WU_EN(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_TSM_FAST_CTRL1.FAST_TX_WU_EN Field */
#define XCVR_TSM_FAST_CTRL1_FAST_RX_WU_EN_MASK   (0x2U)                                              /*!< XCVR_TSM_FAST_CTRL1.FAST_RX_WU_EN Mask  */
#define XCVR_TSM_FAST_CTRL1_FAST_RX_WU_EN_SHIFT  (1U)                                                /*!< XCVR_TSM_FAST_CTRL1.FAST_RX_WU_EN Position*/
#define XCVR_TSM_FAST_CTRL1_FAST_RX_WU_EN(x)     (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_TSM_FAST_CTRL1.FAST_RX_WU_EN Field */
#define XCVR_TSM_FAST_CTRL1_FAST_RX2TX_EN_MASK   (0x4U)                                              /*!< XCVR_TSM_FAST_CTRL1.FAST_RX2TX_EN Mask  */
#define XCVR_TSM_FAST_CTRL1_FAST_RX2TX_EN_SHIFT  (2U)                                                /*!< XCVR_TSM_FAST_CTRL1.FAST_RX2TX_EN Position*/
#define XCVR_TSM_FAST_CTRL1_FAST_RX2TX_EN(x)     (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< XCVR_TSM_FAST_CTRL1.FAST_RX2TX_EN Field */
#define XCVR_TSM_FAST_CTRL1_FAST_WU_CLEAR_MASK   (0x8U)                                              /*!< XCVR_TSM_FAST_CTRL1.FAST_WU_CLEAR Mask  */
#define XCVR_TSM_FAST_CTRL1_FAST_WU_CLEAR_SHIFT  (3U)                                                /*!< XCVR_TSM_FAST_CTRL1.FAST_WU_CLEAR Position*/
#define XCVR_TSM_FAST_CTRL1_FAST_WU_CLEAR(x)     (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_TSM_FAST_CTRL1.FAST_WU_CLEAR Field */
#define XCVR_TSM_FAST_CTRL1_FAST_RX2TX_START_MASK (0xFF00U)                                          /*!< XCVR_TSM_FAST_CTRL1.FAST_RX2TX_START Mask*/
#define XCVR_TSM_FAST_CTRL1_FAST_RX2TX_START_SHIFT (8U)                                              /*!< XCVR_TSM_FAST_CTRL1.FAST_RX2TX_START Position*/
#define XCVR_TSM_FAST_CTRL1_FAST_RX2TX_START(x)  (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_FAST_CTRL1.FAST_RX2TX_START Field*/
/* ------- FAST_CTRL2 Bit Fields                    ------ */
#define XCVR_TSM_FAST_CTRL2_FAST_START_TX_MASK   (0xFFU)                                             /*!< XCVR_TSM_FAST_CTRL2.FAST_START_TX Mask  */
#define XCVR_TSM_FAST_CTRL2_FAST_START_TX_SHIFT  (0U)                                                /*!< XCVR_TSM_FAST_CTRL2.FAST_START_TX Position*/
#define XCVR_TSM_FAST_CTRL2_FAST_START_TX(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_FAST_CTRL2.FAST_START_TX Field */
#define XCVR_TSM_FAST_CTRL2_FAST_DEST_TX_MASK    (0xFF00U)                                           /*!< XCVR_TSM_FAST_CTRL2.FAST_DEST_TX Mask   */
#define XCVR_TSM_FAST_CTRL2_FAST_DEST_TX_SHIFT   (8U)                                                /*!< XCVR_TSM_FAST_CTRL2.FAST_DEST_TX Position*/
#define XCVR_TSM_FAST_CTRL2_FAST_DEST_TX(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_FAST_CTRL2.FAST_DEST_TX Field  */
#define XCVR_TSM_FAST_CTRL2_FAST_START_RX_MASK   (0xFF0000U)                                         /*!< XCVR_TSM_FAST_CTRL2.FAST_START_RX Mask  */
#define XCVR_TSM_FAST_CTRL2_FAST_START_RX_SHIFT  (16U)                                               /*!< XCVR_TSM_FAST_CTRL2.FAST_START_RX Position*/
#define XCVR_TSM_FAST_CTRL2_FAST_START_RX(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_FAST_CTRL2.FAST_START_RX Field */
#define XCVR_TSM_FAST_CTRL2_FAST_DEST_RX_MASK    (0xFF000000U)                                       /*!< XCVR_TSM_FAST_CTRL2.FAST_DEST_RX Mask   */
#define XCVR_TSM_FAST_CTRL2_FAST_DEST_RX_SHIFT   (24U)                                               /*!< XCVR_TSM_FAST_CTRL2.FAST_DEST_RX Position*/
#define XCVR_TSM_FAST_CTRL2_FAST_DEST_RX(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_FAST_CTRL2.FAST_DEST_RX Field  */
/* ------- TIMING00 Bit Fields                      ------ */
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_TX_HI_MASK (0xFFU)                                            /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_TX_HI_SHIFT (0U)                                              /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_TX_HI Position*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_TX_HI(x)  (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_TX_HI Field*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_TX_LO_MASK (0xFF00U)                                          /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_TX_LO_SHIFT (8U)                                              /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_TX_LO Position*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_TX_LO(x)  (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_TX_LO Field*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_RX_HI_MASK (0xFF0000U)                                        /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_RX_HI_SHIFT (16U)                                             /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_RX_HI Position*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_RX_HI(x)  (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_RX_HI Field*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_RX_LO_MASK (0xFF000000U)                                      /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_RX_LO_SHIFT (24U)                                             /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_RX_LO Position*/
#define XCVR_TSM_TIMING00_BB_LDO_HF_EN_RX_LO(x)  (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING00.BB_LDO_HF_EN_RX_LO Field*/
/* ------- TIMING01 Bit Fields                      ------ */
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_TX_HI_MASK (0xFFU)                                        /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_TX_HI_SHIFT (0U)                                          /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_TX_HI Position*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)       /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_TX_HI Field*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_TX_LO_MASK (0xFF00U)                                      /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_TX_LO_SHIFT (8U)                                          /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_TX_LO Position*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)     /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_TX_LO Field*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_RX_HI_MASK (0xFF0000U)                                    /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_RX_HI_SHIFT (16U)                                         /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_RX_HI Position*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)  /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_RX_HI Field*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_RX_LO_MASK (0xFF000000U)                                  /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_RX_LO_SHIFT (24U)                                         /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_RX_LO Position*/
#define XCVR_TSM_TIMING01_BB_LDO_ADCDAC_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING01.BB_LDO_ADCDAC_EN_RX_LO Field*/
/* ------- TIMING02 Bit Fields                      ------ */
#define XCVR_TSM_TIMING02_BB_LDO_BBA_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING02.BB_LDO_BBA_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING02_BB_LDO_BBA_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING02.BB_LDO_BBA_EN_RX_HI Position*/
#define XCVR_TSM_TIMING02_BB_LDO_BBA_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING02.BB_LDO_BBA_EN_RX_HI Field*/
#define XCVR_TSM_TIMING02_BB_LDO_BBA_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING02.BB_LDO_BBA_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING02_BB_LDO_BBA_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING02.BB_LDO_BBA_EN_RX_LO Position*/
#define XCVR_TSM_TIMING02_BB_LDO_BBA_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING02.BB_LDO_BBA_EN_RX_LO Field*/
/* ------- TIMING03 Bit Fields                      ------ */
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_TX_HI_MASK (0xFFU)                                            /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_TX_HI_SHIFT (0U)                                              /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_TX_HI Position*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_TX_HI(x)  (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_TX_HI Field*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_TX_LO_MASK (0xFF00U)                                          /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_TX_LO_SHIFT (8U)                                              /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_TX_LO Position*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_TX_LO(x)  (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_TX_LO Field*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_RX_HI_MASK (0xFF0000U)                                        /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_RX_HI_SHIFT (16U)                                             /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_RX_HI Position*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_RX_HI(x)  (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_RX_HI Field*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_RX_LO_MASK (0xFF000000U)                                      /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_RX_LO_SHIFT (24U)                                             /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_RX_LO Position*/
#define XCVR_TSM_TIMING03_BB_LDO_PD_EN_RX_LO(x)  (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING03.BB_LDO_PD_EN_RX_LO Field*/
/* ------- TIMING04 Bit Fields                      ------ */
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_TX_HI_MASK (0xFFU)                                          /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_TX_HI_SHIFT (0U)                                            /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_TX_HI Position*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)         /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_TX_HI Field*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_TX_LO_MASK (0xFF00U)                                        /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_TX_LO_SHIFT (8U)                                            /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_TX_LO Position*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)       /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_TX_LO Field*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_RX_HI_MASK (0xFF0000U)                                      /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_RX_HI_SHIFT (16U)                                           /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_RX_HI Position*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)    /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_RX_HI Field*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_RX_LO_MASK (0xFF000000U)                                    /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_RX_LO_SHIFT (24U)                                           /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_RX_LO Position*/
#define XCVR_TSM_TIMING04_BB_LDO_FDBK_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)  /*!< XCVR_TSM_TIMING04.BB_LDO_FDBK_EN_RX_LO Field*/
/* ------- TIMING05 Bit Fields                      ------ */
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_TX_HI_MASK (0xFFU)                                         /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_TX_HI_SHIFT (0U)                                           /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_TX_HI Position*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)        /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_TX_HI Field*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_TX_LO_MASK (0xFF00U)                                       /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_TX_LO_SHIFT (8U)                                           /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_TX_LO Position*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)      /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_TX_LO Field*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_RX_HI_MASK (0xFF0000U)                                     /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_RX_HI_SHIFT (16U)                                          /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_RX_HI Position*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)   /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_RX_HI Field*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_RX_LO_MASK (0xFF000000U)                                   /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_RX_LO_SHIFT (24U)                                          /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_RX_LO Position*/
#define XCVR_TSM_TIMING05_BB_LDO_VCOLO_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING05.BB_LDO_VCOLO_EN_RX_LO Field*/
/* ------- TIMING06 Bit Fields                      ------ */
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_TX_HI_MASK (0xFFU)                                         /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_TX_HI_SHIFT (0U)                                           /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_TX_HI Position*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)        /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_TX_HI Field*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_TX_LO_MASK (0xFF00U)                                       /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_TX_LO_SHIFT (8U)                                           /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_TX_LO Position*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)      /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_TX_LO Field*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_RX_HI_MASK (0xFF0000U)                                     /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_RX_HI_SHIFT (16U)                                          /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_RX_HI Position*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)   /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_RX_HI Field*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_RX_LO_MASK (0xFF000000U)                                   /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_RX_LO_SHIFT (24U)                                          /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_RX_LO Position*/
#define XCVR_TSM_TIMING06_BB_LDO_VTREF_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING06.BB_LDO_VTREF_EN_RX_LO Field*/
/* ------- TIMING07 Bit Fields                      ------ */
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_TX_HI_MASK (0xFFU)                                    /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_TX_HI_SHIFT (0U)                                      /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_TX_HI Position*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)   /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_TX_HI Field*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_TX_LO_MASK (0xFF00U)                                  /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_TX_LO_SHIFT (8U)                                      /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_TX_LO Position*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL) /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_TX_LO Field*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_RX_HI_MASK (0xFF0000U)                                /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_RX_HI_SHIFT (16U)                                     /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_RX_HI Position*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_RX_HI Field*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_RX_LO_MASK (0xFF000000U)                              /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_RX_LO_SHIFT (24U)                                     /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_RX_LO Position*/
#define XCVR_TSM_TIMING07_BB_LDO_FDBK_BLEED_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING07.BB_LDO_FDBK_BLEED_EN_RX_LO Field*/
/* ------- TIMING08 Bit Fields                      ------ */
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_TX_HI_MASK (0xFFU)                                   /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_TX_HI_SHIFT (0U)                                     /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_TX_HI Position*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)  /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_TX_HI Field*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_TX_LO_MASK (0xFF00U)                                 /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_TX_LO_SHIFT (8U)                                     /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_TX_LO Position*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL) /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_TX_LO Field*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_RX_HI_MASK (0xFF0000U)                               /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_RX_HI_SHIFT (16U)                                    /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_RX_HI Position*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_RX_HI Field*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_RX_LO_MASK (0xFF000000U)                             /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_RX_LO_SHIFT (24U)                                    /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_RX_LO Position*/
#define XCVR_TSM_TIMING08_BB_LDO_VCOLO_BLEED_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING08.BB_LDO_VCOLO_BLEED_EN_RX_LO Field*/
/* ------- TIMING09 Bit Fields                      ------ */
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_TX_HI_MASK (0xFFU)                              /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_TX_HI_SHIFT (0U)                                /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_TX_HI Position*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL) /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_TX_HI Field*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_TX_LO_MASK (0xFF00U)                            /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_TX_LO_SHIFT (8U)                                /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_TX_LO Position*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL) /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_TX_LO Field*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_RX_HI_MASK (0xFF0000U)                          /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_RX_HI_SHIFT (16U)                               /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_RX_HI Position*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_RX_HI Field*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_RX_LO_MASK (0xFF000000U)                        /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_RX_LO_SHIFT (24U)                               /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_RX_LO Position*/
#define XCVR_TSM_TIMING09_BB_LDO_VCOLO_FASTCHARGE_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING09.BB_LDO_VCOLO_FASTCHARGE_EN_RX_LO Field*/
/* ------- TIMING10 Bit Fields                      ------ */
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_TX_HI_MASK (0xFFU)                                  /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_TX_HI_SHIFT (0U)                                    /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_TX_HI Position*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL) /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_TX_HI Field*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_TX_LO_MASK (0xFF00U)                                /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_TX_LO_SHIFT (8U)                                    /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_TX_LO Position*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL) /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_TX_LO Field*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_RX_HI_MASK (0xFF0000U)                              /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_RX_HI_SHIFT (16U)                                   /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_RX_HI Position*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_RX_HI Field*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_RX_LO_MASK (0xFF000000U)                            /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_RX_LO_SHIFT (24U)                                   /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_RX_LO Position*/
#define XCVR_TSM_TIMING10_BB_XTAL_PLL_REF_CLK_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING10.BB_XTAL_PLL_REF_CLK_EN_RX_LO Field*/
/* ------- TIMING11 Bit Fields                      ------ */
#define XCVR_TSM_TIMING11_BB_XTAL_DAC_REF_CLK_EN_TX_HI_MASK (0xFFU)                                  /*!< XCVR_TSM_TIMING11.BB_XTAL_DAC_REF_CLK_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING11_BB_XTAL_DAC_REF_CLK_EN_TX_HI_SHIFT (0U)                                    /*!< XCVR_TSM_TIMING11.BB_XTAL_DAC_REF_CLK_EN_TX_HI Position*/
#define XCVR_TSM_TIMING11_BB_XTAL_DAC_REF_CLK_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL) /*!< XCVR_TSM_TIMING11.BB_XTAL_DAC_REF_CLK_EN_TX_HI Field*/
#define XCVR_TSM_TIMING11_BB_XTAL_DAC_REF_CLK_EN_TX_LO_MASK (0xFF00U)                                /*!< XCVR_TSM_TIMING11.BB_XTAL_DAC_REF_CLK_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING11_BB_XTAL_DAC_REF_CLK_EN_TX_LO_SHIFT (8U)                                    /*!< XCVR_TSM_TIMING11.BB_XTAL_DAC_REF_CLK_EN_TX_LO Position*/
#define XCVR_TSM_TIMING11_BB_XTAL_DAC_REF_CLK_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL) /*!< XCVR_TSM_TIMING11.BB_XTAL_DAC_REF_CLK_EN_TX_LO Field*/
/* ------- TIMING12 Bit Fields                      ------ */
#define XCVR_TSM_TIMING12_RXTX_AUXPLL_VCO_REF_CLK_EN_RX_HI_MASK (0xFF0000U)                          /*!< XCVR_TSM_TIMING12.RXTX_AUXPLL_VCO_REF_CLK_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING12_RXTX_AUXPLL_VCO_REF_CLK_EN_RX_HI_SHIFT (16U)                               /*!< XCVR_TSM_TIMING12.RXTX_AUXPLL_VCO_REF_CLK_EN_RX_HI Position*/
#define XCVR_TSM_TIMING12_RXTX_AUXPLL_VCO_REF_CLK_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING12.RXTX_AUXPLL_VCO_REF_CLK_EN_RX_HI Field*/
#define XCVR_TSM_TIMING12_RXTX_AUXPLL_VCO_REF_CLK_EN_RX_LO_MASK (0xFF000000U)                        /*!< XCVR_TSM_TIMING12.RXTX_AUXPLL_VCO_REF_CLK_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING12_RXTX_AUXPLL_VCO_REF_CLK_EN_RX_LO_SHIFT (24U)                               /*!< XCVR_TSM_TIMING12.RXTX_AUXPLL_VCO_REF_CLK_EN_RX_LO Position*/
#define XCVR_TSM_TIMING12_RXTX_AUXPLL_VCO_REF_CLK_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING12.RXTX_AUXPLL_VCO_REF_CLK_EN_RX_LO Field*/
/* ------- TIMING13 Bit Fields                      ------ */
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_TX_HI_MASK (0xFFU)                                      /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_TX_HI_SHIFT (0U)                                        /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_TX_HI Position*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)     /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_TX_HI Field*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_TX_LO_MASK (0xFF00U)                                    /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_TX_LO_SHIFT (8U)                                        /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_TX_LO Position*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)   /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_TX_LO Field*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_RX_HI_MASK (0xFF0000U)                                  /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_RX_HI_SHIFT (16U)                                       /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_RX_HI Position*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_RX_HI Field*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_RX_LO_MASK (0xFF000000U)                                /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_RX_LO_SHIFT (24U)                                       /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_RX_LO Position*/
#define XCVR_TSM_TIMING13_SY_VCO_AUTOTUNE_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING13.SY_VCO_AUTOTUNE_EN_RX_LO Field*/
/* ------- TIMING14 Bit Fields                      ------ */
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_TX_HI_MASK (0xFFU)                               /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_TX_HI_SHIFT (0U)                                 /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_TX_HI Position*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL) /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_TX_HI Field*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_TX_LO_MASK (0xFF00U)                             /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_TX_LO_SHIFT (8U)                                 /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_TX_LO Position*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL) /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_TX_LO Field*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_RX_HI_MASK (0xFF0000U)                           /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_RX_HI_SHIFT (16U)                                /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_RX_HI Position*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_RX_HI Field*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_RX_LO_MASK (0xFF000000U)                         /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_RX_LO_SHIFT (24U)                                /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_RX_LO Position*/
#define XCVR_TSM_TIMING14_SY_PD_CYCLE_SLIP_LD_FT_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING14.SY_PD_CYCLE_SLIP_LD_FT_EN_RX_LO Field*/
/* ------- TIMING15 Bit Fields                      ------ */
#define XCVR_TSM_TIMING15_SY_VCO_EN_TX_HI_MASK   (0xFFU)                                             /*!< XCVR_TSM_TIMING15.SY_VCO_EN_TX_HI Mask  */
#define XCVR_TSM_TIMING15_SY_VCO_EN_TX_HI_SHIFT  (0U)                                                /*!< XCVR_TSM_TIMING15.SY_VCO_EN_TX_HI Position*/
#define XCVR_TSM_TIMING15_SY_VCO_EN_TX_HI(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING15.SY_VCO_EN_TX_HI Field */
#define XCVR_TSM_TIMING15_SY_VCO_EN_TX_LO_MASK   (0xFF00U)                                           /*!< XCVR_TSM_TIMING15.SY_VCO_EN_TX_LO Mask  */
#define XCVR_TSM_TIMING15_SY_VCO_EN_TX_LO_SHIFT  (8U)                                                /*!< XCVR_TSM_TIMING15.SY_VCO_EN_TX_LO Position*/
#define XCVR_TSM_TIMING15_SY_VCO_EN_TX_LO(x)     (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING15.SY_VCO_EN_TX_LO Field */
#define XCVR_TSM_TIMING15_SY_VCO_EN_RX_HI_MASK   (0xFF0000U)                                         /*!< XCVR_TSM_TIMING15.SY_VCO_EN_RX_HI Mask  */
#define XCVR_TSM_TIMING15_SY_VCO_EN_RX_HI_SHIFT  (16U)                                               /*!< XCVR_TSM_TIMING15.SY_VCO_EN_RX_HI Position*/
#define XCVR_TSM_TIMING15_SY_VCO_EN_RX_HI(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING15.SY_VCO_EN_RX_HI Field */
#define XCVR_TSM_TIMING15_SY_VCO_EN_RX_LO_MASK   (0xFF000000U)                                       /*!< XCVR_TSM_TIMING15.SY_VCO_EN_RX_LO Mask  */
#define XCVR_TSM_TIMING15_SY_VCO_EN_RX_LO_SHIFT  (24U)                                               /*!< XCVR_TSM_TIMING15.SY_VCO_EN_RX_LO Position*/
#define XCVR_TSM_TIMING15_SY_VCO_EN_RX_LO(x)     (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING15.SY_VCO_EN_RX_LO Field */
/* ------- TIMING16 Bit Fields                      ------ */
#define XCVR_TSM_TIMING16_SY_LO_RX_BUF_EN_RX_HI_MASK (0xFF0000U)                                     /*!< XCVR_TSM_TIMING16.SY_LO_RX_BUF_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING16_SY_LO_RX_BUF_EN_RX_HI_SHIFT (16U)                                          /*!< XCVR_TSM_TIMING16.SY_LO_RX_BUF_EN_RX_HI Position*/
#define XCVR_TSM_TIMING16_SY_LO_RX_BUF_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)   /*!< XCVR_TSM_TIMING16.SY_LO_RX_BUF_EN_RX_HI Field*/
#define XCVR_TSM_TIMING16_SY_LO_RX_BUF_EN_RX_LO_MASK (0xFF000000U)                                   /*!< XCVR_TSM_TIMING16.SY_LO_RX_BUF_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING16_SY_LO_RX_BUF_EN_RX_LO_SHIFT (24U)                                          /*!< XCVR_TSM_TIMING16.SY_LO_RX_BUF_EN_RX_LO Position*/
#define XCVR_TSM_TIMING16_SY_LO_RX_BUF_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING16.SY_LO_RX_BUF_EN_RX_LO Field*/
/* ------- TIMING17 Bit Fields                      ------ */
#define XCVR_TSM_TIMING17_SY_LO_TX_BUF_EN_TX_HI_MASK (0xFFU)                                         /*!< XCVR_TSM_TIMING17.SY_LO_TX_BUF_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING17_SY_LO_TX_BUF_EN_TX_HI_SHIFT (0U)                                           /*!< XCVR_TSM_TIMING17.SY_LO_TX_BUF_EN_TX_HI Position*/
#define XCVR_TSM_TIMING17_SY_LO_TX_BUF_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)        /*!< XCVR_TSM_TIMING17.SY_LO_TX_BUF_EN_TX_HI Field*/
#define XCVR_TSM_TIMING17_SY_LO_TX_BUF_EN_TX_LO_MASK (0xFF00U)                                       /*!< XCVR_TSM_TIMING17.SY_LO_TX_BUF_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING17_SY_LO_TX_BUF_EN_TX_LO_SHIFT (8U)                                           /*!< XCVR_TSM_TIMING17.SY_LO_TX_BUF_EN_TX_LO Position*/
#define XCVR_TSM_TIMING17_SY_LO_TX_BUF_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)      /*!< XCVR_TSM_TIMING17.SY_LO_TX_BUF_EN_TX_LO Field*/
/* ------- TIMING18 Bit Fields                      ------ */
#define XCVR_TSM_TIMING18_SY_DIVN_EN_TX_HI_MASK  (0xFFU)                                             /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_TX_HI Mask */
#define XCVR_TSM_TIMING18_SY_DIVN_EN_TX_HI_SHIFT (0U)                                                /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_TX_HI Position*/
#define XCVR_TSM_TIMING18_SY_DIVN_EN_TX_HI(x)    (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_TX_HI Field*/
#define XCVR_TSM_TIMING18_SY_DIVN_EN_TX_LO_MASK  (0xFF00U)                                           /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_TX_LO Mask */
#define XCVR_TSM_TIMING18_SY_DIVN_EN_TX_LO_SHIFT (8U)                                                /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_TX_LO Position*/
#define XCVR_TSM_TIMING18_SY_DIVN_EN_TX_LO(x)    (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_TX_LO Field*/
#define XCVR_TSM_TIMING18_SY_DIVN_EN_RX_HI_MASK  (0xFF0000U)                                         /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_RX_HI Mask */
#define XCVR_TSM_TIMING18_SY_DIVN_EN_RX_HI_SHIFT (16U)                                               /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_RX_HI Position*/
#define XCVR_TSM_TIMING18_SY_DIVN_EN_RX_HI(x)    (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_RX_HI Field*/
#define XCVR_TSM_TIMING18_SY_DIVN_EN_RX_LO_MASK  (0xFF000000U)                                       /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_RX_LO Mask */
#define XCVR_TSM_TIMING18_SY_DIVN_EN_RX_LO_SHIFT (24U)                                               /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_RX_LO Position*/
#define XCVR_TSM_TIMING18_SY_DIVN_EN_RX_LO(x)    (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING18.SY_DIVN_EN_RX_LO Field*/
/* ------- TIMING19 Bit Fields                      ------ */
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_TX_HI_MASK (0xFFU)                                  /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_TX_HI_SHIFT (0U)                                    /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_TX_HI Position*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL) /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_TX_HI Field*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_TX_LO_MASK (0xFF00U)                                /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_TX_LO_SHIFT (8U)                                    /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_TX_LO Position*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL) /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_TX_LO Field*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_RX_HI_MASK (0xFF0000U)                              /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_RX_HI_SHIFT (16U)                                   /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_RX_HI Position*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_RX_HI Field*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_RX_LO_MASK (0xFF000000U)                            /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_RX_LO_SHIFT (24U)                                   /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_RX_LO Position*/
#define XCVR_TSM_TIMING19_SY_PD_FILTER_CHARGE_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING19.SY_PD_FILTER_CHARGE_EN_RX_LO Field*/
/* ------- TIMING20 Bit Fields                      ------ */
#define XCVR_TSM_TIMING20_SY_PD_EN_TX_HI_MASK    (0xFFU)                                             /*!< XCVR_TSM_TIMING20.SY_PD_EN_TX_HI Mask   */
#define XCVR_TSM_TIMING20_SY_PD_EN_TX_HI_SHIFT   (0U)                                                /*!< XCVR_TSM_TIMING20.SY_PD_EN_TX_HI Position*/
#define XCVR_TSM_TIMING20_SY_PD_EN_TX_HI(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING20.SY_PD_EN_TX_HI Field  */
#define XCVR_TSM_TIMING20_SY_PD_EN_TX_LO_MASK    (0xFF00U)                                           /*!< XCVR_TSM_TIMING20.SY_PD_EN_TX_LO Mask   */
#define XCVR_TSM_TIMING20_SY_PD_EN_TX_LO_SHIFT   (8U)                                                /*!< XCVR_TSM_TIMING20.SY_PD_EN_TX_LO Position*/
#define XCVR_TSM_TIMING20_SY_PD_EN_TX_LO(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING20.SY_PD_EN_TX_LO Field  */
#define XCVR_TSM_TIMING20_SY_PD_EN_RX_HI_MASK    (0xFF0000U)                                         /*!< XCVR_TSM_TIMING20.SY_PD_EN_RX_HI Mask   */
#define XCVR_TSM_TIMING20_SY_PD_EN_RX_HI_SHIFT   (16U)                                               /*!< XCVR_TSM_TIMING20.SY_PD_EN_RX_HI Position*/
#define XCVR_TSM_TIMING20_SY_PD_EN_RX_HI(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING20.SY_PD_EN_RX_HI Field  */
#define XCVR_TSM_TIMING20_SY_PD_EN_RX_LO_MASK    (0xFF000000U)                                       /*!< XCVR_TSM_TIMING20.SY_PD_EN_RX_LO Mask   */
#define XCVR_TSM_TIMING20_SY_PD_EN_RX_LO_SHIFT   (24U)                                               /*!< XCVR_TSM_TIMING20.SY_PD_EN_RX_LO Position*/
#define XCVR_TSM_TIMING20_SY_PD_EN_RX_LO(x)      (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING20.SY_PD_EN_RX_LO Field  */
/* ------- TIMING21 Bit Fields                      ------ */
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_TX_HI_MASK (0xFFU)                                           /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_TX_HI_SHIFT (0U)                                             /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_TX_HI Position*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_TX_HI Field*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_TX_LO_MASK (0xFF00U)                                         /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_TX_LO_SHIFT (8U)                                             /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_TX_LO Position*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_TX_LO Field*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_RX_HI Position*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_RX_HI Field*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_RX_LO Position*/
#define XCVR_TSM_TIMING21_SY_LO_DIVN_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING21.SY_LO_DIVN_EN_RX_LO Field*/
/* ------- TIMING22 Bit Fields                      ------ */
#define XCVR_TSM_TIMING22_SY_LO_RX_EN_RX_HI_MASK (0xFF0000U)                                         /*!< XCVR_TSM_TIMING22.SY_LO_RX_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING22_SY_LO_RX_EN_RX_HI_SHIFT (16U)                                              /*!< XCVR_TSM_TIMING22.SY_LO_RX_EN_RX_HI Position*/
#define XCVR_TSM_TIMING22_SY_LO_RX_EN_RX_HI(x)   (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING22.SY_LO_RX_EN_RX_HI Field*/
#define XCVR_TSM_TIMING22_SY_LO_RX_EN_RX_LO_MASK (0xFF000000U)                                       /*!< XCVR_TSM_TIMING22.SY_LO_RX_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING22_SY_LO_RX_EN_RX_LO_SHIFT (24U)                                              /*!< XCVR_TSM_TIMING22.SY_LO_RX_EN_RX_LO Position*/
#define XCVR_TSM_TIMING22_SY_LO_RX_EN_RX_LO(x)   (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING22.SY_LO_RX_EN_RX_LO Field*/
/* ------- TIMING23 Bit Fields                      ------ */
#define XCVR_TSM_TIMING23_SY_LO_TX_EN_TX_HI_MASK (0xFFU)                                             /*!< XCVR_TSM_TIMING23.SY_LO_TX_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING23_SY_LO_TX_EN_TX_HI_SHIFT (0U)                                               /*!< XCVR_TSM_TIMING23.SY_LO_TX_EN_TX_HI Position*/
#define XCVR_TSM_TIMING23_SY_LO_TX_EN_TX_HI(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING23.SY_LO_TX_EN_TX_HI Field*/
#define XCVR_TSM_TIMING23_SY_LO_TX_EN_TX_LO_MASK (0xFF00U)                                           /*!< XCVR_TSM_TIMING23.SY_LO_TX_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING23_SY_LO_TX_EN_TX_LO_SHIFT (8U)                                               /*!< XCVR_TSM_TIMING23.SY_LO_TX_EN_TX_LO Position*/
#define XCVR_TSM_TIMING23_SY_LO_TX_EN_TX_LO(x)   (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING23.SY_LO_TX_EN_TX_LO Field*/
/* ------- TIMING24 Bit Fields                      ------ */
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_TX_HI_MASK (0xFFU)                                          /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_TX_HI_SHIFT (0U)                                            /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_TX_HI Position*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)         /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_TX_HI Field*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_TX_LO_MASK (0xFF00U)                                        /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_TX_LO_SHIFT (8U)                                            /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_TX_LO Position*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)       /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_TX_LO Field*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_RX_HI_MASK (0xFF0000U)                                      /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_RX_HI_SHIFT (16U)                                           /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_RX_HI Position*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)    /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_RX_HI Field*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_RX_LO_MASK (0xFF000000U)                                    /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_RX_LO_SHIFT (24U)                                           /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_RX_LO Position*/
#define XCVR_TSM_TIMING24_SY_DIVN_CAL_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)  /*!< XCVR_TSM_TIMING24.SY_DIVN_CAL_EN_RX_LO Field*/
/* ------- TIMING25 Bit Fields                      ------ */
#define XCVR_TSM_TIMING25_RX_LNA_MIXER_EN_RX_HI_MASK (0xFF0000U)                                     /*!< XCVR_TSM_TIMING25.RX_LNA_MIXER_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING25_RX_LNA_MIXER_EN_RX_HI_SHIFT (16U)                                          /*!< XCVR_TSM_TIMING25.RX_LNA_MIXER_EN_RX_HI Position*/
#define XCVR_TSM_TIMING25_RX_LNA_MIXER_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)   /*!< XCVR_TSM_TIMING25.RX_LNA_MIXER_EN_RX_HI Field*/
#define XCVR_TSM_TIMING25_RX_LNA_MIXER_EN_RX_LO_MASK (0xFF000000U)                                   /*!< XCVR_TSM_TIMING25.RX_LNA_MIXER_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING25_RX_LNA_MIXER_EN_RX_LO_SHIFT (24U)                                          /*!< XCVR_TSM_TIMING25.RX_LNA_MIXER_EN_RX_LO Position*/
#define XCVR_TSM_TIMING25_RX_LNA_MIXER_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING25.RX_LNA_MIXER_EN_RX_LO Field*/
/* ------- TIMING26 Bit Fields                      ------ */
#define XCVR_TSM_TIMING26_TX_PA_EN_TX_HI_MASK    (0xFFU)                                             /*!< XCVR_TSM_TIMING26.TX_PA_EN_TX_HI Mask   */
#define XCVR_TSM_TIMING26_TX_PA_EN_TX_HI_SHIFT   (0U)                                                /*!< XCVR_TSM_TIMING26.TX_PA_EN_TX_HI Position*/
#define XCVR_TSM_TIMING26_TX_PA_EN_TX_HI(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING26.TX_PA_EN_TX_HI Field  */
#define XCVR_TSM_TIMING26_TX_PA_EN_TX_LO_MASK    (0xFF00U)                                           /*!< XCVR_TSM_TIMING26.TX_PA_EN_TX_LO Mask   */
#define XCVR_TSM_TIMING26_TX_PA_EN_TX_LO_SHIFT   (8U)                                                /*!< XCVR_TSM_TIMING26.TX_PA_EN_TX_LO Position*/
#define XCVR_TSM_TIMING26_TX_PA_EN_TX_LO(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING26.TX_PA_EN_TX_LO Field  */
/* ------- TIMING27 Bit Fields                      ------ */
#define XCVR_TSM_TIMING27_RX_ADC_I_Q_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING27.RX_ADC_I_Q_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING27_RX_ADC_I_Q_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING27.RX_ADC_I_Q_EN_RX_HI Position*/
#define XCVR_TSM_TIMING27_RX_ADC_I_Q_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING27.RX_ADC_I_Q_EN_RX_HI Field*/
#define XCVR_TSM_TIMING27_RX_ADC_I_Q_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING27.RX_ADC_I_Q_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING27_RX_ADC_I_Q_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING27.RX_ADC_I_Q_EN_RX_LO Position*/
#define XCVR_TSM_TIMING27_RX_ADC_I_Q_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING27.RX_ADC_I_Q_EN_RX_LO Field*/
/* ------- TIMING28 Bit Fields                      ------ */
#define XCVR_TSM_TIMING28_RX_ADC_RESET_EN_RX_HI_MASK (0xFF0000U)                                     /*!< XCVR_TSM_TIMING28.RX_ADC_RESET_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING28_RX_ADC_RESET_EN_RX_HI_SHIFT (16U)                                          /*!< XCVR_TSM_TIMING28.RX_ADC_RESET_EN_RX_HI Position*/
#define XCVR_TSM_TIMING28_RX_ADC_RESET_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)   /*!< XCVR_TSM_TIMING28.RX_ADC_RESET_EN_RX_HI Field*/
#define XCVR_TSM_TIMING28_RX_ADC_RESET_EN_RX_LO_MASK (0xFF000000U)                                   /*!< XCVR_TSM_TIMING28.RX_ADC_RESET_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING28_RX_ADC_RESET_EN_RX_LO_SHIFT (24U)                                          /*!< XCVR_TSM_TIMING28.RX_ADC_RESET_EN_RX_LO Position*/
#define XCVR_TSM_TIMING28_RX_ADC_RESET_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING28.RX_ADC_RESET_EN_RX_LO Field*/
/* ------- TIMING29 Bit Fields                      ------ */
#define XCVR_TSM_TIMING29_RX_BBA_I_Q_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING29.RX_BBA_I_Q_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING29_RX_BBA_I_Q_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING29.RX_BBA_I_Q_EN_RX_HI Position*/
#define XCVR_TSM_TIMING29_RX_BBA_I_Q_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING29.RX_BBA_I_Q_EN_RX_HI Field*/
#define XCVR_TSM_TIMING29_RX_BBA_I_Q_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING29.RX_BBA_I_Q_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING29_RX_BBA_I_Q_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING29.RX_BBA_I_Q_EN_RX_LO Position*/
#define XCVR_TSM_TIMING29_RX_BBA_I_Q_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING29.RX_BBA_I_Q_EN_RX_LO Field*/
/* ------- TIMING30 Bit Fields                      ------ */
#define XCVR_TSM_TIMING30_RX_BBA_PDET_EN_RX_HI_MASK (0xFF0000U)                                      /*!< XCVR_TSM_TIMING30.RX_BBA_PDET_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING30_RX_BBA_PDET_EN_RX_HI_SHIFT (16U)                                           /*!< XCVR_TSM_TIMING30.RX_BBA_PDET_EN_RX_HI Position*/
#define XCVR_TSM_TIMING30_RX_BBA_PDET_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)    /*!< XCVR_TSM_TIMING30.RX_BBA_PDET_EN_RX_HI Field*/
#define XCVR_TSM_TIMING30_RX_BBA_PDET_EN_RX_LO_MASK (0xFF000000U)                                    /*!< XCVR_TSM_TIMING30.RX_BBA_PDET_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING30_RX_BBA_PDET_EN_RX_LO_SHIFT (24U)                                           /*!< XCVR_TSM_TIMING30.RX_BBA_PDET_EN_RX_LO Position*/
#define XCVR_TSM_TIMING30_RX_BBA_PDET_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)  /*!< XCVR_TSM_TIMING30.RX_BBA_PDET_EN_RX_LO Field*/
/* ------- TIMING31 Bit Fields                      ------ */
#define XCVR_TSM_TIMING31_RX_BBA_TZA_DCOC_EN_RX_HI_MASK (0xFF0000U)                                  /*!< XCVR_TSM_TIMING31.RX_BBA_TZA_DCOC_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING31_RX_BBA_TZA_DCOC_EN_RX_HI_SHIFT (16U)                                       /*!< XCVR_TSM_TIMING31.RX_BBA_TZA_DCOC_EN_RX_HI Position*/
#define XCVR_TSM_TIMING31_RX_BBA_TZA_DCOC_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING31.RX_BBA_TZA_DCOC_EN_RX_HI Field*/
#define XCVR_TSM_TIMING31_RX_BBA_TZA_DCOC_EN_RX_LO_MASK (0xFF000000U)                                /*!< XCVR_TSM_TIMING31.RX_BBA_TZA_DCOC_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING31_RX_BBA_TZA_DCOC_EN_RX_LO_SHIFT (24U)                                       /*!< XCVR_TSM_TIMING31.RX_BBA_TZA_DCOC_EN_RX_LO Position*/
#define XCVR_TSM_TIMING31_RX_BBA_TZA_DCOC_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING31.RX_BBA_TZA_DCOC_EN_RX_LO Field*/
/* ------- TIMING32 Bit Fields                      ------ */
#define XCVR_TSM_TIMING32_RX_TZA_I_Q_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING32.RX_TZA_I_Q_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING32_RX_TZA_I_Q_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING32.RX_TZA_I_Q_EN_RX_HI Position*/
#define XCVR_TSM_TIMING32_RX_TZA_I_Q_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING32.RX_TZA_I_Q_EN_RX_HI Field*/
#define XCVR_TSM_TIMING32_RX_TZA_I_Q_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING32.RX_TZA_I_Q_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING32_RX_TZA_I_Q_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING32.RX_TZA_I_Q_EN_RX_LO Position*/
#define XCVR_TSM_TIMING32_RX_TZA_I_Q_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING32.RX_TZA_I_Q_EN_RX_LO Field*/
/* ------- TIMING33 Bit Fields                      ------ */
#define XCVR_TSM_TIMING33_RX_TZA_PDET_EN_RX_HI_MASK (0xFF0000U)                                      /*!< XCVR_TSM_TIMING33.RX_TZA_PDET_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING33_RX_TZA_PDET_EN_RX_HI_SHIFT (16U)                                           /*!< XCVR_TSM_TIMING33.RX_TZA_PDET_EN_RX_HI Position*/
#define XCVR_TSM_TIMING33_RX_TZA_PDET_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)    /*!< XCVR_TSM_TIMING33.RX_TZA_PDET_EN_RX_HI Field*/
#define XCVR_TSM_TIMING33_RX_TZA_PDET_EN_RX_LO_MASK (0xFF000000U)                                    /*!< XCVR_TSM_TIMING33.RX_TZA_PDET_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING33_RX_TZA_PDET_EN_RX_LO_SHIFT (24U)                                           /*!< XCVR_TSM_TIMING33.RX_TZA_PDET_EN_RX_LO Position*/
#define XCVR_TSM_TIMING33_RX_TZA_PDET_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)  /*!< XCVR_TSM_TIMING33.RX_TZA_PDET_EN_RX_LO Field*/
/* ------- TIMING34 Bit Fields                      ------ */
#define XCVR_TSM_TIMING34_PLL_DIG_EN_TX_HI_MASK  (0xFFU)                                             /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_TX_HI Mask */
#define XCVR_TSM_TIMING34_PLL_DIG_EN_TX_HI_SHIFT (0U)                                                /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_TX_HI Position*/
#define XCVR_TSM_TIMING34_PLL_DIG_EN_TX_HI(x)    (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_TX_HI Field*/
#define XCVR_TSM_TIMING34_PLL_DIG_EN_TX_LO_MASK  (0xFF00U)                                           /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_TX_LO Mask */
#define XCVR_TSM_TIMING34_PLL_DIG_EN_TX_LO_SHIFT (8U)                                                /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_TX_LO Position*/
#define XCVR_TSM_TIMING34_PLL_DIG_EN_TX_LO(x)    (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_TX_LO Field*/
#define XCVR_TSM_TIMING34_PLL_DIG_EN_RX_HI_MASK  (0xFF0000U)                                         /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_RX_HI Mask */
#define XCVR_TSM_TIMING34_PLL_DIG_EN_RX_HI_SHIFT (16U)                                               /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_RX_HI Position*/
#define XCVR_TSM_TIMING34_PLL_DIG_EN_RX_HI(x)    (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_RX_HI Field*/
#define XCVR_TSM_TIMING34_PLL_DIG_EN_RX_LO_MASK  (0xFF000000U)                                       /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_RX_LO Mask */
#define XCVR_TSM_TIMING34_PLL_DIG_EN_RX_LO_SHIFT (24U)                                               /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_RX_LO Position*/
#define XCVR_TSM_TIMING34_PLL_DIG_EN_RX_LO(x)    (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING34.PLL_DIG_EN_RX_LO Field*/
/* ------- TIMING35 Bit Fields                      ------ */
#define XCVR_TSM_TIMING35_TX_DIG_EN_TX_HI_MASK   (0xFFU)                                             /*!< XCVR_TSM_TIMING35.TX_DIG_EN_TX_HI Mask  */
#define XCVR_TSM_TIMING35_TX_DIG_EN_TX_HI_SHIFT  (0U)                                                /*!< XCVR_TSM_TIMING35.TX_DIG_EN_TX_HI Position*/
#define XCVR_TSM_TIMING35_TX_DIG_EN_TX_HI(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING35.TX_DIG_EN_TX_HI Field */
#define XCVR_TSM_TIMING35_TX_DIG_EN_TX_LO_MASK   (0xFF00U)                                           /*!< XCVR_TSM_TIMING35.TX_DIG_EN_TX_LO Mask  */
#define XCVR_TSM_TIMING35_TX_DIG_EN_TX_LO_SHIFT  (8U)                                                /*!< XCVR_TSM_TIMING35.TX_DIG_EN_TX_LO Position*/
#define XCVR_TSM_TIMING35_TX_DIG_EN_TX_LO(x)     (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING35.TX_DIG_EN_TX_LO Field */
/* ------- TIMING36 Bit Fields                      ------ */
#define XCVR_TSM_TIMING36_RX_DIG_EN_RX_HI_MASK   (0xFF0000U)                                         /*!< XCVR_TSM_TIMING36.RX_DIG_EN_RX_HI Mask  */
#define XCVR_TSM_TIMING36_RX_DIG_EN_RX_HI_SHIFT  (16U)                                               /*!< XCVR_TSM_TIMING36.RX_DIG_EN_RX_HI Position*/
#define XCVR_TSM_TIMING36_RX_DIG_EN_RX_HI(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING36.RX_DIG_EN_RX_HI Field */
#define XCVR_TSM_TIMING36_RX_DIG_EN_RX_LO_MASK   (0xFF000000U)                                       /*!< XCVR_TSM_TIMING36.RX_DIG_EN_RX_LO Mask  */
#define XCVR_TSM_TIMING36_RX_DIG_EN_RX_LO_SHIFT  (24U)                                               /*!< XCVR_TSM_TIMING36.RX_DIG_EN_RX_LO Position*/
#define XCVR_TSM_TIMING36_RX_DIG_EN_RX_LO(x)     (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING36.RX_DIG_EN_RX_LO Field */
/* ------- TIMING37 Bit Fields                      ------ */
#define XCVR_TSM_TIMING37_RX_INIT_RX_HI_MASK     (0xFF0000U)                                         /*!< XCVR_TSM_TIMING37.RX_INIT_RX_HI Mask    */
#define XCVR_TSM_TIMING37_RX_INIT_RX_HI_SHIFT    (16U)                                               /*!< XCVR_TSM_TIMING37.RX_INIT_RX_HI Position*/
#define XCVR_TSM_TIMING37_RX_INIT_RX_HI(x)       (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING37.RX_INIT_RX_HI Field   */
#define XCVR_TSM_TIMING37_RX_INIT_RX_LO_MASK     (0xFF000000U)                                       /*!< XCVR_TSM_TIMING37.RX_INIT_RX_LO Mask    */
#define XCVR_TSM_TIMING37_RX_INIT_RX_LO_SHIFT    (24U)                                               /*!< XCVR_TSM_TIMING37.RX_INIT_RX_LO Position*/
#define XCVR_TSM_TIMING37_RX_INIT_RX_LO(x)       (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING37.RX_INIT_RX_LO Field   */
/* ------- TIMING38 Bit Fields                      ------ */
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_TX_HI_MASK (0xFFU)                                          /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_TX_HI_SHIFT (0U)                                            /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_TX_HI Position*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)         /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_TX_HI Field*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_TX_LO_MASK (0xFF00U)                                        /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_TX_LO_SHIFT (8U)                                            /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_TX_LO Position*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)       /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_TX_LO Field*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_RX_HI_MASK (0xFF0000U)                                      /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_RX_HI_SHIFT (16U)                                           /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_RX_HI Position*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)    /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_RX_HI Field*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_RX_LO_MASK (0xFF000000U)                                    /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_RX_LO_SHIFT (24U)                                           /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_RX_LO Position*/
#define XCVR_TSM_TIMING38_SIGMA_DELTA_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)  /*!< XCVR_TSM_TIMING38.SIGMA_DELTA_EN_RX_LO Field*/
/* ------- TIMING39 Bit Fields                      ------ */
#define XCVR_TSM_TIMING39_RX_PHY_EN_RX_HI_MASK   (0xFF0000U)                                         /*!< XCVR_TSM_TIMING39.RX_PHY_EN_RX_HI Mask  */
#define XCVR_TSM_TIMING39_RX_PHY_EN_RX_HI_SHIFT  (16U)                                               /*!< XCVR_TSM_TIMING39.RX_PHY_EN_RX_HI Position*/
#define XCVR_TSM_TIMING39_RX_PHY_EN_RX_HI(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING39.RX_PHY_EN_RX_HI Field */
#define XCVR_TSM_TIMING39_RX_PHY_EN_RX_LO_MASK   (0xFF000000U)                                       /*!< XCVR_TSM_TIMING39.RX_PHY_EN_RX_LO Mask  */
#define XCVR_TSM_TIMING39_RX_PHY_EN_RX_LO_SHIFT  (24U)                                               /*!< XCVR_TSM_TIMING39.RX_PHY_EN_RX_LO Position*/
#define XCVR_TSM_TIMING39_RX_PHY_EN_RX_LO(x)     (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING39.RX_PHY_EN_RX_LO Field */
/* ------- TIMING40 Bit Fields                      ------ */
#define XCVR_TSM_TIMING40_DCOC_EN_RX_HI_MASK     (0xFF0000U)                                         /*!< XCVR_TSM_TIMING40.DCOC_EN_RX_HI Mask    */
#define XCVR_TSM_TIMING40_DCOC_EN_RX_HI_SHIFT    (16U)                                               /*!< XCVR_TSM_TIMING40.DCOC_EN_RX_HI Position*/
#define XCVR_TSM_TIMING40_DCOC_EN_RX_HI(x)       (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING40.DCOC_EN_RX_HI Field   */
#define XCVR_TSM_TIMING40_DCOC_EN_RX_LO_MASK     (0xFF000000U)                                       /*!< XCVR_TSM_TIMING40.DCOC_EN_RX_LO Mask    */
#define XCVR_TSM_TIMING40_DCOC_EN_RX_LO_SHIFT    (24U)                                               /*!< XCVR_TSM_TIMING40.DCOC_EN_RX_LO Position*/
#define XCVR_TSM_TIMING40_DCOC_EN_RX_LO(x)       (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING40.DCOC_EN_RX_LO Field   */
/* ------- TIMING41 Bit Fields                      ------ */
#define XCVR_TSM_TIMING41_DCOC_INIT_RX_HI_MASK   (0xFF0000U)                                         /*!< XCVR_TSM_TIMING41.DCOC_INIT_RX_HI Mask  */
#define XCVR_TSM_TIMING41_DCOC_INIT_RX_HI_SHIFT  (16U)                                               /*!< XCVR_TSM_TIMING41.DCOC_INIT_RX_HI Position*/
#define XCVR_TSM_TIMING41_DCOC_INIT_RX_HI(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING41.DCOC_INIT_RX_HI Field */
#define XCVR_TSM_TIMING41_DCOC_INIT_RX_LO_MASK   (0xFF000000U)                                       /*!< XCVR_TSM_TIMING41.DCOC_INIT_RX_LO Mask  */
#define XCVR_TSM_TIMING41_DCOC_INIT_RX_LO_SHIFT  (24U)                                               /*!< XCVR_TSM_TIMING41.DCOC_INIT_RX_LO Position*/
#define XCVR_TSM_TIMING41_DCOC_INIT_RX_LO(x)     (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING41.DCOC_INIT_RX_LO Field */
/* ------- TIMING42 Bit Fields                      ------ */
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_TX_HI_MASK (0xFFU)                                         /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_TX_HI_SHIFT (0U)                                           /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_TX_HI Position*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)        /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_TX_HI Field*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_TX_LO_MASK (0xFF00U)                                       /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_TX_LO_SHIFT (8U)                                           /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_TX_LO Position*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)      /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_TX_LO Field*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_RX_HI_MASK (0xFF0000U)                                     /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_RX_HI_SHIFT (16U)                                          /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_RX_HI Position*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)   /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_RX_HI Field*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_RX_LO_MASK (0xFF000000U)                                   /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_RX_LO_SHIFT (24U)                                          /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_RX_LO Position*/
#define XCVR_TSM_TIMING42_SAR_ADC_TRIG_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING42.SAR_ADC_TRIG_EN_RX_LO Field*/
/* ------- TIMING43 Bit Fields                      ------ */
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_TX_HI_MASK (0xFFU)                                           /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_TX_HI_SHIFT (0U)                                             /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_TX_HI Position*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_TX_HI Field*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_TX_LO_MASK (0xFF00U)                                         /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_TX_LO_SHIFT (8U)                                             /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_TX_LO Position*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_TX_LO Field*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_RX_HI Position*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_RX_HI Field*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_RX_LO Position*/
#define XCVR_TSM_TIMING43_TSM_SPARE0_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING43.TSM_SPARE0_EN_RX_LO Field*/
/* ------- TIMING44 Bit Fields                      ------ */
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_TX_HI_MASK (0xFFU)                                           /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_TX_HI_SHIFT (0U)                                             /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_TX_HI Position*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_TX_HI Field*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_TX_LO_MASK (0xFF00U)                                         /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_TX_LO_SHIFT (8U)                                             /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_TX_LO Position*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_TX_LO Field*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_RX_HI Position*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_RX_HI Field*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_RX_LO Position*/
#define XCVR_TSM_TIMING44_TSM_SPARE1_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING44.TSM_SPARE1_EN_RX_LO Field*/
/* ------- TIMING45 Bit Fields                      ------ */
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_TX_HI_MASK (0xFFU)                                           /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_TX_HI_SHIFT (0U)                                             /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_TX_HI Position*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_TX_HI Field*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_TX_LO_MASK (0xFF00U)                                         /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_TX_LO_SHIFT (8U)                                             /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_TX_LO Position*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_TX_LO Field*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_RX_HI Position*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_RX_HI Field*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_RX_LO Position*/
#define XCVR_TSM_TIMING45_TSM_SPARE2_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING45.TSM_SPARE2_EN_RX_LO Field*/
/* ------- TIMING46 Bit Fields                      ------ */
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_TX_HI_MASK (0xFFU)                                           /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_TX_HI_SHIFT (0U)                                             /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_TX_HI Position*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_TX_HI Field*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_TX_LO_MASK (0xFF00U)                                         /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_TX_LO_SHIFT (8U)                                             /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_TX_LO Position*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_TX_LO Field*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_RX_HI Position*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_RX_HI Field*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_RX_LO Position*/
#define XCVR_TSM_TIMING46_TSM_SPARE3_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING46.TSM_SPARE3_EN_RX_LO Field*/
/* ------- TIMING47 Bit Fields                      ------ */
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_TX_HI_MASK (0xFFU)                                           /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_TX_HI_SHIFT (0U)                                             /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_TX_HI Position*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_TX_HI Field*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_TX_LO_MASK (0xFF00U)                                         /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_TX_LO_SHIFT (8U)                                             /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_TX_LO Position*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_TX_LO Field*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_RX_HI Position*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_RX_HI Field*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_RX_LO Position*/
#define XCVR_TSM_TIMING47_GPIO0_TRIG_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING47.GPIO0_TRIG_EN_RX_LO Field*/
/* ------- TIMING48 Bit Fields                      ------ */
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_TX_HI_MASK (0xFFU)                                           /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_TX_HI_SHIFT (0U)                                             /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_TX_HI Position*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_TX_HI Field*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_TX_LO_MASK (0xFF00U)                                         /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_TX_LO_SHIFT (8U)                                             /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_TX_LO Position*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_TX_LO Field*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_RX_HI Position*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_RX_HI Field*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_RX_LO Position*/
#define XCVR_TSM_TIMING48_GPIO1_TRIG_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING48.GPIO1_TRIG_EN_RX_LO Field*/
/* ------- TIMING49 Bit Fields                      ------ */
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_TX_HI_MASK (0xFFU)                                           /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_TX_HI_SHIFT (0U)                                             /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_TX_HI Position*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_TX_HI Field*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_TX_LO_MASK (0xFF00U)                                         /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_TX_LO_SHIFT (8U)                                             /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_TX_LO Position*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_TX_LO Field*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_RX_HI Position*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_RX_HI Field*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_RX_LO Position*/
#define XCVR_TSM_TIMING49_GPIO2_TRIG_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING49.GPIO2_TRIG_EN_RX_LO Field*/
/* ------- TIMING50 Bit Fields                      ------ */
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_TX_HI_MASK (0xFFU)                                           /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_TX_HI_SHIFT (0U)                                             /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_TX_HI Position*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_TX_HI Field*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_TX_LO_MASK (0xFF00U)                                         /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_TX_LO_SHIFT (8U)                                             /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_TX_LO Position*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_TX_LO Field*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_RX_HI Position*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_RX_HI Field*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_RX_LO Position*/
#define XCVR_TSM_TIMING50_GPIO3_TRIG_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING50.GPIO3_TRIG_EN_RX_LO Field*/
/* ------- TIMING51 Bit Fields                      ------ */
#define XCVR_TSM_TIMING51_RXTX_AUXPLL_BIAS_EN_RX_HI_MASK (0xFF0000U)                                 /*!< XCVR_TSM_TIMING51.RXTX_AUXPLL_BIAS_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING51_RXTX_AUXPLL_BIAS_EN_RX_HI_SHIFT (16U)                                      /*!< XCVR_TSM_TIMING51.RXTX_AUXPLL_BIAS_EN_RX_HI Position*/
#define XCVR_TSM_TIMING51_RXTX_AUXPLL_BIAS_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING51.RXTX_AUXPLL_BIAS_EN_RX_HI Field*/
#define XCVR_TSM_TIMING51_RXTX_AUXPLL_BIAS_EN_RX_LO_MASK (0xFF000000U)                               /*!< XCVR_TSM_TIMING51.RXTX_AUXPLL_BIAS_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING51_RXTX_AUXPLL_BIAS_EN_RX_LO_SHIFT (24U)                                      /*!< XCVR_TSM_TIMING51.RXTX_AUXPLL_BIAS_EN_RX_LO Position*/
#define XCVR_TSM_TIMING51_RXTX_AUXPLL_BIAS_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING51.RXTX_AUXPLL_BIAS_EN_RX_LO Field*/
/* ------- TIMING52 Bit Fields                      ------ */
#define XCVR_TSM_TIMING52_RXTX_AUXPLL_FCAL_EN_RX_HI_MASK (0xFF0000U)                                 /*!< XCVR_TSM_TIMING52.RXTX_AUXPLL_FCAL_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING52_RXTX_AUXPLL_FCAL_EN_RX_HI_SHIFT (16U)                                      /*!< XCVR_TSM_TIMING52.RXTX_AUXPLL_FCAL_EN_RX_HI Position*/
#define XCVR_TSM_TIMING52_RXTX_AUXPLL_FCAL_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING52.RXTX_AUXPLL_FCAL_EN_RX_HI Field*/
#define XCVR_TSM_TIMING52_RXTX_AUXPLL_FCAL_EN_RX_LO_MASK (0xFF000000U)                               /*!< XCVR_TSM_TIMING52.RXTX_AUXPLL_FCAL_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING52_RXTX_AUXPLL_FCAL_EN_RX_LO_SHIFT (24U)                                      /*!< XCVR_TSM_TIMING52.RXTX_AUXPLL_FCAL_EN_RX_LO Position*/
#define XCVR_TSM_TIMING52_RXTX_AUXPLL_FCAL_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING52.RXTX_AUXPLL_FCAL_EN_RX_LO Field*/
/* ------- TIMING53 Bit Fields                      ------ */
#define XCVR_TSM_TIMING53_RXTX_AUXPLL_LF_PD_EN_RX_HI_MASK (0xFF0000U)                                /*!< XCVR_TSM_TIMING53.RXTX_AUXPLL_LF_PD_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING53_RXTX_AUXPLL_LF_PD_EN_RX_HI_SHIFT (16U)                                     /*!< XCVR_TSM_TIMING53.RXTX_AUXPLL_LF_PD_EN_RX_HI Position*/
#define XCVR_TSM_TIMING53_RXTX_AUXPLL_LF_PD_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING53.RXTX_AUXPLL_LF_PD_EN_RX_HI Field*/
#define XCVR_TSM_TIMING53_RXTX_AUXPLL_LF_PD_EN_RX_LO_MASK (0xFF000000U)                              /*!< XCVR_TSM_TIMING53.RXTX_AUXPLL_LF_PD_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING53_RXTX_AUXPLL_LF_PD_EN_RX_LO_SHIFT (24U)                                     /*!< XCVR_TSM_TIMING53.RXTX_AUXPLL_LF_PD_EN_RX_LO Position*/
#define XCVR_TSM_TIMING53_RXTX_AUXPLL_LF_PD_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING53.RXTX_AUXPLL_LF_PD_EN_RX_LO Field*/
/* ------- TIMING54 Bit Fields                      ------ */
#define XCVR_TSM_TIMING54_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_HI_MASK (0xFF0000U)                  /*!< XCVR_TSM_TIMING54.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING54_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_HI_SHIFT (16U)                       /*!< XCVR_TSM_TIMING54.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_HI Position*/
#define XCVR_TSM_TIMING54_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING54.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_HI Field*/
#define XCVR_TSM_TIMING54_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_LO_MASK (0xFF000000U)                /*!< XCVR_TSM_TIMING54.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING54_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_LO_SHIFT (24U)                       /*!< XCVR_TSM_TIMING54.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_LO Position*/
#define XCVR_TSM_TIMING54_RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING54.RXTX_AUXPLL_PD_LF_FILTER_CHARGE_EN_RX_LO Field*/
/* ------- TIMING55 Bit Fields                      ------ */
#define XCVR_TSM_TIMING55_RXTX_AUXPLL_ADC_BUF_EN_RX_HI_MASK (0xFF0000U)                              /*!< XCVR_TSM_TIMING55.RXTX_AUXPLL_ADC_BUF_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING55_RXTX_AUXPLL_ADC_BUF_EN_RX_HI_SHIFT (16U)                                   /*!< XCVR_TSM_TIMING55.RXTX_AUXPLL_ADC_BUF_EN_RX_HI Position*/
#define XCVR_TSM_TIMING55_RXTX_AUXPLL_ADC_BUF_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING55.RXTX_AUXPLL_ADC_BUF_EN_RX_HI Field*/
#define XCVR_TSM_TIMING55_RXTX_AUXPLL_ADC_BUF_EN_RX_LO_MASK (0xFF000000U)                            /*!< XCVR_TSM_TIMING55.RXTX_AUXPLL_ADC_BUF_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING55_RXTX_AUXPLL_ADC_BUF_EN_RX_LO_SHIFT (24U)                                   /*!< XCVR_TSM_TIMING55.RXTX_AUXPLL_ADC_BUF_EN_RX_LO Position*/
#define XCVR_TSM_TIMING55_RXTX_AUXPLL_ADC_BUF_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING55.RXTX_AUXPLL_ADC_BUF_EN_RX_LO Field*/
/* ------- TIMING56 Bit Fields                      ------ */
#define XCVR_TSM_TIMING56_RXTX_AUXPLL_DIG_BUF_EN_RX_HI_MASK (0xFF0000U)                              /*!< XCVR_TSM_TIMING56.RXTX_AUXPLL_DIG_BUF_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING56_RXTX_AUXPLL_DIG_BUF_EN_RX_HI_SHIFT (16U)                                   /*!< XCVR_TSM_TIMING56.RXTX_AUXPLL_DIG_BUF_EN_RX_HI Position*/
#define XCVR_TSM_TIMING56_RXTX_AUXPLL_DIG_BUF_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL) /*!< XCVR_TSM_TIMING56.RXTX_AUXPLL_DIG_BUF_EN_RX_HI Field*/
#define XCVR_TSM_TIMING56_RXTX_AUXPLL_DIG_BUF_EN_RX_LO_MASK (0xFF000000U)                            /*!< XCVR_TSM_TIMING56.RXTX_AUXPLL_DIG_BUF_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING56_RXTX_AUXPLL_DIG_BUF_EN_RX_LO_SHIFT (24U)                                   /*!< XCVR_TSM_TIMING56.RXTX_AUXPLL_DIG_BUF_EN_RX_LO Position*/
#define XCVR_TSM_TIMING56_RXTX_AUXPLL_DIG_BUF_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL) /*!< XCVR_TSM_TIMING56.RXTX_AUXPLL_DIG_BUF_EN_RX_LO Field*/
/* ------- TIMING57 Bit Fields                      ------ */
#define XCVR_TSM_TIMING57_RXTX_RCCAL_EN_RX_HI_MASK (0xFF0000U)                                       /*!< XCVR_TSM_TIMING57.RXTX_RCCAL_EN_RX_HI Mask*/
#define XCVR_TSM_TIMING57_RXTX_RCCAL_EN_RX_HI_SHIFT (16U)                                            /*!< XCVR_TSM_TIMING57.RXTX_RCCAL_EN_RX_HI Position*/
#define XCVR_TSM_TIMING57_RXTX_RCCAL_EN_RX_HI(x) (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_TSM_TIMING57.RXTX_RCCAL_EN_RX_HI Field*/
#define XCVR_TSM_TIMING57_RXTX_RCCAL_EN_RX_LO_MASK (0xFF000000U)                                     /*!< XCVR_TSM_TIMING57.RXTX_RCCAL_EN_RX_LO Mask*/
#define XCVR_TSM_TIMING57_RXTX_RCCAL_EN_RX_LO_SHIFT (24U)                                            /*!< XCVR_TSM_TIMING57.RXTX_RCCAL_EN_RX_LO Position*/
#define XCVR_TSM_TIMING57_RXTX_RCCAL_EN_RX_LO(x) (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_TSM_TIMING57.RXTX_RCCAL_EN_RX_LO Field*/
/* ------- TIMING58 Bit Fields                      ------ */
#define XCVR_TSM_TIMING58_TX_HPM_DAC_EN_TX_HI_MASK (0xFFU)                                           /*!< XCVR_TSM_TIMING58.TX_HPM_DAC_EN_TX_HI Mask*/
#define XCVR_TSM_TIMING58_TX_HPM_DAC_EN_TX_HI_SHIFT (0U)                                             /*!< XCVR_TSM_TIMING58.TX_HPM_DAC_EN_TX_HI Position*/
#define XCVR_TSM_TIMING58_TX_HPM_DAC_EN_TX_HI(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_TSM_TIMING58.TX_HPM_DAC_EN_TX_HI Field*/
#define XCVR_TSM_TIMING58_TX_HPM_DAC_EN_TX_LO_MASK (0xFF00U)                                         /*!< XCVR_TSM_TIMING58.TX_HPM_DAC_EN_TX_LO Mask*/
#define XCVR_TSM_TIMING58_TX_HPM_DAC_EN_TX_LO_SHIFT (8U)                                             /*!< XCVR_TSM_TIMING58.TX_HPM_DAC_EN_TX_LO Position*/
#define XCVR_TSM_TIMING58_TX_HPM_DAC_EN_TX_LO(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< XCVR_TSM_TIMING58.TX_HPM_DAC_EN_TX_LO Field*/
/**
 * @} */ /* End group XCVR_TSM_Register_Masks_GROUP 
 */

/* XCVR_TSM - Peripheral instance base addresses */
#define XCVR_TSM_BasePtr               0x4005C2C0UL //!< Peripheral base address
#define XCVR_TSM                       ((XCVR_TSM_Type *) XCVR_TSM_BasePtr) //!< Freescale base pointer
#define XCVR_TSM_BASE_PTR              (XCVR_TSM) //!< Freescale style base pointer
/**
 * @} */ /* End group XCVR_TSM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XCVR_TX_DIG_Peripheral_access_layer_GROUP XCVR_TX_DIG Peripheral Access Layer
* @brief C Struct for XCVR_TX_DIG
* @{
*/

/* ================================================================================ */
/* ================           XCVR_TX_DIG (file:XCVR_TX_DIG_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief XCVR_TX_DIG
 */
/**
* @addtogroup XCVR_TX_DIG_structs_GROUP XCVR_TX_DIG struct
* @brief Struct for XCVR_TX_DIG
* @{
*/
typedef struct XCVR_TX_DIG_Type {
   __IO uint32_t  CTRL;                         /**< 0000: TX Digital Control                                           */
   __IO uint32_t  DATA_PADDING;                 /**< 0004: TX Data Padding                                              */
   __IO uint32_t  GFSK_CTRL;                    /**< 0008: TX GFSK Modulator Control                                    */
   __IO uint32_t  GFSK_COEFF2;                  /**< 000C: TX GFSK Filter Coefficients 2                                */
   __IO uint32_t  GFSK_COEFF1;                  /**< 0010: TX GFSK Filter Coefficients 1                                */
   __IO uint32_t  FSK_SCALE;                    /**< 0014: TX FSK Modulation Levels                                     */
   __IO uint32_t  DFT_PATTERN;                  /**< 0018: TX DFT Modulation Pattern                                    */
   __IO uint32_t  RF_DFT_BIST_1;                /**< 001C: TX DFT Control 1                                             */
   __IO uint32_t  RF_DFT_BIST_2;                /**< 0020: TX DFT Control 2                                             */
} XCVR_TX_DIG_Type;

/**
 * @} */ /* End group XCVR_TX_DIG_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XCVR_TX_DIG' Position & Mask macros                 ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XCVR_TX_DIG_Register_Masks_GROUP XCVR_TX_DIG Register Masks
* @brief Register Masks for XCVR_TX_DIG
* @{
*/
/* ------- CTRL Bit Fields                          ------ */
#define XCVR_TX_DIG_CTRL_RADIO_DFT_MODE_MASK     (0xFU)                                              /*!< XCVR_TX_DIG_CTRL.RADIO_DFT_MODE Mask    */
#define XCVR_TX_DIG_CTRL_RADIO_DFT_MODE_SHIFT    (0U)                                                /*!< XCVR_TX_DIG_CTRL.RADIO_DFT_MODE Position*/
#define XCVR_TX_DIG_CTRL_RADIO_DFT_MODE(x)       (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< XCVR_TX_DIG_CTRL.RADIO_DFT_MODE Field   */
#define XCVR_TX_DIG_CTRL_LFSR_LENGTH_MASK        (0x70U)                                             /*!< XCVR_TX_DIG_CTRL.LFSR_LENGTH Mask       */
#define XCVR_TX_DIG_CTRL_LFSR_LENGTH_SHIFT       (4U)                                                /*!< XCVR_TX_DIG_CTRL.LFSR_LENGTH Position   */
#define XCVR_TX_DIG_CTRL_LFSR_LENGTH(x)          (((uint32_t)(((uint32_t)(x))<<4U))&0x70UL)          /*!< XCVR_TX_DIG_CTRL.LFSR_LENGTH Field      */
#define XCVR_TX_DIG_CTRL_LFSR_EN_MASK            (0x80U)                                             /*!< XCVR_TX_DIG_CTRL.LFSR_EN Mask           */
#define XCVR_TX_DIG_CTRL_LFSR_EN_SHIFT           (7U)                                                /*!< XCVR_TX_DIG_CTRL.LFSR_EN Position       */
#define XCVR_TX_DIG_CTRL_LFSR_EN(x)              (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< XCVR_TX_DIG_CTRL.LFSR_EN Field          */
#define XCVR_TX_DIG_CTRL_DFT_CLK_SEL_MASK        (0x700U)                                            /*!< XCVR_TX_DIG_CTRL.DFT_CLK_SEL Mask       */
#define XCVR_TX_DIG_CTRL_DFT_CLK_SEL_SHIFT       (8U)                                                /*!< XCVR_TX_DIG_CTRL.DFT_CLK_SEL Position   */
#define XCVR_TX_DIG_CTRL_DFT_CLK_SEL(x)          (((uint32_t)(((uint32_t)(x))<<8U))&0x700UL)         /*!< XCVR_TX_DIG_CTRL.DFT_CLK_SEL Field      */
#define XCVR_TX_DIG_CTRL_TX_DFT_EN_MASK          (0x800U)                                            /*!< XCVR_TX_DIG_CTRL.TX_DFT_EN Mask         */
#define XCVR_TX_DIG_CTRL_TX_DFT_EN_SHIFT         (11U)                                               /*!< XCVR_TX_DIG_CTRL.TX_DFT_EN Position     */
#define XCVR_TX_DIG_CTRL_TX_DFT_EN(x)            (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< XCVR_TX_DIG_CTRL.TX_DFT_EN Field        */
#define XCVR_TX_DIG_CTRL_SOC_TEST_SEL_MASK       (0x3000U)                                           /*!< XCVR_TX_DIG_CTRL.SOC_TEST_SEL Mask      */
#define XCVR_TX_DIG_CTRL_SOC_TEST_SEL_SHIFT      (12U)                                               /*!< XCVR_TX_DIG_CTRL.SOC_TEST_SEL Position  */
#define XCVR_TX_DIG_CTRL_SOC_TEST_SEL(x)         (((uint32_t)(((uint32_t)(x))<<12U))&0x3000UL)       /*!< XCVR_TX_DIG_CTRL.SOC_TEST_SEL Field     */
#define XCVR_TX_DIG_CTRL_TX_CAPTURE_POL_MASK     (0x10000U)                                          /*!< XCVR_TX_DIG_CTRL.TX_CAPTURE_POL Mask    */
#define XCVR_TX_DIG_CTRL_TX_CAPTURE_POL_SHIFT    (16U)                                               /*!< XCVR_TX_DIG_CTRL.TX_CAPTURE_POL Position*/
#define XCVR_TX_DIG_CTRL_TX_CAPTURE_POL(x)       (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< XCVR_TX_DIG_CTRL.TX_CAPTURE_POL Field   */
#define XCVR_TX_DIG_CTRL_FREQ_WORD_ADJ_MASK      (0xFFC00000U)                                       /*!< XCVR_TX_DIG_CTRL.FREQ_WORD_ADJ Mask     */
#define XCVR_TX_DIG_CTRL_FREQ_WORD_ADJ_SHIFT     (22U)                                               /*!< XCVR_TX_DIG_CTRL.FREQ_WORD_ADJ Position */
#define XCVR_TX_DIG_CTRL_FREQ_WORD_ADJ(x)        (((uint32_t)(((uint32_t)(x))<<22U))&0xFFC00000UL)   /*!< XCVR_TX_DIG_CTRL.FREQ_WORD_ADJ Field    */
/* ------- DATA_PADDING Bit Fields                  ------ */
#define XCVR_TX_DIG_DATA_PADDING_DATA_PADDING_PAT_0_MASK (0xFFU)                                     /*!< XCVR_TX_DIG_DATA_PADDING.DATA_PADDING_PAT_0 Mask*/
#define XCVR_TX_DIG_DATA_PADDING_DATA_PADDING_PAT_0_SHIFT (0U)                                       /*!< XCVR_TX_DIG_DATA_PADDING.DATA_PADDING_PAT_0 Position*/
#define XCVR_TX_DIG_DATA_PADDING_DATA_PADDING_PAT_0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)    /*!< XCVR_TX_DIG_DATA_PADDING.DATA_PADDING_PAT_0 Field*/
#define XCVR_TX_DIG_DATA_PADDING_DATA_PADDING_PAT_1_MASK (0xFF00U)                                   /*!< XCVR_TX_DIG_DATA_PADDING.DATA_PADDING_PAT_1 Mask*/
#define XCVR_TX_DIG_DATA_PADDING_DATA_PADDING_PAT_1_SHIFT (8U)                                       /*!< XCVR_TX_DIG_DATA_PADDING.DATA_PADDING_PAT_1 Position*/
#define XCVR_TX_DIG_DATA_PADDING_DATA_PADDING_PAT_1(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)  /*!< XCVR_TX_DIG_DATA_PADDING.DATA_PADDING_PAT_1 Field*/
#define XCVR_TX_DIG_DATA_PADDING_DFT_LFSR_OUT_MASK (0x7FFF0000U)                                     /*!< XCVR_TX_DIG_DATA_PADDING.DFT_LFSR_OUT Mask*/
#define XCVR_TX_DIG_DATA_PADDING_DFT_LFSR_OUT_SHIFT (16U)                                            /*!< XCVR_TX_DIG_DATA_PADDING.DFT_LFSR_OUT Position*/
#define XCVR_TX_DIG_DATA_PADDING_DFT_LFSR_OUT(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x7FFF0000UL)   /*!< XCVR_TX_DIG_DATA_PADDING.DFT_LFSR_OUT Field*/
#define XCVR_TX_DIG_DATA_PADDING_LRM_MASK        (0x80000000U)                                       /*!< XCVR_TX_DIG_DATA_PADDING.LRM Mask       */
#define XCVR_TX_DIG_DATA_PADDING_LRM_SHIFT       (31U)                                               /*!< XCVR_TX_DIG_DATA_PADDING.LRM Position   */
#define XCVR_TX_DIG_DATA_PADDING_LRM(x)          (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< XCVR_TX_DIG_DATA_PADDING.LRM Field      */
/* ------- GFSK_CTRL Bit Fields                     ------ */
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MULTIPLY_TABLE_MANUAL_MASK (0xFFFFU)                              /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MULTIPLY_TABLE_MANUAL Mask*/
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MULTIPLY_TABLE_MANUAL_SHIFT (0U)                                  /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MULTIPLY_TABLE_MANUAL Position*/
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MULTIPLY_TABLE_MANUAL(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL) /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MULTIPLY_TABLE_MANUAL Field*/
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MI_MASK       (0x30000U)                                          /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MI Mask      */
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MI_SHIFT      (16U)                                               /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MI Position  */
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MI(x)         (((uint32_t)(((uint32_t)(x))<<16U))&0x30000UL)      /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MI Field     */
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MLD_MASK      (0x100000U)                                         /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MLD Mask     */
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MLD_SHIFT     (20U)                                               /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MLD Position */
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MLD(x)        (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MLD Field    */
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_FLD_MASK      (0x200000U)                                         /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_FLD Mask     */
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_FLD_SHIFT     (21U)                                               /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_FLD Position */
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_FLD(x)        (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_FLD Field    */
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MOD_INDEX_SCALING_MASK (0x7000000U)                               /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MOD_INDEX_SCALING Mask*/
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MOD_INDEX_SCALING_SHIFT (24U)                                     /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MOD_INDEX_SCALING Position*/
#define XCVR_TX_DIG_GFSK_CTRL_GFSK_MOD_INDEX_SCALING(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x7000000UL) /*!< XCVR_TX_DIG_GFSK_CTRL.GFSK_MOD_INDEX_SCALING Field*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_OVRD_EN_MASK (0x10000000U)                             /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_OVRD_EN Mask*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_OVRD_EN_SHIFT (28U)                                    /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_OVRD_EN Position*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_OVRD_EN(x) (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL) /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_OVRD_EN Field*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_0_OVRD_MASK (0x20000000U)                              /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_0_OVRD Mask*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_0_OVRD_SHIFT (29U)                                     /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_0_OVRD Position*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_0_OVRD(x) (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL) /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_0_OVRD Field*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_1_OVRD_MASK (0x40000000U)                              /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_1_OVRD Mask*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_1_OVRD_SHIFT (30U)                                     /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_1_OVRD Position*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_1_OVRD(x) (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL) /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_1_OVRD Field*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_2_OVRD_MASK (0x80000000U)                              /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_2_OVRD Mask*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_2_OVRD_SHIFT (31U)                                     /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_2_OVRD Position*/
#define XCVR_TX_DIG_GFSK_CTRL_TX_IMAGE_FILTER_2_OVRD(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL) /*!< XCVR_TX_DIG_GFSK_CTRL.TX_IMAGE_FILTER_2_OVRD Field*/
/* ------- GFSK_COEFF2 Bit Fields                   ------ */
#define XCVR_TX_DIG_GFSK_COEFF2_GFSK_FILTER_COEFF_MANUAL2_MASK (0xFFFFFFFFU)                         /*!< XCVR_TX_DIG_GFSK_COEFF2.GFSK_FILTER_COEFF_MANUAL2 Mask*/
#define XCVR_TX_DIG_GFSK_COEFF2_GFSK_FILTER_COEFF_MANUAL2_SHIFT (0U)                                 /*!< XCVR_TX_DIG_GFSK_COEFF2.GFSK_FILTER_COEFF_MANUAL2 Position*/
#define XCVR_TX_DIG_GFSK_COEFF2_GFSK_FILTER_COEFF_MANUAL2(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL) /*!< XCVR_TX_DIG_GFSK_COEFF2.GFSK_FILTER_COEFF_MANUAL2 Field*/
/* ------- GFSK_COEFF1 Bit Fields                   ------ */
#define XCVR_TX_DIG_GFSK_COEFF1_GFSK_FILTER_COEFF_MANUAL1_MASK (0xFFFFFFFFU)                         /*!< XCVR_TX_DIG_GFSK_COEFF1.GFSK_FILTER_COEFF_MANUAL1 Mask*/
#define XCVR_TX_DIG_GFSK_COEFF1_GFSK_FILTER_COEFF_MANUAL1_SHIFT (0U)                                 /*!< XCVR_TX_DIG_GFSK_COEFF1.GFSK_FILTER_COEFF_MANUAL1 Position*/
#define XCVR_TX_DIG_GFSK_COEFF1_GFSK_FILTER_COEFF_MANUAL1(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL) /*!< XCVR_TX_DIG_GFSK_COEFF1.GFSK_FILTER_COEFF_MANUAL1 Field*/
/* ------- FSK_SCALE Bit Fields                     ------ */
#define XCVR_TX_DIG_FSK_SCALE_FSK_MODULATION_SCALE_0_MASK (0x1FFFU)                                  /*!< XCVR_TX_DIG_FSK_SCALE.FSK_MODULATION_SCALE_0 Mask*/
#define XCVR_TX_DIG_FSK_SCALE_FSK_MODULATION_SCALE_0_SHIFT (0U)                                      /*!< XCVR_TX_DIG_FSK_SCALE.FSK_MODULATION_SCALE_0 Position*/
#define XCVR_TX_DIG_FSK_SCALE_FSK_MODULATION_SCALE_0(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1FFFUL) /*!< XCVR_TX_DIG_FSK_SCALE.FSK_MODULATION_SCALE_0 Field*/
#define XCVR_TX_DIG_FSK_SCALE_FSK_MODULATION_SCALE_1_MASK (0x1FFF0000U)                              /*!< XCVR_TX_DIG_FSK_SCALE.FSK_MODULATION_SCALE_1 Mask*/
#define XCVR_TX_DIG_FSK_SCALE_FSK_MODULATION_SCALE_1_SHIFT (16U)                                     /*!< XCVR_TX_DIG_FSK_SCALE.FSK_MODULATION_SCALE_1 Position*/
#define XCVR_TX_DIG_FSK_SCALE_FSK_MODULATION_SCALE_1(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x1FFF0000UL) /*!< XCVR_TX_DIG_FSK_SCALE.FSK_MODULATION_SCALE_1 Field*/
/* ------- DFT_PATTERN Bit Fields                   ------ */
#define XCVR_TX_DIG_DFT_PATTERN_DFT_MOD_PATTERN_MASK (0xFFFFFFFFU)                                   /*!< XCVR_TX_DIG_DFT_PATTERN.DFT_MOD_PATTERN Mask*/
#define XCVR_TX_DIG_DFT_PATTERN_DFT_MOD_PATTERN_SHIFT (0U)                                           /*!< XCVR_TX_DIG_DFT_PATTERN.DFT_MOD_PATTERN Position*/
#define XCVR_TX_DIG_DFT_PATTERN_DFT_MOD_PATTERN(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)  /*!< XCVR_TX_DIG_DFT_PATTERN.DFT_MOD_PATTERN Field*/
/* ------- RF_DFT_BIST_1 Bit Fields                 ------ */
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_GO_MASK (0x1U)                                          /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_GO Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_GO_SHIFT (0U)                                           /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_GO Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_GO(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)         /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_GO Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_FINISHED_MASK (0x2U)                                    /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_FINISHED Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_FINISHED_SHIFT (1U)                                     /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_FINISHED Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_FINISHED(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)   /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_FINISHED Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_RESULT_MASK (0x4U)                                      /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_RESULT Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_RESULT_SHIFT (2U)                                       /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_RESULT Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_RESULT(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)     /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_RESULT Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_THRSHLD_MASK (0xF0U)                                    /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_THRSHLD Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_THRSHLD_SHIFT (4U)                                      /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_THRSHLD Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_BIST_THRSHLD(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)   /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_BIST_THRSHLD Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_MAX_DIFF_MASK (0xFF00U)                                      /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_MAX_DIFF Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_MAX_DIFF_SHIFT (8U)                                          /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_MAX_DIFF Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_MAX_DIFF(x) (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)     /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_MAX_DIFF Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_MAX_DIFF_CH_MASK (0x7F0000U)                                 /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_MAX_DIFF_CH Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_MAX_DIFF_CH_SHIFT (16U)                                      /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_MAX_DIFF_CH Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_CTUNE_MAX_DIFF_CH(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x7F0000UL) /*!< XCVR_TX_DIG_RF_DFT_BIST_1.CTUNE_MAX_DIFF_CH Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_PA_AM_MOD_FREQ_MASK (0x7000000U)                                   /*!< XCVR_TX_DIG_RF_DFT_BIST_1.PA_AM_MOD_FREQ Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_PA_AM_MOD_FREQ_SHIFT (24U)                                         /*!< XCVR_TX_DIG_RF_DFT_BIST_1.PA_AM_MOD_FREQ Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_PA_AM_MOD_FREQ(x) (((uint32_t)(((uint32_t)(x))<<24U))&0x7000000UL) /*!< XCVR_TX_DIG_RF_DFT_BIST_1.PA_AM_MOD_FREQ Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_PA_AM_MOD_ENTRIES_MASK (0x70000000U)                               /*!< XCVR_TX_DIG_RF_DFT_BIST_1.PA_AM_MOD_ENTRIES Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_PA_AM_MOD_ENTRIES_SHIFT (28U)                                      /*!< XCVR_TX_DIG_RF_DFT_BIST_1.PA_AM_MOD_ENTRIES Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_PA_AM_MOD_ENTRIES(x) (((uint32_t)(((uint32_t)(x))<<28U))&0x70000000UL) /*!< XCVR_TX_DIG_RF_DFT_BIST_1.PA_AM_MOD_ENTRIES Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_PA_AM_MOD_EN_MASK (0x80000000U)                                    /*!< XCVR_TX_DIG_RF_DFT_BIST_1.PA_AM_MOD_EN Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_PA_AM_MOD_EN_SHIFT (31U)                                           /*!< XCVR_TX_DIG_RF_DFT_BIST_1.PA_AM_MOD_EN Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_1_PA_AM_MOD_EN(x) (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)  /*!< XCVR_TX_DIG_RF_DFT_BIST_1.PA_AM_MOD_EN Field*/
/* ------- RF_DFT_BIST_2 Bit Fields                 ------ */
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_GO_MASK (0x1U)                                            /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_GO Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_GO_SHIFT (0U)                                             /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_GO Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_GO(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_GO Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_FINISHED_MASK (0x2U)                                      /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_FINISHED Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_FINISHED_SHIFT (1U)                                       /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_FINISHED Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_FINISHED(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)     /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_FINISHED Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_RESULT_MASK (0x4U)                                        /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_RESULT Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_RESULT_SHIFT (2U)                                         /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_RESULT Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_RESULT(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)       /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_RESULT Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_ALL_CHANNELS_MASK (0x8U)                                  /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_ALL_CHANNELS Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_ALL_CHANNELS_SHIFT (3U)                                   /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_ALL_CHANNELS Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_SYN_BIST_ALL_CHANNELS(x) (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL) /*!< XCVR_TX_DIG_RF_DFT_BIST_2.SYN_BIST_ALL_CHANNELS Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_FREQ_COUNT_THRESHOLD_MASK (0xFF0U)                                 /*!< XCVR_TX_DIG_RF_DFT_BIST_2.FREQ_COUNT_THRESHOLD Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_FREQ_COUNT_THRESHOLD_SHIFT (4U)                                    /*!< XCVR_TX_DIG_RF_DFT_BIST_2.FREQ_COUNT_THRESHOLD Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_FREQ_COUNT_THRESHOLD(x) (((uint32_t)(((uint32_t)(x))<<4U))&0xFF0UL) /*!< XCVR_TX_DIG_RF_DFT_BIST_2.FREQ_COUNT_THRESHOLD Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_INL_BIST_GO_MASK (0x1000U)                                     /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_INL_BIST_GO Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_INL_BIST_GO_SHIFT (12U)                                        /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_INL_BIST_GO Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_INL_BIST_GO(x) (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)   /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_INL_BIST_GO Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_INL_BIST_FINISHED_MASK (0x2000U)                               /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_INL_BIST_FINISHED Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_INL_BIST_FINISHED_SHIFT (13U)                                  /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_INL_BIST_FINISHED Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_INL_BIST_FINISHED(x) (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL) /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_INL_BIST_FINISHED Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_INL_BIST_RESULT_MASK (0x4000U)                                 /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_INL_BIST_RESULT Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_INL_BIST_RESULT_SHIFT (14U)                                    /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_INL_BIST_RESULT Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_INL_BIST_RESULT(x) (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL) /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_INL_BIST_RESULT Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_DNL_BIST_GO_MASK (0x10000U)                                    /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_DNL_BIST_GO Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_DNL_BIST_GO_SHIFT (16U)                                        /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_DNL_BIST_GO Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_DNL_BIST_GO(x) (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)  /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_DNL_BIST_GO Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_DNL_BIST_FINISHED_MASK (0x20000U)                              /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_DNL_BIST_FINISHED Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_DNL_BIST_FINISHED_SHIFT (17U)                                  /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_DNL_BIST_FINISHED Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_DNL_BIST_FINISHED(x) (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL) /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_DNL_BIST_FINISHED Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_DNL_BIST_RESULT_MASK (0x40000U)                                /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_DNL_BIST_RESULT Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_DNL_BIST_RESULT_SHIFT (18U)                                    /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_DNL_BIST_RESULT Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_HPM_DNL_BIST_RESULT(x) (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL) /*!< XCVR_TX_DIG_RF_DFT_BIST_2.HPM_DNL_BIST_RESULT Field*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_DFT_MAX_RAM_SIZE_MASK (0x1FF00000U)                                /*!< XCVR_TX_DIG_RF_DFT_BIST_2.DFT_MAX_RAM_SIZE Mask*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_DFT_MAX_RAM_SIZE_SHIFT (20U)                                       /*!< XCVR_TX_DIG_RF_DFT_BIST_2.DFT_MAX_RAM_SIZE Position*/
#define XCVR_TX_DIG_RF_DFT_BIST_2_DFT_MAX_RAM_SIZE(x) (((uint32_t)(((uint32_t)(x))<<20U))&0x1FF00000UL) /*!< XCVR_TX_DIG_RF_DFT_BIST_2.DFT_MAX_RAM_SIZE Field*/
/**
 * @} */ /* End group XCVR_TX_DIG_Register_Masks_GROUP 
 */

/* XCVR_TX_DIG - Peripheral instance base addresses */
#define XCVR_TX_DIG_BasePtr            0x4005C200UL //!< Peripheral base address
#define XCVR_TX_DIG                    ((XCVR_TX_DIG_Type *) XCVR_TX_DIG_BasePtr) //!< Freescale base pointer
#define XCVR_TX_DIG_BASE_PTR           (XCVR_TX_DIG) //!< Freescale style base pointer
/**
 * @} */ /* End group XCVR_TX_DIG_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup XCVR_ZBDEM_Peripheral_access_layer_GROUP XCVR_ZBDEM Peripheral Access Layer
* @brief C Struct for XCVR_ZBDEM
* @{
*/

/* ================================================================================ */
/* ================           XCVR_ZBDEM (file:XCVR_ZBDEM_MKW41Z4)       ================ */
/* ================================================================================ */

/**
 * @brief XCVR_ZBDEMOD
 */
/**
* @addtogroup XCVR_ZBDEM_structs_GROUP XCVR_ZBDEM struct
* @brief Struct for XCVR_ZBDEM
* @{
*/
typedef struct XCVR_ZBDEM_Type {
   __IO uint32_t  CORR_CTRL;                    /**< 0000: 802.15.4 DEMOD CORRELLATOR CONTROL                           */
   __IO uint32_t  PN_TYPE;                      /**< 0004: 802.15.4 DEMOD PN TYPE                                       */
   __IO uint32_t  PN_CODE;                      /**< 0008: 802.15.4 DEMOD PN CODE                                       */
   __IO uint32_t  SYNC_CTRL;                    /**< 000C: 802.15.4 DEMOD SYMBOL SYNC CONTROL                           */
   __IO uint32_t  CCA_LQI_SRC;                  /**< 0010: 802.15.4 CCA/LQI SOURCE                                      */
   __IO uint32_t  FAD_THR;                      /**< 0014: FAD CORRELATOR THRESHOLD                                     */
   __IO uint32_t  ZBDEM_AFC;                    /**< 0018: 802.15.4 AFC STATUS                                          */
} XCVR_ZBDEM_Type;

/**
 * @} */ /* End group XCVR_ZBDEM_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'XCVR_ZBDEM' Position & Mask macros                  ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup XCVR_ZBDEM_Register_Masks_GROUP XCVR_ZBDEM Register Masks
* @brief Register Masks for XCVR_ZBDEM
* @{
*/
/* ------- CORR_CTRL Bit Fields                     ------ */
#define XCVR_ZBDEM_CORR_CTRL_CORR_VT_MASK        (0xFFU)                                             /*!< XCVR_ZBDEM_CORR_CTRL.CORR_VT Mask       */
#define XCVR_ZBDEM_CORR_CTRL_CORR_VT_SHIFT       (0U)                                                /*!< XCVR_ZBDEM_CORR_CTRL.CORR_VT Position   */
#define XCVR_ZBDEM_CORR_CTRL_CORR_VT(x)          (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_ZBDEM_CORR_CTRL.CORR_VT Field      */
#define XCVR_ZBDEM_CORR_CTRL_CORR_NVAL_MASK      (0x700U)                                            /*!< XCVR_ZBDEM_CORR_CTRL.CORR_NVAL Mask     */
#define XCVR_ZBDEM_CORR_CTRL_CORR_NVAL_SHIFT     (8U)                                                /*!< XCVR_ZBDEM_CORR_CTRL.CORR_NVAL Position */
#define XCVR_ZBDEM_CORR_CTRL_CORR_NVAL(x)        (((uint32_t)(((uint32_t)(x))<<8U))&0x700UL)         /*!< XCVR_ZBDEM_CORR_CTRL.CORR_NVAL Field    */
#define XCVR_ZBDEM_CORR_CTRL_MAX_CORR_EN_MASK    (0x800U)                                            /*!< XCVR_ZBDEM_CORR_CTRL.MAX_CORR_EN Mask   */
#define XCVR_ZBDEM_CORR_CTRL_MAX_CORR_EN_SHIFT   (11U)                                               /*!< XCVR_ZBDEM_CORR_CTRL.MAX_CORR_EN Position*/
#define XCVR_ZBDEM_CORR_CTRL_MAX_CORR_EN(x)      (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< XCVR_ZBDEM_CORR_CTRL.MAX_CORR_EN Field  */
#define XCVR_ZBDEM_CORR_CTRL_ZBDEM_CLK_ON_MASK   (0x8000U)                                           /*!< XCVR_ZBDEM_CORR_CTRL.ZBDEM_CLK_ON Mask  */
#define XCVR_ZBDEM_CORR_CTRL_ZBDEM_CLK_ON_SHIFT  (15U)                                               /*!< XCVR_ZBDEM_CORR_CTRL.ZBDEM_CLK_ON Position*/
#define XCVR_ZBDEM_CORR_CTRL_ZBDEM_CLK_ON(x)     (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< XCVR_ZBDEM_CORR_CTRL.ZBDEM_CLK_ON Field */
#define XCVR_ZBDEM_CORR_CTRL_RX_MAX_CORR_MASK    (0xFF0000U)                                         /*!< XCVR_ZBDEM_CORR_CTRL.RX_MAX_CORR Mask   */
#define XCVR_ZBDEM_CORR_CTRL_RX_MAX_CORR_SHIFT   (16U)                                               /*!< XCVR_ZBDEM_CORR_CTRL.RX_MAX_CORR Position*/
#define XCVR_ZBDEM_CORR_CTRL_RX_MAX_CORR(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< XCVR_ZBDEM_CORR_CTRL.RX_MAX_CORR Field  */
#define XCVR_ZBDEM_CORR_CTRL_RX_MAX_PREAMBLE_MASK (0xFF000000U)                                      /*!< XCVR_ZBDEM_CORR_CTRL.RX_MAX_PREAMBLE Mask*/
#define XCVR_ZBDEM_CORR_CTRL_RX_MAX_PREAMBLE_SHIFT (24U)                                             /*!< XCVR_ZBDEM_CORR_CTRL.RX_MAX_PREAMBLE Position*/
#define XCVR_ZBDEM_CORR_CTRL_RX_MAX_PREAMBLE(x)  (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< XCVR_ZBDEM_CORR_CTRL.RX_MAX_PREAMBLE Field*/
/* ------- PN_TYPE Bit Fields                       ------ */
#define XCVR_ZBDEM_PN_TYPE_PN_TYPE_MASK          (0x1U)                                              /*!< XCVR_ZBDEM_PN_TYPE.PN_TYPE Mask         */
#define XCVR_ZBDEM_PN_TYPE_PN_TYPE_SHIFT         (0U)                                                /*!< XCVR_ZBDEM_PN_TYPE.PN_TYPE Position     */
#define XCVR_ZBDEM_PN_TYPE_PN_TYPE(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_ZBDEM_PN_TYPE.PN_TYPE Field        */
#define XCVR_ZBDEM_PN_TYPE_TX_INV_MASK           (0x2U)                                              /*!< XCVR_ZBDEM_PN_TYPE.TX_INV Mask          */
#define XCVR_ZBDEM_PN_TYPE_TX_INV_SHIFT          (1U)                                                /*!< XCVR_ZBDEM_PN_TYPE.TX_INV Position      */
#define XCVR_ZBDEM_PN_TYPE_TX_INV(x)             (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_ZBDEM_PN_TYPE.TX_INV Field         */
/* ------- PN_CODE Bit Fields                       ------ */
#define XCVR_ZBDEM_PN_CODE_PN_LSB_MASK           (0xFFFFU)                                           /*!< XCVR_ZBDEM_PN_CODE.PN_LSB Mask          */
#define XCVR_ZBDEM_PN_CODE_PN_LSB_SHIFT          (0U)                                                /*!< XCVR_ZBDEM_PN_CODE.PN_LSB Position      */
#define XCVR_ZBDEM_PN_CODE_PN_LSB(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< XCVR_ZBDEM_PN_CODE.PN_LSB Field         */
#define XCVR_ZBDEM_PN_CODE_PN_MSB_MASK           (0xFFFF0000U)                                       /*!< XCVR_ZBDEM_PN_CODE.PN_MSB Mask          */
#define XCVR_ZBDEM_PN_CODE_PN_MSB_SHIFT          (16U)                                               /*!< XCVR_ZBDEM_PN_CODE.PN_MSB Position      */
#define XCVR_ZBDEM_PN_CODE_PN_MSB(x)             (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< XCVR_ZBDEM_PN_CODE.PN_MSB Field         */
/* ------- SYNC_CTRL Bit Fields                     ------ */
#define XCVR_ZBDEM_SYNC_CTRL_SYNC_PER_MASK       (0x7U)                                              /*!< XCVR_ZBDEM_SYNC_CTRL.SYNC_PER Mask      */
#define XCVR_ZBDEM_SYNC_CTRL_SYNC_PER_SHIFT      (0U)                                                /*!< XCVR_ZBDEM_SYNC_CTRL.SYNC_PER Position  */
#define XCVR_ZBDEM_SYNC_CTRL_SYNC_PER(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< XCVR_ZBDEM_SYNC_CTRL.SYNC_PER Field     */
#define XCVR_ZBDEM_SYNC_CTRL_TRACK_ENABLE_MASK   (0x8U)                                              /*!< XCVR_ZBDEM_SYNC_CTRL.TRACK_ENABLE Mask  */
#define XCVR_ZBDEM_SYNC_CTRL_TRACK_ENABLE_SHIFT  (3U)                                                /*!< XCVR_ZBDEM_SYNC_CTRL.TRACK_ENABLE Position*/
#define XCVR_ZBDEM_SYNC_CTRL_TRACK_ENABLE(x)     (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< XCVR_ZBDEM_SYNC_CTRL.TRACK_ENABLE Field */
/* ------- CCA_LQI_SRC Bit Fields                   ------ */
#define XCVR_ZBDEM_CCA_LQI_SRC_CCA1_FROM_RX_DIG_MASK (0x1U)                                          /*!< XCVR_ZBDEM_CCA_LQI_SRC.CCA1_FROM_RX_DIG Mask*/
#define XCVR_ZBDEM_CCA_LQI_SRC_CCA1_FROM_RX_DIG_SHIFT (0U)                                           /*!< XCVR_ZBDEM_CCA_LQI_SRC.CCA1_FROM_RX_DIG Position*/
#define XCVR_ZBDEM_CCA_LQI_SRC_CCA1_FROM_RX_DIG(x) (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)         /*!< XCVR_ZBDEM_CCA_LQI_SRC.CCA1_FROM_RX_DIG Field*/
#define XCVR_ZBDEM_CCA_LQI_SRC_LQI_FROM_RX_DIG_MASK (0x2U)                                           /*!< XCVR_ZBDEM_CCA_LQI_SRC.LQI_FROM_RX_DIG Mask*/
#define XCVR_ZBDEM_CCA_LQI_SRC_LQI_FROM_RX_DIG_SHIFT (1U)                                            /*!< XCVR_ZBDEM_CCA_LQI_SRC.LQI_FROM_RX_DIG Position*/
#define XCVR_ZBDEM_CCA_LQI_SRC_LQI_FROM_RX_DIG(x) (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)          /*!< XCVR_ZBDEM_CCA_LQI_SRC.LQI_FROM_RX_DIG Field*/
#define XCVR_ZBDEM_CCA_LQI_SRC_LQI_START_AT_SFD_MASK (0x4U)                                          /*!< XCVR_ZBDEM_CCA_LQI_SRC.LQI_START_AT_SFD Mask*/
#define XCVR_ZBDEM_CCA_LQI_SRC_LQI_START_AT_SFD_SHIFT (2U)                                           /*!< XCVR_ZBDEM_CCA_LQI_SRC.LQI_START_AT_SFD Position*/
#define XCVR_ZBDEM_CCA_LQI_SRC_LQI_START_AT_SFD(x) (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)         /*!< XCVR_ZBDEM_CCA_LQI_SRC.LQI_START_AT_SFD Field*/
/* ------- FAD_THR Bit Fields                       ------ */
#define XCVR_ZBDEM_FAD_THR_FAD_THR_MASK          (0xFFU)                                             /*!< XCVR_ZBDEM_FAD_THR.FAD_THR Mask         */
#define XCVR_ZBDEM_FAD_THR_FAD_THR_SHIFT         (0U)                                                /*!< XCVR_ZBDEM_FAD_THR.FAD_THR Position     */
#define XCVR_ZBDEM_FAD_THR_FAD_THR(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< XCVR_ZBDEM_FAD_THR.FAD_THR Field        */
/* ------- ZBDEM_AFC Bit Fields                     ------ */
#define XCVR_ZBDEM_ZBDEM_AFC_AFC_EN_MASK         (0x1U)                                              /*!< XCVR_ZBDEM_ZBDEM_AFC.AFC_EN Mask        */
#define XCVR_ZBDEM_ZBDEM_AFC_AFC_EN_SHIFT        (0U)                                                /*!< XCVR_ZBDEM_ZBDEM_AFC.AFC_EN Position    */
#define XCVR_ZBDEM_ZBDEM_AFC_AFC_EN(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< XCVR_ZBDEM_ZBDEM_AFC.AFC_EN Field       */
#define XCVR_ZBDEM_ZBDEM_AFC_DCD_EN_MASK         (0x2U)                                              /*!< XCVR_ZBDEM_ZBDEM_AFC.DCD_EN Mask        */
#define XCVR_ZBDEM_ZBDEM_AFC_DCD_EN_SHIFT        (1U)                                                /*!< XCVR_ZBDEM_ZBDEM_AFC.DCD_EN Position    */
#define XCVR_ZBDEM_ZBDEM_AFC_DCD_EN(x)           (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< XCVR_ZBDEM_ZBDEM_AFC.DCD_EN Field       */
#define XCVR_ZBDEM_ZBDEM_AFC_AFC_OUT_MASK        (0x1F00U)                                           /*!< XCVR_ZBDEM_ZBDEM_AFC.AFC_OUT Mask       */
#define XCVR_ZBDEM_ZBDEM_AFC_AFC_OUT_SHIFT       (8U)                                                /*!< XCVR_ZBDEM_ZBDEM_AFC.AFC_OUT Position   */
#define XCVR_ZBDEM_ZBDEM_AFC_AFC_OUT(x)          (((uint32_t)(((uint32_t)(x))<<8U))&0x1F00UL)        /*!< XCVR_ZBDEM_ZBDEM_AFC.AFC_OUT Field      */
/**
 * @} */ /* End group XCVR_ZBDEM_Register_Masks_GROUP 
 */

/* XCVR_ZBDEM - Peripheral instance base addresses */
#define XCVR_ZBDEM_BasePtr             0x4005C480UL //!< Peripheral base address
#define XCVR_ZBDEM                     ((XCVR_ZBDEM_Type *) XCVR_ZBDEM_BasePtr) //!< Freescale base pointer
#define XCVR_ZBDEM_BASE_PTR            (XCVR_ZBDEM) //!< Freescale style base pointer
/**
 * @} */ /* End group XCVR_ZBDEM_Peripheral_access_layer_GROUP 
 */
/**
* @addtogroup ZLL_Peripheral_access_layer_GROUP ZLL Peripheral Access Layer
* @brief C Struct for ZLL
* @{
*/

/* ================================================================================ */
/* ================           ZLL (file:ZLL_MKW41Z4)               ================ */
/* ================================================================================ */

/**
 * @brief ZLL
 */
/**
* @addtogroup ZLL_structs_GROUP ZLL struct
* @brief Struct for ZLL
* @{
*/
typedef struct ZLL_Type {
   __IO uint32_t  IRQSTS;                       /**< 0000: INTERRUPT REQUEST STATUS                                     */
   __IO uint32_t  PHY_CTRL;                     /**< 0004: PHY CONTROL                                                  */
   __IO uint32_t  EVENT_TMR;                    /**< 0008: EVENT TIMER                                                  */
   __I  uint32_t  TIMESTAMP;                    /**< 000C: TIMESTAMP                                                    */
   __IO uint32_t  T1CMP;                        /**< 0010: T1 COMPARE                                                   */
   __IO uint32_t  T2CMP;                        /**< 0014: T2 COMPARE                                                   */
   __IO uint32_t  T2PRIMECMP;                   /**< 0018: T2 PRIME COMPARE                                             */
   __IO uint32_t  T3CMP;                        /**< 001C: T3 COMPARE                                                   */
   __IO uint32_t  T4CMP;                        /**< 0020: T4 COMPARE                                                   */
   __IO uint32_t  PA_PWR;                       /**< 0024: PA POWER                                                     */
   __IO uint32_t  CHANNEL_NUM0;                 /**< 0028: CHANNEL NUMBER 0                                             */
   __I  uint32_t  LQI_AND_RSSI;                 /**< 002C: LQI AND RSSI                                                 */
   __IO uint32_t  MACSHORTADDRS0;               /**< 0030: MAC SHORT ADDRESS 0                                          */
   __IO uint32_t  MACLONGADDRS0_LSB;            /**< 0034: MAC LONG ADDRESS 0 LSB                                       */
   __IO uint32_t  MACLONGADDRS0_MSB;            /**< 0038: MAC LONG ADDRESS 0 MSB                                       */
   __IO uint32_t  RX_FRAME_FILTER;              /**< 003C: RECEIVE FRAME FILTER                                         */
   __IO uint32_t  CCA_LQI_CTRL;                 /**< 0040: CCA AND LQI CONTROL                                          */
   __IO uint32_t  CCA2_CTRL;                    /**< 0044: CCA2 CONTROL                                                 */
        uint8_t   RESERVED_0[4];                /**< 0048: 0x4 bytes                                                    */
   __IO uint32_t  DSM_CTRL;                     /**< 004C: DSM CONTROL                                                  */
   __IO uint32_t  BSM_CTRL;                     /**< 0050: BSM CONTROL                                                  */
   __IO uint32_t  MACSHORTADDRS1;               /**< 0054: MAC SHORT ADDRESS FOR PAN1                                   */
   __IO uint32_t  MACLONGADDRS1_LSB;            /**< 0058: MAC LONG ADDRESS 1 LSB                                       */
   __IO uint32_t  MACLONGADDRS1_MSB;            /**< 005C: MAC LONG ADDRESS 1 MSB                                       */
   __IO uint32_t  DUAL_PAN_CTRL;                /**< 0060: DUAL PAN CONTROL                                             */
   __IO uint32_t  CHANNEL_NUM1;                 /**< 0064: CHANNEL NUMBER 1                                             */
   __IO uint32_t  SAM_CTRL;                     /**< 0068: SAM CONTROL                                                  */
   __IO uint32_t  SAM_TABLE;                    /**< 006C: SOURCE ADDRESS MANAGEMENT TABLE                              */
   __I  uint32_t  SAM_MATCH;                    /**< 0070: SOURCE ADDRESS MANAGEMENT MATCH                              */
   __I  uint32_t  SAM_FREE_IDX;                 /**< 0074: SAM FREE INDEX                                               */
   __IO uint32_t  SEQ_CTRL_STS;                 /**< 0078: SEQUENCE CONTROL AND STATUS                                  */
   __IO uint32_t  ACKDELAY;                     /**< 007C: ACK DELAY                                                    */
   __IO uint32_t  FILTERFAIL_CODE;              /**< 0080: FILTER FAIL CODE                                             */
   __IO uint32_t  RX_WTR_MARK;                  /**< 0084: RECEIVE WATER MARK                                           */
        uint8_t   RESERVED_1[4];                /**< 0088: 0x4 bytes                                                    */
   __IO uint32_t  SLOT_PRELOAD;                 /**< 008C: SLOT PRELOAD                                                 */
   __I  uint32_t  SEQ_STATE;                    /**< 0090: 802.15.4 SEQUENCE STATE                                      */
   __IO uint32_t  TMR_PRESCALE;                 /**< 0094: TIMER PRESCALER                                              */
   __IO uint32_t  LENIENCY_LSB;                 /**< 0098: LENIENCY LSB                                                 */
   __IO uint32_t  LENIENCY_MSB;                 /**< 009C: LENIENCY MSB                                                 */
   __I  uint32_t  PART_ID;                      /**< 00A0: PART ID                                                      */
        uint8_t   RESERVED_2[92];               /**< 00A4: 0x5C bytes                                                   */
   __IO uint16_t  PKT_BUFFER_TX[64];            /**< 0100: Packet Buffer TX                                             */
   __IO uint16_t  PKT_BUFFER_RX[64];            /**< 0180: Packet Buffer RX                                             */
} ZLL_Type;

/**
 * @} */ /* End group ZLL_structs_GROUP 
 */

/* -------------------------------------------------------------------------------- */
/* -----------     'ZLL' Position & Mask macros                         ----------- */
/* -------------------------------------------------------------------------------- */

/**
* @addtogroup ZLL_Register_Masks_GROUP ZLL Register Masks
* @brief Register Masks for ZLL
* @{
*/
/* ------- IRQSTS Bit Fields                        ------ */
#define ZLL_IRQSTS_SEQIRQ_MASK                   (0x1U)                                              /*!< ZLL_IRQSTS.SEQIRQ Mask                  */
#define ZLL_IRQSTS_SEQIRQ_SHIFT                  (0U)                                                /*!< ZLL_IRQSTS.SEQIRQ Position              */
#define ZLL_IRQSTS_SEQIRQ(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ZLL_IRQSTS.SEQIRQ Field                 */
#define ZLL_IRQSTS_TXIRQ_MASK                    (0x2U)                                              /*!< ZLL_IRQSTS.TXIRQ Mask                   */
#define ZLL_IRQSTS_TXIRQ_SHIFT                   (1U)                                                /*!< ZLL_IRQSTS.TXIRQ Position               */
#define ZLL_IRQSTS_TXIRQ(x)                      (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< ZLL_IRQSTS.TXIRQ Field                  */
#define ZLL_IRQSTS_RXIRQ_MASK                    (0x4U)                                              /*!< ZLL_IRQSTS.RXIRQ Mask                   */
#define ZLL_IRQSTS_RXIRQ_SHIFT                   (2U)                                                /*!< ZLL_IRQSTS.RXIRQ Position               */
#define ZLL_IRQSTS_RXIRQ(x)                      (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ZLL_IRQSTS.RXIRQ Field                  */
#define ZLL_IRQSTS_CCAIRQ_MASK                   (0x8U)                                              /*!< ZLL_IRQSTS.CCAIRQ Mask                  */
#define ZLL_IRQSTS_CCAIRQ_SHIFT                  (3U)                                                /*!< ZLL_IRQSTS.CCAIRQ Position              */
#define ZLL_IRQSTS_CCAIRQ(x)                     (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< ZLL_IRQSTS.CCAIRQ Field                 */
#define ZLL_IRQSTS_RXWTRMRKIRQ_MASK              (0x10U)                                             /*!< ZLL_IRQSTS.RXWTRMRKIRQ Mask             */
#define ZLL_IRQSTS_RXWTRMRKIRQ_SHIFT             (4U)                                                /*!< ZLL_IRQSTS.RXWTRMRKIRQ Position         */
#define ZLL_IRQSTS_RXWTRMRKIRQ(x)                (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< ZLL_IRQSTS.RXWTRMRKIRQ Field            */
#define ZLL_IRQSTS_FILTERFAIL_IRQ_MASK           (0x20U)                                             /*!< ZLL_IRQSTS.FILTERFAIL_IRQ Mask          */
#define ZLL_IRQSTS_FILTERFAIL_IRQ_SHIFT          (5U)                                                /*!< ZLL_IRQSTS.FILTERFAIL_IRQ Position      */
#define ZLL_IRQSTS_FILTERFAIL_IRQ(x)             (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< ZLL_IRQSTS.FILTERFAIL_IRQ Field         */
#define ZLL_IRQSTS_PLL_UNLOCK_IRQ_MASK           (0x40U)                                             /*!< ZLL_IRQSTS.PLL_UNLOCK_IRQ Mask          */
#define ZLL_IRQSTS_PLL_UNLOCK_IRQ_SHIFT          (6U)                                                /*!< ZLL_IRQSTS.PLL_UNLOCK_IRQ Position      */
#define ZLL_IRQSTS_PLL_UNLOCK_IRQ(x)             (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< ZLL_IRQSTS.PLL_UNLOCK_IRQ Field         */
#define ZLL_IRQSTS_RX_FRM_PEND_MASK              (0x80U)                                             /*!< ZLL_IRQSTS.RX_FRM_PEND Mask             */
#define ZLL_IRQSTS_RX_FRM_PEND_SHIFT             (7U)                                                /*!< ZLL_IRQSTS.RX_FRM_PEND Position         */
#define ZLL_IRQSTS_RX_FRM_PEND(x)                (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ZLL_IRQSTS.RX_FRM_PEND Field            */
#define ZLL_IRQSTS_WAKE_IRQ_MASK                 (0x100U)                                            /*!< ZLL_IRQSTS.WAKE_IRQ Mask                */
#define ZLL_IRQSTS_WAKE_IRQ_SHIFT                (8U)                                                /*!< ZLL_IRQSTS.WAKE_IRQ Position            */
#define ZLL_IRQSTS_WAKE_IRQ(x)                   (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< ZLL_IRQSTS.WAKE_IRQ Field               */
#define ZLL_IRQSTS_TSM_IRQ_MASK                  (0x400U)                                            /*!< ZLL_IRQSTS.TSM_IRQ Mask                 */
#define ZLL_IRQSTS_TSM_IRQ_SHIFT                 (10U)                                               /*!< ZLL_IRQSTS.TSM_IRQ Position             */
#define ZLL_IRQSTS_TSM_IRQ(x)                    (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< ZLL_IRQSTS.TSM_IRQ Field                */
#define ZLL_IRQSTS_ENH_PKT_STATUS_MASK           (0x800U)                                            /*!< ZLL_IRQSTS.ENH_PKT_STATUS Mask          */
#define ZLL_IRQSTS_ENH_PKT_STATUS_SHIFT          (11U)                                               /*!< ZLL_IRQSTS.ENH_PKT_STATUS Position      */
#define ZLL_IRQSTS_ENH_PKT_STATUS(x)             (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< ZLL_IRQSTS.ENH_PKT_STATUS Field         */
#define ZLL_IRQSTS_PI_MASK                       (0x1000U)                                           /*!< ZLL_IRQSTS.PI Mask                      */
#define ZLL_IRQSTS_PI_SHIFT                      (12U)                                               /*!< ZLL_IRQSTS.PI Position                  */
#define ZLL_IRQSTS_PI(x)                         (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< ZLL_IRQSTS.PI Field                     */
#define ZLL_IRQSTS_SRCADDR_MASK                  (0x2000U)                                           /*!< ZLL_IRQSTS.SRCADDR Mask                 */
#define ZLL_IRQSTS_SRCADDR_SHIFT                 (13U)                                               /*!< ZLL_IRQSTS.SRCADDR Position             */
#define ZLL_IRQSTS_SRCADDR(x)                    (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< ZLL_IRQSTS.SRCADDR Field                */
#define ZLL_IRQSTS_CCA_MASK                      (0x4000U)                                           /*!< ZLL_IRQSTS.CCA Mask                     */
#define ZLL_IRQSTS_CCA_SHIFT                     (14U)                                               /*!< ZLL_IRQSTS.CCA Position                 */
#define ZLL_IRQSTS_CCA(x)                        (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< ZLL_IRQSTS.CCA Field                    */
#define ZLL_IRQSTS_CRCVALID_MASK                 (0x8000U)                                           /*!< ZLL_IRQSTS.CRCVALID Mask                */
#define ZLL_IRQSTS_CRCVALID_SHIFT                (15U)                                               /*!< ZLL_IRQSTS.CRCVALID Position            */
#define ZLL_IRQSTS_CRCVALID(x)                   (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< ZLL_IRQSTS.CRCVALID Field               */
#define ZLL_IRQSTS_TMR1IRQ_MASK                  (0x10000U)                                          /*!< ZLL_IRQSTS.TMR1IRQ Mask                 */
#define ZLL_IRQSTS_TMR1IRQ_SHIFT                 (16U)                                               /*!< ZLL_IRQSTS.TMR1IRQ Position             */
#define ZLL_IRQSTS_TMR1IRQ(x)                    (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< ZLL_IRQSTS.TMR1IRQ Field                */
#define ZLL_IRQSTS_TMR2IRQ_MASK                  (0x20000U)                                          /*!< ZLL_IRQSTS.TMR2IRQ Mask                 */
#define ZLL_IRQSTS_TMR2IRQ_SHIFT                 (17U)                                               /*!< ZLL_IRQSTS.TMR2IRQ Position             */
#define ZLL_IRQSTS_TMR2IRQ(x)                    (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< ZLL_IRQSTS.TMR2IRQ Field                */
#define ZLL_IRQSTS_TMR3IRQ_MASK                  (0x40000U)                                          /*!< ZLL_IRQSTS.TMR3IRQ Mask                 */
#define ZLL_IRQSTS_TMR3IRQ_SHIFT                 (18U)                                               /*!< ZLL_IRQSTS.TMR3IRQ Position             */
#define ZLL_IRQSTS_TMR3IRQ(x)                    (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< ZLL_IRQSTS.TMR3IRQ Field                */
#define ZLL_IRQSTS_TMR4IRQ_MASK                  (0x80000U)                                          /*!< ZLL_IRQSTS.TMR4IRQ Mask                 */
#define ZLL_IRQSTS_TMR4IRQ_SHIFT                 (19U)                                               /*!< ZLL_IRQSTS.TMR4IRQ Position             */
#define ZLL_IRQSTS_TMR4IRQ(x)                    (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< ZLL_IRQSTS.TMR4IRQ Field                */
#define ZLL_IRQSTS_TMR1MSK_MASK                  (0x100000U)                                         /*!< ZLL_IRQSTS.TMR1MSK Mask                 */
#define ZLL_IRQSTS_TMR1MSK_SHIFT                 (20U)                                               /*!< ZLL_IRQSTS.TMR1MSK Position             */
#define ZLL_IRQSTS_TMR1MSK(x)                    (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< ZLL_IRQSTS.TMR1MSK Field                */
#define ZLL_IRQSTS_TMR2MSK_MASK                  (0x200000U)                                         /*!< ZLL_IRQSTS.TMR2MSK Mask                 */
#define ZLL_IRQSTS_TMR2MSK_SHIFT                 (21U)                                               /*!< ZLL_IRQSTS.TMR2MSK Position             */
#define ZLL_IRQSTS_TMR2MSK(x)                    (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< ZLL_IRQSTS.TMR2MSK Field                */
#define ZLL_IRQSTS_TMR3MSK_MASK                  (0x400000U)                                         /*!< ZLL_IRQSTS.TMR3MSK Mask                 */
#define ZLL_IRQSTS_TMR3MSK_SHIFT                 (22U)                                               /*!< ZLL_IRQSTS.TMR3MSK Position             */
#define ZLL_IRQSTS_TMR3MSK(x)                    (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< ZLL_IRQSTS.TMR3MSK Field                */
#define ZLL_IRQSTS_TMR4MSK_MASK                  (0x800000U)                                         /*!< ZLL_IRQSTS.TMR4MSK Mask                 */
#define ZLL_IRQSTS_TMR4MSK_SHIFT                 (23U)                                               /*!< ZLL_IRQSTS.TMR4MSK Position             */
#define ZLL_IRQSTS_TMR4MSK(x)                    (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< ZLL_IRQSTS.TMR4MSK Field                */
#define ZLL_IRQSTS_RX_FRAME_LENGTH_MASK          (0x7F000000U)                                       /*!< ZLL_IRQSTS.RX_FRAME_LENGTH Mask         */
#define ZLL_IRQSTS_RX_FRAME_LENGTH_SHIFT         (24U)                                               /*!< ZLL_IRQSTS.RX_FRAME_LENGTH Position     */
#define ZLL_IRQSTS_RX_FRAME_LENGTH(x)            (((uint32_t)(((uint32_t)(x))<<24U))&0x7F000000UL)   /*!< ZLL_IRQSTS.RX_FRAME_LENGTH Field        */
/* ------- PHY_CTRL Bit Fields                      ------ */
#define ZLL_PHY_CTRL_XCVSEQ_MASK                 (0x7U)                                              /*!< ZLL_PHY_CTRL.XCVSEQ Mask                */
#define ZLL_PHY_CTRL_XCVSEQ_SHIFT                (0U)                                                /*!< ZLL_PHY_CTRL.XCVSEQ Position            */
#define ZLL_PHY_CTRL_XCVSEQ(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< ZLL_PHY_CTRL.XCVSEQ Field               */
#define ZLL_PHY_CTRL_AUTOACK_MASK                (0x8U)                                              /*!< ZLL_PHY_CTRL.AUTOACK Mask               */
#define ZLL_PHY_CTRL_AUTOACK_SHIFT               (3U)                                                /*!< ZLL_PHY_CTRL.AUTOACK Position           */
#define ZLL_PHY_CTRL_AUTOACK(x)                  (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< ZLL_PHY_CTRL.AUTOACK Field              */
#define ZLL_PHY_CTRL_RXACKRQD_MASK               (0x10U)                                             /*!< ZLL_PHY_CTRL.RXACKRQD Mask              */
#define ZLL_PHY_CTRL_RXACKRQD_SHIFT              (4U)                                                /*!< ZLL_PHY_CTRL.RXACKRQD Position          */
#define ZLL_PHY_CTRL_RXACKRQD(x)                 (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< ZLL_PHY_CTRL.RXACKRQD Field             */
#define ZLL_PHY_CTRL_CCABFRTX_MASK               (0x20U)                                             /*!< ZLL_PHY_CTRL.CCABFRTX Mask              */
#define ZLL_PHY_CTRL_CCABFRTX_SHIFT              (5U)                                                /*!< ZLL_PHY_CTRL.CCABFRTX Position          */
#define ZLL_PHY_CTRL_CCABFRTX(x)                 (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< ZLL_PHY_CTRL.CCABFRTX Field             */
#define ZLL_PHY_CTRL_SLOTTED_MASK                (0x40U)                                             /*!< ZLL_PHY_CTRL.SLOTTED Mask               */
#define ZLL_PHY_CTRL_SLOTTED_SHIFT               (6U)                                                /*!< ZLL_PHY_CTRL.SLOTTED Position           */
#define ZLL_PHY_CTRL_SLOTTED(x)                  (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< ZLL_PHY_CTRL.SLOTTED Field              */
#define ZLL_PHY_CTRL_TMRTRIGEN_MASK              (0x80U)                                             /*!< ZLL_PHY_CTRL.TMRTRIGEN Mask             */
#define ZLL_PHY_CTRL_TMRTRIGEN_SHIFT             (7U)                                                /*!< ZLL_PHY_CTRL.TMRTRIGEN Position         */
#define ZLL_PHY_CTRL_TMRTRIGEN(x)                (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ZLL_PHY_CTRL.TMRTRIGEN Field            */
#define ZLL_PHY_CTRL_SEQMSK_MASK                 (0x100U)                                            /*!< ZLL_PHY_CTRL.SEQMSK Mask                */
#define ZLL_PHY_CTRL_SEQMSK_SHIFT                (8U)                                                /*!< ZLL_PHY_CTRL.SEQMSK Position            */
#define ZLL_PHY_CTRL_SEQMSK(x)                   (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< ZLL_PHY_CTRL.SEQMSK Field               */
#define ZLL_PHY_CTRL_TXMSK_MASK                  (0x200U)                                            /*!< ZLL_PHY_CTRL.TXMSK Mask                 */
#define ZLL_PHY_CTRL_TXMSK_SHIFT                 (9U)                                                /*!< ZLL_PHY_CTRL.TXMSK Position             */
#define ZLL_PHY_CTRL_TXMSK(x)                    (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< ZLL_PHY_CTRL.TXMSK Field                */
#define ZLL_PHY_CTRL_RXMSK_MASK                  (0x400U)                                            /*!< ZLL_PHY_CTRL.RXMSK Mask                 */
#define ZLL_PHY_CTRL_RXMSK_SHIFT                 (10U)                                               /*!< ZLL_PHY_CTRL.RXMSK Position             */
#define ZLL_PHY_CTRL_RXMSK(x)                    (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< ZLL_PHY_CTRL.RXMSK Field                */
#define ZLL_PHY_CTRL_CCAMSK_MASK                 (0x800U)                                            /*!< ZLL_PHY_CTRL.CCAMSK Mask                */
#define ZLL_PHY_CTRL_CCAMSK_SHIFT                (11U)                                               /*!< ZLL_PHY_CTRL.CCAMSK Position            */
#define ZLL_PHY_CTRL_CCAMSK(x)                   (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< ZLL_PHY_CTRL.CCAMSK Field               */
#define ZLL_PHY_CTRL_RX_WMRK_MSK_MASK            (0x1000U)                                           /*!< ZLL_PHY_CTRL.RX_WMRK_MSK Mask           */
#define ZLL_PHY_CTRL_RX_WMRK_MSK_SHIFT           (12U)                                               /*!< ZLL_PHY_CTRL.RX_WMRK_MSK Position       */
#define ZLL_PHY_CTRL_RX_WMRK_MSK(x)              (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< ZLL_PHY_CTRL.RX_WMRK_MSK Field          */
#define ZLL_PHY_CTRL_FILTERFAIL_MSK_MASK         (0x2000U)                                           /*!< ZLL_PHY_CTRL.FILTERFAIL_MSK Mask        */
#define ZLL_PHY_CTRL_FILTERFAIL_MSK_SHIFT        (13U)                                               /*!< ZLL_PHY_CTRL.FILTERFAIL_MSK Position    */
#define ZLL_PHY_CTRL_FILTERFAIL_MSK(x)           (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< ZLL_PHY_CTRL.FILTERFAIL_MSK Field       */
#define ZLL_PHY_CTRL_PLL_UNLOCK_MSK_MASK         (0x4000U)                                           /*!< ZLL_PHY_CTRL.PLL_UNLOCK_MSK Mask        */
#define ZLL_PHY_CTRL_PLL_UNLOCK_MSK_SHIFT        (14U)                                               /*!< ZLL_PHY_CTRL.PLL_UNLOCK_MSK Position    */
#define ZLL_PHY_CTRL_PLL_UNLOCK_MSK(x)           (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< ZLL_PHY_CTRL.PLL_UNLOCK_MSK Field       */
#define ZLL_PHY_CTRL_CRC_MSK_MASK                (0x8000U)                                           /*!< ZLL_PHY_CTRL.CRC_MSK Mask               */
#define ZLL_PHY_CTRL_CRC_MSK_SHIFT               (15U)                                               /*!< ZLL_PHY_CTRL.CRC_MSK Position           */
#define ZLL_PHY_CTRL_CRC_MSK(x)                  (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< ZLL_PHY_CTRL.CRC_MSK Field              */
#define ZLL_PHY_CTRL_WAKE_MSK_MASK               (0x10000U)                                          /*!< ZLL_PHY_CTRL.WAKE_MSK Mask              */
#define ZLL_PHY_CTRL_WAKE_MSK_SHIFT              (16U)                                               /*!< ZLL_PHY_CTRL.WAKE_MSK Position          */
#define ZLL_PHY_CTRL_WAKE_MSK(x)                 (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< ZLL_PHY_CTRL.WAKE_MSK Field             */
#define ZLL_PHY_CTRL_TSM_MSK_MASK                (0x40000U)                                          /*!< ZLL_PHY_CTRL.TSM_MSK Mask               */
#define ZLL_PHY_CTRL_TSM_MSK_SHIFT               (18U)                                               /*!< ZLL_PHY_CTRL.TSM_MSK Position           */
#define ZLL_PHY_CTRL_TSM_MSK(x)                  (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< ZLL_PHY_CTRL.TSM_MSK Field              */
#define ZLL_PHY_CTRL_TMR1CMP_EN_MASK             (0x100000U)                                         /*!< ZLL_PHY_CTRL.TMR1CMP_EN Mask            */
#define ZLL_PHY_CTRL_TMR1CMP_EN_SHIFT            (20U)                                               /*!< ZLL_PHY_CTRL.TMR1CMP_EN Position        */
#define ZLL_PHY_CTRL_TMR1CMP_EN(x)               (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< ZLL_PHY_CTRL.TMR1CMP_EN Field           */
#define ZLL_PHY_CTRL_TMR2CMP_EN_MASK             (0x200000U)                                         /*!< ZLL_PHY_CTRL.TMR2CMP_EN Mask            */
#define ZLL_PHY_CTRL_TMR2CMP_EN_SHIFT            (21U)                                               /*!< ZLL_PHY_CTRL.TMR2CMP_EN Position        */
#define ZLL_PHY_CTRL_TMR2CMP_EN(x)               (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< ZLL_PHY_CTRL.TMR2CMP_EN Field           */
#define ZLL_PHY_CTRL_TMR3CMP_EN_MASK             (0x400000U)                                         /*!< ZLL_PHY_CTRL.TMR3CMP_EN Mask            */
#define ZLL_PHY_CTRL_TMR3CMP_EN_SHIFT            (22U)                                               /*!< ZLL_PHY_CTRL.TMR3CMP_EN Position        */
#define ZLL_PHY_CTRL_TMR3CMP_EN(x)               (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< ZLL_PHY_CTRL.TMR3CMP_EN Field           */
#define ZLL_PHY_CTRL_TMR4CMP_EN_MASK             (0x800000U)                                         /*!< ZLL_PHY_CTRL.TMR4CMP_EN Mask            */
#define ZLL_PHY_CTRL_TMR4CMP_EN_SHIFT            (23U)                                               /*!< ZLL_PHY_CTRL.TMR4CMP_EN Position        */
#define ZLL_PHY_CTRL_TMR4CMP_EN(x)               (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< ZLL_PHY_CTRL.TMR4CMP_EN Field           */
#define ZLL_PHY_CTRL_TC2PRIME_EN_MASK            (0x1000000U)                                        /*!< ZLL_PHY_CTRL.TC2PRIME_EN Mask           */
#define ZLL_PHY_CTRL_TC2PRIME_EN_SHIFT           (24U)                                               /*!< ZLL_PHY_CTRL.TC2PRIME_EN Position       */
#define ZLL_PHY_CTRL_TC2PRIME_EN(x)              (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< ZLL_PHY_CTRL.TC2PRIME_EN Field          */
#define ZLL_PHY_CTRL_PROMISCUOUS_MASK            (0x2000000U)                                        /*!< ZLL_PHY_CTRL.PROMISCUOUS Mask           */
#define ZLL_PHY_CTRL_PROMISCUOUS_SHIFT           (25U)                                               /*!< ZLL_PHY_CTRL.PROMISCUOUS Position       */
#define ZLL_PHY_CTRL_PROMISCUOUS(x)              (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< ZLL_PHY_CTRL.PROMISCUOUS Field          */
#define ZLL_PHY_CTRL_CCATYPE_MASK                (0x18000000U)                                       /*!< ZLL_PHY_CTRL.CCATYPE Mask               */
#define ZLL_PHY_CTRL_CCATYPE_SHIFT               (27U)                                               /*!< ZLL_PHY_CTRL.CCATYPE Position           */
#define ZLL_PHY_CTRL_CCATYPE(x)                  (((uint32_t)(((uint32_t)(x))<<27U))&0x18000000UL)   /*!< ZLL_PHY_CTRL.CCATYPE Field              */
#define ZLL_PHY_CTRL_PANCORDNTR0_MASK            (0x20000000U)                                       /*!< ZLL_PHY_CTRL.PANCORDNTR0 Mask           */
#define ZLL_PHY_CTRL_PANCORDNTR0_SHIFT           (29U)                                               /*!< ZLL_PHY_CTRL.PANCORDNTR0 Position       */
#define ZLL_PHY_CTRL_PANCORDNTR0(x)              (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< ZLL_PHY_CTRL.PANCORDNTR0 Field          */
#define ZLL_PHY_CTRL_TC3TMOUT_MASK               (0x40000000U)                                       /*!< ZLL_PHY_CTRL.TC3TMOUT Mask              */
#define ZLL_PHY_CTRL_TC3TMOUT_SHIFT              (30U)                                               /*!< ZLL_PHY_CTRL.TC3TMOUT Position          */
#define ZLL_PHY_CTRL_TC3TMOUT(x)                 (((uint32_t)(((uint32_t)(x))<<30U))&0x40000000UL)   /*!< ZLL_PHY_CTRL.TC3TMOUT Field             */
#define ZLL_PHY_CTRL_TRCV_MSK_MASK               (0x80000000U)                                       /*!< ZLL_PHY_CTRL.TRCV_MSK Mask              */
#define ZLL_PHY_CTRL_TRCV_MSK_SHIFT              (31U)                                               /*!< ZLL_PHY_CTRL.TRCV_MSK Position          */
#define ZLL_PHY_CTRL_TRCV_MSK(x)                 (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< ZLL_PHY_CTRL.TRCV_MSK Field             */
/* ------- EVENT_TMR Bit Fields                     ------ */
#define ZLL_EVENT_TMR_EVENT_TMR_LD_MASK          (0x1U)                                              /*!< ZLL_EVENT_TMR.EVENT_TMR_LD Mask         */
#define ZLL_EVENT_TMR_EVENT_TMR_LD_SHIFT         (0U)                                                /*!< ZLL_EVENT_TMR.EVENT_TMR_LD Position     */
#define ZLL_EVENT_TMR_EVENT_TMR_LD(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ZLL_EVENT_TMR.EVENT_TMR_LD Field        */
#define ZLL_EVENT_TMR_EVENT_TMR_ADD_MASK         (0x2U)                                              /*!< ZLL_EVENT_TMR.EVENT_TMR_ADD Mask        */
#define ZLL_EVENT_TMR_EVENT_TMR_ADD_SHIFT        (1U)                                                /*!< ZLL_EVENT_TMR.EVENT_TMR_ADD Position    */
#define ZLL_EVENT_TMR_EVENT_TMR_ADD(x)           (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< ZLL_EVENT_TMR.EVENT_TMR_ADD Field       */
#define ZLL_EVENT_TMR_EVENT_TMR_FRAC_MASK        (0xF0U)                                             /*!< ZLL_EVENT_TMR.EVENT_TMR_FRAC Mask       */
#define ZLL_EVENT_TMR_EVENT_TMR_FRAC_SHIFT       (4U)                                                /*!< ZLL_EVENT_TMR.EVENT_TMR_FRAC Position   */
#define ZLL_EVENT_TMR_EVENT_TMR_FRAC(x)          (((uint32_t)(((uint32_t)(x))<<4U))&0xF0UL)          /*!< ZLL_EVENT_TMR.EVENT_TMR_FRAC Field      */
#define ZLL_EVENT_TMR_EVENT_TMR_MASK             (0xFFFFFF00U)                                       /*!< ZLL_EVENT_TMR.EVENT_TMR Mask            */
#define ZLL_EVENT_TMR_EVENT_TMR_SHIFT            (8U)                                                /*!< ZLL_EVENT_TMR.EVENT_TMR Position        */
#define ZLL_EVENT_TMR_EVENT_TMR(x)               (((uint32_t)(((uint32_t)(x))<<8U))&0xFFFFFF00UL)    /*!< ZLL_EVENT_TMR.EVENT_TMR Field           */
/* ------- TIMESTAMP Bit Fields                     ------ */
#define ZLL_TIMESTAMP_TIMESTAMP_MASK             (0xFFFFFFU)                                         /*!< ZLL_TIMESTAMP.TIMESTAMP Mask            */
#define ZLL_TIMESTAMP_TIMESTAMP_SHIFT            (0U)                                                /*!< ZLL_TIMESTAMP.TIMESTAMP Position        */
#define ZLL_TIMESTAMP_TIMESTAMP(x)               (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< ZLL_TIMESTAMP.TIMESTAMP Field           */
/* ------- T1CMP Bit Fields                         ------ */
#define ZLL_T1CMP_T1CMP_MASK                     (0xFFFFFFU)                                         /*!< ZLL_T1CMP.T1CMP Mask                    */
#define ZLL_T1CMP_T1CMP_SHIFT                    (0U)                                                /*!< ZLL_T1CMP.T1CMP Position                */
#define ZLL_T1CMP_T1CMP(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< ZLL_T1CMP.T1CMP Field                   */
/* ------- T2CMP Bit Fields                         ------ */
#define ZLL_T2CMP_T2CMP_MASK                     (0xFFFFFFU)                                         /*!< ZLL_T2CMP.T2CMP Mask                    */
#define ZLL_T2CMP_T2CMP_SHIFT                    (0U)                                                /*!< ZLL_T2CMP.T2CMP Position                */
#define ZLL_T2CMP_T2CMP(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< ZLL_T2CMP.T2CMP Field                   */
/* ------- T2PRIMECMP Bit Fields                    ------ */
#define ZLL_T2PRIMECMP_T2PRIMECMP_MASK           (0xFFFFU)                                           /*!< ZLL_T2PRIMECMP.T2PRIMECMP Mask          */
#define ZLL_T2PRIMECMP_T2PRIMECMP_SHIFT          (0U)                                                /*!< ZLL_T2PRIMECMP.T2PRIMECMP Position      */
#define ZLL_T2PRIMECMP_T2PRIMECMP(x)             (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< ZLL_T2PRIMECMP.T2PRIMECMP Field         */
/* ------- T3CMP Bit Fields                         ------ */
#define ZLL_T3CMP_T3CMP_MASK                     (0xFFFFFFU)                                         /*!< ZLL_T3CMP.T3CMP Mask                    */
#define ZLL_T3CMP_T3CMP_SHIFT                    (0U)                                                /*!< ZLL_T3CMP.T3CMP Position                */
#define ZLL_T3CMP_T3CMP(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< ZLL_T3CMP.T3CMP Field                   */
/* ------- T4CMP Bit Fields                         ------ */
#define ZLL_T4CMP_T4CMP_MASK                     (0xFFFFFFU)                                         /*!< ZLL_T4CMP.T4CMP Mask                    */
#define ZLL_T4CMP_T4CMP_SHIFT                    (0U)                                                /*!< ZLL_T4CMP.T4CMP Position                */
#define ZLL_T4CMP_T4CMP(x)                       (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFUL)      /*!< ZLL_T4CMP.T4CMP Field                   */
/* ------- PA_PWR Bit Fields                        ------ */
#define ZLL_PA_PWR_PA_PWR_MASK                   (0x3FU)                                             /*!< ZLL_PA_PWR.PA_PWR Mask                  */
#define ZLL_PA_PWR_PA_PWR_SHIFT                  (0U)                                                /*!< ZLL_PA_PWR.PA_PWR Position              */
#define ZLL_PA_PWR_PA_PWR(x)                     (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< ZLL_PA_PWR.PA_PWR Field                 */
/* ------- CHANNEL_NUM0 Bit Fields                  ------ */
#define ZLL_CHANNEL_NUM0_CHANNEL_NUM0_MASK       (0x7FU)                                             /*!< ZLL_CHANNEL_NUM0.CHANNEL_NUM0 Mask      */
#define ZLL_CHANNEL_NUM0_CHANNEL_NUM0_SHIFT      (0U)                                                /*!< ZLL_CHANNEL_NUM0.CHANNEL_NUM0 Position  */
#define ZLL_CHANNEL_NUM0_CHANNEL_NUM0(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< ZLL_CHANNEL_NUM0.CHANNEL_NUM0 Field     */
/* ------- LQI_AND_RSSI Bit Fields                  ------ */
#define ZLL_LQI_AND_RSSI_LQI_VALUE_MASK          (0xFFU)                                             /*!< ZLL_LQI_AND_RSSI.LQI_VALUE Mask         */
#define ZLL_LQI_AND_RSSI_LQI_VALUE_SHIFT         (0U)                                                /*!< ZLL_LQI_AND_RSSI.LQI_VALUE Position     */
#define ZLL_LQI_AND_RSSI_LQI_VALUE(x)            (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< ZLL_LQI_AND_RSSI.LQI_VALUE Field        */
#define ZLL_LQI_AND_RSSI_RSSI_MASK               (0xFF00U)                                           /*!< ZLL_LQI_AND_RSSI.RSSI Mask              */
#define ZLL_LQI_AND_RSSI_RSSI_SHIFT              (8U)                                                /*!< ZLL_LQI_AND_RSSI.RSSI Position          */
#define ZLL_LQI_AND_RSSI_RSSI(x)                 (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< ZLL_LQI_AND_RSSI.RSSI Field             */
#define ZLL_LQI_AND_RSSI_CCA1_ED_FNL_MASK        (0xFF0000U)                                         /*!< ZLL_LQI_AND_RSSI.CCA1_ED_FNL Mask       */
#define ZLL_LQI_AND_RSSI_CCA1_ED_FNL_SHIFT       (16U)                                               /*!< ZLL_LQI_AND_RSSI.CCA1_ED_FNL Position   */
#define ZLL_LQI_AND_RSSI_CCA1_ED_FNL(x)          (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< ZLL_LQI_AND_RSSI.CCA1_ED_FNL Field      */
/* ------- MACSHORTADDRS0 Bit Fields                ------ */
#define ZLL_MACSHORTADDRS0_MACPANID0_MASK        (0xFFFFU)                                           /*!< ZLL_MACSHORTADDRS0.MACPANID0 Mask       */
#define ZLL_MACSHORTADDRS0_MACPANID0_SHIFT       (0U)                                                /*!< ZLL_MACSHORTADDRS0.MACPANID0 Position   */
#define ZLL_MACSHORTADDRS0_MACPANID0(x)          (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< ZLL_MACSHORTADDRS0.MACPANID0 Field      */
#define ZLL_MACSHORTADDRS0_MACSHORTADDRS0_MASK   (0xFFFF0000U)                                       /*!< ZLL_MACSHORTADDRS0.MACSHORTADDRS0 Mask  */
#define ZLL_MACSHORTADDRS0_MACSHORTADDRS0_SHIFT  (16U)                                               /*!< ZLL_MACSHORTADDRS0.MACSHORTADDRS0 Position*/
#define ZLL_MACSHORTADDRS0_MACSHORTADDRS0(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< ZLL_MACSHORTADDRS0.MACSHORTADDRS0 Field */
/* ------- MACLONGADDRS0_LSB Bit Fields             ------ */
#define ZLL_MACLONGADDRS0_LSB_MACLONGADDRS0_LSB_MASK (0xFFFFFFFFU)                                   /*!< ZLL_MACLONGADDRS0_LSB.MACLONGADDRS0_LSB Mask*/
#define ZLL_MACLONGADDRS0_LSB_MACLONGADDRS0_LSB_SHIFT (0U)                                           /*!< ZLL_MACLONGADDRS0_LSB.MACLONGADDRS0_LSB Position*/
#define ZLL_MACLONGADDRS0_LSB_MACLONGADDRS0_LSB(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)  /*!< ZLL_MACLONGADDRS0_LSB.MACLONGADDRS0_LSB Field*/
/* ------- MACLONGADDRS0_MSB Bit Fields             ------ */
#define ZLL_MACLONGADDRS0_MSB_MACLONGADDRS0_MSB_MASK (0xFFFFFFFFU)                                   /*!< ZLL_MACLONGADDRS0_MSB.MACLONGADDRS0_MSB Mask*/
#define ZLL_MACLONGADDRS0_MSB_MACLONGADDRS0_MSB_SHIFT (0U)                                           /*!< ZLL_MACLONGADDRS0_MSB.MACLONGADDRS0_MSB Position*/
#define ZLL_MACLONGADDRS0_MSB_MACLONGADDRS0_MSB(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)  /*!< ZLL_MACLONGADDRS0_MSB.MACLONGADDRS0_MSB Field*/
/* ------- RX_FRAME_FILTER Bit Fields               ------ */
#define ZLL_RX_FRAME_FILTER_BEACON_FT_MASK       (0x1U)                                              /*!< ZLL_RX_FRAME_FILTER.BEACON_FT Mask      */
#define ZLL_RX_FRAME_FILTER_BEACON_FT_SHIFT      (0U)                                                /*!< ZLL_RX_FRAME_FILTER.BEACON_FT Position  */
#define ZLL_RX_FRAME_FILTER_BEACON_FT(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ZLL_RX_FRAME_FILTER.BEACON_FT Field     */
#define ZLL_RX_FRAME_FILTER_DATA_FT_MASK         (0x2U)                                              /*!< ZLL_RX_FRAME_FILTER.DATA_FT Mask        */
#define ZLL_RX_FRAME_FILTER_DATA_FT_SHIFT        (1U)                                                /*!< ZLL_RX_FRAME_FILTER.DATA_FT Position    */
#define ZLL_RX_FRAME_FILTER_DATA_FT(x)           (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< ZLL_RX_FRAME_FILTER.DATA_FT Field       */
#define ZLL_RX_FRAME_FILTER_ACK_FT_MASK          (0x4U)                                              /*!< ZLL_RX_FRAME_FILTER.ACK_FT Mask         */
#define ZLL_RX_FRAME_FILTER_ACK_FT_SHIFT         (2U)                                                /*!< ZLL_RX_FRAME_FILTER.ACK_FT Position     */
#define ZLL_RX_FRAME_FILTER_ACK_FT(x)            (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ZLL_RX_FRAME_FILTER.ACK_FT Field        */
#define ZLL_RX_FRAME_FILTER_CMD_FT_MASK          (0x8U)                                              /*!< ZLL_RX_FRAME_FILTER.CMD_FT Mask         */
#define ZLL_RX_FRAME_FILTER_CMD_FT_SHIFT         (3U)                                                /*!< ZLL_RX_FRAME_FILTER.CMD_FT Position     */
#define ZLL_RX_FRAME_FILTER_CMD_FT(x)            (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< ZLL_RX_FRAME_FILTER.CMD_FT Field        */
#define ZLL_RX_FRAME_FILTER_LLDN_FT_MASK         (0x10U)                                             /*!< ZLL_RX_FRAME_FILTER.LLDN_FT Mask        */
#define ZLL_RX_FRAME_FILTER_LLDN_FT_SHIFT        (4U)                                                /*!< ZLL_RX_FRAME_FILTER.LLDN_FT Position    */
#define ZLL_RX_FRAME_FILTER_LLDN_FT(x)           (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< ZLL_RX_FRAME_FILTER.LLDN_FT Field       */
#define ZLL_RX_FRAME_FILTER_MULTIPURPOSE_FT_MASK (0x20U)                                             /*!< ZLL_RX_FRAME_FILTER.MULTIPURPOSE_FT Mask*/
#define ZLL_RX_FRAME_FILTER_MULTIPURPOSE_FT_SHIFT (5U)                                               /*!< ZLL_RX_FRAME_FILTER.MULTIPURPOSE_FT Position*/
#define ZLL_RX_FRAME_FILTER_MULTIPURPOSE_FT(x)   (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< ZLL_RX_FRAME_FILTER.MULTIPURPOSE_FT Field*/
#define ZLL_RX_FRAME_FILTER_NS_FT_MASK           (0x40U)                                             /*!< ZLL_RX_FRAME_FILTER.NS_FT Mask          */
#define ZLL_RX_FRAME_FILTER_NS_FT_SHIFT          (6U)                                                /*!< ZLL_RX_FRAME_FILTER.NS_FT Position      */
#define ZLL_RX_FRAME_FILTER_NS_FT(x)             (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< ZLL_RX_FRAME_FILTER.NS_FT Field         */
#define ZLL_RX_FRAME_FILTER_EXTENDED_FT_MASK     (0x80U)                                             /*!< ZLL_RX_FRAME_FILTER.EXTENDED_FT Mask    */
#define ZLL_RX_FRAME_FILTER_EXTENDED_FT_SHIFT    (7U)                                                /*!< ZLL_RX_FRAME_FILTER.EXTENDED_FT Position*/
#define ZLL_RX_FRAME_FILTER_EXTENDED_FT(x)       (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ZLL_RX_FRAME_FILTER.EXTENDED_FT Field   */
#define ZLL_RX_FRAME_FILTER_FRM_VER_FILTER_MASK  (0xF00U)                                            /*!< ZLL_RX_FRAME_FILTER.FRM_VER_FILTER Mask */
#define ZLL_RX_FRAME_FILTER_FRM_VER_FILTER_SHIFT (8U)                                                /*!< ZLL_RX_FRAME_FILTER.FRM_VER_FILTER Position*/
#define ZLL_RX_FRAME_FILTER_FRM_VER_FILTER(x)    (((uint32_t)(((uint32_t)(x))<<8U))&0xF00UL)         /*!< ZLL_RX_FRAME_FILTER.FRM_VER_FILTER Field*/
#define ZLL_RX_FRAME_FILTER_ACTIVE_PROMISCUOUS_MASK (0x4000U)                                        /*!< ZLL_RX_FRAME_FILTER.ACTIVE_PROMISCUOUS Mask*/
#define ZLL_RX_FRAME_FILTER_ACTIVE_PROMISCUOUS_SHIFT (14U)                                           /*!< ZLL_RX_FRAME_FILTER.ACTIVE_PROMISCUOUS Position*/
#define ZLL_RX_FRAME_FILTER_ACTIVE_PROMISCUOUS(x) (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)      /*!< ZLL_RX_FRAME_FILTER.ACTIVE_PROMISCUOUS Field*/
#define ZLL_RX_FRAME_FILTER_EXTENDED_FCS_CHK_MASK (0x8000U)                                          /*!< ZLL_RX_FRAME_FILTER.EXTENDED_FCS_CHK Mask*/
#define ZLL_RX_FRAME_FILTER_EXTENDED_FCS_CHK_SHIFT (15U)                                             /*!< ZLL_RX_FRAME_FILTER.EXTENDED_FCS_CHK Position*/
#define ZLL_RX_FRAME_FILTER_EXTENDED_FCS_CHK(x)  (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< ZLL_RX_FRAME_FILTER.EXTENDED_FCS_CHK Field*/
#define ZLL_RX_FRAME_FILTER_FV2_BEACON_RECD_MASK (0x10000U)                                          /*!< ZLL_RX_FRAME_FILTER.FV2_BEACON_RECD Mask*/
#define ZLL_RX_FRAME_FILTER_FV2_BEACON_RECD_SHIFT (16U)                                              /*!< ZLL_RX_FRAME_FILTER.FV2_BEACON_RECD Position*/
#define ZLL_RX_FRAME_FILTER_FV2_BEACON_RECD(x)   (((uint32_t)(((uint32_t)(x))<<16U))&0x10000UL)      /*!< ZLL_RX_FRAME_FILTER.FV2_BEACON_RECD Field*/
#define ZLL_RX_FRAME_FILTER_FV2_DATA_RECD_MASK   (0x20000U)                                          /*!< ZLL_RX_FRAME_FILTER.FV2_DATA_RECD Mask  */
#define ZLL_RX_FRAME_FILTER_FV2_DATA_RECD_SHIFT  (17U)                                               /*!< ZLL_RX_FRAME_FILTER.FV2_DATA_RECD Position*/
#define ZLL_RX_FRAME_FILTER_FV2_DATA_RECD(x)     (((uint32_t)(((uint32_t)(x))<<17U))&0x20000UL)      /*!< ZLL_RX_FRAME_FILTER.FV2_DATA_RECD Field */
#define ZLL_RX_FRAME_FILTER_FV2_ACK_RECD_MASK    (0x40000U)                                          /*!< ZLL_RX_FRAME_FILTER.FV2_ACK_RECD Mask   */
#define ZLL_RX_FRAME_FILTER_FV2_ACK_RECD_SHIFT   (18U)                                               /*!< ZLL_RX_FRAME_FILTER.FV2_ACK_RECD Position*/
#define ZLL_RX_FRAME_FILTER_FV2_ACK_RECD(x)      (((uint32_t)(((uint32_t)(x))<<18U))&0x40000UL)      /*!< ZLL_RX_FRAME_FILTER.FV2_ACK_RECD Field  */
#define ZLL_RX_FRAME_FILTER_FV2_CMD_RECD_MASK    (0x80000U)                                          /*!< ZLL_RX_FRAME_FILTER.FV2_CMD_RECD Mask   */
#define ZLL_RX_FRAME_FILTER_FV2_CMD_RECD_SHIFT   (19U)                                               /*!< ZLL_RX_FRAME_FILTER.FV2_CMD_RECD Position*/
#define ZLL_RX_FRAME_FILTER_FV2_CMD_RECD(x)      (((uint32_t)(((uint32_t)(x))<<19U))&0x80000UL)      /*!< ZLL_RX_FRAME_FILTER.FV2_CMD_RECD Field  */
#define ZLL_RX_FRAME_FILTER_LLDN_RECD_MASK       (0x100000U)                                         /*!< ZLL_RX_FRAME_FILTER.LLDN_RECD Mask      */
#define ZLL_RX_FRAME_FILTER_LLDN_RECD_SHIFT      (20U)                                               /*!< ZLL_RX_FRAME_FILTER.LLDN_RECD Position  */
#define ZLL_RX_FRAME_FILTER_LLDN_RECD(x)         (((uint32_t)(((uint32_t)(x))<<20U))&0x100000UL)     /*!< ZLL_RX_FRAME_FILTER.LLDN_RECD Field     */
#define ZLL_RX_FRAME_FILTER_MULTIPURPOSE_RECD_MASK (0x200000U)                                       /*!< ZLL_RX_FRAME_FILTER.MULTIPURPOSE_RECD Mask*/
#define ZLL_RX_FRAME_FILTER_MULTIPURPOSE_RECD_SHIFT (21U)                                            /*!< ZLL_RX_FRAME_FILTER.MULTIPURPOSE_RECD Position*/
#define ZLL_RX_FRAME_FILTER_MULTIPURPOSE_RECD(x) (((uint32_t)(((uint32_t)(x))<<21U))&0x200000UL)     /*!< ZLL_RX_FRAME_FILTER.MULTIPURPOSE_RECD Field*/
#define ZLL_RX_FRAME_FILTER_EXTENDED_RECD_MASK   (0x800000U)                                         /*!< ZLL_RX_FRAME_FILTER.EXTENDED_RECD Mask  */
#define ZLL_RX_FRAME_FILTER_EXTENDED_RECD_SHIFT  (23U)                                               /*!< ZLL_RX_FRAME_FILTER.EXTENDED_RECD Position*/
#define ZLL_RX_FRAME_FILTER_EXTENDED_RECD(x)     (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< ZLL_RX_FRAME_FILTER.EXTENDED_RECD Field */
/* ------- CCA_LQI_CTRL Bit Fields                  ------ */
#define ZLL_CCA_LQI_CTRL_CCA1_THRESH_MASK        (0xFFU)                                             /*!< ZLL_CCA_LQI_CTRL.CCA1_THRESH Mask       */
#define ZLL_CCA_LQI_CTRL_CCA1_THRESH_SHIFT       (0U)                                                /*!< ZLL_CCA_LQI_CTRL.CCA1_THRESH Position   */
#define ZLL_CCA_LQI_CTRL_CCA1_THRESH(x)          (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< ZLL_CCA_LQI_CTRL.CCA1_THRESH Field      */
#define ZLL_CCA_LQI_CTRL_LQI_OFFSET_COMP_MASK    (0xFF0000U)                                         /*!< ZLL_CCA_LQI_CTRL.LQI_OFFSET_COMP Mask   */
#define ZLL_CCA_LQI_CTRL_LQI_OFFSET_COMP_SHIFT   (16U)                                               /*!< ZLL_CCA_LQI_CTRL.LQI_OFFSET_COMP Position*/
#define ZLL_CCA_LQI_CTRL_LQI_OFFSET_COMP(x)      (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< ZLL_CCA_LQI_CTRL.LQI_OFFSET_COMP Field  */
#define ZLL_CCA_LQI_CTRL_CCA3_AND_NOT_OR_MASK    (0x8000000U)                                        /*!< ZLL_CCA_LQI_CTRL.CCA3_AND_NOT_OR Mask   */
#define ZLL_CCA_LQI_CTRL_CCA3_AND_NOT_OR_SHIFT   (27U)                                               /*!< ZLL_CCA_LQI_CTRL.CCA3_AND_NOT_OR Position*/
#define ZLL_CCA_LQI_CTRL_CCA3_AND_NOT_OR(x)      (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< ZLL_CCA_LQI_CTRL.CCA3_AND_NOT_OR Field  */
/* ------- CCA2_CTRL Bit Fields                     ------ */
#define ZLL_CCA2_CTRL_CCA2_NUM_CORR_PEAKS_MASK   (0xFU)                                              /*!< ZLL_CCA2_CTRL.CCA2_NUM_CORR_PEAKS Mask  */
#define ZLL_CCA2_CTRL_CCA2_NUM_CORR_PEAKS_SHIFT  (0U)                                                /*!< ZLL_CCA2_CTRL.CCA2_NUM_CORR_PEAKS Position*/
#define ZLL_CCA2_CTRL_CCA2_NUM_CORR_PEAKS(x)     (((uint32_t)(((uint32_t)(x))<<0U))&0xFUL)           /*!< ZLL_CCA2_CTRL.CCA2_NUM_CORR_PEAKS Field */
#define ZLL_CCA2_CTRL_CCA2_MIN_NUM_CORR_TH_MASK  (0x70U)                                             /*!< ZLL_CCA2_CTRL.CCA2_MIN_NUM_CORR_TH Mask */
#define ZLL_CCA2_CTRL_CCA2_MIN_NUM_CORR_TH_SHIFT (4U)                                                /*!< ZLL_CCA2_CTRL.CCA2_MIN_NUM_CORR_TH Position*/
#define ZLL_CCA2_CTRL_CCA2_MIN_NUM_CORR_TH(x)    (((uint32_t)(((uint32_t)(x))<<4U))&0x70UL)          /*!< ZLL_CCA2_CTRL.CCA2_MIN_NUM_CORR_TH Field*/
#define ZLL_CCA2_CTRL_CCA2_CORR_THRESH_MASK      (0xFF00U)                                           /*!< ZLL_CCA2_CTRL.CCA2_CORR_THRESH Mask     */
#define ZLL_CCA2_CTRL_CCA2_CORR_THRESH_SHIFT     (8U)                                                /*!< ZLL_CCA2_CTRL.CCA2_CORR_THRESH Position */
#define ZLL_CCA2_CTRL_CCA2_CORR_THRESH(x)        (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< ZLL_CCA2_CTRL.CCA2_CORR_THRESH Field    */
/* ------- DSM_CTRL Bit Fields                      ------ */
#define ZLL_DSM_CTRL_ZIGBEE_SLEEP_EN_MASK        (0x1U)                                              /*!< ZLL_DSM_CTRL.ZIGBEE_SLEEP_EN Mask       */
#define ZLL_DSM_CTRL_ZIGBEE_SLEEP_EN_SHIFT       (0U)                                                /*!< ZLL_DSM_CTRL.ZIGBEE_SLEEP_EN Position   */
#define ZLL_DSM_CTRL_ZIGBEE_SLEEP_EN(x)          (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ZLL_DSM_CTRL.ZIGBEE_SLEEP_EN Field      */
/* ------- BSM_CTRL Bit Fields                      ------ */
#define ZLL_BSM_CTRL_BSM_EN_MASK                 (0x1U)                                              /*!< ZLL_BSM_CTRL.BSM_EN Mask                */
#define ZLL_BSM_CTRL_BSM_EN_SHIFT                (0U)                                                /*!< ZLL_BSM_CTRL.BSM_EN Position            */
#define ZLL_BSM_CTRL_BSM_EN(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ZLL_BSM_CTRL.BSM_EN Field               */
/* ------- MACSHORTADDRS1 Bit Fields                ------ */
#define ZLL_MACSHORTADDRS1_MACPANID1_MASK        (0xFFFFU)                                           /*!< ZLL_MACSHORTADDRS1.MACPANID1 Mask       */
#define ZLL_MACSHORTADDRS1_MACPANID1_SHIFT       (0U)                                                /*!< ZLL_MACSHORTADDRS1.MACPANID1 Position   */
#define ZLL_MACSHORTADDRS1_MACPANID1(x)          (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFUL)        /*!< ZLL_MACSHORTADDRS1.MACPANID1 Field      */
#define ZLL_MACSHORTADDRS1_MACSHORTADDRS1_MASK   (0xFFFF0000U)                                       /*!< ZLL_MACSHORTADDRS1.MACSHORTADDRS1 Mask  */
#define ZLL_MACSHORTADDRS1_MACSHORTADDRS1_SHIFT  (16U)                                               /*!< ZLL_MACSHORTADDRS1.MACSHORTADDRS1 Position*/
#define ZLL_MACSHORTADDRS1_MACSHORTADDRS1(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0xFFFF0000UL)   /*!< ZLL_MACSHORTADDRS1.MACSHORTADDRS1 Field */
/* ------- MACLONGADDRS1_LSB Bit Fields             ------ */
#define ZLL_MACLONGADDRS1_LSB_MACLONGADDRS1_LSB_MASK (0xFFFFFFFFU)                                   /*!< ZLL_MACLONGADDRS1_LSB.MACLONGADDRS1_LSB Mask*/
#define ZLL_MACLONGADDRS1_LSB_MACLONGADDRS1_LSB_SHIFT (0U)                                           /*!< ZLL_MACLONGADDRS1_LSB.MACLONGADDRS1_LSB Position*/
#define ZLL_MACLONGADDRS1_LSB_MACLONGADDRS1_LSB(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)  /*!< ZLL_MACLONGADDRS1_LSB.MACLONGADDRS1_LSB Field*/
/* ------- MACLONGADDRS1_MSB Bit Fields             ------ */
#define ZLL_MACLONGADDRS1_MSB_MACLONGADDRS1_MSB_MASK (0xFFFFFFFFU)                                   /*!< ZLL_MACLONGADDRS1_MSB.MACLONGADDRS1_MSB Mask*/
#define ZLL_MACLONGADDRS1_MSB_MACLONGADDRS1_MSB_SHIFT (0U)                                           /*!< ZLL_MACLONGADDRS1_MSB.MACLONGADDRS1_MSB Position*/
#define ZLL_MACLONGADDRS1_MSB_MACLONGADDRS1_MSB(x) (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)  /*!< ZLL_MACLONGADDRS1_MSB.MACLONGADDRS1_MSB Field*/
/* ------- DUAL_PAN_CTRL Bit Fields                 ------ */
#define ZLL_DUAL_PAN_CTRL_ACTIVE_NETWORK_MASK    (0x1U)                                              /*!< ZLL_DUAL_PAN_CTRL.ACTIVE_NETWORK Mask   */
#define ZLL_DUAL_PAN_CTRL_ACTIVE_NETWORK_SHIFT   (0U)                                                /*!< ZLL_DUAL_PAN_CTRL.ACTIVE_NETWORK Position*/
#define ZLL_DUAL_PAN_CTRL_ACTIVE_NETWORK(x)      (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ZLL_DUAL_PAN_CTRL.ACTIVE_NETWORK Field  */
#define ZLL_DUAL_PAN_CTRL_DUAL_PAN_AUTO_MASK     (0x2U)                                              /*!< ZLL_DUAL_PAN_CTRL.DUAL_PAN_AUTO Mask    */
#define ZLL_DUAL_PAN_CTRL_DUAL_PAN_AUTO_SHIFT    (1U)                                                /*!< ZLL_DUAL_PAN_CTRL.DUAL_PAN_AUTO Position*/
#define ZLL_DUAL_PAN_CTRL_DUAL_PAN_AUTO(x)       (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< ZLL_DUAL_PAN_CTRL.DUAL_PAN_AUTO Field   */
#define ZLL_DUAL_PAN_CTRL_PANCORDNTR1_MASK       (0x4U)                                              /*!< ZLL_DUAL_PAN_CTRL.PANCORDNTR1 Mask      */
#define ZLL_DUAL_PAN_CTRL_PANCORDNTR1_SHIFT      (2U)                                                /*!< ZLL_DUAL_PAN_CTRL.PANCORDNTR1 Position  */
#define ZLL_DUAL_PAN_CTRL_PANCORDNTR1(x)         (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ZLL_DUAL_PAN_CTRL.PANCORDNTR1 Field     */
#define ZLL_DUAL_PAN_CTRL_CURRENT_NETWORK_MASK   (0x8U)                                              /*!< ZLL_DUAL_PAN_CTRL.CURRENT_NETWORK Mask  */
#define ZLL_DUAL_PAN_CTRL_CURRENT_NETWORK_SHIFT  (3U)                                                /*!< ZLL_DUAL_PAN_CTRL.CURRENT_NETWORK Position*/
#define ZLL_DUAL_PAN_CTRL_CURRENT_NETWORK(x)     (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< ZLL_DUAL_PAN_CTRL.CURRENT_NETWORK Field */
#define ZLL_DUAL_PAN_CTRL_ZB_DP_CHAN_OVRD_EN_MASK (0x10U)                                            /*!< ZLL_DUAL_PAN_CTRL.ZB_DP_CHAN_OVRD_EN Mask*/
#define ZLL_DUAL_PAN_CTRL_ZB_DP_CHAN_OVRD_EN_SHIFT (4U)                                              /*!< ZLL_DUAL_PAN_CTRL.ZB_DP_CHAN_OVRD_EN Position*/
#define ZLL_DUAL_PAN_CTRL_ZB_DP_CHAN_OVRD_EN(x)  (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< ZLL_DUAL_PAN_CTRL.ZB_DP_CHAN_OVRD_EN Field*/
#define ZLL_DUAL_PAN_CTRL_ZB_DP_CHAN_OVRD_SEL_MASK (0x20U)                                           /*!< ZLL_DUAL_PAN_CTRL.ZB_DP_CHAN_OVRD_SEL Mask*/
#define ZLL_DUAL_PAN_CTRL_ZB_DP_CHAN_OVRD_SEL_SHIFT (5U)                                             /*!< ZLL_DUAL_PAN_CTRL.ZB_DP_CHAN_OVRD_SEL Position*/
#define ZLL_DUAL_PAN_CTRL_ZB_DP_CHAN_OVRD_SEL(x) (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< ZLL_DUAL_PAN_CTRL.ZB_DP_CHAN_OVRD_SEL Field*/
#define ZLL_DUAL_PAN_CTRL_DUAL_PAN_DWELL_MASK    (0xFF00U)                                           /*!< ZLL_DUAL_PAN_CTRL.DUAL_PAN_DWELL Mask   */
#define ZLL_DUAL_PAN_CTRL_DUAL_PAN_DWELL_SHIFT   (8U)                                                /*!< ZLL_DUAL_PAN_CTRL.DUAL_PAN_DWELL Position*/
#define ZLL_DUAL_PAN_CTRL_DUAL_PAN_DWELL(x)      (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< ZLL_DUAL_PAN_CTRL.DUAL_PAN_DWELL Field  */
#define ZLL_DUAL_PAN_CTRL_DUAL_PAN_REMAIN_MASK   (0x3F0000U)                                         /*!< ZLL_DUAL_PAN_CTRL.DUAL_PAN_REMAIN Mask  */
#define ZLL_DUAL_PAN_CTRL_DUAL_PAN_REMAIN_SHIFT  (16U)                                               /*!< ZLL_DUAL_PAN_CTRL.DUAL_PAN_REMAIN Position*/
#define ZLL_DUAL_PAN_CTRL_DUAL_PAN_REMAIN(x)     (((uint32_t)(((uint32_t)(x))<<16U))&0x3F0000UL)     /*!< ZLL_DUAL_PAN_CTRL.DUAL_PAN_REMAIN Field */
#define ZLL_DUAL_PAN_CTRL_RECD_ON_PAN0_MASK      (0x400000U)                                         /*!< ZLL_DUAL_PAN_CTRL.RECD_ON_PAN0 Mask     */
#define ZLL_DUAL_PAN_CTRL_RECD_ON_PAN0_SHIFT     (22U)                                               /*!< ZLL_DUAL_PAN_CTRL.RECD_ON_PAN0 Position */
#define ZLL_DUAL_PAN_CTRL_RECD_ON_PAN0(x)        (((uint32_t)(((uint32_t)(x))<<22U))&0x400000UL)     /*!< ZLL_DUAL_PAN_CTRL.RECD_ON_PAN0 Field    */
#define ZLL_DUAL_PAN_CTRL_RECD_ON_PAN1_MASK      (0x800000U)                                         /*!< ZLL_DUAL_PAN_CTRL.RECD_ON_PAN1 Mask     */
#define ZLL_DUAL_PAN_CTRL_RECD_ON_PAN1_SHIFT     (23U)                                               /*!< ZLL_DUAL_PAN_CTRL.RECD_ON_PAN1 Position */
#define ZLL_DUAL_PAN_CTRL_RECD_ON_PAN1(x)        (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< ZLL_DUAL_PAN_CTRL.RECD_ON_PAN1 Field    */
/* ------- CHANNEL_NUM1 Bit Fields                  ------ */
#define ZLL_CHANNEL_NUM1_CHANNEL_NUM1_MASK       (0x7FU)                                             /*!< ZLL_CHANNEL_NUM1.CHANNEL_NUM1 Mask      */
#define ZLL_CHANNEL_NUM1_CHANNEL_NUM1_SHIFT      (0U)                                                /*!< ZLL_CHANNEL_NUM1.CHANNEL_NUM1 Position  */
#define ZLL_CHANNEL_NUM1_CHANNEL_NUM1(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< ZLL_CHANNEL_NUM1.CHANNEL_NUM1 Field     */
/* ------- SAM_CTRL Bit Fields                      ------ */
#define ZLL_SAM_CTRL_SAP0_EN_MASK                (0x1U)                                              /*!< ZLL_SAM_CTRL.SAP0_EN Mask               */
#define ZLL_SAM_CTRL_SAP0_EN_SHIFT               (0U)                                                /*!< ZLL_SAM_CTRL.SAP0_EN Position           */
#define ZLL_SAM_CTRL_SAP0_EN(x)                  (((uint32_t)(((uint32_t)(x))<<0U))&0x1UL)           /*!< ZLL_SAM_CTRL.SAP0_EN Field              */
#define ZLL_SAM_CTRL_SAA0_EN_MASK                (0x2U)                                              /*!< ZLL_SAM_CTRL.SAA0_EN Mask               */
#define ZLL_SAM_CTRL_SAA0_EN_SHIFT               (1U)                                                /*!< ZLL_SAM_CTRL.SAA0_EN Position           */
#define ZLL_SAM_CTRL_SAA0_EN(x)                  (((uint32_t)(((uint32_t)(x))<<1U))&0x2UL)           /*!< ZLL_SAM_CTRL.SAA0_EN Field              */
#define ZLL_SAM_CTRL_SAP1_EN_MASK                (0x4U)                                              /*!< ZLL_SAM_CTRL.SAP1_EN Mask               */
#define ZLL_SAM_CTRL_SAP1_EN_SHIFT               (2U)                                                /*!< ZLL_SAM_CTRL.SAP1_EN Position           */
#define ZLL_SAM_CTRL_SAP1_EN(x)                  (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ZLL_SAM_CTRL.SAP1_EN Field              */
#define ZLL_SAM_CTRL_SAA1_EN_MASK                (0x8U)                                              /*!< ZLL_SAM_CTRL.SAA1_EN Mask               */
#define ZLL_SAM_CTRL_SAA1_EN_SHIFT               (3U)                                                /*!< ZLL_SAM_CTRL.SAA1_EN Position           */
#define ZLL_SAM_CTRL_SAA1_EN(x)                  (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)           /*!< ZLL_SAM_CTRL.SAA1_EN Field              */
#define ZLL_SAM_CTRL_SAA0_START_MASK             (0xFF00U)                                           /*!< ZLL_SAM_CTRL.SAA0_START Mask            */
#define ZLL_SAM_CTRL_SAA0_START_SHIFT            (8U)                                                /*!< ZLL_SAM_CTRL.SAA0_START Position        */
#define ZLL_SAM_CTRL_SAA0_START(x)               (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< ZLL_SAM_CTRL.SAA0_START Field           */
#define ZLL_SAM_CTRL_SAP1_START_MASK             (0xFF0000U)                                         /*!< ZLL_SAM_CTRL.SAP1_START Mask            */
#define ZLL_SAM_CTRL_SAP1_START_SHIFT            (16U)                                               /*!< ZLL_SAM_CTRL.SAP1_START Position        */
#define ZLL_SAM_CTRL_SAP1_START(x)               (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< ZLL_SAM_CTRL.SAP1_START Field           */
#define ZLL_SAM_CTRL_SAA1_START_MASK             (0xFF000000U)                                       /*!< ZLL_SAM_CTRL.SAA1_START Mask            */
#define ZLL_SAM_CTRL_SAA1_START_SHIFT            (24U)                                               /*!< ZLL_SAM_CTRL.SAA1_START Position        */
#define ZLL_SAM_CTRL_SAA1_START(x)               (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< ZLL_SAM_CTRL.SAA1_START Field           */
/* ------- SAM_TABLE Bit Fields                     ------ */
#define ZLL_SAM_TABLE_SAM_INDEX_MASK             (0x7FU)                                             /*!< ZLL_SAM_TABLE.SAM_INDEX Mask            */
#define ZLL_SAM_TABLE_SAM_INDEX_SHIFT            (0U)                                                /*!< ZLL_SAM_TABLE.SAM_INDEX Position        */
#define ZLL_SAM_TABLE_SAM_INDEX(x)               (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< ZLL_SAM_TABLE.SAM_INDEX Field           */
#define ZLL_SAM_TABLE_SAM_INDEX_WR_MASK          (0x80U)                                             /*!< ZLL_SAM_TABLE.SAM_INDEX_WR Mask         */
#define ZLL_SAM_TABLE_SAM_INDEX_WR_SHIFT         (7U)                                                /*!< ZLL_SAM_TABLE.SAM_INDEX_WR Position     */
#define ZLL_SAM_TABLE_SAM_INDEX_WR(x)            (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ZLL_SAM_TABLE.SAM_INDEX_WR Field        */
#define ZLL_SAM_TABLE_SAM_CHECKSUM_MASK          (0xFFFF00U)                                         /*!< ZLL_SAM_TABLE.SAM_CHECKSUM Mask         */
#define ZLL_SAM_TABLE_SAM_CHECKSUM_SHIFT         (8U)                                                /*!< ZLL_SAM_TABLE.SAM_CHECKSUM Position     */
#define ZLL_SAM_TABLE_SAM_CHECKSUM(x)            (((uint32_t)(((uint32_t)(x))<<8U))&0xFFFF00UL)      /*!< ZLL_SAM_TABLE.SAM_CHECKSUM Field        */
#define ZLL_SAM_TABLE_SAM_INDEX_INV_MASK         (0x1000000U)                                        /*!< ZLL_SAM_TABLE.SAM_INDEX_INV Mask        */
#define ZLL_SAM_TABLE_SAM_INDEX_INV_SHIFT        (24U)                                               /*!< ZLL_SAM_TABLE.SAM_INDEX_INV Position    */
#define ZLL_SAM_TABLE_SAM_INDEX_INV(x)           (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< ZLL_SAM_TABLE.SAM_INDEX_INV Field       */
#define ZLL_SAM_TABLE_SAM_INDEX_EN_MASK          (0x2000000U)                                        /*!< ZLL_SAM_TABLE.SAM_INDEX_EN Mask         */
#define ZLL_SAM_TABLE_SAM_INDEX_EN_SHIFT         (25U)                                               /*!< ZLL_SAM_TABLE.SAM_INDEX_EN Position     */
#define ZLL_SAM_TABLE_SAM_INDEX_EN(x)            (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< ZLL_SAM_TABLE.SAM_INDEX_EN Field        */
#define ZLL_SAM_TABLE_ACK_FRM_PND_MASK           (0x4000000U)                                        /*!< ZLL_SAM_TABLE.ACK_FRM_PND Mask          */
#define ZLL_SAM_TABLE_ACK_FRM_PND_SHIFT          (26U)                                               /*!< ZLL_SAM_TABLE.ACK_FRM_PND Position      */
#define ZLL_SAM_TABLE_ACK_FRM_PND(x)             (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< ZLL_SAM_TABLE.ACK_FRM_PND Field         */
#define ZLL_SAM_TABLE_ACK_FRM_PND_CTRL_MASK      (0x8000000U)                                        /*!< ZLL_SAM_TABLE.ACK_FRM_PND_CTRL Mask     */
#define ZLL_SAM_TABLE_ACK_FRM_PND_CTRL_SHIFT     (27U)                                               /*!< ZLL_SAM_TABLE.ACK_FRM_PND_CTRL Position */
#define ZLL_SAM_TABLE_ACK_FRM_PND_CTRL(x)        (((uint32_t)(((uint32_t)(x))<<27U))&0x8000000UL)    /*!< ZLL_SAM_TABLE.ACK_FRM_PND_CTRL Field    */
#define ZLL_SAM_TABLE_FIND_FREE_IDX_MASK         (0x10000000U)                                       /*!< ZLL_SAM_TABLE.FIND_FREE_IDX Mask        */
#define ZLL_SAM_TABLE_FIND_FREE_IDX_SHIFT        (28U)                                               /*!< ZLL_SAM_TABLE.FIND_FREE_IDX Position    */
#define ZLL_SAM_TABLE_FIND_FREE_IDX(x)           (((uint32_t)(((uint32_t)(x))<<28U))&0x10000000UL)   /*!< ZLL_SAM_TABLE.FIND_FREE_IDX Field       */
#define ZLL_SAM_TABLE_INVALIDATE_ALL_MASK        (0x20000000U)                                       /*!< ZLL_SAM_TABLE.INVALIDATE_ALL Mask       */
#define ZLL_SAM_TABLE_INVALIDATE_ALL_SHIFT       (29U)                                               /*!< ZLL_SAM_TABLE.INVALIDATE_ALL Position   */
#define ZLL_SAM_TABLE_INVALIDATE_ALL(x)          (((uint32_t)(((uint32_t)(x))<<29U))&0x20000000UL)   /*!< ZLL_SAM_TABLE.INVALIDATE_ALL Field      */
#define ZLL_SAM_TABLE_SAM_BUSY_MASK              (0x80000000U)                                       /*!< ZLL_SAM_TABLE.SAM_BUSY Mask             */
#define ZLL_SAM_TABLE_SAM_BUSY_SHIFT             (31U)                                               /*!< ZLL_SAM_TABLE.SAM_BUSY Position         */
#define ZLL_SAM_TABLE_SAM_BUSY(x)                (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< ZLL_SAM_TABLE.SAM_BUSY Field            */
/* ------- SAM_MATCH Bit Fields                     ------ */
#define ZLL_SAM_MATCH_SAP0_MATCH_MASK            (0x7FU)                                             /*!< ZLL_SAM_MATCH.SAP0_MATCH Mask           */
#define ZLL_SAM_MATCH_SAP0_MATCH_SHIFT           (0U)                                                /*!< ZLL_SAM_MATCH.SAP0_MATCH Position       */
#define ZLL_SAM_MATCH_SAP0_MATCH(x)              (((uint32_t)(((uint32_t)(x))<<0U))&0x7FUL)          /*!< ZLL_SAM_MATCH.SAP0_MATCH Field          */
#define ZLL_SAM_MATCH_SAP0_ADDR_PRESENT_MASK     (0x80U)                                             /*!< ZLL_SAM_MATCH.SAP0_ADDR_PRESENT Mask    */
#define ZLL_SAM_MATCH_SAP0_ADDR_PRESENT_SHIFT    (7U)                                                /*!< ZLL_SAM_MATCH.SAP0_ADDR_PRESENT Position*/
#define ZLL_SAM_MATCH_SAP0_ADDR_PRESENT(x)       (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ZLL_SAM_MATCH.SAP0_ADDR_PRESENT Field   */
#define ZLL_SAM_MATCH_SAA0_MATCH_MASK            (0x7F00U)                                           /*!< ZLL_SAM_MATCH.SAA0_MATCH Mask           */
#define ZLL_SAM_MATCH_SAA0_MATCH_SHIFT           (8U)                                                /*!< ZLL_SAM_MATCH.SAA0_MATCH Position       */
#define ZLL_SAM_MATCH_SAA0_MATCH(x)              (((uint32_t)(((uint32_t)(x))<<8U))&0x7F00UL)        /*!< ZLL_SAM_MATCH.SAA0_MATCH Field          */
#define ZLL_SAM_MATCH_SAA0_ADDR_ABSENT_MASK      (0x8000U)                                           /*!< ZLL_SAM_MATCH.SAA0_ADDR_ABSENT Mask     */
#define ZLL_SAM_MATCH_SAA0_ADDR_ABSENT_SHIFT     (15U)                                               /*!< ZLL_SAM_MATCH.SAA0_ADDR_ABSENT Position */
#define ZLL_SAM_MATCH_SAA0_ADDR_ABSENT(x)        (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< ZLL_SAM_MATCH.SAA0_ADDR_ABSENT Field    */
#define ZLL_SAM_MATCH_SAP1_MATCH_MASK            (0x7F0000U)                                         /*!< ZLL_SAM_MATCH.SAP1_MATCH Mask           */
#define ZLL_SAM_MATCH_SAP1_MATCH_SHIFT           (16U)                                               /*!< ZLL_SAM_MATCH.SAP1_MATCH Position       */
#define ZLL_SAM_MATCH_SAP1_MATCH(x)              (((uint32_t)(((uint32_t)(x))<<16U))&0x7F0000UL)     /*!< ZLL_SAM_MATCH.SAP1_MATCH Field          */
#define ZLL_SAM_MATCH_SAP1_ADDR_PRESENT_MASK     (0x800000U)                                         /*!< ZLL_SAM_MATCH.SAP1_ADDR_PRESENT Mask    */
#define ZLL_SAM_MATCH_SAP1_ADDR_PRESENT_SHIFT    (23U)                                               /*!< ZLL_SAM_MATCH.SAP1_ADDR_PRESENT Position*/
#define ZLL_SAM_MATCH_SAP1_ADDR_PRESENT(x)       (((uint32_t)(((uint32_t)(x))<<23U))&0x800000UL)     /*!< ZLL_SAM_MATCH.SAP1_ADDR_PRESENT Field   */
#define ZLL_SAM_MATCH_SAA1_MATCH_MASK            (0x7F000000U)                                       /*!< ZLL_SAM_MATCH.SAA1_MATCH Mask           */
#define ZLL_SAM_MATCH_SAA1_MATCH_SHIFT           (24U)                                               /*!< ZLL_SAM_MATCH.SAA1_MATCH Position       */
#define ZLL_SAM_MATCH_SAA1_MATCH(x)              (((uint32_t)(((uint32_t)(x))<<24U))&0x7F000000UL)   /*!< ZLL_SAM_MATCH.SAA1_MATCH Field          */
#define ZLL_SAM_MATCH_SAA1_ADDR_ABSENT_MASK      (0x80000000U)                                       /*!< ZLL_SAM_MATCH.SAA1_ADDR_ABSENT Mask     */
#define ZLL_SAM_MATCH_SAA1_ADDR_ABSENT_SHIFT     (31U)                                               /*!< ZLL_SAM_MATCH.SAA1_ADDR_ABSENT Position */
#define ZLL_SAM_MATCH_SAA1_ADDR_ABSENT(x)        (((uint32_t)(((uint32_t)(x))<<31U))&0x80000000UL)   /*!< ZLL_SAM_MATCH.SAA1_ADDR_ABSENT Field    */
/* ------- SAM_FREE_IDX Bit Fields                  ------ */
#define ZLL_SAM_FREE_IDX_SAP0_1ST_FREE_IDX_MASK  (0xFFU)                                             /*!< ZLL_SAM_FREE_IDX.SAP0_1ST_FREE_IDX Mask */
#define ZLL_SAM_FREE_IDX_SAP0_1ST_FREE_IDX_SHIFT (0U)                                                /*!< ZLL_SAM_FREE_IDX.SAP0_1ST_FREE_IDX Position*/
#define ZLL_SAM_FREE_IDX_SAP0_1ST_FREE_IDX(x)    (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< ZLL_SAM_FREE_IDX.SAP0_1ST_FREE_IDX Field*/
#define ZLL_SAM_FREE_IDX_SAA0_1ST_FREE_IDX_MASK  (0xFF00U)                                           /*!< ZLL_SAM_FREE_IDX.SAA0_1ST_FREE_IDX Mask */
#define ZLL_SAM_FREE_IDX_SAA0_1ST_FREE_IDX_SHIFT (8U)                                                /*!< ZLL_SAM_FREE_IDX.SAA0_1ST_FREE_IDX Position*/
#define ZLL_SAM_FREE_IDX_SAA0_1ST_FREE_IDX(x)    (((uint32_t)(((uint32_t)(x))<<8U))&0xFF00UL)        /*!< ZLL_SAM_FREE_IDX.SAA0_1ST_FREE_IDX Field*/
#define ZLL_SAM_FREE_IDX_SAP1_1ST_FREE_IDX_MASK  (0xFF0000U)                                         /*!< ZLL_SAM_FREE_IDX.SAP1_1ST_FREE_IDX Mask */
#define ZLL_SAM_FREE_IDX_SAP1_1ST_FREE_IDX_SHIFT (16U)                                               /*!< ZLL_SAM_FREE_IDX.SAP1_1ST_FREE_IDX Position*/
#define ZLL_SAM_FREE_IDX_SAP1_1ST_FREE_IDX(x)    (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< ZLL_SAM_FREE_IDX.SAP1_1ST_FREE_IDX Field*/
#define ZLL_SAM_FREE_IDX_SAA1_1ST_FREE_IDX_MASK  (0xFF000000U)                                       /*!< ZLL_SAM_FREE_IDX.SAA1_1ST_FREE_IDX Mask */
#define ZLL_SAM_FREE_IDX_SAA1_1ST_FREE_IDX_SHIFT (24U)                                               /*!< ZLL_SAM_FREE_IDX.SAA1_1ST_FREE_IDX Position*/
#define ZLL_SAM_FREE_IDX_SAA1_1ST_FREE_IDX(x)    (((uint32_t)(((uint32_t)(x))<<24U))&0xFF000000UL)   /*!< ZLL_SAM_FREE_IDX.SAA1_1ST_FREE_IDX Field*/
/* ------- SEQ_CTRL_STS Bit Fields                  ------ */
#define ZLL_SEQ_CTRL_STS_CLR_NEW_SEQ_INHIBIT_MASK (0x4U)                                             /*!< ZLL_SEQ_CTRL_STS.CLR_NEW_SEQ_INHIBIT Mask*/
#define ZLL_SEQ_CTRL_STS_CLR_NEW_SEQ_INHIBIT_SHIFT (2U)                                              /*!< ZLL_SEQ_CTRL_STS.CLR_NEW_SEQ_INHIBIT Position*/
#define ZLL_SEQ_CTRL_STS_CLR_NEW_SEQ_INHIBIT(x)  (((uint32_t)(((uint32_t)(x))<<2U))&0x4UL)           /*!< ZLL_SEQ_CTRL_STS.CLR_NEW_SEQ_INHIBIT Field*/
#define ZLL_SEQ_CTRL_STS_EVENT_TMR_DO_NOT_LATCH_MASK (0x8U)                                          /*!< ZLL_SEQ_CTRL_STS.EVENT_TMR_DO_NOT_LATCH Mask*/
#define ZLL_SEQ_CTRL_STS_EVENT_TMR_DO_NOT_LATCH_SHIFT (3U)                                           /*!< ZLL_SEQ_CTRL_STS.EVENT_TMR_DO_NOT_LATCH Position*/
#define ZLL_SEQ_CTRL_STS_EVENT_TMR_DO_NOT_LATCH(x) (((uint32_t)(((uint32_t)(x))<<3U))&0x8UL)         /*!< ZLL_SEQ_CTRL_STS.EVENT_TMR_DO_NOT_LATCH Field*/
#define ZLL_SEQ_CTRL_STS_LATCH_PREAMBLE_MASK     (0x10U)                                             /*!< ZLL_SEQ_CTRL_STS.LATCH_PREAMBLE Mask    */
#define ZLL_SEQ_CTRL_STS_LATCH_PREAMBLE_SHIFT    (4U)                                                /*!< ZLL_SEQ_CTRL_STS.LATCH_PREAMBLE Position*/
#define ZLL_SEQ_CTRL_STS_LATCH_PREAMBLE(x)       (((uint32_t)(((uint32_t)(x))<<4U))&0x10UL)          /*!< ZLL_SEQ_CTRL_STS.LATCH_PREAMBLE Field   */
#define ZLL_SEQ_CTRL_STS_NO_RX_RECYCLE_MASK      (0x20U)                                             /*!< ZLL_SEQ_CTRL_STS.NO_RX_RECYCLE Mask     */
#define ZLL_SEQ_CTRL_STS_NO_RX_RECYCLE_SHIFT     (5U)                                                /*!< ZLL_SEQ_CTRL_STS.NO_RX_RECYCLE Position */
#define ZLL_SEQ_CTRL_STS_NO_RX_RECYCLE(x)        (((uint32_t)(((uint32_t)(x))<<5U))&0x20UL)          /*!< ZLL_SEQ_CTRL_STS.NO_RX_RECYCLE Field    */
#define ZLL_SEQ_CTRL_STS_FORCE_CRC_ERROR_MASK    (0x40U)                                             /*!< ZLL_SEQ_CTRL_STS.FORCE_CRC_ERROR Mask   */
#define ZLL_SEQ_CTRL_STS_FORCE_CRC_ERROR_SHIFT   (6U)                                                /*!< ZLL_SEQ_CTRL_STS.FORCE_CRC_ERROR Position*/
#define ZLL_SEQ_CTRL_STS_FORCE_CRC_ERROR(x)      (((uint32_t)(((uint32_t)(x))<<6U))&0x40UL)          /*!< ZLL_SEQ_CTRL_STS.FORCE_CRC_ERROR Field  */
#define ZLL_SEQ_CTRL_STS_CONTINUOUS_EN_MASK      (0x80U)                                             /*!< ZLL_SEQ_CTRL_STS.CONTINUOUS_EN Mask     */
#define ZLL_SEQ_CTRL_STS_CONTINUOUS_EN_SHIFT     (7U)                                                /*!< ZLL_SEQ_CTRL_STS.CONTINUOUS_EN Position */
#define ZLL_SEQ_CTRL_STS_CONTINUOUS_EN(x)        (((uint32_t)(((uint32_t)(x))<<7U))&0x80UL)          /*!< ZLL_SEQ_CTRL_STS.CONTINUOUS_EN Field    */
#define ZLL_SEQ_CTRL_STS_XCVSEQ_ACTUAL_MASK      (0x700U)                                            /*!< ZLL_SEQ_CTRL_STS.XCVSEQ_ACTUAL Mask     */
#define ZLL_SEQ_CTRL_STS_XCVSEQ_ACTUAL_SHIFT     (8U)                                                /*!< ZLL_SEQ_CTRL_STS.XCVSEQ_ACTUAL Position */
#define ZLL_SEQ_CTRL_STS_XCVSEQ_ACTUAL(x)        (((uint32_t)(((uint32_t)(x))<<8U))&0x700UL)         /*!< ZLL_SEQ_CTRL_STS.XCVSEQ_ACTUAL Field    */
#define ZLL_SEQ_CTRL_STS_SEQ_IDLE_MASK           (0x800U)                                            /*!< ZLL_SEQ_CTRL_STS.SEQ_IDLE Mask          */
#define ZLL_SEQ_CTRL_STS_SEQ_IDLE_SHIFT          (11U)                                               /*!< ZLL_SEQ_CTRL_STS.SEQ_IDLE Position      */
#define ZLL_SEQ_CTRL_STS_SEQ_IDLE(x)             (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< ZLL_SEQ_CTRL_STS.SEQ_IDLE Field         */
#define ZLL_SEQ_CTRL_STS_NEW_SEQ_INHIBIT_MASK    (0x1000U)                                           /*!< ZLL_SEQ_CTRL_STS.NEW_SEQ_INHIBIT Mask   */
#define ZLL_SEQ_CTRL_STS_NEW_SEQ_INHIBIT_SHIFT   (12U)                                               /*!< ZLL_SEQ_CTRL_STS.NEW_SEQ_INHIBIT Position*/
#define ZLL_SEQ_CTRL_STS_NEW_SEQ_INHIBIT(x)      (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< ZLL_SEQ_CTRL_STS.NEW_SEQ_INHIBIT Field  */
#define ZLL_SEQ_CTRL_STS_RX_TIMEOUT_PENDING_MASK (0x2000U)                                           /*!< ZLL_SEQ_CTRL_STS.RX_TIMEOUT_PENDING Mask*/
#define ZLL_SEQ_CTRL_STS_RX_TIMEOUT_PENDING_SHIFT (13U)                                              /*!< ZLL_SEQ_CTRL_STS.RX_TIMEOUT_PENDING Position*/
#define ZLL_SEQ_CTRL_STS_RX_TIMEOUT_PENDING(x)   (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< ZLL_SEQ_CTRL_STS.RX_TIMEOUT_PENDING Field*/
#define ZLL_SEQ_CTRL_STS_RX_MODE_MASK            (0x4000U)                                           /*!< ZLL_SEQ_CTRL_STS.RX_MODE Mask           */
#define ZLL_SEQ_CTRL_STS_RX_MODE_SHIFT           (14U)                                               /*!< ZLL_SEQ_CTRL_STS.RX_MODE Position       */
#define ZLL_SEQ_CTRL_STS_RX_MODE(x)              (((uint32_t)(((uint32_t)(x))<<14U))&0x4000UL)       /*!< ZLL_SEQ_CTRL_STS.RX_MODE Field          */
#define ZLL_SEQ_CTRL_STS_TMR2_SEQ_TRIG_ARMED_MASK (0x8000U)                                          /*!< ZLL_SEQ_CTRL_STS.TMR2_SEQ_TRIG_ARMED Mask*/
#define ZLL_SEQ_CTRL_STS_TMR2_SEQ_TRIG_ARMED_SHIFT (15U)                                             /*!< ZLL_SEQ_CTRL_STS.TMR2_SEQ_TRIG_ARMED Position*/
#define ZLL_SEQ_CTRL_STS_TMR2_SEQ_TRIG_ARMED(x)  (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)       /*!< ZLL_SEQ_CTRL_STS.TMR2_SEQ_TRIG_ARMED Field*/
#define ZLL_SEQ_CTRL_STS_SEQ_T_STATUS_MASK       (0x3F0000U)                                         /*!< ZLL_SEQ_CTRL_STS.SEQ_T_STATUS Mask      */
#define ZLL_SEQ_CTRL_STS_SEQ_T_STATUS_SHIFT      (16U)                                               /*!< ZLL_SEQ_CTRL_STS.SEQ_T_STATUS Position  */
#define ZLL_SEQ_CTRL_STS_SEQ_T_STATUS(x)         (((uint32_t)(((uint32_t)(x))<<16U))&0x3F0000UL)     /*!< ZLL_SEQ_CTRL_STS.SEQ_T_STATUS Field     */
#define ZLL_SEQ_CTRL_STS_SW_ABORTED_MASK         (0x1000000U)                                        /*!< ZLL_SEQ_CTRL_STS.SW_ABORTED Mask        */
#define ZLL_SEQ_CTRL_STS_SW_ABORTED_SHIFT        (24U)                                               /*!< ZLL_SEQ_CTRL_STS.SW_ABORTED Position    */
#define ZLL_SEQ_CTRL_STS_SW_ABORTED(x)           (((uint32_t)(((uint32_t)(x))<<24U))&0x1000000UL)    /*!< ZLL_SEQ_CTRL_STS.SW_ABORTED Field       */
#define ZLL_SEQ_CTRL_STS_TC3_ABORTED_MASK        (0x2000000U)                                        /*!< ZLL_SEQ_CTRL_STS.TC3_ABORTED Mask       */
#define ZLL_SEQ_CTRL_STS_TC3_ABORTED_SHIFT       (25U)                                               /*!< ZLL_SEQ_CTRL_STS.TC3_ABORTED Position   */
#define ZLL_SEQ_CTRL_STS_TC3_ABORTED(x)          (((uint32_t)(((uint32_t)(x))<<25U))&0x2000000UL)    /*!< ZLL_SEQ_CTRL_STS.TC3_ABORTED Field      */
#define ZLL_SEQ_CTRL_STS_PLL_ABORTED_MASK        (0x4000000U)                                        /*!< ZLL_SEQ_CTRL_STS.PLL_ABORTED Mask       */
#define ZLL_SEQ_CTRL_STS_PLL_ABORTED_SHIFT       (26U)                                               /*!< ZLL_SEQ_CTRL_STS.PLL_ABORTED Position   */
#define ZLL_SEQ_CTRL_STS_PLL_ABORTED(x)          (((uint32_t)(((uint32_t)(x))<<26U))&0x4000000UL)    /*!< ZLL_SEQ_CTRL_STS.PLL_ABORTED Field      */
/* ------- ACKDELAY Bit Fields                      ------ */
#define ZLL_ACKDELAY_ACKDELAY_MASK               (0x3FU)                                             /*!< ZLL_ACKDELAY.ACKDELAY Mask              */
#define ZLL_ACKDELAY_ACKDELAY_SHIFT              (0U)                                                /*!< ZLL_ACKDELAY.ACKDELAY Position          */
#define ZLL_ACKDELAY_ACKDELAY(x)                 (((uint32_t)(((uint32_t)(x))<<0U))&0x3FUL)          /*!< ZLL_ACKDELAY.ACKDELAY Field             */
#define ZLL_ACKDELAY_TXDELAY_MASK                (0x3F00U)                                           /*!< ZLL_ACKDELAY.TXDELAY Mask               */
#define ZLL_ACKDELAY_TXDELAY_SHIFT               (8U)                                                /*!< ZLL_ACKDELAY.TXDELAY Position           */
#define ZLL_ACKDELAY_TXDELAY(x)                  (((uint32_t)(((uint32_t)(x))<<8U))&0x3F00UL)        /*!< ZLL_ACKDELAY.TXDELAY Field              */
/* ------- FILTERFAIL_CODE Bit Fields               ------ */
#define ZLL_FILTERFAIL_CODE_FILTERFAIL_CODE_MASK (0x3FFU)                                            /*!< ZLL_FILTERFAIL_CODE.FILTERFAIL_CODE Mask*/
#define ZLL_FILTERFAIL_CODE_FILTERFAIL_CODE_SHIFT (0U)                                               /*!< ZLL_FILTERFAIL_CODE.FILTERFAIL_CODE Position*/
#define ZLL_FILTERFAIL_CODE_FILTERFAIL_CODE(x)   (((uint32_t)(((uint32_t)(x))<<0U))&0x3FFUL)         /*!< ZLL_FILTERFAIL_CODE.FILTERFAIL_CODE Field*/
#define ZLL_FILTERFAIL_CODE_FILTERFAIL_PAN_SEL_MASK (0x8000U)                                        /*!< ZLL_FILTERFAIL_CODE.FILTERFAIL_PAN_SEL Mask*/
#define ZLL_FILTERFAIL_CODE_FILTERFAIL_PAN_SEL_SHIFT (15U)                                           /*!< ZLL_FILTERFAIL_CODE.FILTERFAIL_PAN_SEL Position*/
#define ZLL_FILTERFAIL_CODE_FILTERFAIL_PAN_SEL(x) (((uint32_t)(((uint32_t)(x))<<15U))&0x8000UL)      /*!< ZLL_FILTERFAIL_CODE.FILTERFAIL_PAN_SEL Field*/
/* ------- RX_WTR_MARK Bit Fields                   ------ */
#define ZLL_RX_WTR_MARK_RX_WTR_MARK_MASK         (0xFFU)                                             /*!< ZLL_RX_WTR_MARK.RX_WTR_MARK Mask        */
#define ZLL_RX_WTR_MARK_RX_WTR_MARK_SHIFT        (0U)                                                /*!< ZLL_RX_WTR_MARK.RX_WTR_MARK Position    */
#define ZLL_RX_WTR_MARK_RX_WTR_MARK(x)           (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< ZLL_RX_WTR_MARK.RX_WTR_MARK Field       */
/* ------- SLOT_PRELOAD Bit Fields                  ------ */
#define ZLL_SLOT_PRELOAD_SLOT_PRELOAD_MASK       (0xFFU)                                             /*!< ZLL_SLOT_PRELOAD.SLOT_PRELOAD Mask      */
#define ZLL_SLOT_PRELOAD_SLOT_PRELOAD_SHIFT      (0U)                                                /*!< ZLL_SLOT_PRELOAD.SLOT_PRELOAD Position  */
#define ZLL_SLOT_PRELOAD_SLOT_PRELOAD(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< ZLL_SLOT_PRELOAD.SLOT_PRELOAD Field     */
/* ------- SEQ_STATE Bit Fields                     ------ */
#define ZLL_SEQ_STATE_SEQ_STATE_MASK             (0x1FU)                                             /*!< ZLL_SEQ_STATE.SEQ_STATE Mask            */
#define ZLL_SEQ_STATE_SEQ_STATE_SHIFT            (0U)                                                /*!< ZLL_SEQ_STATE.SEQ_STATE Position        */
#define ZLL_SEQ_STATE_SEQ_STATE(x)               (((uint32_t)(((uint32_t)(x))<<0U))&0x1FUL)          /*!< ZLL_SEQ_STATE.SEQ_STATE Field           */
#define ZLL_SEQ_STATE_PREAMBLE_DET_MASK          (0x100U)                                            /*!< ZLL_SEQ_STATE.PREAMBLE_DET Mask         */
#define ZLL_SEQ_STATE_PREAMBLE_DET_SHIFT         (8U)                                                /*!< ZLL_SEQ_STATE.PREAMBLE_DET Position     */
#define ZLL_SEQ_STATE_PREAMBLE_DET(x)            (((uint32_t)(((uint32_t)(x))<<8U))&0x100UL)         /*!< ZLL_SEQ_STATE.PREAMBLE_DET Field        */
#define ZLL_SEQ_STATE_SFD_DET_MASK               (0x200U)                                            /*!< ZLL_SEQ_STATE.SFD_DET Mask              */
#define ZLL_SEQ_STATE_SFD_DET_SHIFT              (9U)                                                /*!< ZLL_SEQ_STATE.SFD_DET Position          */
#define ZLL_SEQ_STATE_SFD_DET(x)                 (((uint32_t)(((uint32_t)(x))<<9U))&0x200UL)         /*!< ZLL_SEQ_STATE.SFD_DET Field             */
#define ZLL_SEQ_STATE_FILTERFAIL_FLAG_SEL_MASK   (0x400U)                                            /*!< ZLL_SEQ_STATE.FILTERFAIL_FLAG_SEL Mask  */
#define ZLL_SEQ_STATE_FILTERFAIL_FLAG_SEL_SHIFT  (10U)                                               /*!< ZLL_SEQ_STATE.FILTERFAIL_FLAG_SEL Position*/
#define ZLL_SEQ_STATE_FILTERFAIL_FLAG_SEL(x)     (((uint32_t)(((uint32_t)(x))<<10U))&0x400UL)        /*!< ZLL_SEQ_STATE.FILTERFAIL_FLAG_SEL Field */
#define ZLL_SEQ_STATE_CRCVALID_MASK              (0x800U)                                            /*!< ZLL_SEQ_STATE.CRCVALID Mask             */
#define ZLL_SEQ_STATE_CRCVALID_SHIFT             (11U)                                               /*!< ZLL_SEQ_STATE.CRCVALID Position         */
#define ZLL_SEQ_STATE_CRCVALID(x)                (((uint32_t)(((uint32_t)(x))<<11U))&0x800UL)        /*!< ZLL_SEQ_STATE.CRCVALID Field            */
#define ZLL_SEQ_STATE_PLL_ABORT_MASK             (0x1000U)                                           /*!< ZLL_SEQ_STATE.PLL_ABORT Mask            */
#define ZLL_SEQ_STATE_PLL_ABORT_SHIFT            (12U)                                               /*!< ZLL_SEQ_STATE.PLL_ABORT Position        */
#define ZLL_SEQ_STATE_PLL_ABORT(x)               (((uint32_t)(((uint32_t)(x))<<12U))&0x1000UL)       /*!< ZLL_SEQ_STATE.PLL_ABORT Field           */
#define ZLL_SEQ_STATE_PLL_ABORTED_MASK           (0x2000U)                                           /*!< ZLL_SEQ_STATE.PLL_ABORTED Mask          */
#define ZLL_SEQ_STATE_PLL_ABORTED_SHIFT          (13U)                                               /*!< ZLL_SEQ_STATE.PLL_ABORTED Position      */
#define ZLL_SEQ_STATE_PLL_ABORTED(x)             (((uint32_t)(((uint32_t)(x))<<13U))&0x2000UL)       /*!< ZLL_SEQ_STATE.PLL_ABORTED Field         */
#define ZLL_SEQ_STATE_RX_BYTE_COUNT_MASK         (0xFF0000U)                                         /*!< ZLL_SEQ_STATE.RX_BYTE_COUNT Mask        */
#define ZLL_SEQ_STATE_RX_BYTE_COUNT_SHIFT        (16U)                                               /*!< ZLL_SEQ_STATE.RX_BYTE_COUNT Position    */
#define ZLL_SEQ_STATE_RX_BYTE_COUNT(x)           (((uint32_t)(((uint32_t)(x))<<16U))&0xFF0000UL)     /*!< ZLL_SEQ_STATE.RX_BYTE_COUNT Field       */
#define ZLL_SEQ_STATE_CCCA_BUSY_CNT_MASK         (0x3F000000U)                                       /*!< ZLL_SEQ_STATE.CCCA_BUSY_CNT Mask        */
#define ZLL_SEQ_STATE_CCCA_BUSY_CNT_SHIFT        (24U)                                               /*!< ZLL_SEQ_STATE.CCCA_BUSY_CNT Position    */
#define ZLL_SEQ_STATE_CCCA_BUSY_CNT(x)           (((uint32_t)(((uint32_t)(x))<<24U))&0x3F000000UL)   /*!< ZLL_SEQ_STATE.CCCA_BUSY_CNT Field       */
/* ------- TMR_PRESCALE Bit Fields                  ------ */
#define ZLL_TMR_PRESCALE_TMR_PRESCALE_MASK       (0x7U)                                              /*!< ZLL_TMR_PRESCALE.TMR_PRESCALE Mask      */
#define ZLL_TMR_PRESCALE_TMR_PRESCALE_SHIFT      (0U)                                                /*!< ZLL_TMR_PRESCALE.TMR_PRESCALE Position  */
#define ZLL_TMR_PRESCALE_TMR_PRESCALE(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0x7UL)           /*!< ZLL_TMR_PRESCALE.TMR_PRESCALE Field     */
/* ------- LENIENCY_LSB Bit Fields                  ------ */
#define ZLL_LENIENCY_LSB_LENIENCY_LSB_MASK       (0xFFFFFFFFU)                                       /*!< ZLL_LENIENCY_LSB.LENIENCY_LSB Mask      */
#define ZLL_LENIENCY_LSB_LENIENCY_LSB_SHIFT      (0U)                                                /*!< ZLL_LENIENCY_LSB.LENIENCY_LSB Position  */
#define ZLL_LENIENCY_LSB_LENIENCY_LSB(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFFFFFFFUL)    /*!< ZLL_LENIENCY_LSB.LENIENCY_LSB Field     */
/* ------- LENIENCY_MSB Bit Fields                  ------ */
#define ZLL_LENIENCY_MSB_LENIENCY_MSB_MASK       (0xFFU)                                             /*!< ZLL_LENIENCY_MSB.LENIENCY_MSB Mask      */
#define ZLL_LENIENCY_MSB_LENIENCY_MSB_SHIFT      (0U)                                                /*!< ZLL_LENIENCY_MSB.LENIENCY_MSB Position  */
#define ZLL_LENIENCY_MSB_LENIENCY_MSB(x)         (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< ZLL_LENIENCY_MSB.LENIENCY_MSB Field     */
/* ------- PART_ID Bit Fields                       ------ */
#define ZLL_PART_ID_PART_ID_MASK                 (0xFFU)                                             /*!< ZLL_PART_ID.PART_ID Mask                */
#define ZLL_PART_ID_PART_ID_SHIFT                (0U)                                                /*!< ZLL_PART_ID.PART_ID Position            */
#define ZLL_PART_ID_PART_ID(x)                   (((uint32_t)(((uint32_t)(x))<<0U))&0xFFUL)          /*!< ZLL_PART_ID.PART_ID Field               */
/* ------- PKT_BUFFER_TX Bit Fields                 ------ */
#define ZLL_PKT_BUFFER_TX_PKT_BUFFER_TX_MASK     (0xFFFFU)                                           /*!< ZLL_PKT_BUFFER_TX.PKT_BUFFER_TX Mask    */
#define ZLL_PKT_BUFFER_TX_PKT_BUFFER_TX_SHIFT    (0U)                                                /*!< ZLL_PKT_BUFFER_TX.PKT_BUFFER_TX Position*/
#define ZLL_PKT_BUFFER_TX_PKT_BUFFER_TX(x)       (((uint16_t)(((uint16_t)(x))<<0U))&0xFFFFUL)        /*!< ZLL_PKT_BUFFER_TX.PKT_BUFFER_TX Field   */
/* ------- PKT_BUFFER_RX Bit Fields                 ------ */
#define ZLL_PKT_BUFFER_RX_PKT_BUFFER_RX_MASK     (0xFFFFU)                                           /*!< ZLL_PKT_BUFFER_RX.PKT_BUFFER_RX Mask    */
#define ZLL_PKT_BUFFER_RX_PKT_BUFFER_RX_SHIFT    (0U)                                                /*!< ZLL_PKT_BUFFER_RX.PKT_BUFFER_RX Position*/
#define ZLL_PKT_BUFFER_RX_PKT_BUFFER_RX(x)       (((uint16_t)(((uint16_t)(x))<<0U))&0xFFFFUL)        /*!< ZLL_PKT_BUFFER_RX.PKT_BUFFER_RX Field   */
/**
 * @} */ /* End group ZLL_Register_Masks_GROUP 
 */

/* ZLL - Peripheral instance base addresses */
#define ZLL_BasePtr                    0x4005D000UL //!< Peripheral base address
#define ZLL                            ((ZLL_Type *) ZLL_BasePtr) //!< Freescale base pointer
#define ZLL_BASE_PTR                   (ZLL) //!< Freescale style base pointer
/**
 * @} */ /* End group ZLL_Peripheral_access_layer_GROUP 
 */
/* --------------------  End of section using anonymous unions  ------------------- */
#if defined(__CC_ARM)
  #pragma pop
#elif defined(__ICCARM__)
  /* leave anonymous unions enabled */
#elif defined(__GNUC__)
  /* anonymous unions are enabled by default */
#elif defined(__TMS470__)
  /* anonymous unions are enabled by default */
#elif defined(__TASKING__)
  #pragma warning restore
#else
  #warning Not supported compiler type
#endif
/**
 * @} */ /* End group Peripheral_access_layer_GROUP 
 */

#ifdef __cplusplus
}
#endif


#endif  /* MCU_MKW41Z4 */

