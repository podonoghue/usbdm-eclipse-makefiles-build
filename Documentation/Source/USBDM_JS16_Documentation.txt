/*!
  \mainpage USBDM RS08/HCS08/HCS12/Coldfire V1,2,3,4/DSC/Kinetis Debugger and Programmer

 \section introSection Introduction
   The attached files provide a port of a combined TBDML/OSBDM code to a MC9S08JS16 processor. \n 
   The primary motivation for this was to produce a single BDM that could be used with a range of Freescale microcontrollers.
   Additional software features have also been added.\n
   This implementation has minimal features to simplify construction and does not require a BDM
   for initial programming.\n
   An alternative version is provided that adds an ARM SWD interface that supports Freescale Kinetis devices.

   <hr>
 \subsection QuickLinks Quick Links
   - @htmlonly <a href="http://sourceforge.net/projects/usbdm/"><b>Release versions of the software for the various BDMs are available on Sourceforge.</b></a> @endhtmlonly
   - @htmlonly <a href="/../../../programmer.html"><b>Various stand-alone programmers are provided to support the USBDM hardware.</b></a> @endhtmlonly 
   - @htmlonly <a href="https://github.com/podonoghue"><b>Source code available on GitHub</b></a>@endhtmlonly 
   - @htmlonly <a href="https://github.com/podonoghue/usbdm-hcs08"><b>Hardware descriptions available on GitHub</b></a>@endhtmlonly 
   - @htmlonly <a href="https://community.nxp.com/t5/OSBDM-and-TBDML/bd-p/bdm"><b>Post queries on OSBDM and TBDML Discussion Board</b></a>@endhtmlonly 
     
   <hr>
 \subsection featureSection Features
   This version of the code & extended hardware provides the following features:
   -	A single BDM interface for programming and debugging of the following targets:
      -  <b>HCS12</b> (including those without SYNC feature (e.g. 9S12DP256B)
      -  <b>HCS08</b>
      -  <b>Coldfire V1</b>
      -  <b>Kinetis</b> (via SWD interface on selected versions)

   -  No re-flashing of the BDM is required when changing between targets
   -  Compatible IDEs
      - Codewarrior V10.x (Eclipse version)
        - Tested on Windows-XP-32bit, Windows-7-32bit, Windows-7-64bit, Windows 8, Windows 10
        - Tested on Ubuntu-32-bit, 64-bit
      - Codewarrior Legacy versions
      - Codewarrior Development Studio for HCS12(X) V5.1 & \n
        CW for Microcontrollers V6.3 (RS08 is not supported)\n
        - Tested on Windows-XP-32bit, Windows-Vista-32bit
      - Initial support for CodeSourcery Lite for Coldfire
         - Tested on Windows-XP-32bit
   -  Trimming of target internal clock (Eclipse version or standalone programming tools only).
   -  Higher USB communication speed cf. JB16 version BDMs (USB full speed cf. USB low speed)
   -  Vista compatible
   -  Linux compatible
   -  Initial Firmware programming may be done without a BDM using the JS16 USB bootloader ROM.
   -  The Firmware in the BDM may be automatically updated using an in-circuit-programming (ICP) feature.
   -	Hardware is physically small
\if Power
   -  Target Vdd supply & control.  This allows the target power to be cycled when required for a reliable reset into BDM mode.
      It is also (obviously) convenient since it allows debugging small target boards without a separate target power supply.  
      An external target supply may also be used instead.  The Target supply is protected by a polyfuse and software detection
      of overload.
\endif
   -  HCS12, HCS08, Coldfire V1 specific features:
   -  Target reset detection & control (required for HC12 processors).  This allows HC12 processors to be reset into BDM mode
      as required for debugging.
\if Power
   -  Target Vdd monitoring. This allows the hardware to detect changes in the Target supply to provide reliable resetting into
      BDM modes on HCS08 and RS08 microcontrollers.  It also is used to implement the target power supply protection.
\endif
      -	A higher BDM interface speed than the existing JB16 OSBDMs. Up to 56MHz. (BDM clock 28MHz).
      -  Automatic re-connection.  The software has an option to continuously update the interface speed to prevent loss
         of communication if the target BDM interface speed changes (as may occur with clock changes on some targets).
      -  Control of BDM clock selection in HC12/HCS08/Coldfire microcontrollers.  Most of these targets provide an alternative
         BDM clock selection.  This can have advantages when connecting to high speed targets as the alternative clock may 
         operate at a lower speed.
\if Power
      -  Selection of 3.3V and 5V target supply (if hardware supports this).
\endif
      -  Trial-and-error determination of communication speed for earlier HC12 targets.
      -  User prompting for target supply cycling with BKGD low as may be needed for HCS08 targets
\if Coldfire
   -  Coldfire V2,3,4 specific features and limitations:
   -  Higher communication speed with target - The target communication speed may be selected.
   -  The BDM uses asychronous communication with the target i.e. the BDM signals are not synchronized with the target clock.  
      This means that the BDM should not be used with early Coldfire targets.  Check the description of the BDM interface
      timing in the appropriate Coldfire Processor manual to determine if this limitation applies.          
\endif

 \subsection pictureSection Pictures (USBDM_JS16_SWD - HCS08/HCS12/CFV1/ARM-SWD)
   - <b>USBDM Minimal HCS08/HCS12/CFV1 & SWD interfaces with manual target power.</b>
   \image html "https://raw.githubusercontent.com/podonoghue/usbdm-hcs08/master/Hardware/USBDM_SWD_JS16CWJ/Top.png"
         
   - <b>USBDM HCS08/HCS12/CFV1, SWD & Serial interfaces with manual target power.</b>
   \image html "https://raw.githubusercontent.com/podonoghue/usbdm-hcs08/master/Hardware/USBDM_SWD_SER_JS16CWJ/Top.png"
         
 \section sectionHardwareDesign Hardware Design
   Please refer to the following Hardware Page for Schematics, Assembly Overlays & Bill of Materials:
   - @htmlonly <a href="https://github.com/podonoghue/usbdm-hcs08/tree/master/Hardware">Minimal HCS08/HCS12/CFV1 & SWD interfaces</a> @endhtmlonly 

 \section differenceSection Differences to JB16 TBDML/OSBDM
   -  The PCB artwork provided is for a double-sided plated-through-hole board using surface mount components.
      This seems a reasonable decision since the processor is only available in a SMT package in any case.  It
      is quite possible to prototype the the first and third designs using a non-PTH board as the required vias
      have not been located beneath components and may be replaced with feed through wires. \n
      The above images are for a milled board that was hand assembled.      

 \section sectionCredits Credits
   -  The original base code is taken from the TBDML, OSBDM and TBLCF projects and I very much appreciate
      the effort involved in producing the original code.  I hope this extension will be useful.

   -  The hardware interface is based on TBDML, Freescale USBSPYDER08 and my own invention.
 \section sectionReferences References
   -  Altium Designer (PCB Design) - http://www.altium.com/products/altium-designer/
   -  Axiom MC56F8006 Demo board - http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=MC56F8006DEMO
   -  Codesourcery - http://www.codesourcery.com/
   -  Coldfire Flasher - http://www.freescale.com/files/soft_dev_tools/software/programmers/CFFLASHER.zip
   -  Doxygen Documentation tool - http://www.stack.nl/~dimitri/doxygen/index.html
   -  I2C voltage level conversion  - Phillips application note http://www.standardics.nxp.com/support/documents/i2c/pdf/an97055.pdf
   -  LIBUSB-WIN32 - http://libusb-win32.sourceforge.net/
   -  MAX662 Data sheet - http://www.maxim-ic.com
   -  OSBDM - http://forums.freescale.com/freescale/board?board.id=OSBDM08
   -  OSBDM hardware - http://forums.freescale.com/freescale/board/message?board.id=OSBDM08&thread.id=212
   -  Tasking GDI Spec - http://www.tasking.com/resources/technologies/debuggers/gdikdi.shtml
   -  Tcl/Tk - http://www.tcl.tk/software/tcltk/8.5.html 
   -  TBDML - http://forums.freescale.com/freescale/board?board.id=TBDML
   -  TBDML hardware - http://forums.freescale.com/freescale/board/message?board.id=TBDML&thread.id=2
   -  USBSPYDER08 - USB mini board for Freescale's Low-End 8-bit Microcontrollers - http://www.freescale.com/
   -  Ultimate Packer for eXecutables (UPX) has been used to pack DLLs and EXEs - http://upx.sourceforge.net/ 
   -  WTBDMS08/12 (Witztronics) Hardware - http://www.witztronics.com/
   -  WxWidgets Cross Platform Library has been used for the GUI - http://www.wxwidgets.org/
   -  Xerces XML parser - http://xerces.apache.org/xerces-c
   
 \section sectionQueries Queries
   Any queries please post on the Freescale @htmlonly <a href="https://community.freescale.com/community/bdm">OSBDM and TBDML Discussion Board</a>. @endhtmlonly \n
   
 \section licenseSection License
   \verbatim
   Portions of this software is based on TBLCF software
   Portions of this software is based on OSBDM software
   Portions of this software is based on TBDML software

   USBDM
   Copyright (C) 2007-13  Peter O'Donoghue

   Opensource BDM (OSBDM)
   Copyright (C) ?

   Turbo BDM Light (TBDML)
   Copyright (C) 2005  Daniel Malik

   Turbo BDM Light ColdFire (TBLCF)
   Copyright (C) 2005  Daniel Malik

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
   \endverbatim

*/
